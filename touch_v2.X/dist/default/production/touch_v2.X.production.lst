

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 01:48:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=4,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=4,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=4,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   228                           	psect	text204,global,reloc=4,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=4,class=CODE,delta=1
   232                           	psect	text208,global,reloc=4,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=4,class=CODE,delta=1
   237                           	psect	text213,global,reloc=4,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	text223,global,reloc=4,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   251                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   252                           	psect	text226,global,reloc=4,class=CODE,delta=1
   253                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   254                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   255  0000                     
   256                           ; Version 2.10
   257                           ; Generated 31/07/2019 GMT
   258                           ; 
   259                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   260                           ; All rights reserved.
   261                           ; 
   262                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   263                           ; 
   264                           ; Redistribution and use in source and binary forms, with or without modification, are
   265                           ; permitted provided that the following conditions are met:
   266                           ; 
   267                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   268                           ;        conditions and the following disclaimer.
   269                           ; 
   270                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   271                           ;        of conditions and the following disclaimer in the documentation and/or other
   272                           ;        materials provided with the distribution.
   273                           ; 
   274                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   275                           ;        software without specific prior written permission.
   276                           ; 
   277                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   278                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   279                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   280                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   281                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   282                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   283                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   284                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   285                           ; 
   286                           ; 
   287                           ; Code-generator required, PIC18F57K42 Definitions
   288                           ; 
   289                           ; SFR Addresses
   290  0000                     
   291 ;;_main$4051	offset	0
   292 ;;_main$4047	offset	2
   293 ;;_esr_temp	offset	4
   294 ;;_i_esr	offset	8
   295 ;;_shape	offset	10
   296 ;;_inp_index	offset	11
   297 ;;_k	offset	12
   298 ;;_j	offset	13
   299 ;;_i	offset	14
   300 ;;_mode	offset	15
   301 ;;_i_ror	offset	16
   302 ;;_mode	offset=-1 (param)
   303 ;;_hist	offset=-3 (param)
   304 ;;_s	offset=-2 (param)
   305 ;;_voltage	offset=-4 (param)
   306 ;;_voltage	offset=-4 (param)
   307 ;;_voltage	offset=-4 (param)
   308 ;;_set	offset=-1 (param)
   309 ;;_x	offset	0
   310 ;;_r_cal_ptr	offset	2
   311 ;;_y	offset	4
   312 ;;_crcVal_save	offset	6
   313 ;;_bAdd	offset=-2 (param)
   314 ;;_esr_rescale	offset	0
   315 ;;_data	offset=-1 (param)
   316 ;;_cmd	offset=-1 (param)
   317 ;;_cmd	offset=-1 (param)
   318 ;;_data	offset=-1 (param)
   319 ;;__this	offset=-2 (param)
   320 ;;_soc	offset	0
   321 ;;_slot	offset	2
   322 ;;_cvoltage	offset=-4 (param)
   323 ;;_h	offset=-2 (param)
   324 ;;_h	offset=-2 (param)
   325 ;;_fsm	offset=-1 (param)
   326 ;;_mode	offset=-1 (param)
   327 ;;_mode	offset=-1 (param)
   328 ;;_cmd	offset=-1 (param)
   329 ;;_t	offset=-8 (param)
   330 ;;_t	offset=-1 (param)
   331 ;;_t	offset=-1 (param)
   332 ;;_tm	offset=-3 (param)
   333 ;;_y	offset	0
   334 ;;_t1	offset	8
   335 ;;_t0	offset	16
   336 ;;_t	offset=-8 (param)
   337 ;;_local	offset=-10 (param)
   338 ;;_isdst	offset=-12 (param)
   339 ;;_offset	offset=-14 (param)
   340 ;;_oppoff	offset=-16 (param)
   341 ;;_zonename	offset=-18 (param)
   342 ;;_t	offset=-8 (param)
   343 ;;_local	offset=-10 (param)
   344 ;;_alt	offset=-12 (param)
   345 ;;_z	offset=-2 (param)
   346 ;;_days	offset	0
   347 ;;_wday	offset	2
   348 ;;_t	offset	4
   349 ;;_is_leap	offset	12
   350 ;;_n	offset	14
   351 ;;_x	offset	16
   352 ;;_m	offset	18
   353 ;;_d	offset	20
   354 ;;_rule	offset=-6 (param)
   355 ;;_year	offset=-8 (param)
   356 ;;_m	offset=-2 (param)
   357 ;;_is_leap	offset=-4 (param)
   358 ;;_y	offset	0
   359 ;;_leaps	offset	2
   360 ;;_rem	offset	4
   361 ;;F5	offset	6
   362 ;;_centuries	offset	8
   363 ;;_leaps	offset	10
   364 ;;_cycles	offset	12
   365 ;;_year	offset=-8 (param)
   366 ;;_is_leap	offset=-10 (param)
   367 ;;_t	offset	0
   368 ;;_month	offset=-2 (param)
   369 ;;_is_leap	offset=-4 (param)
   370 ;;_s	offset	0
   371 ;;_r	offset	0
   372 ;;_p	offset=-2 (param)
   373 ;;_rule	offset=-4 (param)
   374 ;;_off	offset	0
   375 ;;_neg	offset	2
   376 ;;_p	offset=-2 (param)
   377 ;;_x	offset	0
   378 ;;_p	offset=-2 (param)
   379 ;;_i	offset	0
   380 ;;_d	offset=-2 (param)
   381 ;;_p	offset=-4 (param)
   382 ;;___secs_to_tm$7875	offset	0
   383 ;;_years	offset	1
   384 ;;_days	offset	9
   385 ;;_secs	offset	17
   386 ;;_remdays	offset	25
   387 ;;_q_cycles	offset	29
   388 ;;_c_cycles	offset	33
   389 ;;_remyears	offset	37
   390 ;;_remsecs	offset	41
   391 ;;_qc_cycles	offset	45
   392 ;;_months	offset	49
   393 ;;_leap	offset	51
   394 ;;_yday	offset	53
   395 ;;_wday	offset	55
   396 ;;_t	offset=-8 (param)
   397 ;;_tm	offset=-10 (param)
   398 ;;_product	offset	0
   399 ;;_multiplier	offset=-8 (param)
   400 ;;_multiplicand	offset=-16 (param)
   401 ;;_product	offset	0
   402 ;;_multiplier	offset=-4 (param)
   403 ;;_multiplicand	offset=-8 (param)
   404 ;;_sign	offset	0
   405 ;;_counter	offset	1
   406 ;;_dividend	offset=-4 (param)
   407 ;;_divisor	offset=-8 (param)
   408 ;;_quotient	offset	0
   409 ;;_sign	offset	4
   410 ;;_counter	offset	5
   411 ;;_dividend	offset=-4 (param)
   412 ;;_divisor	offset=-8 (param)
   413 ;;_cp	offset	0
   414 ;;_s	offset	2
   415 ;;_tim	offset=-2 (param)
   416 ;;_cp	offset=-2 (param)
   417 ;;_i	offset=-3 (param)
   418 ;;_cl	offset=-4 (param)
   419 ;;_ct	offset=-5 (param)
   420 ;;_rem	offset	0
   421 ;;_counter	offset	1
   422 ;;_dividend	offset=-1 (param)
   423 ;;_divisor	offset=-2 (param)
   424 ;;_cp	offset	0
   425 ;;_cb	offset	4
   426 ;;_cpz	offset	8
   427 ;;_cbz	offset	12
   428 ;;_x	offset	16
   429 ;;_x	offset	0
   430 ;;_r_cal_ptr	offset	2
   431 ;;_y	offset	4
   432 ;;_crcVal	offset	6
   433 ;;_GIEBitValue	offset	0
   434 ;;_bAdd	offset=-2 (param)
   435 ;;_bData	offset=-3 (param)
   436 ;;_result	offset	0
   437 ;;_mask	offset	2
   438 ;;_reverse	offset=-1 (param)
   439 ;;_xorValue	offset=-3 (param)
   440 ;;_mask	offset	0
   441 ;;_reverse	offset	2
   442 ;;_crc	offset=-2 (param)
   443 ;;_data	offset=-1 (param)
   444 ;;_channel	offset=-1 (param)
   445 ;;_c	offset	0
   446 ;;_shape	offset=-1 (param)
   447 ;;_reset	offset=-2 (param)
   448 ;;_i	offset=-1 (param)
   449 ;;_i	offset=-1 (param)
   450 ;;_mode	offset=-1 (param)
   451 ;;_cb	offset=-3 (param)
   452 ;;_cp	offset=-5 (param)
   453 ;;_mode	offset=-1 (param)
   454 ;;_cb	offset=-3 (param)
   455 ;;_cp	offset=-5 (param)
   456 ;;_scaleb	offset=-9 (param)
   457 ;;_scalep	offset=-13 (param)
   458 ;;_value	offset=-2 (param)
   459 ;;_window	offset=-4 (param)
   460 ;;_standard	offset=-6 (param)
   461 ;;_i	offset	0
   462 ;;_h	offset=-2 (param)
   463 ;;_flipper	offset=-1 (param)
   464 ;;_f	offset	0
   465 ;;_ap	offset	6
   466 ;;_s	offset=-3 (param)
   467 ;;_fmt	offset=-5 (param)
   468 ;;_line	offset=-1 (param)
   469 ;;_vterm	offset=-2 (param)
   470 ;;_numMilliseconds	offset=-2 (param)
   471 ;;_vterm	offset=-1 (param)
   472 ;;_row	offset	0
   473 ;;_r	offset=-1 (param)
   474 ;;_c	offset=-2 (param)
   475 ;;_strPtr	offset=-4 (param)
   476 ;;_strPtr	offset=-1 (param)
   477 ;;_delay	offset=-4 (param)
   478 ;;_strPtr	offset=-1 (param)
   479 ;;_strPtr	offset=-2 (param)
   480 ;;__this	offset=-2 (param)
   481 ;;_clearBuffer	offset=-3 (param)
   482 ;;_s	offset	0
   483 ;;_k	offset	2
   484 ;;_dest	offset=-2 (param)
   485 ;;_c	offset=-4 (param)
   486 ;;_n	offset=-6 (param)
   487 ;;_ap	offset	0
   488 ;;_fmt	offset=-3 (param)
   489 ;;_cfmt	offset	0
   490 ;;_fp	offset=-2 (param)
   491 ;;_fmt	offset=-4 (param)
   492 ;;_ap	offset=-6 (param)
   493 ;;_vfpfcnvrt$6916	offset	0
   494 ;;_vfpfcnvrt$6927	offset	2
   495 ;;_vfpfcnvrt$6915	offset	4
   496 ;;_llu	offset	6
   497 ;;_ll	offset	14
   498 ;;_f	offset	22
   499 ;;_ct	offset	26
   500 ;;_cp	offset	29
   501 ;;_c	offset	31
   502 ;;_fp	offset=-2 (param)
   503 ;;_fmt	offset=-4 (param)
   504 ;;_ap	offset=-6 (param)
   505 ;;_xtoa$6901	offset	0
   506 ;;_xtoa$6900	offset	2
   507 ;;_n	offset	4
   508 ;;_c	offset	12
   509 ;;_i	offset	14
   510 ;;_w	offset	16
   511 ;;_p	offset	18
   512 ;;_fp	offset=-2 (param)
   513 ;;_d	offset=-10 (param)
   514 ;;_x	offset=-11 (param)
   515 ;;_toupper$7842	offset	0
   516 ;;_c	offset=-2 (param)
   517 ;;_c	offset=-2 (param)
   518 ;;_c	offset=-2 (param)
   519 ;;_n	offset	0
   520 ;;_i	offset	8
   521 ;;_w	offset	10
   522 ;;_p	offset	12
   523 ;;_fp	offset=-2 (param)
   524 ;;_d	offset=-10 (param)
   525 ;;_counter	offset	0
   526 ;;_dividend	offset=-8 (param)
   527 ;;_divisor	offset=-16 (param)
   528 ;;_quotient	offset	0
   529 ;;_counter	offset	8
   530 ;;_dividend	offset=-8 (param)
   531 ;;_divisor	offset=-16 (param)
   532 ;;_r	offset	0
   533 ;;_l	offset	2
   534 ;;__l	offset=-2 (param)
   535 ;;__r	offset=-4 (param)
   536 ;;_n	offset=-6 (param)
   537 ;;_nuls	offset	0
   538 ;;_l	offset	7
   539 ;;_p	offset	9
   540 ;;_cp	offset	11
   541 ;;_w	offset	13
   542 ;;_i	offset	15
   543 ;;_fp	offset=-2 (param)
   544 ;;_s	offset=-4 (param)
   545 ;;_efgtoa$6873	offset	0
   546 ;;_efgtoa$6872	offset	2
   547 ;;_efgtoa$6871	offset	4
   548 ;;_efgtoa$6867	offset	6
   549 ;;_efgtoa$6863	offset	8
   550 ;;_efgtoa$6862	offset	10
   551 ;;_u	offset	12
   552 ;;_g	offset	16
   553 ;;_l	offset	20
   554 ;;_h	offset	24
   555 ;;_ou	offset	28
   556 ;;_n	offset	32
   557 ;;_e	offset	34
   558 ;;_i	offset	36
   559 ;;_w	offset	38
   560 ;;_p	offset	40
   561 ;;_sign	offset	42
   562 ;;_d	offset	44
   563 ;;_ne	offset	46
   564 ;;_m	offset	48
   565 ;;_pp	offset	50
   566 ;;_t	offset	52
   567 ;;_mode	offset	54
   568 ;;_nmode	offset	55
   569 ;;_fp	offset=-2 (param)
   570 ;;_f	offset=-6 (param)
   571 ;;_c	offset=-7 (param)
   572 ;;_tolower$7827	offset	0
   573 ;;_c	offset=-2 (param)
   574 ;;_c	offset=-2 (param)
   575 ;;_d	offset	0
   576 ;;_s	offset	2
   577 ;;_dest	offset=-2 (param)
   578 ;;_src	offset=-4 (param)
   579 ;;_u	offset	0
   580 ;;_m	offset	4
   581 ;;_e	offset	8
   582 ;;_x	offset=-4 (param)
   583 ;;_u	offset	0
   584 ;;_e	offset	4
   585 ;;_x	offset=-4 (param)
   586 ;;_exp1	offset	0
   587 ;;_sign1	offset	1
   588 ;;_f1	offset=-4 (param)
   589 ;;_f1	offset=-4 (param)
   590 ;;_ff1	offset=-4 (param)
   591 ;;_ff2	offset=-8 (param)
   592 ;;_sign	offset	0
   593 ;;_counter	offset	1
   594 ;;_dividend	offset=-2 (param)
   595 ;;_divisor	offset=-4 (param)
   596 ;;_quotient	offset	0
   597 ;;_sign	offset	2
   598 ;;_counter	offset	3
   599 ;;_dividend	offset=-2 (param)
   600 ;;_divisor	offset=-4 (param)
   601 ;;_dtoa$6839	offset	0
   602 ;;_n	offset	2
   603 ;;_i	offset	10
   604 ;;_s	offset	12
   605 ;;_w	offset	14
   606 ;;_p	offset	16
   607 ;;_fp	offset=-2 (param)
   608 ;;_d	offset=-10 (param)
   609 ;;_a	offset=-2 (param)
   610 ;;_sign	offset	0
   611 ;;_counter	offset	1
   612 ;;_dividend	offset=-8 (param)
   613 ;;_divisor	offset=-16 (param)
   614 ;;_quotient	offset	0
   615 ;;_sign	offset	8
   616 ;;_counter	offset	9
   617 ;;_dividend	offset=-8 (param)
   618 ;;_divisor	offset=-16 (param)
   619 ;;_w	offset	0
   620 ;;_fp	offset=-2 (param)
   621 ;;_c	offset=-3 (param)
   622 ;;_w	offset	0
   623 ;;_i	offset	2
   624 ;;_fp	offset=-2 (param)
   625 ;;_buf	offset=-4 (param)
   626 ;;_p	offset=-6 (param)
   627 ;;_a	offset	0
   628 ;;_s	offset=-2 (param)
   629 ;;_i	offset	0
   630 ;;_c	offset	2
   631 ;;_s	offset=-2 (param)
   632 ;;_fp	offset=-4 (param)
   633 ;;_c	offset=-2 (param)
   634 ;;_fp	offset=-4 (param)
   635 ;;_c	offset=-1 (param)
   636 ;;__this	offset=-2 (param)
   637 ;;_c	offset=-3 (param)
   638 ;;_atoi$7459	offset	0
   639 ;;_atoi$7457	offset	2
   640 ;;_atoi$7458	offset	4
   641 ;;_n	offset	5
   642 ;;_neg	offset	7
   643 ;;_s	offset=-2 (param)
   644 ;;_isspace$7508	offset	0
   645 ;;_c	offset=-2 (param)
   646 ;;_c	offset=-2 (param)
   647 ;;_vterm	offset=-1 (param)
   648 ;;_new_response_info	offset=-1 (param)
   649 ;;_new_response_info	offset=-1 (param)
   650 ;;_level	offset=-2 (param)
   651 ;;_dutyValue	offset=-2 (param)
   652 ;;_timer	offset=-1 (param)
   653 ;;_timer	offset=-1 (param)
   654 ;;_count	offset=-3 (param)
   655 ;;_h	offset=-2 (param)
   656 ;;_u	offset	0
   657 ;;_x	offset=-4 (param)
   658 ;;_chan	offset=-1 (param)
   659 ;;_to_what	offset=-2 (param)
   660 ;;_u	offset	0
   661 ;;_s	offset=-2 (param)
   662 ;;_index	offset=-1 (param)
   663 ;;_arg	offset	0
   664 ;;_exp	offset	4
   665 ;;_sign	offset=-1 (param)
   666 ;;_val	offset=-5 (param)
   667 ;;_grs	offset	0
   668 ;;_rem	offset	4
   669 ;;_new_exp	offset	8
   670 ;;_aexp	offset	10
   671 ;;_bexp	offset	11
   672 ;;_sign	offset	12
   673 ;;_b	offset=-4 (param)
   674 ;;_a	offset=-8 (param)
   675 ;;_ff1	offset=-4 (param)
   676 ;;_ff2	offset=-8 (param)
   677 ;;_lp_speed	offset	0
   678 ;;_new	offset=-4 (param)
   679 ;;_bn	offset=-5 (param)
   680 ;;_slow	offset=-6 (param)
   681 ;;_b	offset=-4 (param)
   682 ;;_a	offset=-8 (param)
   683 ;;_grs	offset	0
   684 ;;_bexp	offset	1
   685 ;;_aexp	offset	2
   686 ;;_signs	offset	3
   687 ;;_b	offset=-4 (param)
   688 ;;_a	offset=-8 (param)
   689 ;;_prod	offset	0
   690 ;;_grs	offset	4
   691 ;;_temp	offset	8
   692 ;;_bexp	offset	10
   693 ;;_aexp	offset	11
   694 ;;_sign	offset	12
   695 ;;_b	offset=-4 (param)
   696 ;;_a	offset=-8 (param)
   697 ;;_InterruptHandler	offset=-3 (param)
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_InterruptHandler	offset=-3 (param)
   700 ;;_InterruptHandler	offset=-3 (param)
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_state	offset	0
   704 ;;_InterruptHandler	offset=-3 (param)
   705 ;;_InterruptHandler	offset=-3 (param)
   706 ;;_seed	offset	0
   707 ;;_poly	offset	2
   708 ;;_InterruptHandler	offset=-3 (param)
   709 ;;_InterruptHandler	offset=-3 (param)
   710 ;;_i	offset	0
   711 ;;_sw_value	offset	1
   712 ;;_timerVal	offset=-2 (param)
   713 ;;_light	offset	0
   714 ;;_t	offset=-8 (param)
   715 ;;_mode	offset=-1 (param)
   716 ;;_chan	offset=-1 (param)
   717 ;;_to_what	offset=-2 (param)
   718 ;;_u	offset	0
   719 ;;_s	offset=-2 (param)
   720 ;;_index	offset=-1 (param)
   721 ;;_arg	offset	0
   722 ;;_exp	offset	4
   723 ;;_sign	offset=-1 (param)
   724 ;;_val	offset=-5 (param)
   725 ;;_b	offset=-4 (param)
   726 ;;_a	offset=-8 (param)
   727 ;;_grs	offset	0
   728 ;;_bexp	offset	1
   729 ;;_aexp	offset	2
   730 ;;_signs	offset	3
   731 ;;_b	offset=-4 (param)
   732 ;;_a	offset=-8 (param)
   733 ;;_prod	offset	0
   734 ;;_grs	offset	4
   735 ;;_temp	offset	8
   736 ;;_bexp	offset	10
   737 ;;_aexp	offset	11
   738 ;;_sign	offset	12
   739 ;;_b	offset=-4 (param)
   740 ;;_a	offset=-8 (param)
   741 ;;_grs	offset	0
   742 ;;_rem	offset	4
   743 ;;_new_exp	offset	8
   744 ;;_aexp	offset	10
   745 ;;_bexp	offset	11
   746 ;;_sign	offset	12
   747 ;;_b	offset=-4 (param)
   748 ;;_a	offset=-8 (param)
   749 ;;_ff1	offset=-4 (param)
   750 ;;_ff2	offset=-8 (param)
   751 ;;_timerVal	offset=-2 (param)
   752 ;;_adj	offset	0
   753 ;;_log_ptr	offset	4
   754 ;;_f	offset	0
   755 ;;_ap	offset	6
   756 ;;_s	offset=-3 (param)
   757 ;;_fmt	offset=-5 (param)
   758 ;;_cfmt	offset	0
   759 ;;_fp	offset=-2 (param)
   760 ;;_fmt	offset=-4 (param)
   761 ;;_ap	offset=-6 (param)
   762 ;;_vfpfcnvrt$6916	offset	0
   763 ;;_vfpfcnvrt$6927	offset	2
   764 ;;_vfpfcnvrt$6915	offset	4
   765 ;;_llu	offset	6
   766 ;;_ll	offset	14
   767 ;;_f	offset	22
   768 ;;_ct	offset	26
   769 ;;_cp	offset	29
   770 ;;_c	offset	31
   771 ;;_fp	offset=-2 (param)
   772 ;;_fmt	offset=-4 (param)
   773 ;;_ap	offset=-6 (param)
   774 ;;_xtoa$6901	offset	0
   775 ;;_xtoa$6900	offset	2
   776 ;;_n	offset	4
   777 ;;_c	offset	12
   778 ;;_i	offset	14
   779 ;;_w	offset	16
   780 ;;_p	offset	18
   781 ;;_fp	offset=-2 (param)
   782 ;;_d	offset=-10 (param)
   783 ;;_x	offset=-11 (param)
   784 ;;_toupper$7842	offset	0
   785 ;;_c	offset=-2 (param)
   786 ;;_c	offset=-2 (param)
   787 ;;_c	offset=-2 (param)
   788 ;;_n	offset	0
   789 ;;_i	offset	8
   790 ;;_w	offset	10
   791 ;;_p	offset	12
   792 ;;_fp	offset=-2 (param)
   793 ;;_d	offset=-10 (param)
   794 ;;_counter	offset	0
   795 ;;_dividend	offset=-8 (param)
   796 ;;_divisor	offset=-16 (param)
   797 ;;_quotient	offset	0
   798 ;;_counter	offset	8
   799 ;;_dividend	offset=-8 (param)
   800 ;;_divisor	offset=-16 (param)
   801 ;;_r	offset	0
   802 ;;_l	offset	2
   803 ;;__l	offset=-2 (param)
   804 ;;__r	offset=-4 (param)
   805 ;;_n	offset=-6 (param)
   806 ;;_nuls	offset	0
   807 ;;_l	offset	7
   808 ;;_p	offset	9
   809 ;;_cp	offset	11
   810 ;;_w	offset	13
   811 ;;_i	offset	15
   812 ;;_fp	offset=-2 (param)
   813 ;;_s	offset=-4 (param)
   814 ;;_efgtoa$6873	offset	0
   815 ;;_efgtoa$6872	offset	2
   816 ;;_efgtoa$6871	offset	4
   817 ;;_efgtoa$6867	offset	6
   818 ;;_efgtoa$6863	offset	8
   819 ;;_efgtoa$6862	offset	10
   820 ;;_u	offset	12
   821 ;;_g	offset	16
   822 ;;_l	offset	20
   823 ;;_h	offset	24
   824 ;;_ou	offset	28
   825 ;;_n	offset	32
   826 ;;_e	offset	34
   827 ;;_i	offset	36
   828 ;;_w	offset	38
   829 ;;_p	offset	40
   830 ;;_sign	offset	42
   831 ;;_d	offset	44
   832 ;;_ne	offset	46
   833 ;;_m	offset	48
   834 ;;_pp	offset	50
   835 ;;_t	offset	52
   836 ;;_mode	offset	54
   837 ;;_nmode	offset	55
   838 ;;_fp	offset=-2 (param)
   839 ;;_f	offset=-6 (param)
   840 ;;_c	offset=-7 (param)
   841 ;;_tolower$7827	offset	0
   842 ;;_c	offset=-2 (param)
   843 ;;_c	offset=-2 (param)
   844 ;;_d	offset	0
   845 ;;_s	offset	2
   846 ;;_dest	offset=-2 (param)
   847 ;;_src	offset=-4 (param)
   848 ;;_u	offset	0
   849 ;;_m	offset	4
   850 ;;_e	offset	8
   851 ;;_x	offset=-4 (param)
   852 ;;_u	offset	0
   853 ;;_e	offset	4
   854 ;;_x	offset=-4 (param)
   855 ;;_exp1	offset	0
   856 ;;_sign1	offset	1
   857 ;;_f1	offset=-4 (param)
   858 ;;_f1	offset=-4 (param)
   859 ;;_ff1	offset=-4 (param)
   860 ;;_ff2	offset=-8 (param)
   861 ;;_sign	offset	0
   862 ;;_counter	offset	1
   863 ;;_dividend	offset=-2 (param)
   864 ;;_divisor	offset=-4 (param)
   865 ;;_quotient	offset	0
   866 ;;_sign	offset	2
   867 ;;_counter	offset	3
   868 ;;_dividend	offset=-2 (param)
   869 ;;_divisor	offset=-4 (param)
   870 ;;_dtoa$6839	offset	0
   871 ;;_n	offset	2
   872 ;;_i	offset	10
   873 ;;_s	offset	12
   874 ;;_w	offset	14
   875 ;;_p	offset	16
   876 ;;_fp	offset=-2 (param)
   877 ;;_d	offset=-10 (param)
   878 ;;_a	offset=-2 (param)
   879 ;;_sign	offset	0
   880 ;;_counter	offset	1
   881 ;;_dividend	offset=-8 (param)
   882 ;;_divisor	offset=-16 (param)
   883 ;;_quotient	offset	0
   884 ;;_sign	offset	8
   885 ;;_counter	offset	9
   886 ;;_dividend	offset=-8 (param)
   887 ;;_divisor	offset=-16 (param)
   888 ;;_w	offset	0
   889 ;;_fp	offset=-2 (param)
   890 ;;_c	offset=-3 (param)
   891 ;;_w	offset	0
   892 ;;_i	offset	2
   893 ;;_fp	offset=-2 (param)
   894 ;;_buf	offset=-4 (param)
   895 ;;_p	offset=-6 (param)
   896 ;;_a	offset	0
   897 ;;_s	offset=-2 (param)
   898 ;;_i	offset	0
   899 ;;_c	offset	2
   900 ;;_s	offset=-2 (param)
   901 ;;_fp	offset=-4 (param)
   902 ;;_c	offset=-2 (param)
   903 ;;_fp	offset=-4 (param)
   904 ;;_c	offset=-1 (param)
   905 ;;__this	offset=-2 (param)
   906 ;;_c	offset=-3 (param)
   907 ;;_atoi$7459	offset	0
   908 ;;_atoi$7457	offset	2
   909 ;;_atoi$7458	offset	4
   910 ;;_n	offset	5
   911 ;;_neg	offset	7
   912 ;;_s	offset=-2 (param)
   913 ;;_isspace$7508	offset	0
   914 ;;_c	offset=-2 (param)
   915 ;;_c	offset=-2 (param)
   916 ;;_dsize	offset=-2 (param)
   917 ;;_u	offset	0
   918 ;;_x	offset=-4 (param)
   919 ;;_f1p	offset=-2 (param)
   920 ;;_f2	offset=-6 (param)
   921 ;;_timer	offset=-1 (param)
   922 ;;_count	offset=-3 (param)
   923 ;;_channel	offset=-1 (param)
   924 ;;_i	offset	0
   925                           
   926                           	psect	idataBIGRAM
   927  01A96E                     __pidataBIGRAM:
   928                           	opt callstack 0
   929                           
   930                           ;initializer for _port_data
   931  01A96E  FF                 	db	255
   932  01A96F  00                 	db	0
   933  01A970  FF                 	db	255
   934  01A971  00                 	db	0
   935  01A972  FF                 	db	255
   936  01A973  00                 	db	0
   937  01A974  FF                 	db	255
   938  01A975  00                 	db	0
   939  01A976  FF                 	db	255
   940  01A977  00                 	db	0
   941  01A978  FF                 	db	255
   942  01A979  00                 	db	0
   943  01A97A  FF                 	db	255
   944  01A97B  00                 	db	0
   945  01A97C  FF                 	db	255
   946  01A97D  00                 	db	0
   947  01A97E  00                 	db	0
   948  01A97F  00                 	db	0
   949  01A980  00                 	db	0
   950  01A981  00                 	db	0
   951  01A982  00                 	db	0
   952  01A983  00                 	db	0
   953  01A984  00                 	db	0
   954  01A985  00                 	db	0
   955  01A986  00                 	db	0
   956  01A987  00                 	db	0
   957  01A988  00                 	db	0
   958  01A989  00                 	db	0
   959  01A98A  00                 	db	0
   960  01A98B  00                 	db	0
   961  01A98C  00                 	db	0
   962  01A98D  00                 	db	0
   963  01A98E  00                 	db	0
   964  01A98F  00                 	db	0
   965  01A990  00                 	db	0
   966  01A991  00                 	db	0
   967  01A992  00                 	db	0
   968  01A993  00                 	db	0
   969  01A994  00                 	db	0
   970  01A995  00                 	db	0
   971  01A996  00                 	db	0
   972  01A997  00                 	db	0
   973  01A998  00                 	db	0
   974  01A999  00                 	db	0
   975  01A99A  00                 	db	0
   976  01A99B  00                 	db	0
   977  01A99C  00                 	db	0
   978  01A99D  00                 	db	0
   979  01A99E  00                 	db	0
   980  01A99F  00                 	db	0
   981  01A9A0  00                 	db	0
   982  01A9A1  00                 	db	0
   983  01A9A2  00                 	db	0
   984  01A9A3  00                 	db	0
   985  01A9A4  00                 	db	0
   986  01A9A5  00                 	db	0
   987  01A9A6  00                 	db	0
   988  01A9A7  00                 	db	0
   989  01A9A8  00                 	db	0
   990  01A9A9  00                 	db	0
   991  01A9AA  00                 	db	0
   992  01A9AB  00                 	db	0
   993  01A9AC  00                 	db	0
   994  01A9AD  00                 	db	0
   995  01A9AE  00                 	db	0
   996  01A9AF  00                 	db	0
   997  01A9B0  00                 	db	0
   998  01A9B1  00                 	db	0
   999  01A9B2  00                 	db	0
  1000  01A9B3  00                 	db	0
  1001  01A9B4  00                 	db	0
  1002  01A9B5  00                 	db	0
  1003  01A9B6  00                 	db	0
  1004  01A9B7  00                 	db	0
  1005  01A9B8  00                 	db	0
  1006  01A9B9  00                 	db	0
  1007  01A9BA  00                 	db	0
  1008  01A9BB  00                 	db	0
  1009  01A9BC  00                 	db	0
  1010  01A9BD  00                 	db	0
  1011  01A9BE  00                 	db	0
  1012  01A9BF  00                 	db	0
  1013  01A9C0  00                 	db	0
  1014  01A9C1  00                 	db	0
  1015  01A9C2  00                 	db	0
  1016  01A9C3  00                 	db	0
  1017  01A9C4  00                 	db	0
  1018  01A9C5  00                 	db	0
  1019  01A9C6  00                 	db	0
  1020  01A9C7  00                 	db	0
  1021  01A9C8  00                 	db	0
  1022  01A9C9  00                 	db	0
  1023  01A9CA  00                 	db	0
  1024  01A9CB  00                 	db	0
  1025  01A9CC  00                 	db	0
  1026  01A9CD  00                 	db	0
  1027  01A9CE  00                 	db	0
  1028  01A9CF  00                 	db	0
  1029  01A9D0  00                 	db	0
  1030  01A9D1  00                 	db	0
  1031  01A9D2  00                 	db	0
  1032  01A9D3  00                 	db	0
  1033  01A9D4  00                 	db	0
  1034  01A9D5  00                 	db	0
  1035  01A9D6  00                 	db	0
  1036  01A9D7  00                 	db	0
  1037  01A9D8  00                 	db	0
  1038  01A9D9  00                 	db	0
  1039  01A9DA  00                 	db	0
  1040  01A9DB  00                 	db	0
  1041  01A9DC  00                 	db	0
  1042  01A9DD  00                 	db	0
  1043  01A9DE  00                 	db	0
  1044  01A9DF  00                 	db	0
  1045  01A9E0  00                 	db	0
  1046  01A9E1  00                 	db	0
  1047  01A9E2  00                 	db	0
  1048  01A9E3  00                 	db	0
  1049  01A9E4  00                 	db	0
  1050  01A9E5  00                 	db	0
  1051  01A9E6  00                 	db	0
  1052  01A9E7  00                 	db	0
  1053  01A9E8  00                 	db	0
  1054  01A9E9  00                 	db	0
  1055  01A9EA  00                 	db	0
  1056  01A9EB  00                 	db	0
  1057  01A9EC  00                 	db	0
  1058  01A9ED  00                 	db	0
  1059  01A9EE  00                 	db	0
  1060  01A9EF  00                 	db	0
  1061  01A9F0  00                 	db	0
  1062  01A9F1  00                 	db	0
  1063  01A9F2  00                 	db	0
  1064  01A9F3  00                 	db	0
  1065  01A9F4  00                 	db	0
  1066  01A9F5  00                 	db	0
  1067  01A9F6  00                 	db	0
  1068  01A9F7  00                 	db	0
  1069  01A9F8  00                 	db	0
  1070  01A9F9  00                 	db	0
  1071  01A9FA  00                 	db	0
  1072  01A9FB  00                 	db	0
  1073  01A9FC  00                 	db	0
  1074  01A9FD  00                 	db	0
  1075  01A9FE  00                 	db	0
  1076  01A9FF  00                 	db	0
  1077  01AA00  00                 	db	0
  1078  01AA01  00                 	db	0
  1079  01AA02  00                 	db	0
  1080  01AA03  00                 	db	0
  1081  01AA04  00                 	db	0
  1082  01AA05  00                 	db	0
  1083  01AA06  00                 	db	0
  1084  01AA07  00                 	db	0
  1085  01AA08  00                 	db	0
  1086  01AA09  00                 	db	0
  1087  01AA0A  00                 	db	0
  1088  01AA0B  00                 	db	0
  1089  01AA0C  00                 	db	0
  1090  01AA0D  00                 	db	0
  1091  01AA0E  00                 	db	0
  1092  01AA0F  00                 	db	0
  1093  01AA10  00                 	db	0
  1094  01AA11  00                 	db	0
  1095  01AA12  00                 	db	0
  1096  01AA13  00                 	db	0
  1097  01AA14  00                 	db	0
  1098  01AA15  00                 	db	0
  1099  01AA16  00                 	db	0
  1100  01AA17  00                 	db	0
  1101  01AA18  00                 	db	0
  1102  01AA19  00                 	db	0
  1103  01AA1A  00                 	db	0
  1104  01AA1B  00                 	db	0
  1105  01AA1C  00                 	db	0
  1106  01AA1D  00                 	db	0
  1107  01AA1E  00                 	db	0
  1108  01AA1F  00                 	db	0
  1109  01AA20  00                 	db	0
  1110  01AA21  00                 	db	0
  1111  01AA22  00                 	db	0
  1112  01AA23  00                 	db	0
  1113  01AA24  00                 	db	0
  1114  01AA25  00                 	db	0
  1115  01AA26  00                 	db	0
  1116  01AA27  00                 	db	0
  1117  01AA28  00                 	db	0
  1118  01AA29  00                 	db	0
  1119  01AA2A  00                 	db	0
  1120  01AA2B  00                 	db	0
  1121  01AA2C  00                 	db	0
  1122  01AA2D  00                 	db	0
  1123  01AA2E  00                 	db	0
  1124  01AA2F  00                 	db	0
  1125  01AA30  00                 	db	0
  1126  01AA31  00                 	db	0
  1127  01AA32  00                 	db	0
  1128  01AA33  00                 	db	0
  1129  01AA34  00                 	db	0
  1130  01AA35  00                 	db	0
  1131  01AA36  00                 	db	0
  1132  01AA37  00                 	db	0
  1133  01AA38  00                 	db	0
  1134  01AA39  00                 	db	0
  1135  01AA3A  00                 	db	0
  1136  01AA3B  00                 	db	0
  1137  01AA3C  00                 	db	0
  1138  01AA3D  00                 	db	0
  1139  01AA3E  00                 	db	0
  1140  01AA3F  00                 	db	0
  1141  01AA40  00                 	db	0
  1142  01AA41  00                 	db	0
  1143  01AA42  00                 	db	0
  1144  01AA43  00                 	db	0
  1145  01AA44  00                 	db	0
  1146  01AA45  00                 	db	0
  1147  01AA46  00                 	db	0
  1148  01AA47  00                 	db	0
  1149  01AA48  00                 	db	0
  1150  01AA49  00                 	db	0
  1151  01AA4A  00                 	db	0
  1152  01AA4B  00                 	db	0
  1153  01AA4C  00                 	db	0
  1154  01AA4D  00                 	db	0
  1155  01AA4E  00                 	db	0
  1156  01AA4F  00                 	db	0
  1157  01AA50  00                 	db	0
  1158  01AA51  00                 	db	0
  1159  01AA52  00                 	db	0
  1160  01AA53  00                 	db	0
  1161  01AA54  00                 	db	0
  1162  01AA55  00                 	db	0
  1163  01AA56  00                 	db	0
  1164  01AA57  00                 	db	0
  1165  01AA58  00                 	db	0
  1166  01AA59  00                 	db	0
  1167  01AA5A  00                 	db	0
  1168  01AA5B  00                 	db	0
  1169  01AA5C  00                 	db	0
  1170  01AA5D  00                 	db	0
  1171  01AA5E  00                 	db	0
  1172  01AA5F  00                 	db	0
  1173  01AA60  00                 	db	0
  1174  01AA61  00                 	db	0
  1175  01AA62  00                 	db	0
  1176  01AA63  00                 	db	0
  1177  01AA64  00                 	db	0
  1178  01AA65  00                 	db	0
  1179  01AA66  00                 	db	0
  1180  01AA67  00                 	db	0
  1181  01AA68  00                 	db	0
  1182  01AA69  00                 	db	0
  1183  01AA6A  00                 	db	0
  1184  01AA6B  00                 	db	0
  1185  01AA6C  00                 	db	0
  1186  01AA6D  00                 	db	0
  1187  01AA6E  00                 	db	0
  1188  01AA6F  00                 	db	0
  1189  01AA70  00                 	db	0
  1190  01AA71  00                 	db	0
  1191  01AA72  00                 	db	0
  1192  01AA73  00                 	db	0
  1193  01AA74  00                 	db	0
  1194  01AA75  00                 	db	0
  1195  01AA76  00                 	db	0
  1196  01AA77  00                 	db	0
  1197  01AA78  00                 	db	0
  1198  01AA79  00                 	db	0
  1199  01AA7A  00                 	db	0
  1200  01AA7B  00                 	db	0
  1201  01AA7C  00                 	db	0
  1202  01AA7D  00                 	db	0
  1203  01AA7E  00                 	db	0
  1204  01AA7F  00                 	db	0
  1205  01AA80  00                 	db	0
  1206  01AA81  00                 	db	0
  1207  01AA82  00                 	db	0
  1208  01AA83  00                 	db	0
  1209  01AA84  00                 	db	0
  1210  01AA85  00                 	db	0
  1211  01AA86  00                 	db	0
  1212  01AA87  00                 	db	0
  1213  01AA88  00                 	db	0
  1214  01AA89  00                 	db	0
  1215  01AA8A  00                 	db	0
  1216  01AA8B  00                 	db	0
  1217  01AA8C  00                 	db	0
  1218  01AA8D  00                 	db	0
  1219  01AA8E  00                 	db	0
  1220  01AA8F  00                 	db	0
  1221  01AA90  00                 	db	0
  1222  01AA91  00                 	db	0
  1223  01AA92  00                 	db	0
  1224  01AA93  00                 	db	0
  1225  01AA94  00                 	db	0
  1226  01AA95  00                 	db	0
  1227  01AA96  00                 	db	0
  1228  01AA97  00                 	db	0
  1229  01AA98  00                 	db	0
  1230  01AA99  00                 	db	0
  1231  01AA9A  00                 	db	0
  1232  01AA9B  00                 	db	0
  1233  01AA9C  00                 	db	0
  1234  01AA9D  00                 	db	0
  1235  01AA9E  00                 	db	0
  1236  01AA9F  00                 	db	0
  1237  01AAA0  00                 	db	0
  1238  01AAA1  00                 	db	0
  1239  01AAA2  00                 	db	0
  1240  01AAA3  00                 	db	0
  1241  01AAA4  00                 	db	0
  1242  01AAA5  00                 	db	0
  1243  01AAA6  00                 	db	0
  1244  01AAA7  00                 	db	0
  1245  01AAA8  00                 	db	0
  1246  01AAA9  00                 	db	0
  1247  01AAAA  00                 	db	0
  1248  01AAAB  00                 	db	0
  1249  01AAAC  00                 	db	0
  1250  01AAAD  00                 	db	0
  1251  01AAAE  00                 	db	0
  1252  01AAAF  00                 	db	0
  1253  01AAB0  00                 	db	0
  1254  01AAB1  00                 	db	0
  1255  01AAB2  00                 	db	0
  1256  01AAB3  00                 	db	0
  1257  01AAB4  00                 	db	0
  1258  01AAB5  00                 	db	0
  1259  01AAB6  00                 	db	0
  1260  01AAB7  00                 	db	0
  1261  01AAB8  00                 	db	0
  1262  01AAB9  00                 	db	0
  1263  01AABA  00                 	db	0
  1264  01AABB  00                 	db	0
  1265  01AABC  00                 	db	0
  1266  01AABD  00                 	db	0
  1267  01AABE  00                 	db	0
  1268  01AABF  00                 	db	0
  1269  01AAC0  00                 	db	0
  1270  01AAC1  00                 	db	0
  1271  01AAC2  00                 	db	0
  1272  01AAC3  00                 	db	0
  1273  01AAC4  00                 	db	0
  1274  01AAC5  00                 	db	0
  1275  01AAC6  00                 	db	0
  1276  01AAC7  00                 	db	0
  1277  01AAC8  00                 	db	0
  1278  01AAC9  00                 	db	0
  1279  01AACA  00                 	db	0
  1280  01AACB  00                 	db	0
  1281  01AACC  00                 	db	0
  1282  01AACD  00                 	db	0
  1283  01AACE  00                 	db	0
  1284  01AACF  00                 	db	0
  1285  01AAD0  00                 	db	0
  1286  01AAD1  00                 	db	0
  1287  01AAD2  00                 	db	0
  1288  01AAD3  00                 	db	0
  1289  01AAD4  00                 	db	0
  1290  01AAD5  00                 	db	0
  1291  01AAD6  00                 	db	0
  1292  01AAD7  00                 	db	0
  1293  01AAD8  00                 	db	0
  1294  01AAD9  00                 	db	0
  1295  01AADA  00                 	db	0
  1296  01AADB  00                 	db	0
  1297  01AADC  00                 	db	0
  1298  01AADD  00                 	db	0
  1299  01AADE  00                 	db	0
  1300  01AADF  00                 	db	0
  1301  01AAE0  00                 	db	0
  1302  01AAE1  00                 	db	0
  1303  01AAE2  00                 	db	0
  1304  01AAE3  00                 	db	0
  1305  01AAE4  00                 	db	0
  1306  01AAE5  00                 	db	0
  1307  01AAE6  00                 	db	0
  1308  01AAE7  00                 	db	0
  1309  01AAE8  00                 	db	0
  1310  01AAE9  00                 	db	0
  1311  01AAEA  00                 	db	0
  1312  01AAEB  00                 	db	0
  1313  01AAEC  00                 	db	0
  1314  01AAED  00                 	db	0
  1315  01AAEE  00                 	db	0
  1316  01AAEF  00                 	db	0
  1317  01AAF0  00                 	db	0
  1318  01AAF1  00                 	db	0
  1319  01AAF2  00                 	db	0
  1320  01AAF3  00                 	db	0
  1321  01AAF4  00                 	db	0
  1322  01AAF5  00                 	db	0
  1323  01AAF6  00                 	db	0
  1324  01AAF7  00                 	db	0
  1325  01AAF8  00                 	db	0
  1326  01AAF9  00                 	db	0
  1327  01AAFA  00                 	db	0
  1328  01AAFB  00                 	db	0
  1329  01AAFC  00                 	db	0
  1330  01AAFD  00                 	db	0
  1331  01AAFE  00                 	db	0
  1332  01AAFF  00                 	db	0
  1333  01AB00  00                 	db	0
  1334  01AB01  00                 	db	0
  1335  01AB02  00                 	db	0
  1336  01AB03  00                 	db	0
  1337  01AB04  00                 	db	0
  1338  01AB05  00                 	db	0
  1339  01AB06  00                 	db	0
  1340  01AB07  00                 	db	0
  1341  01AB08  00                 	db	0
  1342  01AB09  00                 	db	0
  1343  01AB0A  00                 	db	0
  1344  01AB0B  00                 	db	0
  1345  01AB0C  00                 	db	0
  1346  01AB0D  00                 	db	0
  1347  01AB0E  00                 	db	0
  1348  01AB0F  00                 	db	0
  1349  01AB10  00                 	db	0
  1350  01AB11  00                 	db	0
  1351  01AB12  00                 	db	0
  1352  01AB13  00                 	db	0
  1353  01AB14  00                 	db	0
  1354  01AB15  00                 	db	0
  1355  01AB16  00                 	db	0
  1356  01AB17  00                 	db	0
  1357  01AB18  00                 	db	0
  1358  01AB19  00                 	db	0
  1359  01AB1A  00                 	db	0
  1360  01AB1B  00                 	db	0
  1361  01AB1C  00                 	db	0
  1362  01AB1D  00                 	db	0
  1363  01AB1E  00                 	db	0
  1364  01AB1F  00                 	db	0
  1365  01AB20  00                 	db	0
  1366  01AB21  00                 	db	0
  1367  01AB22  00                 	db	0
  1368  01AB23  00                 	db	0
  1369  01AB24  00                 	db	0
  1370  01AB25  00                 	db	0
  1371  01AB26  00                 	db	0
  1372  01AB27  00                 	db	0
  1373  01AB28  00                 	db	0
  1374  01AB29  00                 	db	0
  1375  01AB2A  00                 	db	0
  1376  01AB2B  00                 	db	0
  1377  01AB2C  00                 	db	0
  1378  01AB2D  00                 	db	0
  1379  01AB2E  00                 	db	0
  1380  01AB2F  00                 	db	0
  1381  01AB30  00                 	db	0
  1382  01AB31  00                 	db	0
  1383  01AB32  00                 	db	0
  1384  01AB33  00                 	db	0
  1385  01AB34  00                 	db	0
  1386  01AB35  00                 	db	0
  1387  01AB36  00                 	db	0
  1388  01AB37  00                 	db	0
  1389  01AB38  00                 	db	0
  1390  01AB39  00                 	db	0
  1391  01AB3A  00                 	db	0
  1392  01AB3B  00                 	db	0
  1393  01AB3C  00                 	db	0
  1394  01AB3D  00                 	db	0
  1395  01AB3E  00                 	db	0
  1396  01AB3F  00                 	db	0
  1397  01AB40  00                 	db	0
  1398  01AB41  00                 	db	0
  1399  01AB42  00                 	db	0
  1400  01AB43  00                 	db	0
  1401  01AB44  00                 	db	0
  1402  01AB45  00                 	db	0
  1403  01AB46  00                 	db	0
  1404  01AB47  00                 	db	0
  1405  01AB48  00                 	db	0
  1406  01AB49  00                 	db	0
  1407  01AB4A  00                 	db	0
  1408  01AB4B  00                 	db	0
  1409  01AB4C  00                 	db	0
  1410  01AB4D  00                 	db	0
  1411  01AB4E  00                 	db	0
  1412  01AB4F  00                 	db	0
  1413  01AB50  00                 	db	0
  1414  01AB51  00                 	db	0
  1415  01AB52  00                 	db	0
  1416  01AB53  00                 	db	0
  1417  01AB54  00                 	db	0
  1418  01AB55  00                 	db	0
  1419  01AB56  00                 	db	0
  1420  01AB57  00                 	db	0
  1421  01AB58  00                 	db	0
  1422  01AB59  00                 	db	0
  1423  01AB5A  00                 	db	0
  1424  01AB5B  00                 	db	0
  1425  01AB5C  00                 	db	0
  1426  01AB5D  00                 	db	0
  1427  01AB5E  00                 	db	0
  1428  01AB5F  00                 	db	0
  1429  01AB60  00                 	db	0
  1430  01AB61  00                 	db	0
  1431  01AB62  00                 	db	0
  1432  01AB63  00                 	db	0
  1433  01AB64  00                 	db	0
  1434  01AB65  00                 	db	0
  1435  01AB66  00                 	db	0
  1436  01AB67  00                 	db	0
  1437  01AB68  00                 	db	0
  1438  01AB69  00                 	db	0
  1439  01AB6A  00                 	db	0
  1440  01AB6B  00                 	db	0
  1441  01AB6C  00                 	db	0
  1442  01AB6D  00                 	db	0
  1443                           
  1444                           ;initializer for _C
  1445  01AB6E  0000               	dw	0
  1446  01AB70  0000               	dw	0
  1447  01AB72  0000               	dw	0
  1448  01AB74  0000               	dw	0
  1449  01AB76  0000               	dw	0
  1450  01AB78  0000               	dw	0
  1451  01AB7A  0000               	dw	0
  1452  01AB7C  0000               	dw	0
  1453  01AB7E  0000               	dw	0
  1454  01AB80  0000               	dw	0
  1455  01AB82  0000               	dw	0
  1456  01AB84  0000               	dw	0
  1457  01AB86  0000               	dw	0
  1458  01AB88  0000               	dw	0
  1459  01AB8A  0000               	dw	0
  1460  01AB8C  0000               	dw	0
  1461  01AB8E  0000               	dw	0
  1462  01AB90  0000               	dw	0
  1463  01AB92  0000               	dw	0
  1464  01AB94  0000               	dw	0
  1465  01AB96  0000               	dw	0
  1466  01AB98  0000               	dw	0
  1467  01AB9A  0000               	dw	0
  1468  01AB9C  0000               	dw	0
  1469  01AB9E  0000               	dw	0
  1470  01ABA0  0000               	dw	0
  1471  01ABA2  0000               	dw	0
  1472  01ABA4  0000               	dw	0
  1473  01ABA6  0000               	dw	0
  1474  01ABA8  0000               	dw	0
  1475  01ABAA  0000               	dw	0
  1476  01ABAC  0000               	dw	0
  1477  01ABAE  0000               	dw	0
  1478  01ABB0  0000               	dw	0
  1479  01ABB2  0000               	dw	0
  1480  01ABB4  0000               	dw	0
  1481  01ABB6  0000               	dw	0
  1482  01ABB8  0000               	dw	0
  1483  01ABBA  0000               	dw	0
  1484  01ABBC  0000               	dw	0
  1485  01ABBE  0000               	dw	0
  1486  01ABC0  0000               	dw	0
  1487  01ABC2  0000               	dw	0
  1488  01ABC4  0000               	dw	0
  1489  01ABC6  0000               	dw	0
  1490  01ABC8  0000               	dw	0
  1491  01ABCA  0000               	dw	0
  1492  01ABCC  0000               	dw	0
  1493  01ABCE  0000               	dw	0
  1494  01ABD0  0000               	dw	0
  1495  01ABD2  0000               	dw	0
  1496  01ABD4  0000               	dw	0
  1497  01ABD6  0000               	dw	0
  1498  01ABD8  0000               	dw	0
  1499  01ABDA  0000               	dw	0
  1500  01ABDC  0000               	dw	0
  1501  01ABDE  0000               	dw	0
  1502  01ABE0  0000               	dw	0
  1503  01ABE2  0000               	dw	0
  1504  01ABE4  0000               	dw	0
  1505  01ABE6  0000               	dw	0
  1506  01ABE8  0000               	dw	0
  1507  01ABEA  0000               	dw	0
  1508  01ABEC  0000               	dw	0
  1509  01ABEE  0000               	dw	0
  1510  01ABF0  0000               	dw	0
  1511  01ABF2  0000               	dw	0
  1512  01ABF4  0000               	dw	0
  1513  01ABF6  0000               	dw	0
  1514  01ABF8  0000               	dw	0
  1515  01ABFA  0000               	dw	0
  1516  01ABFC  42FA               	dw	17146
  1517  01ABFE  0000               	dw	0
  1518  01AC00  0000               	dw	0
  1519  01AC02  0000               	dw	0
  1520  01AC04  0000               	dw	0
  1521  01AC06  0000               	dw	0
  1522  01AC08  0000               	dw	0
  1523  01AC0A  0000               	dw	0
  1524  01AC0C  0000               	dw	0
  1525  01AC0E  0000               	dw	0
  1526  01AC10  0000               	dw	0
  1527  01AC12  0000               	dw	0
  1528  01AC14  0000               	dw	0
  1529  01AC16  0000               	dw	0
  1530  01AC18  0000               	dw	0
  1531  01AC1A  0000               	dw	0
  1532  01AC1C  0000               	dw	0
  1533  01AC1E  0000               	dw	0
  1534  01AC20  0000               	dw	0
  1535  01AC22  0000               	dw	0
  1536  01AC24  0000               	dw	0
  1537  01AC26  00                 	db	0
  1538  01AC27  01                 	db	1
  1539  01AC28  0000               	dw	0
  1540  01AC2A  0000               	dw	0
  1541  01AC2C  0000               	dw	0
  1542  01AC2E  0000               	dw	0
  1543  01AC30  0000               	dw	0
  1544  01AC32  0000               	dw	0
  1545  01AC34  0000               	dw	0
  1546  01AC36  0000               	dw	0
  1547  01AC38  0000               	dw	0
  1548  01AC3A  0000               	dw	0
  1549  01AC3C  0000               	dw	0
  1550  01AC3E  00                 	db	0
  1551  01AC3F  00                 	db	0
  1552  01AC40  0000               	dw	0
  1553  01AC42  3F80               	dw	16256
  1554  01AC44  0000               	dw	0
  1555  01AC46  3F80               	dw	16256
  1556  01AC48  0000               	dw	0
  1557  01AC4A  0000               	dw	0
  1558  01AC4C  0000               	dw	0
  1559  01AC4E  0000               	dw	0
  1560  01AC50  0000               	dw	0
  1561  01AC52  0000               	dw	0
  1562  01AC54  0000               	dw	0
  1563  01AC56  0000               	dw	0
  1564  01AC58  0000               	dw	0
  1565  01AC5A  0000               	dw	0
  1566  01AC5C  00                 	db	0
  1567  01AC5D  00                 	db	0
  1568  01AC5E  00                 	db	0
  1569  01AC5F  00                 	db	0
  1570  01AC60  00                 	db	0
  1571  01AC61  00                 	db	0
  1572  01AC62  00                 	db	0
  1573  01AC63  00                 	db	0
  1574  01AC64  00                 	db	0
  1575  01AC65  00                 	db	0
  1576  01AC66  00                 	db	0
  1577  01AC67  00                 	db	0
  1578  01AC68  00                 	db	0
  1579  01AC69  00                 	db	0
  1580  01AC6A  00                 	db	0
  1581  01AC6B  00                 	db	0
  1582  01AC6C  00                 	db	0
  1583  01AC6D  00                 	db	0
  1584  01AC6E  00                 	db	0
  1585  01AC6F  00                 	db	0
  1586  01AC70  00                 	db	0
  1587  01AC71  00                 	db	0
  1588  01AC72  00                 	db	0
  1589  01AC73  00                 	db	0
  1590  01AC74  00                 	db	0
  1591  01AC75  00                 	db	0
  1592  01AC76  00                 	db	0
  1593  01AC77  00                 	db	0
  1594  01AC78  00                 	db	0
  1595  01AC79  00                 	db	0
  1596  01AC7A  00                 	db	0
  1597  01AC7B  00                 	db	0
  1598  01AC7C  00                 	db	0
  1599  01AC7D  00                 	db	0
  1600  01AC7E  00                 	db	0
  1601  01AC7F  00                 	db	0
  1602  01AC80  00                 	db	0
  1603  01AC81  00                 	db	0
  1604  01AC82  00                 	db	0
  1605  01AC83  00                 	db	0
  1606  01AC84  00                 	db	0
  1607  01AC85  00                 	db	0
  1608  01AC86  00                 	db	0
  1609  01AC87  00                 	db	0
  1610  01AC88  00                 	db	0
  1611  01AC89  00                 	db	0
  1612  01AC8A  00                 	db	0
  1613  01AC8B  00                 	db	0
  1614  01AC8C  00                 	db	0
  1615  01AC8D  00                 	db	0
  1616  01AC8E  00                 	db	0
  1617  01AC8F  00                 	db	0
  1618  01AC90  00                 	db	0
  1619  01AC91  00                 	db	0
  1620  01AC92  00                 	db	0
  1621  01AC93  00                 	db	0
  1622  01AC94  00                 	db	0
  1623  01AC95  00                 	db	0
  1624  01AC96  00                 	db	0
  1625  01AC97  00                 	db	0
  1626  01AC98  0000               	dw	0
  1627  01AC9A  0000               	dw	0
  1628  01AC9C  0000               	dw	0
  1629  01AC9E  0000               	dw	0
  1630  01ACA0  0000               	dw	0
  1631  01ACA2  0000               	dw	0
  1632  01ACA4  0000               	dw	0
  1633  01ACA6  0000               	dw	0
  1634  01ACA8  0000               	dw	0
  1635  01ACAA  0000               	dw	0
  1636  01ACAC  01                 	db	1
  1637  01ACAD  00                 	db	0
  1638  01ACAE  0000               	dw	0
  1639  01ACB0  0000               	dw	0
  1640  01ACB2  0000               	dw	0
  1641  01ACB4  0000               	dw	0
  1642  01ACB6  0000               	dw	0
  1643  01ACB8  0000               	dw	0
  1644  01ACBA  0000               	dw	0
  1645  01ACBC  0000               	dw	0
  1646                           
  1647                           	psect	idataBANK1
  1648  000C4E                     __pidataBANK1:
  1649                           	opt callstack 0
  1650                           
  1651                           ;initializer for _R
  1652  000C4E  0000               	dw	0
  1653  000C50  0000               	dw	0
  1654  000C52  0000               	dw	0
  1655  000C54  0000               	dw	0
  1656  000C56  0000               	dw	0
  1657  000C58  0000               	dw	0
  1658  000C5A  0000               	dw	0
  1659  000C5C  0000               	dw	0
  1660  000C5E  0000               	dw	0
  1661  000C60  0000               	dw	0
  1662  000C62  0000               	dw	0
  1663  000C64  0000               	dw	0
  1664  000C66  0000               	dw	0
  1665  000C68  0000               	dw	0
  1666  000C6A  0000               	dw	0
  1667  000C6C  0000               	dw	0
  1668  000C6E  0000               	dw	0
  1669  000C70  0000               	dw	0
  1670  000C72  0000               	dw	0
  1671  000C74  0F62               	dw	3938
  1672  000C76  0FA4               	dw	4004
  1673  000C78  89A0               	dw	35232
  1674  000C7A  3DB0               	dw	15792
  1675  000C7C  DEA4               	dw	56996
  1676  000C7E  3D13               	dw	15635
  1677  000C80  00                 	db	0
  1678  000C81  0000               	dw	0
  1679  000C83  00                 	db	0
  1680  000C84  00                 	db	0
  1681  000C85  0000               	dw	0
  1682  000C87  0000               	dw	0
  1683  000C89  0000               	dw	0
  1684  000C8B  0000               	dw	0
  1685  000C8D  0000               	dw	0
  1686  000C8F  0000               	dw	0
  1687  000C91  0000               	dw	0
  1688  000C93  0000               	dw	0
  1689  000C95  0000               	dw	0
  1690  000C97  0000               	dw	0
  1691  000C99  0000               	dw	0
  1692  000C9B  00                 	db	0
  1693  000C9C  00                 	db	0
  1694  000C9D  0000               	dw	0
  1695  000C9F  0000               	dw	0
  1696  000CA1  0000               	dw	0
  1697  000CA3  0000               	dw	0
  1698  000CA5  0000               	dw	0
  1699  000CA7  0000               	dw	0
  1700  000CA9  0000               	dw	0
  1701  000CAB  0000               	dw	0
  1702  000CAD  0000               	dw	0
  1703  000CAF  0000               	dw	0
  1704  000CB1  0000               	dw	0
  1705  000CB3  0000               	dw	0
  1706  000CB5  0000               	dw	0
  1707  000CB7  0000               	dw	0
  1708  000CB9  0000               	dw	0
  1709  000CBB  0000               	dw	0
  1710  000CBD  0000               	dw	0
  1711  000CBF  0000               	dw	0
  1712  000CC1  0000               	dw	0
  1713  000CC3  0000               	dw	0
  1714  000CC5  0000               	dw	0
  1715  000CC7  0000               	dw	0
  1716  000CC9  0000               	dw	0
  1717  000CCB  0000               	dw	0
  1718  000CCD  0000               	dw	0
  1719  000CCF  0000               	dw	0
  1720  000CD1  0000               	dw	0
  1721  000CD3  0000               	dw	0
  1722  000CD5  0000               	dw	0
  1723  000CD7  0000               	dw	0
  1724  000CD9  0000               	dw	0
  1725  000CDB  0000               	dw	0
  1726  000CDD  0000               	dw	0
  1727  000CDF  0000               	dw	0
  1728  000CE1  0000               	dw	0
  1729  000CE3  0000               	dw	0
  1730  000CE5  0000               	dw	0
  1731  000CE7  0000               	dw	0
  1732  000CE9  0000               	dw	0
  1733  000CEB  0000               	dw	0
  1734  000CED  0000               	dw	0
  1735  000CEF  0000               	dw	0
  1736  000CF1  0000               	dw	0
  1737  000CF3  0000               	dw	0
  1738  000CF5  00                 	db	0
  1739  000CF6  1957               	dw	6487
  1740  000CF8  42                 	db	66
  1741                           
  1742                           ;initializer for _H
  1743  000CF9  00                 	db	0
  1744  000CFA  00                 	db	0
  1745  000CFB  01                 	db	1
  1746  000CFC  00                 	db	0
  1747  000CFD  01                 	db	1
  1748  000CFE  00                 	db	0
  1749  000CFF  01                 	db	1
  1750  000D00  00                 	db	0
  1751  000D01  00                 	db	0
  1752                           
  1753                           	psect	idataBANK2
  1754  00096A                     __pidataBANK2:
  1755                           	opt callstack 0
  1756                           
  1757                           ;initializer for stoa@F1166
  1758  00096A  28                 	db	40
  1759  00096B  6E                 	db	110
  1760  00096C  75                 	db	117
  1761  00096D  6C                 	db	108
  1762  00096E  6C                 	db	108
  1763  00096F  29                 	db	41
  1764  000970  00                 	db	0
  1765                           
  1766                           ;initializer for _V
  1767  000971  00                 	db	0
  1768  000972  00                 	db	0
  1769  000973  00                 	db	0
  1770  000974  00                 	db	0
  1771  000975  00                 	db	0
  1772  000976  00                 	db	0
  1773  000977  00                 	db	0
  1774  000978  00                 	db	0
  1775  000979  00                 	db	0
  1776  00097A  00                 	db	0
  1777  00097B  00                 	db	0
  1778  00097C  00                 	db	0
  1779  00097D  00                 	db	0
  1780  00097E  00                 	db	0
  1781  00097F  00                 	db	0
  1782  000980  00                 	db	0
  1783  000981  00                 	db	0
  1784  000982  00                 	db	0
  1785  000983  00                 	db	0
  1786  000984  00                 	db	0
  1787  000985  00                 	db	0
  1788  000986  00                 	db	0
  1789  000987  00                 	db	0
  1790  000988  00                 	db	0
  1791  000989  00                 	db	0
  1792  00098A  00                 	db	0
  1793  00098B  00                 	db	0
  1794  00098C  00                 	db	0
  1795  00098D  00                 	db	0
  1796  00098E  00                 	db	0
  1797  00098F  00                 	db	0
  1798  000990  00                 	db	0
  1799  000991  00                 	db	0
  1800  000992  00                 	db	0
  1801  000993  00                 	db	0
  1802  000994  00                 	db	0
  1803  000995  00                 	db	0
  1804  000996  00                 	db	0
  1805  000997  00                 	db	0
  1806  000998  00                 	db	0
  1807  000999  00                 	db	0
  1808  00099A  00                 	db	0
  1809  00099B  00                 	db	0
  1810  00099C  00                 	db	0
  1811  00099D  00                 	db	0
  1812  00099E  00                 	db	0
  1813  00099F  00                 	db	0
  1814  0009A0  00                 	db	0
  1815  0009A1  00                 	db	0
  1816  0009A2  00                 	db	0
  1817  0009A3  00                 	db	0
  1818  0009A4  00                 	db	0
  1819  0009A5  00                 	db	0
  1820  0009A6  00                 	db	0
  1821  0009A7  00                 	db	0
  1822  0009A8  00                 	db	0
  1823  0009A9  00                 	db	0
  1824  0009AA  00                 	db	0
  1825  0009AB  00                 	db	0
  1826  0009AC  00                 	db	0
  1827  0009AD  00                 	db	0
  1828  0009AE  00                 	db	0
  1829  0009AF  00                 	db	0
  1830  0009B0  00                 	db	0
  1831  0009B1  00                 	db	0
  1832  0009B2  00                 	db	0
  1833  0009B3  00                 	db	0
  1834  0009B4  00                 	db	0
  1835  0009B5  00                 	db	0
  1836  0009B6  00                 	db	0
  1837  0009B7  00                 	db	0
  1838  0009B8  00                 	db	0
  1839  0009B9  00                 	db	0
  1840  0009BA  00                 	db	0
  1841  0009BB  00                 	db	0
  1842  0009BC  00                 	db	0
  1843  0009BD  00                 	db	0
  1844  0009BE  00                 	db	0
  1845  0009BF  00                 	db	0
  1846  0009C0  00                 	db	0
  1847  0009C1  00                 	db	0
  1848  0009C2  00                 	db	0
  1849  0009C3  00                 	db	0
  1850  0009C4  00                 	db	0
  1851  0009C5  00                 	db	0
  1852  0009C6  00                 	db	0
  1853  0009C7  00                 	db	0
  1854  0009C8  00                 	db	0
  1855  0009C9  00                 	db	0
  1856  0009CA  00                 	db	0
  1857  0009CB  00                 	db	0
  1858  0009CC  00                 	db	0
  1859  0009CD  00                 	db	0
  1860  0009CE  00                 	db	0
  1861  0009CF  00                 	db	0
  1862  0009D0  00                 	db	0
  1863  0009D1  00                 	db	0
  1864  0009D2  00                 	db	0
  1865  0009D3  00                 	db	0
  1866  0009D4  00                 	db	0
  1867  0009D5  00                 	db	0
  1868  0009D6  00                 	db	0
  1869  0009D7  00                 	db	0
  1870  0009D8  00                 	db	0
  1871  0009D9  00                 	db	0
  1872  0009DA  00                 	db	0
  1873  0009DB  00                 	db	0
  1874  0009DC  00                 	db	0
  1875  0009DD  00                 	db	0
  1876  0009DE  00                 	db	0
  1877  0009DF  00                 	db	0
  1878  0009E0  00                 	db	0
  1879  0009E1  00                 	db	0
  1880  0009E2  00                 	db	0
  1881  0009E3  00                 	db	0
  1882  0009E4  00                 	db	0
  1883  0009E5  00                 	db	0
  1884  0009E6  00                 	db	0
  1885  0009E7  00                 	db	0
  1886  0009E8  00                 	db	0
  1887  0009E9  00                 	db	0
  1888  0009EA  00                 	db	0
  1889  0009EB  00                 	db	0
  1890  0009EC  00                 	db	0
  1891  0009ED  00                 	db	0
  1892  0009EE  00                 	db	0
  1893  0009EF  00                 	db	0
  1894  0009F0  00                 	db	0
  1895  0009F1  00                 	db	0
  1896  0009F2  019A               	dw	410
  1897  0009F4  5E48               	dw	24136
  1898  0009F6  00                 	db	0
  1899  0009F7  00                 	db	0
  1900  0009F8  00                 	db	0
  1901  0009F9  00                 	db	0
  1902  0009FA  00                 	db	0
  1903  0009FB  00                 	db	0
  1904  0009FC  00                 	db	0
  1905  0009FD  0000               	dw	0
  1906  0009FF  0000               	dw	0
  1907  000A01  0000               	dw	0
  1908  000A03  0000               	dw	0
  1909  000A05  0000               	dw	0
  1910  000A07  0000               	dw	0
  1911  000A09  00                 	db	0
  1912  000A0A  00                 	db	0
  1913  000A0B  00                 	db	0
  1914  000A0C  00                 	db	0
  1915  000A0D  00                 	db	0
  1916  000A0E  00                 	db	0
  1917  000A0F  00                 	db	0
  1918  000A10  00                 	db	0
  1919  000A11  00                 	db	0
  1920  000A12  00                 	db	0
  1921  000A13  00                 	db	0
  1922  000A14  0000               	dw	0
  1923  000A16  0000               	dw	0
  1924  000A18  2D                 	db	45
  1925  000A19  00                 	db	0
  1926  000A1A  00                 	db	0
  1927  000A1B  00                 	db	0
  1928  000A1C  00                 	db	0
  1929  000A1D  00                 	db	0
  1930  000A1E  0000               	dw	0
  1931  000A20  0000               	dw	0
  1932  000A22  0000               	dw	0
  1933  000A24  0000               	dw	0
  1934                           
  1935                           	psect	mediumconst
  1936  00F770                     __pmediumconst:
  1937                           	opt callstack 0
  1938  00F770  00                 	db	0
  1939  00F771                     _BVSOC_TABLE:
  1940                           	opt callstack 0
  1941  00F771  59D8               	dw	23000
  1942  00F773  0000               	dw	0
  1943  00F775  0005               	dw	5
  1944  00F777  0000               	dw	0
  1945  00F779  5B68               	dw	23400
  1946  00F77B  0000               	dw	0
  1947  00F77D  000A               	dw	10
  1948  00F77F  0000               	dw	0
  1949  00F781  5C30               	dw	23600
  1950  00F783  0000               	dw	0
  1951  00F785  0014               	dw	20
  1952  00F787  0000               	dw	0
  1953  00F789  5E38               	dw	24120
  1954  00F78B  0000               	dw	0
  1955  00F78D  0019               	dw	25
  1956  00F78F  0000               	dw	0
  1957  00F791  5E88               	dw	24200
  1958  00F793  0000               	dw	0
  1959  00F795  001E               	dw	30
  1960  00F797  0000               	dw	0
  1961  00F799  5F78               	dw	24440
  1962  00F79B  0000               	dw	0
  1963  00F79D  0028               	dw	40
  1964  00F79F  0000               	dw	0
  1965  00F7A1  5FDC               	dw	24540
  1966  00F7A3  0000               	dw	0
  1967  00F7A5  002D               	dw	45
  1968  00F7A7  0000               	dw	0
  1969  00F7A9  6018               	dw	24600
  1970  00F7AB  0000               	dw	0
  1971  00F7AD  0032               	dw	50
  1972  00F7AF  0000               	dw	0
  1973  00F7B1  6046               	dw	24646
  1974  00F7B3  0000               	dw	0
  1975  00F7B5  0035               	dw	53
  1976  00F7B7  0000               	dw	0
  1977  00F7B9  607C               	dw	24700
  1978  00F7BB  0000               	dw	0
  1979  00F7BD  0037               	dw	55
  1980  00F7BF  0000               	dw	0
  1981  00F7C1  60AE               	dw	24750
  1982  00F7C3  0000               	dw	0
  1983  00F7C5  0039               	dw	57
  1984  00F7C7  0000               	dw	0
  1985  00F7C9  60E0               	dw	24800
  1986  00F7CB  0000               	dw	0
  1987  00F7CD  003C               	dw	60
  1988  00F7CF  0000               	dw	0
  1989  00F7D1  6112               	dw	24850
  1990  00F7D3  0000               	dw	0
  1991  00F7D5  003F               	dw	63
  1992  00F7D7  0000               	dw	0
  1993  00F7D9  615D               	dw	24925
  1994  00F7DB  0000               	dw	0
  1995  00F7DD  0043               	dw	67
  1996  00F7DF  0000               	dw	0
  1997  00F7E1  61A8               	dw	25000
  1998  00F7E3  0000               	dw	0
  1999  00F7E5  0046               	dw	70
  2000  00F7E7  0000               	dw	0
  2001  00F7E9  61BC               	dw	25020
  2002  00F7EB  0000               	dw	0
  2003  00F7ED  0048               	dw	72
  2004  00F7EF  0000               	dw	0
  2005  00F7F1  61D0               	dw	25040
  2006  00F7F3  0000               	dw	0
  2007  00F7F5  004B               	dw	75
  2008  00F7F7  0000               	dw	0
  2009  00F7F9  61DA               	dw	25050
  2010  00F7FB  0000               	dw	0
  2011  00F7FD  0050               	dw	80
  2012  00F7FF  0000               	dw	0
  2013  00F801  61E4               	dw	25060
  2014  00F803  0000               	dw	0
  2015  00F805  0055               	dw	85
  2016  00F807  0000               	dw	0
  2017  00F809  61F8               	dw	25080
  2018  00F80B  0000               	dw	0
  2019  00F80D  005A               	dw	90
  2020  00F80F  0000               	dw	0
  2021  00F811  6208               	dw	25096
  2022  00F813  0000               	dw	0
  2023  00F815  005C               	dw	92
  2024  00F817  0000               	dw	0
  2025  00F819  6222               	dw	25122
  2026  00F81B  0000               	dw	0
  2027  00F81D  005D               	dw	93
  2028  00F81F  0000               	dw	0
  2029  00F821  6234               	dw	25140
  2030  00F823  0000               	dw	0
  2031  00F825  005F               	dw	95
  2032  00F827  0000               	dw	0
  2033  00F829  6248               	dw	25160
  2034  00F82B  0000               	dw	0
  2035  00F82D  0061               	dw	97
  2036  00F82F  0000               	dw	0
  2037  00F831  625C               	dw	25180
  2038  00F833  0000               	dw	0
  2039  00F835  0064               	dw	100
  2040  00F837  0000               	dw	0
  2041  00F839  6784               	dw	26500
  2042  00F83B  0000               	dw	0
  2043  00F83D  0062               	dw	98
  2044  00F83F  0000               	dw	0
  2045  00F841                     __end_of_BVSOC_TABLE:
  2046                           	opt callstack 0
  2047  00F841                     ___month_to_secs@secs_through_month:
  2048                           	opt callstack 0
  2049  00F841  0000               	dw	0
  2050  00F843  0000               	dw	0
  2051  00F845  DE80               	dw	56960
  2052  00F847  0028               	dw	40
  2053  00F849  C880               	dw	51328
  2054  00F84B  004D               	dw	77
  2055  00F84D  A700               	dw	42752
  2056  00F84F  0076               	dw	118
  2057  00F851  3400               	dw	13312
  2058  00F853  009E               	dw	158
  2059  00F855  1280               	dw	4736
  2060  00F857  00C7               	dw	199
  2061  00F859  9F80               	dw	40832
  2062  00F85B  00EE               	dw	238
  2063  00F85D  7E00               	dw	32256
  2064  00F85F  0117               	dw	279
  2065  00F861  5C80               	dw	23680
  2066  00F863  0140               	dw	320
  2067  00F865  E980               	dw	59776
  2068  00F867  0167               	dw	359
  2069  00F869  C800               	dw	51200
  2070  00F86B  0190               	dw	400
  2071  00F86D  5500               	dw	21760
  2072  00F86F  01B8               	dw	440
  2073  00F871                     __end_of___month_to_secs@secs_through_month:
  2074                           	opt callstack 0
  2075  00F871                     ___secs_to_tm@days_in_month:
  2076                           	opt callstack 0
  2077  00F871  1F                 	db	31
  2078  00F872  1E                 	db	30
  2079  00F873  1F                 	db	31
  2080  00F874  1E                 	db	30
  2081  00F875  1F                 	db	31
  2082  00F876  1F                 	db	31
  2083  00F877  1E                 	db	30
  2084  00F878  1F                 	db	31
  2085  00F879  1E                 	db	30
  2086  00F87A  1F                 	db	31
  2087  00F87B  1F                 	db	31
  2088  00F87C  1D                 	db	29
  2089  00F87D                     __end_of___secs_to_tm@days_in_month:
  2090                           	opt callstack 0
  2091  00F87D                     _T:
  2092                           	opt callstack 0
  2093  00F87D  63                 	db	99
  2094  00F87E  6F                 	db	111
  2095  00F87F  6D                 	db	109
  2096  00F880  6D                 	db	109
  2097  00F881  61                 	db	97
  2098  00F882  6E                 	db	110
  2099  00F883  64                 	db	100
  2100  00F884  73                 	db	115
  2101  00F885  20                 	db	32
  2102  00F886  31                 	db	49
  2103  00F887  00                 	db	0
  2104  00F888  00                 	db	0
  2105  00F889  00                 	db	0
  2106  00F88A  00                 	db	0
  2107  00F88B  00                 	db	0
  2108  00F88C  00                 	db	0
  2109  00F88D  00                 	db	0
  2110  00F88E  00                 	db	0
  2111  00F88F  00                 	db	0
  2112  00F890  00                 	db	0
  2113  00F891  00                 	db	0
  2114  00F892  00                 	db	0
  2115  00F893  64                 	db	100
  2116  00F894  69                 	db	105
  2117  00F895  73                 	db	115
  2118  00F896  70                 	db	112
  2119  00F897  6C                 	db	108
  2120  00F898  61                 	db	97
  2121  00F899  79                 	db	121
  2122  00F89A  73                 	db	115
  2123  00F89B  20                 	db	32
  2124  00F89C  31                 	db	49
  2125  00F89D  00                 	db	0
  2126  00F89E  00                 	db	0
  2127  00F89F  00                 	db	0
  2128  00F8A0  00                 	db	0
  2129  00F8A1  00                 	db	0
  2130  00F8A2  00                 	db	0
  2131  00F8A3  00                 	db	0
  2132  00F8A4  00                 	db	0
  2133  00F8A5  00                 	db	0
  2134  00F8A6  00                 	db	0
  2135  00F8A7  00                 	db	0
  2136  00F8A8  00                 	db	0
  2137  00F8A9  63                 	db	99
  2138  00F8AA  6F                 	db	111
  2139  00F8AB  6D                 	db	109
  2140  00F8AC  6D                 	db	109
  2141  00F8AD  61                 	db	97
  2142  00F8AE  6E                 	db	110
  2143  00F8AF  64                 	db	100
  2144  00F8B0  73                 	db	115
  2145  00F8B1  20                 	db	32
  2146  00F8B2  32                 	db	50
  2147  00F8B3  00                 	db	0
  2148  00F8B4  00                 	db	0
  2149  00F8B5  00                 	db	0
  2150  00F8B6  00                 	db	0
  2151  00F8B7  00                 	db	0
  2152  00F8B8  00                 	db	0
  2153  00F8B9  00                 	db	0
  2154  00F8BA  00                 	db	0
  2155  00F8BB  00                 	db	0
  2156  00F8BC  00                 	db	0
  2157  00F8BD  00                 	db	0
  2158  00F8BE  00                 	db	0
  2159  00F8BF  64                 	db	100
  2160  00F8C0  69                 	db	105
  2161  00F8C1  73                 	db	115
  2162  00F8C2  70                 	db	112
  2163  00F8C3  6C                 	db	108
  2164  00F8C4  61                 	db	97
  2165  00F8C5  79                 	db	121
  2166  00F8C6  73                 	db	115
  2167  00F8C7  20                 	db	32
  2168  00F8C8  32                 	db	50
  2169  00F8C9  00                 	db	0
  2170  00F8CA  00                 	db	0
  2171  00F8CB  00                 	db	0
  2172  00F8CC  00                 	db	0
  2173  00F8CD  00                 	db	0
  2174  00F8CE  00                 	db	0
  2175  00F8CF  00                 	db	0
  2176  00F8D0  00                 	db	0
  2177  00F8D1  00                 	db	0
  2178  00F8D2  00                 	db	0
  2179  00F8D3  00                 	db	0
  2180  00F8D4  00                 	db	0
  2181  00F8D5  63                 	db	99
  2182  00F8D6  6F                 	db	111
  2183  00F8D7  6D                 	db	109
  2184  00F8D8  6D                 	db	109
  2185  00F8D9  61                 	db	97
  2186  00F8DA  6E                 	db	110
  2187  00F8DB  64                 	db	100
  2188  00F8DC  73                 	db	115
  2189  00F8DD  20                 	db	32
  2190  00F8DE  33                 	db	51
  2191  00F8DF  00                 	db	0
  2192  00F8E0  00                 	db	0
  2193  00F8E1  00                 	db	0
  2194  00F8E2  00                 	db	0
  2195  00F8E3  00                 	db	0
  2196  00F8E4  00                 	db	0
  2197  00F8E5  00                 	db	0
  2198  00F8E6  00                 	db	0
  2199  00F8E7  00                 	db	0
  2200  00F8E8  00                 	db	0
  2201  00F8E9  00                 	db	0
  2202  00F8EA  00                 	db	0
  2203  00F8EB  64                 	db	100
  2204  00F8EC  69                 	db	105
  2205  00F8ED  73                 	db	115
  2206  00F8EE  70                 	db	112
  2207  00F8EF  6C                 	db	108
  2208  00F8F0  61                 	db	97
  2209  00F8F1  79                 	db	121
  2210  00F8F2  73                 	db	115
  2211  00F8F3  20                 	db	32
  2212  00F8F4  33                 	db	51
  2213  00F8F5  00                 	db	0
  2214  00F8F6  00                 	db	0
  2215  00F8F7  00                 	db	0
  2216  00F8F8  00                 	db	0
  2217  00F8F9  00                 	db	0
  2218  00F8FA  00                 	db	0
  2219  00F8FB  00                 	db	0
  2220  00F8FC  00                 	db	0
  2221  00F8FD  00                 	db	0
  2222  00F8FE  00                 	db	0
  2223  00F8FF  00                 	db	0
  2224  00F900  00                 	db	0
  2225  00F901  63                 	db	99
  2226  00F902  6F                 	db	111
  2227  00F903  6D                 	db	109
  2228  00F904  6D                 	db	109
  2229  00F905  61                 	db	97
  2230  00F906  6E                 	db	110
  2231  00F907  64                 	db	100
  2232  00F908  73                 	db	115
  2233  00F909  20                 	db	32
  2234  00F90A  34                 	db	52
  2235  00F90B  00                 	db	0
  2236  00F90C  00                 	db	0
  2237  00F90D  00                 	db	0
  2238  00F90E  00                 	db	0
  2239  00F90F  00                 	db	0
  2240  00F910  00                 	db	0
  2241  00F911  00                 	db	0
  2242  00F912  00                 	db	0
  2243  00F913  00                 	db	0
  2244  00F914  00                 	db	0
  2245  00F915  00                 	db	0
  2246  00F916  00                 	db	0
  2247  00F917  64                 	db	100
  2248  00F918  69                 	db	105
  2249  00F919  73                 	db	115
  2250  00F91A  70                 	db	112
  2251  00F91B  6C                 	db	108
  2252  00F91C  61                 	db	97
  2253  00F91D  79                 	db	121
  2254  00F91E  73                 	db	115
  2255  00F91F  20                 	db	32
  2256  00F920  34                 	db	52
  2257  00F921  00                 	db	0
  2258  00F922  00                 	db	0
  2259  00F923  00                 	db	0
  2260  00F924  00                 	db	0
  2261  00F925  00                 	db	0
  2262  00F926  00                 	db	0
  2263  00F927  00                 	db	0
  2264  00F928  00                 	db	0
  2265  00F929  00                 	db	0
  2266  00F92A  00                 	db	0
  2267  00F92B  00                 	db	0
  2268  00F92C  00                 	db	0
  2269  00F92D                     __end_of_T:
  2270                           	opt callstack 0
  2271  00F92D                     _spin:
  2272                           	opt callstack 0
  2273  00F92D  7C                 	db	124
  2274  00F92E  7C                 	db	124
  2275  00F92F  2F                 	db	47
  2276  00F930  2F                 	db	47
  2277  00F931  2D                 	db	45
  2278  00F932  2D                 	db	45
  2279  00F933  00                 	db	0
  2280  00F934  00                 	db	0
  2281  00F935  00                 	db	0
  2282  00F936  00                 	db	0
  2283  00F937  00                 	db	0
  2284  00F938  00                 	db	0
  2285  00F939  00                 	db	0
  2286  00F93A  00                 	db	0
  2287  00F93B  00                 	db	0
  2288  00F93C  00                 	db	0
  2289  00F93D  00                 	db	0
  2290  00F93E  00                 	db	0
  2291  00F93F  00                 	db	0
  2292  00F940  00                 	db	0
  2293  00F941  7C                 	db	124
  2294  00F942  7C                 	db	124
  2295  00F943  2F                 	db	47
  2296  00F944  2F                 	db	47
  2297  00F945  2D                 	db	45
  2298  00F946  2D                 	db	45
  2299  00F947  5C                 	db	92
  2300  00F948  5C                 	db	92
  2301  00F949  00                 	db	0
  2302  00F94A  00                 	db	0
  2303  00F94B  00                 	db	0
  2304  00F94C  00                 	db	0
  2305  00F94D  00                 	db	0
  2306  00F94E  00                 	db	0
  2307  00F94F  00                 	db	0
  2308  00F950  00                 	db	0
  2309  00F951  00                 	db	0
  2310  00F952  00                 	db	0
  2311  00F953  00                 	db	0
  2312  00F954  00                 	db	0
  2313  00F955  4F                 	db	79
  2314  00F956  4F                 	db	79
  2315  00F957  4F                 	db	79
  2316  00F958  4F                 	db	79
  2317  00F959  4F                 	db	79
  2318  00F95A  4F                 	db	79
  2319  00F95B  2D                 	db	45
  2320  00F95C  2D                 	db	45
  2321  00F95D  5F                 	db	95
  2322  00F95E  5F                 	db	95
  2323  00F95F  2D                 	db	45
  2324  00F960  00                 	db	0
  2325  00F961  00                 	db	0
  2326  00F962  00                 	db	0
  2327  00F963  00                 	db	0
  2328  00F964  00                 	db	0
  2329  00F965  00                 	db	0
  2330  00F966  00                 	db	0
  2331  00F967  00                 	db	0
  2332  00F968  00                 	db	0
  2333  00F969  76                 	db	118
  2334  00F96A  76                 	db	118
  2335  00F96B  3C                 	db	60
  2336  00F96C  3C                 	db	60
  2337  00F96D  5E                 	db	94
  2338  00F96E  5E                 	db	94
  2339  00F96F  3E                 	db	62
  2340  00F970  3E                 	db	62
  2341  00F971  00                 	db	0
  2342  00F972  00                 	db	0
  2343  00F973  00                 	db	0
  2344  00F974  00                 	db	0
  2345  00F975  00                 	db	0
  2346  00F976  00                 	db	0
  2347  00F977  00                 	db	0
  2348  00F978  00                 	db	0
  2349  00F979  00                 	db	0
  2350  00F97A  00                 	db	0
  2351  00F97B  00                 	db	0
  2352  00F97C  00                 	db	0
  2353  00F97D  2E                 	db	46
  2354  00F97E  2E                 	db	46
  2355  00F97F  2A                 	db	42
  2356  00F980  2A                 	db	42
  2357  00F981  78                 	db	120
  2358  00F982  23                 	db	35
  2359  00F983  78                 	db	120
  2360  00F984  23                 	db	35
  2361  00F985  58                 	db	88
  2362  00F986  58                 	db	88
  2363  00F987  7C                 	db	124
  2364  00F988  7C                 	db	124
  2365  00F989  2D                 	db	45
  2366  00F98A  2D                 	db	45
  2367  00F98B  00                 	db	0
  2368  00F98C  00                 	db	0
  2369  00F98D  00                 	db	0
  2370  00F98E  00                 	db	0
  2371  00F98F  00                 	db	0
  2372  00F990  00                 	db	0
  2373  00F991  2E                 	db	46
  2374  00F992  2E                 	db	46
  2375  00F993  6F                 	db	111
  2376  00F994  6F                 	db	111
  2377  00F995  4F                 	db	79
  2378  00F996  4F                 	db	79
  2379  00F997  6F                 	db	111
  2380  00F998  6F                 	db	111
  2381  00F999  00                 	db	0
  2382  00F99A  00                 	db	0
  2383  00F99B  00                 	db	0
  2384  00F99C  00                 	db	0
  2385  00F99D  00                 	db	0
  2386  00F99E  00                 	db	0
  2387  00F99F  00                 	db	0
  2388  00F9A0  00                 	db	0
  2389  00F9A1  00                 	db	0
  2390  00F9A2  00                 	db	0
  2391  00F9A3  00                 	db	0
  2392  00F9A4  00                 	db	0
  2393  00F9A5                     __end_of_spin:
  2394                           	opt callstack 0
  2395  00F9A5  0000               	dw	0
  2396  00F9A7  3F80               	dw	16256
  2397  00F9A9  0000               	dw	0
  2398  00F9AB  3FC0               	dw	16320
  2399  00F9AD                     __end_of_bp:
  2400                           	opt callstack 0
  2401  00F9AD                     ___gmt:
  2402                           	opt callstack 0
  2403  00F9AD  47                 	db	71
  2404  00F9AE  4D                 	db	77
  2405  00F9AF  54                 	db	84
  2406  00F9B0  00                 	db	0
  2407  00F9B1                     __end_of___gmt:
  2408                           	opt callstack 0
  2409  00F9B1  AA00               	dw	43520
  2410  00F9B3  3FB8               	dw	16312
  2411  00F9B5                     __end_of_ivln2_h:
  2412                           	opt callstack 0
  2413  00F9B5  23C6               	dw	9158
  2414  00F9B7  B8F6               	dw	47350
  2415  00F9B9                     __end_of_cp_l:
  2416                           	opt callstack 0
  2417  00F9B9  4000               	dw	16384
  2418  00F9BB  3F76               	dw	16246
  2419  00F9BD                     __end_of_cp_h:
  2420                           	opt callstack 0
  2421  0000                     _IVTADL	set	14493
  2422  0000                     _IVTADH	set	14494
  2423  0000                     _IVTADU	set	14495
  2424  0000                     _CRCDATH	set	14689
  2425  0000                     _CRCDATL	set	14688
  2426  0000                     _CRCCON0bits	set	14696
  2427  0000                     _CRCCON1bits	set	14697
  2428  0000                     _CRCXORL	set	14694
  2429  0000                     _CRCXORH	set	14695
  2430  0000                     _SCANTRIG	set	14717
  2431  0000                     _SCANHADRL	set	14713
  2432  0000                     _SCANHADRH	set	14714
  2433  0000                     _SCANHADRU	set	14715
  2434  0000                     _SCANLADRL	set	14710
  2435  0000                     _SCANLADRH	set	14711
  2436  0000                     _SCANLADRU	set	14712
  2437  0000                     _SCANCON0	set	14716
  2438  0000                     _CRCACCH	set	14691
  2439  0000                     _CRCACCL	set	14690
  2440  0000                     _CRCCON1	set	14697
  2441  0000                     _CRCCON0	set	14696
  2442  0000                     _PIR6bits	set	14758
  2443  0000                     _PIR4bits	set	14756
  2444  0000                     _PIE8bits	set	14744
  2445  0000                     _PIR8bits	set	14760
  2446  0000                     _PIR0bits	set	14752
  2447  0000                     _NVMCON2	set	14822
  2448  0000                     _NVMDAT	set	14819
  2449  0000                     _NVMADRL	set	14816
  2450  0000                     _NVMADRH	set	14817
  2451  0000                     _NVMCON1bits	set	14821
  2452  0000                     _SCANPR	set	14839
  2453  0000                     _DMA2PR	set	14836
  2454  0000                     _DMA1PR	set	14835
  2455  0000                     _MAINPR	set	14834
  2456  0000                     _ISRPR	set	14833
  2457  0000                     _PIE2bits	set	14738
  2458  0000                     _PIR2bits	set	14754
  2459  0000                     _PIE9bits	set	14745
  2460  0000                     _PIR9bits	set	14761
  2461  0000                     _PIE6bits	set	14742
  2462  0000                     _PIE3bits	set	14739
  2463  0000                     _PMD7	set	14791
  2464  0000                     _PMD6	set	14790
  2465  0000                     _PMD5	set	14789
  2466  0000                     _PMD4	set	14788
  2467  0000                     _PMD3	set	14787
  2468  0000                     _PMD2	set	14786
  2469  0000                     _PMD1	set	14785
  2470  0000                     _PMD0	set	14784
  2471  0000                     _OSCTUNE	set	14814
  2472  0000                     _OSCFRQ	set	14815
  2473  0000                     _OSCEN	set	14813
  2474  0000                     _OSCCON3	set	14811
  2475  0000                     _OSCCON1	set	14809
  2476  0000                     _IPR8bits	set	14728
  2477  0000                     _IPR9bits	set	14729
  2478  0000                     _IPR5bits	set	14725
  2479  0000                     _IPR1bits	set	14721
  2480  0000                     _IPR3bits	set	14723
  2481  0000                     _IPR6bits	set	14726
  2482  0000                     _IPR2bits	set	14722
  2483  0000                     _PIE5bits	set	14741
  2484  0000                     _PIE1bits	set	14737
  2485  0000                     _PIR5bits	set	14757
  2486  0000                     _PIR1bits	set	14753
  2487  0000                     _PLLR	set	118496
  2488  0000                     _SPI1SDIPPS	set	15071
  2489  0000                     _U1RXPPS	set	15077
  2490  0000                     _RC6PPS	set	14870
  2491  0000                     _RC5PPS	set	14869
  2492  0000                     _INT1PPS	set	15041
  2493  0000                     _RD1PPS	set	14873
  2494  0000                     _INT0PPS	set	15040
  2495  0000                     _RC3PPS	set	14867
  2496  0000                     _RB6PPS	set	14862
  2497  0000                     _SPI1SCKPPS	set	15070
  2498  0000                     _U2RXPPS	set	15080
  2499  0000                     _SLRCONF	set	14995
  2500  0000                     _SLRCONE	set	14979
  2501  0000                     _SLRCOND	set	14963
  2502  0000                     _SLRCONC	set	14947
  2503  0000                     _SLRCONB	set	14931
  2504  0000                     _SLRCONA	set	14915
  2505  0000                     _ODCOND	set	14962
  2506  0000                     _ODCONC	set	14946
  2507  0000                     _ODCONB	set	14930
  2508  0000                     _ODCONA	set	14914
  2509  0000                     _ODCONF	set	14994
  2510  0000                     _ODCONE	set	14978
  2511  0000                     _WPUC	set	14945
  2512  0000                     _WPUA	set	14913
  2513  0000                     _WPUB	set	14929
  2514  0000                     _WPUE	set	14977
  2515  0000                     _WPUF	set	14993
  2516  0000                     _WPUD	set	14961
  2517  0000                     _ANSELA	set	14912
  2518  0000                     _ANSELF	set	14992
  2519  0000                     _ANSELE	set	14976
  2520  0000                     _ANSELB	set	14928
  2521  0000                     _ANSELC	set	14944
  2522  0000                     _ANSELD	set	14960
  2523  0000                     _DMA2SSA	set	15321
  2524  0000                     _DMA1SSA	set	15353
  2525  0000                     _DMA2DSZ	set	15310
  2526  0000                     _DMA2SSZ	set	15319
  2527  0000                     _DMA2DSA	set	15312
  2528  0000                     _DMA1DSZ	set	15342
  2529  0000                     _DMA1SSZ	set	15351
  2530  0000                     _DMA1DSA	set	15344
  2531  0000                     _DMA2CON0bits	set	15324
  2532  0000                     _DMA2CON1bits	set	15325
  2533  0000                     _DMA1CON0bits	set	15356
  2534  0000                     _DMA1CON1bits	set	15357
  2535  0000                     _DMA2CON0	set	15324
  2536  0000                     _DMA2AIRQ	set	15326
  2537  0000                     _DMA2SIRQ	set	15327
  2538  0000                     _DMA2CON1	set	15325
  2539  0000                     _DMA1CON0	set	15356
  2540  0000                     _DMA1AIRQ	set	15358
  2541  0000                     _DMA1SIRQ	set	15359
  2542  0000                     _DMA1CON1	set	15357
  2543  0000                     _CLKRCON	set	15589
  2544  0000                     _CLKRCLK	set	15590
  2545  0000                     _SPI1CON1bits	set	15637
  2546  0000                     _SPI1STATUSbits	set	15639
  2547  0000                     _SPI1INTFbits	set	15642
  2548  0000                     _SPI1CON0bits	set	15636
  2549  0000                     _SPI1RXB	set	15632
  2550  0000                     _SPI1TXB	set	15633
  2551  0000                     _SPI1TCNTL	set	15634
  2552  0000                     _SPI1CON0	set	15636
  2553  0000                     _SPI1CLK	set	15644
  2554  0000                     _SPI1BAUD	set	15641
  2555  0000                     _SPI1CON2	set	15638
  2556  0000                     _SPI1CON1	set	15637
  2557  0000                     _U2RXB	set	15824
  2558  0000                     _U2TXB	set	15826
  2559  0000                     _U2ERRIE	set	15842
  2560  0000                     _U2ERRIR	set	15841
  2561  0000                     _U2UIR	set	15840
  2562  0000                     _U2FIFO	set	15839
  2563  0000                     _U2BRGH	set	15838
  2564  0000                     _U2BRGL	set	15837
  2565  0000                     _U2CON2	set	15836
  2566  0000                     _U2CON1	set	15835
  2567  0000                     _U2CON0	set	15834
  2568  0000                     _U2P3L	set	15832
  2569  0000                     _U2P2L	set	15830
  2570  0000                     _U2P1L	set	15828
  2571  0000                     _U1RXB	set	15848
  2572  0000                     _U1ERRIE	set	15866
  2573  0000                     _U1ERRIR	set	15865
  2574  0000                     _U1UIR	set	15864
  2575  0000                     _U1FIFO	set	15863
  2576  0000                     _U1BRGH	set	15862
  2577  0000                     _U1BRGL	set	15861
  2578  0000                     _U1CON2	set	15860
  2579  0000                     _U1CON1	set	15859
  2580  0000                     _U1CON0	set	15858
  2581  0000                     _U1P3H	set	15857
  2582  0000                     _U1P3L	set	15856
  2583  0000                     _U1P2H	set	15855
  2584  0000                     _U1P2L	set	15854
  2585  0000                     _U1P1H	set	15853
  2586  0000                     _U1P1L	set	15852
  2587  0000                     _FVRCON	set	16065
  2588  0000                     _ADFLTRL	set	16102
  2589  0000                     _ADFLTRH	set	16103
  2590  0000                     _ADCON0bits	set	16120
  2591  0000                     _ADCON0	set	16120
  2592  0000                     _ADCLK	set	16127
  2593  0000                     _ADACT	set	16126
  2594  0000                     _ADREF	set	16125
  2595  0000                     _ADSTAT	set	16124
  2596  0000                     _ADCON3	set	16123
  2597  0000                     _ADCON2	set	16122
  2598  0000                     _ADCON1	set	16121
  2599  0000                     _ADPREH	set	16119
  2600  0000                     _ADPREL	set	16118
  2601  0000                     _ADCAP	set	16117
  2602  0000                     _ADACQH	set	16116
  2603  0000                     _ADACQL	set	16115
  2604  0000                     _ADPCH	set	16113
  2605  0000                     _ADRPT	set	16108
  2606  0000                     _ADACCU	set	16106
  2607  0000                     _ADSTPTH	set	16101
  2608  0000                     _ADSTPTL	set	16100
  2609  0000                     _ADUTHH	set	16097
  2610  0000                     _ADUTHL	set	16096
  2611  0000                     _ADLTHH	set	16095
  2612  0000                     _ADLTHL	set	16094
  2613  0000                     _CCPTMRS1bits	set	16223
  2614  0000                     _PORTDbits	set	16333
  2615  0000                     _PORTFbits	set	16335
  2616  0000                     _LATFbits	set	16319
  2617  0000                     _LATCbits	set	16316
  2618  0000                     _LATDbits	set	16317
  2619  0000                     _PORTBbits	set	16331
  2620  0000                     _T3CONbits	set	16294
  2621  0000                     _T3CON	set	16294
  2622  0000                     _TMR3L	set	16292
  2623  0000                     _TMR3H	set	16293
  2624  0000                     _T3CLK	set	16297
  2625  0000                     _T3GATE	set	16296
  2626  0000                     _T3GCON	set	16295
  2627  0000                     _T2CON	set	16300
  2628  0000                     _T2TMR	set	16298
  2629  0000                     _T2PR	set	16299
  2630  0000                     _T2RST	set	16303
  2631  0000                     _T2HLT	set	16301
  2632  0000                     _T2CLKCON	set	16302
  2633  0000                     _PWM8DCL	set	16224
  2634  0000                     _PWM8DCH	set	16225
  2635  0000                     _PWM8CON	set	16226
  2636  0000                     _LATEbits	set	16318
  2637  0000                     _T5CONbits	set	16282
  2638  0000                     _T5CON	set	16282
  2639  0000                     _TMR5L	set	16280
  2640  0000                     _TMR5H	set	16281
  2641  0000                     _T5CLK	set	16285
  2642  0000                     _T5GATE	set	16284
  2643  0000                     _T5GCON	set	16283
  2644  0000                     _T6CON	set	16276
  2645  0000                     _T6TMR	set	16274
  2646  0000                     _T6PR	set	16275
  2647  0000                     _T6RST	set	16279
  2648  0000                     _T6HLT	set	16277
  2649  0000                     _T6CLKCON	set	16278
  2650  0000                     _TRISD	set	16325
  2651  0000                     _TRISC	set	16324
  2652  0000                     _TRISB	set	16323
  2653  0000                     _TRISA	set	16322
  2654  0000                     _TRISF	set	16327
  2655  0000                     _TRISE	set	16326
  2656  0000                     _LATC	set	16316
  2657  0000                     _LATB	set	16315
  2658  0000                     _LATF	set	16319
  2659  0000                     _LATA	set	16314
  2660  0000                     _LATD	set	16317
  2661  0000                     _LATE	set	16318
  2662  0000                     _IVTLOCKbits	set	16340
  2663  0000                     _IVTLOCK	set	16340
  2664  0000                     _INTCON0bits	set	16338
  2665  0000                     _GIE	set	130711
  2666  00F9BD                     STR_103:
  2667                           
  2668                           ; BSR set to: 57
  2669  00F9BD  20                 	db	32
  2670  00F9BE  25                 	db	37
  2671  00F9BF  63                 	db	99	;'c'
  2672  00F9C0  20                 	db	32
  2673  00F9C1  2C                 	db	44
  2674  00F9C2  25                 	db	37
  2675  00F9C3  6C                 	db	108	;'l'
  2676  00F9C4  75                 	db	117	;'u'
  2677  00F9C5  2C                 	db	44
  2678  00F9C6  25                 	db	37
  2679  00F9C7  34                 	db	52	;'4'
  2680  00F9C8  2E                 	db	46
  2681  00F9C9  34                 	db	52	;'4'
  2682  00F9CA  66                 	db	102	;'f'
  2683  00F9CB  2C                 	db	44
  2684  00F9CC  25                 	db	37
  2685  00F9CD  34                 	db	52	;'4'
  2686  00F9CE  2E                 	db	46
  2687  00F9CF  34                 	db	52	;'4'
  2688  00F9D0  66                 	db	102	;'f'
  2689  00F9D1  2C                 	db	44
  2690  00F9D2  25                 	db	37
  2691  00F9D3  34                 	db	52	;'4'
  2692  00F9D4  2E                 	db	46
  2693  00F9D5  34                 	db	52	;'4'
  2694  00F9D6  66                 	db	102	;'f'
  2695  00F9D7  2C                 	db	44
  2696  00F9D8  25                 	db	37
  2697  00F9D9  34                 	db	52	;'4'
  2698  00F9DA  2E                 	db	46
  2699  00F9DB  34                 	db	52	;'4'
  2700  00F9DC  66                 	db	102	;'f'
  2701  00F9DD  2C                 	db	44
  2702  00F9DE  25                 	db	37
  2703  00F9DF  34                 	db	52	;'4'
  2704  00F9E0  2E                 	db	46
  2705  00F9E1  34                 	db	52	;'4'
  2706  00F9E2  66                 	db	102	;'f'
  2707  00F9E3  2C                 	db	44
  2708  00F9E4  25                 	db	37
  2709  00F9E5  34                 	db	52	;'4'
  2710  00F9E6  2E                 	db	46
  2711  00F9E7  33                 	db	51	;'3'
  2712  00F9E8  66                 	db	102	;'f'
  2713  00F9E9  2C                 	db	44
  2714  00F9EA  25                 	db	37
  2715  00F9EB  34                 	db	52	;'4'
  2716  00F9EC  2E                 	db	46
  2717  00F9ED  33                 	db	51	;'3'
  2718  00F9EE  66                 	db	102	;'f'
  2719  00F9EF  2C                 	db	44
  2720  00F9F0  25                 	db	37
  2721  00F9F1  34                 	db	52	;'4'
  2722  00F9F2  2E                 	db	46
  2723  00F9F3  33                 	db	51	;'3'
  2724  00F9F4  66                 	db	102	;'f'
  2725  00F9F5  2C                 	db	44
  2726  00F9F6  25                 	db	37
  2727  00F9F7  34                 	db	52	;'4'
  2728  00F9F8  2E                 	db	46
  2729  00F9F9  33                 	db	51	;'3'
  2730  00F9FA  66                 	db	102	;'f'
  2731  00F9FB  2C                 	db	44
  2732  00F9FC  25                 	db	37
  2733  00F9FD  34                 	db	52	;'4'
  2734  00F9FE  2E                 	db	46
  2735  00F9FF  33                 	db	51	;'3'
  2736  00FA00  66                 	db	102	;'f'
  2737  00FA01  2C                 	db	44
  2738  00FA02  25                 	db	37
  2739  00FA03  34                 	db	52	;'4'
  2740  00FA04  2E                 	db	46
  2741  00FA05  33                 	db	51	;'3'
  2742  00FA06  66                 	db	102	;'f'
  2743  00FA07  2C                 	db	44
  2744  00FA08  25                 	db	37
  2745  00FA09  64                 	db	100	;'d'
  2746  00FA0A  2C                 	db	44
  2747  00FA0B  25                 	db	37
  2748  00FA0C  64                 	db	100	;'d'
  2749  00FA0D  2C                 	db	44
  2750  00FA0E  25                 	db	37
  2751  00FA0F  32                 	db	50	;'2'
  2752  00FA10  2E                 	db	46
  2753  00FA11  36                 	db	54	;'6'
  2754  00FA12  66                 	db	102	;'f'
  2755  00FA13  2C                 	db	44
  2756  00FA14  25                 	db	37
  2757  00FA15  34                 	db	52	;'4'
  2758  00FA16  2E                 	db	46
  2759  00FA17  33                 	db	51	;'3'
  2760  00FA18  66                 	db	102	;'f'
  2761  00FA19  2C                 	db	44
  2762  00FA1A  25                 	db	37
  2763  00FA1B  64                 	db	100	;'d'
  2764  00FA1C  2C                 	db	44
  2765  00FA1D  25                 	db	37
  2766  00FA1E  64                 	db	100	;'d'
  2767  00FA1F  2C                 	db	44
  2768  00FA20  25                 	db	37
  2769  00FA21  6C                 	db	108	;'l'
  2770  00FA22  75                 	db	117	;'u'
  2771  00FA23  2C                 	db	44
  2772  00FA24  25                 	db	37
  2773  00FA25  6C                 	db	108	;'l'
  2774  00FA26  75                 	db	117	;'u'
  2775  00FA27  2C                 	db	44
  2776  00FA28  25                 	db	37
  2777  00FA29  34                 	db	52	;'4'
  2778  00FA2A  2E                 	db	46
  2779  00FA2B  33                 	db	51	;'3'
  2780  00FA2C  66                 	db	102	;'f'
  2781  00FA2D  2C                 	db	44
  2782  00FA2E  25                 	db	37
  2783  00FA2F  34                 	db	52	;'4'
  2784  00FA30  2E                 	db	46
  2785  00FA31  33                 	db	51	;'3'
  2786  00FA32  66                 	db	102	;'f'
  2787  00FA33  2C                 	db	44
  2788  00FA34  25                 	db	37
  2789  00FA35  34                 	db	52	;'4'
  2790  00FA36  2E                 	db	46
  2791  00FA37  33                 	db	51	;'3'
  2792  00FA38  66                 	db	102	;'f'
  2793  00FA39  0D                 	db	13
  2794  00FA3A  0A                 	db	10
  2795  00FA3B  00                 	db	0
  2796  00FA3C                     STR_141:
  2797                           
  2798                           ; BSR set to: 57
  2799  00FA3C  4A                 	db	74	;'J'
  2800  00FA3D  61                 	db	97	;'a'
  2801  00FA3E  6E                 	db	110	;'n'
  2802  00FA3F  46                 	db	70	;'F'
  2803  00FA40  65                 	db	101	;'e'
  2804  00FA41  62                 	db	98	;'b'
  2805  00FA42  4D                 	db	77	;'M'
  2806  00FA43  61                 	db	97	;'a'
  2807  00FA44  72                 	db	114	;'r'
  2808  00FA45  41                 	db	65	;'A'
  2809  00FA46  70                 	db	112	;'p'
  2810  00FA47  72                 	db	114	;'r'
  2811  00FA48  4D                 	db	77	;'M'
  2812  00FA49  61                 	db	97	;'a'
  2813  00FA4A  79                 	db	121	;'y'
  2814  00FA4B  4A                 	db	74	;'J'
  2815  00FA4C  75                 	db	117	;'u'
  2816  00FA4D  6E                 	db	110	;'n'
  2817  00FA4E  4A                 	db	74	;'J'
  2818  00FA4F  75                 	db	117	;'u'
  2819  00FA50  6C                 	db	108	;'l'
  2820  00FA51  41                 	db	65	;'A'
  2821  00FA52  75                 	db	117	;'u'
  2822  00FA53  67                 	db	103	;'g'
  2823  00FA54  53                 	db	83	;'S'
  2824  00FA55  65                 	db	101	;'e'
  2825  00FA56  70                 	db	112	;'p'
  2826  00FA57  4F                 	db	79	;'O'
  2827  00FA58  63                 	db	99	;'c'
  2828  00FA59  74                 	db	116	;'t'
  2829  00FA5A  4E                 	db	78	;'N'
  2830  00FA5B  6F                 	db	111	;'o'
  2831  00FA5C  76                 	db	118	;'v'
  2832  00FA5D  44                 	db	68	;'D'
  2833  00FA5E  65                 	db	101	;'e'
  2834  00FA5F  63                 	db	99	;'c'
  2835  00FA60  00                 	db	0
  2836  00FA61                     STR_45:
  2837                           
  2838                           ; BSR set to: 57
  2839  00FA61  53                 	db	83	;'S'
  2840  00FA62  25                 	db	37
  2841  00FA63  63                 	db	99	;'c'
  2842  00FA64  43                 	db	67	;'C'
  2843  00FA65  20                 	db	32
  2844  00FA66  25                 	db	37
  2845  00FA67  64                 	db	100	;'d'
  2846  00FA68  20                 	db	32
  2847  00FA69  52                 	db	82	;'R'
  2848  00FA6A  55                 	db	85	;'U'
  2849  00FA6B  4E                 	db	78	;'N'
  2850  00FA6C  20                 	db	32
  2851  00FA6D  25                 	db	37
  2852  00FA6E  64                 	db	100	;'d'
  2853  00FA6F  20                 	db	32
  2854  00FA70  56                 	db	86	;'V'
  2855  00FA71  25                 	db	37
  2856  00FA72  32                 	db	50	;'2'
  2857  00FA73  2E                 	db	46
  2858  00FA74  32                 	db	50	;'2'
  2859  00FA75  66                 	db	102	;'f'
  2860  00FA76  20                 	db	32
  2861  00FA77  20                 	db	32
  2862  00FA78  20                 	db	32
  2863  00FA79  20                 	db	32
  2864  00FA7A  20                 	db	32
  2865  00FA7B  20                 	db	32
  2866  00FA7C  20                 	db	32
  2867  00FA7D  00                 	db	0
  2868  00FA7E                     STR_78:
  2869                           
  2870                           ; BSR set to: 57
  2871  00FA7E  25                 	db	37
  2872  00FA7F  64                 	db	100	;'d'
  2873  00FA80  20                 	db	32
  2874  00FA81  25                 	db	37
  2875  00FA82  64                 	db	100	;'d'
  2876  00FA83  20                 	db	32
  2877  00FA84  25                 	db	37
  2878  00FA85  64                 	db	100	;'d'
  2879  00FA86  20                 	db	32
  2880  00FA87  25                 	db	37
  2881  00FA88  64                 	db	100	;'d'
  2882  00FA89  20                 	db	32
  2883  00FA8A  20                 	db	32
  2884  00FA8B  20                 	db	32
  2885  00FA8C  20                 	db	32
  2886  00FA8D  20                 	db	32
  2887  00FA8E  20                 	db	32
  2888  00FA8F  20                 	db	32
  2889  00FA90  20                 	db	32
  2890  00FA91  20                 	db	32
  2891  00FA92  20                 	db	32
  2892  00FA93  20                 	db	32
  2893  00FA94  20                 	db	32
  2894  00FA95  20                 	db	32
  2895  00FA96  20                 	db	32
  2896  00FA97  20                 	db	32
  2897  00FA98  20                 	db	32
  2898  00FA99  00                 	db	0
  2899  00FA9A                     
  2900                           ; BSR set to: 57
  2901  00FA9A  20                 	db	32
  2902  00FA9B  4D                 	db	77	;'M'
  2903  00FA9C  65                 	db	101	;'e'
  2904  00FA9D  73                 	db	115	;'s'
  2905  00FA9E  67                 	db	103	;'g'
  2906  00FA9F  20                 	db	32
  2907  00FAA0  25                 	db	37
  2908  00FAA1  64                 	db	100	;'d'
  2909  00FAA2  20                 	db	32
  2910  00FAA3  53                 	db	83	;'S'
  2911  00FAA4  74                 	db	116	;'t'
  2912  00FAA5  61                 	db	97	;'a'
  2913  00FAA6  63                 	db	99	;'c'
  2914  00FAA7  6B                 	db	107	;'k'
  2915  00FAA8  20                 	db	32
  2916  00FAA9  25                 	db	37
  2917  00FAAA  64                 	db	100	;'d'
  2918  00FAAB  20                 	db	32
  2919  00FAAC  20                 	db	32
  2920  00FAAD  20                 	db	32
  2921  00FAAE  20                 	db	32
  2922  00FAAF  20                 	db	32
  2923  00FAB0  20                 	db	32
  2924  00FAB1  20                 	db	32
  2925  00FAB2  20                 	db	32
  2926  00FAB3  00                 	db	0
  2927  00FAB4                     STR_22:
  2928                           
  2929                           ; BSR set to: 57
  2930  00FAB4  52                 	db	82	;'R'
  2931  00FAB5  31                 	db	49	;'1'
  2932  00FAB6  20                 	db	32
  2933  00FAB7  25                 	db	37
  2934  00FAB8  32                 	db	50	;'2'
  2935  00FAB9  2E                 	db	46
  2936  00FABA  33                 	db	51	;'3'
  2937  00FABB  66                 	db	102	;'f'
  2938  00FABC  20                 	db	32
  2939  00FABD  25                 	db	37
  2940  00FABE  33                 	db	51	;'3'
  2941  00FABF  2E                 	db	46
  2942  00FAC0  34                 	db	52	;'4'
  2943  00FAC1  66                 	db	102	;'f'
  2944  00FAC2  20                 	db	32
  2945  00FAC3  20                 	db	32
  2946  00FAC4  20                 	db	32
  2947  00FAC5  20                 	db	32
  2948  00FAC6  20                 	db	32
  2949  00FAC7  20                 	db	32
  2950  00FAC8  20                 	db	32
  2951  00FAC9  20                 	db	32
  2952  00FACA  20                 	db	32
  2953  00FACB  20                 	db	32
  2954  00FACC  20                 	db	32
  2955  00FACD  00                 	db	0
  2956  00FACE                     STR_23:
  2957                           
  2958                           ; BSR set to: 57
  2959  00FACE  52                 	db	82	;'R'
  2960  00FACF  32                 	db	50	;'2'
  2961  00FAD0  20                 	db	32
  2962  00FAD1  25                 	db	37
  2963  00FAD2  32                 	db	50	;'2'
  2964  00FAD3  2E                 	db	46
  2965  00FAD4  33                 	db	51	;'3'
  2966  00FAD5  66                 	db	102	;'f'
  2967  00FAD6  20                 	db	32
  2968  00FAD7  25                 	db	37
  2969  00FAD8  33                 	db	51	;'3'
  2970  00FAD9  2E                 	db	46
  2971  00FADA  34                 	db	52	;'4'
  2972  00FADB  66                 	db	102	;'f'
  2973  00FADC  20                 	db	32
  2974  00FADD  20                 	db	32
  2975  00FADE  20                 	db	32
  2976  00FADF  20                 	db	32
  2977  00FAE0  20                 	db	32
  2978  00FAE1  20                 	db	32
  2979  00FAE2  20                 	db	32
  2980  00FAE3  20                 	db	32
  2981  00FAE4  20                 	db	32
  2982  00FAE5  20                 	db	32
  2983  00FAE6  20                 	db	32
  2984  00FAE7  00                 	db	0
  2985  00FAE8                     STR_13:
  2986                           
  2987                           ; BSR set to: 57
  2988  00FAE8  53                 	db	83	;'S'
  2989  00FAE9  20                 	db	32
  2990  00FAEA  53                 	db	83	;'S'
  2991  00FAEB  25                 	db	37
  2992  00FAEC  63                 	db	99	;'c'
  2993  00FAED  43                 	db	67	;'C'
  2994  00FAEE  20                 	db	32
  2995  00FAEF  25                 	db	37
  2996  00FAF0  64                 	db	100	;'d'
  2997  00FAF1  20                 	db	32
  2998  00FAF2  25                 	db	37
  2999  00FAF3  32                 	db	50	;'2'
  3000  00FAF4  2E                 	db	46
  3001  00FAF5  34                 	db	52	;'4'
  3002  00FAF6  66                 	db	102	;'f'
  3003  00FAF7  20                 	db	32
  3004  00FAF8  20                 	db	32
  3005  00FAF9  20                 	db	32
  3006  00FAFA  20                 	db	32
  3007  00FAFB  20                 	db	32
  3008  00FAFC  20                 	db	32
  3009  00FAFD  20                 	db	32
  3010  00FAFE  20                 	db	32
  3011  00FAFF  20                 	db	32
  3012  00FB00  20                 	db	32
  3013  00FB01  00                 	db	0
  3014  00FB02                     STR_46:
  3015                           
  3016                           ; BSR set to: 57
  3017  00FB02  45                 	db	69	;'E'
  3018  00FB03  53                 	db	83	;'S'
  3019  00FB04  52                 	db	82	;'R'
  3020  00FB05  20                 	db	32
  3021  00FB06  20                 	db	32
  3022  00FB07  25                 	db	37
  3023  00FB08  32                 	db	50	;'2'
  3024  00FB09  2E                 	db	46
  3025  00FB0A  36                 	db	54	;'6'
  3026  00FB0B  66                 	db	102	;'f'
  3027  00FB0C  20                 	db	32
  3028  00FB0D  20                 	db	32
  3029  00FB0E  20                 	db	32
  3030  00FB0F  20                 	db	32
  3031  00FB10  20                 	db	32
  3032  00FB11  20                 	db	32
  3033  00FB12  20                 	db	32
  3034  00FB13  20                 	db	32
  3035  00FB14  20                 	db	32
  3036  00FB15  20                 	db	32
  3037  00FB16  20                 	db	32
  3038  00FB17  20                 	db	32
  3039  00FB18  00                 	db	0
  3040  00FB19                     STR_43:
  3041                           
  3042                           ; BSR set to: 57
  3043  00FB19  42                 	db	66	;'B'
  3044  00FB1A  41                 	db	65	;'A'
  3045  00FB1B  54                 	db	84	;'T'
  3046  00FB1C  54                 	db	84	;'T'
  3047  00FB1D  20                 	db	32
  3048  00FB1E  50                 	db	80	;'P'
  3049  00FB1F  57                 	db	87	;'W'
  3050  00FB20  52                 	db	82	;'R'
  3051  00FB21  20                 	db	32
  3052  00FB22  25                 	db	37
  3053  00FB23  33                 	db	51	;'3'
  3054  00FB24  2E                 	db	46
  3055  00FB25  32                 	db	50	;'2'
  3056  00FB26  66                 	db	102	;'f'
  3057  00FB27  20                 	db	32
  3058  00FB28  20                 	db	32
  3059  00FB29  20                 	db	32
  3060  00FB2A  20                 	db	32
  3061  00FB2B  20                 	db	32
  3062  00FB2C  20                 	db	32
  3063  00FB2D  20                 	db	32
  3064  00FB2E  20                 	db	32
  3065  00FB2F  00                 	db	0
  3066  00FB30                     STR_47:
  3067                           
  3068                           ; BSR set to: 57
  3069  00FB30  52                 	db	82	;'R'
  3070  00FB31  31                 	db	49	;'1'
  3071  00FB32  20                 	db	32
  3072  00FB33  25                 	db	37
  3073  00FB34  32                 	db	50	;'2'
  3074  00FB35  2E                 	db	46
  3075  00FB36  33                 	db	51	;'3'
  3076  00FB37  66                 	db	102	;'f'
  3077  00FB38  20                 	db	32
  3078  00FB39  25                 	db	37
  3079  00FB3A  33                 	db	51	;'3'
  3080  00FB3B  2E                 	db	46
  3081  00FB3C  34                 	db	52	;'4'
  3082  00FB3D  66                 	db	102	;'f'
  3083  00FB3E  20                 	db	32
  3084  00FB3F  20                 	db	32
  3085  00FB40  20                 	db	32
  3086  00FB41  20                 	db	32
  3087  00FB42  20                 	db	32
  3088  00FB43  20                 	db	32
  3089  00FB44  20                 	db	32
  3090  00FB45  20                 	db	32
  3091  00FB46  00                 	db	0
  3092  00FB47                     STR_48:
  3093                           
  3094                           ; BSR set to: 57
  3095  00FB47  52                 	db	82	;'R'
  3096  00FB48  32                 	db	50	;'2'
  3097  00FB49  20                 	db	32
  3098  00FB4A  25                 	db	37
  3099  00FB4B  32                 	db	50	;'2'
  3100  00FB4C  2E                 	db	46
  3101  00FB4D  33                 	db	51	;'3'
  3102  00FB4E  66                 	db	102	;'f'
  3103  00FB4F  20                 	db	32
  3104  00FB50  25                 	db	37
  3105  00FB51  33                 	db	51	;'3'
  3106  00FB52  2E                 	db	46
  3107  00FB53  34                 	db	52	;'4'
  3108  00FB54  66                 	db	102	;'f'
  3109  00FB55  20                 	db	32
  3110  00FB56  20                 	db	32
  3111  00FB57  20                 	db	32
  3112  00FB58  20                 	db	32
  3113  00FB59  20                 	db	32
  3114  00FB5A  20                 	db	32
  3115  00FB5B  20                 	db	32
  3116  00FB5C  20                 	db	32
  3117  00FB5D  00                 	db	0
  3118  00FB5E                     STR_44:
  3119                           
  3120                           ; BSR set to: 57
  3121  00FB5E  42                 	db	66	;'B'
  3122  00FB5F  41                 	db	65	;'A'
  3123  00FB60  48                 	db	72	;'H'
  3124  00FB61  20                 	db	32
  3125  00FB62  25                 	db	37
  3126  00FB63  33                 	db	51	;'3'
  3127  00FB64  2E                 	db	46
  3128  00FB65  32                 	db	50	;'2'
  3129  00FB66  66                 	db	102	;'f'
  3130  00FB67  20                 	db	32
  3131  00FB68  50                 	db	80	;'P'
  3132  00FB69  25                 	db	37
  3133  00FB6A  33                 	db	51	;'3'
  3134  00FB6B  2E                 	db	46
  3135  00FB6C  32                 	db	50	;'2'
  3136  00FB6D  66                 	db	102	;'f'
  3137  00FB6E  20                 	db	32
  3138  00FB6F  20                 	db	32
  3139  00FB70  20                 	db	32
  3140  00FB71  20                 	db	32
  3141  00FB72  20                 	db	32
  3142  00FB73  20                 	db	32
  3143  00FB74  00                 	db	0
  3144  00FB75                     STR_140:
  3145                           
  3146                           ; BSR set to: 57
  3147  00FB75  53                 	db	83	;'S'
  3148  00FB76  75                 	db	117	;'u'
  3149  00FB77  6E                 	db	110	;'n'
  3150  00FB78  4D                 	db	77	;'M'
  3151  00FB79  6F                 	db	111	;'o'
  3152  00FB7A  6E                 	db	110	;'n'
  3153  00FB7B  54                 	db	84	;'T'
  3154  00FB7C  75                 	db	117	;'u'
  3155  00FB7D  65                 	db	101	;'e'
  3156  00FB7E  57                 	db	87	;'W'
  3157  00FB7F  65                 	db	101	;'e'
  3158  00FB80  64                 	db	100	;'d'
  3159  00FB81  54                 	db	84	;'T'
  3160  00FB82  68                 	db	104	;'h'
  3161  00FB83  75                 	db	117	;'u'
  3162  00FB84  46                 	db	70	;'F'
  3163  00FB85  72                 	db	114	;'r'
  3164  00FB86  69                 	db	105	;'i'
  3165  00FB87  53                 	db	83	;'S'
  3166  00FB88  61                 	db	97	;'a'
  3167  00FB89  74                 	db	116	;'t'
  3168  00FB8A  00                 	db	0
  3169  00FB8B                     STR_16:
  3170                           
  3171                           ; BSR set to: 57
  3172  00FB8B  20                 	db	32
  3173  00FB8C  20                 	db	32
  3174  00FB8D  20                 	db	32
  3175  00FB8E  20                 	db	32
  3176  00FB8F  20                 	db	32
  3177  00FB90  20                 	db	32
  3178  00FB91  20                 	db	32
  3179  00FB92  20                 	db	32
  3180  00FB93  20                 	db	32
  3181  00FB94  20                 	db	32
  3182  00FB95  20                 	db	32
  3183  00FB96  20                 	db	32
  3184  00FB97  20                 	db	32
  3185  00FB98  20                 	db	32
  3186  00FB99  20                 	db	32
  3187  00FB9A  20                 	db	32
  3188  00FB9B  20                 	db	32
  3189  00FB9C  20                 	db	32
  3190  00FB9D  20                 	db	32
  3191  00FB9E  20                 	db	32
  3192  00FB9F  20                 	db	32
  3193  00FBA0  00                 	db	0
  3194  00FBA1                     STR_21:
  3195                           
  3196                           ; BSR set to: 57
  3197  00FBA1  45                 	db	69	;'E'
  3198  00FBA2  53                 	db	83	;'S'
  3199  00FBA3  52                 	db	82	;'R'
  3200  00FBA4  20                 	db	32
  3201  00FBA5  20                 	db	32
  3202  00FBA6  25                 	db	37
  3203  00FBA7  32                 	db	50	;'2'
  3204  00FBA8  2E                 	db	46
  3205  00FBA9  36                 	db	54	;'6'
  3206  00FBAA  66                 	db	102	;'f'
  3207  00FBAB  20                 	db	32
  3208  00FBAC  20                 	db	32
  3209  00FBAD  20                 	db	32
  3210  00FBAE  20                 	db	32
  3211  00FBAF  20                 	db	32
  3212  00FBB0  20                 	db	32
  3213  00FBB1  20                 	db	32
  3214  00FBB2  20                 	db	32
  3215  00FBB3  20                 	db	32
  3216  00FBB4  20                 	db	32
  3217  00FBB5  20                 	db	32
  3218  00FBB6  00                 	db	0
  3219  00FBB7                     STR_14:
  3220                           
  3221                           ; BSR set to: 57
  3222  00FBB7  53                 	db	83	;'S'
  3223  00FBB8  74                 	db	116	;'t'
  3224  00FBB9  61                 	db	97	;'a'
  3225  00FBBA  74                 	db	116	;'t'
  3226  00FBBB  69                 	db	105	;'i'
  3227  00FBBC  63                 	db	99	;'c'
  3228  00FBBD  20                 	db	32
  3229  00FBBE  53                 	db	83	;'S'
  3230  00FBBF  4F                 	db	79	;'O'
  3231  00FBC0  43                 	db	67	;'C'
  3232  00FBC1  20                 	db	32
  3233  00FBC2  25                 	db	37
  3234  00FBC3  64                 	db	100	;'d'
  3235  00FBC4  20                 	db	32
  3236  00FBC5  20                 	db	32
  3237  00FBC6  20                 	db	32
  3238  00FBC7  20                 	db	32
  3239  00FBC8  20                 	db	32
  3240  00FBC9  20                 	db	32
  3241  00FBCA  20                 	db	32
  3242  00FBCB  20                 	db	32
  3243  00FBCC  00                 	db	0
  3244  00FBCD                     STR_40:
  3245                           
  3246                           ; BSR set to: 57
  3247  00FBCD  42                 	db	66	;'B'
  3248  00FBCE  41                 	db	65	;'A'
  3249  00FBCF  54                 	db	84	;'T'
  3250  00FBD0  20                 	db	32
  3251  00FBD1  49                 	db	73	;'I'
  3252  00FBD2  57                 	db	87	;'W'
  3253  00FBD3  48                 	db	72	;'H'
  3254  00FBD4  20                 	db	32
  3255  00FBD5  25                 	db	37
  3256  00FBD6  34                 	db	52	;'4'
  3257  00FBD7  2E                 	db	46
  3258  00FBD8  31                 	db	49	;'1'
  3259  00FBD9  66                 	db	102	;'f'
  3260  00FBDA  20                 	db	32
  3261  00FBDB  20                 	db	32
  3262  00FBDC  20                 	db	32
  3263  00FBDD  20                 	db	32
  3264  00FBDE  20                 	db	32
  3265  00FBDF  20                 	db	32
  3266  00FBE0  20                 	db	32
  3267  00FBE1  20                 	db	32
  3268  00FBE2  00                 	db	0
  3269  00FBE3                     STR_41:
  3270                           
  3271                           ; BSR set to: 57
  3272  00FBE3  42                 	db	66	;'B'
  3273  00FBE4  41                 	db	65	;'A'
  3274  00FBE5  54                 	db	84	;'T'
  3275  00FBE6  20                 	db	32
  3276  00FBE7  4F                 	db	79	;'O'
  3277  00FBE8  57                 	db	87	;'W'
  3278  00FBE9  48                 	db	72	;'H'
  3279  00FBEA  20                 	db	32
  3280  00FBEB  25                 	db	37
  3281  00FBEC  34                 	db	52	;'4'
  3282  00FBED  2E                 	db	46
  3283  00FBEE  31                 	db	49	;'1'
  3284  00FBEF  66                 	db	102	;'f'
  3285  00FBF0  20                 	db	32
  3286  00FBF1  20                 	db	32
  3287  00FBF2  20                 	db	32
  3288  00FBF3  20                 	db	32
  3289  00FBF4  20                 	db	32
  3290  00FBF5  20                 	db	32
  3291  00FBF6  20                 	db	32
  3292  00FBF7  20                 	db	32
  3293  00FBF8  00                 	db	0
  3294  00FBF9                     STR_42:
  3295                           
  3296                           ; BSR set to: 57
  3297  00FBF9  42                 	db	66	;'B'
  3298  00FBFA  41                 	db	65	;'A'
  3299  00FBFB  54                 	db	84	;'T'
  3300  00FBFC  20                 	db	32
  3301  00FBFD  54                 	db	84	;'T'
  3302  00FBFE  57                 	db	87	;'W'
  3303  00FBFF  48                 	db	72	;'H'
  3304  00FC00  20                 	db	32
  3305  00FC01  25                 	db	37
  3306  00FC02  34                 	db	52	;'4'
  3307  00FC03  2E                 	db	46
  3308  00FC04  31                 	db	49	;'1'
  3309  00FC05  66                 	db	102	;'f'
  3310  00FC06  20                 	db	32
  3311  00FC07  20                 	db	32
  3312  00FC08  20                 	db	32
  3313  00FC09  20                 	db	32
  3314  00FC0A  20                 	db	32
  3315  00FC0B  20                 	db	32
  3316  00FC0C  20                 	db	32
  3317  00FC0D  20                 	db	32
  3318  00FC0E  00                 	db	0
  3319  00FC0F                     STR_36:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FC0F  49                 	db	73	;'I'
  3323  00FC10  4E                 	db	78	;'N'
  3324  00FC11  56                 	db	86	;'V'
  3325  00FC12  20                 	db	32
  3326  00FC13  20                 	db	32
  3327  00FC14  57                 	db	87	;'W'
  3328  00FC15  48                 	db	72	;'H'
  3329  00FC16  20                 	db	32
  3330  00FC17  25                 	db	37
  3331  00FC18  33                 	db	51	;'3'
  3332  00FC19  2E                 	db	46
  3333  00FC1A  32                 	db	50	;'2'
  3334  00FC1B  66                 	db	102	;'f'
  3335  00FC1C  20                 	db	32
  3336  00FC1D  20                 	db	32
  3337  00FC1E  20                 	db	32
  3338  00FC1F  20                 	db	32
  3339  00FC20  20                 	db	32
  3340  00FC21  20                 	db	32
  3341  00FC22  20                 	db	32
  3342  00FC23  20                 	db	32
  3343  00FC24  00                 	db	0
  3344  00FC25                     STR_35:
  3345                           
  3346                           ; BSR set to: 57
  3347  00FC25  4C                 	db	76	;'L'
  3348  00FC26  4F                 	db	79	;'O'
  3349  00FC27  41                 	db	65	;'A'
  3350  00FC28  44                 	db	68	;'D'
  3351  00FC29  20                 	db	32
  3352  00FC2A  57                 	db	87	;'W'
  3353  00FC2B  48                 	db	72	;'H'
  3354  00FC2C  20                 	db	32
  3355  00FC2D  25                 	db	37
  3356  00FC2E  33                 	db	51	;'3'
  3357  00FC2F  2E                 	db	46
  3358  00FC30  32                 	db	50	;'2'
  3359  00FC31  66                 	db	102	;'f'
  3360  00FC32  20                 	db	32
  3361  00FC33  20                 	db	32
  3362  00FC34  20                 	db	32
  3363  00FC35  20                 	db	32
  3364  00FC36  20                 	db	32
  3365  00FC37  20                 	db	32
  3366  00FC38  20                 	db	32
  3367  00FC39  20                 	db	32
  3368  00FC3A  00                 	db	0
  3369  00FC3B                     STR_34:
  3370                           
  3371                           ; BSR set to: 57
  3372  00FC3B  50                 	db	80	;'P'
  3373  00FC3C  56                 	db	86	;'V'
  3374  00FC3D  20                 	db	32
  3375  00FC3E  25                 	db	37
  3376  00FC3F  63                 	db	99	;'c'
  3377  00FC40  20                 	db	32
  3378  00FC41  57                 	db	87	;'W'
  3379  00FC42  48                 	db	72	;'H'
  3380  00FC43  20                 	db	32
  3381  00FC44  25                 	db	37
  3382  00FC45  33                 	db	51	;'3'
  3383  00FC46  2E                 	db	46
  3384  00FC47  32                 	db	50	;'2'
  3385  00FC48  66                 	db	102	;'f'
  3386  00FC49  20                 	db	32
  3387  00FC4A  20                 	db	32
  3388  00FC4B  20                 	db	32
  3389  00FC4C  20                 	db	32
  3390  00FC4D  20                 	db	32
  3391  00FC4E  20                 	db	32
  3392  00FC4F  20                 	db	32
  3393  00FC50  00                 	db	0
  3394  00FC51                     STR_33:
  3395                           
  3396                           ; BSR set to: 57
  3397  00FC51  49                 	db	73	;'I'
  3398  00FC52  4E                 	db	78	;'N'
  3399  00FC53  56                 	db	86	;'V'
  3400  00FC54  20                 	db	32
  3401  00FC55  20                 	db	32
  3402  00FC56  50                 	db	80	;'P'
  3403  00FC57  57                 	db	87	;'W'
  3404  00FC58  52                 	db	82	;'R'
  3405  00FC59  20                 	db	32
  3406  00FC5A  25                 	db	37
  3407  00FC5B  33                 	db	51	;'3'
  3408  00FC5C  2E                 	db	46
  3409  00FC5D  32                 	db	50	;'2'
  3410  00FC5E  66                 	db	102	;'f'
  3411  00FC5F  20                 	db	32
  3412  00FC60  20                 	db	32
  3413  00FC61  20                 	db	32
  3414  00FC62  20                 	db	32
  3415  00FC63  20                 	db	32
  3416  00FC64  20                 	db	32
  3417  00FC65  20                 	db	32
  3418  00FC66  00                 	db	0
  3419  00FC67                     STR_32:
  3420                           
  3421                           ; BSR set to: 57
  3422  00FC67  4C                 	db	76	;'L'
  3423  00FC68  4F                 	db	79	;'O'
  3424  00FC69  41                 	db	65	;'A'
  3425  00FC6A  44                 	db	68	;'D'
  3426  00FC6B  20                 	db	32
  3427  00FC6C  50                 	db	80	;'P'
  3428  00FC6D  57                 	db	87	;'W'
  3429  00FC6E  52                 	db	82	;'R'
  3430  00FC6F  20                 	db	32
  3431  00FC70  25                 	db	37
  3432  00FC71  33                 	db	51	;'3'
  3433  00FC72  2E                 	db	46
  3434  00FC73  32                 	db	50	;'2'
  3435  00FC74  66                 	db	102	;'f'
  3436  00FC75  20                 	db	32
  3437  00FC76  20                 	db	32
  3438  00FC77  20                 	db	32
  3439  00FC78  20                 	db	32
  3440  00FC79  20                 	db	32
  3441  00FC7A  20                 	db	32
  3442  00FC7B  20                 	db	32
  3443  00FC7C  00                 	db	0
  3444  00FC7D                     STR_31:
  3445                           
  3446                           ; BSR set to: 57
  3447  00FC7D  50                 	db	80	;'P'
  3448  00FC7E  56                 	db	86	;'V'
  3449  00FC7F  20                 	db	32
  3450  00FC80  25                 	db	37
  3451  00FC81  63                 	db	99	;'c'
  3452  00FC82  20                 	db	32
  3453  00FC83  50                 	db	80	;'P'
  3454  00FC84  57                 	db	87	;'W'
  3455  00FC85  52                 	db	82	;'R'
  3456  00FC86  20                 	db	32
  3457  00FC87  25                 	db	37
  3458  00FC88  33                 	db	51	;'3'
  3459  00FC89  2E                 	db	46
  3460  00FC8A  32                 	db	50	;'2'
  3461  00FC8B  66                 	db	102	;'f'
  3462  00FC8C  20                 	db	32
  3463  00FC8D  20                 	db	32
  3464  00FC8E  20                 	db	32
  3465  00FC8F  20                 	db	32
  3466  00FC90  20                 	db	32
  3467  00FC91  20                 	db	32
  3468  00FC92  00                 	db	0
  3469  00FC93                     STR_15:
  3470                           
  3471                           ; BSR set to: 57
  3472  00FC93  42                 	db	66	;'B'
  3473  00FC94  61                 	db	97	;'a'
  3474  00FC95  74                 	db	116	;'t'
  3475  00FC96  74                 	db	116	;'t'
  3476  00FC97  65                 	db	101	;'e'
  3477  00FC98  72                 	db	114	;'r'
  3478  00FC99  79                 	db	121	;'y'
  3479  00FC9A  20                 	db	32
  3480  00FC9B  41                 	db	65	;'A'
  3481  00FC9C  68                 	db	104	;'h'
  3482  00FC9D  20                 	db	32
  3483  00FC9E  25                 	db	37
  3484  00FC9F  33                 	db	51	;'3'
  3485  00FCA0  2E                 	db	46
  3486  00FCA1  32                 	db	50	;'2'
  3487  00FCA2  66                 	db	102	;'f'
  3488  00FCA3  20                 	db	32
  3489  00FCA4  20                 	db	32
  3490  00FCA5  20                 	db	32
  3491  00FCA6  20                 	db	32
  3492  00FCA7  20                 	db	32
  3493  00FCA8  00                 	db	0
  3494  00FCA9                     STR_38:
  3495                           
  3496                           ; BSR set to: 57
  3497  00FCA9  42                 	db	66	;'B'
  3498  00FCAA  56                 	db	86	;'V'
  3499  00FCAB  20                 	db	32
  3500  00FCAC  25                 	db	37
  3501  00FCAD  32                 	db	50	;'2'
  3502  00FCAE  2E                 	db	46
  3503  00FCAF  32                 	db	50	;'2'
  3504  00FCB0  66                 	db	102	;'f'
  3505  00FCB1  20                 	db	32
  3506  00FCB2  42                 	db	66	;'B'
  3507  00FCB3  41                 	db	65	;'A'
  3508  00FCB4  20                 	db	32
  3509  00FCB5  25                 	db	37
  3510  00FCB6  32                 	db	50	;'2'
  3511  00FCB7  2E                 	db	46
  3512  00FCB8  32                 	db	50	;'2'
  3513  00FCB9  66                 	db	102	;'f'
  3514  00FCBA  20                 	db	32
  3515  00FCBB  20                 	db	32
  3516  00FCBC  20                 	db	32
  3517  00FCBD  20                 	db	32
  3518  00FCBE  00                 	db	0
  3519  00FCBF                     STR_39:
  3520                           
  3521                           ; BSR set to: 57
  3522  00FCBF  43                 	db	67	;'C'
  3523  00FCC0  56                 	db	86	;'V'
  3524  00FCC1  20                 	db	32
  3525  00FCC2  25                 	db	37
  3526  00FCC3  32                 	db	50	;'2'
  3527  00FCC4  2E                 	db	46
  3528  00FCC5  32                 	db	50	;'2'
  3529  00FCC6  66                 	db	102	;'f'
  3530  00FCC7  20                 	db	32
  3531  00FCC8  4C                 	db	76	;'L'
  3532  00FCC9  41                 	db	65	;'A'
  3533  00FCCA  20                 	db	32
  3534  00FCCB  25                 	db	37
  3535  00FCCC  32                 	db	50	;'2'
  3536  00FCCD  2E                 	db	46
  3537  00FCCE  32                 	db	50	;'2'
  3538  00FCCF  66                 	db	102	;'f'
  3539  00FCD0  20                 	db	32
  3540  00FCD1  20                 	db	32
  3541  00FCD2  20                 	db	32
  3542  00FCD3  20                 	db	32
  3543  00FCD4  00                 	db	0
  3544  00FCD5                     STR_37:
  3545                           
  3546                           ; BSR set to: 57
  3547  00FCD5  50                 	db	80	;'P'
  3548  00FCD6  56                 	db	86	;'V'
  3549  00FCD7  20                 	db	32
  3550  00FCD8  25                 	db	37
  3551  00FCD9  32                 	db	50	;'2'
  3552  00FCDA  2E                 	db	46
  3553  00FCDB  32                 	db	50	;'2'
  3554  00FCDC  66                 	db	102	;'f'
  3555  00FCDD  20                 	db	32
  3556  00FCDE  50                 	db	80	;'P'
  3557  00FCDF  41                 	db	65	;'A'
  3558  00FCE0  20                 	db	32
  3559  00FCE1  25                 	db	37
  3560  00FCE2  32                 	db	50	;'2'
  3561  00FCE3  2E                 	db	46
  3562  00FCE4  32                 	db	50	;'2'
  3563  00FCE5  66                 	db	102	;'f'
  3564  00FCE6  20                 	db	32
  3565  00FCE7  20                 	db	32
  3566  00FCE8  20                 	db	32
  3567  00FCE9  20                 	db	32
  3568  00FCEA  00                 	db	0
  3569  00FCEB                     STR_49:
  3570                           
  3571                           ; BSR set to: 57
  3572  00FCEB  25                 	db	37
  3573  00FCEC  64                 	db	100	;'d'
  3574  00FCED  20                 	db	32
  3575  00FCEE  25                 	db	37
  3576  00FCEF  32                 	db	50	;'2'
  3577  00FCF0  2E                 	db	46
  3578  00FCF1  34                 	db	52	;'4'
  3579  00FCF2  66                 	db	102	;'f'
  3580  00FCF3  2C                 	db	44
  3581  00FCF4  20                 	db	32
  3582  00FCF5  25                 	db	37
  3583  00FCF6  64                 	db	100	;'d'
  3584  00FCF7  20                 	db	32
  3585  00FCF8  20                 	db	32
  3586  00FCF9  54                 	db	84	;'T'
  3587  00FCFA  52                 	db	82	;'R'
  3588  00FCFB  49                 	db	73	;'I'
  3589  00FCFC  4D                 	db	77	;'M'
  3590  00FCFD  20                 	db	32
  3591  00FCFE  20                 	db	32
  3592  00FCFF  20                 	db	32
  3593  00FD00  00                 	db	0
  3594  00FD01                     
  3595                           ; BSR set to: 57
  3596  00FD01  48                 	db	72	;'H'
  3597  00FD02  45                 	db	69	;'E'
  3598  00FD03  4C                 	db	76	;'L'
  3599  00FD04  50                 	db	80	;'P'
  3600  00FD05  20                 	db	32
  3601  00FD06  25                 	db	37
  3602  00FD07  73                 	db	115	;'s'
  3603  00FD08  20                 	db	32
  3604  00FD09  20                 	db	32
  3605  00FD0A  20                 	db	32
  3606  00FD0B  20                 	db	32
  3607  00FD0C  20                 	db	32
  3608  00FD0D  20                 	db	32
  3609  00FD0E  20                 	db	32
  3610  00FD0F  20                 	db	32
  3611  00FD10  20                 	db	32
  3612  00FD11  20                 	db	32
  3613  00FD12  20                 	db	32
  3614  00FD13  20                 	db	32
  3615  00FD14  20                 	db	32
  3616  00FD15  00                 	db	0
  3617  00FD16                     
  3618                           ; BSR set to: 57
  3619  00FD16  44                 	db	68	;'D'
  3620  00FD17  49                 	db	73	;'I'
  3621  00FD18  53                 	db	83	;'S'
  3622  00FD19  50                 	db	80	;'P'
  3623  00FD1A  4C                 	db	76	;'L'
  3624  00FD1B  41                 	db	65	;'A'
  3625  00FD1C  59                 	db	89	;'Y'
  3626  00FD1D  20                 	db	32
  3627  00FD1E  25                 	db	37
  3628  00FD1F  73                 	db	115	;'s'
  3629  00FD20  20                 	db	32
  3630  00FD21  20                 	db	32
  3631  00FD22  20                 	db	32
  3632  00FD23  20                 	db	32
  3633  00FD24  20                 	db	32
  3634  00FD25  20                 	db	32
  3635  00FD26  20                 	db	32
  3636  00FD27  20                 	db	32
  3637  00FD28  20                 	db	32
  3638  00FD29  20                 	db	32
  3639  00FD2A  00                 	db	0
  3640  00FD2B                     STR_57:
  3641                           
  3642                           ; BSR set to: 57
  3643  00FD2B  20                 	db	32
  3644  00FD2C  25                 	db	37
  3645  00FD2D  64                 	db	100	;'d'
  3646  00FD2E  20                 	db	32
  3647  00FD2F  25                 	db	37
  3648  00FD30  64                 	db	100	;'d'
  3649  00FD31  20                 	db	32
  3650  00FD32  20                 	db	32
  3651  00FD33  20                 	db	32
  3652  00FD34  20                 	db	32
  3653  00FD35  20                 	db	32
  3654  00FD36  20                 	db	32
  3655  00FD37  20                 	db	32
  3656  00FD38  20                 	db	32
  3657  00FD39  20                 	db	32
  3658  00FD3A  20                 	db	32
  3659  00FD3B  20                 	db	32
  3660  00FD3C  20                 	db	32
  3661  00FD3D  20                 	db	32
  3662  00FD3E  20                 	db	32
  3663  00FD3F  00                 	db	0
  3664  00FD40                     STR_73:
  3665                           
  3666                           ; BSR set to: 57
  3667  00FD40  20                 	db	32
  3668  00FD41  25                 	db	37
  3669  00FD42  66                 	db	102	;'f'
  3670  00FD43  20                 	db	32
  3671  00FD44  25                 	db	37
  3672  00FD45  66                 	db	102	;'f'
  3673  00FD46  20                 	db	32
  3674  00FD47  20                 	db	32
  3675  00FD48  20                 	db	32
  3676  00FD49  20                 	db	32
  3677  00FD4A  20                 	db	32
  3678  00FD4B  20                 	db	32
  3679  00FD4C  20                 	db	32
  3680  00FD4D  20                 	db	32
  3681  00FD4E  20                 	db	32
  3682  00FD4F  20                 	db	32
  3683  00FD50  20                 	db	32
  3684  00FD51  20                 	db	32
  3685  00FD52  20                 	db	32
  3686  00FD53  20                 	db	32
  3687  00FD54  00                 	db	0
  3688  00FD55                     STR_60:
  3689                           
  3690                           ; BSR set to: 57
  3691  00FD55  20                 	db	32
  3692  00FD56  25                 	db	37
  3693  00FD57  6C                 	db	108	;'l'
  3694  00FD58  64                 	db	100	;'d'
  3695  00FD59  20                 	db	32
  3696  00FD5A  25                 	db	37
  3697  00FD5B  6C                 	db	108	;'l'
  3698  00FD5C  64                 	db	100	;'d'
  3699  00FD5D  20                 	db	32
  3700  00FD5E  20                 	db	32
  3701  00FD5F  20                 	db	32
  3702  00FD60  20                 	db	32
  3703  00FD61  20                 	db	32
  3704  00FD62  20                 	db	32
  3705  00FD63  20                 	db	32
  3706  00FD64  20                 	db	32
  3707  00FD65  20                 	db	32
  3708  00FD66  20                 	db	32
  3709  00FD67  20                 	db	32
  3710  00FD68  20                 	db	32
  3711  00FD69  00                 	db	0
  3712  00FD6A                     STR_12:
  3713                           
  3714                           ; BSR set to: 57
  3715  00FD6A  42                 	db	66	;'B'
  3716  00FD6B  56                 	db	86	;'V'
  3717  00FD6C  20                 	db	32
  3718  00FD6D  25                 	db	37
  3719  00FD6E  32                 	db	50	;'2'
  3720  00FD6F  2E                 	db	46
  3721  00FD70  34                 	db	52	;'4'
  3722  00FD71  66                 	db	102	;'f'
  3723  00FD72  20                 	db	32
  3724  00FD73  20                 	db	32
  3725  00FD74  20                 	db	32
  3726  00FD75  20                 	db	32
  3727  00FD76  20                 	db	32
  3728  00FD77  20                 	db	32
  3729  00FD78  20                 	db	32
  3730  00FD79  20                 	db	32
  3731  00FD7A  20                 	db	32
  3732  00FD7B  20                 	db	32
  3733  00FD7C  20                 	db	32
  3734  00FD7D  20                 	db	32
  3735  00FD7E  00                 	db	0
  3736  00FD7F                     STR_4:
  3737                           
  3738                           ; BSR set to: 57
  3739  00FD7F  20                 	db	32
  3740  00FD80  4E                 	db	78	;'N'
  3741  00FD81  53                 	db	83	;'S'
  3742  00FD82  41                 	db	65	;'A'
  3743  00FD83  53                 	db	83	;'S'
  3744  00FD84  50                 	db	80	;'P'
  3745  00FD85  4F                 	db	79	;'O'
  3746  00FD86  4F                 	db	79	;'O'
  3747  00FD87  4B                 	db	75	;'K'
  3748  00FD88  20                 	db	32
  3749  00FD89  20                 	db	32
  3750  00FD8A  20                 	db	32
  3751  00FD8B  20                 	db	32
  3752  00FD8C  20                 	db	32
  3753  00FD8D  20                 	db	32
  3754  00FD8E  20                 	db	32
  3755  00FD8F  20                 	db	32
  3756  00FD90  20                 	db	32
  3757  00FD91  20                 	db	32
  3758  00FD92  20                 	db	32
  3759  00FD93  00                 	db	0
  3760  00FD94                     STR_26:
  3761                           
  3762                           ; BSR set to: 57
  3763  00FD94  54                 	db	84	;'T'
  3764  00FD95  6F                 	db	111	;'o'
  3765  00FD96  20                 	db	32
  3766  00FD97  45                 	db	69	;'E'
  3767  00FD98  45                 	db	69	;'E'
  3768  00FD99  50                 	db	80	;'P'
  3769  00FD9A  52                 	db	82	;'R'
  3770  00FD9B  4F                 	db	79	;'O'
  3771  00FD9C  4D                 	db	77	;'M'
  3772  00FD9D  20                 	db	32
  3773  00FD9E  20                 	db	32
  3774  00FD9F  20                 	db	32
  3775  00FDA0  20                 	db	32
  3776  00FDA1  20                 	db	32
  3777  00FDA2  20                 	db	32
  3778  00FDA3  20                 	db	32
  3779  00FDA4  20                 	db	32
  3780  00FDA5  20                 	db	32
  3781  00FDA6  20                 	db	32
  3782  00FDA7  20                 	db	32
  3783  00FDA8  00                 	db	0
  3784  00FDA9                     STR_17:
  3785                           
  3786                           ; BSR set to: 57
  3787  00FDA9  42                 	db	66	;'B'
  3788  00FDAA  61                 	db	97	;'a'
  3789  00FDAB  74                 	db	116	;'t'
  3790  00FDAC  74                 	db	116	;'t'
  3791  00FDAD  65                 	db	101	;'e'
  3792  00FDAE  72                 	db	114	;'r'
  3793  00FDAF  79                 	db	121	;'y'
  3794  00FDB0  20                 	db	32
  3795  00FDB1  45                 	db	69	;'E'
  3796  00FDB2  53                 	db	83	;'S'
  3797  00FDB3  52                 	db	82	;'R'
  3798  00FDB4  20                 	db	32
  3799  00FDB5  20                 	db	32
  3800  00FDB6  20                 	db	32
  3801  00FDB7  20                 	db	32
  3802  00FDB8  20                 	db	32
  3803  00FDB9  20                 	db	32
  3804  00FDBA  20                 	db	32
  3805  00FDBB  20                 	db	32
  3806  00FDBC  20                 	db	32
  3807  00FDBD  00                 	db	0
  3808  00FDBE                     STR_18:
  3809                           
  3810                           ; BSR set to: 57
  3811  00FDBE  43                 	db	67	;'C'
  3812  00FDBF  61                 	db	97	;'a'
  3813  00FDC0  6C                 	db	108	;'l'
  3814  00FDC1  63                 	db	99	;'c'
  3815  00FDC2  75                 	db	117	;'u'
  3816  00FDC3  6C                 	db	108	;'l'
  3817  00FDC4  61                 	db	97	;'a'
  3818  00FDC5  74                 	db	116	;'t'
  3819  00FDC6  69                 	db	105	;'i'
  3820  00FDC7  6F                 	db	111	;'o'
  3821  00FDC8  6E                 	db	110	;'n'
  3822  00FDC9  20                 	db	32
  3823  00FDCA  20                 	db	32
  3824  00FDCB  20                 	db	32
  3825  00FDCC  20                 	db	32
  3826  00FDCD  20                 	db	32
  3827  00FDCE  20                 	db	32
  3828  00FDCF  20                 	db	32
  3829  00FDD0  20                 	db	32
  3830  00FDD1  20                 	db	32
  3831  00FDD2  00                 	db	0
  3832  00FDD3                     STR_54:
  3833                           
  3834                           ; BSR set to: 57
  3835  00FDD3  43                 	db	67	;'C'
  3836  00FDD4  61                 	db	97	;'a'
  3837  00FDD5  6C                 	db	108	;'l'
  3838  00FDD6  69                 	db	105	;'i'
  3839  00FDD7  62                 	db	98	;'b'
  3840  00FDD8  72                 	db	114	;'r'
  3841  00FDD9  61                 	db	97	;'a'
  3842  00FDDA  74                 	db	116	;'t'
  3843  00FDDB  69                 	db	105	;'i'
  3844  00FDDC  6F                 	db	111	;'o'
  3845  00FDDD  6E                 	db	110	;'n'
  3846  00FDDE  20                 	db	32
  3847  00FDDF  20                 	db	32
  3848  00FDE0  20                 	db	32
  3849  00FDE1  20                 	db	32
  3850  00FDE2  20                 	db	32
  3851  00FDE3  20                 	db	32
  3852  00FDE4  20                 	db	32
  3853  00FDE5  20                 	db	32
  3854  00FDE6  20                 	db	32
  3855  00FDE7  00                 	db	0
  3856  00FDE8                     STR_53:
  3857                           
  3858                           ; BSR set to: 57
  3859  00FDE8  53                 	db	83	;'S'
  3860  00FDE9  65                 	db	101	;'e'
  3861  00FDEA  6E                 	db	110	;'n'
  3862  00FDEB  73                 	db	115	;'s'
  3863  00FDEC  6F                 	db	111	;'o'
  3864  00FDED  72                 	db	114	;'r'
  3865  00FDEE  20                 	db	32
  3866  00FDEF  5A                 	db	90	;'Z'
  3867  00FDF0  65                 	db	101	;'e'
  3868  00FDF1  72                 	db	114	;'r'
  3869  00FDF2  6F                 	db	111	;'o'
  3870  00FDF3  20                 	db	32
  3871  00FDF4  20                 	db	32
  3872  00FDF5  20                 	db	32
  3873  00FDF6  20                 	db	32
  3874  00FDF7  20                 	db	32
  3875  00FDF8  20                 	db	32
  3876  00FDF9  20                 	db	32
  3877  00FDFA  20                 	db	32
  3878  00FDFB  20                 	db	32
  3879  00FDFC  00                 	db	0
  3880  00FDFD                     STR_2:
  3881                           
  3882                           ; BSR set to: 57
  3883  00FDFD  20                 	db	32
  3884  00FDFE  56                 	db	86	;'V'
  3885  00FDFF  65                 	db	101	;'e'
  3886  00FE00  72                 	db	114	;'r'
  3887  00FE01  73                 	db	115	;'s'
  3888  00FE02  69                 	db	105	;'i'
  3889  00FE03  6F                 	db	111	;'o'
  3890  00FE04  6E                 	db	110	;'n'
  3891  00FE05  20                 	db	32
  3892  00FE06  25                 	db	37
  3893  00FE07  73                 	db	115	;'s'
  3894  00FE08  20                 	db	32
  3895  00FE09  20                 	db	32
  3896  00FE0A  20                 	db	32
  3897  00FE0B  20                 	db	32
  3898  00FE0C  20                 	db	32
  3899  00FE0D  20                 	db	32
  3900  00FE0E  20                 	db	32
  3901  00FE0F  20                 	db	32
  3902  00FE10  20                 	db	32
  3903  00FE11  00                 	db	0
  3904  00FE12                     STR_74:
  3905                           
  3906                           ; BSR set to: 57
  3907  00FE12  31                 	db	49	;'1'
  3908  00FE13  30                 	db	48	;'0'
  3909  00FE14  41                 	db	65	;'A'
  3910  00FE15  20                 	db	32
  3911  00FE16  43                 	db	67	;'C'
  3912  00FE17  61                 	db	97	;'a'
  3913  00FE18  6C                 	db	108	;'l'
  3914  00FE19  20                 	db	32
  3915  00FE1A  53                 	db	83	;'S'
  3916  00FE1B  65                 	db	101	;'e'
  3917  00FE1C  74                 	db	116	;'t'
  3918  00FE1D  20                 	db	32
  3919  00FE1E  20                 	db	32
  3920  00FE1F  20                 	db	32
  3921  00FE20  20                 	db	32
  3922  00FE21  20                 	db	32
  3923  00FE22  20                 	db	32
  3924  00FE23  20                 	db	32
  3925  00FE24  20                 	db	32
  3926  00FE25  20                 	db	32
  3927  00FE26  00                 	db	0
  3928  00FE27                     STR_61:
  3929                           
  3930                           ; BSR set to: 57
  3931  00FE27  5A                 	db	90	;'Z'
  3932  00FE28  65                 	db	101	;'e'
  3933  00FE29  72                 	db	114	;'r'
  3934  00FE2A  6F                 	db	111	;'o'
  3935  00FE2B  20                 	db	32
  3936  00FE2C  43                 	db	67	;'C'
  3937  00FE2D  61                 	db	97	;'a'
  3938  00FE2E  6C                 	db	108	;'l'
  3939  00FE2F  20                 	db	32
  3940  00FE30  53                 	db	83	;'S'
  3941  00FE31  65                 	db	101	;'e'
  3942  00FE32  74                 	db	116	;'t'
  3943  00FE33  20                 	db	32
  3944  00FE34  20                 	db	32
  3945  00FE35  20                 	db	32
  3946  00FE36  20                 	db	32
  3947  00FE37  20                 	db	32
  3948  00FE38  20                 	db	32
  3949  00FE39  20                 	db	32
  3950  00FE3A  20                 	db	32
  3951  00FE3B  00                 	db	0
  3952  00FE3C                     STR_66:
  3953                           
  3954                           ; BSR set to: 57
  3955  00FE3C  31                 	db	49	;'1'
  3956  00FE3D  30                 	db	48	;'0'
  3957  00FE3E  20                 	db	32
  3958  00FE3F  41                 	db	65	;'A'
  3959  00FE40  6D                 	db	109	;'m'
  3960  00FE41  70                 	db	112	;'p'
  3961  00FE42  20                 	db	32
  3962  00FE43  53                 	db	83	;'S'
  3963  00FE44  65                 	db	101	;'e'
  3964  00FE45  6E                 	db	110	;'n'
  3965  00FE46  73                 	db	115	;'s'
  3966  00FE47  6F                 	db	111	;'o'
  3967  00FE48  72                 	db	114	;'r'
  3968  00FE49  20                 	db	32
  3969  00FE4A  20                 	db	32
  3970  00FE4B  20                 	db	32
  3971  00FE4C  20                 	db	32
  3972  00FE4D  20                 	db	32
  3973  00FE4E  20                 	db	32
  3974  00FE4F  20                 	db	32
  3975  00FE50  00                 	db	0
  3976  00FE51                     STR_1:
  3977                           
  3978                           ; BSR set to: 57
  3979  00FE51  20                 	db	32
  3980  00FE52  4D                 	db	77	;'M'
  3981  00FE53  42                 	db	66	;'B'
  3982  00FE54  4D                 	db	77	;'M'
  3983  00FE55  43                 	db	67	;'C'
  3984  00FE56  20                 	db	32
  3985  00FE57  53                 	db	83	;'S'
  3986  00FE58  4F                 	db	79	;'O'
  3987  00FE59  4C                 	db	76	;'L'
  3988  00FE5A  41                 	db	65	;'A'
  3989  00FE5B  52                 	db	82	;'R'
  3990  00FE5C  4D                 	db	77	;'M'
  3991  00FE5D  4F                 	db	79	;'O'
  3992  00FE5E  4E                 	db	78	;'N'
  3993  00FE5F  20                 	db	32
  3994  00FE60  20                 	db	32
  3995  00FE61  20                 	db	32
  3996  00FE62  20                 	db	32
  3997  00FE63  20                 	db	32
  3998  00FE64  20                 	db	32
  3999  00FE65  00                 	db	0
  4000  00FE66                     STR_52:
  4001                           
  4002                           ; BSR set to: 57
  4003  00FE66  42                 	db	66	;'B'
  4004  00FE67  61                 	db	97	;'a'
  4005  00FE68  74                 	db	116	;'t'
  4006  00FE69  74                 	db	116	;'t'
  4007  00FE6A  65                 	db	101	;'e'
  4008  00FE6B  72                 	db	114	;'r'
  4009  00FE6C  79                 	db	121	;'y'
  4010  00FE6D  20                 	db	32
  4011  00FE6E  61                 	db	97	;'a'
  4012  00FE6F  6E                 	db	110	;'n'
  4013  00FE70  64                 	db	100	;'d'
  4014  00FE71  20                 	db	32
  4015  00FE72  50                 	db	80	;'P'
  4016  00FE73  56                 	db	86	;'V'
  4017  00FE74  20                 	db	32
  4018  00FE75  20                 	db	32
  4019  00FE76  20                 	db	32
  4020  00FE77  20                 	db	32
  4021  00FE78  20                 	db	32
  4022  00FE79  20                 	db	32
  4023  00FE7A  00                 	db	0
  4024  00FE7B                     STR_20:
  4025                           
  4026                           ; BSR set to: 57
  4027  00FE7B  43                 	db	67	;'C'
  4028  00FE7C  68                 	db	104	;'h'
  4029  00FE7D  65                 	db	101	;'e'
  4030  00FE7E  63                 	db	99	;'c'
  4031  00FE7F  6B                 	db	107	;'k'
  4032  00FE80  69                 	db	105	;'i'
  4033  00FE81  6E                 	db	110	;'n'
  4034  00FE82  67                 	db	103	;'g'
  4035  00FE83  20                 	db	32
  4036  00FE84  25                 	db	37
  4037  00FE85  63                 	db	99	;'c'
  4038  00FE86  20                 	db	32
  4039  00FE87  25                 	db	37
  4040  00FE88  63                 	db	99	;'c'
  4041  00FE89  20                 	db	32
  4042  00FE8A  20                 	db	32
  4043  00FE8B  20                 	db	32
  4044  00FE8C  20                 	db	32
  4045  00FE8D  20                 	db	32
  4046  00FE8E  20                 	db	32
  4047  00FE8F  00                 	db	0
  4048  00FE90                     STR_27:
  4049                           
  4050                           ; BSR set to: 57
  4051  00FE90  20                 	db	32
  4052  00FE91  54                 	db	84	;'T'
  4053  00FE92  69                 	db	105	;'i'
  4054  00FE93  6D                 	db	109	;'m'
  4055  00FE94  65                 	db	101	;'e'
  4056  00FE95  20                 	db	32
  4057  00FE96  25                 	db	37
  4058  00FE97  6C                 	db	108	;'l'
  4059  00FE98  75                 	db	117	;'u'
  4060  00FE99  2C                 	db	44
  4061  00FE9A  20                 	db	32
  4062  00FE9B  25                 	db	37
  4063  00FE9C  6C                 	db	108	;'l'
  4064  00FE9D  75                 	db	117	;'u'
  4065  00FE9E  20                 	db	32
  4066  00FE9F  20                 	db	32
  4067  00FEA0  20                 	db	32
  4068  00FEA1  20                 	db	32
  4069  00FEA2  20                 	db	32
  4070  00FEA3  20                 	db	32
  4071  00FEA4  00                 	db	0
  4072  00FEA5                     STR_56:
  4073                           
  4074                           ; BSR set to: 57
  4075  00FEA5  53                 	db	83	;'S'
  4076  00FEA6  65                 	db	101	;'e'
  4077  00FEA7  6E                 	db	110	;'n'
  4078  00FEA8  73                 	db	115	;'s'
  4079  00FEA9  6F                 	db	111	;'o'
  4080  00FEAA  72                 	db	114	;'r'
  4081  00FEAB  20                 	db	32
  4082  00FEAC  52                 	db	82	;'R'
  4083  00FEAD  65                 	db	101	;'e'
  4084  00FEAE  61                 	db	97	;'a'
  4085  00FEAF  64                 	db	100	;'d'
  4086  00FEB0  69                 	db	105	;'i'
  4087  00FEB1  6E                 	db	110	;'n'
  4088  00FEB2  67                 	db	103	;'g'
  4089  00FEB3  73                 	db	115	;'s'
  4090  00FEB4  20                 	db	32
  4091  00FEB5  20                 	db	32
  4092  00FEB6  20                 	db	32
  4093  00FEB7  20                 	db	32
  4094  00FEB8  20                 	db	32
  4095  00FEB9  00                 	db	0
  4096  00FEBA                     STR_10:
  4097                           
  4098                           ; BSR set to: 57
  4099  00FEBA  52                 	db	82	;'R'
  4100  00FEBB  65                 	db	101	;'e'
  4101  00FEBC  61                 	db	97	;'a'
  4102  00FEBD  64                 	db	100	;'d'
  4103  00FEBE  20                 	db	32
  4104  00FEBF  45                 	db	69	;'E'
  4105  00FEC0  45                 	db	69	;'E'
  4106  00FEC1  50                 	db	80	;'P'
  4107  00FEC2  52                 	db	82	;'R'
  4108  00FEC3  4F                 	db	79	;'O'
  4109  00FEC4  4D                 	db	77	;'M'
  4110  00FEC5  20                 	db	32
  4111  00FEC6  44                 	db	68	;'D'
  4112  00FEC7  41                 	db	65	;'A'
  4113  00FEC8  54                 	db	84	;'T'
  4114  00FEC9  41                 	db	65	;'A'
  4115  00FECA  20                 	db	32
  4116  00FECB  20                 	db	32
  4117  00FECC  20                 	db	32
  4118  00FECD  20                 	db	32
  4119  00FECE  00                 	db	0
  4120  00FECF                     STR_77:
  4121                           
  4122                           ; BSR set to: 57
  4123  00FECF  31                 	db	49	;'1'
  4124  00FED0  30                 	db	48	;'0'
  4125  00FED1  41                 	db	65	;'A'
  4126  00FED2  20                 	db	32
  4127  00FED3  4F                 	db	79	;'O'
  4128  00FED4  75                 	db	117	;'u'
  4129  00FED5  74                 	db	116	;'t'
  4130  00FED6  20                 	db	32
  4131  00FED7  4F                 	db	79	;'O'
  4132  00FED8  66                 	db	102	;'f'
  4133  00FED9  20                 	db	32
  4134  00FEDA  52                 	db	82	;'R'
  4135  00FEDB  61                 	db	97	;'a'
  4136  00FEDC  6E                 	db	110	;'n'
  4137  00FEDD  67                 	db	103	;'g'
  4138  00FEDE  65                 	db	101	;'e'
  4139  00FEDF  20                 	db	32
  4140  00FEE0  20                 	db	32
  4141  00FEE1  20                 	db	32
  4142  00FEE2  20                 	db	32
  4143  00FEE3  00                 	db	0
  4144  00FEE4                     STR_19:
  4145                           
  4146                           ; BSR set to: 57
  4147  00FEE4  43                 	db	67	;'C'
  4148  00FEE5  68                 	db	104	;'h'
  4149  00FEE6  65                 	db	101	;'e'
  4150  00FEE7  63                 	db	99	;'c'
  4151  00FEE8  6B                 	db	107	;'k'
  4152  00FEE9  20                 	db	32
  4153  00FEEA  33                 	db	51	;'3'
  4154  00FEEB  30                 	db	48	;'0'
  4155  00FEEC  20                 	db	32
  4156  00FEED  73                 	db	115	;'s'
  4157  00FEEE  65                 	db	101	;'e'
  4158  00FEEF  63                 	db	99	;'c'
  4159  00FEF0  6F                 	db	111	;'o'
  4160  00FEF1  6E                 	db	110	;'n'
  4161  00FEF2  64                 	db	100	;'d'
  4162  00FEF3  73                 	db	115	;'s'
  4163  00FEF4  20                 	db	32
  4164  00FEF5  20                 	db	32
  4165  00FEF6  20                 	db	32
  4166  00FEF7  20                 	db	32
  4167  00FEF8  00                 	db	0
  4168  00FEF9                     STR_64:
  4169                           
  4170                           ; BSR set to: 57
  4171  00FEF9  5A                 	db	90	;'Z'
  4172  00FEFA  65                 	db	101	;'e'
  4173  00FEFB  72                 	db	114	;'r'
  4174  00FEFC  6F                 	db	111	;'o'
  4175  00FEFD  20                 	db	32
  4176  00FEFE  4F                 	db	79	;'O'
  4177  00FEFF  75                 	db	117	;'u'
  4178  00FF00  74                 	db	116	;'t'
  4179  00FF01  20                 	db	32
  4180  00FF02  4F                 	db	79	;'O'
  4181  00FF03  66                 	db	102	;'f'
  4182  00FF04  20                 	db	32
  4183  00FF05  52                 	db	82	;'R'
  4184  00FF06  61                 	db	97	;'a'
  4185  00FF07  6E                 	db	110	;'n'
  4186  00FF08  67                 	db	103	;'g'
  4187  00FF09  65                 	db	101	;'e'
  4188  00FF0A  20                 	db	32
  4189  00FF0B  20                 	db	32
  4190  00FF0C  20                 	db	32
  4191  00FF0D  00                 	db	0
  4192  00FF0E                     STR_58:
  4193                           
  4194                           ; BSR set to: 57
  4195  00FF0E  53                 	db	83	;'S'
  4196  00FF0F  74                 	db	116	;'t'
  4197  00FF10  61                 	db	97	;'a'
  4198  00FF11  62                 	db	98	;'b'
  4199  00FF12  69                 	db	105	;'i'
  4200  00FF13  6C                 	db	108	;'l'
  4201  00FF14  69                 	db	105	;'i'
  4202  00FF15  74                 	db	116	;'t'
  4203  00FF16  79                 	db	121	;'y'
  4204  00FF17  20                 	db	32
  4205  00FF18  63                 	db	99	;'c'
  4206  00FF19  6C                 	db	108	;'l'
  4207  00FF1A  6F                 	db	111	;'o'
  4208  00FF1B  63                 	db	99	;'c'
  4209  00FF1C  6B                 	db	107	;'k'
  4210  00FF1D  20                 	db	32
  4211  00FF1E  25                 	db	37
  4212  00FF1F  64                 	db	100	;'d'
  4213  00FF20  20                 	db	32
  4214  00FF21  20                 	db	32
  4215  00FF22  00                 	db	0
  4216  00FF23                     STR_11:
  4217                           
  4218                           ; BSR set to: 57
  4219  00FF23  49                 	db	73	;'I'
  4220  00FF24  6E                 	db	110	;'n'
  4221  00FF25  76                 	db	118	;'v'
  4222  00FF26  61                 	db	97	;'a'
  4223  00FF27  6C                 	db	108	;'l'
  4224  00FF28  69                 	db	105	;'i'
  4225  00FF29  64                 	db	100	;'d'
  4226  00FF2A  20                 	db	32
  4227  00FF2B  45                 	db	69	;'E'
  4228  00FF2C  45                 	db	69	;'E'
  4229  00FF2D  50                 	db	80	;'P'
  4230  00FF2E  52                 	db	82	;'R'
  4231  00FF2F  4F                 	db	79	;'O'
  4232  00FF30  4D                 	db	77	;'M'
  4233  00FF31  20                 	db	32
  4234  00FF32  44                 	db	68	;'D'
  4235  00FF33  41                 	db	65	;'A'
  4236  00FF34  54                 	db	84	;'T'
  4237  00FF35  41                 	db	65	;'A'
  4238  00FF36  20                 	db	32
  4239  00FF37  00                 	db	0
  4240  00FF38                     STR_25:
  4241                           
  4242                           ; BSR set to: 57
  4243  00FF38  48                 	db	72	;'H'
  4244  00FF39  69                 	db	105	;'i'
  4245  00FF3A  73                 	db	115	;'s'
  4246  00FF3B  74                 	db	116	;'t'
  4247  00FF3C  6F                 	db	111	;'o'
  4248  00FF3D  72                 	db	114	;'r'
  4249  00FF3E  79                 	db	121	;'y'
  4250  00FF3F  20                 	db	32
  4251  00FF40  44                 	db	68	;'D'
  4252  00FF41  61                 	db	97	;'a'
  4253  00FF42  74                 	db	116	;'t'
  4254  00FF43  61                 	db	97	;'a'
  4255  00FF44  20                 	db	32
  4256  00FF45  20                 	db	32
  4257  00FF46  53                 	db	83	;'S'
  4258  00FF47  61                 	db	97	;'a'
  4259  00FF48  76                 	db	118	;'v'
  4260  00FF49  65                 	db	101	;'e'
  4261  00FF4A  64                 	db	100	;'d'
  4262  00FF4B  20                 	db	32
  4263  00FF4C  00                 	db	0
  4264  00FF4D                     STR_55:
  4265                           
  4266                           ; BSR set to: 57
  4267  00FF4D  52                 	db	82	;'R'
  4268  00FF4E  65                 	db	101	;'e'
  4269  00FF4F  6C                 	db	108	;'l'
  4270  00FF50  65                 	db	101	;'e'
  4271  00FF51  61                 	db	97	;'a'
  4272  00FF52  73                 	db	115	;'s'
  4273  00FF53  65                 	db	101	;'e'
  4274  00FF54  20                 	db	32
  4275  00FF55  62                 	db	98	;'b'
  4276  00FF56  75                 	db	117	;'u'
  4277  00FF57  74                 	db	116	;'t'
  4278  00FF58  74                 	db	116	;'t'
  4279  00FF59  6F                 	db	111	;'o'
  4280  00FF5A  6E                 	db	110	;'n'
  4281  00FF5B  20                 	db	32
  4282  00FF5C  25                 	db	37
  4283  00FF5D  63                 	db	99	;'c'
  4284  00FF5E  20                 	db	32
  4285  00FF5F  20                 	db	32
  4286  00FF60  00                 	db	0
  4287  00FF61                     STR_85:
  4288                           
  4289                           ; BSR set to: 57
  4290  00FF61  48                 	db	72	;'H'
  4291  00FF62  45                 	db	69	;'E'
  4292  00FF63  4C                 	db	76	;'L'
  4293  00FF64  50                 	db	80	;'P'
  4294  00FF65  20                 	db	32
  4295  00FF66  25                 	db	37
  4296  00FF67  73                 	db	115	;'s'
  4297  00FF68  20                 	db	32
  4298  00FF69  20                 	db	32
  4299  00FF6A  20                 	db	32
  4300  00FF6B  20                 	db	32
  4301  00FF6C  20                 	db	32
  4302  00FF6D  20                 	db	32
  4303  00FF6E  20                 	db	32
  4304  00FF6F  20                 	db	32
  4305  00FF70  20                 	db	32
  4306  00FF71  20                 	db	32
  4307  00FF72  20                 	db	32
  4308  00FF73  00                 	db	0
  4309  00FF74                     STR_68:
  4310                           
  4311                           ; BSR set to: 57
  4312  00FF74  50                 	db	80	;'P'
  4313  00FF75  72                 	db	114	;'r'
  4314  00FF76  65                 	db	101	;'e'
  4315  00FF77  73                 	db	115	;'s'
  4316  00FF78  73                 	db	115	;'s'
  4317  00FF79  20                 	db	32
  4318  00FF7A  62                 	db	98	;'b'
  4319  00FF7B  75                 	db	117	;'u'
  4320  00FF7C  74                 	db	116	;'t'
  4321  00FF7D  74                 	db	116	;'t'
  4322  00FF7E  6F                 	db	111	;'o'
  4323  00FF7F  6E                 	db	110	;'n'
  4324  00FF80  20                 	db	32
  4325  00FF81  25                 	db	37
  4326  00FF82  63                 	db	99	;'c'
  4327  00FF83  20                 	db	32
  4328  00FF84  20                 	db	32
  4329  00FF85  00                 	db	0
  4330  00FF86                     
  4331                           ; BSR set to: 57
  4332  00FF86  25                 	db	37
  4333  00FF87  64                 	db	100	;'d'
  4334  00FF88  20                 	db	32
  4335  00FF89  25                 	db	37
  4336  00FF8A  32                 	db	50	;'2'
  4337  00FF8B  2E                 	db	46
  4338  00FF8C  34                 	db	52	;'4'
  4339  00FF8D  66                 	db	102	;'f'
  4340  00FF8E  2C                 	db	44
  4341  00FF8F  20                 	db	32
  4342  00FF90  25                 	db	37
  4343  00FF91  64                 	db	100	;'d'
  4344  00FF92  20                 	db	32
  4345  00FF93  20                 	db	32
  4346  00FF94  20                 	db	32
  4347  00FF95  23                 	db	35
  4348  00FF96  00                 	db	0
  4349  00FF97                     STR_28:
  4350                           
  4351                           ; BSR set to: 57
  4352  00FF97  25                 	db	37
  4353  00FF98  64                 	db	100	;'d'
  4354  00FF99  20                 	db	32
  4355  00FF9A  25                 	db	37
  4356  00FF9B  32                 	db	50	;'2'
  4357  00FF9C  2E                 	db	46
  4358  00FF9D  34                 	db	52	;'4'
  4359  00FF9E  66                 	db	102	;'f'
  4360  00FF9F  20                 	db	32
  4361  00FFA0  20                 	db	32
  4362  00FFA1  20                 	db	32
  4363  00FFA2  25                 	db	37
  4364  00FFA3  64                 	db	100	;'d'
  4365  00FFA4  20                 	db	32
  4366  00FFA5  20                 	db	32
  4367  00FFA6  00                 	db	0
  4368  00FFA7                     STR_89:
  4369                           
  4370                           ; BSR set to: 57
  4371  00FFA7  76                 	db	118	;'v'
  4372  00FFA8  74                 	db	116	;'t'
  4373  00FFA9  65                 	db	101	;'e'
  4374  00FFAA  72                 	db	114	;'r'
  4375  00FFAB  6D                 	db	109	;'m'
  4376  00FFAC  20                 	db	32
  4377  00FFAD  25                 	db	37
  4378  00FFAE  78                 	db	120	;'x'
  4379  00FFAF  3A                 	db	58	;':'
  4380  00FFB0  25                 	db	37
  4381  00FFB1  78                 	db	120	;'x'
  4382  00FFB2  20                 	db	32
  4383  00FFB3  20                 	db	32
  4384  00FFB4  20                 	db	32
  4385  00FFB5  00                 	db	0
  4386  00FFB6                     STR_83:
  4387                           
  4388                           ; BSR set to: 57
  4389  00FFB6  46                 	db	70	;'F'
  4390  00FFB7  65                 	db	101	;'e'
  4391  00FFB8  62                 	db	98	;'b'
  4392  00FFB9  20                 	db	32
  4393  00FFBA  31                 	db	49	;'1'
  4394  00FFBB  36                 	db	54	;'6'
  4395  00FFBC  20                 	db	32
  4396  00FFBD  32                 	db	50	;'2'
  4397  00FFBE  30                 	db	48	;'0'
  4398  00FFBF  32                 	db	50	;'2'
  4399  00FFC0  30                 	db	48	;'0'
  4400  00FFC1  00                 	db	0
  4401  00FFC2                     STR_87:
  4402                           
  4403                           ; BSR set to: 57
  4404  00FFC2  25                 	db	37
  4405  00FFC3  73                 	db	115	;'s'
  4406  00FFC4  20                 	db	32
  4407  00FFC5  20                 	db	32
  4408  00FFC6  20                 	db	32
  4409  00FFC7  20                 	db	32
  4410  00FFC8  20                 	db	32
  4411  00FFC9  20                 	db	32
  4412  00FFCA  20                 	db	32
  4413  00FFCB  00                 	db	0
  4414  00FFCC                     STR_84:
  4415                           
  4416                           ; BSR set to: 57
  4417  00FFCC  31                 	db	49	;'1'
  4418  00FFCD  37                 	db	55	;'7'
  4419  00FFCE  3A                 	db	58	;':'
  4420  00FFCF  33                 	db	51	;'3'
  4421  00FFD0  31                 	db	49	;'1'
  4422  00FFD1  3A                 	db	58	;':'
  4423  00FFD2  30                 	db	48	;'0'
  4424  00FFD3  39                 	db	57	;'9'
  4425  00FFD4  00                 	db	0
  4426  00FFD5                     STR_3:
  4427                           
  4428                           ; BSR set to: 57
  4429  00FFD5  31                 	db	49	;'1'
  4430  00FFD6  2E                 	db	46
  4431  00FFD7  32                 	db	50	;'2'
  4432  00FFD8  34                 	db	52	;'4'
  4433  00FFD9  00                 	db	0
  4434  00FFDA                     STR_104:
  4435                           
  4436                           ; BSR set to: 57
  4437  00FFDA  49                 	db	73	;'I'
  4438  00FFDB  4E                 	db	78	;'N'
  4439  00FFDC  46                 	db	70	;'F'
  4440  00FFDD  00                 	db	0
  4441  00FFDE                     STR_108:
  4442                           
  4443                           ; BSR set to: 57
  4444  00FFDE  4E                 	db	78	;'N'
  4445  00FFDF  41                 	db	65	;'A'
  4446  00FFE0  4E                 	db	78	;'N'
  4447  00FFE1  00                 	db	0
  4448  00FFE2                     STR_105:
  4449                           
  4450                           ; BSR set to: 57
  4451  00FFE2  69                 	db	105	;'i'
  4452  00FFE3  6E                 	db	110	;'n'
  4453  00FFE4  66                 	db	102	;'f'
  4454  00FFE5  00                 	db	0
  4455  00FFE6                     STR_109:
  4456                           
  4457                           ; BSR set to: 57
  4458  00FFE6  6E                 	db	110	;'n'
  4459  00FFE7  61                 	db	97	;'a'
  4460  00FFE8  6E                 	db	110	;'n'
  4461  00FFE9  00                 	db	0
  4462  00FFEA                     STR_135:
  4463                           
  4464                           ; BSR set to: 57
  4465  00FFEA  6C                 	db	108	;'l'
  4466  00FFEB  58                 	db	88	;'X'
  4467  00FFEC  00                 	db	0
  4468  00FFED                     STR_112:
  4469                           
  4470                           ; BSR set to: 57
  4471  00FFED  6C                 	db	108	;'l'
  4472  00FFEE  64                 	db	100	;'d'
  4473  00FFEF  00                 	db	0
  4474  00FFF0                     STR_121:
  4475                           
  4476                           ; BSR set to: 57
  4477  00FFF0  6C                 	db	108	;'l'
  4478  00FFF1  66                 	db	102	;'f'
  4479  00FFF2  00                 	db	0
  4480  00FFF3                     STR_116:
  4481                           
  4482                           ; BSR set to: 57
  4483  00FFF3  6C                 	db	108	;'l'
  4484  00FFF4  69                 	db	105	;'i'
  4485  00FFF5  00                 	db	0
  4486  00FFF6                     STR_126:
  4487                           
  4488                           ; BSR set to: 57
  4489  00FFF6  6C                 	db	108	;'l'
  4490  00FFF7  75                 	db	117	;'u'
  4491  00FFF8  00                 	db	0
  4492  00FFF9                     STR_131:
  4493                           
  4494                           ; BSR set to: 57
  4495  00FFF9  6C                 	db	108	;'l'
  4496  00FFFA  78                 	db	120	;'x'
  4497  00FFFB  00                 	db	0
  4498  00FFFC                     STR_82:
  4499                           
  4500                           ; BSR set to: 57
  4501  00FFFC  25                 	db	37
  4502  00FFFD  73                 	db	115	;'s'
  4503  00FFFE  00                 	db	0
  4504  0000                     
  4505                           ; #config settings
  4506  00FFFF  00                 	db	0	; dummy byte at the end
  4507  0000                     
  4508                           	psect	cinit
  4509  0000B6                     __pcinit:
  4510                           	opt callstack 0
  4511  0000B6                     start_initialization:
  4512                           	opt callstack 0
  4513  0000B6                     __initialization:
  4514                           	opt callstack 0
  4515                           
  4516                           ; Initialize objects allocated to BIGRAM (848 bytes)
  4517                           ; load TBLPTR registers with __pidataBIGRAM
  4518  0000B6  0E6E               	movlw	low __pidataBIGRAM
  4519  0000B8  6EF6               	movwf	tblptrl,c
  4520  0000BA  0EA9               	movlw	high __pidataBIGRAM
  4521  0000BC  6EF7               	movwf	tblptrh,c
  4522  0000BE  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4523  0000C0  6EF8               	movwf	tblptru,c
  4524  0000C2  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4525  0000C6  EE20 F350          	lfsr	2,848
  4526  0000CA                     copy_data0:
  4527  0000CA  0009               	tblrd		*+
  4528  0000CC  006F FFD7 FFEE     	movff	tablat,postinc0
  4529  0000D2  50DD               	movf	postdec2,w,c
  4530  0000D4  50D9               	movf	fsr2l,w,c
  4531  0000D6  E1F9               	bnz	copy_data0
  4532  0000D8  50DA               	movf	fsr2h,w,c
  4533  0000DA  E1F7               	bnz	copy_data0
  4534                           
  4535                           ; Initialize objects allocated to BANK2 (188 bytes)
  4536                           ; load TBLPTR registers with __pidataBANK2
  4537  0000DC  0E6A               	movlw	low __pidataBANK2
  4538  0000DE  6EF6               	movwf	tblptrl,c
  4539  0000E0  0E09               	movlw	high __pidataBANK2
  4540  0000E2  6EF7               	movwf	tblptrh,c
  4541  0000E4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4542  0000E6  6EF8               	movwf	tblptru,c
  4543  0000E8  EE00  F200         	lfsr	0,__pdataBANK2
  4544  0000EC  EE20 F0BC          	lfsr	2,188
  4545  0000F0                     copy_data1:
  4546  0000F0  0009               	tblrd		*+
  4547  0000F2  006F FFD7 FFEE     	movff	tablat,postinc0
  4548  0000F8  50DD               	movf	postdec2,w,c
  4549  0000FA  50D9               	movf	fsr2l,w,c
  4550  0000FC  E1F9               	bnz	copy_data1
  4551                           
  4552                           ; Initialize objects allocated to BANK1 (180 bytes)
  4553                           ; load TBLPTR registers with __pidataBANK1
  4554  0000FE  0E4E               	movlw	low __pidataBANK1
  4555  000100  6EF6               	movwf	tblptrl,c
  4556  000102  0E0C               	movlw	high __pidataBANK1
  4557  000104  6EF7               	movwf	tblptrh,c
  4558  000106  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4559  000108  6EF8               	movwf	tblptru,c
  4560  00010A  EE00  F100         	lfsr	0,__pdataBANK1
  4561  00010E  EE20 F0B4          	lfsr	2,180
  4562  000112                     copy_data2:
  4563  000112  0009               	tblrd		*+
  4564  000114  006F FFD7 FFEE     	movff	tablat,postinc0
  4565  00011A  50DD               	movf	postdec2,w,c
  4566  00011C  50D9               	movf	fsr2l,w,c
  4567  00011E  E1F9               	bnz	copy_data2
  4568                           
  4569                           ; Clear objects allocated to BIGRAM (642 bytes)
  4570  000120  EE02  F24F         	lfsr	0,__pbssBIGRAM
  4571  000124  EE20 F282          	lfsr	2,642
  4572  000128                     clear_0:
  4573  000128  6AEE               	clrf	postinc0,c
  4574  00012A  50DD               	movf	postdec2,w,c
  4575  00012C  50D9               	movf	fsr2l,w,c
  4576  00012E  E1FC               	bnz	clear_0
  4577  000130  50DA               	movf	fsr2h,w,c
  4578  000132  E1FA               	bnz	clear_0
  4579                           
  4580                           ; Clear objects allocated to BANK6 (255 bytes)
  4581  000134  EE01  F200         	lfsr	0,__pbssBANK6
  4582  000138  EE20 F0FF          	lfsr	2,255
  4583  00013C                     clear_1:
  4584  00013C  6AEE               	clrf	postinc0,c
  4585  00013E  50DD               	movf	postdec2,w,c
  4586  000140  50D9               	movf	fsr2l,w,c
  4587  000142  E1FC               	bnz	clear_1
  4588  000144  50DA               	movf	fsr2h,w,c
  4589  000146  E1FA               	bnz	clear_1
  4590                           
  4591                           ; Clear objects allocated to BANK5 (171 bytes)
  4592  000148  EE01  F100         	lfsr	0,__pbssBANK5
  4593  00014C  0EAB               	movlw	171
  4594  00014E                     clear_2:
  4595  00014E  6AEE               	clrf	postinc0,c
  4596  000150  06E8               	decf	wreg,f,c
  4597  000152  E1FD               	bnz	clear_2
  4598                           
  4599                           ; Clear objects allocated to BANK4 (198 bytes)
  4600  000154  EE01  F000         	lfsr	0,__pbssBANK4
  4601  000158  0EC6               	movlw	198
  4602  00015A                     clear_3:
  4603  00015A  6AEE               	clrf	postinc0,c
  4604  00015C  06E8               	decf	wreg,f,c
  4605  00015E  E1FD               	bnz	clear_3
  4606                           
  4607                           ; Clear objects allocated to BANK3 (247 bytes)
  4608  000160  EE00  F300         	lfsr	0,__pbssBANK3
  4609  000164  0EF7               	movlw	247
  4610  000166                     clear_4:
  4611  000166  6AEE               	clrf	postinc0,c
  4612  000168  06E8               	decf	wreg,f,c
  4613  00016A  E1FD               	bnz	clear_4
  4614                           
  4615                           ; Clear objects allocated to BANK2 (62 bytes)
  4616  00016C  EE00  F2BC         	lfsr	0,__pbssBANK2
  4617  000170  0E3E               	movlw	62
  4618  000172                     clear_5:
  4619  000172  6AEE               	clrf	postinc0,c
  4620  000174  06E8               	decf	wreg,f,c
  4621  000176  E1FD               	bnz	clear_5
  4622                           
  4623                           ; Clear objects allocated to BANK1 (69 bytes)
  4624  000178  EE00  F1B4         	lfsr	0,__pbssBANK1
  4625  00017C  0E45               	movlw	69
  4626  00017E                     clear_6:
  4627  00017E  6AEE               	clrf	postinc0,c
  4628  000180  06E8               	decf	wreg,f,c
  4629  000182  E1FD               	bnz	clear_6
  4630                           
  4631                           ; Clear objects allocated to BANK0 (133 bytes)
  4632  000184  EE00  F060         	lfsr	0,__pbssBANK0
  4633  000188  0E85               	movlw	133
  4634  00018A                     clear_7:
  4635  00018A  6AEE               	clrf	postinc0,c
  4636  00018C  06E8               	decf	wreg,f,c
  4637  00018E  E1FD               	bnz	clear_7
  4638                           
  4639                           ; Clear objects allocated to COMRAM (14 bytes)
  4640  000190  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4641  000194  0E0E               	movlw	14
  4642  000196                     clear_8:
  4643  000196  6AEE               	clrf	postinc0,c
  4644  000198  06E8               	decf	wreg,f,c
  4645  00019A  E1FD               	bnz	clear_8
  4646                           
  4647                           ;
  4648                           ; Setup IVTBASE
  4649                           ;
  4650  00019C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4651  00019E  6ED5               	movwf	213,c
  4652  0001A0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4653  0001A2  6ED6               	movwf	214,c
  4654  0001A4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4655  0001A6  6ED7               	movwf	215,c
  4656  0001A8                     end_of_initialization:
  4657                           	opt callstack 0
  4658  0001A8                     __end_of__initialization:
  4659                           	opt callstack 0
  4660  0001A8  0100               	movlb	0
  4661  0001AA  EF00  F080         	goto	_main	;jump to C main() function
  4662                           
  4663                           	psect	bssCOMRAM
  4664  00004A                     __pbssCOMRAM:
  4665                           	opt callstack 0
  4666  00004A                     _width:
  4667                           	opt callstack 0
  4668  00004A                     	ds	2
  4669  00004C                     _prec:
  4670                           	opt callstack 0
  4671  00004C                     	ds	2
  4672  00004E                     _flags:
  4673                           	opt callstack 0
  4674  00004E                     	ds	2
  4675  000050                     calc_bsoc@log_update_wait:
  4676                           	opt callstack 0
  4677  000050                     	ds	1
  4678  000051                     check_day_time@day_delay:
  4679                           	opt callstack 0
  4680  000051                     	ds	1
  4681  000052                     dac_spi_control@init:
  4682                           	opt callstack 0
  4683  000052                     	ds	1
  4684  000053                     display_history@bwait:
  4685                           	opt callstack 0
  4686  000053                     	ds	1
  4687  000054                     _uart2RxHead:
  4688                           	opt callstack 0
  4689  000054                     	ds	1
  4690  000055                     _uart2TxBufferRemaining:
  4691                           	opt callstack 0
  4692  000055                     	ds	1
  4693  000056                     _uart2TxTail:
  4694                           	opt callstack 0
  4695  000056                     	ds	1
  4696  000057                     _uart1RxHead:
  4697                           	opt callstack 0
  4698  000057                     	ds	1
  4699                           
  4700                           	psect	bssBANK0
  4701  000060                     __pbssBANK0:
  4702                           	opt callstack 0
  4703  000060                     _spi_link:
  4704                           	opt callstack 0
  4705  000060                     	ds	12
  4706  00006C                     ___tzname:
  4707                           	opt callstack 0
  4708  00006C                     	ds	4
  4709  000070                     ___timezone:
  4710                           	opt callstack 0
  4711  000070                     	ds	4
  4712  000074                     floorf@F524:
  4713                           	opt callstack 0
  4714  000074                     	ds	4
  4715  000078                     fabsf@F463:
  4716                           	opt callstack 0
  4717  000078                     	ds	4
  4718  00007C                     ___fpclassifyf@F463:
  4719                           	opt callstack 0
  4720  00007C                     	ds	4
  4721  000080                     calc_ror_data@bcror:
  4722                           	opt callstack 0
  4723  000080                     	ds	4
  4724  000084                     calc_ror_data@bvror:
  4725                           	opt callstack 0
  4726  000084                     	ds	4
  4727  000088                     calc_model_data@bcror:
  4728                           	opt callstack 0
  4729  000088                     	ds	4
  4730  00008C                     calc_model_data@bvror:
  4731                           	opt callstack 0
  4732  00008C                     	ds	4
  4733  000090                     wdtdelay@dcount:
  4734                           	opt callstack 0
  4735  000090                     	ds	4
  4736  000094                     _P:
  4737                           	opt callstack 0
  4738  000094                     	ds	4
  4739  000098                     _TMR3_InterruptHandler:
  4740                           	opt callstack 0
  4741  000098                     	ds	3
  4742  00009B                     _TMR5_InterruptHandler:
  4743                           	opt callstack 0
  4744  00009B                     	ds	3
  4745  00009E                     _TMR6_InterruptHandler:
  4746                           	opt callstack 0
  4747  00009E                     	ds	3
  4748  0000A1                     _ADCC_ADTI_InterruptHandler:
  4749                           	opt callstack 0
  4750  0000A1                     	ds	3
  4751  0000A4                     _ADCC_ADI_InterruptHandler:
  4752                           	opt callstack 0
  4753  0000A4                     	ds	3
  4754  0000A7                     _UART1_RxInterruptHandler:
  4755                           	opt callstack 0
  4756  0000A7                     	ds	3
  4757  0000AA                     _UART2_TxInterruptHandler:
  4758                           	opt callstack 0
  4759  0000AA                     	ds	3
  4760  0000AD                     _UART2_RxInterruptHandler:
  4761                           	opt callstack 0
  4762  0000AD                     	ds	3
  4763  0000B0                     _INT1_InterruptHandler:
  4764                           	opt callstack 0
  4765  0000B0                     	ds	3
  4766  0000B3                     _INT0_InterruptHandler:
  4767                           	opt callstack 0
  4768  0000B3                     	ds	3
  4769  0000B6                     _dst_off:
  4770                           	opt callstack 0
  4771  0000B6                     	ds	2
  4772  0000B8                     ___daylight:
  4773                           	opt callstack 0
  4774  0000B8                     	ds	2
  4775  0000BA                     _nout:
  4776                           	opt callstack 0
  4777  0000BA                     	ds	2
  4778  0000BC                     _t_mbmc:
  4779                           	opt callstack 0
  4780  0000BC                     	ds	2
  4781  0000BE                     TMR3_ISR@CountCallBack:
  4782                           	opt callstack 0
  4783  0000BE                     	ds	2
  4784  0000C0                     _timer3ReloadVal:
  4785                           	opt callstack 0
  4786  0000C0                     	ds	2
  4787  0000C2                     TMR5_ISR@CountCallBack:
  4788                           	opt callstack 0
  4789  0000C2                     	ds	2
  4790  0000C4                     _timer5ReloadVal:
  4791                           	opt callstack 0
  4792  0000C4                     	ds	2
  4793  0000C6                     esr_check@esr_state:
  4794                           	opt callstack 0
  4795  0000C6                     	ds	1
  4796  0000C7                     dac_spi_control@SB:
  4797                           	opt callstack 0
  4798  0000C7                     	ds	1
  4799  0000C8                     dac_spi_control@SC:
  4800                           	opt callstack 0
  4801  0000C8                     	ds	1
  4802  0000C9                     dac_spi_control@S2:
  4803                           	opt callstack 0
  4804  0000C9                     	ds	1
  4805  0000CA                     dac_spi_control@S1:
  4806                           	opt callstack 0
  4807  0000CA                     	ds	1
  4808  0000CB                     dac_spi_control@S0:
  4809                           	opt callstack 0
  4810  0000CB                     	ds	1
  4811  0000CC                     _mode_sw:
  4812                           	opt callstack 0
  4813  0000CC                     	ds	1
  4814  0000CD                     _uart2RxCount:
  4815                           	opt callstack 0
  4816  0000CD                     	ds	1
  4817  0000CE                     _uart2RxTail:
  4818                           	opt callstack 0
  4819  0000CE                     	ds	1
  4820  0000CF                     _uart2TxHead:
  4821                           	opt callstack 0
  4822  0000CF                     	ds	1
  4823  0000D0                     _uart1RxCount:
  4824                           	opt callstack 0
  4825  0000D0                     	ds	1
  4826  0000D1                     _uart1RxTail:
  4827                           	opt callstack 0
  4828  0000D1                     	ds	1
  4829  0000D2                     time@current_time:
  4830                           	opt callstack 0
  4831  0000D2                     	ds	8
  4832  0000DA                     _pclock:
  4833                           	opt callstack 0
  4834  0000DA                     	ds	8
  4835  0000E2                     _crcObj:
  4836                           	opt callstack 0
  4837  0000E2                     	ds	3
  4838                           
  4839                           	psect	bssBANK1
  4840  0001B4                     __pbssBANK1:
  4841                           	opt callstack 0
  4842  0001B4                     _S:
  4843                           	opt callstack 0
  4844  0001B4                     	ds	41
  4845  0001DD                     spinners@s:
  4846                           	opt callstack 0
  4847  0001DD                     	ds	6
  4848  0001E3                     _lock:
  4849                           	opt callstack 0
  4850  0001E3                     	ds	4
  4851  0001E7                     _utctime:
  4852                           	opt callstack 0
  4853  0001E7                     	ds	4
  4854  0001EB                     _dst_name:
  4855                           	opt callstack 0
  4856  0001EB                     	ds	7
  4857  0001F2                     _std_name:
  4858                           	opt callstack 0
  4859  0001F2                     	ds	7
  4860                           
  4861                           	psect	dataBANK1
  4862  000100                     __pdataBANK1:
  4863                           	opt callstack 0
  4864  000100                     _R:
  4865                           	opt callstack 0
  4866  000100                     	ds	171
  4867  0001AB                     _H:
  4868                           	opt callstack 0
  4869  0001AB                     	ds	9
  4870                           
  4871                           	psect	bssBANK2
  4872  0002BC                     __pbssBANK2:
  4873                           	opt callstack 0
  4874  0002BC                     _tickCount:
  4875                           	opt callstack 0
  4876  0002BC                     	ds	26
  4877  0002D6                     _uart1RxBuffer:
  4878                           	opt callstack 0
  4879  0002D6                     	ds	8
  4880  0002DE                     _r1:
  4881                           	opt callstack 0
  4882  0002DE                     	ds	10
  4883  0002E8                     _r0:
  4884                           	opt callstack 0
  4885  0002E8                     	ds	10
  4886  0002F2                     _seed:
  4887                           	opt callstack 0
  4888  0002F2                     	ds	8
  4889                           
  4890                           	psect	dataBANK2
  4891  000200                     __pdataBANK2:
  4892                           	opt callstack 0
  4893  000200                     stoa@F1166:
  4894                           	opt callstack 0
  4895  000200                     	ds	7
  4896  000207                     _V:
  4897                           	opt callstack 0
  4898  000207                     	ds	181
  4899                           
  4900                           	psect	bssBANK3
  4901  000300                     __pbssBANK3:
  4902                           	opt callstack 0
  4903  000300                     lp_filter@smooth:
  4904                           	opt callstack 0
  4905  000300                     	ds	84
  4906  000354                     _dbuf:
  4907                           	opt callstack 0
  4908  000354                     	ds	80
  4909  0003A4                     	ds	32
  4910  0003C4                     asctime@buf:
  4911                           	opt callstack 0
  4912  0003C4                     	ds	27
  4913  0003DF                     localtime@tm:
  4914                           	opt callstack 0
  4915  0003DF                     	ds	24
  4916                           
  4917                           	psect	bssBANK4
  4918  000400                     __pbssBANK4:
  4919                           	opt callstack 0
  4920  000400                     _uart2TxBuffer:
  4921                           	opt callstack 0
  4922  000400                     	ds	64
  4923  000440                     _ring_buf2:
  4924                           	opt callstack 0
  4925  000440                     	ds	67
  4926  000483                     _ring_buf1:
  4927                           	opt callstack 0
  4928  000483                     	ds	67
  4929                           
  4930                           	psect	bssBANK5
  4931  000500                     __pbssBANK5:
  4932                           	opt callstack 0
  4933  000500                     _r_cal:
  4934                           	opt callstack 0
  4935  000500                     	ds	171
  4936                           
  4937                           	psect	bssBANK6
  4938  000600                     __pbssBANK6:
  4939                           	opt callstack 0
  4940  000600                     _uart2RxBuffer:
  4941                           	opt callstack 0
  4942  000600                     	ds	255
  4943                           
  4944                           	psect	bssBIGRAM
  4945  000A4F                     __pbssBIGRAM:
  4946                           	opt callstack 0
  4947  000A4F                     _D:
  4948                           	opt callstack 0
  4949  000A4F                     	ds	642
  4950                           
  4951                           	psect	dataBIGRAM
  4952  0006FF                     __pdataBIGRAM:
  4953                           	opt callstack 0
  4954  0006FF                     _port_data:
  4955                           	opt callstack 0
  4956  0006FF                     	ds	512
  4957  0008FF                     _C:
  4958                           	opt callstack 0
  4959  0008FF                     	ds	336
  4960                           
  4961                           	psect	cstackBANK0
  4962  0000E5                     __pcstackBANK0:
  4963                           	opt callstack 0
  4964  0000E5                     ??_TMR3_ISR:
  4965                           
  4966                           ; 1 bytes @ 0x0
  4967  0000E5                     	ds	25
  4968                           
  4969                           	psect	cstackCOMRAM
  4970  000001                     __pcstackCOMRAM:
  4971                           	opt callstack 0
  4972  000001                     ??_ADCC_ThresholdISR:
  4973  000001                     
  4974                           ; 1 bytes @ 0x0
  4975  000001                     	ds	5
  4976  000006                     ??_TMR6_ISR:
  4977                           
  4978                           ; 1 bytes @ 0x5
  4979  000006                     	ds	1
  4980  000007                     ??_INT1_ISR:
  4981  000007                     
  4982                           ; 1 bytes @ 0x6
  4983  000007                     	ds	4
  4984  00000B                     ??_TMR5_ISR:
  4985                           
  4986                           ; 1 bytes @ 0xA
  4987  00000B                     	ds	31
  4988                           
  4989 ;;
  4990 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4991 ;;
  4992 ;; *************** function _main *****************
  4993 ;; Defined at:
  4994 ;;		line 198 in file "main.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;		None
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  esr_temp        4  [STACK] float 
  4999 ;;  i_esr           2  [STACK] unsigned short 
  5000 ;;  shape           1  [STACK] unsigned char 
  5001 ;;  inp_index       1  [STACK] unsigned char 
  5002 ;;  k               1  [STACK] unsigned char 
  5003 ;;  j               1  [STACK] unsigned char 
  5004 ;;  i               1  [STACK] unsigned char 
  5005 ;;  mode            1  [STACK] enum E17179
  5006 ;;  i_ror           1  [STACK] unsigned char 
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1  [STACK] void 
  5009 ;; Registers used:
  5010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels required when called:   28
  5022 ;; This function calls:
  5023 ;;		_SYSTEM_Initialize
  5024 ;;		_StartTimer
  5025 ;;		_TimerDone
  5026 ;;		_WaitMs
  5027 ;;		___fladd
  5028 ;;		___flge
  5029 ;;		___fltol
  5030 ;;		_asctime
  5031 ;;		_calc_model_data
  5032 ;;		_calc_ror_data
  5033 ;;		_check_adc_scan
  5034 ;;		_check_enter_button
  5035 ;;		_check_help
  5036 ;;		_clear_adc_scan
  5037 ;;		_clear_hid_pflags
  5038 ;;		_conv_raw_result
  5039 ;;		_convert_adc_data
  5040 ;;		_current_sensor_cal
  5041 ;;		_display_history
  5042 ;;		_eaDogM_WriteCommand
  5043 ;;		_esr_check
  5044 ;;		_fabsf
  5045 ;;		_get_raw_result
  5046 ;;		_get_switch
  5047 ;;		_get_vterm_ptr
  5048 ;;		_hid_display
  5049 ;;		_init_bsoc
  5050 ;;		_init_display
  5051 ;;		_init_port_dma
  5052 ;;		_load_hist_data
  5053 ;;		_localtime
  5054 ;;		_lp_filter
  5055 ;;		_mode_lamp_dim
  5056 ;;		_read_cal_data
  5057 ;;		_set_dac
  5058 ;;		_set_dac_a
  5059 ;;		_set_dac_b
  5060 ;;		_set_display_info
  5061 ;;		_set_load_relay_one
  5062 ;;		_set_load_relay_two
  5063 ;;		_set_vterm
  5064 ;;		_spinners
  5065 ;;		_sprintf
  5066 ;;		_srand
  5067 ;;		_start_adc_scan
  5068 ;;		_start_switch_handler
  5069 ;;		_static_soc
  5070 ;;		_time
  5071 ;;		_update_cal_data
  5072 ;;		_update_hist_data
  5073 ;;		_update_lcd
  5074 ;;		_wait_lcd_done
  5075 ;;		_write_cal_data
  5076 ;; This function is called by:
  5077 ;;		Startup code after reset
  5078 ;; This function uses a reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text0
  5082  010000                     __ptext0:
  5083                           	opt callstack 0
  5084  010000                     _main:
  5085                           	opt callstack 0
  5086                           
  5087                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5088  010000  0E11               	movlw	17
  5089  010002  26E1               	addwf	fsr1l,f,c
  5090  010004  0E00               	movlw	0
  5091  010006  22E2               	addwfc	fsr1h,f,c
  5092                           
  5093                           ;main.c: 200:  UI_STATES mode;;main.c: 201:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  5094                           ;stkvar	_inp_index @ sp[(-17)+11]
  5095                           
  5096                           ;incstack = 0
  5097  010008  0EFA               	movlw	-6
  5098  01000A  6AE3               	clrf	plusw1,c
  5099                           
  5100                           ;stkvar	_i @ sp[(-17)+14]
  5101  01000C  0EFD               	movlw	-3
  5102  01000E  6AE3               	clrf	plusw1,c
  5103                           
  5104                           ;stkvar	_j @ sp[(-17)+13]
  5105  010010  0EFC               	movlw	-4
  5106  010012  6AE3               	clrf	plusw1,c
  5107  010014  2AE3               	incf	plusw1,f,c
  5108                           
  5109                           ;stkvar	_k @ sp[(-17)+12]
  5110  010016  0EFB               	movlw	-5
  5111  010018  6AE3               	clrf	plusw1,c
  5112  01001A  82E3               	bsf	plusw1,1,c
  5113                           
  5114                           ;main.c: 204:  SYSTEM_Initialize();
  5115  01001C  ECE9  F00F         	call	_SYSTEM_Initialize	;wreg free
  5116                           
  5117                           ; BSR set to: 60
  5118                           ;main.c: 207:  (INTCON0bits.GIEH = 1);
  5119  010020  8ED2               	bsf	210,7,c	;volatile
  5120                           
  5121                           ; BSR set to: 60
  5122                           ;main.c: 210:  (INTCON0bits.GIEL = 1);
  5123  010022  8CD2               	bsf	210,6,c	;volatile
  5124                           
  5125                           ; BSR set to: 60
  5126                           ;main.c: 212:  V.ui_state = UI_STATE_INIT;
  5127  010024  0102               	movlb	2	; () banked
  5128  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5129                           
  5130                           ; BSR set to: 2
  5131                           ;main.c: 217:  WaitMs(300);
  5132  010028  0E2C               	movlw	44
  5133  01002A  6EE6               	movwf	postinc1,c
  5134  01002C  0E01               	movlw	1
  5135  01002E  6EE6               	movwf	postinc1,c
  5136  010030  ECA6  F012         	call	_WaitMs	;wreg free
  5137                           
  5138                           ;main.c: 218:  if (PORTBbits.RB0) {
  5139  010034  A0CB               	btfss	203,0,c	;volatile
  5140  010036  D004               	goto	l17887
  5141                           
  5142                           ;main.c: 219:   mode = UI_STATE_HOST;
  5143                           ;stkvar	_mode @ sp[(-17)+15]
  5144  010038  0EFE               	movlw	-2
  5145  01003A  6AE3               	clrf	plusw1,c
  5146  01003C  2AE3               	incf	plusw1,f,c
  5147                           
  5148                           ;main.c: 220:  } else {
  5149  01003E  D004               	goto	l17889
  5150  010040                     l17887:
  5151                           
  5152                           ;main.c: 221:   mode = UI_STATE_LOG;
  5153                           ;stkvar	_mode @ sp[(-17)+15]
  5154  010040  0EFE               	movlw	-2
  5155  010042  6AE3               	clrf	plusw1,c
  5156  010044  80E3               	bsf	plusw1,0,c
  5157  010046  82E3               	bsf	plusw1,1,c	;indir
  5158  010048                     l17889:
  5159                           
  5160                           ;main.c: 224:  if (mode == UI_STATE_HOST) {
  5161                           ;stkvar	_mode @ sp[(-17)+15]
  5162  010048  0EFE               	movlw	-2
  5163  01004A  04E3               	decf	plusw1,w,c
  5164  01004C  A4D8               	btfss	status,2,c
  5165  01004E  D007               	goto	l1455
  5166                           
  5167                           ;main.c: 225:   do { LATDbits.LATD0 = 1; } while(0);
  5168  010050  80BD               	bsf	189,0,c	;volatile
  5169                           
  5170                           ;main.c: 226:   V.mode_pwm = 70;
  5171  010052  0E00               	movlw	0
  5172  010054  0102               	movlb	2	; () banked
  5173  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5174  010058  0E46               	movlw	70
  5175  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5176                           
  5177                           ;main.c: 227:  } else {
  5178  01005C  D004               	goto	l17893
  5179  01005E                     l1455:
  5180  01005E  90BD               	bcf	189,0,c	;volatile
  5181                           
  5182                           ;main.c: 229:   V.mode_pwm = 0;
  5183  010060  0102               	movlb	2	; () banked
  5184  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5185  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5186  010066                     l17893:
  5187                           
  5188                           ; BSR set to: 2
  5189                           ;main.c: 231:  mode_lamp_dim(V.mode_pwm);
  5190  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5191  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5192  010072  EC65  F016         	call	_mode_lamp_dim	;wreg free
  5193  010076  D3CC               	goto	l18047
  5194  010078                     l17895:
  5195                           
  5196                           ; BSR set to: 2
  5197                           ;main.c: 239:    init_port_dma();
  5198  010078  EC42  F013         	call	_init_port_dma	;wreg free
  5199                           
  5200                           ; BSR set to: 59
  5201                           ;main.c: 241:    init_display();
  5202  01007C  EC43  F002         	call	_init_display	;wreg free
  5203                           
  5204                           ; BSR set to: 61
  5205                           ;main.c: 242:    eaDogM_WriteCommand(0b00001100);
  5206  010080  0E0C               	movlw	12
  5207  010082  6EE6               	movwf	postinc1,c
  5208  010084  ECED  F016         	call	_eaDogM_WriteCommand	;wreg free
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;main.c: 243:    set_dac();
  5212  010088  ECCC  F005         	call	_set_dac	;wreg free
  5213                           
  5214                           ;main.c: 247:    set_load_relay_one(1);
  5215  01008C  0E01               	movlw	1
  5216  01008E  6EE6               	movwf	postinc1,c
  5217  010090  ECCD  F016         	call	_set_load_relay_one	;wreg free
  5218                           
  5219                           ;main.c: 248:    set_load_relay_two(1);
  5220  010094  0E01               	movlw	1
  5221  010096  6EE6               	movwf	postinc1,c
  5222  010098  ECC5  F016         	call	_set_load_relay_two	;wreg free
  5223                           
  5224                           ;main.c: 250:    V.ui_state = mode;
  5225                           ;stkvar	_mode @ sp[(-17)+15]
  5226  01009C  0EFE               	movlw	-2
  5227  01009E  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5228                           
  5229                           ;main.c: 251:    srand(1957);
  5230  0100A4  0EA5               	movlw	165
  5231  0100A6  6EE6               	movwf	postinc1,c
  5232  0100A8  0E07               	movlw	7
  5233  0100AA  6EE6               	movwf	postinc1,c
  5234  0100AC  ECC1  F012         	call	_srand	;wreg free
  5235                           
  5236                           ; BSR set to: 2
  5237                           ;main.c: 252:    set_vterm(0);
  5238  0100B0  0E00               	movlw	0
  5239  0100B2  6EE6               	movwf	postinc1,c
  5240  0100B4  EC2C  F016         	call	_set_vterm	;wreg free
  5241                           
  5242                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5243  0100B8  0E51               	movlw	low STR_1
  5244  0100BA  6EE6               	movwf	postinc1,c
  5245  0100BC  0EFE               	movlw	high STR_1
  5246  0100BE  6EE6               	movwf	postinc1,c
  5247  0100C0  0E00               	movlw	0
  5248  0100C2  6EE6               	movwf	postinc1,c
  5249  0100C4  0E00               	movlw	0
  5250  0100C6  6EE6               	movwf	postinc1,c
  5251  0100C8  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5252  0100CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5253  0100D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5254  0100D8  0E04               	movlw	4
  5255  0100DA  6EE6               	movwf	postinc1,c
  5256  0100DC  EC01  F0FF         	call	_sprintf	;wreg free
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.24");
  5260  0100E0  0ED5               	movlw	low STR_3
  5261  0100E2  6EE6               	movwf	postinc1,c
  5262  0100E4  0EFF               	movlw	high STR_3
  5263  0100E6  6EE6               	movwf	postinc1,c
  5264  0100E8  0EFD               	movlw	low STR_2
  5265  0100EA  6EE6               	movwf	postinc1,c
  5266  0100EC  0EFD               	movlw	high STR_2
  5267  0100EE  6EE6               	movwf	postinc1,c
  5268  0100F0  0E00               	movlw	0
  5269  0100F2  6EE6               	movwf	postinc1,c
  5270  0100F4  0E01               	movlw	1
  5271  0100F6  6EE6               	movwf	postinc1,c
  5272  0100F8  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5273  0100FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5274  010102  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5275  010108  0E06               	movlw	6
  5276  01010A  6EE6               	movwf	postinc1,c
  5277  01010C  EC01  F0FF         	call	_sprintf	;wreg free
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5281  010110  0E7F               	movlw	low STR_4
  5282  010112  6EE6               	movwf	postinc1,c
  5283  010114  0EFD               	movlw	high STR_4
  5284  010116  6EE6               	movwf	postinc1,c
  5285  010118  0E00               	movlw	0
  5286  01011A  6EE6               	movwf	postinc1,c
  5287  01011C  0E02               	movlw	2
  5288  01011E  6EE6               	movwf	postinc1,c
  5289  010120  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5290  010124  0060  F0AB  FFE6   	movff	btemp,postinc1
  5291  01012A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5292  010130  0E04               	movlw	4
  5293  010132  6EE6               	movwf	postinc1,c
  5294  010134  EC01  F0FF         	call	_sprintf	;wreg free
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;main.c: 256:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5298  010138  0E8C               	movlw	low (STR_16+1)
  5299  01013A  6EE6               	movwf	postinc1,c
  5300  01013C  0EFB               	movlw	high (STR_16+1)
  5301  01013E  6EE6               	movwf	postinc1,c
  5302  010140  0E00               	movlw	0
  5303  010142  6EE6               	movwf	postinc1,c
  5304  010144  0E03               	movlw	3
  5305  010146  6EE6               	movwf	postinc1,c
  5306  010148  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5307  01014C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5308  010152  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5309  010158  0E04               	movlw	4
  5310  01015A  6EE6               	movwf	postinc1,c
  5311  01015C  EC01  F0FF         	call	_sprintf	;wreg free
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;main.c: 257:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5315  010160  0E8C               	movlw	low (STR_16+1)
  5316  010162  6EE6               	movwf	postinc1,c
  5317  010164  0EFB               	movlw	high (STR_16+1)
  5318  010166  6EE6               	movwf	postinc1,c
  5319  010168  0E02               	movlw	2
  5320  01016A  6EE6               	movwf	postinc1,c
  5321  01016C  0E00               	movlw	0
  5322  01016E  6EE6               	movwf	postinc1,c
  5323  010170  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5324  010174  0060  F0AB  FFE6   	movff	btemp,postinc1
  5325  01017A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5326  010180  0E04               	movlw	4
  5327  010182  6EE6               	movwf	postinc1,c
  5328  010184  EC01  F0FF         	call	_sprintf	;wreg free
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;main.c: 258:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5332  010188  0E8C               	movlw	low (STR_16+1)
  5333  01018A  6EE6               	movwf	postinc1,c
  5334  01018C  0EFB               	movlw	high (STR_16+1)
  5335  01018E  6EE6               	movwf	postinc1,c
  5336  010190  0E02               	movlw	2
  5337  010192  6EE6               	movwf	postinc1,c
  5338  010194  0E01               	movlw	1
  5339  010196  6EE6               	movwf	postinc1,c
  5340  010198  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5341  01019C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5342  0101A2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5343  0101A8  0E04               	movlw	4
  5344  0101AA  6EE6               	movwf	postinc1,c
  5345  0101AC  EC01  F0FF         	call	_sprintf	;wreg free
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;main.c: 259:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5349  0101B0  0E8C               	movlw	low (STR_16+1)
  5350  0101B2  6EE6               	movwf	postinc1,c
  5351  0101B4  0EFB               	movlw	high (STR_16+1)
  5352  0101B6  6EE6               	movwf	postinc1,c
  5353  0101B8  0E02               	movlw	2
  5354  0101BA  6EE6               	movwf	postinc1,c
  5355  0101BC  0E02               	movlw	2
  5356  0101BE  6EE6               	movwf	postinc1,c
  5357  0101C0  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5358  0101C4  0060  F0AB  FFE6   	movff	btemp,postinc1
  5359  0101CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5360  0101D0  0E04               	movlw	4
  5361  0101D2  6EE6               	movwf	postinc1,c
  5362  0101D4  EC01  F0FF         	call	_sprintf	;wreg free
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;main.c: 260:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5366  0101D8  0E8C               	movlw	low (STR_16+1)
  5367  0101DA  6EE6               	movwf	postinc1,c
  5368  0101DC  0EFB               	movlw	high (STR_16+1)
  5369  0101DE  6EE6               	movwf	postinc1,c
  5370  0101E0  0E02               	movlw	2
  5371  0101E2  6EE6               	movwf	postinc1,c
  5372  0101E4  0E03               	movlw	3
  5373  0101E6  6EE6               	movwf	postinc1,c
  5374  0101E8  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5375  0101EC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5376  0101F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5377  0101F8  0E04               	movlw	4
  5378  0101FA  6EE6               	movwf	postinc1,c
  5379  0101FC  EC01  F0FF         	call	_sprintf	;wreg free
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;main.c: 261:    update_lcd(0);
  5383  010200  0E00               	movlw	0
  5384  010202  6EE6               	movwf	postinc1,c
  5385  010204  ECB3  F0F7         	call	_update_lcd	;wreg free
  5386                           
  5387                           ;main.c: 262:    WaitMs(1000);
  5388  010208  0EE8               	movlw	232
  5389  01020A  6EE6               	movwf	postinc1,c
  5390  01020C  0E03               	movlw	3
  5391  01020E  6EE6               	movwf	postinc1,c
  5392  010210  ECA6  F012         	call	_WaitMs	;wreg free
  5393                           
  5394                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  5395  010214  0EFA               	movlw	250
  5396  010216  6EE6               	movwf	postinc1,c
  5397  010218  0E00               	movlw	0
  5398  01021A  6EE6               	movwf	postinc1,c
  5399  01021C  0E0A               	movlw	10
  5400  01021E  6EE6               	movwf	postinc1,c
  5401  010220  ECB3  F011         	call	_StartTimer	;wreg free
  5402                           
  5403                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  5404  010224  0EC8               	movlw	200
  5405  010226  6EE6               	movwf	postinc1,c
  5406  010228  0E00               	movlw	0
  5407  01022A  6EE6               	movwf	postinc1,c
  5408  01022C  0E01               	movlw	1
  5409  01022E  6EE6               	movwf	postinc1,c
  5410  010230  ECB3  F011         	call	_StartTimer	;wreg free
  5411                           
  5412                           ;main.c: 265:    StartTimer(TMR_INFO, 3000);
  5413  010234  0EB8               	movlw	184
  5414  010236  6EE6               	movwf	postinc1,c
  5415  010238  0E0B               	movlw	11
  5416  01023A  6EE6               	movwf	postinc1,c
  5417  01023C  0E07               	movlw	7
  5418  01023E  6EE6               	movwf	postinc1,c
  5419  010240  ECB3  F011         	call	_StartTimer	;wreg free
  5420                           
  5421                           ;main.c: 266:    StartTimer(TMR_FLIPPER, 1500);
  5422  010244  0EDC               	movlw	220
  5423  010246  6EE6               	movwf	postinc1,c
  5424  010248  0E05               	movlw	5
  5425  01024A  6EE6               	movwf	postinc1,c
  5426  01024C  0E0B               	movlw	11
  5427  01024E  6EE6               	movwf	postinc1,c
  5428  010250  ECB3  F011         	call	_StartTimer	;wreg free
  5429                           
  5430                           ;main.c: 267:    StartTimer(TMR_HELPDIS, 3000);
  5431  010254  0EB8               	movlw	184
  5432  010256  6EE6               	movwf	postinc1,c
  5433  010258  0E0B               	movlw	11
  5434  01025A  6EE6               	movwf	postinc1,c
  5435  01025C  0E09               	movlw	9
  5436  01025E  6EE6               	movwf	postinc1,c
  5437  010260  ECB3  F011         	call	_StartTimer	;wreg free
  5438                           
  5439                           ;main.c: 269:    start_adc_scan();
  5440  010264  ECCB  F00D         	call	_start_adc_scan	;wreg free
  5441                           
  5442                           ;main.c: 270:    start_switch_handler();
  5443  010268  ECEE  F015         	call	_start_switch_handler	;wreg free
  5444                           
  5445                           ; BSR set to: 57
  5446                           ;main.c: 271:    WaitMs(1000);
  5447  01026C  0EE8               	movlw	232
  5448  01026E  6EE6               	movwf	postinc1,c
  5449  010270  0E03               	movlw	3
  5450  010272  6EE6               	movwf	postinc1,c
  5451  010274  ECA6  F012         	call	_WaitMs	;wreg free
  5452                           
  5453                           ;main.c: 276:    if (read_cal_data()) {
  5454  010278  ECB8  F0ED         	call	_read_cal_data	;wreg free
  5455  01027C  502A               	movf	btemp^0,w,c
  5456  01027E  B4D8               	btfsc	status,2,c
  5457  010280  D01F               	goto	l17957
  5458                           
  5459                           ;main.c: 277:     update_cal_data();
  5460  010282  EC45  F00F         	call	_update_cal_data	;wreg free
  5461                           
  5462                           ; BSR set to: 1
  5463                           ;main.c: 278:     update_hist_data(1, &C.hist[0]);
  5464  010286  0EB8               	movlw	low (_C+185)
  5465  010288  6EE6               	movwf	postinc1,c
  5466  01028A  0E09               	movlw	high (_C+185)
  5467  01028C  6EE6               	movwf	postinc1,c
  5468  01028E  0E01               	movlw	1
  5469  010290  6EE6               	movwf	postinc1,c
  5470  010292  EC28  F00C         	call	_update_hist_data	;wreg free
  5471                           
  5472                           ;main.c: 279:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5473  010296  0EBA               	movlw	low STR_10
  5474  010298  6EE6               	movwf	postinc1,c
  5475  01029A  0EFE               	movlw	high STR_10
  5476  01029C  6EE6               	movwf	postinc1,c
  5477  01029E  0E00               	movlw	0
  5478  0102A0  6EE6               	movwf	postinc1,c
  5479  0102A2  0E02               	movlw	2
  5480  0102A4  6EE6               	movwf	postinc1,c
  5481  0102A6  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5482  0102AA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5483  0102B0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5484  0102B6  0E04               	movlw	4
  5485  0102B8  6EE6               	movwf	postinc1,c
  5486  0102BA  EC01  F0FF         	call	_sprintf	;wreg free
  5487                           
  5488                           ;main.c: 280:    } else {
  5489  0102BE  D014               	goto	l1461
  5490  0102C0                     l17957:
  5491                           
  5492                           ;main.c: 281:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5493  0102C0  0E23               	movlw	low STR_11
  5494  0102C2  6EE6               	movwf	postinc1,c
  5495  0102C4  0EFF               	movlw	high STR_11
  5496  0102C6  6EE6               	movwf	postinc1,c
  5497  0102C8  0E00               	movlw	0
  5498  0102CA  6EE6               	movwf	postinc1,c
  5499  0102CC  0E02               	movlw	2
  5500  0102CE  6EE6               	movwf	postinc1,c
  5501  0102D0  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5502  0102D4  0060  F0AB  FFE6   	movff	btemp,postinc1
  5503  0102DA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5504  0102E0  0E04               	movlw	4
  5505  0102E2  6EE6               	movwf	postinc1,c
  5506  0102E4  EC01  F0FF         	call	_sprintf	;wreg free
  5507  0102E8                     l1461:
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;main.c: 283:    update_lcd(0);
  5511  0102E8  0E00               	movlw	0
  5512  0102EA  6EE6               	movwf	postinc1,c
  5513  0102EC  ECB3  F0F7         	call	_update_lcd	;wreg free
  5514                           
  5515                           ;main.c: 284:    WaitMs(2000);
  5516  0102F0  0ED0               	movlw	208
  5517  0102F2  6EE6               	movwf	postinc1,c
  5518  0102F4  0E07               	movlw	7
  5519  0102F6  6EE6               	movwf	postinc1,c
  5520  0102F8  ECA6  F012         	call	_WaitMs	;wreg free
  5521                           
  5522                           ;main.c: 286:    i_ror = 1;
  5523                           ;stkvar	_i_ror @ sp[(-17)+16]
  5524  0102FC  0EFF               	movlw	-1
  5525  0102FE  6AE3               	clrf	plusw1,c
  5526  010300  2AE3               	incf	plusw1,f,c
  5527  010302                     l17963:
  5528                           
  5529                           ;main.c: 288:     calc_ror_data();
  5530  010302  ECA9  F0F2         	call	_calc_ror_data	;wreg free
  5531                           
  5532                           ;main.c: 289:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  5533  010306  0E00               	movlw	0
  5534  010308  6EE6               	movwf	postinc1,c
  5535  01030A  0E04               	movlw	4
  5536  01030C  6EE6               	movwf	postinc1,c
  5537  01030E  EC9F  F0C8         	call	_conv_raw_result	;wreg free
  5538  010312  0060  F0AB  FFE6   	movff	btemp,postinc1
  5539  010318  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5540  01031E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5541  010324  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5542  01032A  0E6A               	movlw	low STR_12
  5543  01032C  6EE6               	movwf	postinc1,c
  5544  01032E  0EFD               	movlw	high STR_12
  5545  010330  6EE6               	movwf	postinc1,c
  5546  010332  0E00               	movlw	0
  5547  010334  6EE6               	movwf	postinc1,c
  5548  010336  0E01               	movlw	1
  5549  010338  6EE6               	movwf	postinc1,c
  5550  01033A  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5551  01033E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5552  010344  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5553  01034A  0E08               	movlw	8
  5554  01034C  6EE6               	movwf	postinc1,c
  5555  01034E  EC01  F0FF         	call	_sprintf	;wreg free
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;main.c: 290:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5559  010352  EE22  F16B         	lfsr	2,_C+108	;volatile
  5560  010356  006F FF7B FFE6     	movff	postinc2,postinc1
  5561  01035C  006F FF7B FFE6     	movff	postinc2,postinc1
  5562  010362  006F FF7B FFE6     	movff	postinc2,postinc1
  5563  010368  006F FF7B FFE6     	movff	postinc2,postinc1
  5564                           
  5565                           ;stkvar	_i_ror @ sp[(-21)+16]
  5566  01036E  0EFB               	movlw	-5
  5567  010370  50E3               	movf	plusw1,w,c
  5568  010372  6EE6               	movwf	postinc1,c
  5569  010374  0E00               	movlw	0
  5570  010376  6EE6               	movwf	postinc1,c
  5571  010378  0E00               	movlw	0
  5572  01037A  6EE6               	movwf	postinc1,c
  5573  01037C  0E05               	movlw	5
  5574  01037E  6EE6               	movwf	postinc1,c
  5575  010380  EC52  F001         	call	_spinners	;wreg free
  5576  010384  502A               	movf	btemp^0,w,c
  5577  010386  6EE6               	movwf	postinc1,c
  5578  010388  0E00               	movlw	0
  5579  01038A  6EE6               	movwf	postinc1,c
  5580  01038C  0EE8               	movlw	low STR_13
  5581  01038E  6EE6               	movwf	postinc1,c
  5582  010390  0EFA               	movlw	high STR_13
  5583  010392  6EE6               	movwf	postinc1,c
  5584  010394  0E00               	movlw	0
  5585  010396  6EE6               	movwf	postinc1,c
  5586  010398  0E02               	movlw	2
  5587  01039A  6EE6               	movwf	postinc1,c
  5588  01039C  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5589  0103A0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5590  0103A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5591  0103AC  0E0C               	movlw	12
  5592  0103AE  6EE6               	movwf	postinc1,c
  5593  0103B0  EC01  F0FF         	call	_sprintf	;wreg free
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;main.c: 291:     update_lcd(0);
  5597  0103B4  0E00               	movlw	0
  5598  0103B6  6EE6               	movwf	postinc1,c
  5599  0103B8  ECB3  F0F7         	call	_update_lcd	;wreg free
  5600                           
  5601                           ;main.c: 292:     clear_adc_scan();
  5602  0103BC  EC44  F017         	call	_clear_adc_scan	;wreg free
  5603                           
  5604                           ; BSR set to: 1
  5605                           ;main.c: 293:     start_adc_scan();
  5606  0103C0  ECCB  F00D         	call	_start_adc_scan	;wreg free
  5607                           
  5608                           ;main.c: 294:     WaitMs(2000);
  5609  0103C4  0ED0               	movlw	208
  5610  0103C6  6EE6               	movwf	postinc1,c
  5611  0103C8  0E07               	movlw	7
  5612  0103CA  6EE6               	movwf	postinc1,c
  5613  0103CC  ECA6  F012         	call	_WaitMs	;wreg free
  5614                           
  5615                           ;main.c: 297:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5616                           ;stkvar	_i_ror @ sp[(-17)+16]
  5617  0103D0  0EFF               	movlw	-1
  5618  0103D2  006F FF8C  F035    	movff	plusw1,btemp+11
  5619  0103D8  2A35               	incf	(btemp+11)^0,f,c
  5620  0103DA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5621  0103E0  0635               	decf	(btemp+11)^0,f,c
  5622  0103E2  0E1E               	movlw	30
  5623  0103E4  6035               	cpfslt	(btemp+11)^0,c
  5624  0103E6  D01A               	goto	u17710
  5625  0103E8  EE22  F16B         	lfsr	2,_C+108	;volatile
  5626  0103EC  006F FF7B FFE6     	movff	postinc2,postinc1
  5627  0103F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5628  0103F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5629  0103FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5630  010404  0E42               	movlw	66
  5631  010406  6EE6               	movwf	postinc1,c
  5632  010408  0E60               	movlw	96
  5633  01040A  6EE6               	movwf	postinc1,c
  5634  01040C  0E65               	movlw	101
  5635  01040E  6EE6               	movwf	postinc1,c
  5636  010410  0E3C               	movlw	60
  5637  010412  6EE6               	movwf	postinc1,c
  5638  010414  EC51  F0F6         	call	___flge	;wreg free
  5639  010418  A02A               	btfss	btemp& (0+255),0,c
  5640  01041A  D773               	goto	l17963
  5641  01041C                     u17710:
  5642                           
  5643                           ;main.c: 299:    static_soc();
  5644  01041C  ECBE  F00E         	call	_static_soc	;wreg free
  5645                           
  5646                           ;main.c: 300:    init_bsoc();
  5647  010420  EC25  F0E4         	call	_init_bsoc	;wreg free
  5648                           
  5649                           ;main.c: 301:    set_load_relay_one(0);
  5650  010424  0E00               	movlw	0
  5651  010426  6EE6               	movwf	postinc1,c
  5652  010428  ECCD  F016         	call	_set_load_relay_one	;wreg free
  5653                           
  5654                           ;main.c: 302:    set_load_relay_two(0);
  5655  01042C  0E00               	movlw	0
  5656  01042E  6EE6               	movwf	postinc1,c
  5657  010430  ECC5  F016         	call	_set_load_relay_two	;wreg free
  5658                           
  5659                           ;main.c: 303:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5660  010434  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5661  010438  006F FF78  F034    	movff	postinc2,btemp+10
  5662  01043E  006F FF74  F035    	movff	postdec2,btemp+11
  5663  010444  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5664  01044A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5665  010450  0EB7               	movlw	low STR_14
  5666  010452  6EE6               	movwf	postinc1,c
  5667  010454  0EFB               	movlw	high STR_14
  5668  010456  6EE6               	movwf	postinc1,c
  5669  010458  0E00               	movlw	0
  5670  01045A  6EE6               	movwf	postinc1,c
  5671  01045C  0E00               	movlw	0
  5672  01045E  6EE6               	movwf	postinc1,c
  5673  010460  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5674  010464  0060  F0AB  FFE6   	movff	btemp,postinc1
  5675  01046A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5676  010470  0E06               	movlw	6
  5677  010472  6EE6               	movwf	postinc1,c
  5678  010474  EC01  F0FF         	call	_sprintf	;wreg free
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;main.c: 304:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5682  010478  EE22  F18F         	lfsr	2,_C+144	;volatile
  5683  01047C  006F FF7B FFE6     	movff	postinc2,postinc1
  5684  010482  006F FF7B FFE6     	movff	postinc2,postinc1
  5685  010488  006F FF7B FFE6     	movff	postinc2,postinc1
  5686  01048E  006F FF7B FFE6     	movff	postinc2,postinc1
  5687  010494  0E93               	movlw	low STR_15
  5688  010496  6EE6               	movwf	postinc1,c
  5689  010498  0EFC               	movlw	high STR_15
  5690  01049A  6EE6               	movwf	postinc1,c
  5691  01049C  0E00               	movlw	0
  5692  01049E  6EE6               	movwf	postinc1,c
  5693  0104A0  0E01               	movlw	1
  5694  0104A2  6EE6               	movwf	postinc1,c
  5695  0104A4  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5696  0104A8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5697  0104AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5698  0104B4  0E08               	movlw	8
  5699  0104B6  6EE6               	movwf	postinc1,c
  5700  0104B8  EC01  F0FF         	call	_sprintf	;wreg free
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;main.c: 305:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5704  0104BC  0E8B               	movlw	low STR_16
  5705  0104BE  6EE6               	movwf	postinc1,c
  5706  0104C0  0EFB               	movlw	high STR_16
  5707  0104C2  6EE6               	movwf	postinc1,c
  5708  0104C4  0E00               	movlw	0
  5709  0104C6  6EE6               	movwf	postinc1,c
  5710  0104C8  0E02               	movlw	2
  5711  0104CA  6EE6               	movwf	postinc1,c
  5712  0104CC  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5713  0104D0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5714  0104D6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5715  0104DC  0E04               	movlw	4
  5716  0104DE  6EE6               	movwf	postinc1,c
  5717  0104E0  EC01  F0FF         	call	_sprintf	;wreg free
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;main.c: 306:    update_lcd(0);
  5721  0104E4  0E00               	movlw	0
  5722  0104E6  6EE6               	movwf	postinc1,c
  5723  0104E8  ECB3  F0F7         	call	_update_lcd	;wreg free
  5724                           
  5725                           ;main.c: 307:    WaitMs(2000);
  5726  0104EC  0ED0               	movlw	208
  5727  0104EE  6EE6               	movwf	postinc1,c
  5728  0104F0  0E07               	movlw	7
  5729  0104F2  6EE6               	movwf	postinc1,c
  5730  0104F4  ECA6  F012         	call	_WaitMs	;wreg free
  5731                           
  5732                           ;main.c: 308:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5733  0104F8  0EA9               	movlw	low STR_17
  5734  0104FA  6EE6               	movwf	postinc1,c
  5735  0104FC  0EFD               	movlw	high STR_17
  5736  0104FE  6EE6               	movwf	postinc1,c
  5737  010500  0E00               	movlw	0
  5738  010502  6EE6               	movwf	postinc1,c
  5739  010504  0E00               	movlw	0
  5740  010506  6EE6               	movwf	postinc1,c
  5741  010508  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5742  01050C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5743  010512  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5744  010518  0E04               	movlw	4
  5745  01051A  6EE6               	movwf	postinc1,c
  5746  01051C  EC01  F0FF         	call	_sprintf	;wreg free
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;main.c: 309:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5750  010520  0EBE               	movlw	low STR_18
  5751  010522  6EE6               	movwf	postinc1,c
  5752  010524  0EFD               	movlw	high STR_18
  5753  010526  6EE6               	movwf	postinc1,c
  5754  010528  0E00               	movlw	0
  5755  01052A  6EE6               	movwf	postinc1,c
  5756  01052C  0E01               	movlw	1
  5757  01052E  6EE6               	movwf	postinc1,c
  5758  010530  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5759  010534  0060  F0AB  FFE6   	movff	btemp,postinc1
  5760  01053A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5761  010540  0E04               	movlw	4
  5762  010542  6EE6               	movwf	postinc1,c
  5763  010544  EC01  F0FF         	call	_sprintf	;wreg free
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;main.c: 310:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5767  010548  0EE4               	movlw	low STR_19
  5768  01054A  6EE6               	movwf	postinc1,c
  5769  01054C  0EFE               	movlw	high STR_19
  5770  01054E  6EE6               	movwf	postinc1,c
  5771  010550  0E00               	movlw	0
  5772  010552  6EE6               	movwf	postinc1,c
  5773  010554  0E02               	movlw	2
  5774  010556  6EE6               	movwf	postinc1,c
  5775  010558  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5776  01055C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5777  010562  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5778  010568  0E04               	movlw	4
  5779  01056A  6EE6               	movwf	postinc1,c
  5780  01056C  EC01  F0FF         	call	_sprintf	;wreg free
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;main.c: 311:    update_lcd(0);
  5784  010570  0E00               	movlw	0
  5785  010572  6EE6               	movwf	postinc1,c
  5786  010574  ECB3  F0F7         	call	_update_lcd	;wreg free
  5787                           
  5788                           ;main.c: 312:    uint16_t i_esr = 1;
  5789  010578  0E01               	movlw	1
  5790  01057A  6E34               	movwf	(btemp+10)^0,c
  5791  01057C  0E00               	movlw	0
  5792  01057E  6E35               	movwf	(btemp+11)^0,c
  5793                           
  5794                           ;stkvar	_i_esr @ sp[(-17)+8]
  5795  010580  0EF7               	movlw	-9
  5796  010582  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5797  010588  0EF8               	movlw	-8
  5798  01058A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5799                           
  5800                           ;main.c: 314:    float esr_temp;;main.c: 315:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5801  010590  D06D               	goto	l18023
  5802  010592                     l18011:
  5803                           
  5804                           ;main.c: 316:     WaitMs(110);
  5805  010592  0E6E               	movlw	110
  5806  010594  6EE6               	movwf	postinc1,c
  5807  010596  0E00               	movlw	0
  5808  010598  6EE6               	movwf	postinc1,c
  5809  01059A  ECA6  F012         	call	_WaitMs	;wreg free
  5810                           
  5811                           ;main.c: 317:     shape = (uint8_t) fabsf(esr_temp);
  5812                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5813  01059E  0EF3               	movlw	-13
  5814  0105A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5815  0105A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5816  0105AC  006F FF8F FFE6     	movff	plusw1,postinc1
  5817  0105B2  006F FF8F FFE6     	movff	plusw1,postinc1
  5818  0105B8  EC81  F006         	call	_fabsf	;wreg free
  5819  0105BC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5820  0105C2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5821  0105C8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5822  0105CE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5823  0105D4  ECE5  F0F4         	call	___fltol	;wreg free
  5824  0105D8  0060  F0A8  F035   	movff	btemp,btemp+11
  5825                           
  5826                           ;stkvar	_shape @ sp[(-17)+10]
  5827  0105DE  0EF9               	movlw	-7
  5828  0105E0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5829                           
  5830                           ;main.c: 318:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5831  0105E6  0E00               	movlw	0
  5832  0105E8  6EE6               	movwf	postinc1,c
  5833                           
  5834                           ;stkvar	_shape @ sp[(-18)+10]
  5835  0105EA  0EF8               	movlw	-8
  5836  0105EC  50E3               	movf	plusw1,w,c
  5837  0105EE  6EE6               	movwf	postinc1,c
  5838  0105F0  EC52  F001         	call	_spinners	;wreg free
  5839  0105F4  502A               	movf	btemp^0,w,c
  5840  0105F6  6EE6               	movwf	postinc1,c
  5841  0105F8  0E00               	movlw	0
  5842  0105FA  6EE6               	movwf	postinc1,c
  5843  0105FC  0E00               	movlw	0
  5844  0105FE  6EE6               	movwf	postinc1,c
  5845  010600  0E00               	movlw	0
  5846  010602  6EE6               	movwf	postinc1,c
  5847  010604  EC52  F001         	call	_spinners	;wreg free
  5848  010608  502A               	movf	btemp^0,w,c
  5849  01060A  6EE6               	movwf	postinc1,c
  5850  01060C  0E00               	movlw	0
  5851  01060E  6EE6               	movwf	postinc1,c
  5852  010610  0E7B               	movlw	low STR_20
  5853  010612  6EE6               	movwf	postinc1,c
  5854  010614  0EFE               	movlw	high STR_20
  5855  010616  6EE6               	movwf	postinc1,c
  5856  010618  0E00               	movlw	0
  5857  01061A  6EE6               	movwf	postinc1,c
  5858  01061C  0E02               	movlw	2
  5859  01061E  6EE6               	movwf	postinc1,c
  5860  010620  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5861  010624  0060  F0AB  FFE6   	movff	btemp,postinc1
  5862  01062A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5863  010630  0E08               	movlw	8
  5864  010632  6EE6               	movwf	postinc1,c
  5865  010634  EC01  F0FF         	call	_sprintf	;wreg free
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;main.c: 319:     update_lcd(0);
  5869  010638  0E00               	movlw	0
  5870  01063A  6EE6               	movwf	postinc1,c
  5871  01063C  ECB3  F0F7         	call	_update_lcd	;wreg free
  5872                           
  5873                           ;main.c: 321:     if (i_esr++ > 512)
  5874                           ;stkvar	_i_esr @ sp[(-17)+8]
  5875  010640  50E1               	movf	fsr1l,w,c
  5876  010642  0FF7               	addlw	-9
  5877  010644  6ED9               	movwf	fsr2l,c
  5878  010646  50E2               	movf	fsr1h,w,c
  5879  010648  6EDA               	movwf	fsr2h,c
  5880  01064A  0EFF               	movlw	255
  5881  01064C  22DA               	addwfc	fsr2h,f,c
  5882  01064E  006F FF7C  F034    	movff	indf2,btemp+10
  5883  010654  0E01               	movlw	1
  5884  010656  26DE               	addwf	postinc2,f,c
  5885  010658  006F FF7C  F035    	movff	indf2,btemp+11
  5886  01065E  0E00               	movlw	0
  5887  010660  22DD               	addwfc	postdec2,f,c
  5888  010662  0434               	decf	(btemp+10)^0,w,c
  5889  010664  0E02               	movlw	2
  5890  010666  5835               	subwfb	(btemp+11)^0,w,c
  5891  010668  B0D8               	btfsc	status,0,c
  5892  01066A  D017               	goto	u17730
  5893  01066C                     l18023:
  5894                           
  5895                           ;main.c: 315:    while ((esr_temp = esr_check(0)) < 0.0) {
  5896  01066C  0E00               	movlw	0
  5897  01066E  6EE6               	movwf	postinc1,c
  5898  010670  EC60  F0DC         	call	_esr_check	;wreg free
  5899                           
  5900                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5901  010674  0EF3               	movlw	-13
  5902  010676  0060  F0AB  FFE3   	movff	btemp,plusw1
  5903  01067C  0EF4               	movlw	-12
  5904  01067E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  5905  010684  0EF5               	movlw	-11
  5906  010686  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  5907  01068C  0EF6               	movlw	-10
  5908  01068E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  5909  010694  0EF6               	movlw	-10
  5910  010696  BEE3               	btfsc	plusw1,7,c
  5911  010698  D77C               	goto	l18011
  5912  01069A                     u17730:
  5913                           
  5914                           ;main.c: 324:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5915  01069A  EE22  F187         	lfsr	2,_C+136	;volatile
  5916  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5917  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5918  0106AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5919  0106B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5920  0106B6  0EA1               	movlw	low STR_21
  5921  0106B8  6EE6               	movwf	postinc1,c
  5922  0106BA  0EFB               	movlw	high STR_21
  5923  0106BC  6EE6               	movwf	postinc1,c
  5924  0106BE  0E00               	movlw	0
  5925  0106C0  6EE6               	movwf	postinc1,c
  5926  0106C2  0E00               	movlw	0
  5927  0106C4  6EE6               	movwf	postinc1,c
  5928  0106C6  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5929  0106CA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5930  0106D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5931  0106D6  0E08               	movlw	8
  5932  0106D8  6EE6               	movwf	postinc1,c
  5933  0106DA  EC01  F0FF         	call	_sprintf	;wreg free
  5934                           
  5935                           ;main.c: 325:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5936  0106DE  EE22  F229         	lfsr	2,_C+298	;volatile
  5937  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5938  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5939  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5940  0106F4  006F FF7B FFE6     	movff	postinc2,postinc1
  5941  0106FA  EE22  F235         	lfsr	2,_C+310	;volatile
  5942  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5943  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5944  01070A  006F FF7B FFE6     	movff	postinc2,postinc1
  5945  010710  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010716  0EB4               	movlw	low STR_22
  5947  010718  6EE6               	movwf	postinc1,c
  5948  01071A  0EFA               	movlw	high STR_22
  5949  01071C  6EE6               	movwf	postinc1,c
  5950  01071E  0E00               	movlw	0
  5951  010720  6EE6               	movwf	postinc1,c
  5952  010722  0E01               	movlw	1
  5953  010724  6EE6               	movwf	postinc1,c
  5954  010726  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5955  01072A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5956  010730  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5957  010736  0E0C               	movlw	12
  5958  010738  6EE6               	movwf	postinc1,c
  5959  01073A  EC01  F0FF         	call	_sprintf	;wreg free
  5960                           
  5961                           ;main.c: 326:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5962  01073E  EE22  F22D         	lfsr	2,_C+302	;volatile
  5963  010742  006F FF7B FFE6     	movff	postinc2,postinc1
  5964  010748  006F FF7B FFE6     	movff	postinc2,postinc1
  5965  01074E  006F FF7B FFE6     	movff	postinc2,postinc1
  5966  010754  006F FF7B FFE6     	movff	postinc2,postinc1
  5967  01075A  EE22  F239         	lfsr	2,_C+314	;volatile
  5968  01075E  006F FF7B FFE6     	movff	postinc2,postinc1
  5969  010764  006F FF7B FFE6     	movff	postinc2,postinc1
  5970  01076A  006F FF7B FFE6     	movff	postinc2,postinc1
  5971  010770  006F FF7B FFE6     	movff	postinc2,postinc1
  5972  010776  0ECE               	movlw	low STR_23
  5973  010778  6EE6               	movwf	postinc1,c
  5974  01077A  0EFA               	movlw	high STR_23
  5975  01077C  6EE6               	movwf	postinc1,c
  5976  01077E  0E00               	movlw	0
  5977  010780  6EE6               	movwf	postinc1,c
  5978  010782  0E02               	movlw	2
  5979  010784  6EE6               	movwf	postinc1,c
  5980  010786  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  5981  01078A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5982  010790  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5983  010796  0E0C               	movlw	12
  5984  010798  6EE6               	movwf	postinc1,c
  5985  01079A  EC01  F0FF         	call	_sprintf	;wreg free
  5986                           
  5987                           ;main.c: 327:    update_lcd(0);
  5988  01079E  0E00               	movlw	0
  5989  0107A0  6EE6               	movwf	postinc1,c
  5990  0107A2  ECB3  F0F7         	call	_update_lcd	;wreg free
  5991                           
  5992                           ;main.c: 328:    WaitMs(4000);
  5993  0107A6  0EA0               	movlw	160
  5994  0107A8  6EE6               	movwf	postinc1,c
  5995  0107AA  0E0F               	movlw	15
  5996  0107AC  6EE6               	movwf	postinc1,c
  5997  0107AE  ECA6  F012         	call	_WaitMs	;wreg free
  5998                           
  5999                           ;main.c: 329:    V.sensor_set = get_switch(SCALIB);
  6000  0107B2  0E04               	movlw	4
  6001  0107B4  6EE6               	movwf	postinc1,c
  6002  0107B6  ECB9  F013         	call	_get_switch	;wreg free
  6003  0107BA  502A               	movf	btemp^0,w,c
  6004  0107BC  B4D8               	btfsc	status,2,c
  6005  0107BE  D002               	goto	u17740
  6006  0107C0  0E01               	movlw	1
  6007  0107C2  D001               	goto	u17750
  6008  0107C4                     u17740:
  6009  0107C4  0E00               	movlw	0
  6010  0107C6                     u17750:
  6011  0107C6  0102               	movlb	2	; () banked
  6012  0107C8  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  6013                           
  6014                           ; BSR set to: 2
  6015                           ;main.c: 330:    WaitMs(1000);
  6016  0107CA  0EE8               	movlw	232
  6017  0107CC  6EE6               	movwf	postinc1,c
  6018  0107CE  0E03               	movlw	3
  6019  0107D0  6EE6               	movwf	postinc1,c
  6020  0107D2  ECA6  F012         	call	_WaitMs	;wreg free
  6021                           
  6022                           ;main.c: 331:    if (V.sensor_set && get_switch(SCALIB)) {
  6023  0107D6  0102               	movlb	2	; () banked
  6024  0107D8  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6025  0107DA  B4D8               	btfsc	status,2,c
  6026  0107DC  D00F               	goto	l18041
  6027                           
  6028                           ; BSR set to: 2
  6029  0107DE  0E04               	movlw	4
  6030  0107E0  6EE6               	movwf	postinc1,c
  6031  0107E2  ECB9  F013         	call	_get_switch	;wreg free
  6032  0107E6  502A               	movf	btemp^0,w,c
  6033  0107E8  B4D8               	btfsc	status,2,c
  6034  0107EA  D008               	goto	l18041
  6035                           
  6036                           ;main.c: 332:     current_sensor_cal();
  6037  0107EC  ECEB  F0A3         	call	_current_sensor_cal	;wreg free
  6038                           
  6039                           ;main.c: 333:     WaitMs(4000);
  6040  0107F0  0EA0               	movlw	160
  6041  0107F2  6EE6               	movwf	postinc1,c
  6042  0107F4  0E0F               	movlw	15
  6043  0107F6  6EE6               	movwf	postinc1,c
  6044  0107F8  ECA6  F012         	call	_WaitMs	;wreg free
  6045  0107FC                     l18041:
  6046                           
  6047                           ;main.c: 335:    V.sensor_set = 0;
  6048  0107FC  0102               	movlb	2	; () banked
  6049  0107FE  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6050                           
  6051                           ; BSR set to: 2
  6052                           ;main.c: 336:    V.system_stable = 1;
  6053  010800  0E01               	movlw	1
  6054  010802  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6055                           
  6056                           ;main.c: 337:    break;
  6057  010804  D01C               	goto	l18049
  6058  010806                     l1474:
  6059                           
  6060                           ; BSR set to: 2
  6061                           ;main.c: 343:    P.SYSTEM_STABLE = 1;
  6062  010806  0100               	movlb	0	; () banked
  6063  010808  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6064                           
  6065                           ;main.c: 344:    break;
  6066  01080A  D019               	goto	l18049
  6067  01080C                     l1476:
  6068                           
  6069                           ; BSR set to: 2
  6070                           ;main.c: 347:    V.ui_state = UI_STATE_INIT;
  6071  01080C  6B07               	clrf	_V& (0+255),b	;volatile
  6072                           
  6073                           ;main.c: 348:    break;
  6074  01080E  D017               	goto	l18049
  6075  010810                     l18047:
  6076  010810  0102               	movlb	2	; () banked
  6077  010812  5107               	movf	_V& (0+255),w,b	;volatile
  6078  010814  6E34               	movwf	(btemp+10)^0,c
  6079  010816  6A35               	clrf	(btemp+11)^0,c
  6080                           
  6081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6082                           ; Switch size 1, requested type "simple"
  6083                           ; Number of cases is 1, Range of values is 0 to 0
  6084                           ; switch strategies available:
  6085                           ; Name         Instructions Cycles
  6086                           ; simple_byte            4     3 (average)
  6087                           ;	Chosen strategy is simple_byte
  6088  010818  5035               	movf	(btemp+11)^0,w,c
  6089  01081A  0A00               	xorlw	0	; case 0
  6090  01081C  A4D8               	btfss	status,2,c
  6091  01081E  D7F6               	goto	l1476
  6092                           
  6093                           ; BSR set to: 2
  6094                           ; Switch size 1, requested type "simple"
  6095                           ; Number of cases is 5, Range of values is 0 to 5
  6096                           ; switch strategies available:
  6097                           ; Name         Instructions Cycles
  6098                           ; simple_byte           16     9 (average)
  6099                           ;	Chosen strategy is simple_byte
  6100  010820  5034               	movf	(btemp+10)^0,w,c
  6101  010822  0A00               	xorlw	0	; case 0
  6102  010824  B4D8               	btfsc	status,2,c
  6103  010826  D428               	goto	l17895
  6104  010828  0A01               	xorlw	1	; case 1
  6105  01082A  B4D8               	btfsc	status,2,c
  6106  01082C  D008               	goto	l18049
  6107  01082E  0A02               	xorlw	2	; case 3
  6108  010830  B4D8               	btfsc	status,2,c
  6109  010832  D005               	goto	l18049
  6110  010834  0A07               	xorlw	7	; case 4
  6111  010836  B4D8               	btfsc	status,2,c
  6112  010838  D7E6               	goto	l1474
  6113  01083A  0A01               	xorlw	1	; case 5
  6114  01083C  D7E7               	goto	l1476
  6115  01083E                     l18049:
  6116                           
  6117                           ;main.c: 351:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6118  01083E  0E01               	movlw	1
  6119  010840  6EE6               	movwf	postinc1,c
  6120  010842  EC25  F014         	call	_TimerDone	;wreg free
  6121  010846  502A               	movf	btemp^0,w,c
  6122  010848  B4D8               	btfsc	status,2,c
  6123  01084A  D013               	goto	l18061
  6124  01084C  EC2D  F017         	call	_check_adc_scan	;wreg free
  6125  010850  502A               	movf	btemp^0,w,c
  6126  010852  B4D8               	btfsc	status,2,c
  6127  010854  D00E               	goto	l18061
  6128                           
  6129                           ;main.c: 355:    convert_adc_data();
  6130  010856  EC70  F005         	call	_convert_adc_data	;wreg free
  6131                           
  6132                           ;main.c: 359:    clear_adc_scan();
  6133  01085A  EC44  F017         	call	_clear_adc_scan	;wreg free
  6134                           
  6135                           ; BSR set to: 1
  6136                           ;main.c: 360:    start_adc_scan();
  6137  01085E  ECCB  F00D         	call	_start_adc_scan	;wreg free
  6138                           
  6139                           ;main.c: 361:    StartTimer(TMR_ADC, 200);
  6140  010862  0EC8               	movlw	200
  6141  010864  6EE6               	movwf	postinc1,c
  6142  010866  0E00               	movlw	0
  6143  010868  6EE6               	movwf	postinc1,c
  6144  01086A  0E01               	movlw	1
  6145  01086C  6EE6               	movwf	postinc1,c
  6146  01086E  ECB3  F011         	call	_StartTimer	;wreg free
  6147  010872                     l18061:
  6148                           
  6149                           ;main.c: 364:   if (TimerDone(TMR_DISPLAY)) {
  6150  010872  0E0A               	movlw	10
  6151  010874  6EE6               	movwf	postinc1,c
  6152  010876  EC25  F014         	call	_TimerDone	;wreg free
  6153  01087A  502A               	movf	btemp^0,w,c
  6154  01087C  B4D8               	btfsc	status,2,c
  6155  01087E  EFFF  F089         	goto	l18171
  6156                           
  6157                           ;main.c: 365:    if (TimerDone(TMR_HELPDIS)) {
  6158  010882  0E09               	movlw	9
  6159  010884  6EE6               	movwf	postinc1,c
  6160  010886  EC25  F014         	call	_TimerDone	;wreg free
  6161  01088A  502A               	movf	btemp^0,w,c
  6162  01088C  B4D8               	btfsc	status,2,c
  6163  01088E  D004               	goto	l18067
  6164                           
  6165                           ;main.c: 366:     set_display_info(DIS_STR);
  6166  010890  0E00               	movlw	0
  6167  010892  6EE6               	movwf	postinc1,c
  6168  010894  EC3B  F016         	call	_set_display_info	;wreg free
  6169  010898                     l18067:
  6170                           
  6171                           ;main.c: 368:    pclock = time(((void*)0));
  6172  010898  0E00               	movlw	0
  6173  01089A  6EE6               	movwf	postinc1,c
  6174  01089C  0E00               	movlw	0
  6175  01089E  6EE6               	movwf	postinc1,c
  6176  0108A0  EC8F  F00E         	call	_time	;wreg free
  6177  0108A4  52E5               	movf	postdec1,f,c
  6178  0108A6  006F FF9C  F041    	movff	indf1,btemp+23
  6179  0108AC  52E5               	movf	postdec1,f,c
  6180  0108AE  006F FF9C  F040    	movff	indf1,btemp+22
  6181  0108B4  52E5               	movf	postdec1,f,c
  6182  0108B6  006F FF9C  F03F    	movff	indf1,btemp+21
  6183  0108BC  52E5               	movf	postdec1,f,c
  6184  0108BE  006F FF9C  F03E    	movff	indf1,btemp+20
  6185  0108C4  52E5               	movf	postdec1,f,c
  6186  0108C6  006F FF9C  F03D    	movff	indf1,btemp+19
  6187  0108CC  52E5               	movf	postdec1,f,c
  6188  0108CE  006F FF9C  F03C    	movff	indf1,btemp+18
  6189  0108D4  52E5               	movf	postdec1,f,c
  6190  0108D6  006F FF9C  F03B    	movff	indf1,btemp+17
  6191  0108DC  52E5               	movf	postdec1,f,c
  6192  0108DE  006F FF9C  F03A    	movff	indf1,btemp+16
  6193  0108E4  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6194  0108EA  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6195  0108F0  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6196  0108F6  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6197  0108FC  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6198  010902  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6199  010908  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6200  01090E  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6201                           
  6202                           ; BSR set to: 57
  6203                           ;main.c: 369:    t_mbmc = localtime(&pclock);
  6204  010914  0EDA               	movlw	_pclock& (0+255)
  6205  010916  6EE6               	movwf	postinc1,c
  6206  010918  EC7D  F016         	call	_localtime	;wreg free
  6207  01091C  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6208  010922  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6209                           
  6210                           ;main.c: 370:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6211  010928  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6212  01092E  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6213  010934  EC14  F0C6         	call	_asctime	;wreg free
  6214  010938  0060  F0AB  FFE6   	movff	btemp,postinc1
  6215  01093E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6216  010944  0E66               	movlw	low (STR_85+5)
  6217  010946  6EE6               	movwf	postinc1,c
  6218  010948  0EFF               	movlw	high (STR_85+5)
  6219  01094A  6EE6               	movwf	postinc1,c
  6220  01094C  0E00               	movlw	0
  6221  01094E  6EE6               	movwf	postinc1,c
  6222  010950  0E03               	movlw	3
  6223  010952  6EE6               	movwf	postinc1,c
  6224  010954  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6225  010958  0060  F0AB  FFE6   	movff	btemp,postinc1
  6226  01095E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6227  010964  0E06               	movlw	6
  6228  010966  6EE6               	movwf	postinc1,c
  6229  010968  EC01  F0FF         	call	_sprintf	;wreg free
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;main.c: 371:    calc_model_data();
  6233  01096C  EC3D  F0CD         	call	_calc_model_data	;wreg free
  6234                           
  6235                           ; BSR set to: 57
  6236                           ;main.c: 372:    if (C.dupdate) {
  6237  010970  EE22  F23E         	lfsr	2,_C+319	;volatile
  6238  010974  50DF               	movf	indf2,w,c
  6239  010976  B4D8               	btfsc	status,2,c
  6240  010978  D0A2               	goto	l18097
  6241                           
  6242                           ; BSR set to: 57
  6243                           ;main.c: 373:     C.dupdate = 0;
  6244  01097A  0E00               	movlw	0
  6245  01097C  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
  6246                           
  6247                           ; BSR set to: 57
  6248                           ;main.c: 374:     load_hist_data();
  6249  010982  ECCB  F0EC         	call	_load_hist_data	;wreg free
  6250                           
  6251                           ; BSR set to: 57
  6252                           ;main.c: 375:     update_hist_data(0, &C.hist[0]);
  6253  010986  0EB8               	movlw	low (_C+185)
  6254  010988  6EE6               	movwf	postinc1,c
  6255  01098A  0E09               	movlw	high (_C+185)
  6256  01098C  6EE6               	movwf	postinc1,c
  6257  01098E  0E00               	movlw	0
  6258  010990  6EE6               	movwf	postinc1,c
  6259  010992  EC28  F00C         	call	_update_hist_data	;wreg free
  6260                           
  6261                           ;main.c: 376:     write_cal_data();
  6262  010996  EC10  F0F9         	call	_write_cal_data	;wreg free
  6263                           
  6264                           ;main.c: 377:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved ");
  6265  01099A  0E38               	movlw	low STR_25
  6266  01099C  6EE6               	movwf	postinc1,c
  6267  01099E  0EFF               	movlw	high STR_25
  6268  0109A0  6EE6               	movwf	postinc1,c
  6269  0109A2  0E00               	movlw	0
  6270  0109A4  6EE6               	movwf	postinc1,c
  6271  0109A6  0E00               	movlw	0
  6272  0109A8  6EE6               	movwf	postinc1,c
  6273  0109AA  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6274  0109AE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6275  0109B4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6276  0109BA  0E04               	movlw	4
  6277  0109BC  6EE6               	movwf	postinc1,c
  6278  0109BE  EC01  F0FF         	call	_sprintf	;wreg free
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;main.c: 378:     sprintf(get_vterm_ptr(1, 0), "To EEPROM           ");
  6282  0109C2  0E94               	movlw	low STR_26
  6283  0109C4  6EE6               	movwf	postinc1,c
  6284  0109C6  0EFD               	movlw	high STR_26
  6285  0109C8  6EE6               	movwf	postinc1,c
  6286  0109CA  0E00               	movlw	0
  6287  0109CC  6EE6               	movwf	postinc1,c
  6288  0109CE  0E01               	movlw	1
  6289  0109D0  6EE6               	movwf	postinc1,c
  6290  0109D2  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6291  0109D6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6292  0109DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6293  0109E2  0E04               	movlw	4
  6294  0109E4  6EE6               	movwf	postinc1,c
  6295  0109E6  EC01  F0FF         	call	_sprintf	;wreg free
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;main.c: 379:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu      ", time(((void*)0)),
      +                           C.hist[0].updates);
  6299  0109EA  EE22  F1E9         	lfsr	2,_C+234	;volatile
  6300  0109EE  006F FF7B FFE6     	movff	postinc2,postinc1
  6301  0109F4  006F FF7B FFE6     	movff	postinc2,postinc1
  6302  0109FA  006F FF7B FFE6     	movff	postinc2,postinc1
  6303  010A00  006F FF7B FFE6     	movff	postinc2,postinc1
  6304  010A06  0E00               	movlw	0
  6305  010A08  6EE6               	movwf	postinc1,c
  6306  010A0A  0E00               	movlw	0
  6307  010A0C  6EE6               	movwf	postinc1,c
  6308  010A0E  EC8F  F00E         	call	_time	;wreg free
  6309  010A12  52E5               	movf	postdec1,f,c
  6310  010A14  006F FF9C  F041    	movff	indf1,btemp+23
  6311  010A1A  52E5               	movf	postdec1,f,c
  6312  010A1C  006F FF9C  F040    	movff	indf1,btemp+22
  6313  010A22  52E5               	movf	postdec1,f,c
  6314  010A24  006F FF9C  F03F    	movff	indf1,btemp+21
  6315  010A2A  52E5               	movf	postdec1,f,c
  6316  010A2C  006F FF9C  F03E    	movff	indf1,btemp+20
  6317  010A32  52E5               	movf	postdec1,f,c
  6318  010A34  006F FF9C  F03D    	movff	indf1,btemp+19
  6319  010A3A  52E5               	movf	postdec1,f,c
  6320  010A3C  006F FF9C  F03C    	movff	indf1,btemp+18
  6321  010A42  52E5               	movf	postdec1,f,c
  6322  010A44  006F FF9C  F03B    	movff	indf1,btemp+17
  6323  010A4A  52E5               	movf	postdec1,f,c
  6324  010A4C  006F FF9C  F03A    	movff	indf1,btemp+16
  6325  010A52  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6326  010A58  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6327  010A5E  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6328  010A64  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6329  010A6A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6330  010A70  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6331  010A76  0060  F103  FFE6   	movff	btemp+22,postinc1
  6332  010A7C  0060  F107  FFE6   	movff	btemp+23,postinc1
  6333  010A82  0E90               	movlw	low STR_27
  6334  010A84  6EE6               	movwf	postinc1,c
  6335  010A86  0EFE               	movlw	high STR_27
  6336  010A88  6EE6               	movwf	postinc1,c
  6337  010A8A  0E00               	movlw	0
  6338  010A8C  6EE6               	movwf	postinc1,c
  6339  010A8E  0E02               	movlw	2
  6340  010A90  6EE6               	movwf	postinc1,c
  6341  010A92  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6342  010A96  0060  F0AB  FFE6   	movff	btemp,postinc1
  6343  010A9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6344  010AA2  0E10               	movlw	16
  6345  010AA4  6EE6               	movwf	postinc1,c
  6346  010AA6  EC01  F0FF         	call	_sprintf	;wreg free
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;main.c: 380:     update_lcd(0);
  6350  010AAA  0E00               	movlw	0
  6351  010AAC  6EE6               	movwf	postinc1,c
  6352  010AAE  ECB3  F0F7         	call	_update_lcd	;wreg free
  6353                           
  6354                           ;main.c: 381:     WaitMs(2000);
  6355  010AB2  0ED0               	movlw	208
  6356  010AB4  6EE6               	movwf	postinc1,c
  6357  010AB6  0E07               	movlw	7
  6358  010AB8  6EE6               	movwf	postinc1,c
  6359  010ABA  ECA6  F012         	call	_WaitMs	;wreg free
  6360  010ABE                     l18097:
  6361                           
  6362                           ;main.c: 389:     hid_display(&H);
  6363  010ABE  0EAB               	movlw	low _H
  6364  010AC0  6EE6               	movwf	postinc1,c
  6365  010AC2  0E01               	movlw	high _H
  6366  010AC4  6EE6               	movwf	postinc1,c
  6367  010AC6  ECB2  F0E9         	call	_hid_display	;wreg free
  6368                           
  6369                           ;main.c: 390:     switch (H.hid_display) {
  6370  010ACA  EF90  F089         	goto	l18141
  6371  010ACE                     l1484:
  6372                           
  6373                           ; BSR set to: 1
  6374                           ;main.c: 392:      V.calib = 0;
  6375  010ACE  0102               	movlb	2	; () banked
  6376  010AD0  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6377                           
  6378                           ; BSR set to: 2
  6379                           ;main.c: 393:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  6380  010AD2  EE22  F23D         	lfsr	2,_C+318	;volatile
  6381  010AD6  50DF               	movf	indf2,w,c
  6382  010AD8  A4D8               	btfss	status,2,c
  6383  010ADA  D002               	goto	l18103
  6384                           
  6385                           ; BSR set to: 2
  6386  010ADC  0E20               	movlw	32
  6387  010ADE  D001               	goto	L1
  6388  010AE0                     l18103:
  6389                           
  6390                           ; BSR set to: 2
  6391  010AE0  0E44               	movlw	68
  6392  010AE2                     L1:
  6393  010AE2  6E34               	movwf	(btemp+10)^0,c
  6394  010AE4  0E00               	movlw	0
  6395  010AE6  6E35               	movwf	(btemp+11)^0,c
  6396                           
  6397                           ;stkvar	_main$4047 @ sp[(-17)+2]
  6398  010AE8  0EF1               	movlw	-15
  6399  010AEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6400  010AF0  0EF2               	movlw	-14
  6401  010AF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6402                           
  6403                           ; BSR set to: 2
  6404  010AF8  EE22  F17B         	lfsr	2,_C+124	;volatile
  6405  010AFC  006F FF7B FFE6     	movff	postinc2,postinc1
  6406  010B02  006F FF7B FFE6     	movff	postinc2,postinc1
  6407  010B08  006F FF7B FFE6     	movff	postinc2,postinc1
  6408  010B0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6409                           
  6410                           ;stkvar	_main$4047 @ sp[(-21)+2]
  6411  010B14  0EED               	movlw	-19
  6412  010B16  006F FF8F FFE6     	movff	plusw1,postinc1
  6413  010B1C  006F FF8F FFE6     	movff	plusw1,postinc1
  6414  010B22  0E7D               	movlw	low STR_31
  6415  010B24  6EE6               	movwf	postinc1,c
  6416  010B26  0EFC               	movlw	high STR_31
  6417  010B28  6EE6               	movwf	postinc1,c
  6418  010B2A  0E00               	movlw	0
  6419  010B2C  6EE6               	movwf	postinc1,c
  6420  010B2E  0E00               	movlw	0
  6421  010B30  6EE6               	movwf	postinc1,c
  6422  010B32  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6423  010B36  0060  F0AB  FFE6   	movff	btemp,postinc1
  6424  010B3C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6425  010B42  0E0A               	movlw	10
  6426  010B44  6EE6               	movwf	postinc1,c
  6427  010B46  EC01  F0FF         	call	_sprintf	;wreg free
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;main.c: 394:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  6431  010B4A  EE22  F173         	lfsr	2,_C+116	;volatile
  6432  010B4E  006F FF7B FFE6     	movff	postinc2,postinc1
  6433  010B54  006F FF7B FFE6     	movff	postinc2,postinc1
  6434  010B5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6435  010B60  006F FF7B FFE6     	movff	postinc2,postinc1
  6436  010B66  0E67               	movlw	low STR_32
  6437  010B68  6EE6               	movwf	postinc1,c
  6438  010B6A  0EFC               	movlw	high STR_32
  6439  010B6C  6EE6               	movwf	postinc1,c
  6440  010B6E  0E00               	movlw	0
  6441  010B70  6EE6               	movwf	postinc1,c
  6442  010B72  0E01               	movlw	1
  6443  010B74  6EE6               	movwf	postinc1,c
  6444  010B76  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6445  010B7A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6446  010B80  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6447  010B86  0E08               	movlw	8
  6448  010B88  6EE6               	movwf	postinc1,c
  6449  010B8A  EC01  F0FF         	call	_sprintf	;wreg free
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;main.c: 395:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  6453  010B8E  EE22  F177         	lfsr	2,_C+120	;volatile
  6454  010B92  006F FF7B FFE6     	movff	postinc2,postinc1
  6455  010B98  006F FF7B FFE6     	movff	postinc2,postinc1
  6456  010B9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6457  010BA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6458  010BAA  0E51               	movlw	low STR_33
  6459  010BAC  6EE6               	movwf	postinc1,c
  6460  010BAE  0EFC               	movlw	high STR_33
  6461  010BB0  6EE6               	movwf	postinc1,c
  6462  010BB2  0E00               	movlw	0
  6463  010BB4  6EE6               	movwf	postinc1,c
  6464  010BB6  0E02               	movlw	2
  6465  010BB8  6EE6               	movwf	postinc1,c
  6466  010BBA  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6467  010BBE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6468  010BC4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6469  010BCA  0E08               	movlw	8
  6470  010BCC  6EE6               	movwf	postinc1,c
  6471  010BCE  EC01  F0FF         	call	_sprintf	;wreg free
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;main.c: 397:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  6475  010BD2  EE22  F23D         	lfsr	2,_C+318	;volatile
  6476  010BD6  50DF               	movf	indf2,w,c
  6477  010BD8  A4D8               	btfss	status,2,c
  6478  010BDA  D002               	goto	l18115
  6479                           
  6480                           ; BSR set to: 0
  6481  010BDC  0E20               	movlw	32
  6482  010BDE  D001               	goto	L2
  6483  010BE0                     l18115:
  6484                           
  6485                           ; BSR set to: 0
  6486  010BE0  0E44               	movlw	68
  6487  010BE2                     L2:
  6488  010BE2  6E34               	movwf	(btemp+10)^0,c
  6489  010BE4  0E00               	movlw	0
  6490  010BE6  6E35               	movwf	(btemp+11)^0,c
  6491                           
  6492                           ;stkvar	_main$4051 @ sp[(-17)+0]
  6493  010BE8  0EEF               	movlw	-17
  6494  010BEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6495  010BF0  0EF0               	movlw	-16
  6496  010BF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6497                           
  6498                           ; BSR set to: 0
  6499  010BF8  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6500  010BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  6501  010C02  006F FF7B FFE6     	movff	postinc2,postinc1
  6502  010C08  006F FF7B FFE6     	movff	postinc2,postinc1
  6503  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6504                           
  6505                           ;stkvar	_main$4051 @ sp[(-21)+0]
  6506  010C14  0EEB               	movlw	-21
  6507  010C16  006F FF8F FFE6     	movff	plusw1,postinc1
  6508  010C1C  006F FF8F FFE6     	movff	plusw1,postinc1
  6509  010C22  0E3B               	movlw	low STR_34
  6510  010C24  6EE6               	movwf	postinc1,c
  6511  010C26  0EFC               	movlw	high STR_34
  6512  010C28  6EE6               	movwf	postinc1,c
  6513  010C2A  0E01               	movlw	1
  6514  010C2C  6EE6               	movwf	postinc1,c
  6515  010C2E  0E00               	movlw	0
  6516  010C30  6EE6               	movwf	postinc1,c
  6517  010C32  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6518  010C36  0060  F0AB  FFE6   	movff	btemp,postinc1
  6519  010C3C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6520  010C42  0E0A               	movlw	10
  6521  010C44  6EE6               	movwf	postinc1,c
  6522  010C46  EC01  F0FF         	call	_sprintf	;wreg free
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;main.c: 398:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  6526  010C4A  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6527  010C4E  006F FF7B FFE6     	movff	postinc2,postinc1
  6528  010C54  006F FF7B FFE6     	movff	postinc2,postinc1
  6529  010C5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6530  010C60  006F FF7B FFE6     	movff	postinc2,postinc1
  6531  010C66  0E25               	movlw	low STR_35
  6532  010C68  6EE6               	movwf	postinc1,c
  6533  010C6A  0EFC               	movlw	high STR_35
  6534  010C6C  6EE6               	movwf	postinc1,c
  6535  010C6E  0E01               	movlw	1
  6536  010C70  6EE6               	movwf	postinc1,c
  6537  010C72  0E01               	movlw	1
  6538  010C74  6EE6               	movwf	postinc1,c
  6539  010C76  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6540  010C7A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6541  010C80  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6542  010C86  0E08               	movlw	8
  6543  010C88  6EE6               	movwf	postinc1,c
  6544  010C8A  EC01  F0FF         	call	_sprintf	;wreg free
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;main.c: 399:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  6548  010C8E  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6549  010C92  006F FF7B FFE6     	movff	postinc2,postinc1
  6550  010C98  006F FF7B FFE6     	movff	postinc2,postinc1
  6551  010C9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6552  010CA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6553  010CAA  0E0F               	movlw	low STR_36
  6554  010CAC  6EE6               	movwf	postinc1,c
  6555  010CAE  0EFC               	movlw	high STR_36
  6556  010CB0  6EE6               	movwf	postinc1,c
  6557  010CB2  0E01               	movlw	1
  6558  010CB4  6EE6               	movwf	postinc1,c
  6559  010CB6  0E02               	movlw	2
  6560  010CB8  6EE6               	movwf	postinc1,c
  6561  010CBA  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6562  010CBE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6563  010CC4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6564  010CCA  0E08               	movlw	8
  6565  010CCC  6EE6               	movwf	postinc1,c
  6566  010CCE  EC01  F0FF         	call	_sprintf	;wreg free
  6567                           
  6568                           ;main.c: 400:      break;
  6569  010CD2  D33C               	goto	l18143
  6570  010CD4                     l1494:
  6571                           
  6572                           ; BSR set to: 1
  6573                           ;main.c: 402:      V.calib = 0;
  6574  010CD4  0102               	movlb	2	; () banked
  6575  010CD6  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6576                           
  6577                           ; BSR set to: 2
  6578                           ;main.c: 403:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  6579  010CD8  EE22  F103         	lfsr	2,_C+4	;volatile
  6580  010CDC  006F FF7B FFE6     	movff	postinc2,postinc1
  6581  010CE2  006F FF7B FFE6     	movff	postinc2,postinc1
  6582  010CE8  006F FF7B FFE6     	movff	postinc2,postinc1
  6583  010CEE  006F FF7B FFE6     	movff	postinc2,postinc1
  6584  010CF4  EE22  F113         	lfsr	2,_C+20	;volatile
  6585  010CF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6586  010CFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6587  010D04  006F FF7B FFE6     	movff	postinc2,postinc1
  6588  010D0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6589  010D10  0ED5               	movlw	low STR_37
  6590  010D12  6EE6               	movwf	postinc1,c
  6591  010D14  0EFC               	movlw	high STR_37
  6592  010D16  6EE6               	movwf	postinc1,c
  6593  010D18  0E00               	movlw	0
  6594  010D1A  6EE6               	movwf	postinc1,c
  6595  010D1C  0E00               	movlw	0
  6596  010D1E  6EE6               	movwf	postinc1,c
  6597  010D20  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6598  010D24  0060  F0AB  FFE6   	movff	btemp,postinc1
  6599  010D2A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6600  010D30  0E0C               	movlw	12
  6601  010D32  6EE6               	movwf	postinc1,c
  6602  010D34  EC01  F0FF         	call	_sprintf	;wreg free
  6603                           
  6604                           ;main.c: 404:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  6605  010D38  EE22  F0FF         	lfsr	2,_C
  6606  010D3C  006F FF7B FFE6     	movff	postinc2,postinc1
  6607  010D42  006F FF7B FFE6     	movff	postinc2,postinc1
  6608  010D48  006F FF7B FFE6     	movff	postinc2,postinc1
  6609  010D4E  006F FF7B FFE6     	movff	postinc2,postinc1
  6610  010D54  EE22  F10F         	lfsr	2,_C+16	;volatile
  6611  010D58  006F FF7B FFE6     	movff	postinc2,postinc1
  6612  010D5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6613  010D64  006F FF7B FFE6     	movff	postinc2,postinc1
  6614  010D6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6615  010D70  0EA9               	movlw	low STR_38
  6616  010D72  6EE6               	movwf	postinc1,c
  6617  010D74  0EFC               	movlw	high STR_38
  6618  010D76  6EE6               	movwf	postinc1,c
  6619  010D78  0E00               	movlw	0
  6620  010D7A  6EE6               	movwf	postinc1,c
  6621  010D7C  0E01               	movlw	1
  6622  010D7E  6EE6               	movwf	postinc1,c
  6623  010D80  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6624  010D84  0060  F0AB  FFE6   	movff	btemp,postinc1
  6625  010D8A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6626  010D90  0E0C               	movlw	12
  6627  010D92  6EE6               	movwf	postinc1,c
  6628  010D94  EC01  F0FF         	call	_sprintf	;wreg free
  6629                           
  6630                           ;main.c: 405:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  6631  010D98  EE22  F13F         	lfsr	2,_C+64	;volatile
  6632  010D9C  006F FF7B FFE6     	movff	postinc2,postinc1
  6633  010DA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6634  010DA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6635  010DAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6636  010DB4  EE22  F107         	lfsr	2,_C+8	;volatile
  6637  010DB8  006F FF7B FFE6     	movff	postinc2,postinc1
  6638  010DBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6639  010DC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6640  010DCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6641  010DD0  0EBF               	movlw	low STR_39
  6642  010DD2  6EE6               	movwf	postinc1,c
  6643  010DD4  0EFC               	movlw	high STR_39
  6644  010DD6  6EE6               	movwf	postinc1,c
  6645  010DD8  0E00               	movlw	0
  6646  010DDA  6EE6               	movwf	postinc1,c
  6647  010DDC  0E02               	movlw	2
  6648  010DDE  6EE6               	movwf	postinc1,c
  6649  010DE0  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6650  010DE4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6651  010DEA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6652  010DF0  0E0C               	movlw	12
  6653  010DF2  6EE6               	movwf	postinc1,c
  6654  010DF4  EC01  F0FF         	call	_sprintf	;wreg free
  6655                           
  6656                           ;main.c: 407:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  6657  010DF8  EE22  F19F         	lfsr	2,_C+160	;volatile
  6658  010DFC  006F FF7B FFE6     	movff	postinc2,postinc1
  6659  010E02  006F FF7B FFE6     	movff	postinc2,postinc1
  6660  010E08  006F FF7B FFE6     	movff	postinc2,postinc1
  6661  010E0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6662  010E14  0ECD               	movlw	low STR_40
  6663  010E16  6EE6               	movwf	postinc1,c
  6664  010E18  0EFB               	movlw	high STR_40
  6665  010E1A  6EE6               	movwf	postinc1,c
  6666  010E1C  0E01               	movlw	1
  6667  010E1E  6EE6               	movwf	postinc1,c
  6668  010E20  0E00               	movlw	0
  6669  010E22  6EE6               	movwf	postinc1,c
  6670  010E24  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6671  010E28  0060  F0AB  FFE6   	movff	btemp,postinc1
  6672  010E2E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6673  010E34  0E08               	movlw	8
  6674  010E36  6EE6               	movwf	postinc1,c
  6675  010E38  EC01  F0FF         	call	_sprintf	;wreg free
  6676                           
  6677                           ;main.c: 408:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  6678  010E3C  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6679  010E40  006F FF7B FFE6     	movff	postinc2,postinc1
  6680  010E46  006F FF7B FFE6     	movff	postinc2,postinc1
  6681  010E4C  006F FF7B FFE6     	movff	postinc2,postinc1
  6682  010E52  006F FF7B FFE6     	movff	postinc2,postinc1
  6683  010E58  0EE3               	movlw	low STR_41
  6684  010E5A  6EE6               	movwf	postinc1,c
  6685  010E5C  0EFB               	movlw	high STR_41
  6686  010E5E  6EE6               	movwf	postinc1,c
  6687  010E60  0E01               	movlw	1
  6688  010E62  6EE6               	movwf	postinc1,c
  6689  010E64  0E01               	movlw	1
  6690  010E66  6EE6               	movwf	postinc1,c
  6691  010E68  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6692  010E6C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6693  010E72  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6694  010E78  0E08               	movlw	8
  6695  010E7A  6EE6               	movwf	postinc1,c
  6696  010E7C  EC01  F0FF         	call	_sprintf	;wreg free
  6697                           
  6698                           ;main.c: 409:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  6699  010E80  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6700  010E84  006F FF7B FFE6     	movff	postinc2,postinc1
  6701  010E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  6702  010E90  006F FF7B FFE6     	movff	postinc2,postinc1
  6703  010E96  006F FF7B FFE6     	movff	postinc2,postinc1
  6704  010E9C  EE22  F19F         	lfsr	2,_C+160	;volatile
  6705  010EA0  006F FF7B FFE6     	movff	postinc2,postinc1
  6706  010EA6  006F FF7B FFE6     	movff	postinc2,postinc1
  6707  010EAC  006F FF7B FFE6     	movff	postinc2,postinc1
  6708  010EB2  006F FF7B FFE6     	movff	postinc2,postinc1
  6709  010EB8  EC1B  F0BC         	call	___fladd	;wreg free
  6710  010EBC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6711  010EC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6712  010EC8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6713  010ECE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6714  010ED4  0EF9               	movlw	low STR_42
  6715  010ED6  6EE6               	movwf	postinc1,c
  6716  010ED8  0EFB               	movlw	high STR_42
  6717  010EDA  6EE6               	movwf	postinc1,c
  6718  010EDC  0E01               	movlw	1
  6719  010EDE  6EE6               	movwf	postinc1,c
  6720  010EE0  0E02               	movlw	2
  6721  010EE2  6EE6               	movwf	postinc1,c
  6722  010EE4  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6723  010EE8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6724  010EEE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6725  010EF4  0E08               	movlw	8
  6726  010EF6  6EE6               	movwf	postinc1,c
  6727  010EF8  EC01  F0FF         	call	_sprintf	;wreg free
  6728                           
  6729                           ;main.c: 410:      break;
  6730  010EFC  D227               	goto	l18143
  6731  010EFE                     l1495:
  6732                           
  6733                           ; BSR set to: 1
  6734                           ;main.c: 412:      V.calib = 0;
  6735  010EFE  0102               	movlb	2	; () banked
  6736  010F00  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6737                           
  6738                           ; BSR set to: 2
  6739                           ;main.c: 413:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  6740  010F02  EE22  F17F         	lfsr	2,_C+128	;volatile
  6741  010F06  006F FF7B FFE6     	movff	postinc2,postinc1
  6742  010F0C  006F FF7B FFE6     	movff	postinc2,postinc1
  6743  010F12  006F FF7B FFE6     	movff	postinc2,postinc1
  6744  010F18  006F FF7B FFE6     	movff	postinc2,postinc1
  6745  010F1E  0E19               	movlw	low STR_43
  6746  010F20  6EE6               	movwf	postinc1,c
  6747  010F22  0EFB               	movlw	high STR_43
  6748  010F24  6EE6               	movwf	postinc1,c
  6749  010F26  0E00               	movlw	0
  6750  010F28  6EE6               	movwf	postinc1,c
  6751  010F2A  0E00               	movlw	0
  6752  010F2C  6EE6               	movwf	postinc1,c
  6753  010F2E  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6754  010F32  0060  F0AB  FFE6   	movff	btemp,postinc1
  6755  010F38  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6756  010F3E  0E08               	movlw	8
  6757  010F40  6EE6               	movwf	postinc1,c
  6758  010F42  EC01  F0FF         	call	_sprintf	;wreg free
  6759                           
  6760                           ;main.c: 414:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6761  010F46  EE22  F193         	lfsr	2,_C+148	;volatile
  6762  010F4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6763  010F50  006F FF7B FFE6     	movff	postinc2,postinc1
  6764  010F56  006F FF7B FFE6     	movff	postinc2,postinc1
  6765  010F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  6766  010F62  EE22  F18F         	lfsr	2,_C+144	;volatile
  6767  010F66  006F FF7B FFE6     	movff	postinc2,postinc1
  6768  010F6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6769  010F72  006F FF7B FFE6     	movff	postinc2,postinc1
  6770  010F78  006F FF7B FFE6     	movff	postinc2,postinc1
  6771  010F7E  0E5E               	movlw	low STR_44
  6772  010F80  6EE6               	movwf	postinc1,c
  6773  010F82  0EFB               	movlw	high STR_44
  6774  010F84  6EE6               	movwf	postinc1,c
  6775  010F86  0E00               	movlw	0
  6776  010F88  6EE6               	movwf	postinc1,c
  6777  010F8A  0E01               	movlw	1
  6778  010F8C  6EE6               	movwf	postinc1,c
  6779  010F8E  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6780  010F92  0060  F0AB  FFE6   	movff	btemp,postinc1
  6781  010F98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6782  010F9E  0E0C               	movlw	12
  6783  010FA0  6EE6               	movwf	postinc1,c
  6784  010FA2  EC01  F0FF         	call	_sprintf	;wreg free
  6785                           
  6786                           ;main.c: 415:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6787  010FA6  EE22  F10F         	lfsr	2,_C+16	;volatile
  6788  010FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  6789  010FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6790  010FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6791  010FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6792  010FC2  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6793  010FC6  006F FF78  F034    	movff	postinc2,btemp+10
  6794  010FCC  006F FF74  F035    	movff	postdec2,btemp+11
  6795  010FD2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6796  010FD8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6797  010FDE  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6798  010FE2  006F FF78  F034    	movff	postinc2,btemp+10
  6799  010FE8  006F FF74  F035    	movff	postdec2,btemp+11
  6800  010FEE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6801  010FF4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6802  010FFA  0E00               	movlw	0
  6803  010FFC  6EE6               	movwf	postinc1,c
  6804  010FFE  0E05               	movlw	5
  6805  011000  6EE6               	movwf	postinc1,c
  6806  011002  EC52  F001         	call	_spinners	;wreg free
  6807  011006  502A               	movf	btemp^0,w,c
  6808  011008  6EE6               	movwf	postinc1,c
  6809  01100A  0E00               	movlw	0
  6810  01100C  6EE6               	movwf	postinc1,c
  6811  01100E  0E61               	movlw	low STR_45
  6812  011010  6EE6               	movwf	postinc1,c
  6813  011012  0EFA               	movlw	high STR_45
  6814  011014  6EE6               	movwf	postinc1,c
  6815  011016  0E00               	movlw	0
  6816  011018  6EE6               	movwf	postinc1,c
  6817  01101A  0E02               	movlw	2
  6818  01101C  6EE6               	movwf	postinc1,c
  6819  01101E  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6820  011022  0060  F0AB  FFE6   	movff	btemp,postinc1
  6821  011028  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6822  01102E  0E0E               	movlw	14
  6823  011030  6EE6               	movwf	postinc1,c
  6824  011032  EC01  F0FF         	call	_sprintf	;wreg free
  6825                           
  6826                           ;main.c: 417:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6827  011036  EE22  F187         	lfsr	2,_C+136	;volatile
  6828  01103A  006F FF7B FFE6     	movff	postinc2,postinc1
  6829  011040  006F FF7B FFE6     	movff	postinc2,postinc1
  6830  011046  006F FF7B FFE6     	movff	postinc2,postinc1
  6831  01104C  006F FF7B FFE6     	movff	postinc2,postinc1
  6832  011052  0E02               	movlw	low STR_46
  6833  011054  6EE6               	movwf	postinc1,c
  6834  011056  0EFB               	movlw	high STR_46
  6835  011058  6EE6               	movwf	postinc1,c
  6836  01105A  0E01               	movlw	1
  6837  01105C  6EE6               	movwf	postinc1,c
  6838  01105E  0E00               	movlw	0
  6839  011060  6EE6               	movwf	postinc1,c
  6840  011062  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6841  011066  0060  F0AB  FFE6   	movff	btemp,postinc1
  6842  01106C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6843  011072  0E08               	movlw	8
  6844  011074  6EE6               	movwf	postinc1,c
  6845  011076  EC01  F0FF         	call	_sprintf	;wreg free
  6846                           
  6847                           ;main.c: 418:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6848  01107A  EE22  F229         	lfsr	2,_C+298	;volatile
  6849  01107E  006F FF7B FFE6     	movff	postinc2,postinc1
  6850  011084  006F FF7B FFE6     	movff	postinc2,postinc1
  6851  01108A  006F FF7B FFE6     	movff	postinc2,postinc1
  6852  011090  006F FF7B FFE6     	movff	postinc2,postinc1
  6853  011096  EE22  F235         	lfsr	2,_C+310	;volatile
  6854  01109A  006F FF7B FFE6     	movff	postinc2,postinc1
  6855  0110A0  006F FF7B FFE6     	movff	postinc2,postinc1
  6856  0110A6  006F FF7B FFE6     	movff	postinc2,postinc1
  6857  0110AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6858  0110B2  0E30               	movlw	low STR_47
  6859  0110B4  6EE6               	movwf	postinc1,c
  6860  0110B6  0EFB               	movlw	high STR_47
  6861  0110B8  6EE6               	movwf	postinc1,c
  6862  0110BA  0E01               	movlw	1
  6863  0110BC  6EE6               	movwf	postinc1,c
  6864  0110BE  0E01               	movlw	1
  6865  0110C0  6EE6               	movwf	postinc1,c
  6866  0110C2  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6867  0110C6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6868  0110CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6869  0110D2  0E0C               	movlw	12
  6870  0110D4  6EE6               	movwf	postinc1,c
  6871  0110D6  EC01  F0FF         	call	_sprintf	;wreg free
  6872                           
  6873                           ;main.c: 419:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6874  0110DA  EE22  F22D         	lfsr	2,_C+302	;volatile
  6875  0110DE  006F FF7B FFE6     	movff	postinc2,postinc1
  6876  0110E4  006F FF7B FFE6     	movff	postinc2,postinc1
  6877  0110EA  006F FF7B FFE6     	movff	postinc2,postinc1
  6878  0110F0  006F FF7B FFE6     	movff	postinc2,postinc1
  6879  0110F6  EE22  F239         	lfsr	2,_C+314	;volatile
  6880  0110FA  006F FF7B FFE6     	movff	postinc2,postinc1
  6881  011100  006F FF7B FFE6     	movff	postinc2,postinc1
  6882  011106  006F FF7B FFE6     	movff	postinc2,postinc1
  6883  01110C  006F FF7B FFE6     	movff	postinc2,postinc1
  6884  011112  0E47               	movlw	low STR_48
  6885  011114  6EE6               	movwf	postinc1,c
  6886  011116  0EFB               	movlw	high STR_48
  6887  011118  6EE6               	movwf	postinc1,c
  6888  01111A  0E01               	movlw	1
  6889  01111C  6EE6               	movwf	postinc1,c
  6890  01111E  0E02               	movlw	2
  6891  011120  6EE6               	movwf	postinc1,c
  6892  011122  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  6893  011126  0060  F0AB  FFE6   	movff	btemp,postinc1
  6894  01112C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6895  011132  0E0C               	movlw	12
  6896  011134  6EE6               	movwf	postinc1,c
  6897  011136  EC01  F0FF         	call	_sprintf	;wreg free
  6898                           
  6899                           ;main.c: 420:      break;
  6900  01113A  D108               	goto	l18143
  6901  01113C                     l18127:
  6902                           
  6903                           ; BSR set to: 1
  6904                           ;main.c: 422:      if (!V.calib) {
  6905  01113C  0102               	movlb	2	; () banked
  6906  01113E  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  6907  011140  A4D8               	btfss	status,2,c
  6908  011142  D02D               	goto	l18131
  6909                           
  6910                           ; BSR set to: 2
  6911                           ;main.c: 423:       lp_filter(0.0, i, -1);
  6912  011144  0EFF               	movlw	255
  6913  011146  6EE6               	movwf	postinc1,c
  6914                           
  6915                           ;stkvar	_i @ sp[(-18)+14]
  6916  011148  0EFC               	movlw	-4
  6917  01114A  50E3               	movf	plusw1,w,c
  6918  01114C  6EE6               	movwf	postinc1,c
  6919  01114E  0E00               	movlw	0
  6920  011150  6EE6               	movwf	postinc1,c
  6921  011152  0E00               	movlw	0
  6922  011154  6EE6               	movwf	postinc1,c
  6923  011156  0E00               	movlw	0
  6924  011158  6EE6               	movwf	postinc1,c
  6925  01115A  0E00               	movlw	0
  6926  01115C  6EE6               	movwf	postinc1,c
  6927  01115E  EC9D  F0EE         	call	_lp_filter	;wreg free
  6928                           
  6929                           ;main.c: 424:       lp_filter(0.0, j, -1);
  6930  011162  0EFF               	movlw	255
  6931  011164  6EE6               	movwf	postinc1,c
  6932                           
  6933                           ;stkvar	_j @ sp[(-18)+13]
  6934  011166  0EFB               	movlw	-5
  6935  011168  50E3               	movf	plusw1,w,c
  6936  01116A  6EE6               	movwf	postinc1,c
  6937  01116C  0E00               	movlw	0
  6938  01116E  6EE6               	movwf	postinc1,c
  6939  011170  0E00               	movlw	0
  6940  011172  6EE6               	movwf	postinc1,c
  6941  011174  0E00               	movlw	0
  6942  011176  6EE6               	movwf	postinc1,c
  6943  011178  0E00               	movlw	0
  6944  01117A  6EE6               	movwf	postinc1,c
  6945  01117C  EC9D  F0EE         	call	_lp_filter	;wreg free
  6946                           
  6947                           ;main.c: 425:       lp_filter(0.0, k, -1);
  6948  011180  0EFF               	movlw	255
  6949  011182  6EE6               	movwf	postinc1,c
  6950                           
  6951                           ;stkvar	_k @ sp[(-18)+12]
  6952  011184  0EFA               	movlw	-6
  6953  011186  50E3               	movf	plusw1,w,c
  6954  011188  6EE6               	movwf	postinc1,c
  6955  01118A  0E00               	movlw	0
  6956  01118C  6EE6               	movwf	postinc1,c
  6957  01118E  0E00               	movlw	0
  6958  011190  6EE6               	movwf	postinc1,c
  6959  011192  0E00               	movlw	0
  6960  011194  6EE6               	movwf	postinc1,c
  6961  011196  0E00               	movlw	0
  6962  011198  6EE6               	movwf	postinc1,c
  6963  01119A  EC9D  F0EE         	call	_lp_filter	;wreg free
  6964  01119E                     l18131:
  6965                           
  6966                           ;main.c: 427:      V.calib = 1;
  6967  01119E  0E01               	movlw	1
  6968  0111A0  0102               	movlb	2	; () banked
  6969  0111A2  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  6970                           
  6971                           ; BSR set to: 2
  6972                           ;main.c: 428:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6973                           ;stkvar	_inp_index @ sp[(-17)+11]
  6974  0111A4  0EFA               	movlw	-6
  6975  0111A6  50E3               	movf	plusw1,w,c
  6976  0111A8  6EE6               	movwf	postinc1,c
  6977  0111AA  0E00               	movlw	0
  6978  0111AC  6EE6               	movwf	postinc1,c
  6979                           
  6980                           ;stkvar	_i @ sp[(-19)+14]
  6981  0111AE  0EFB               	movlw	-5
  6982  0111B0  50E3               	movf	plusw1,w,c
  6983  0111B2  0D04               	mullw	4
  6984  0111B4  0EFF               	movlw	low _C
  6985  0111B6  24F3               	addwf	243,w,c
  6986  0111B8  6ED9               	movwf	fsr2l,c
  6987  0111BA  0E08               	movlw	high _C
  6988  0111BC  20F4               	addwfc	prodh,w,c
  6989  0111BE  6EDA               	movwf	fsr2h,c
  6990  0111C0  006F FF7B FFE6     	movff	postinc2,postinc1
  6991  0111C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6992  0111CC  006F FF7B FFE6     	movff	postinc2,postinc1
  6993  0111D2  006F FF7B FFE6     	movff	postinc2,postinc1
  6994                           
  6995                           ;stkvar	_i @ sp[(-23)+14]
  6996  0111D8  0EF7               	movlw	-9
  6997  0111DA  50E3               	movf	plusw1,w,c
  6998  0111DC  6EE6               	movwf	postinc1,c
  6999  0111DE  ECBB  F015         	call	_get_raw_result	;wreg free
  7000  0111E2  0060  F0AB  FFE6   	movff	btemp,postinc1
  7001  0111E8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7002  0111EE  0EEB               	movlw	low STR_49
  7003  0111F0  6EE6               	movwf	postinc1,c
  7004  0111F2  0EFC               	movlw	high STR_49
  7005  0111F4  6EE6               	movwf	postinc1,c
  7006  0111F6  0E00               	movlw	0
  7007  0111F8  6EE6               	movwf	postinc1,c
  7008  0111FA  0E00               	movlw	0
  7009  0111FC  6EE6               	movwf	postinc1,c
  7010  0111FE  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  7011  011202  0060  F0AB  FFE6   	movff	btemp,postinc1
  7012  011208  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7013  01120E  0E0C               	movlw	12
  7014  011210  6EE6               	movwf	postinc1,c
  7015  011212  EC01  F0FF         	call	_sprintf	;wreg free
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;main.c: 429:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  7019                           ;stkvar	_inp_index @ sp[(-17)+11]
  7020  011216  0EFA               	movlw	-6
  7021  011218  50E3               	movf	plusw1,w,c
  7022  01121A  6E34               	movwf	(btemp+10)^0,c
  7023  01121C  6A35               	clrf	(btemp+11)^0,c
  7024  01121E  0E01               	movlw	1
  7025  011220  2634               	addwf	(btemp+10)^0,f,c
  7026  011222  0E00               	movlw	0
  7027  011224  2235               	addwfc	(btemp+11)^0,f,c
  7028  011226  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7029  01122C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7030                           
  7031                           ;stkvar	_j @ sp[(-19)+13]
  7032  011232  0EFA               	movlw	-6
  7033  011234  50E3               	movf	plusw1,w,c
  7034  011236  0D04               	mullw	4
  7035  011238  0EFF               	movlw	low _C
  7036  01123A  24F3               	addwf	243,w,c
  7037  01123C  6ED9               	movwf	fsr2l,c
  7038  01123E  0E08               	movlw	high _C
  7039  011240  20F4               	addwfc	prodh,w,c
  7040  011242  6EDA               	movwf	fsr2h,c
  7041  011244  006F FF7B FFE6     	movff	postinc2,postinc1
  7042  01124A  006F FF7B FFE6     	movff	postinc2,postinc1
  7043  011250  006F FF7B FFE6     	movff	postinc2,postinc1
  7044  011256  006F FF7B FFE6     	movff	postinc2,postinc1
  7045                           
  7046                           ;stkvar	_j @ sp[(-23)+13]
  7047  01125C  0EF6               	movlw	-10
  7048  01125E  50E3               	movf	plusw1,w,c
  7049  011260  6EE6               	movwf	postinc1,c
  7050  011262  ECBB  F015         	call	_get_raw_result	;wreg free
  7051  011266  0060  F0AB  FFE6   	movff	btemp,postinc1
  7052  01126C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7053  011272  0EEB               	movlw	low STR_49
  7054  011274  6EE6               	movwf	postinc1,c
  7055  011276  0EFC               	movlw	high STR_49
  7056  011278  6EE6               	movwf	postinc1,c
  7057  01127A  0E00               	movlw	0
  7058  01127C  6EE6               	movwf	postinc1,c
  7059  01127E  0E01               	movlw	1
  7060  011280  6EE6               	movwf	postinc1,c
  7061  011282  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  7062  011286  0060  F0AB  FFE6   	movff	btemp,postinc1
  7063  01128C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7064  011292  0E0C               	movlw	12
  7065  011294  6EE6               	movwf	postinc1,c
  7066  011296  EC01  F0FF         	call	_sprintf	;wreg free
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;main.c: 430:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7070                           ;stkvar	_inp_index @ sp[(-17)+11]
  7071  01129A  0EFA               	movlw	-6
  7072  01129C  50E3               	movf	plusw1,w,c
  7073  01129E  6E34               	movwf	(btemp+10)^0,c
  7074  0112A0  6A35               	clrf	(btemp+11)^0,c
  7075  0112A2  0E02               	movlw	2
  7076  0112A4  2634               	addwf	(btemp+10)^0,f,c
  7077  0112A6  0E00               	movlw	0
  7078  0112A8  2235               	addwfc	(btemp+11)^0,f,c
  7079  0112AA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7080  0112B0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7081                           
  7082                           ;stkvar	_k @ sp[(-19)+12]
  7083  0112B6  0EF9               	movlw	-7
  7084  0112B8  50E3               	movf	plusw1,w,c
  7085  0112BA  0D04               	mullw	4
  7086  0112BC  0EFF               	movlw	low _C
  7087  0112BE  24F3               	addwf	243,w,c
  7088  0112C0  6ED9               	movwf	fsr2l,c
  7089  0112C2  0E08               	movlw	high _C
  7090  0112C4  20F4               	addwfc	prodh,w,c
  7091  0112C6  6EDA               	movwf	fsr2h,c
  7092  0112C8  006F FF7B FFE6     	movff	postinc2,postinc1
  7093  0112CE  006F FF7B FFE6     	movff	postinc2,postinc1
  7094  0112D4  006F FF7B FFE6     	movff	postinc2,postinc1
  7095  0112DA  006F FF7B FFE6     	movff	postinc2,postinc1
  7096                           
  7097                           ;stkvar	_k @ sp[(-23)+12]
  7098  0112E0  0EF5               	movlw	-11
  7099  0112E2  50E3               	movf	plusw1,w,c
  7100  0112E4  6EE6               	movwf	postinc1,c
  7101  0112E6  ECBB  F015         	call	_get_raw_result	;wreg free
  7102  0112EA  0060  F0AB  FFE6   	movff	btemp,postinc1
  7103  0112F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7104  0112F6  0EEB               	movlw	low STR_49
  7105  0112F8  6EE6               	movwf	postinc1,c
  7106  0112FA  0EFC               	movlw	high STR_49
  7107  0112FC  6EE6               	movwf	postinc1,c
  7108  0112FE  0E00               	movlw	0
  7109  011300  6EE6               	movwf	postinc1,c
  7110  011302  0E02               	movlw	2
  7111  011304  6EE6               	movwf	postinc1,c
  7112  011306  ECA2  F013         	call	_get_vterm_ptr	;wreg free
  7113  01130A  0060  F0AB  FFE6   	movff	btemp,postinc1
  7114  011310  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7115  011316  0E0C               	movlw	12
  7116  011318  6EE6               	movwf	postinc1,c
  7117  01131A  EC01  F0FF         	call	_sprintf	;wreg free
  7118                           
  7119                           ;main.c: 431:      break;
  7120  01131E  D016               	goto	l18143
  7121  011320                     l18141:
  7122  011320  0101               	movlb	1	; () banked
  7123  011322  51AB               	movf	_H& (0+255),w,b
  7124  011324  6E34               	movwf	(btemp+10)^0,c
  7125  011326  6A35               	clrf	(btemp+11)^0,c
  7126                           
  7127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7128                           ; Switch size 1, requested type "simple"
  7129                           ; Number of cases is 1, Range of values is 0 to 0
  7130                           ; switch strategies available:
  7131                           ; Name         Instructions Cycles
  7132                           ; simple_byte            4     3 (average)
  7133                           ;	Chosen strategy is simple_byte
  7134  011328  5035               	movf	(btemp+11)^0,w,c
  7135  01132A  0A00               	xorlw	0	; case 0
  7136  01132C  A4D8               	btfss	status,2,c
  7137  01132E  D00E               	goto	l18143
  7138                           
  7139                           ; BSR set to: 1
  7140                           ; Switch size 1, requested type "simple"
  7141                           ; Number of cases is 4, Range of values is 0 to 3
  7142                           ; switch strategies available:
  7143                           ; Name         Instructions Cycles
  7144                           ; simple_byte           13     7 (average)
  7145                           ;	Chosen strategy is simple_byte
  7146  011330  5034               	movf	(btemp+10)^0,w,c
  7147  011332  0A00               	xorlw	0	; case 0
  7148  011334  B4D8               	btfsc	status,2,c
  7149  011336  D4CE               	goto	l1494
  7150  011338  0A01               	xorlw	1	; case 1
  7151  01133A  B4D8               	btfsc	status,2,c
  7152  01133C  EF67  F085         	goto	l1484
  7153  011340  0A03               	xorlw	3	; case 2
  7154  011342  B4D8               	btfsc	status,2,c
  7155  011344  D5DC               	goto	l1495
  7156  011346  0A01               	xorlw	1	; case 3
  7157  011348  B4D8               	btfsc	status,2,c
  7158  01134A  D6F8               	goto	l18127
  7159  01134C                     l18143:
  7160                           
  7161                           ;main.c: 435:     clear_hid_pflags(&H);
  7162  01134C  0EAB               	movlw	low _H
  7163  01134E  6EE6               	movwf	postinc1,c
  7164  011350  0E01               	movlw	high _H
  7165  011352  6EE6               	movwf	postinc1,c
  7166  011354  EC33  F00D         	call	_clear_hid_pflags	;wreg free
  7167                           
  7168                           ;main.c: 437:    StartTimer(TMR_DISPLAY, 250);
  7169  011358  0EFA               	movlw	250
  7170  01135A  6EE6               	movwf	postinc1,c
  7171  01135C  0E00               	movlw	0
  7172  01135E  6EE6               	movwf	postinc1,c
  7173  011360  0E0A               	movlw	10
  7174  011362  6EE6               	movwf	postinc1,c
  7175  011364  ECB3  F011         	call	_StartTimer	;wreg free
  7176                           
  7177                           ;main.c: 438:    V.enter = check_enter_button(&H);
  7178  011368  0EAB               	movlw	low _H
  7179  01136A  6EE6               	movwf	postinc1,c
  7180  01136C  0E01               	movlw	high _H
  7181  01136E  6EE6               	movwf	postinc1,c
  7182  011370  ECEF  F00B         	call	_check_enter_button	;wreg free
  7183  011374  502A               	movf	btemp^0,w,c
  7184  011376  0102               	movlb	2	; () banked
  7185  011378  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7186                           
  7187                           ; BSR set to: 2
  7188                           ;main.c: 439:    if (V.enter && (H.hid_display != HID_AUX)) {
  7189  01137A  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7190  01137C  B4D8               	btfsc	status,2,c
  7191  01137E  D013               	goto	l18157
  7192                           
  7193                           ; BSR set to: 2
  7194  011380  0E03               	movlw	3
  7195  011382  0101               	movlb	1	; () banked
  7196  011384  19AB               	xorwf	_H& (0+255),w,b
  7197  011386  B4D8               	btfsc	status,2,c
  7198  011388  D00E               	goto	l18157
  7199                           
  7200                           ; BSR set to: 1
  7201                           ;main.c: 440:     V.enter = 0;
  7202  01138A  0102               	movlb	2	; () banked
  7203  01138C  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7204                           
  7205                           ; BSR set to: 2
  7206                           ;main.c: 441:     V.screen = ~V.screen;
  7207  01138E  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7208  011390  D002               	goto	u17880
  7209  011392  0E01               	movlw	1
  7210  011394  D001               	goto	u17886
  7211  011396                     u17880:
  7212  011396  0E00               	movlw	0
  7213  011398                     u17886:
  7214  011398  0AFF               	xorlw	255
  7215  01139A  6E35               	movwf	(btemp+11)^0,c
  7216  01139C  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7217  01139E  1835               	xorwf	(btemp+11)^0,w,c
  7218  0113A0  0BFE               	andlw	-2
  7219  0113A2  1835               	xorwf	(btemp+11)^0,w,c
  7220  0113A4  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7221  0113A6                     l18157:
  7222                           
  7223                           ;main.c: 443:    set_vterm(V.screen);
  7224  0113A6  0102               	movlb	2	; () banked
  7225  0113A8  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7226  0113AA  D002               	goto	u17890
  7227  0113AC  0E01               	movlw	1
  7228  0113AE  D001               	goto	u17896
  7229  0113B0                     u17890:
  7230  0113B0  0E00               	movlw	0
  7231  0113B2                     u17896:
  7232  0113B2  6EE6               	movwf	postinc1,c
  7233  0113B4  EC2C  F016         	call	_set_vterm	;wreg free
  7234                           
  7235                           ;main.c: 444:    update_lcd(V.screen);
  7236  0113B8  0102               	movlb	2	; () banked
  7237  0113BA  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7238  0113BC  D002               	goto	u17900
  7239  0113BE  0E01               	movlw	1
  7240  0113C0  D001               	goto	u17906
  7241  0113C2                     u17900:
  7242  0113C2  0E00               	movlw	0
  7243  0113C4                     u17906:
  7244  0113C4  6EE6               	movwf	postinc1,c
  7245  0113C6  ECB3  F0F7         	call	_update_lcd	;wreg free
  7246                           
  7247                           ;main.c: 445:    display_history();
  7248  0113CA  ECF3  F0DA         	call	_display_history	;wreg free
  7249                           
  7250                           ;main.c: 447:    wait_lcd_done();
  7251  0113CE  ECAA  F015         	call	_wait_lcd_done	;wreg free
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;main.c: 448:    set_dac_a(3.333);
  7255  0113D2  0EDF               	movlw	223
  7256  0113D4  6EE6               	movwf	postinc1,c
  7257  0113D6  0E4F               	movlw	79
  7258  0113D8  6EE6               	movwf	postinc1,c
  7259  0113DA  0E55               	movlw	85
  7260  0113DC  6EE6               	movwf	postinc1,c
  7261  0113DE  0E40               	movlw	64
  7262  0113E0  6EE6               	movwf	postinc1,c
  7263  0113E2  ECF5  F012         	call	_set_dac_a	;wreg free
  7264                           
  7265                           ;main.c: 449:    set_dac_b(6.666);
  7266  0113E6  0EDF               	movlw	223
  7267  0113E8  6EE6               	movwf	postinc1,c
  7268  0113EA  0E4F               	movlw	79
  7269  0113EC  6EE6               	movwf	postinc1,c
  7270  0113EE  0ED5               	movlw	213
  7271  0113F0  6EE6               	movwf	postinc1,c
  7272  0113F2  0E40               	movlw	64
  7273  0113F4  6EE6               	movwf	postinc1,c
  7274  0113F6  ECDB  F012         	call	_set_dac_b	;wreg free
  7275                           
  7276                           ;main.c: 450:    set_dac();
  7277  0113FA  ECCC  F005         	call	_set_dac	;wreg free
  7278  0113FE                     l18171:
  7279                           
  7280                           ;main.c: 456:   check_help(V.flipper);
  7281  0113FE  0102               	movlb	2	; () banked
  7282  011400  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7283  011402  6EE6               	movwf	postinc1,c
  7284  011404  ECC0  F0EA         	call	_check_help	;wreg free
  7285                           
  7286                           ;main.c: 458:   if (V.enter) {
  7287  011408  0102               	movlb	2	; () banked
  7288  01140A  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7289  01140C  B4D8               	btfsc	status,2,c
  7290  01140E  D062               	goto	l1500
  7291                           
  7292                           ; BSR set to: 2
  7293                           ;main.c: 459:    V.enter = 0;
  7294  011410  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7295                           
  7296                           ;main.c: 460:    V.calib = 0;
  7297  011412  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7298                           
  7299                           ; BSR set to: 2
  7300                           ;main.c: 461:    inp_index += 3;
  7301                           ;stkvar	_inp_index @ sp[(-17)+11]
  7302  011414  0EFA               	movlw	-6
  7303  011416  006F FF8C  F02A    	movff	plusw1,btemp
  7304  01141C  0E03               	movlw	3
  7305  01141E  262A               	addwf	btemp^0,f,c
  7306  011420  0EFA               	movlw	-6
  7307  011422  0060  F0AB  FFE3   	movff	btemp,plusw1
  7308                           
  7309                           ;main.c: 462:    if (inp_index > 9)
  7310                           ;stkvar	_inp_index @ sp[(-17)+11]
  7311  011428  0EFA               	movlw	-6
  7312  01142A  006F FF8C  F02A    	movff	plusw1,btemp
  7313  011430  0E09               	movlw	9
  7314  011432  642A               	cpfsgt	btemp^0,c
  7315  011434  D03A               	goto	l18199
  7316                           
  7317                           ; BSR set to: 2
  7318                           ;main.c: 463:     inp_index = 0;
  7319                           ;stkvar	_inp_index @ sp[(-17)+11]
  7320  011436  0EFA               	movlw	-6
  7321  011438  6AE3               	clrf	plusw1,c
  7322  01143A  D037               	goto	l18199
  7323  01143C                     l18181:
  7324                           
  7325                           ; BSR set to: 2
  7326                           ;main.c: 466:     i = C_BATT;
  7327                           ;stkvar	_i @ sp[(-17)+14]
  7328  01143C  0EFD               	movlw	-3
  7329  01143E  6AE3               	clrf	plusw1,c
  7330                           
  7331                           ; BSR set to: 2
  7332                           ;main.c: 467:     j = C_PV;
  7333                           ;stkvar	_j @ sp[(-17)+13]
  7334  011440  0EFC               	movlw	-4
  7335  011442  6AE3               	clrf	plusw1,c
  7336  011444  2AE3               	incf	plusw1,f,c
  7337                           
  7338                           ; BSR set to: 2
  7339                           ;main.c: 468:     k = V_CC;
  7340                           ;stkvar	_k @ sp[(-17)+12]
  7341  011446  0EFB               	movlw	-5
  7342  011448  6AE3               	clrf	plusw1,c
  7343  01144A  82E3               	bsf	plusw1,1,c
  7344                           
  7345                           ;main.c: 469:     break;
  7346  01144C  D043               	goto	l1500
  7347  01144E                     l18187:
  7348                           
  7349                           ; BSR set to: 2
  7350                           ;main.c: 471:     i = V_BAT;
  7351                           ;stkvar	_i @ sp[(-17)+14]
  7352  01144E  0EFD               	movlw	-3
  7353  011450  6AE3               	clrf	plusw1,c
  7354  011452  84E3               	bsf	plusw1,2,c
  7355                           
  7356                           ;main.c: 472:     j = V_PV;
  7357                           ;stkvar	_j @ sp[(-17)+13]
  7358  011454  0EFC               	movlw	-4
  7359  011456  6AE3               	clrf	plusw1,c
  7360  011458  80E3               	bsf	plusw1,0,c
  7361  01145A  84E3               	bsf	plusw1,2,c	;indir
  7362                           
  7363                           ;main.c: 473:     k = V_CBUS;
  7364                           ;stkvar	_k @ sp[(-17)+12]
  7365  01145C  0EFB               	movlw	-5
  7366  01145E  6AE3               	clrf	plusw1,c
  7367  011460  82E3               	bsf	plusw1,1,c
  7368  011462  84E3               	bsf	plusw1,2,c	;indir
  7369                           
  7370                           ;main.c: 474:     break;
  7371  011464  D037               	goto	l1500
  7372  011466                     l18189:
  7373                           
  7374                           ; BSR set to: 2
  7375                           ;main.c: 476:     i = V_BBAT;
  7376                           ;stkvar	_i @ sp[(-17)+14]
  7377  011466  0EFD               	movlw	-3
  7378  011468  6AE3               	clrf	plusw1,c
  7379  01146A  82E3               	bsf	plusw1,1,c
  7380  01146C  86E3               	bsf	plusw1,3,c	;indir
  7381                           
  7382                           ; BSR set to: 2
  7383                           ;main.c: 477:     j = V_TEMP;
  7384  01146E  0E0B               	movlw	11
  7385  011470  6E35               	movwf	(btemp+11)^0,c
  7386                           
  7387                           ;stkvar	_j @ sp[(-17)+13]
  7388  011472  0EFC               	movlw	-4
  7389  011474  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7390                           
  7391                           ; BSR set to: 2
  7392                           ;main.c: 478:     k = V_INVERTER;
  7393                           ;stkvar	_k @ sp[(-17)+12]
  7394  01147A  0EFB               	movlw	-5
  7395  01147C  6AE3               	clrf	plusw1,c
  7396  01147E  84E3               	bsf	plusw1,2,c
  7397  011480  86E3               	bsf	plusw1,3,c	;indir
  7398                           
  7399                           ;main.c: 479:     break;
  7400  011482  D028               	goto	l1500
  7401  011484                     l18195:
  7402                           
  7403                           ; BSR set to: 2
  7404                           ;main.c: 481:     i = V_LIGHT_SENSOR;
  7405  011484  0E0D               	movlw	13
  7406  011486  6E35               	movwf	(btemp+11)^0,c
  7407                           
  7408                           ;stkvar	_i @ sp[(-17)+14]
  7409  011488  0EFD               	movlw	-3
  7410  01148A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7411                           
  7412                           ;main.c: 482:     j = V_LIGHT_SENSOR;
  7413  011490  0E0D               	movlw	13
  7414  011492  6E35               	movwf	(btemp+11)^0,c
  7415                           
  7416                           ;stkvar	_j @ sp[(-17)+13]
  7417  011494  0EFC               	movlw	-4
  7418  011496  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7419                           
  7420                           ;main.c: 483:     k = V_LIGHT_SENSOR;
  7421  01149C  0E0D               	movlw	13
  7422  01149E  6E35               	movwf	(btemp+11)^0,c
  7423                           
  7424                           ;stkvar	_k @ sp[(-17)+12]
  7425  0114A0  0EFB               	movlw	-5
  7426  0114A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7427                           
  7428                           ;main.c: 484:     break;
  7429  0114A8  D015               	goto	l1500
  7430  0114AA                     l18199:
  7431                           
  7432                           ; BSR set to: 2
  7433                           ;stkvar	_inp_index @ sp[(-17)+11]
  7434  0114AA  0EFA               	movlw	-6
  7435  0114AC  50E3               	movf	plusw1,w,c
  7436  0114AE  6E34               	movwf	(btemp+10)^0,c
  7437  0114B0  6A35               	clrf	(btemp+11)^0,c
  7438                           
  7439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7440                           ; Switch size 1, requested type "simple"
  7441                           ; Number of cases is 1, Range of values is 0 to 0
  7442                           ; switch strategies available:
  7443                           ; Name         Instructions Cycles
  7444                           ; simple_byte            4     3 (average)
  7445                           ;	Chosen strategy is simple_byte
  7446  0114B2  5035               	movf	(btemp+11)^0,w,c
  7447  0114B4  0A00               	xorlw	0	; case 0
  7448  0114B6  A4D8               	btfss	status,2,c
  7449  0114B8  D00D               	goto	l1500
  7450                           
  7451                           ; BSR set to: 2
  7452                           ; Switch size 1, requested type "simple"
  7453                           ; Number of cases is 4, Range of values is 0 to 9
  7454                           ; switch strategies available:
  7455                           ; Name         Instructions Cycles
  7456                           ; simple_byte           13     7 (average)
  7457                           ;	Chosen strategy is simple_byte
  7458  0114BA  5034               	movf	(btemp+10)^0,w,c
  7459  0114BC  0A00               	xorlw	0	; case 0
  7460  0114BE  B4D8               	btfsc	status,2,c
  7461  0114C0  D7BD               	goto	l18181
  7462  0114C2  0A03               	xorlw	3	; case 3
  7463  0114C4  B4D8               	btfsc	status,2,c
  7464  0114C6  D7C3               	goto	l18187
  7465  0114C8  0A05               	xorlw	5	; case 6
  7466  0114CA  B4D8               	btfsc	status,2,c
  7467  0114CC  D7CC               	goto	l18189
  7468  0114CE  0A0F               	xorlw	15	; case 9
  7469  0114D0  B4D8               	btfsc	status,2,c
  7470  0114D2  D7D8               	goto	l18195
  7471  0114D4                     l1500:
  7472                           
  7473                           ; BSR set to: 2
  7474                           ;main.c: 493:   if (V.set_sequ) {
  7475  0114D4  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7476  0114D6  EF08  F084         	goto	l18047
  7477                           
  7478                           ; BSR set to: 2
  7479                           ;main.c: 494:    if (TimerDone(TMR_INFO)) {
  7480  0114DA  0E07               	movlw	7
  7481  0114DC  6EE6               	movwf	postinc1,c
  7482  0114DE  EC25  F014         	call	_TimerDone	;wreg free
  7483  0114E2  502A               	movf	btemp^0,w,c
  7484  0114E4  B4D8               	btfsc	status,2,c
  7485  0114E6  D00C               	goto	l18209
  7486                           
  7487                           ;main.c: 495:     V.set_sequ = 0;
  7488  0114E8  0102               	movlb	2	; () banked
  7489  0114EA  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7490                           
  7491                           ; BSR set to: 2
  7492                           ;main.c: 496:     set_vterm(0);
  7493  0114EC  0E00               	movlw	0
  7494  0114EE  6EE6               	movwf	postinc1,c
  7495  0114F0  EC2C  F016         	call	_set_vterm	;wreg free
  7496                           
  7497                           ;main.c: 497:     update_lcd(0);
  7498  0114F4  0E00               	movlw	0
  7499  0114F6  6EE6               	movwf	postinc1,c
  7500  0114F8  ECB3  F0F7         	call	_update_lcd	;wreg free
  7501                           
  7502                           ;main.c: 498:    } else {
  7503  0114FC  EF08  F084         	goto	l18047
  7504  011500                     l18209:
  7505                           
  7506                           ;main.c: 499:     set_vterm(2);
  7507  011500  0E02               	movlw	2
  7508  011502  6EE6               	movwf	postinc1,c
  7509  011504  EC2C  F016         	call	_set_vterm	;wreg free
  7510                           
  7511                           ;main.c: 500:     update_lcd(2);
  7512  011508  0E02               	movlw	2
  7513  01150A  6EE6               	movwf	postinc1,c
  7514  01150C  ECB3  F0F7         	call	_update_lcd	;wreg free
  7515  011510  EF08  F084         	goto	l18047
  7516  011514                     __end_of_main:
  7517                           	opt callstack 0
  7518                           
  7519 ;; *************** function _update_hist_data *****************
  7520 ;; Defined at:
  7521 ;;		line 454 in file "daq.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  mode            1  [STACK] const _Bool 
  7524 ;;  hist            2  [STACK] PTR volatile struct hist
  7525 ;;		 -> C.hist(113), C(336), 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;		None
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1  [STACK] void 
  7530 ;; Registers used:
  7531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7532 ;; Tracked objects:
  7533 ;;		On entry : 7/1
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7541 ;;Total ram usage:        0 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:   15
  7544 ;; This function calls:
  7545 ;;		Nothing
  7546 ;; This function is called by:
  7547 ;;		_main
  7548 ;; This function uses a reentrant model
  7549 ;;
  7550                           
  7551                           	psect	text1
  7552  001850                     __ptext1:
  7553                           	opt callstack 0
  7554  001850                     _update_hist_data:
  7555                           	opt callstack 15
  7556                           
  7557                           ;daq.c: 454: void update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 45
      +                          5: {;daq.c: 456:  if (hist == ((void*)0))
  7558                           ;stkvar	_hist @ sp[(0)+-3]
  7559                           
  7560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7561                           ;incstack = 0
  7562  001850  0EFD               	movlw	-3
  7563  001852  006F FF8C  F02A    	movff	plusw1,btemp
  7564  001858  0EFE               	movlw	-2
  7565  00185A  50E3               	movf	plusw1,w,c
  7566  00185C  102A               	iorwf	btemp^0,w,c
  7567  00185E  B4D8               	btfsc	status,2,c
  7568  001860  D02A               	goto	l2102
  7569                           
  7570                           ;daq.c: 459:  if (mode) {
  7571                           ;stkvar	_mode @ sp[(0)+-1]
  7572  001862  0EFF               	movlw	-1
  7573  001864  50E3               	movf	plusw1,w,c
  7574  001866  B4D8               	btfsc	status,2,c
  7575  001868  D014               	goto	l14289
  7576                           
  7577                           ;daq.c: 460:   if (R.hist_save)
  7578  00186A  0101               	movlb	1	; () banked
  7579  00186C  A1A7               	btfss	(_R+167)& (0+255),0,b	;volatile
  7580  00186E  D023               	goto	l2102
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;daq.c: 461:    R.H = *hist;
  7584                           ;stkvar	_hist @ sp[(0)+-3]
  7585  001870  0EFD               	movlw	-3
  7586  001872  006F FF8F FFD9     	movff	plusw1,fsr2l
  7587  001878  0EFE               	movlw	-2
  7588  00187A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7589  001880  EE00  F136         	lfsr	0,_R+54	;volatile
  7590  001884  0E70               	movlw	112
  7591  001886                     u13501:
  7592  001886  006F FF6F FFEB     	movff	plusw2,plusw0
  7593  00188C  06E8               	decf	wreg,f,c
  7594  00188E  E2FB               	bc	u13501
  7595  001890  D012               	goto	l2102
  7596  001892                     l14289:
  7597                           
  7598                           ;daq.c: 463:   *hist = R.H;
  7599  001892  EE20  F136         	lfsr	2,_R+54	;volatile
  7600                           
  7601                           ;stkvar	_hist @ sp[(0)+-3]
  7602  001896  0EFD               	movlw	-3
  7603  001898  006F FF8F FFE9     	movff	plusw1,fsr0l
  7604  00189E  0EFE               	movlw	-2
  7605  0018A0  006F FF8F FFEA     	movff	plusw1,fsr0h
  7606  0018A6  0E70               	movlw	112
  7607  0018A8                     u13511:
  7608  0018A8  006F FF6F FFEB     	movff	plusw2,plusw0
  7609  0018AE  06E8               	decf	wreg,f,c
  7610  0018B0  E2FB               	bc	u13511
  7611                           
  7612                           ;daq.c: 464:   R.hist_save = 1;
  7613  0018B2  0101               	movlb	1	; () banked
  7614  0018B4  81A7               	bsf	(_R+167)& (0+255),0,b	;volatile
  7615  0018B6                     l2102:
  7616                           
  7617                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7618  0018B6  52E5               	movf	postdec1,f,c
  7619  0018B8  52E5               	movf	postdec1,f,c
  7620  0018BA  52E5               	movf	postdec1,f,c
  7621  0018BC  0012               	return		;funcret
  7622  0018BE                     __end_of_update_hist_data:
  7623                           	opt callstack 0
  7624                           
  7625 ;; *************** function _update_cal_data *****************
  7626 ;; Defined at:
  7627 ;;		line 435 in file "daq.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1  [STACK] void 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/39
  7638 ;;		On exit  : 3F/1
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7645 ;;Total ram usage:        0 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:   15
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_main
  7652 ;; This function uses a reentrant model
  7653 ;;
  7654                           
  7655                           	psect	text2
  7656  001E8A                     __ptext2:
  7657                           	opt callstack 0
  7658  001E8A                     _update_cal_data:
  7659                           	opt callstack 15
  7660                           
  7661                           ;daq.c: 437:  R = r_cal;
  7662                           
  7663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7664                           ;incstack = 0
  7665  001E8A  EE21  F100         	lfsr	2,_r_cal
  7666  001E8E  EE00  F100         	lfsr	0,_R	;volatile
  7667  001E92  0EAA               	movlw	170
  7668  001E94                     u13441:
  7669  001E94  006F FF7B FFEE     	movff	postinc2,postinc0
  7670  001E9A  06E8               	decf	wreg,f,c
  7671  001E9C  E2FB               	bc	u13441
  7672  001E9E  0EAB               	movlw	171
  7673  001EA0  5ED9               	subwf	fsr2l,f,c
  7674  001EA2  5EE9               	subwf	fsr0l,f,c
  7675                           
  7676                           ;daq.c: 438:  if (!R.c_zero_cal) {
  7677  001EA4  0101               	movlb	1	; () banked
  7678  001EA6  B3A7               	btfsc	(_R+167)& (0+255),1,b	;volatile
  7679  001EA8  D008               	goto	l14275
  7680                           
  7681                           ; BSR set to: 1
  7682                           ;daq.c: 439:   R.n_offset[0] = 3938;
  7683  001EAA  0E0F               	movlw	15
  7684  001EAC  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7685  001EAE  0E62               	movlw	98
  7686  001EB0  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7687                           
  7688                           ;daq.c: 440:   R.n_offset[1] = 4004;
  7689  001EB2  0E0F               	movlw	15
  7690  001EB4  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7691  001EB6  0EA4               	movlw	164
  7692  001EB8  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7693  001EBA                     l14275:
  7694                           
  7695                           ; BSR set to: 1
  7696                           ;daq.c: 444:  if (!R.c_scale_cal) {
  7697  001EBA  B5A7               	btfsc	(_R+167)& (0+255),2,b	;volatile
  7698  001EBC  0012               	return	
  7699                           
  7700                           ; BSR set to: 1
  7701                           ;daq.c: 445:   R.n_scalar[0] = 0.0862000;
  7702  001EBE  0EA0               	movlw	160
  7703  001EC0  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7704  001EC2  0E89               	movlw	137
  7705  001EC4  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7706  001EC6  0EB0               	movlw	176
  7707  001EC8  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7708  001ECA  0E3D               	movlw	61
  7709  001ECC  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7710                           
  7711                           ;daq.c: 446:   R.n_scalar[1] = 0.0361010;
  7712  001ECE  0EA4               	movlw	164
  7713  001ED0  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7714  001ED2  0EDE               	movlw	222
  7715  001ED4  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7716  001ED6  0E13               	movlw	19
  7717  001ED8  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7718  001EDA  0E3D               	movlw	61
  7719  001EDC  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7720                           
  7721                           ; BSR set to: 1
  7722                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7723  001EDE  0012               	return		;funcret
  7724  001EE0                     __end_of_update_cal_data:
  7725                           	opt callstack 0
  7726                           
  7727 ;; *************** function _static_soc *****************
  7728 ;; Defined at:
  7729 ;;		line 118 in file "mbmc.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;		None
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1  [STACK] void 
  7736 ;; Registers used:
  7737 ;;		wreg, fsr2l, fsr2h
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/1
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7747 ;;Total ram usage:        0 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:   15
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_main
  7754 ;; This function uses a reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text3
  7758  001D7C                     __ptext3:
  7759                           	opt callstack 0
  7760  001D7C                     _static_soc:
  7761                           	opt callstack 15
  7762                           
  7763                           ;mbmc.c: 120:  C.runtime = 120;
  7764                           
  7765                           ; BSR set to: 1
  7766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7767                           ;incstack = 0
  7768  001D7C  0E78               	movlw	120
  7769  001D7E  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7770  001D84  0E00               	movlw	0
  7771  001D86  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7772                           
  7773                           ;mbmc.c: 121:  C.soc = 100;
  7774  001D8C  0E64               	movlw	100
  7775  001D8E  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7776  001D94  0E00               	movlw	0
  7777  001D96  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7778                           
  7779                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7780  001D9C  EE22  F18B         	lfsr	2,_C+140	;volatile
  7781  001DA0  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7782  001DA6  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7783  001DAC  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7784  001DB2  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7785                           
  7786                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7787  001DB8  EE22  F18F         	lfsr	2,_C+144	;volatile
  7788  001DBC  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7789  001DC2  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7790  001DC8  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7791  001DCE  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7792                           
  7793                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7794  001DD4  0012               	return		;funcret
  7795  001DD6                     __end_of_static_soc:
  7796                           	opt callstack 0
  7797                           
  7798 ;; *************** function _start_switch_handler *****************
  7799 ;; Defined at:
  7800 ;;		line 125 in file "dio.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;		None
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1  [STACK] void 
  7807 ;; Registers used:
  7808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 3F/39
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7818 ;;Total ram usage:        0 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:   16
  7821 ;; This function calls:
  7822 ;;		_INT1_SetInterruptHandler
  7823 ;; This function is called by:
  7824 ;;		_main
  7825 ;; This function uses a reentrant model
  7826 ;;
  7827                           
  7828                           	psect	text4
  7829  002BDC                     __ptext4:
  7830                           	opt callstack 0
  7831  002BDC                     _start_switch_handler:
  7832                           	opt callstack 14
  7833                           
  7834                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7835                           
  7836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7837                           ;incstack = 0
  7838  002BDC  0139               	movlb	57	; () banked
  7839  002BDE  9195               	bcf	149,0,b	;volatile
  7840                           
  7841                           ; BSR set to: 57
  7842                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7843  002BE0  0EC6               	movlw	low _switch_handler
  7844  002BE2  6EE6               	movwf	postinc1,c
  7845  002BE4  0EF4               	movlw	high _switch_handler
  7846  002BE6  6EE6               	movwf	postinc1,c
  7847  002BE8  0E01               	movlw	low (_switch_handler shr (0+16))
  7848  002BEA  6EE6               	movwf	postinc1,c
  7849  002BEC  ECB1  F014         	call	_INT1_SetInterruptHandler	;wreg free
  7850                           
  7851                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7852  002BF0  0E02               	movlw	2
  7853  002BF2  0101               	movlb	1	; () banked
  7854  002BF4  6FD7               	movwf	(_S+35)& (0+255),b	;volatile
  7855                           
  7856                           ; BSR set to: 1
  7857                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7858  002BF6  0139               	movlb	57	; () banked
  7859  002BF8  8195               	bsf	149,0,b	;volatile
  7860                           
  7861                           ; BSR set to: 57
  7862                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7863  002BFA  0012               	return		;funcret
  7864  002BFC                     __end_of_start_switch_handler:
  7865                           	opt callstack 0
  7866                           
  7867 ;; *************** function _srand *****************
  7868 ;; Defined at:
  7869 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  s               2  [STACK] unsigned int 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  1  [STACK] void 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 3F/2
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7887 ;;Total ram usage:        0 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:   15
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_main
  7894 ;; This function uses a reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text5
  7898  002582                     __ptext5:
  7899                           	opt callstack 0
  7900  002582                     _srand:
  7901                           	opt callstack 15
  7902                           
  7903                           ;stkvar	_s @ sp[(0)+-2]
  7904                           
  7905                           ; BSR set to: 57
  7906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7907                           ;incstack = 0
  7908  002582  0EFE               	movlw	-2
  7909  002584  50E3               	movf	plusw1,w,c
  7910  002586  0FFF               	addlw	255
  7911  002588  6E34               	movwf	(btemp+10)^0,c
  7912  00258A  0EFF               	movlw	-1
  7913  00258C  006F FF8C  F035    	movff	plusw1,btemp+11
  7914  002592  0EFF               	movlw	255
  7915  002594  2235               	addwfc	(btemp+11)^0,f,c
  7916  002596  0060  F0D0  F2F2   	movff	btemp+10,_seed
  7917  00259C  0060  F0D4  F2F3   	movff	btemp+11,_seed+1
  7918  0025A2  0102               	movlb	2	; () banked
  7919  0025A4  6BF4               	clrf	(_seed+2)& (0+255),b
  7920  0025A6  6BF5               	clrf	(_seed+3)& (0+255),b
  7921  0025A8  6BF6               	clrf	(_seed+4)& (0+255),b
  7922  0025AA  6BF7               	clrf	(_seed+5)& (0+255),b
  7923  0025AC  6BF8               	clrf	(_seed+6)& (0+255),b
  7924  0025AE  6BF9               	clrf	(_seed+7)& (0+255),b
  7925                           
  7926                           ; BSR set to: 2
  7927                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7928  0025B0  52E5               	movf	postdec1,f,c
  7929  0025B2  52E5               	movf	postdec1,f,c
  7930  0025B4  0012               	return		;funcret
  7931  0025B6                     __end_of_srand:
  7932                           	opt callstack 0
  7933                           
  7934 ;; *************** function _set_dac_b *****************
  7935 ;; Defined at:
  7936 ;;		line 306 in file "daq.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  voltage         4  [STACK] const float 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  2  [STACK] unsigned short 
  7943 ;; Registers used:
  7944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7954 ;;Total ram usage:        0 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:   17
  7957 ;; This function calls:
  7958 ;;		_convert_dac_raw
  7959 ;; This function is called by:
  7960 ;;		_main
  7961 ;; This function uses a reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text6
  7965  0025B6                     __ptext6:
  7966                           	opt callstack 0
  7967  0025B6                     _set_dac_b:
  7968                           	opt callstack 13
  7969                           
  7970                           ;daq.c: 306: uint16_t set_dac_b(const float voltage);daq.c: 307: {;daq.c: 308:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7971                           ;stkvar	_voltage @ sp[(0)+-4]
  7972                           
  7973                           ; BSR set to: 2
  7974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7975                           ;incstack = 0
  7976  0025B6  0EFC               	movlw	-4
  7977  0025B8  006F FF8F FFE6     	movff	plusw1,postinc1
  7978  0025BE  006F FF8F FFE6     	movff	plusw1,postinc1
  7979  0025C4  006F FF8F FFE6     	movff	plusw1,postinc1
  7980  0025CA  006F FF8F FFE6     	movff	plusw1,postinc1
  7981  0025D0  EC5F  F0FD         	call	_convert_dac_raw	;wreg free
  7982  0025D4  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  7983  0025DA  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  7984                           
  7985                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7986                           
  7987                           ;daq.c: 309:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  7988  0025E0  52E5               	movf	postdec1,f,c
  7989  0025E2  52E5               	movf	postdec1,f,c
  7990  0025E4  52E5               	movf	postdec1,f,c
  7991  0025E6  52E5               	movf	postdec1,f,c
  7992  0025E8  0012               	return		;funcret
  7993  0025EA                     __end_of_set_dac_b:
  7994                           	opt callstack 0
  7995                           
  7996 ;; *************** function _set_dac_a *****************
  7997 ;; Defined at:
  7998 ;;		line 297 in file "daq.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  voltage         4  [STACK] const float 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;		None
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  2  [STACK] unsigned short 
  8005 ;; Registers used:
  8006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8007 ;; Tracked objects:
  8008 ;;		On entry : 3F/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8016 ;;Total ram usage:        0 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:   17
  8019 ;; This function calls:
  8020 ;;		_convert_dac_raw
  8021 ;; This function is called by:
  8022 ;;		_main
  8023 ;; This function uses a reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text7
  8027  0025EA                     __ptext7:
  8028                           	opt callstack 0
  8029  0025EA                     _set_dac_a:
  8030                           	opt callstack 13
  8031                           
  8032                           ;daq.c: 297: uint16_t set_dac_a(const float voltage);daq.c: 298: {;daq.c: 299:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8033                           ;stkvar	_voltage @ sp[(0)+-4]
  8034                           
  8035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8036                           ;incstack = 0
  8037  0025EA  0EFC               	movlw	-4
  8038  0025EC  006F FF8F FFE6     	movff	plusw1,postinc1
  8039  0025F2  006F FF8F FFE6     	movff	plusw1,postinc1
  8040  0025F8  006F FF8F FFE6     	movff	plusw1,postinc1
  8041  0025FE  006F FF8F FFE6     	movff	plusw1,postinc1
  8042  002604  EC5F  F0FD         	call	_convert_dac_raw	;wreg free
  8043  002608  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8044  00260E  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8045                           
  8046                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8047                           
  8048                           ;daq.c: 300:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8049  002614  52E5               	movf	postdec1,f,c
  8050  002616  52E5               	movf	postdec1,f,c
  8051  002618  52E5               	movf	postdec1,f,c
  8052  00261A  52E5               	movf	postdec1,f,c
  8053  00261C  0012               	return		;funcret
  8054  00261E                     __end_of_set_dac_a:
  8055                           	opt callstack 0
  8056                           
  8057 ;; *************** function _convert_dac_raw *****************
  8058 ;; Defined at:
  8059 ;;		line 279 in file "daq.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  voltage         4  [STACK] float 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;		None
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  2  [STACK] unsigned short 
  8066 ;; Registers used:
  8067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8077 ;;Total ram usage:        0 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:   16
  8080 ;; This function calls:
  8081 ;;		___fldiv
  8082 ;;		___flge
  8083 ;;		___fltol
  8084 ;; This function is called by:
  8085 ;;		_set_dac_a
  8086 ;;		_set_dac_b
  8087 ;; This function uses a reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text8
  8091  01FABE                     __ptext8:
  8092                           	opt callstack 0
  8093  01FABE                     _convert_dac_raw:
  8094                           	opt callstack 13
  8095                           
  8096                           ;daq.c: 279: static uint16_t convert_dac_raw(float voltage);daq.c: 280: {;daq.c: 284:  i
      +                          f (voltage < 0.001)
  8097                           
  8098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8099                           ;incstack = 0
  8100  01FABE  0E6F               	movlw	111
  8101  01FAC0  6EE6               	movwf	postinc1,c
  8102  01FAC2  0E12               	movlw	18
  8103  01FAC4  6EE6               	movwf	postinc1,c
  8104  01FAC6  0E83               	movlw	131
  8105  01FAC8  6EE6               	movwf	postinc1,c
  8106  01FACA  0E3A               	movlw	58
  8107  01FACC  6EE6               	movwf	postinc1,c
  8108                           
  8109                           ;stkvar	_voltage @ sp[(-4)+-4]
  8110  01FACE  0EF8               	movlw	-8
  8111  01FAD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8112  01FAD6  006F FF8F FFE6     	movff	plusw1,postinc1
  8113  01FADC  006F FF8F FFE6     	movff	plusw1,postinc1
  8114  01FAE2  006F FF8F FFE6     	movff	plusw1,postinc1
  8115  01FAE8  EC51  F0F6         	call	___flge	;wreg free
  8116  01FAEC  B02A               	btfsc	btemp& (0+255),0,c
  8117  01FAEE  D018               	goto	l13809
  8118                           
  8119                           ;daq.c: 285:   voltage = 0.001;
  8120  01FAF0  0E6F               	movlw	111
  8121  01FAF2  6E32               	movwf	(btemp+8)^0,c
  8122  01FAF4  0E12               	movlw	18
  8123  01FAF6  6E33               	movwf	(btemp+9)^0,c
  8124  01FAF8  0E83               	movlw	131
  8125  01FAFA  6E34               	movwf	(btemp+10)^0,c
  8126  01FAFC  0E3A               	movlw	58
  8127  01FAFE  6E35               	movwf	(btemp+11)^0,c
  8128                           
  8129                           ;stkvar	_voltage @ sp[(0)+-4]
  8130  01FB00  0EFC               	movlw	-4
  8131  01FB02  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8132  01FB08  0EFD               	movlw	-3
  8133  01FB0A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8134  01FB10  0EFE               	movlw	-2
  8135  01FB12  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8136  01FB18  0EFF               	movlw	-1
  8137  01FB1A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8138  01FB20                     l13809:
  8139                           
  8140                           ;daq.c: 286:  if (voltage > 10.0)
  8141                           ;stkvar	_voltage @ sp[(0)+-4]
  8142  01FB20  0EFC               	movlw	-4
  8143  01FB22  006F FF8F FFE6     	movff	plusw1,postinc1
  8144  01FB28  006F FF8F FFE6     	movff	plusw1,postinc1
  8145  01FB2E  006F FF8F FFE6     	movff	plusw1,postinc1
  8146  01FB34  006F FF8F FFE6     	movff	plusw1,postinc1
  8147  01FB3A  0E00               	movlw	0
  8148  01FB3C  6EE6               	movwf	postinc1,c
  8149  01FB3E  0E00               	movlw	0
  8150  01FB40  6EE6               	movwf	postinc1,c
  8151  01FB42  0E20               	movlw	32
  8152  01FB44  6EE6               	movwf	postinc1,c
  8153  01FB46  0E41               	movlw	65
  8154  01FB48  6EE6               	movwf	postinc1,c
  8155  01FB4A  EC51  F0F6         	call	___flge	;wreg free
  8156  01FB4E  B02A               	btfsc	btemp& (0+255),0,c
  8157  01FB50  D018               	goto	l13813
  8158                           
  8159                           ;daq.c: 287:   voltage = 10.0;
  8160  01FB52  0E00               	movlw	0
  8161  01FB54  6E32               	movwf	(btemp+8)^0,c
  8162  01FB56  0E00               	movlw	0
  8163  01FB58  6E33               	movwf	(btemp+9)^0,c
  8164  01FB5A  0E20               	movlw	32
  8165  01FB5C  6E34               	movwf	(btemp+10)^0,c
  8166  01FB5E  0E41               	movlw	65
  8167  01FB60  6E35               	movwf	(btemp+11)^0,c
  8168                           
  8169                           ;stkvar	_voltage @ sp[(0)+-4]
  8170  01FB62  0EFC               	movlw	-4
  8171  01FB64  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8172  01FB6A  0EFD               	movlw	-3
  8173  01FB6C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8174  01FB72  0EFE               	movlw	-2
  8175  01FB74  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8176  01FB7A  0EFF               	movlw	-1
  8177  01FB7C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8178  01FB82                     l13813:
  8179                           
  8180                           ;daq.c: 291:  return(uint16_t) (voltage / 0.002442);
  8181  01FB82  0EF6               	movlw	246
  8182  01FB84  6EE6               	movwf	postinc1,c
  8183  01FB86  0E09               	movlw	9
  8184  01FB88  6EE6               	movwf	postinc1,c
  8185  01FB8A  0E20               	movlw	32
  8186  01FB8C  6EE6               	movwf	postinc1,c
  8187  01FB8E  0E3B               	movlw	59
  8188  01FB90  6EE6               	movwf	postinc1,c
  8189                           
  8190                           ;stkvar	_voltage @ sp[(-4)+-4]
  8191  01FB92  0EF8               	movlw	-8
  8192  01FB94  006F FF8F FFE6     	movff	plusw1,postinc1
  8193  01FB9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8194  01FBA0  006F FF8F FFE6     	movff	plusw1,postinc1
  8195  01FBA6  006F FF8F FFE6     	movff	plusw1,postinc1
  8196  01FBAC  EC57  F0C3         	call	___fldiv	;wreg free
  8197  01FBB0  0060  F0AB  FFE6   	movff	btemp,postinc1
  8198  01FBB6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8199  01FBBC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8200  01FBC2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8201  01FBC8  ECE5  F0F4         	call	___fltol	;wreg free
  8202                           
  8203                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8204  01FBCC  52E5               	movf	postdec1,f,c
  8205  01FBCE  52E5               	movf	postdec1,f,c
  8206  01FBD0  52E5               	movf	postdec1,f,c
  8207  01FBD2  52E5               	movf	postdec1,f,c
  8208  01FBD4  0012               	return		;funcret
  8209  01FBD6                     __end_of_convert_dac_raw:
  8210                           	opt callstack 0
  8211                           
  8212 ;; *************** function _set_dac *****************
  8213 ;; Defined at:
  8214 ;;		line 255 in file "daq.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1  [STACK] void 
  8221 ;; Registers used:
  8222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8232 ;;Total ram usage:        0 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:   16
  8235 ;; This function calls:
  8236 ;;		_SPI1_Exchange8bit
  8237 ;;		_dac_spi_control
  8238 ;; This function is called by:
  8239 ;;		_main
  8240 ;; This function uses a reentrant model
  8241 ;;
  8242                           
  8243                           	psect	text9
  8244  000B98                     __ptext9:
  8245                           	opt callstack 0
  8246  000B98                     _set_dac:
  8247                           	opt callstack 14
  8248                           
  8249                           ;daq.c: 257:  while (!SPI1STATUSbits.TXBE);
  8250                           
  8251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8252                           ;incstack = 0
  8253  000B98  013D               	movlb	61	; () banked
  8254  000B9A  AB17               	btfss	23,5,b	;volatile
  8255  000B9C  D7FD               	goto	_set_dac
  8256                           
  8257                           ; BSR set to: 61
  8258                           
  8259                           ;daq.c: 258:  do { LATCbits.LATC2 = 1; } while(0);
  8260  000B9E  84BC               	bsf	188,2,c	;volatile
  8261                           
  8262                           ; BSR set to: 61
  8263                           
  8264                           ;daq.c: 259:  do { LATCbits.LATC0 = 1; } while(0);
  8265  000BA0  80BC               	bsf	188,0,c	;volatile
  8266                           
  8267                           ; BSR set to: 61
  8268                           ;daq.c: 260:  dac_spi_control(1);
  8269  000BA2  0E01               	movlw	1
  8270  000BA4  6EE6               	movwf	postinc1,c
  8271  000BA6  EC76  F00B         	call	_dac_spi_control	;wreg free
  8272                           
  8273                           ;daq.c: 261:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8274  000BAA  C120  F124         	movff	_R+32,_R+36	;volatile
  8275                           
  8276                           ;daq.c: 262:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8277  000BAE  EE20  F120         	lfsr	2,_R+32	;volatile
  8278  000BB2  006F FF78  F034    	movff	postinc2,btemp+10
  8279  000BB8  006F FF74  F035    	movff	postdec2,btemp+11
  8280  000BBE  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8281  000BC4  6A35               	clrf	(btemp+11)^0,c
  8282  000BC6  0E0F               	movlw	15
  8283  000BC8  1634               	andwf	(btemp+10)^0,f,c
  8284  000BCA  0101               	movlb	1	; () banked
  8285  000BCC  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8286  000BCE  1834               	xorwf	(btemp+10)^0,w,c
  8287  000BD0  0BF0               	andlw	-16
  8288  000BD2  1834               	xorwf	(btemp+10)^0,w,c
  8289  000BD4  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8290                           
  8291                           ; BSR set to: 1
  8292                           ;daq.c: 263:  R.max5322_cmd.map.cont = 0b0100;
  8293  000BD6  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8294  000BD8  0B0F               	andlw	-241
  8295  000BDA  0940               	iorlw	64
  8296  000BDC  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8297                           
  8298                           ; BSR set to: 1
  8299  000BDE  90BF               	bcf	191,0,c	;volatile
  8300                           
  8301                           ; BSR set to: 1
  8302                           ;daq.c: 265:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8303  000BE0  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8304  000BE2  6EE6               	movwf	postinc1,c
  8305  000BE4  EC0E  F016         	call	_SPI1_Exchange8bit	;wreg free
  8306                           
  8307                           ; BSR set to: 57
  8308                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8309  000BE8  0101               	movlb	1	; () banked
  8310  000BEA  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8311  000BEC  6EE6               	movwf	postinc1,c
  8312  000BEE  EC0E  F016         	call	_SPI1_Exchange8bit	;wreg free
  8313                           
  8314                           ; BSR set to: 57
  8315  000BF2  80BF               	bsf	191,0,c	;volatile
  8316                           
  8317                           ; BSR set to: 57
  8318                           ;daq.c: 268:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8319  000BF4  C122  F124         	movff	_R+34,_R+36	;volatile
  8320                           
  8321                           ; BSR set to: 57
  8322                           ;daq.c: 269:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8323  000BF8  EE20  F122         	lfsr	2,_R+34	;volatile
  8324  000BFC  006F FF78  F034    	movff	postinc2,btemp+10
  8325  000C02  006F FF74  F035    	movff	postdec2,btemp+11
  8326  000C08  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8327  000C0E  6A35               	clrf	(btemp+11)^0,c
  8328  000C10  0E0F               	movlw	15
  8329  000C12  1634               	andwf	(btemp+10)^0,f,c
  8330  000C14  0101               	movlb	1	; () banked
  8331  000C16  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8332  000C18  1834               	xorwf	(btemp+10)^0,w,c
  8333  000C1A  0BF0               	andlw	-16
  8334  000C1C  1834               	xorwf	(btemp+10)^0,w,c
  8335  000C1E  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8336                           
  8337                           ; BSR set to: 1
  8338                           ;daq.c: 270:  R.max5322_cmd.map.cont = 0b0101;
  8339  000C20  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8340  000C22  0B0F               	andlw	-241
  8341  000C24  0950               	iorlw	80
  8342  000C26  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8343                           
  8344                           ; BSR set to: 1
  8345  000C28  90BF               	bcf	191,0,c	;volatile
  8346                           
  8347                           ; BSR set to: 1
  8348                           ;daq.c: 272:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8349  000C2A  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8350  000C2C  6EE6               	movwf	postinc1,c
  8351  000C2E  EC0E  F016         	call	_SPI1_Exchange8bit	;wreg free
  8352                           
  8353                           ; BSR set to: 57
  8354                           ;daq.c: 273:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8355  000C32  0101               	movlb	1	; () banked
  8356  000C34  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8357  000C36  6EE6               	movwf	postinc1,c
  8358  000C38  EC0E  F016         	call	_SPI1_Exchange8bit	;wreg free
  8359  000C3C                     l2039:
  8360  000C3C  013D               	movlb	61	; () banked
  8361  000C3E  AB17               	btfss	23,5,b	;volatile
  8362  000C40  D7FD               	goto	l2039
  8363                           
  8364                           ; BSR set to: 61
  8365                           
  8366                           ;daq.c: 275:  do { LATFbits.LATF0 = 1; } while(0);
  8367  000C42  80BF               	bsf	191,0,c	;volatile
  8368                           
  8369                           ; BSR set to: 61
  8370                           ;daq.c: 276:  dac_spi_control(0);
  8371  000C44  0E00               	movlw	0
  8372  000C46  6EE6               	movwf	postinc1,c
  8373  000C48  EC76  F00B         	call	_dac_spi_control	;wreg free
  8374                           
  8375                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8376  000C4C  0012               	return		;funcret
  8377  000C4E                     __end_of_set_dac:
  8378                           	opt callstack 0
  8379                           
  8380 ;; *************** function _dac_spi_control *****************
  8381 ;; Defined at:
  8382 ;;		line 207 in file "daq.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  set             1  [STACK] _Bool 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;		None
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1  [STACK] void 
  8389 ;; Registers used:
  8390 ;;		wreg, fsr1l, fsr1h, status,2
  8391 ;; Tracked objects:
  8392 ;;		On entry : 3F/3D
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8400 ;;Total ram usage:        0 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; Hardware stack levels required when called:   15
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_set_dac
  8407 ;; This function uses a reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text10
  8411  0016EC                     __ptext10:
  8412                           	opt callstack 0
  8413  0016EC                     _dac_spi_control:
  8414                           	opt callstack 14
  8415                           
  8416                           ;daq.c: 207: void dac_spi_control(_Bool set);daq.c: 208: {;daq.c: 209:  static _Bool ini
      +                          t = 0;;daq.c: 210:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 212:  if (set) {
  8417                           ;stkvar	_set @ sp[(0)+-1]
  8418                           
  8419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8420                           ;incstack = 0
  8421  0016EC  0EFF               	movlw	-1
  8422  0016EE  50E3               	movf	plusw1,w,c
  8423  0016F0  B4D8               	btfsc	status,2,c
  8424  0016F2  D022               	goto	l13801
  8425                           
  8426                           ;daq.c: 213:   SPI1CON0bits.EN = 0;
  8427  0016F4  013D               	movlb	61	; () banked
  8428  0016F6  9F14               	bcf	20,7,b	;volatile
  8429                           
  8430                           ; BSR set to: 61
  8431                           ;daq.c: 214:   if (!init) {
  8432  0016F8  5052               	movf	dac_spi_control@init^0,w,c
  8433  0016FA  A4D8               	btfss	status,2,c
  8434  0016FC  D011               	goto	l13789
  8435                           
  8436                           ; BSR set to: 61
  8437                           ;daq.c: 215:    init = 1;
  8438  0016FE  0E01               	movlw	1
  8439  001700  6E52               	movwf	dac_spi_control@init^0,c
  8440                           
  8441                           ; BSR set to: 61
  8442                           ;daq.c: 216:    S0 = SPI1CON0;
  8443  001702  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8444                           
  8445                           ; BSR set to: 61
  8446                           ;daq.c: 217:    S1 = SPI1CON1;
  8447  001708  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8448                           
  8449                           ; BSR set to: 61
  8450                           ;daq.c: 218:    S2 = SPI1CON2;
  8451  00170E  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8452                           
  8453                           ; BSR set to: 61
  8454                           ;daq.c: 219:    SC = SPI1CLK;
  8455  001714  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8456                           
  8457                           ; BSR set to: 61
  8458                           ;daq.c: 220:    SB = SPI1BAUD;
  8459  00171A  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8460  001720                     l13789:
  8461                           
  8462                           ; BSR set to: 61
  8463                           ;daq.c: 226:   SPI1CON1 = 0x00;
  8464  001720  6B15               	clrf	21,b	;volatile
  8465                           
  8466                           ; BSR set to: 61
  8467                           ;daq.c: 227:   SPI1CON1bits.CKE = 1;
  8468  001722  8D15               	bsf	21,6,b	;volatile
  8469                           
  8470                           ; BSR set to: 61
  8471                           ;daq.c: 228:   SPI1CON1bits.CKP = 0;
  8472  001724  9B15               	bcf	21,5,b	;volatile
  8473                           
  8474                           ; BSR set to: 61
  8475                           ;daq.c: 229:   SPI1CON1bits.SMP = 0;
  8476  001726  9F15               	bcf	21,7,b	;volatile
  8477                           
  8478                           ;daq.c: 231:   SPI1CON2 = 0x03;
  8479  001728  0E03               	movlw	3
  8480  00172A  6F16               	movwf	22,b	;volatile
  8481                           
  8482                           ;daq.c: 233:   SPI1BAUD = 0x0f;
  8483  00172C  0E0F               	movlw	15
  8484  00172E  6F19               	movwf	25,b	;volatile
  8485                           
  8486                           ; BSR set to: 61
  8487                           ;daq.c: 235:   SPI1CLK = 0x00;
  8488  001730  6B1C               	clrf	28,b	;volatile
  8489                           
  8490                           ;daq.c: 237:   SPI1CON0 = 0x83;
  8491  001732  0E83               	movlw	131
  8492  001734  6F14               	movwf	20,b	;volatile
  8493  001736  D014               	goto	L3
  8494  001738                     l13801:
  8495                           
  8496                           ;daq.c: 240:   if (init) {
  8497  001738  5052               	movf	dac_spi_control@init^0,w,c
  8498  00173A  B4D8               	btfsc	status,2,c
  8499  00173C  D012               	goto	l2023
  8500                           
  8501                           ;daq.c: 244:    SPI1CON0bits.EN = 0;
  8502  00173E  013D               	movlb	61	; () banked
  8503  001740  9F14               	bcf	20,7,b	;volatile
  8504                           
  8505                           ;daq.c: 245:    SPI1CON1 = S1;
  8506  001742  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8507                           
  8508                           ;daq.c: 246:    SPI1CON2 = S2;
  8509  001748  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8510                           
  8511                           ;daq.c: 247:    SPI1CLK = SC;
  8512  00174E  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8513                           
  8514                           ;daq.c: 248:    SPI1BAUD = SB;
  8515  001754  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8516                           
  8517                           ;daq.c: 249:    SPI1CON0 = S0;
  8518  00175A  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8519  001760                     L3:
  8520                           
  8521                           ;daq.c: 250:    SPI1CON0bits.EN = 1;
  8522  001760  8F14               	bsf	20,7,b	;volatile
  8523  001762                     l2023:
  8524                           
  8525                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8526  001762  52E5               	movf	postdec1,f,c
  8527  001764  0012               	return		;funcret
  8528  001766                     __end_of_dac_spi_control:
  8529                           	opt callstack 0
  8530                           
  8531 ;; *************** function _read_cal_data *****************
  8532 ;; Defined at:
  8533 ;;		line 368 in file "daq.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;  x               2  [STACK] unsigned short 
  8538 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8539 ;;		 -> r_cal(171), 
  8540 ;;  y               2  [STACK] unsigned short 
  8541 ;;  crcVal_save     1  [STACK] unsigned char 
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1  [STACK] _Bool 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/39
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;Total ram usage:        0 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:   17
  8558 ;; This function calls:
  8559 ;;		_CRC_8BitDataWrite
  8560 ;;		_CRC_CalculatedResultGet
  8561 ;;		_CRC_Initialize
  8562 ;;		_CRC_IsBusy
  8563 ;;		_CRC_Start
  8564 ;;		_DATAEE_ReadByte
  8565 ;; This function is called by:
  8566 ;;		_main
  8567 ;; This function uses a reentrant model
  8568 ;;
  8569                           
  8570                           	psect	text11
  8571  01DB70                     __ptext11:
  8572                           	opt callstack 0
  8573  01DB70                     _read_cal_data:
  8574                           	opt callstack 0
  8575                           
  8576                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8577  01DB70  0E07               	movlw	7
  8578  01DB72  26E1               	addwf	fsr1l,f,c
  8579  01DB74  0E00               	movlw	0
  8580  01DB76  22E2               	addwfc	fsr1h,f,c
  8581                           
  8582                           ;daq.c: 370:  uint16_t x = 0, y;
  8583                           ;stkvar	_x @ sp[(-7)+0]
  8584                           
  8585                           ;incstack = 0
  8586  01DB78  0EF9               	movlw	-7
  8587  01DB7A  6AE3               	clrf	plusw1,c
  8588  01DB7C  0EFA               	movlw	-6
  8589  01DB7E  6AE3               	clrf	plusw1,c
  8590                           
  8591                           ;daq.c: 371:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 373:  y = sizeof(r_cal);
  8592  01DB80  0EAB               	movlw	171
  8593  01DB82  6E34               	movwf	(btemp+10)^0,c
  8594  01DB84  0E00               	movlw	0
  8595  01DB86  6E35               	movwf	(btemp+11)^0,c
  8596                           
  8597                           ;stkvar	_y @ sp[(-7)+4]
  8598  01DB88  0EFD               	movlw	-3
  8599  01DB8A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8600  01DB90  0EFE               	movlw	-2
  8601  01DB92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8602                           
  8603                           ;daq.c: 374:  r_cal_ptr = (uint8_t*) & r_cal;
  8604                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8605  01DB98  0E05               	movlw	high _r_cal
  8606  01DB9A  6E2A               	movwf	btemp^0,c
  8607  01DB9C  0EFC               	movlw	-4
  8608  01DB9E  0060  F0AB  FFE3   	movff	btemp,plusw1
  8609  01DBA4  0E00               	movlw	low _r_cal
  8610  01DBA6  6E2A               	movwf	btemp^0,c
  8611  01DBA8  0EFB               	movlw	-5
  8612  01DBAA  0060  F0AB  FFE3   	movff	btemp,plusw1
  8613                           
  8614                           ;daq.c: 376:  CRC_Initialize();
  8615  01DBB0  ECE4  F009         	call	_CRC_Initialize	;wreg free
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;daq.c: 379:  CRC_Start();
  8619  01DBB4  EC41  F017         	call	_CRC_Start	;wreg free
  8620  01DBB8                     l14235:
  8621                           
  8622                           ;daq.c: 382:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8623                           ;stkvar	_x @ sp[(-7)+0]
  8624  01DBB8  0EF9               	movlw	-7
  8625  01DBBA  006F FF8F FFE6     	movff	plusw1,postinc1
  8626  01DBC0  006F FF8F FFE6     	movff	plusw1,postinc1
  8627  01DBC6  EC29  F013         	call	_DATAEE_ReadByte	;wreg free
  8628                           
  8629                           ;stkvar	_x @ sp[(-7)+0]
  8630  01DBCA  0EF9               	movlw	-7
  8631  01DBCC  006F FF8C  F034    	movff	plusw1,btemp+10
  8632  01DBD2  0EFA               	movlw	-6
  8633  01DBD4  006F FF8C  F035    	movff	plusw1,btemp+11
  8634                           
  8635                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8636  01DBDA  0EFB               	movlw	-5
  8637  01DBDC  006F FF8C  F032    	movff	plusw1,btemp+8
  8638  01DBE2  0EFC               	movlw	-4
  8639  01DBE4  006F FF8C  F033    	movff	plusw1,btemp+9
  8640  01DBEA  5034               	movf	(btemp+10)^0,w,c
  8641  01DBEC  2432               	addwf	(btemp+8)^0,w,c
  8642  01DBEE  6ED9               	movwf	fsr2l,c
  8643  01DBF0  5035               	movf	(btemp+11)^0,w,c
  8644  01DBF2  2033               	addwfc	(btemp+9)^0,w,c
  8645  01DBF4  6EDA               	movwf	fsr2h,c
  8646  01DBF6  0060  F0AB  FFDF   	movff	btemp,indf2
  8647                           
  8648                           ;daq.c: 383:  } while (++x < y);
  8649                           ;stkvar	_y @ sp[(-7)+4]
  8650  01DBFC  0EFD               	movlw	-3
  8651  01DBFE  006F FF8C  F034    	movff	plusw1,btemp+10
  8652  01DC04  0EFE               	movlw	-2
  8653  01DC06  006F FF8C  F035    	movff	plusw1,btemp+11
  8654                           
  8655                           ;stkvar	_x @ sp[(-7)+0]
  8656  01DC0C  0EF9               	movlw	-7
  8657  01DC0E  50E3               	movf	plusw1,w,c
  8658  01DC10  0F01               	addlw	1
  8659  01DC12  6E2A               	movwf	btemp^0,c
  8660  01DC14  0EF9               	movlw	-7
  8661  01DC16  0060  F0AB  FFE3   	movff	btemp,plusw1
  8662  01DC1C  6A2A               	clrf	btemp^0,c
  8663  01DC1E  0EFA               	movlw	-6
  8664  01DC20  50E3               	movf	plusw1,w,c
  8665  01DC22  202A               	addwfc	btemp^0,w,c
  8666  01DC24  6E2A               	movwf	btemp^0,c
  8667  01DC26  0EFA               	movlw	-6
  8668  01DC28  0060  F0AB  FFE3   	movff	btemp,plusw1
  8669  01DC2E  0EF9               	movlw	-7
  8670  01DC30  006F FF8C  F032    	movff	plusw1,btemp+8
  8671  01DC36  0EFA               	movlw	-6
  8672  01DC38  006F FF8C  F033    	movff	plusw1,btemp+9
  8673  01DC3E  5034               	movf	(btemp+10)^0,w,c
  8674  01DC40  5C32               	subwf	(btemp+8)^0,w,c
  8675  01DC42  5035               	movf	(btemp+11)^0,w,c
  8676  01DC44  5833               	subwfb	(btemp+9)^0,w,c
  8677  01DC46  A0D8               	btfss	status,0,c
  8678  01DC48  D7B7               	goto	l14235
  8679                           
  8680                           ;daq.c: 384:  crcVal_save = r_cal.crc;
  8681                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8682  01DC4A  0EFF               	movlw	-1
  8683  01DC4C  0061  F6AB  FFE3   	movff	_r_cal+170,plusw1
  8684                           
  8685                           ;daq.c: 386:  if (r_cal.checkmark == 0x1957) {
  8686  01DC52  0E57               	movlw	87
  8687  01DC54  0105               	movlb	5	; () banked
  8688  01DC56  19A8               	xorwf	(_r_cal+168)& (0+255),w,b
  8689  01DC58  E163               	bnz	l14255
  8690  01DC5A  0E19               	movlw	25
  8691  01DC5C  19A9               	xorwf	(_r_cal+169)& (0+255),w,b
  8692  01DC5E  A4D8               	btfss	status,2,c
  8693  01DC60  D05F               	goto	u13430
  8694                           
  8695                           ; BSR set to: 5
  8696                           ;daq.c: 387:   r_cal.crc = 0x42;
  8697  01DC62  0E42               	movlw	66
  8698  01DC64  6FAA               	movwf	(_r_cal+170)& (0+255),b
  8699                           
  8700                           ; BSR set to: 5
  8701                           ;daq.c: 388:   x = 0;
  8702                           ;stkvar	_x @ sp[(-7)+0]
  8703  01DC66  0EF9               	movlw	-7
  8704  01DC68  6AE3               	clrf	plusw1,c
  8705  01DC6A  0EFA               	movlw	-6
  8706  01DC6C  6AE3               	clrf	plusw1,c
  8707  01DC6E                     l14247:
  8708                           
  8709                           ;daq.c: 391:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8710                           ;stkvar	_x @ sp[(-7)+0]
  8711  01DC6E  0EF9               	movlw	-7
  8712  01DC70  006F FF8C  F034    	movff	plusw1,btemp+10
  8713  01DC76  0EFA               	movlw	-6
  8714  01DC78  006F FF8C  F035    	movff	plusw1,btemp+11
  8715                           
  8716                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8717  01DC7E  0EFB               	movlw	-5
  8718  01DC80  006F FF8C  F032    	movff	plusw1,btemp+8
  8719  01DC86  0EFC               	movlw	-4
  8720  01DC88  006F FF8C  F033    	movff	plusw1,btemp+9
  8721  01DC8E  5034               	movf	(btemp+10)^0,w,c
  8722  01DC90  2432               	addwf	(btemp+8)^0,w,c
  8723  01DC92  6ED9               	movwf	fsr2l,c
  8724  01DC94  5035               	movf	(btemp+11)^0,w,c
  8725  01DC96  2033               	addwfc	(btemp+9)^0,w,c
  8726  01DC98  6EDA               	movwf	fsr2h,c
  8727  01DC9A  50DF               	movf	indf2,w,c
  8728  01DC9C  6EE6               	movwf	postinc1,c
  8729  01DC9E  ECB3  F016         	call	_CRC_8BitDataWrite	;wreg free
  8730  01DCA2                     l14249:
  8731  01DCA2  ECD5  F016         	call	_CRC_IsBusy	;wreg free
  8732  01DCA6  502A               	movf	btemp^0,w,c
  8733  01DCA8  A4D8               	btfss	status,2,c
  8734  01DCAA  D7FB               	goto	l14249
  8735                           
  8736                           ;daq.c: 393:   } while (++x < y);
  8737                           ;stkvar	_y @ sp[(-7)+4]
  8738  01DCAC  0EFD               	movlw	-3
  8739  01DCAE  006F FF8C  F034    	movff	plusw1,btemp+10
  8740  01DCB4  0EFE               	movlw	-2
  8741  01DCB6  006F FF8C  F035    	movff	plusw1,btemp+11
  8742                           
  8743                           ;stkvar	_x @ sp[(-7)+0]
  8744  01DCBC  0EF9               	movlw	-7
  8745  01DCBE  50E3               	movf	plusw1,w,c
  8746  01DCC0  0F01               	addlw	1
  8747  01DCC2  6E2A               	movwf	btemp^0,c
  8748  01DCC4  0EF9               	movlw	-7
  8749  01DCC6  0060  F0AB  FFE3   	movff	btemp,plusw1
  8750  01DCCC  6A2A               	clrf	btemp^0,c
  8751  01DCCE  0EFA               	movlw	-6
  8752  01DCD0  50E3               	movf	plusw1,w,c
  8753  01DCD2  202A               	addwfc	btemp^0,w,c
  8754  01DCD4  6E2A               	movwf	btemp^0,c
  8755  01DCD6  0EFA               	movlw	-6
  8756  01DCD8  0060  F0AB  FFE3   	movff	btemp,plusw1
  8757  01DCDE  0EF9               	movlw	-7
  8758  01DCE0  006F FF8C  F032    	movff	plusw1,btemp+8
  8759  01DCE6  0EFA               	movlw	-6
  8760  01DCE8  006F FF8C  F033    	movff	plusw1,btemp+9
  8761  01DCEE  5034               	movf	(btemp+10)^0,w,c
  8762  01DCF0  5C32               	subwf	(btemp+8)^0,w,c
  8763  01DCF2  5035               	movf	(btemp+11)^0,w,c
  8764  01DCF4  5833               	subwfb	(btemp+9)^0,w,c
  8765  01DCF6  A0D8               	btfss	status,0,c
  8766  01DCF8  D7BA               	goto	l14247
  8767                           
  8768                           ;daq.c: 394:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8769  01DCFA  0E00               	movlw	0
  8770  01DCFC  6EE6               	movwf	postinc1,c
  8771  01DCFE  0E00               	movlw	0
  8772  01DD00  6EE6               	movwf	postinc1,c
  8773  01DD02  0E00               	movlw	0
  8774  01DD04  6EE6               	movwf	postinc1,c
  8775  01DD06  EC2C  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
  8776                           
  8777                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8778  01DD0A  0EFF               	movlw	-1
  8779  01DD0C  50E3               	movf	plusw1,w,c
  8780  01DD0E  6E34               	movwf	(btemp+10)^0,c
  8781  01DD10  6A35               	clrf	(btemp+11)^0,c
  8782  01DD12  5034               	movf	(btemp+10)^0,w,c
  8783  01DD14  182A               	xorwf	btemp^0,w,c
  8784  01DD16  E104               	bnz	u13430
  8785  01DD18  5035               	movf	(btemp+11)^0,w,c
  8786  01DD1A  182B               	xorwf	(btemp+1)^0,w,c
  8787  01DD1C  B4D8               	btfsc	status,2,c
  8788  01DD1E  D002               	goto	l14263
  8789  01DD20                     u13430:
  8790  01DD20                     l14255:
  8791                           
  8792                           ;daq.c: 395:    return 0;
  8793  01DD20  0E00               	movlw	0
  8794  01DD22  D005               	goto	L4
  8795  01DD24                     l14263:
  8796                           
  8797                           ;daq.c: 399:  r_cal.crc = crcVal_save;
  8798                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8799  01DD24  0EFF               	movlw	-1
  8800  01DD26  006F FF8C  F5AA    	movff	plusw1,_r_cal+170
  8801                           
  8802                           ;daq.c: 400:  return 1;
  8803  01DD2C  0E01               	movlw	1
  8804  01DD2E                     L4:
  8805  01DD2E  6E2A               	movwf	btemp^0,c
  8806                           
  8807                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8808  01DD30  0EF9               	movlw	249
  8809  01DD32  26E1               	addwf	fsr1l,f,c
  8810  01DD34  0EFF               	movlw	255
  8811  01DD36  22E2               	addwfc	fsr1h,f,c
  8812  01DD38  0012               	return		;funcret
  8813  01DD3A                     __end_of_read_cal_data:
  8814                           	opt callstack 0
  8815                           
  8816 ;; *************** function _DATAEE_ReadByte *****************
  8817 ;; Defined at:
  8818 ;;		line 194 in file "mcc_generated_files/memory.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  bAdd            2  [STACK] unsigned short 
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;		None
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  1  [STACK] unsigned char 
  8825 ;; Registers used:
  8826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/39
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8836 ;;Total ram usage:        0 bytes
  8837 ;; Hardware stack levels used:    1
  8838 ;; Hardware stack levels required when called:   15
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_read_cal_data
  8843 ;; This function uses a reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text12
  8847  002652                     __ptext12:
  8848                           	opt callstack 0
  8849  002652                     _DATAEE_ReadByte:
  8850                           	opt callstack 14
  8851                           
  8852                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8853                           ;stkvar	_bAdd @ sp[(0)+-2]
  8854                           
  8855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8856                           ;incstack = 0
  8857  002652  0EFF               	movlw	255
  8858  002654  24E1               	addwf	fsr1l,w,c
  8859  002656  6ED9               	movwf	fsr2l,c
  8860  002658  0EFF               	movlw	255
  8861  00265A  20E2               	addwfc	fsr1h,w,c
  8862  00265C  6EDA               	movwf	fsr2h,c
  8863  00265E  50DF               	movf	indf2,w,c
  8864  002660  0B03               	andlw	3
  8865  002662  0139               	movlb	57	; () banked
  8866  002664  6FE1               	movwf	225,b	;volatile
  8867                           
  8868                           ; BSR set to: 57
  8869                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8870                           ;stkvar	_bAdd @ sp[(0)+-2]
  8871  002666  0EFE               	movlw	-2
  8872  002668  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8873                           
  8874                           ; BSR set to: 57
  8875                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8876  00266E  0E3F               	movlw	-193
  8877  002670  17E5               	andwf	229,f,b	;volsfr
  8878                           
  8879                           ; BSR set to: 57
  8880                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8881  002672  81E5               	bsf	229,0,b	;volsfr
  8882                           
  8883                           ; BSR set to: 57
  8884                           ;mcc_generated_files/memory.c: 200:     __nop();
  8885  002674  F000               	nop	
  8886                           
  8887                           ;mcc_generated_files/memory.c: 201:     __nop();
  8888  002676  F000               	nop	
  8889                           
  8890                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8891  002678  006E F78C  F02A    	movff	14819,btemp	;volatile
  8892                           
  8893                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8894  00267E  52E5               	movf	postdec1,f,c
  8895  002680  52E5               	movf	postdec1,f,c
  8896  002682  0012               	return		;funcret
  8897  002684                     __end_of_DATAEE_ReadByte:
  8898                           	opt callstack 0
  8899                           
  8900 ;; *************** function _load_hist_data *****************
  8901 ;; Defined at:
  8902 ;;		line 224 in file "mbmc.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;		None
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;  esr_rescale     2  [STACK] short 
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  1  [STACK] void 
  8909 ;; Registers used:
  8910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8911 ;; Tracked objects:
  8912 ;;		On entry : 3F/39
  8913 ;;		On exit  : 3F/39
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8920 ;;Total ram usage:        0 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:   16
  8923 ;; This function calls:
  8924 ;;		___fldiv
  8925 ;;		___flmul
  8926 ;;		___fltol
  8927 ;;		_start_bsoc
  8928 ;;		_stop_bsoc
  8929 ;; This function is called by:
  8930 ;;		_main
  8931 ;; This function uses a reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text13
  8935  01D996                     __ptext13:
  8936                           	opt callstack 0
  8937  01D996                     _load_hist_data:
  8938                           	opt callstack 0
  8939                           
  8940                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8941  01D996  52E6               	movf	postinc1,f,c
  8942  01D998  52E6               	movf	postinc1,f,c
  8943                           
  8944                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  8945                           
  8946                           ;incstack = 0
  8947  01D99A  EC4D  F017         	call	_stop_bsoc	;wreg free
  8948                           
  8949                           ; BSR set to: 57
  8950                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  8951  01D99E  0E00               	movlw	0
  8952  01D9A0  6EE6               	movwf	postinc1,c
  8953  01D9A2  0E00               	movlw	0
  8954  01D9A4  6EE6               	movwf	postinc1,c
  8955  01D9A6  0E7A               	movlw	122
  8956  01D9A8  6EE6               	movwf	postinc1,c
  8957  01D9AA  0E44               	movlw	68
  8958  01D9AC  6EE6               	movwf	postinc1,c
  8959  01D9AE  EE22  F187         	lfsr	2,_C+136	;volatile
  8960  01D9B2  006F FF7B FFE6     	movff	postinc2,postinc1
  8961  01D9B8  006F FF7B FFE6     	movff	postinc2,postinc1
  8962  01D9BE  006F FF7B FFE6     	movff	postinc2,postinc1
  8963  01D9C4  006F FF7B FFE6     	movff	postinc2,postinc1
  8964  01D9CA  EC06  F0B8         	call	___flmul	;wreg free
  8965  01D9CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  8966  01D9D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8967  01D9DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8968  01D9E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8969  01D9E6  ECE5  F0F4         	call	___fltol	;wreg free
  8970  01D9EA  0060  F0A8  F034   	movff	btemp,btemp+10
  8971  01D9F0  0060  F0AC  F035   	movff	btemp+1,btemp+11
  8972                           
  8973                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  8974  01D9F6  0EFE               	movlw	-2
  8975  01D9F8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8976  01D9FE  0EFF               	movlw	-1
  8977  01DA00  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8978                           
  8979                           ;mbmc.c: 230:  C.hist[0].updates++;
  8980  01DA06  EE22  F1E9         	lfsr	2,_C+234	;volatile
  8981  01DA0A  2ADE               	incf	postinc2,f,c
  8982  01DA0C  0E00               	movlw	0
  8983  01DA0E  22DE               	addwfc	postinc2,f,c
  8984  01DA10  22DE               	addwfc	postinc2,f,c
  8985  01DA12  22DE               	addwfc	postinc2,f,c
  8986                           
  8987                           ;mbmc.c: 231:  C.hist[0].h[12] += (int16_t) (C.pvkw / 10.0);
  8988  01DA14  0E00               	movlw	0
  8989  01DA16  6EE6               	movwf	postinc1,c
  8990  01DA18  0E00               	movlw	0
  8991  01DA1A  6EE6               	movwf	postinc1,c
  8992  01DA1C  0E20               	movlw	32
  8993  01DA1E  6EE6               	movwf	postinc1,c
  8994  01DA20  0E41               	movlw	65
  8995  01DA22  6EE6               	movwf	postinc1,c
  8996  01DA24  EE22  F1A7         	lfsr	2,_C+168	;volatile
  8997  01DA28  006F FF7B FFE6     	movff	postinc2,postinc1
  8998  01DA2E  006F FF7B FFE6     	movff	postinc2,postinc1
  8999  01DA34  006F FF7B FFE6     	movff	postinc2,postinc1
  9000  01DA3A  006F FF7B FFE6     	movff	postinc2,postinc1
  9001  01DA40  EC57  F0C3         	call	___fldiv	;wreg free
  9002  01DA44  0060  F0AB  FFE6   	movff	btemp,postinc1
  9003  01DA4A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9004  01DA50  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9005  01DA56  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9006  01DA5C  ECE5  F0F4         	call	___fltol	;wreg free
  9007  01DA60  0060  F0A8  F034   	movff	btemp,btemp+10
  9008  01DA66  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9009  01DA6C  EE22  F205         	lfsr	2,_C+262	;volatile
  9010  01DA70  5034               	movf	(btemp+10)^0,w,c
  9011  01DA72  26DE               	addwf	postinc2,f,c
  9012  01DA74  5035               	movf	(btemp+11)^0,w,c
  9013  01DA76  22DD               	addwfc	postdec2,f,c
  9014                           
  9015                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9016  01DA78  EE22  F203         	lfsr	2,_C+260	;volatile
  9017  01DA7C  2ADE               	incf	postinc2,f,c
  9018  01DA7E  0E00               	movlw	0
  9019  01DA80  22DD               	addwfc	postdec2,f,c
  9020                           
  9021                           ;mbmc.c: 233:  C.hist[10].h[10] = esr_rescale;
  9022                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9023  01DA82  50E1               	movf	fsr1l,w,c
  9024  01DA84  0FFE               	addlw	-2
  9025  01DA86  6ED9               	movwf	fsr2l,c
  9026  01DA88  50E2               	movf	fsr1h,w,c
  9027  01DA8A  6EDA               	movwf	fsr2h,c
  9028  01DA8C  0EFF               	movlw	255
  9029  01DA8E  22DA               	addwfc	fsr2h,f,c
  9030  01DA90  006F FF78  FE6B    	movff	postinc2,_C+1388	;volatile
  9031  01DA96  006F FF74  FE6C    	movff	postdec2,_C+1389	;volatile
  9032                           
  9033                           ;mbmc.c: 234:  C.hist[10].h[9] = esr_rescale;
  9034                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9035  01DA9C  50E1               	movf	fsr1l,w,c
  9036  01DA9E  0FFE               	addlw	-2
  9037  01DAA0  6ED9               	movwf	fsr2l,c
  9038  01DAA2  50E2               	movf	fsr1h,w,c
  9039  01DAA4  6EDA               	movwf	fsr2h,c
  9040  01DAA6  0EFF               	movlw	255
  9041  01DAA8  22DA               	addwfc	fsr2h,f,c
  9042  01DAAA  006F FF78  FE69    	movff	postinc2,_C+1386	;volatile
  9043  01DAB0  006F FF74  FE6A    	movff	postdec2,_C+1387	;volatile
  9044                           
  9045                           ;mbmc.c: 235:  C.hist[0].h[6] = C.dynamic_ah;
  9046  01DAB6  EE22  F18F         	lfsr	2,_C+144	;volatile
  9047  01DABA  006F FF7B FFE6     	movff	postinc2,postinc1
  9048  01DAC0  006F FF7B FFE6     	movff	postinc2,postinc1
  9049  01DAC6  006F FF7B FFE6     	movff	postinc2,postinc1
  9050  01DACC  006F FF7B FFE6     	movff	postinc2,postinc1
  9051  01DAD2  ECE5  F0F4         	call	___fltol	;wreg free
  9052  01DAD6  0060  F0A8  F034   	movff	btemp,btemp+10
  9053  01DADC  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9054  01DAE2  0060  F0D0  F9F9   	movff	btemp+10,_C+250	;volatile
  9055  01DAE8  0060  F0D4  F9FA   	movff	btemp+11,_C+251	;volatile
  9056                           
  9057                           ;mbmc.c: 236:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9058  01DAEE  EE22  F19B         	lfsr	2,_C+156	;volatile
  9059  01DAF2  006F FF7B FFE6     	movff	postinc2,postinc1
  9060  01DAF8  006F FF7B FFE6     	movff	postinc2,postinc1
  9061  01DAFE  006F FF7B FFE6     	movff	postinc2,postinc1
  9062  01DB04  006F FF7B FFE6     	movff	postinc2,postinc1
  9063  01DB0A  ECE5  F0F4         	call	___fltol	;wreg free
  9064  01DB0E  0060  F0A8  F034   	movff	btemp,btemp+10
  9065  01DB14  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9066  01DB1A  0060  F0D0  F9ED   	movff	btemp+10,_C+238	;volatile
  9067  01DB20  0060  F0D4  F9EE   	movff	btemp+11,_C+239	;volatile
  9068                           
  9069                           ;mbmc.c: 237:  C.dynamic_ah = 0.0;
  9070  01DB26  0E00               	movlw	0
  9071  01DB28  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9072  01DB2E  0E00               	movlw	0
  9073  01DB30  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9074  01DB36  0E00               	movlw	0
  9075  01DB38  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9076  01DB3E  0E00               	movlw	0
  9077  01DB40  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9078                           
  9079                           ;mbmc.c: 238:  C.dynamic_ah_adj = 0.0;
  9080  01DB46  0E00               	movlw	0
  9081  01DB48  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9082  01DB4E  0E00               	movlw	0
  9083  01DB50  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9084  01DB56  0E00               	movlw	0
  9085  01DB58  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9086  01DB5E  0E00               	movlw	0
  9087  01DB60  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9088                           
  9089                           ;mbmc.c: 239:  start_bsoc();
  9090  01DB66  ECCC  F015         	call	_start_bsoc	;wreg free
  9091                           
  9092                           ; BSR set to: 57
  9093                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9094  01DB6A  52E5               	movf	postdec1,f,c
  9095  01DB6C  52E5               	movf	postdec1,f,c
  9096  01DB6E  0012               	return		;funcret
  9097  01DB70                     __end_of_load_hist_data:
  9098                           	opt callstack 0
  9099                           
  9100 ;; *************** function _init_port_dma *****************
  9101 ;; Defined at:
  9102 ;;		line 104 in file "eadog.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;		None
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;		None
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1  [STACK] void 
  9109 ;; Registers used:
  9110 ;;		wreg, status,2
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/2
  9113 ;;		On exit  : 3F/3B
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9120 ;;Total ram usage:        0 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; Hardware stack levels required when called:   15
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_main
  9127 ;; This function uses a reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text14
  9131  002684                     __ptext14:
  9132                           	opt callstack 0
  9133  002684                     _init_port_dma:
  9134                           	opt callstack 15
  9135                           
  9136                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9137                           
  9138                           ; BSR set to: 57
  9139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9140                           ;incstack = 0
  9141  002684  0E3F               	movlw	-193
  9142  002686  013B               	movlb	59	; () banked
  9143  002688  17DD               	andwf	221,f,b	;volatile
  9144                           
  9145                           ; BSR set to: 59
  9146                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9147  00268A  9BDD               	bcf	221,5,b	;volatile
  9148                           
  9149                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9150  00268C  51DD               	movf	221,w,b	;volatile
  9151  00268E  0BF9               	andlw	-7
  9152  002690  0902               	iorlw	2
  9153  002692  6FDD               	movwf	221,b	;volatile
  9154                           
  9155                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9156  002694  0EE7               	movlw	-25
  9157  002696  17DD               	andwf	221,f,b	;volatile
  9158                           
  9159                           ; BSR set to: 59
  9160                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9161  002698  81DD               	bsf	221,0,b	;volatile
  9162                           
  9163                           ; BSR set to: 59
  9164                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9165  00269A  9DDC               	bcf	220,6,b	;volatile
  9166                           
  9167                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9168  00269C  0E3D               	movlw	61
  9169  00269E  6FD1               	movwf	209,b	;volatile
  9170  0026A0  0EEA               	movlw	234
  9171  0026A2  6FD0               	movwf	208,b	;volatile
  9172                           
  9173                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9174  0026A4  0EFF               	movlw	low _port_data
  9175  0026A6  6FD9               	movwf	217,b	;volatile
  9176  0026A8  0E06               	movlw	high _port_data
  9177  0026AA  6FDA               	movwf	218,b	;volatile
  9178  0026AC  0E00               	movlw	low (_port_data shr (0+16))
  9179  0026AE  6FDB               	movwf	219,b	;volatile
  9180                           
  9181                           ; BSR set to: 59
  9182                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9183  0026B0  9BDC               	bcf	220,5,b	;volatile
  9184                           
  9185                           ; BSR set to: 59
  9186                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9187  0026B2  0012               	return		;funcret
  9188  0026B4                     __end_of_init_port_dma:
  9189                           	opt callstack 0
  9190                           
  9191 ;; *************** function _init_display *****************
  9192 ;; Defined at:
  9193 ;;		line 38 in file "eadog.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;		None
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;		None
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1  [STACK] void 
  9200 ;; Registers used:
  9201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9202 ;; Tracked objects:
  9203 ;;		On entry : 3F/3B
  9204 ;;		On exit  : 3F/3D
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9211 ;;Total ram usage:        0 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:   17
  9214 ;; This function calls:
  9215 ;;		_ringBufS_init
  9216 ;;		_send_lcd_cmd
  9217 ;;		_send_lcd_cmd_long
  9218 ;;		_send_lcd_data
  9219 ;;		_wdtdelay
  9220 ;; This function is called by:
  9221 ;;		_main
  9222 ;; This function uses a reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text15
  9226  000486                     __ptext15:
  9227                           	opt callstack 0
  9228  000486                     _init_display:
  9229                           	opt callstack 13
  9230                           
  9231                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9232                           
  9233                           ; BSR set to: 59
  9234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9235                           ;incstack = 0
  9236  000486  0E83               	movlw	low _ring_buf1
  9237  000488  0100               	movlb	0	; () banked
  9238  00048A  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9239  00048C  0E04               	movlw	high _ring_buf1
  9240  00048E  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9241                           
  9242                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9243  000490  0E40               	movlw	low _ring_buf2
  9244  000492  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9245  000494  0E04               	movlw	high _ring_buf2
  9246  000496  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9250  000498  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9251  00049E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9252  0004A4  EC11  F014         	call	_ringBufS_init	;wreg free
  9253                           
  9254                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9255  0004A8  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9256  0004AE  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9257  0004B4  EC11  F014         	call	_ringBufS_init	;wreg free
  9258                           
  9259                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9260  0004B8  84BE               	bsf	190,2,c	;volatile
  9261                           
  9262                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9263  0004BA  013D               	movlb	61	; () banked
  9264  0004BC  9F14               	bcf	20,7,b	;volatile
  9265                           
  9266                           ; BSR set to: 61
  9267                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9268  0004BE  0E20               	movlw	32
  9269  0004C0  6F15               	movwf	21,b	;volatile
  9270                           
  9271                           ; BSR set to: 61
  9272                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9273  0004C2  0E03               	movlw	3
  9274  0004C4  6F16               	movwf	22,b	;volatile
  9275                           
  9276                           ; BSR set to: 61
  9277                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9278  0004C6  0E04               	movlw	4
  9279  0004C8  6F19               	movwf	25,b	;volatile
  9280                           
  9281                           ; BSR set to: 61
  9282                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9283  0004CA  0E02               	movlw	2
  9284  0004CC  6F1C               	movwf	28,b	;volatile
  9285                           
  9286                           ; BSR set to: 61
  9287                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9288  0004CE  0E83               	movlw	131
  9289  0004D0  6F14               	movwf	20,b	;volatile
  9290                           
  9291                           ; BSR set to: 61
  9292                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9293  0004D2  8F14               	bsf	20,7,b	;volatile
  9294                           
  9295                           ; BSR set to: 61
  9296                           ;eadog.c: 60:  wdtdelay(350000);
  9297  0004D4  0E30               	movlw	48
  9298  0004D6  6EE6               	movwf	postinc1,c
  9299  0004D8  0E57               	movlw	87
  9300  0004DA  6EE6               	movwf	postinc1,c
  9301  0004DC  0E05               	movlw	5
  9302  0004DE  6EE6               	movwf	postinc1,c
  9303  0004E0  0E00               	movlw	0
  9304  0004E2  6EE6               	movwf	postinc1,c
  9305  0004E4  ECEB  F00E         	call	_wdtdelay	;wreg free
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9309  0004E8  0E46               	movlw	70
  9310  0004EA  6EE6               	movwf	postinc1,c
  9311  0004EC  EC73  F011         	call	_send_lcd_cmd_long	;wreg free
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9315  0004F0  0E41               	movlw	65
  9316  0004F2  6EE6               	movwf	postinc1,c
  9317  0004F4  EC93  F011         	call	_send_lcd_cmd	;wreg free
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;eadog.c: 63:  wdtdelay(80);
  9321  0004F8  0E50               	movlw	80
  9322  0004FA  6EE6               	movwf	postinc1,c
  9323  0004FC  0E00               	movlw	0
  9324  0004FE  6EE6               	movwf	postinc1,c
  9325  000500  0E00               	movlw	0
  9326  000502  6EE6               	movwf	postinc1,c
  9327  000504  0E00               	movlw	0
  9328  000506  6EE6               	movwf	postinc1,c
  9329  000508  ECEB  F00E         	call	_wdtdelay	;wreg free
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9333  00050C  0E53               	movlw	83
  9334  00050E  6EE6               	movwf	postinc1,c
  9335  000510  EC93  F011         	call	_send_lcd_cmd	;wreg free
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;eadog.c: 65:  send_lcd_data(2);
  9339  000514  0E02               	movlw	2
  9340  000516  6EE6               	movwf	postinc1,c
  9341  000518  EC3E  F015         	call	_send_lcd_data	;wreg free
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;eadog.c: 66:  wdtdelay(80);
  9345  00051C  0E50               	movlw	80
  9346  00051E  6EE6               	movwf	postinc1,c
  9347  000520  0E00               	movlw	0
  9348  000522  6EE6               	movwf	postinc1,c
  9349  000524  0E00               	movlw	0
  9350  000526  6EE6               	movwf	postinc1,c
  9351  000528  0E00               	movlw	0
  9352  00052A  6EE6               	movwf	postinc1,c
  9353  00052C  ECEB  F00E         	call	_wdtdelay	;wreg free
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9357  000530  0E51               	movlw	81
  9358  000532  6EE6               	movwf	postinc1,c
  9359  000534  EC73  F011         	call	_send_lcd_cmd_long	;wreg free
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9363  000538  013D               	movlb	61	; () banked
  9364  00053A  9F14               	bcf	20,7,b	;volatile
  9365                           
  9366                           ; BSR set to: 61
  9367                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9368  00053C  0E02               	movlw	2
  9369  00053E  6F16               	movwf	22,b	;volatile
  9370                           
  9371                           ; BSR set to: 61
  9372                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9373  000540  8F14               	bsf	20,7,b	;volatile
  9374                           
  9375                           ; BSR set to: 61
  9376                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9377  000542  931A               	bcf	26,1,b	;volatile
  9378                           
  9379                           ; BSR set to: 61
  9380                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9381  000544  0E3F               	movlw	-193
  9382  000546  013B               	movlb	59	; () banked
  9383  000548  17FD               	andwf	253,f,b	;volatile
  9384                           
  9385                           ; BSR set to: 59
  9386                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9387  00054A  9BFD               	bcf	253,5,b	;volatile
  9388                           
  9389                           ; BSR set to: 59
  9390                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9391  00054C  51FD               	movf	253,w,b	;volatile
  9392  00054E  0BF9               	andlw	-7
  9393  000550  0902               	iorlw	2
  9394  000552  6FFD               	movwf	253,b	;volatile
  9395                           
  9396                           ; BSR set to: 59
  9397                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9398  000554  0EE7               	movlw	-25
  9399  000556  17FD               	andwf	253,f,b	;volatile
  9400                           
  9401                           ; BSR set to: 59
  9402                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9403  000558  81FD               	bsf	253,0,b	;volatile
  9404                           
  9405                           ; BSR set to: 59
  9406                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9407  00055A  0E83               	movlw	low _ring_buf1
  9408  00055C  6FF9               	movwf	249,b	;volatile
  9409  00055E  0E04               	movlw	high _ring_buf1
  9410  000560  6FFA               	movwf	250,b	;volatile
  9411  000562  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9412  000564  6FFB               	movwf	251,b	;volatile
  9413                           
  9414                           ; BSR set to: 59
  9415                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9416  000566  9BFC               	bcf	252,5,b	;volatile
  9417                           
  9418                           ; BSR set to: 59
  9419                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9420  000568  013D               	movlb	61	; () banked
  9421  00056A  831A               	bsf	26,1,b	;volatile
  9422                           
  9423                           ; BSR set to: 61
  9424                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9425  00056C  94BE               	bcf	190,2,c	;volatile
  9426                           
  9427                           ; BSR set to: 61
  9428                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9429  00056E  0012               	return		;funcret
  9430  000570                     __end_of_init_display:
  9431                           	opt callstack 0
  9432                           
  9433 ;; *************** function _send_lcd_data *****************
  9434 ;; Defined at:
  9435 ;;		line 123 in file "eadog.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  data            1  [STACK] const unsigned char 
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;		None
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  1  [STACK] void 
  9442 ;; Registers used:
  9443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9444 ;; Tracked objects:
  9445 ;;		On entry : 3F/0
  9446 ;;		On exit  : 3F/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9453 ;;Total ram usage:        0 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:   16
  9456 ;; This function calls:
  9457 ;;		_SPI1_Exchange8bit
  9458 ;;		_wdtdelay
  9459 ;; This function is called by:
  9460 ;;		_init_display
  9461 ;; This function uses a reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text16
  9465  002A7C                     __ptext16:
  9466                           	opt callstack 0
  9467  002A7C                     _send_lcd_data:
  9468                           	opt callstack 13
  9469                           
  9470                           ; BSR set to: 61
  9471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9472                           ;incstack = 0
  9473                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9474  002A7C  94BC               	bcf	188,2,c	;volatile
  9475                           
  9476                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9477                           ;stkvar	_data @ sp[(0)+-1]
  9478  002A7E  0EFF               	movlw	-1
  9479  002A80  50E3               	movf	plusw1,w,c
  9480  002A82  6EE6               	movwf	postinc1,c
  9481  002A84  EC0E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9482                           
  9483                           ; BSR set to: 57
  9484                           ;eadog.c: 127:  wdtdelay(8);
  9485  002A88  0E08               	movlw	8
  9486  002A8A  6EE6               	movwf	postinc1,c
  9487  002A8C  0E00               	movlw	0
  9488  002A8E  6EE6               	movwf	postinc1,c
  9489  002A90  0E00               	movlw	0
  9490  002A92  6EE6               	movwf	postinc1,c
  9491  002A94  0E00               	movlw	0
  9492  002A96  6EE6               	movwf	postinc1,c
  9493  002A98  ECEB  F00E         	call	_wdtdelay	;wreg free
  9494                           
  9495                           ; BSR set to: 0
  9496                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9497  002A9C  52E5               	movf	postdec1,f,c
  9498  002A9E  0012               	return		;funcret
  9499  002AA0                     __end_of_send_lcd_data:
  9500                           	opt callstack 0
  9501                           
  9502 ;; *************** function _send_lcd_cmd_long *****************
  9503 ;; Defined at:
  9504 ;;		line 139 in file "eadog.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  cmd             1  [STACK] const unsigned char 
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;		None
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  1  [STACK] void 
  9511 ;; Registers used:
  9512 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9513 ;; Tracked objects:
  9514 ;;		On entry : 3F/0
  9515 ;;		On exit  : 3F/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9522 ;;Total ram usage:        0 bytes
  9523 ;; Hardware stack levels used:    1
  9524 ;; Hardware stack levels required when called:   16
  9525 ;; This function calls:
  9526 ;;		_SPI1_Exchange8bit
  9527 ;;		_wdtdelay
  9528 ;; This function is called by:
  9529 ;;		_init_display
  9530 ;; This function uses a reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text17
  9534  0022E6                     __ptext17:
  9535                           	opt callstack 0
  9536  0022E6                     _send_lcd_cmd_long:
  9537                           	opt callstack 13
  9538                           
  9539                           ; BSR set to: 0
  9540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9541                           ;incstack = 0
  9542                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9543  0022E6  94BC               	bcf	188,2,c	;volatile
  9544                           
  9545                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9546  0022E8  0EFE               	movlw	254
  9547  0022EA  6EE6               	movwf	postinc1,c
  9548  0022EC  EC0E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9549                           
  9550                           ; BSR set to: 57
  9551                           ;eadog.c: 143:  wdtdelay(8);
  9552  0022F0  0E08               	movlw	8
  9553  0022F2  6EE6               	movwf	postinc1,c
  9554  0022F4  0E00               	movlw	0
  9555  0022F6  6EE6               	movwf	postinc1,c
  9556  0022F8  0E00               	movlw	0
  9557  0022FA  6EE6               	movwf	postinc1,c
  9558  0022FC  0E00               	movlw	0
  9559  0022FE  6EE6               	movwf	postinc1,c
  9560  002300  ECEB  F00E         	call	_wdtdelay	;wreg free
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9564                           ;stkvar	_cmd @ sp[(0)+-1]
  9565  002304  0EFF               	movlw	-1
  9566  002306  50E3               	movf	plusw1,w,c
  9567  002308  6EE6               	movwf	postinc1,c
  9568  00230A  EC0E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9569                           
  9570                           ;eadog.c: 145:  wdtdelay(800);
  9571  00230E  0E20               	movlw	32
  9572  002310  6EE6               	movwf	postinc1,c
  9573  002312  0E03               	movlw	3
  9574  002314  6EE6               	movwf	postinc1,c
  9575  002316  0E00               	movlw	0
  9576  002318  6EE6               	movwf	postinc1,c
  9577  00231A  0E00               	movlw	0
  9578  00231C  6EE6               	movwf	postinc1,c
  9579  00231E  ECEB  F00E         	call	_wdtdelay	;wreg free
  9580                           
  9581                           ; BSR set to: 0
  9582                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9583  002322  52E5               	movf	postdec1,f,c
  9584  002324  0012               	return		;funcret
  9585  002326                     __end_of_send_lcd_cmd_long:
  9586                           	opt callstack 0
  9587                           
  9588 ;; *************** function _send_lcd_cmd *****************
  9589 ;; Defined at:
  9590 ;;		line 130 in file "eadog.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  cmd             1  [STACK] const unsigned char 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;		None
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1  [STACK] void 
  9597 ;; Registers used:
  9598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9599 ;; Tracked objects:
  9600 ;;		On entry : 3F/0
  9601 ;;		On exit  : 3F/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9608 ;;Total ram usage:        0 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:   16
  9611 ;; This function calls:
  9612 ;;		_SPI1_Exchange8bit
  9613 ;;		_wdtdelay
  9614 ;; This function is called by:
  9615 ;;		_init_display
  9616 ;; This function uses a reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text18
  9620  002326                     __ptext18:
  9621                           	opt callstack 0
  9622  002326                     _send_lcd_cmd:
  9623                           	opt callstack 13
  9624                           
  9625                           ; BSR set to: 0
  9626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9627                           ;incstack = 0
  9628                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9629  002326  94BC               	bcf	188,2,c	;volatile
  9630                           
  9631                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9632  002328  0EFE               	movlw	254
  9633  00232A  6EE6               	movwf	postinc1,c
  9634  00232C  EC0E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9635                           
  9636                           ; BSR set to: 57
  9637                           ;eadog.c: 134:  wdtdelay(8);
  9638  002330  0E08               	movlw	8
  9639  002332  6EE6               	movwf	postinc1,c
  9640  002334  0E00               	movlw	0
  9641  002336  6EE6               	movwf	postinc1,c
  9642  002338  0E00               	movlw	0
  9643  00233A  6EE6               	movwf	postinc1,c
  9644  00233C  0E00               	movlw	0
  9645  00233E  6EE6               	movwf	postinc1,c
  9646  002340  ECEB  F00E         	call	_wdtdelay	;wreg free
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9650                           ;stkvar	_cmd @ sp[(0)+-1]
  9651  002344  0EFF               	movlw	-1
  9652  002346  50E3               	movf	plusw1,w,c
  9653  002348  6EE6               	movwf	postinc1,c
  9654  00234A  EC0E  F016         	call	_SPI1_Exchange8bit	;wreg free
  9655                           
  9656                           ;eadog.c: 136:  wdtdelay(8);
  9657  00234E  0E08               	movlw	8
  9658  002350  6EE6               	movwf	postinc1,c
  9659  002352  0E00               	movlw	0
  9660  002354  6EE6               	movwf	postinc1,c
  9661  002356  0E00               	movlw	0
  9662  002358  6EE6               	movwf	postinc1,c
  9663  00235A  0E00               	movlw	0
  9664  00235C  6EE6               	movwf	postinc1,c
  9665  00235E  ECEB  F00E         	call	_wdtdelay	;wreg free
  9666                           
  9667                           ; BSR set to: 0
  9668                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9669  002362  52E5               	movf	postdec1,f,c
  9670  002364  0012               	return		;funcret
  9671  002366                     __end_of_send_lcd_cmd:
  9672                           	opt callstack 0
  9673                           
  9674 ;; *************** function _SPI1_Exchange8bit *****************
  9675 ;; Defined at:
  9676 ;;		line 79 in file "mcc_generated_files/spi1.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  data            1  [STACK] unsigned char 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1  [STACK] unsigned char 
  9683 ;; Registers used:
  9684 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/1
  9687 ;;		On exit  : 3F/39
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9694 ;;Total ram usage:        0 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; Hardware stack levels required when called:   15
  9697 ;; This function calls:
  9698 ;;		Nothing
  9699 ;; This function is called by:
  9700 ;;		_send_lcd_data
  9701 ;;		_send_lcd_cmd
  9702 ;;		_send_lcd_cmd_long
  9703 ;;		_set_dac
  9704 ;; This function uses a reentrant model
  9705 ;;
  9706                           
  9707                           	psect	text19
  9708  002C1C                     __ptext19:
  9709                           	opt callstack 0
  9710  002C1C                     _SPI1_Exchange8bit:
  9711                           	opt callstack 14
  9712                           
  9713                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  9714                           
  9715                           ; BSR set to: 0
  9716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9717                           ;incstack = 0
  9718  002C1C  0E01               	movlw	1
  9719  002C1E  013D               	movlb	61	; () banked
  9720  002C20  6F12               	movwf	18,b	;volatile
  9721                           
  9722                           ; BSR set to: 61
  9723                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  9724                           ;stkvar	_data @ sp[(0)+-1]
  9725  002C22  0EFF               	movlw	-1
  9726  002C24  006F FF8F FD11     	movff	plusw1,15633	;volatile
  9727  002C2A                     l809:
  9728                           
  9729                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  9730  002C2A  0139               	movlb	57	; () banked
  9731  002C2C  A9A2               	btfss	162,4,b	;volatile
  9732  002C2E  D7FD               	goto	l809
  9733                           
  9734                           ; BSR set to: 57
  9735                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9736  002C30  006F F440  F02A    	movff	15632,btemp	;volatile
  9737                           
  9738                           ; BSR set to: 57
  9739                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9740  002C36  52E5               	movf	postdec1,f,c
  9741  002C38  0012               	return		;funcret
  9742  002C3A                     __end_of_SPI1_Exchange8bit:
  9743                           	opt callstack 0
  9744                           
  9745 ;; *************** function _ringBufS_init *****************
  9746 ;; Defined at:
  9747 ;;		line 22 in file "ringbufs.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;  _this           2  [STACK] PTR volatile struct ring
  9750 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1  [STACK] void 
  9755 ;; Registers used:
  9756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9766 ;;Total ram usage:        0 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; Hardware stack levels required when called:   16
  9769 ;; This function calls:
  9770 ;;		_memset
  9771 ;; This function is called by:
  9772 ;;		_init_display
  9773 ;; This function uses a reentrant model
  9774 ;;
  9775                           
  9776                           	psect	text20
  9777  002822                     __ptext20:
  9778                           	opt callstack 0
  9779  002822                     _ringBufS_init:
  9780                           	opt callstack 13
  9781                           
  9782                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  9783                           
  9784                           ; BSR set to: 57
  9785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9786                           ;incstack = 0
  9787  002822  0E43               	movlw	67
  9788  002824  6EE6               	movwf	postinc1,c
  9789  002826  0E00               	movlw	0
  9790  002828  6EE6               	movwf	postinc1,c
  9791  00282A  0E00               	movlw	0
  9792  00282C  6EE6               	movwf	postinc1,c
  9793  00282E  0E00               	movlw	0
  9794  002830  6EE6               	movwf	postinc1,c
  9795                           
  9796                           ;stkvar	__this @ sp[(-4)+-2]
  9797  002832  0EFA               	movlw	-6
  9798  002834  006F FF8F FFE6     	movff	plusw1,postinc1
  9799  00283A  006F FF8F FFE6     	movff	plusw1,postinc1
  9800  002840  EC7D  F0D9         	call	_memset	;wreg free
  9801                           
  9802                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9803  002844  52E5               	movf	postdec1,f,c
  9804  002846  52E5               	movf	postdec1,f,c
  9805  002848  0012               	return		;funcret
  9806  00284A                     __end_of_ringBufS_init:
  9807                           	opt callstack 0
  9808                           
  9809 ;; *************** function _init_bsoc *****************
  9810 ;; Defined at:
  9811 ;;		line 110 in file "bsoc.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;		None
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;		None
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  1  [STACK] void 
  9818 ;; Registers used:
  9819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/1
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9829 ;;Total ram usage:        0 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; Hardware stack levels required when called:   18
  9832 ;; This function calls:
  9833 ;;		_TMR3_SetInterruptHandler
  9834 ;;		_Volts_to_SOC
  9835 ;;		___fldiv
  9836 ;;		___flmul
  9837 ;;		___fltol
  9838 ;;		___xxtofl
  9839 ;;		_conv_raw_result
  9840 ;; This function is called by:
  9841 ;;		_main
  9842 ;; This function uses a reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text21
  9846  01C84A                     __ptext21:
  9847                           	opt callstack 0
  9848  01C84A                     _init_bsoc:
  9849                           	opt callstack 12
  9850                           
  9851                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  9852                           
  9853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9854                           ;incstack = 0
  9855  01C84A  0E00               	movlw	0
  9856  01C84C  6EE6               	movwf	postinc1,c
  9857  01C84E  0E00               	movlw	0
  9858  01C850  6EE6               	movwf	postinc1,c
  9859  01C852  0E7A               	movlw	122
  9860  01C854  6EE6               	movwf	postinc1,c
  9861  01C856  0E44               	movlw	68
  9862  01C858  6EE6               	movwf	postinc1,c
  9863  01C85A  0E00               	movlw	0
  9864  01C85C  6EE6               	movwf	postinc1,c
  9865  01C85E  0E04               	movlw	4
  9866  01C860  6EE6               	movwf	postinc1,c
  9867  01C862  EC9F  F0C8         	call	_conv_raw_result	;wreg free
  9868  01C866  0060  F0AB  FFE6   	movff	btemp,postinc1
  9869  01C86C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9870  01C872  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9871  01C878  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9872  01C87E  ECE5  F0F4         	call	___fltol	;wreg free
  9873  01C882  0060  F0AB  FFE6   	movff	btemp,postinc1
  9874  01C888  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9875  01C88E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9876  01C894  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9877  01C89A  0E00               	movlw	0
  9878  01C89C  6EE6               	movwf	postinc1,c
  9879  01C89E  ECC9  F0EB         	call	___xxtofl	;wreg free
  9880  01C8A2  0060  F0AB  FFE6   	movff	btemp,postinc1
  9881  01C8A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9882  01C8AE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9883  01C8B4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9884  01C8BA  EC06  F0B8         	call	___flmul	;wreg free
  9885  01C8BE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9886  01C8C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9887  01C8CA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9888  01C8D0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9889  01C8D6  ECE5  F0F4         	call	___fltol	;wreg free
  9890  01C8DA  0060  F0AB  FFE6   	movff	btemp,postinc1
  9891  01C8E0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9892  01C8E6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9893  01C8EC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9894  01C8F2  EC13  F005         	call	_Volts_to_SOC	;wreg free
  9895  01C8F6  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
  9896  01C8FC  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
  9897                           
  9898                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  9899  01C902  EE22  F18B         	lfsr	2,_C+140	;volatile
  9900  01C906  006F FF7B FFE6     	movff	postinc2,postinc1
  9901  01C90C  006F FF7B FFE6     	movff	postinc2,postinc1
  9902  01C912  006F FF7B FFE6     	movff	postinc2,postinc1
  9903  01C918  006F FF7B FFE6     	movff	postinc2,postinc1
  9904  01C91E  0E00               	movlw	0
  9905  01C920  6EE6               	movwf	postinc1,c
  9906  01C922  0E00               	movlw	0
  9907  01C924  6EE6               	movwf	postinc1,c
  9908  01C926  0EC8               	movlw	200
  9909  01C928  6EE6               	movwf	postinc1,c
  9910  01C92A  0E42               	movlw	66
  9911  01C92C  6EE6               	movwf	postinc1,c
  9912  01C92E  0E00               	movlw	0
  9913  01C930  6EE6               	movwf	postinc1,c
  9914  01C932  0E00               	movlw	0
  9915  01C934  6EE6               	movwf	postinc1,c
  9916  01C936  0E7A               	movlw	122
  9917  01C938  6EE6               	movwf	postinc1,c
  9918  01C93A  0E44               	movlw	68
  9919  01C93C  6EE6               	movwf	postinc1,c
  9920  01C93E  0E00               	movlw	0
  9921  01C940  6EE6               	movwf	postinc1,c
  9922  01C942  0E04               	movlw	4
  9923  01C944  6EE6               	movwf	postinc1,c
  9924  01C946  EC9F  F0C8         	call	_conv_raw_result	;wreg free
  9925  01C94A  0060  F0AB  FFE6   	movff	btemp,postinc1
  9926  01C950  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9927  01C956  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9928  01C95C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9929  01C962  ECE5  F0F4         	call	___fltol	;wreg free
  9930  01C966  0060  F0AB  FFE6   	movff	btemp,postinc1
  9931  01C96C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9932  01C972  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9933  01C978  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9934  01C97E  0E00               	movlw	0
  9935  01C980  6EE6               	movwf	postinc1,c
  9936  01C982  ECC9  F0EB         	call	___xxtofl	;wreg free
  9937  01C986  0060  F0AB  FFE6   	movff	btemp,postinc1
  9938  01C98C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9939  01C992  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9940  01C998  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9941  01C99E  EC06  F0B8         	call	___flmul	;wreg free
  9942  01C9A2  0060  F0AB  FFE6   	movff	btemp,postinc1
  9943  01C9A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9944  01C9AE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9945  01C9B4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9946  01C9BA  ECE5  F0F4         	call	___fltol	;wreg free
  9947  01C9BE  0060  F0AB  FFE6   	movff	btemp,postinc1
  9948  01C9C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9949  01C9CA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9950  01C9D0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9951  01C9D6  EC13  F005         	call	_Volts_to_SOC	;wreg free
  9952  01C9DA  0060  F0A8  F034   	movff	btemp,btemp+10
  9953  01C9E0  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9954  01C9E6  5034               	movf	(btemp+10)^0,w,c
  9955  01C9E8  6E2E               	movwf	(btemp+4)^0,c
  9956  01C9EA  5035               	movf	(btemp+11)^0,w,c
  9957  01C9EC  6E2F               	movwf	(btemp+5)^0,c
  9958  01C9EE  6A30               	clrf	(btemp+6)^0,c
  9959  01C9F0  6A31               	clrf	(btemp+7)^0,c
  9960  01C9F2  0060  F0BB  FFE6   	movff	btemp+4,postinc1
  9961  01C9F8  0060  F0BF  FFE6   	movff	btemp+5,postinc1
  9962  01C9FE  0060  F0C3  FFE6   	movff	btemp+6,postinc1
  9963  01CA04  0060  F0C7  FFE6   	movff	btemp+7,postinc1
  9964  01CA0A  0E00               	movlw	0
  9965  01CA0C  6EE6               	movwf	postinc1,c
  9966  01CA0E  ECC9  F0EB         	call	___xxtofl	;wreg free
  9967  01CA12  0060  F0AB  FFE6   	movff	btemp,postinc1
  9968  01CA18  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9969  01CA1E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9970  01CA24  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9971  01CA2A  EC57  F0C3         	call	___fldiv	;wreg free
  9972  01CA2E  0060  F0AB  FFE6   	movff	btemp,postinc1
  9973  01CA34  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9974  01CA3A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9975  01CA40  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9976  01CA46  EC06  F0B8         	call	___flmul	;wreg free
  9977  01CA4A  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
  9978  01CA50  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
  9979  01CA56  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
  9980  01CA5C  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
  9981                           
  9982                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  9983  01CA62  EE22  F18F         	lfsr	2,_C+144	;volatile
  9984  01CA66  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  9985  01CA6C  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  9986  01CA72  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  9987  01CA78  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  9988                           
  9989                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  9990  01CA7E  0E8A               	movlw	low _calc_bsoc
  9991  01CA80  6EE6               	movwf	postinc1,c
  9992  01CA82  0E53               	movlw	high _calc_bsoc
  9993  01CA84  6EE6               	movwf	postinc1,c
  9994  01CA86  0E01               	movlw	low (_calc_bsoc shr (0+16))
  9995  01CA88  6EE6               	movwf	postinc1,c
  9996  01CA8A  EC9D  F014         	call	_TMR3_SetInterruptHandler	;wreg free
  9997                           
  9998                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9999  01CA8E  0012               	return		;funcret
 10000  01CA90                     __end_of_init_bsoc:
 10001                           	opt callstack 0
 10002                           
 10003 ;; *************** function _Volts_to_SOC *****************
 10004 ;; Defined at:
 10005 ;;		line 175 in file "bsoc.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  cvoltage        4  [STACK] const unsigned long 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;  soc             2  [STACK] unsigned short 
 10010 ;;  slot            1  [STACK] unsigned char 
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  2  [STACK] unsigned short 
 10013 ;; Registers used:
 10014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/1
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10024 ;;Total ram usage:        0 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:   15
 10027 ;; This function calls:
 10028 ;;		Nothing
 10029 ;; This function is called by:
 10030 ;;		_init_bsoc
 10031 ;; This function uses a reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text22
 10035  000A26                     __ptext22:
 10036                           	opt callstack 0
 10037  000A26                     _Volts_to_SOC:
 10038                           	opt callstack 0
 10039                           
 10040                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10041  000A26  52E6               	movf	postinc1,f,c
 10042  000A28  52E6               	movf	postinc1,f,c
 10043  000A2A  52E6               	movf	postinc1,f,c
 10044                           
 10045                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10046                           ;stkvar	_soc @ sp[(-3)+0]
 10047                           
 10048                           ;incstack = 0
 10049  000A2C  0EFD               	movlw	-3
 10050  000A2E  6AE3               	clrf	plusw1,c
 10051  000A30  0EFE               	movlw	-2
 10052  000A32  6AE3               	clrf	plusw1,c
 10053                           
 10054                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10055                           ;stkvar	_slot @ sp[(-3)+2]
 10056  000A34  0EFF               	movlw	-1
 10057  000A36  6AE3               	clrf	plusw1,c
 10058  000A38                     l13977:
 10059                           
 10060                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10061                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10062                           ;stkvar	_slot @ sp[(-3)+2]
 10063  000A38  0EFF               	movlw	-1
 10064  000A3A  50E3               	movf	plusw1,w,c
 10065  000A3C  0D08               	mullw	8
 10066  000A3E  0E71               	movlw	low _BVSOC_TABLE
 10067  000A40  24F3               	addwf	243,w,c
 10068  000A42  6EF6               	movwf	tblptrl,c
 10069  000A44  0EF7               	movlw	high _BVSOC_TABLE
 10070  000A46  20F4               	addwfc	244,w,c
 10071  000A48  6EF7               	movwf	tblptrh,c
 10072  000A4A                     	if	1	;There are 3 active tblptr bytes
 10073  000A4A  6AF8               	clrf	tblptru,c
 10074  000A4C  0E00               	movlw	low (__mediumconst shr (0+16))
 10075  000A4E  22F8               	addwfc	tblptru,f,c
 10076  000A50                     	endif
 10077  000A50  0EF9               	movlw	-7
 10078  000A52  50E3               	movf	plusw1,w,c
 10079  000A54  0009               	tblrd		*+
 10080  000A56  5CF5               	subwf	tablat,w,c
 10081  000A58  0EFA               	movlw	-6
 10082  000A5A  50E3               	movf	plusw1,w,c
 10083  000A5C  0009               	tblrd		*+
 10084  000A5E  58F5               	subwfb	tablat,w,c
 10085  000A60  0EFB               	movlw	-5
 10086  000A62  50E3               	movf	plusw1,w,c
 10087  000A64  0009               	tblrd		*+
 10088  000A66  58F5               	subwfb	tablat,w,c
 10089  000A68  0EFC               	movlw	-4
 10090  000A6A  50E3               	movf	plusw1,w,c
 10091  000A6C  0009               	tblrd		*+
 10092  000A6E  58F5               	subwfb	tablat,w,c
 10093  000A70  B0D8               	btfsc	status,0,c
 10094  000A72  D020               	goto	l13981
 10095                           
 10096                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10097                           ;stkvar	_slot @ sp[(-3)+2]
 10098  000A74  0EFF               	movlw	-1
 10099  000A76  50E3               	movf	plusw1,w,c
 10100  000A78  0D08               	mullw	8
 10101  000A7A  0E04               	movlw	4
 10102  000A7C  26F3               	addwf	243,f,c
 10103  000A7E  0E00               	movlw	0
 10104  000A80  22F4               	addwfc	244,f,c
 10105  000A82  0E71               	movlw	low _BVSOC_TABLE
 10106  000A84  24F3               	addwf	243,w,c
 10107  000A86  6EF6               	movwf	tblptrl,c
 10108  000A88  0EF7               	movlw	high _BVSOC_TABLE
 10109  000A8A  20F4               	addwfc	244,w,c
 10110  000A8C  6EF7               	movwf	tblptrh,c
 10111  000A8E                     	if	1	;There are 3 active tblptr bytes
 10112  000A8E  6AF8               	clrf	tblptru,c
 10113  000A90  0E00               	movlw	low (__mediumconst shr (0+16))
 10114  000A92  22F8               	addwfc	tblptru,f,c
 10115  000A94                     	endif
 10116  000A94  0009               	tblrd		*+
 10117  000A96  006F FFD4  F034    	movff	tablat,btemp+10
 10118  000A9C  0009               	tblrd		*+
 10119  000A9E  006F FFD4  F035    	movff	tablat,btemp+11
 10120                           
 10121                           ;stkvar	_soc @ sp[(-3)+0]
 10122  000AA4  0EFD               	movlw	-3
 10123  000AA6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10124  000AAC  0EFE               	movlw	-2
 10125  000AAE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10126  000AB4                     l13981:
 10127                           
 10128                           ;bsoc.c: 187:  }
 10129                           ;stkvar	_slot @ sp[(-3)+2]
 10130  000AB4  0EFF               	movlw	-1
 10131  000AB6  2AE3               	incf	plusw1,f,c
 10132                           
 10133                           ;stkvar	_slot @ sp[(-3)+2]
 10134  000AB8  0EFF               	movlw	-1
 10135  000ABA  006F FF8C  F02A    	movff	plusw1,btemp
 10136  000AC0  0E19               	movlw	25
 10137  000AC2  642A               	cpfsgt	btemp^0,c
 10138  000AC4  D7B9               	goto	l13977
 10139                           
 10140                           ;bsoc.c: 188:  return soc;
 10141                           ;stkvar	_soc @ sp[(-3)+0]
 10142  000AC6  0EFD               	movlw	-3
 10143  000AC8  006F FF8C  F02A    	movff	plusw1,btemp
 10144  000ACE  0EFE               	movlw	-2
 10145  000AD0  006F FF8C  F02B    	movff	plusw1,btemp+1
 10146                           
 10147                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10148  000AD6  0EF9               	movlw	249
 10149  000AD8  26E1               	addwf	fsr1l,f,c
 10150  000ADA  0EFF               	movlw	255
 10151  000ADC  22E2               	addwfc	fsr1h,f,c
 10152  000ADE  0012               	return		;funcret
 10153  000AE0                     __end_of_Volts_to_SOC:
 10154                           	opt callstack 0
 10155                           
 10156 ;; *************** function _hid_display *****************
 10157 ;; Defined at:
 10158 ;;		line 22 in file "hid.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  h               2  [STACK] PTR struct H_data
 10161 ;;		 -> H(9), 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  2  [STACK] PTR struct H_data
 10166 ;; Registers used:
 10167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/39
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10177 ;;Total ram usage:        0 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:   17
 10180 ;; This function calls:
 10181 ;;		_hid_input
 10182 ;; This function is called by:
 10183 ;;		_main
 10184 ;; This function uses a reentrant model
 10185 ;;
 10186                           
 10187                           	psect	text23
 10188  01D364                     __ptext23:
 10189                           	opt callstack 0
 10190  01D364                     _hid_display:
 10191                           	opt callstack 13
 10192                           
 10193                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10194                           ;stkvar	_h @ sp[(0)+-2]
 10195                           
 10196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10197                           ;incstack = 0
 10198  01D364  0EFE               	movlw	-2
 10199  01D366  006F FF8F FFE6     	movff	plusw1,postinc1
 10200  01D36C  006F FF8F FFE6     	movff	plusw1,postinc1
 10201  01D372  ECA4  F0FB         	call	_hid_input	;wreg free
 10202                           
 10203                           ;hid.c: 26:  switch (h->h_state) {
 10204  01D376  D0E6               	goto	l17751
 10205  01D378                     l17725:
 10206                           
 10207                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10208                           ;stkvar	_h @ sp[(0)+-2]
 10209  01D378  0EFE               	movlw	-2
 10210  01D37A  006F FF8C  F034    	movff	plusw1,btemp+10
 10211  01D380  0EFF               	movlw	-1
 10212  01D382  006F FF8C  F035    	movff	plusw1,btemp+11
 10213  01D388  0E01               	movlw	1
 10214  01D38A  2434               	addwf	(btemp+10)^0,w,c
 10215  01D38C  6ED9               	movwf	fsr2l,c
 10216  01D38E  0E00               	movlw	0
 10217  01D390  2035               	addwfc	(btemp+11)^0,w,c
 10218  01D392  6EDA               	movwf	fsr2h,c
 10219  01D394  0E01               	movlw	1
 10220  01D396  6EDF               	movwf	indf2,c
 10221                           
 10222                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10223                           ;stkvar	_h @ sp[(0)+-2]
 10224  01D398  0EFE               	movlw	-2
 10225  01D39A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10226  01D3A0  0EFF               	movlw	-1
 10227  01D3A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10228  01D3A8  0E00               	movlw	0
 10229  01D3AA  6EDF               	movwf	indf2,c
 10230                           
 10231                           ;hid.c: 30:   h->wait_enter = 1;
 10232                           ;stkvar	_h @ sp[(0)+-2]
 10233  01D3AC  0EFE               	movlw	-2
 10234  01D3AE  006F FF8C  F034    	movff	plusw1,btemp+10
 10235  01D3B4  0EFF               	movlw	-1
 10236  01D3B6  006F FF8C  F035    	movff	plusw1,btemp+11
 10237  01D3BC  0E04               	movlw	4
 10238  01D3BE  2434               	addwf	(btemp+10)^0,w,c
 10239  01D3C0  6ED9               	movwf	fsr2l,c
 10240  01D3C2  0E00               	movlw	0
 10241  01D3C4  2035               	addwfc	(btemp+11)^0,w,c
 10242  01D3C6  6EDA               	movwf	fsr2h,c
 10243  01D3C8  0E01               	movlw	1
 10244  01D3CA  6EDF               	movwf	indf2,c
 10245                           
 10246                           ;hid.c: 31:   h->wait_select = 1;
 10247                           ;stkvar	_h @ sp[(0)+-2]
 10248  01D3CC  0EFE               	movlw	-2
 10249  01D3CE  006F FF8C  F034    	movff	plusw1,btemp+10
 10250  01D3D4  0EFF               	movlw	-1
 10251  01D3D6  006F FF8C  F035    	movff	plusw1,btemp+11
 10252  01D3DC  0E02               	movlw	2
 10253  01D3DE  2434               	addwf	(btemp+10)^0,w,c
 10254  01D3E0  6ED9               	movwf	fsr2l,c
 10255  01D3E2  0E00               	movlw	0
 10256  01D3E4  2035               	addwfc	(btemp+11)^0,w,c
 10257  01D3E6  6EDA               	movwf	fsr2h,c
 10258  01D3E8  0E01               	movlw	1
 10259  01D3EA  6EDF               	movwf	indf2,c
 10260                           
 10261                           ;hid.c: 32:   h->wait_calib = 1;
 10262                           ;stkvar	_h @ sp[(0)+-2]
 10263  01D3EC  0EFE               	movlw	-2
 10264  01D3EE  006F FF8C  F034    	movff	plusw1,btemp+10
 10265  01D3F4  0EFF               	movlw	-1
 10266  01D3F6  006F FF8C  F035    	movff	plusw1,btemp+11
 10267  01D3FC  0E06               	movlw	6
 10268  01D3FE  2434               	addwf	(btemp+10)^0,w,c
 10269  01D400  6ED9               	movwf	fsr2l,c
 10270  01D402  0E00               	movlw	0
 10271  01D404  2035               	addwfc	(btemp+11)^0,w,c
 10272  01D406  6EDA               	movwf	fsr2h,c
 10273  01D408  0E01               	movlw	1
 10274  01D40A  6EDF               	movwf	indf2,c
 10275                           
 10276                           ;hid.c: 33:   h->select_p = SW_OFF;
 10277                           ;stkvar	_h @ sp[(0)+-2]
 10278  01D40C  0EFE               	movlw	-2
 10279  01D40E  006F FF8C  F034    	movff	plusw1,btemp+10
 10280  01D414  0EFF               	movlw	-1
 10281  01D416  006F FF8C  F035    	movff	plusw1,btemp+11
 10282  01D41C  0E03               	movlw	3
 10283  01D41E  2434               	addwf	(btemp+10)^0,w,c
 10284  01D420  6ED9               	movwf	fsr2l,c
 10285  01D422  0E00               	movlw	0
 10286  01D424  2035               	addwfc	(btemp+11)^0,w,c
 10287  01D426  6EDA               	movwf	fsr2h,c
 10288  01D428  0E00               	movlw	0
 10289  01D42A  6EDF               	movwf	indf2,c
 10290                           
 10291                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10292                           ;stkvar	_h @ sp[(0)+-2]
 10293  01D42C  0EFE               	movlw	-2
 10294  01D42E  006F FF8C  F034    	movff	plusw1,btemp+10
 10295  01D434  0EFF               	movlw	-1
 10296  01D436  006F FF8C  F035    	movff	plusw1,btemp+11
 10297  01D43C  0E05               	movlw	5
 10298  01D43E  2434               	addwf	(btemp+10)^0,w,c
 10299  01D440  6ED9               	movwf	fsr2l,c
 10300  01D442  0E00               	movlw	0
 10301  01D444  2035               	addwfc	(btemp+11)^0,w,c
 10302  01D446  6EDA               	movwf	fsr2h,c
 10303  01D448  0E00               	movlw	0
 10304  01D44A  6EDF               	movwf	indf2,c
 10305                           
 10306                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10307                           ;stkvar	_h @ sp[(0)+-2]
 10308  01D44C  0EFE               	movlw	-2
 10309  01D44E  006F FF8C  F034    	movff	plusw1,btemp+10
 10310  01D454  0EFF               	movlw	-1
 10311  01D456  006F FF8C  F035    	movff	plusw1,btemp+11
 10312  01D45C  0E07               	movlw	7
 10313  01D45E  2434               	addwf	(btemp+10)^0,w,c
 10314  01D460  6ED9               	movwf	fsr2l,c
 10315  01D462  0E00               	movlw	0
 10316  01D464  2035               	addwfc	(btemp+11)^0,w,c
 10317  01D466  6EDA               	movwf	fsr2h,c
 10318  01D468  0E00               	movlw	0
 10319  01D46A  D06A               	goto	L5
 10320  01D46C                     l17741:
 10321                           
 10322                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10323                           ;stkvar	_h @ sp[(0)+-2]
 10324  01D46C  0EFE               	movlw	-2
 10325  01D46E  006F FF8C  F034    	movff	plusw1,btemp+10
 10326  01D474  0EFF               	movlw	-1
 10327  01D476  006F FF8C  F035    	movff	plusw1,btemp+11
 10328  01D47C  0E02               	movlw	2
 10329  01D47E  2434               	addwf	(btemp+10)^0,w,c
 10330  01D480  6ED9               	movwf	fsr2l,c
 10331  01D482  0E00               	movlw	0
 10332  01D484  2035               	addwfc	(btemp+11)^0,w,c
 10333  01D486  6EDA               	movwf	fsr2h,c
 10334  01D488  50DF               	movf	indf2,w,c
 10335  01D48A  A4D8               	btfss	status,2,c
 10336  01D48C  D076               	goto	l2289
 10337                           
 10338                           ;stkvar	_h @ sp[(0)+-2]
 10339  01D48E  0EFE               	movlw	-2
 10340  01D490  006F FF8C  F034    	movff	plusw1,btemp+10
 10341  01D496  0EFF               	movlw	-1
 10342  01D498  006F FF8C  F035    	movff	plusw1,btemp+11
 10343  01D49E  0E03               	movlw	3
 10344  01D4A0  2434               	addwf	(btemp+10)^0,w,c
 10345  01D4A2  6ED9               	movwf	fsr2l,c
 10346  01D4A4  0E00               	movlw	0
 10347  01D4A6  2035               	addwfc	(btemp+11)^0,w,c
 10348  01D4A8  6EDA               	movwf	fsr2h,c
 10349  01D4AA  50DF               	movf	indf2,w,c
 10350  01D4AC  A4D8               	btfss	status,2,c
 10351  01D4AE  D065               	goto	l2289
 10352                           
 10353                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10354                           ;stkvar	_h @ sp[(0)+-2]
 10355  01D4B0  0EFE               	movlw	-2
 10356  01D4B2  006F FF8C  F034    	movff	plusw1,btemp+10
 10357  01D4B8  0EFF               	movlw	-1
 10358  01D4BA  006F FF8C  F035    	movff	plusw1,btemp+11
 10359  01D4C0  0E08               	movlw	8
 10360  01D4C2  2434               	addwf	(btemp+10)^0,w,c
 10361  01D4C4  6ED9               	movwf	fsr2l,c
 10362  01D4C6  0E00               	movlw	0
 10363  01D4C8  2035               	addwfc	(btemp+11)^0,w,c
 10364  01D4CA  6EDA               	movwf	fsr2h,c
 10365                           
 10366                           ;stkvar	_h @ sp[(0)+-2]
 10367  01D4CC  0EFE               	movlw	-2
 10368  01D4CE  006F FF8C  F034    	movff	plusw1,btemp+10
 10369  01D4D4  0EFF               	movlw	-1
 10370  01D4D6  006F FF8C  F035    	movff	plusw1,btemp+11
 10371  01D4DC  0E08               	movlw	8
 10372  01D4DE  2434               	addwf	(btemp+10)^0,w,c
 10373  01D4E0  6EE9               	movwf	fsr0l,c
 10374  01D4E2  0E00               	movlw	0
 10375  01D4E4  2035               	addwfc	(btemp+11)^0,w,c
 10376  01D4E6  6EEA               	movwf	fsr0h,c
 10377  01D4E8  2AEF               	incf	indf0,f,c
 10378  01D4EA  50EF               	movf	indf0,w,c
 10379  01D4EC  0B03               	andlw	3
 10380  01D4EE  6EDF               	movwf	indf2,c
 10381                           
 10382                           ;hid.c: 41:    h->hid_display = h->sequence;
 10383                           ;stkvar	_h @ sp[(0)+-2]
 10384  01D4F0  0EFE               	movlw	-2
 10385  01D4F2  006F FF8C  F034    	movff	plusw1,btemp+10
 10386  01D4F8  0EFF               	movlw	-1
 10387  01D4FA  006F FF8C  F035    	movff	plusw1,btemp+11
 10388  01D500  0E08               	movlw	8
 10389  01D502  2434               	addwf	(btemp+10)^0,w,c
 10390  01D504  6ED9               	movwf	fsr2l,c
 10391  01D506  0E00               	movlw	0
 10392  01D508  2035               	addwfc	(btemp+11)^0,w,c
 10393  01D50A  6EDA               	movwf	fsr2h,c
 10394                           
 10395                           ;stkvar	_h @ sp[(0)+-2]
 10396  01D50C  0EFE               	movlw	-2
 10397  01D50E  006F FF8F FFE9     	movff	plusw1,fsr0l
 10398  01D514  0EFF               	movlw	-1
 10399  01D516  006F FF8F FFEA     	movff	plusw1,fsr0h
 10400  01D51C  006F FF7F FFEF     	movff	indf2,indf0
 10401                           
 10402                           ;hid.c: 42:    h->wait_select = 1;
 10403                           ;stkvar	_h @ sp[(0)+-2]
 10404  01D522  0EFE               	movlw	-2
 10405  01D524  006F FF8C  F034    	movff	plusw1,btemp+10
 10406  01D52A  0EFF               	movlw	-1
 10407  01D52C  006F FF8C  F035    	movff	plusw1,btemp+11
 10408  01D532  0E02               	movlw	2
 10409  01D534  2434               	addwf	(btemp+10)^0,w,c
 10410  01D536  6ED9               	movwf	fsr2l,c
 10411  01D538  0E00               	movlw	0
 10412  01D53A  2035               	addwfc	(btemp+11)^0,w,c
 10413  01D53C  6EDA               	movwf	fsr2h,c
 10414  01D53E  0E01               	movlw	1
 10415  01D540                     L5:
 10416  01D540  6EDF               	movwf	indf2,c
 10417  01D542  D01B               	goto	l2289
 10418  01D544                     l17751:
 10419                           
 10420                           ;stkvar	_h @ sp[(0)+-2]
 10421  01D544  0EFE               	movlw	-2
 10422  01D546  006F FF8C  F034    	movff	plusw1,btemp+10
 10423  01D54C  0EFF               	movlw	-1
 10424  01D54E  006F FF8C  F035    	movff	plusw1,btemp+11
 10425  01D554  0E01               	movlw	1
 10426  01D556  2434               	addwf	(btemp+10)^0,w,c
 10427  01D558  6ED9               	movwf	fsr2l,c
 10428  01D55A  0E00               	movlw	0
 10429  01D55C  2035               	addwfc	(btemp+11)^0,w,c
 10430  01D55E  6EDA               	movwf	fsr2h,c
 10431  01D560  50DF               	movf	indf2,w,c
 10432  01D562  6E34               	movwf	(btemp+10)^0,c
 10433  01D564  6A35               	clrf	(btemp+11)^0,c
 10434                           
 10435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10436                           ; Switch size 1, requested type "simple"
 10437                           ; Number of cases is 1, Range of values is 0 to 0
 10438                           ; switch strategies available:
 10439                           ; Name         Instructions Cycles
 10440                           ; simple_byte            4     3 (average)
 10441                           ;	Chosen strategy is simple_byte
 10442  01D566  5035               	movf	(btemp+11)^0,w,c
 10443  01D568  0A00               	xorlw	0	; case 0
 10444  01D56A  A4D8               	btfss	status,2,c
 10445  01D56C  D77F               	goto	l17741
 10446                           
 10447                           ; Switch size 1, requested type "simple"
 10448                           ; Number of cases is 2, Range of values is 0 to 1
 10449                           ; switch strategies available:
 10450                           ; Name         Instructions Cycles
 10451                           ; simple_byte            7     4 (average)
 10452                           ;	Chosen strategy is simple_byte
 10453  01D56E  5034               	movf	(btemp+10)^0,w,c
 10454  01D570  0A00               	xorlw	0	; case 0
 10455  01D572  B4D8               	btfsc	status,2,c
 10456  01D574  D701               	goto	l17725
 10457  01D576  0A01               	xorlw	1	; case 1
 10458  01D578  D779               	goto	l17741
 10459  01D57A                     l2289:
 10460                           
 10461                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10462  01D57A  52E5               	movf	postdec1,f,c
 10463  01D57C  52E5               	movf	postdec1,f,c
 10464  01D57E  0012               	return		;funcret
 10465  01D580                     __end_of_hid_display:
 10466                           	opt callstack 0
 10467                           
 10468 ;; *************** function _hid_input *****************
 10469 ;; Defined at:
 10470 ;;		line 3 in file "hid.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  h               2  [STACK] PTR struct H_data
 10473 ;;		 -> H(9), 
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;		None
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  2  [STACK] PTR struct H_data
 10478 ;; Registers used:
 10479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/39
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10489 ;;Total ram usage:        0 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:   16
 10492 ;; This function calls:
 10493 ;;		_get_switch
 10494 ;; This function is called by:
 10495 ;;		_hid_display
 10496 ;; This function uses a reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text24
 10500  01F748                     __ptext24:
 10501                           	opt callstack 0
 10502  01F748                     _hid_input:
 10503                           	opt callstack 13
 10504                           
 10505                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10506                           
 10507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10508                           ;incstack = 0
 10509  01F748  0E02               	movlw	2
 10510  01F74A  6EE6               	movwf	postinc1,c
 10511  01F74C  ECB9  F013         	call	_get_switch	;wreg free
 10512  01F750  502A               	movf	btemp^0,w,c
 10513  01F752  B4D8               	btfsc	status,2,c
 10514  01F754  D02C               	goto	l17409
 10515                           
 10516                           ;hid.c: 6:   h->wait_select = 0;
 10517                           ;stkvar	_h @ sp[(0)+-2]
 10518  01F756  0EFE               	movlw	-2
 10519  01F758  006F FF8C  F034    	movff	plusw1,btemp+10
 10520  01F75E  0EFF               	movlw	-1
 10521  01F760  006F FF8C  F035    	movff	plusw1,btemp+11
 10522  01F766  0E02               	movlw	2
 10523  01F768  2434               	addwf	(btemp+10)^0,w,c
 10524  01F76A  6ED9               	movwf	fsr2l,c
 10525  01F76C  0E00               	movlw	0
 10526  01F76E  2035               	addwfc	(btemp+11)^0,w,c
 10527  01F770  6EDA               	movwf	fsr2h,c
 10528  01F772  0E00               	movlw	0
 10529  01F774  6EDF               	movwf	indf2,c
 10530                           
 10531                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10532  01F776  0E02               	movlw	2
 10533  01F778  6EE6               	movwf	postinc1,c
 10534  01F77A  ECB9  F013         	call	_get_switch	;wreg free
 10535  01F77E  502A               	movf	btemp^0,w,c
 10536  01F780  B4D8               	btfsc	status,2,c
 10537  01F782  D003               	goto	u17150
 10538  01F784  6A35               	clrf	(btemp+11)^0,c
 10539  01F786  2A35               	incf	(btemp+11)^0,f,c
 10540  01F788  D001               	goto	u17168
 10541  01F78A                     u17150:
 10542  01F78A  6A35               	clrf	(btemp+11)^0,c
 10543  01F78C                     u17168:
 10544                           
 10545                           ;stkvar	_h @ sp[(0)+-2]
 10546  01F78C  0EFE               	movlw	-2
 10547  01F78E  006F FF8C  F032    	movff	plusw1,btemp+8
 10548  01F794  0EFF               	movlw	-1
 10549  01F796  006F FF8C  F033    	movff	plusw1,btemp+9
 10550  01F79C  0E03               	movlw	3
 10551  01F79E  2432               	addwf	(btemp+8)^0,w,c
 10552  01F7A0  6ED9               	movwf	fsr2l,c
 10553  01F7A2  0E00               	movlw	0
 10554  01F7A4  2033               	addwfc	(btemp+9)^0,w,c
 10555  01F7A6  6EDA               	movwf	fsr2h,c
 10556  01F7A8  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10557  01F7AE                     l17409:
 10558                           
 10559                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10560  01F7AE  0E03               	movlw	3
 10561  01F7B0  6EE6               	movwf	postinc1,c
 10562  01F7B2  ECB9  F013         	call	_get_switch	;wreg free
 10563  01F7B6  502A               	movf	btemp^0,w,c
 10564  01F7B8  B4D8               	btfsc	status,2,c
 10565  01F7BA  D02C               	goto	l17415
 10566                           
 10567                           ;hid.c: 11:   h->wait_enter = 0;
 10568                           ;stkvar	_h @ sp[(0)+-2]
 10569  01F7BC  0EFE               	movlw	-2
 10570  01F7BE  006F FF8C  F034    	movff	plusw1,btemp+10
 10571  01F7C4  0EFF               	movlw	-1
 10572  01F7C6  006F FF8C  F035    	movff	plusw1,btemp+11
 10573  01F7CC  0E04               	movlw	4
 10574  01F7CE  2434               	addwf	(btemp+10)^0,w,c
 10575  01F7D0  6ED9               	movwf	fsr2l,c
 10576  01F7D2  0E00               	movlw	0
 10577  01F7D4  2035               	addwfc	(btemp+11)^0,w,c
 10578  01F7D6  6EDA               	movwf	fsr2h,c
 10579  01F7D8  0E00               	movlw	0
 10580  01F7DA  6EDF               	movwf	indf2,c
 10581                           
 10582                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 10583  01F7DC  0E03               	movlw	3
 10584  01F7DE  6EE6               	movwf	postinc1,c
 10585  01F7E0  ECB9  F013         	call	_get_switch	;wreg free
 10586  01F7E4  502A               	movf	btemp^0,w,c
 10587  01F7E6  B4D8               	btfsc	status,2,c
 10588  01F7E8  D003               	goto	u17180
 10589  01F7EA  6A35               	clrf	(btemp+11)^0,c
 10590  01F7EC  2A35               	incf	(btemp+11)^0,f,c
 10591  01F7EE  D001               	goto	u17198
 10592  01F7F0                     u17180:
 10593  01F7F0  6A35               	clrf	(btemp+11)^0,c
 10594  01F7F2                     u17198:
 10595                           
 10596                           ;stkvar	_h @ sp[(0)+-2]
 10597  01F7F2  0EFE               	movlw	-2
 10598  01F7F4  006F FF8C  F032    	movff	plusw1,btemp+8
 10599  01F7FA  0EFF               	movlw	-1
 10600  01F7FC  006F FF8C  F033    	movff	plusw1,btemp+9
 10601  01F802  0E05               	movlw	5
 10602  01F804  2432               	addwf	(btemp+8)^0,w,c
 10603  01F806  6ED9               	movwf	fsr2l,c
 10604  01F808  0E00               	movlw	0
 10605  01F80A  2033               	addwfc	(btemp+9)^0,w,c
 10606  01F80C  6EDA               	movwf	fsr2h,c
 10607  01F80E  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10608  01F814                     l17415:
 10609                           
 10610                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 10611  01F814  0E04               	movlw	4
 10612  01F816  6EE6               	movwf	postinc1,c
 10613  01F818  ECB9  F013         	call	_get_switch	;wreg free
 10614  01F81C  502A               	movf	btemp^0,w,c
 10615  01F81E  B4D8               	btfsc	status,2,c
 10616  01F820  D02C               	goto	l2280
 10617                           
 10618                           ;hid.c: 16:   h->wait_calib = 0;
 10619                           ;stkvar	_h @ sp[(0)+-2]
 10620  01F822  0EFE               	movlw	-2
 10621  01F824  006F FF8C  F034    	movff	plusw1,btemp+10
 10622  01F82A  0EFF               	movlw	-1
 10623  01F82C  006F FF8C  F035    	movff	plusw1,btemp+11
 10624  01F832  0E06               	movlw	6
 10625  01F834  2434               	addwf	(btemp+10)^0,w,c
 10626  01F836  6ED9               	movwf	fsr2l,c
 10627  01F838  0E00               	movlw	0
 10628  01F83A  2035               	addwfc	(btemp+11)^0,w,c
 10629  01F83C  6EDA               	movwf	fsr2h,c
 10630  01F83E  0E00               	movlw	0
 10631  01F840  6EDF               	movwf	indf2,c
 10632                           
 10633                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 10634  01F842  0E04               	movlw	4
 10635  01F844  6EE6               	movwf	postinc1,c
 10636  01F846  ECB9  F013         	call	_get_switch	;wreg free
 10637  01F84A  502A               	movf	btemp^0,w,c
 10638  01F84C  B4D8               	btfsc	status,2,c
 10639  01F84E  D003               	goto	u17210
 10640  01F850  6A35               	clrf	(btemp+11)^0,c
 10641  01F852  2A35               	incf	(btemp+11)^0,f,c
 10642  01F854  D001               	goto	u17228
 10643  01F856                     u17210:
 10644  01F856  6A35               	clrf	(btemp+11)^0,c
 10645  01F858                     u17228:
 10646                           
 10647                           ;stkvar	_h @ sp[(0)+-2]
 10648  01F858  0EFE               	movlw	-2
 10649  01F85A  006F FF8C  F032    	movff	plusw1,btemp+8
 10650  01F860  0EFF               	movlw	-1
 10651  01F862  006F FF8C  F033    	movff	plusw1,btemp+9
 10652  01F868  0E07               	movlw	7
 10653  01F86A  2432               	addwf	(btemp+8)^0,w,c
 10654  01F86C  6ED9               	movwf	fsr2l,c
 10655  01F86E  0E00               	movlw	0
 10656  01F870  2033               	addwfc	(btemp+9)^0,w,c
 10657  01F872  6EDA               	movwf	fsr2h,c
 10658  01F874  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10659  01F87A                     l2280:
 10660                           
 10661                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 10662  01F87A  52E5               	movf	postdec1,f,c
 10663  01F87C  52E5               	movf	postdec1,f,c
 10664  01F87E  0012               	return		;funcret
 10665  01F880                     __end_of_hid_input:
 10666                           	opt callstack 0
 10667                           
 10668 ;; *************** function _esr_check *****************
 10669 ;; Defined at:
 10670 ;;		line 197 in file "bsoc.c"
 10671 ;; Parameters:    Size  Location     Type
 10672 ;;  fsm             1  [STACK] const unsigned char 
 10673 ;; Auto vars:     Size  Location     Type
 10674 ;;		None
 10675 ;; Return value:  Size  Location     Type
 10676 ;;                  4  [STACK] float 
 10677 ;; Registers used:
 10678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10679 ;; Tracked objects:
 10680 ;;		On entry : 0/0
 10681 ;;		On exit  : 0/0
 10682 ;;		Unchanged: 0/0
 10683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10688 ;;Total ram usage:        0 bytes
 10689 ;; Hardware stack levels used:    1
 10690 ;; Hardware stack levels required when called:   18
 10691 ;; This function calls:
 10692 ;;		_StartTimer
 10693 ;;		_TimerDone
 10694 ;;		___fldiv
 10695 ;;		___flsub
 10696 ;;		_conv_raw_result
 10697 ;;		_fabsf
 10698 ;;		_set_load_relay_one
 10699 ;;		_set_load_relay_two
 10700 ;;		_update_adc_result
 10701 ;; This function is called by:
 10702 ;;		_main
 10703 ;; This function uses a reentrant model
 10704 ;;
 10705                           
 10706                           	psect	text25
 10707  01B8C0                     __ptext25:
 10708                           	opt callstack 0
 10709  01B8C0                     _esr_check:
 10710                           	opt callstack 12
 10711                           
 10712                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 10713                           ;stkvar	_fsm @ sp[(0)+-1]
 10714                           
 10715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10716                           ;incstack = 0
 10717  01B8C0  0EFF               	movlw	-1
 10718  01B8C2  50E3               	movf	plusw1,w,c
 10719  01B8C4  B4D8               	btfsc	status,2,c
 10720  01B8C6  D149               	goto	l14387
 10721                           
 10722                           ;bsoc.c: 202:   esr_state = 0;
 10723  01B8C8  0100               	movlb	0	; () banked
 10724  01B8CA  6BC6               	clrf	esr_check@esr_state& (0+255),b
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;bsoc.c: 203:   return -10.0;
 10728  01B8CC  0E00               	movlw	0
 10729  01B8CE  6E2A               	movwf	btemp^0,c
 10730  01B8D0  0E00               	movlw	0
 10731  01B8D2  6E2B               	movwf	(btemp+1)^0,c
 10732  01B8D4  0E20               	movlw	32
 10733  01B8D6  6E2C               	movwf	(btemp+2)^0,c
 10734  01B8D8  0EC1               	movlw	193
 10735  01B8DA  D15B               	goto	L6
 10736  01B8DC                     l14319:
 10737                           
 10738                           ; BSR set to: 0
 10739                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 10740  01B8DC  0E10               	movlw	16
 10741  01B8DE  6EE6               	movwf	postinc1,c
 10742  01B8E0  0E27               	movlw	39
 10743  01B8E2  6EE6               	movwf	postinc1,c
 10744  01B8E4  0E0C               	movlw	12
 10745  01B8E6  6EE6               	movwf	postinc1,c
 10746  01B8E8  ECB3  F011         	call	_StartTimer	;wreg free
 10747  01B8EC                     l14321:
 10748                           
 10749                           ;bsoc.c: 209:   esr_state++;
 10750  01B8EC  0100               	movlb	0	; () banked
 10751  01B8EE  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 10752                           
 10753                           ;bsoc.c: 210:   break;
 10754  01B8F0  D149               	goto	l14389
 10755  01B8F2                     l14323:
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;bsoc.c: 215:   set_load_relay_one(0);
 10759  01B8F2  0E00               	movlw	0
 10760  01B8F4  6EE6               	movwf	postinc1,c
 10761  01B8F6  ECCD  F016         	call	_set_load_relay_one	;wreg free
 10762                           
 10763                           ;bsoc.c: 216:   set_load_relay_two(0);
 10764  01B8FA  0E00               	movlw	0
 10765  01B8FC  6EE6               	movwf	postinc1,c
 10766  01B8FE  ECC5  F016         	call	_set_load_relay_two	;wreg free
 10767                           
 10768                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 10769  01B902  0E0C               	movlw	12
 10770  01B904  6EE6               	movwf	postinc1,c
 10771  01B906  EC25  F014         	call	_TimerDone	;wreg free
 10772  01B90A  502A               	movf	btemp^0,w,c
 10773  01B90C  B4D8               	btfsc	status,2,c
 10774  01B90E  D009               	goto	l14329
 10775                           
 10776                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 10777  01B910  0E10               	movlw	16
 10778  01B912  6EE6               	movwf	postinc1,c
 10779  01B914  0E27               	movlw	39
 10780  01B916  6EE6               	movwf	postinc1,c
 10781  01B918  0E0C               	movlw	12
 10782  01B91A  6EE6               	movwf	postinc1,c
 10783  01B91C  ECB3  F011         	call	_StartTimer	;wreg free
 10784                           
 10785                           ;bsoc.c: 219:   } else {
 10786  01B920  D006               	goto	l14333
 10787  01B922                     l14329:
 10788                           
 10789                           ;bsoc.c: 220:    return -2.0;
 10790  01B922  0E00               	movlw	0
 10791  01B924  6E2A               	movwf	btemp^0,c
 10792  01B926  0E00               	movlw	0
 10793  01B928  6E2B               	movwf	(btemp+1)^0,c
 10794  01B92A  0E00               	movlw	0
 10795  01B92C  D066               	goto	L8
 10796  01B92E                     l14333:
 10797                           
 10798                           ;bsoc.c: 225:   update_adc_result();
 10799  01B92E  EC51  F012         	call	_update_adc_result	;wreg free
 10800                           
 10801                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 10802  01B932  0E00               	movlw	0
 10803  01B934  6EE6               	movwf	postinc1,c
 10804  01B936  0E04               	movlw	4
 10805  01B938  6EE6               	movwf	postinc1,c
 10806  01B93A  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 10807  01B93E  0060  F0A8  FA31   	movff	btemp,_C+306	;volatile
 10808  01B944  0060  F0AC  FA32   	movff	btemp+1,_C+307	;volatile
 10809  01B94A  0060  F0B0  FA33   	movff	btemp+2,_C+308	;volatile
 10810  01B950  0060  F0B4  FA34   	movff	btemp+3,_C+309	;volatile
 10811  01B956  D7CA               	goto	l14321
 10812  01B958                     l14339:
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;bsoc.c: 230:   set_load_relay_one(1);
 10816  01B958  0E01               	movlw	1
 10817  01B95A  6EE6               	movwf	postinc1,c
 10818  01B95C  ECCD  F016         	call	_set_load_relay_one	;wreg free
 10819                           
 10820                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 10821  01B960  0E0C               	movlw	12
 10822  01B962  6EE6               	movwf	postinc1,c
 10823  01B964  EC25  F014         	call	_TimerDone	;wreg free
 10824  01B968  502A               	movf	btemp^0,w,c
 10825  01B96A  B4D8               	btfsc	status,2,c
 10826  01B96C  D009               	goto	l14345
 10827                           
 10828                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 10829  01B96E  0E10               	movlw	16
 10830  01B970  6EE6               	movwf	postinc1,c
 10831  01B972  0E27               	movlw	39
 10832  01B974  6EE6               	movwf	postinc1,c
 10833  01B976  0E0C               	movlw	12
 10834  01B978  6EE6               	movwf	postinc1,c
 10835  01B97A  ECB3  F011         	call	_StartTimer	;wreg free
 10836                           
 10837                           ;bsoc.c: 233:   } else {
 10838  01B97E  D006               	goto	l14349
 10839  01B980                     l14345:
 10840                           
 10841                           ;bsoc.c: 234:    return -3.0;
 10842  01B980  0E00               	movlw	0
 10843  01B982  6E2A               	movwf	btemp^0,c
 10844  01B984  0E00               	movlw	0
 10845  01B986  6E2B               	movwf	(btemp+1)^0,c
 10846  01B988  0E40               	movlw	64
 10847  01B98A  D037               	goto	L8
 10848  01B98C                     l14349:
 10849                           
 10850                           ;bsoc.c: 237:   update_adc_result();
 10851  01B98C  EC51  F012         	call	_update_adc_result	;wreg free
 10852                           
 10853                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 10854  01B990  0E00               	movlw	0
 10855  01B992  6EE6               	movwf	postinc1,c
 10856  01B994  0E04               	movlw	4
 10857  01B996  6EE6               	movwf	postinc1,c
 10858  01B998  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 10859  01B99C  0060  F0A8  FA35   	movff	btemp,_C+310	;volatile
 10860  01B9A2  0060  F0AC  FA36   	movff	btemp+1,_C+311	;volatile
 10861  01B9A8  0060  F0B0  FA37   	movff	btemp+2,_C+312	;volatile
 10862  01B9AE  0060  F0B4  FA38   	movff	btemp+3,_C+313	;volatile
 10863                           
 10864                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 10865  01B9B4  0E00               	movlw	0
 10866  01B9B6  6EE6               	movwf	postinc1,c
 10867  01B9B8  0E00               	movlw	0
 10868  01B9BA  6EE6               	movwf	postinc1,c
 10869  01B9BC  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 10870  01B9C0  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 10871  01B9C6  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 10872  01B9CC  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 10873  01B9D2  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 10874  01B9D8  D789               	goto	l14321
 10875  01B9DA                     l14357:
 10876                           
 10877                           ; BSR set to: 0
 10878                           ;bsoc.c: 243:   set_load_relay_two(1);
 10879  01B9DA  0E01               	movlw	1
 10880  01B9DC  6EE6               	movwf	postinc1,c
 10881  01B9DE  ECC5  F016         	call	_set_load_relay_two	;wreg free
 10882                           
 10883                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 10884  01B9E2  0E0C               	movlw	12
 10885  01B9E4  6EE6               	movwf	postinc1,c
 10886  01B9E6  EC25  F014         	call	_TimerDone	;wreg free
 10887  01B9EA  502A               	movf	btemp^0,w,c
 10888  01B9EC  A4D8               	btfss	status,2,c
 10889  01B9EE  D008               	goto	l14365
 10890                           
 10891                           ;bsoc.c: 245:    return -4.0;
 10892  01B9F0  0E00               	movlw	0
 10893  01B9F2  6E2A               	movwf	btemp^0,c
 10894  01B9F4  0E00               	movlw	0
 10895  01B9F6  6E2B               	movwf	(btemp+1)^0,c
 10896  01B9F8  0E80               	movlw	128
 10897  01B9FA                     L8:
 10898  01B9FA  6E2C               	movwf	(btemp+2)^0,c
 10899  01B9FC  0EC0               	movlw	192
 10900  01B9FE  D0C9               	goto	L6
 10901  01BA00                     l14365:
 10902                           
 10903                           ;bsoc.c: 247:   update_adc_result();
 10904  01BA00  EC51  F012         	call	_update_adc_result	;wreg free
 10905                           
 10906                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 10907  01BA04  0E00               	movlw	0
 10908  01BA06  6EE6               	movwf	postinc1,c
 10909  01BA08  0E04               	movlw	4
 10910  01BA0A  6EE6               	movwf	postinc1,c
 10911  01BA0C  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 10912  01BA10  0060  F0A8  FA39   	movff	btemp,_C+314	;volatile
 10913  01BA16  0060  F0AC  FA3A   	movff	btemp+1,_C+315	;volatile
 10914  01BA1C  0060  F0B0  FA3B   	movff	btemp+2,_C+316	;volatile
 10915  01BA22  0060  F0B4  FA3C   	movff	btemp+3,_C+317	;volatile
 10916                           
 10917                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 10918  01BA28  0E00               	movlw	0
 10919  01BA2A  6EE6               	movwf	postinc1,c
 10920  01BA2C  0E00               	movlw	0
 10921  01BA2E  6EE6               	movwf	postinc1,c
 10922  01BA30  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 10923  01BA34  0060  F0A8  FA2D   	movff	btemp,_C+302	;volatile
 10924  01BA3A  0060  F0AC  FA2E   	movff	btemp+1,_C+303	;volatile
 10925  01BA40  0060  F0B0  FA2F   	movff	btemp+2,_C+304	;volatile
 10926  01BA46  0060  F0B4  FA30   	movff	btemp+3,_C+305	;volatile
 10927                           
 10928                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 10929  01BA4C  EE22  F22D         	lfsr	2,_C+302	;volatile
 10930  01BA50  006F FF7B FFE6     	movff	postinc2,postinc1
 10931  01BA56  006F FF7B FFE6     	movff	postinc2,postinc1
 10932  01BA5C  006F FF7B FFE6     	movff	postinc2,postinc1
 10933  01BA62  006F FF7B FFE6     	movff	postinc2,postinc1
 10934  01BA68  EE22  F229         	lfsr	2,_C+298	;volatile
 10935  01BA6C  006F FF7B FFE6     	movff	postinc2,postinc1
 10936  01BA72  006F FF7B FFE6     	movff	postinc2,postinc1
 10937  01BA78  006F FF7B FFE6     	movff	postinc2,postinc1
 10938  01BA7E  006F FF7B FFE6     	movff	postinc2,postinc1
 10939  01BA84  EC0D  F011         	call	___flsub	;wreg free
 10940  01BA88  0060  F0AB  FFE6   	movff	btemp,postinc1
 10941  01BA8E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10942  01BA94  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10943  01BA9A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10944  01BAA0  EE22  F239         	lfsr	2,_C+314	;volatile
 10945  01BAA4  006F FF7B FFE6     	movff	postinc2,postinc1
 10946  01BAAA  006F FF7B FFE6     	movff	postinc2,postinc1
 10947  01BAB0  006F FF7B FFE6     	movff	postinc2,postinc1
 10948  01BAB6  006F FF7B FFE6     	movff	postinc2,postinc1
 10949  01BABC  EE22  F235         	lfsr	2,_C+310	;volatile
 10950  01BAC0  006F FF7B FFE6     	movff	postinc2,postinc1
 10951  01BAC6  006F FF7B FFE6     	movff	postinc2,postinc1
 10952  01BACC  006F FF7B FFE6     	movff	postinc2,postinc1
 10953  01BAD2  006F FF7B FFE6     	movff	postinc2,postinc1
 10954  01BAD8  EC0D  F011         	call	___flsub	;wreg free
 10955  01BADC  0060  F0AB  FFE6   	movff	btemp,postinc1
 10956  01BAE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10957  01BAE8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10958  01BAEE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10959  01BAF4  EC57  F0C3         	call	___fldiv	;wreg free
 10960  01BAF8  0060  F0AB  FFE6   	movff	btemp,postinc1
 10961  01BAFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10962  01BB04  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10963  01BB0A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10964  01BB10  EC81  F006         	call	_fabsf	;wreg free
 10965  01BB14  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 10966  01BB1A  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 10967  01BB20  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 10968  01BB26  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 10969                           
 10970                           ;bsoc.c: 252:   set_load_relay_one(0);
 10971  01BB2C  0E00               	movlw	0
 10972  01BB2E  6EE6               	movwf	postinc1,c
 10973  01BB30  ECCD  F016         	call	_set_load_relay_one	;wreg free
 10974                           
 10975                           ;bsoc.c: 253:   set_load_relay_two(0);
 10976  01BB34  0E00               	movlw	0
 10977  01BB36  6EE6               	movwf	postinc1,c
 10978  01BB38  ECC5  F016         	call	_set_load_relay_two	;wreg free
 10979                           
 10980                           ;bsoc.c: 254:   esr_state = 0;
 10981  01BB3C  0100               	movlb	0	; () banked
 10982  01BB3E  6BC6               	clrf	esr_check@esr_state& (0+255),b
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;bsoc.c: 255:   return C.esr;
 10986  01BB40  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 10987  01BB46  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 10988  01BB4C  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 10989  01BB52  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 10990  01BB58  D01D               	goto	l2405
 10991  01BB5A                     l14387:
 10992  01BB5A  0100               	movlb	0	; () banked
 10993  01BB5C  51C6               	movf	esr_check@esr_state& (0+255),w,b
 10994  01BB5E  6E34               	movwf	(btemp+10)^0,c
 10995  01BB60  6A35               	clrf	(btemp+11)^0,c
 10996                           
 10997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10998                           ; Switch size 1, requested type "simple"
 10999                           ; Number of cases is 1, Range of values is 0 to 0
 11000                           ; switch strategies available:
 11001                           ; Name         Instructions Cycles
 11002                           ; simple_byte            4     3 (average)
 11003                           ;	Chosen strategy is simple_byte
 11004  01BB62  5035               	movf	(btemp+11)^0,w,c
 11005  01BB64  0A00               	xorlw	0	; case 0
 11006  01BB66  A4D8               	btfss	status,2,c
 11007  01BB68  D00D               	goto	l14389
 11008                           
 11009                           ; BSR set to: 0
 11010                           ; Switch size 1, requested type "simple"
 11011                           ; Number of cases is 4, Range of values is 0 to 3
 11012                           ; switch strategies available:
 11013                           ; Name         Instructions Cycles
 11014                           ; simple_byte           13     7 (average)
 11015                           ;	Chosen strategy is simple_byte
 11016  01BB6A  5034               	movf	(btemp+10)^0,w,c
 11017  01BB6C  0A00               	xorlw	0	; case 0
 11018  01BB6E  B4D8               	btfsc	status,2,c
 11019  01BB70  D6B5               	goto	l14319
 11020  01BB72  0A01               	xorlw	1	; case 1
 11021  01BB74  B4D8               	btfsc	status,2,c
 11022  01BB76  D6BD               	goto	l14323
 11023  01BB78  0A03               	xorlw	3	; case 2
 11024  01BB7A  B4D8               	btfsc	status,2,c
 11025  01BB7C  D6ED               	goto	l14339
 11026  01BB7E  0A01               	xorlw	1	; case 3
 11027  01BB80  B4D8               	btfsc	status,2,c
 11028  01BB82  D72B               	goto	l14357
 11029  01BB84                     l14389:
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;bsoc.c: 260:  return -1.0;
 11033  01BB84  0E00               	movlw	0
 11034  01BB86  6E2A               	movwf	btemp^0,c
 11035  01BB88  0E00               	movlw	0
 11036  01BB8A  6E2B               	movwf	(btemp+1)^0,c
 11037  01BB8C  0E80               	movlw	128
 11038  01BB8E  6E2C               	movwf	(btemp+2)^0,c
 11039  01BB90  0EBF               	movlw	191
 11040  01BB92                     L6:
 11041  01BB92  6E2D               	movwf	(btemp+3)^0,c
 11042  01BB94                     l2405:
 11043                           
 11044                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11045  01BB94  52E5               	movf	postdec1,f,c
 11046  01BB96  0012               	return		;funcret
 11047  01BB98                     __end_of_esr_check:
 11048                           	opt callstack 0
 11049                           
 11050 ;; *************** function _update_adc_result *****************
 11051 ;; Defined at:
 11052 ;;		line 109 in file "daq.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;		None
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1  [STACK] _Bool 
 11059 ;; Registers used:
 11060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11070 ;;Total ram usage:        0 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:   17
 11073 ;; This function calls:
 11074 ;;		_StartTimer
 11075 ;;		_TimerDone
 11076 ;;		_check_adc_scan
 11077 ;;		_clear_adc_scan
 11078 ;;		_start_adc_scan
 11079 ;; This function is called by:
 11080 ;;		_esr_check
 11081 ;; This function uses a reentrant model
 11082 ;;
 11083                           
 11084                           	psect	text26
 11085  0024A2                     __ptext26:
 11086                           	opt callstack 0
 11087  0024A2                     _update_adc_result:
 11088                           	opt callstack 12
 11089                           
 11090                           ;daq.c: 111:  if (R.done) {
 11091                           
 11092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11093                           ;incstack = 0
 11094  0024A2  0101               	movlb	1	; () banked
 11095  0024A4  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11096  0024A6  B4D8               	btfsc	status,2,c
 11097  0024A8  0012               	return	
 11098                           
 11099                           ; BSR set to: 1
 11100                           ;daq.c: 112:   clear_adc_scan();
 11101  0024AA  EC44  F017         	call	_clear_adc_scan	;wreg free
 11102                           
 11103                           ; BSR set to: 1
 11104                           ;daq.c: 113:   start_adc_scan();
 11105  0024AE  ECCB  F00D         	call	_start_adc_scan	;wreg free
 11106                           
 11107                           ;daq.c: 114:   StartTimer(TMR_ADC, 200);
 11108  0024B2  0EC8               	movlw	200
 11109  0024B4  6EE6               	movwf	postinc1,c
 11110  0024B6  0E00               	movlw	0
 11111  0024B8  6EE6               	movwf	postinc1,c
 11112  0024BA  0E01               	movlw	1
 11113  0024BC  6EE6               	movwf	postinc1,c
 11114  0024BE  ECB3  F011         	call	_StartTimer	;wreg free
 11115  0024C2                     l13765:
 11116  0024C2  0E01               	movlw	1
 11117  0024C4  6EE6               	movwf	postinc1,c
 11118  0024C6  EC25  F014         	call	_TimerDone	;wreg free
 11119  0024CA  502A               	movf	btemp^0,w,c
 11120  0024CC  A4D8               	btfss	status,2,c
 11121  0024CE  0012               	return	
 11122  0024D0  EC2D  F017         	call	_check_adc_scan	;wreg free
 11123  0024D4  502A               	movf	btemp^0,w,c
 11124  0024D6  A4D8               	btfss	status,2,c
 11125  0024D8  0012               	return	
 11126  0024DA  D7F3               	goto	l13765
 11127  0024DC                     __end_of_update_adc_result:
 11128                           	opt callstack 0
 11129                           
 11130 ;; *************** function _check_adc_scan *****************
 11131 ;; Defined at:
 11132 ;;		line 93 in file "daq.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;		None
 11135 ;; Auto vars:     Size  Location     Type
 11136 ;;		None
 11137 ;; Return value:  Size  Location     Type
 11138 ;;                  1  [STACK] _Bool 
 11139 ;; Registers used:
 11140 ;;		btemp
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/2
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11150 ;;Total ram usage:        0 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; Hardware stack levels required when called:   15
 11153 ;; This function calls:
 11154 ;;		Nothing
 11155 ;; This function is called by:
 11156 ;;		_main
 11157 ;;		_update_adc_result
 11158 ;; This function uses a reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text27
 11162  002E5A                     __ptext27:
 11163                           	opt callstack 0
 11164  002E5A                     _check_adc_scan:
 11165                           	opt callstack 13
 11166                           
 11167                           ;daq.c: 95:  return R.done;
 11168                           
 11169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11170                           ;incstack = 0
 11171  002E5A  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11172                           
 11173                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11174  002E60  0012               	return		;funcret
 11175  002E62                     __end_of_check_adc_scan:
 11176                           	opt callstack 0
 11177                           
 11178 ;; *************** function _set_load_relay_two *****************
 11179 ;; Defined at:
 11180 ;;		line 131 in file "mbmc.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;  mode            1  [STACK] const _Bool 
 11183 ;; Auto vars:     Size  Location     Type
 11184 ;;		None
 11185 ;; Return value:  Size  Location     Type
 11186 ;;                  1  [STACK] void 
 11187 ;; Registers used:
 11188 ;;		wreg, fsr1l, fsr1h
 11189 ;; Tracked objects:
 11190 ;;		On entry : 0/0
 11191 ;;		On exit  : 0/0
 11192 ;;		Unchanged: 0/0
 11193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11198 ;;Total ram usage:        0 bytes
 11199 ;; Hardware stack levels used:    1
 11200 ;; Hardware stack levels required when called:   15
 11201 ;; This function calls:
 11202 ;;		Nothing
 11203 ;; This function is called by:
 11204 ;;		_main
 11205 ;;		_esr_check
 11206 ;; This function uses a reentrant model
 11207 ;;
 11208                           
 11209                           	psect	text28
 11210  002D8A                     __ptext28:
 11211                           	opt callstack 0
 11212  002D8A                     _set_load_relay_two:
 11213                           	opt callstack 15
 11214                           
 11215                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11216                           ;stkvar	_mode @ sp[(0)+-1]
 11217                           
 11218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11219                           ;incstack = 0
 11220  002D8A  0EFF               	movlw	-1
 11221  002D8C  B0E3               	btfsc	plusw1,0,c
 11222  002D8E  D002               	bra	u12565
 11223  002D90  9ABD               	bcf	189,5,c	;volatile
 11224  002D92  D001               	bra	u12566
 11225  002D94                     u12565:
 11226  002D94  8ABD               	bsf	189,5,c	;volatile
 11227  002D96                     u12566:
 11228                           
 11229                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11230  002D96  52E5               	movf	postdec1,f,c
 11231  002D98  0012               	return		;funcret
 11232  002D9A                     __end_of_set_load_relay_two:
 11233                           	opt callstack 0
 11234                           
 11235 ;; *************** function _set_load_relay_one *****************
 11236 ;; Defined at:
 11237 ;;		line 126 in file "mbmc.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;  mode            1  [STACK] const _Bool 
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;		None
 11242 ;; Return value:  Size  Location     Type
 11243 ;;                  1  [STACK] void 
 11244 ;; Registers used:
 11245 ;;		wreg, fsr1l, fsr1h
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/0
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11255 ;;Total ram usage:        0 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; Hardware stack levels required when called:   15
 11258 ;; This function calls:
 11259 ;;		Nothing
 11260 ;; This function is called by:
 11261 ;;		_main
 11262 ;;		_esr_check
 11263 ;; This function uses a reentrant model
 11264 ;;
 11265                           
 11266                           	psect	text29
 11267  002D9A                     __ptext29:
 11268                           	opt callstack 0
 11269  002D9A                     _set_load_relay_one:
 11270                           	opt callstack 15
 11271                           
 11272                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11273                           ;stkvar	_mode @ sp[(0)+-1]
 11274                           
 11275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11276                           ;incstack = 0
 11277  002D9A  0EFF               	movlw	-1
 11278  002D9C  B0E3               	btfsc	plusw1,0,c
 11279  002D9E  D002               	bra	u12555
 11280  002DA0  98BD               	bcf	189,4,c	;volatile
 11281  002DA2  D001               	bra	u12556
 11282  002DA4                     u12555:
 11283  002DA4  88BD               	bsf	189,4,c	;volatile
 11284  002DA6                     u12556:
 11285                           
 11286                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11287  002DA6  52E5               	movf	postdec1,f,c
 11288  002DA8  0012               	return		;funcret
 11289  002DAA                     __end_of_set_load_relay_one:
 11290                           	opt callstack 0
 11291                           
 11292 ;; *************** function _eaDogM_WriteCommand *****************
 11293 ;; Defined at:
 11294 ;;		line 384 in file "eadog.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;  cmd             1  [STACK] const unsigned char 
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;		None
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1  [STACK] void 
 11301 ;; Registers used:
 11302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11303 ;; Tracked objects:
 11304 ;;		On entry : 3F/3D
 11305 ;;		On exit  : 3F/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11312 ;;Total ram usage:        0 bytes
 11313 ;; Hardware stack levels used:    1
 11314 ;; Hardware stack levels required when called:   19
 11315 ;; This function calls:
 11316 ;;		_send_lcd_cmd_dma
 11317 ;; This function is called by:
 11318 ;;		_main
 11319 ;; This function uses a reentrant model
 11320 ;;
 11321                           
 11322                           	psect	text30
 11323  002DDA                     __ptext30:
 11324                           	opt callstack 0
 11325  002DDA                     _eaDogM_WriteCommand:
 11326                           	opt callstack 11
 11327                           
 11328                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11329                           ;stkvar	_cmd @ sp[(0)+-1]
 11330                           
 11331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11332                           ;incstack = 0
 11333  002DDA  0EFF               	movlw	-1
 11334  002DDC  50E3               	movf	plusw1,w,c
 11335  002DDE  6EE6               	movwf	postinc1,c
 11336  002DE0  EC1D  F016         	call	_send_lcd_cmd_dma	;wreg free
 11337                           
 11338                           ; BSR set to: 0
 11339                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11340  002DE4  52E5               	movf	postdec1,f,c
 11341  002DE6  0012               	return		;funcret
 11342  002DE8                     __end_of_eaDogM_WriteCommand:
 11343                           	opt callstack 0
 11344                           
 11345 ;; *************** function _display_history *****************
 11346 ;; Defined at:
 11347 ;;		line 614 in file "main.c"
 11348 ;; Parameters:    Size  Location     Type
 11349 ;;		None
 11350 ;; Auto vars:     Size  Location     Type
 11351 ;;		None
 11352 ;; Return value:  Size  Location     Type
 11353 ;;                  1  [STACK] _Bool 
 11354 ;; Registers used:
 11355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11356 ;; Tracked objects:
 11357 ;;		On entry : 0/2
 11358 ;;		On exit  : 0/0
 11359 ;;		Unchanged: 0/0
 11360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11365 ;;Total ram usage:        0 bytes
 11366 ;; Hardware stack levels used:    1
 11367 ;; Hardware stack levels required when called:   27
 11368 ;; This function calls:
 11369 ;;		_WaitMs
 11370 ;;		_asctime
 11371 ;;		_get_switch
 11372 ;;		_get_vterm_ptr
 11373 ;;		_localtime
 11374 ;;		_sprintf
 11375 ;;		_time
 11376 ;;		_update_lcd
 11377 ;; This function is called by:
 11378 ;;		_main
 11379 ;; This function uses a reentrant model
 11380 ;;
 11381                           
 11382                           	psect	text31
 11383  01B5E6                     __ptext31:
 11384                           	opt callstack 0
 11385  01B5E6                     _display_history:
 11386                           	opt callstack 3
 11387                           
 11388                           ;main.c: 616:  static uint8_t bwait = 0;;main.c: 618:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11389                           
 11390                           ; BSR set to: 0
 11391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11392                           ;incstack = 0
 11393  01B5E6  0E04               	movlw	4
 11394  01B5E8  6EE6               	movwf	postinc1,c
 11395  01B5EA  ECB9  F013         	call	_get_switch	;wreg free
 11396  01B5EE  502A               	movf	btemp^0,w,c
 11397  01B5F0  B4D8               	btfsc	status,2,c
 11398  01B5F2  D15E               	goto	l17799
 11399  01B5F4  2A53               	incf	display_history@bwait^0,f,c
 11400  01B5F6  0E05               	movlw	5
 11401  01B5F8  6453               	cpfsgt	display_history@bwait^0,c
 11402  01B5FA  D15A               	goto	l17799
 11403                           
 11404                           ;main.c: 619:   pclock = time(((void*)0));
 11405  01B5FC  0E00               	movlw	0
 11406  01B5FE  6EE6               	movwf	postinc1,c
 11407  01B600  0E00               	movlw	0
 11408  01B602  6EE6               	movwf	postinc1,c
 11409  01B604  EC8F  F00E         	call	_time	;wreg free
 11410  01B608  52E5               	movf	postdec1,f,c
 11411  01B60A  006F FF9C  F041    	movff	indf1,btemp+23
 11412  01B610  52E5               	movf	postdec1,f,c
 11413  01B612  006F FF9C  F040    	movff	indf1,btemp+22
 11414  01B618  52E5               	movf	postdec1,f,c
 11415  01B61A  006F FF9C  F03F    	movff	indf1,btemp+21
 11416  01B620  52E5               	movf	postdec1,f,c
 11417  01B622  006F FF9C  F03E    	movff	indf1,btemp+20
 11418  01B628  52E5               	movf	postdec1,f,c
 11419  01B62A  006F FF9C  F03D    	movff	indf1,btemp+19
 11420  01B630  52E5               	movf	postdec1,f,c
 11421  01B632  006F FF9C  F03C    	movff	indf1,btemp+18
 11422  01B638  52E5               	movf	postdec1,f,c
 11423  01B63A  006F FF9C  F03B    	movff	indf1,btemp+17
 11424  01B640  52E5               	movf	postdec1,f,c
 11425  01B642  006F FF9C  F03A    	movff	indf1,btemp+16
 11426  01B648  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11427  01B64E  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11428  01B654  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11429  01B65A  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11430  01B660  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11431  01B666  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11432  01B66C  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11433  01B672  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11434                           
 11435                           ; BSR set to: 57
 11436                           ;main.c: 620:   t_mbmc = localtime(&pclock);
 11437  01B678  0EDA               	movlw	_pclock& (0+255)
 11438  01B67A  6EE6               	movwf	postinc1,c
 11439  01B67C  EC7D  F016         	call	_localtime	;wreg free
 11440  01B680  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11441  01B686  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11442                           
 11443                           ;main.c: 621:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11444  01B68C  EE22  F1F3         	lfsr	2,_C+244	;volatile
 11445  01B690  006F FF78  F034    	movff	postinc2,btemp+10
 11446  01B696  006F FF74  F035    	movff	postdec2,btemp+11
 11447  01B69C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11448  01B6A2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11449  01B6A8  EE22  F1F1         	lfsr	2,_C+242	;volatile
 11450  01B6AC  006F FF78  F034    	movff	postinc2,btemp+10
 11451  01B6B2  006F FF74  F035    	movff	postdec2,btemp+11
 11452  01B6B8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11453  01B6BE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11454  01B6C4  EE22  F1EF         	lfsr	2,_C+240	;volatile
 11455  01B6C8  006F FF78  F034    	movff	postinc2,btemp+10
 11456  01B6CE  006F FF74  F035    	movff	postdec2,btemp+11
 11457  01B6D4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11458  01B6DA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11459  01B6E0  EE22  F1ED         	lfsr	2,_C+238	;volatile
 11460  01B6E4  006F FF78  F034    	movff	postinc2,btemp+10
 11461  01B6EA  006F FF74  F035    	movff	postdec2,btemp+11
 11462  01B6F0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11463  01B6F6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11464  01B6FC  0E7E               	movlw	low STR_78
 11465  01B6FE  6EE6               	movwf	postinc1,c
 11466  01B700  0EFA               	movlw	high STR_78
 11467  01B702  6EE6               	movwf	postinc1,c
 11468  01B704  0E00               	movlw	0
 11469  01B706  6EE6               	movwf	postinc1,c
 11470  01B708  0E00               	movlw	0
 11471  01B70A  6EE6               	movwf	postinc1,c
 11472  01B70C  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 11473  01B710  0060  F0AB  FFE6   	movff	btemp,postinc1
 11474  01B716  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11475  01B71C  0E0C               	movlw	12
 11476  01B71E  6EE6               	movwf	postinc1,c
 11477  01B720  EC01  F0FF         	call	_sprintf	;wreg free
 11478                           
 11479                           ; BSR set to: 0
 11480                           ;main.c: 622:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11481  01B724  EE22  F1FB         	lfsr	2,_C+252	;volatile
 11482  01B728  006F FF78  F034    	movff	postinc2,btemp+10
 11483  01B72E  006F FF74  F035    	movff	postdec2,btemp+11
 11484  01B734  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11485  01B73A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11486  01B740  EE22  F1F9         	lfsr	2,_C+250	;volatile
 11487  01B744  006F FF78  F034    	movff	postinc2,btemp+10
 11488  01B74A  006F FF74  F035    	movff	postdec2,btemp+11
 11489  01B750  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11490  01B756  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11491  01B75C  EE22  F1F7         	lfsr	2,_C+248	;volatile
 11492  01B760  006F FF78  F034    	movff	postinc2,btemp+10
 11493  01B766  006F FF74  F035    	movff	postdec2,btemp+11
 11494  01B76C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11495  01B772  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11496  01B778  EE22  F1F5         	lfsr	2,_C+246	;volatile
 11497  01B77C  006F FF78  F034    	movff	postinc2,btemp+10
 11498  01B782  006F FF74  F035    	movff	postdec2,btemp+11
 11499  01B788  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11500  01B78E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11501  01B794  0E7E               	movlw	low STR_78
 11502  01B796  6EE6               	movwf	postinc1,c
 11503  01B798  0EFA               	movlw	high STR_78
 11504  01B79A  6EE6               	movwf	postinc1,c
 11505  01B79C  0E00               	movlw	0
 11506  01B79E  6EE6               	movwf	postinc1,c
 11507  01B7A0  0E01               	movlw	1
 11508  01B7A2  6EE6               	movwf	postinc1,c
 11509  01B7A4  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 11510  01B7A8  0060  F0AB  FFE6   	movff	btemp,postinc1
 11511  01B7AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11512  01B7B4  0E0C               	movlw	12
 11513  01B7B6  6EE6               	movwf	postinc1,c
 11514  01B7B8  EC01  F0FF         	call	_sprintf	;wreg free
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;main.c: 623:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 11518  01B7BC  EE22  F205         	lfsr	2,_C+262	;volatile
 11519  01B7C0  006F FF78  F034    	movff	postinc2,btemp+10
 11520  01B7C6  006F FF74  F035    	movff	postdec2,btemp+11
 11521  01B7CC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11522  01B7D2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11523  01B7D8  EE22  F201         	lfsr	2,_C+258	;volatile
 11524  01B7DC  006F FF78  F034    	movff	postinc2,btemp+10
 11525  01B7E2  006F FF74  F035    	movff	postdec2,btemp+11
 11526  01B7E8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11527  01B7EE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11528  01B7F4  EE22  F1FF         	lfsr	2,_C+256	;volatile
 11529  01B7F8  006F FF78  F034    	movff	postinc2,btemp+10
 11530  01B7FE  006F FF74  F035    	movff	postdec2,btemp+11
 11531  01B804  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11532  01B80A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11533  01B810  EE22  F1FD         	lfsr	2,_C+254	;volatile
 11534  01B814  006F FF78  F034    	movff	postinc2,btemp+10
 11535  01B81A  006F FF74  F035    	movff	postdec2,btemp+11
 11536  01B820  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11537  01B826  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11538  01B82C  0E7E               	movlw	low STR_78
 11539  01B82E  6EE6               	movwf	postinc1,c
 11540  01B830  0EFA               	movlw	high STR_78
 11541  01B832  6EE6               	movwf	postinc1,c
 11542  01B834  0E00               	movlw	0
 11543  01B836  6EE6               	movwf	postinc1,c
 11544  01B838  0E02               	movlw	2
 11545  01B83A  6EE6               	movwf	postinc1,c
 11546  01B83C  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 11547  01B840  0060  F0AB  FFE6   	movff	btemp,postinc1
 11548  01B846  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11549  01B84C  0E0C               	movlw	12
 11550  01B84E  6EE6               	movwf	postinc1,c
 11551  01B850  EC01  F0FF         	call	_sprintf	;wreg free
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;main.c: 624:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11555  01B854  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 11556  01B85A  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 11557  01B860  EC14  F0C6         	call	_asctime	;wreg free
 11558  01B864  0060  F0AB  FFE6   	movff	btemp,postinc1
 11559  01B86A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11560  01B870  0E66               	movlw	low (STR_85+5)
 11561  01B872  6EE6               	movwf	postinc1,c
 11562  01B874  0EFF               	movlw	high (STR_85+5)
 11563  01B876  6EE6               	movwf	postinc1,c
 11564  01B878  0E00               	movlw	0
 11565  01B87A  6EE6               	movwf	postinc1,c
 11566  01B87C  0E03               	movlw	3
 11567  01B87E  6EE6               	movwf	postinc1,c
 11568  01B880  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 11569  01B884  0060  F0AB  FFE6   	movff	btemp,postinc1
 11570  01B88A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11571  01B890  0E06               	movlw	6
 11572  01B892  6EE6               	movwf	postinc1,c
 11573  01B894  EC01  F0FF         	call	_sprintf	;wreg free
 11574                           
 11575                           ; BSR set to: 0
 11576                           ;main.c: 625:   update_lcd(0);
 11577  01B898  0E00               	movlw	0
 11578  01B89A  6EE6               	movwf	postinc1,c
 11579  01B89C  ECB3  F0F7         	call	_update_lcd	;wreg free
 11580                           
 11581                           ;main.c: 626:   WaitMs(2000);
 11582  01B8A0  0ED0               	movlw	208
 11583  01B8A2  6EE6               	movwf	postinc1,c
 11584  01B8A4  0E07               	movlw	7
 11585  01B8A6  6EE6               	movwf	postinc1,c
 11586  01B8A8  ECA6  F012         	call	_WaitMs	;wreg free
 11587  01B8AC                     l17793:
 11588                           
 11589                           ;main.c: 627:   bwait = 0;
 11590  01B8AC  6A53               	clrf	display_history@bwait^0,c
 11591  01B8AE  0012               	return	
 11592  01B8B0                     l17799:
 11593                           
 11594                           ;main.c: 630:   if (!get_switch(SCALIB))
 11595  01B8B0  0E04               	movlw	4
 11596  01B8B2  6EE6               	movwf	postinc1,c
 11597  01B8B4  ECB9  F013         	call	_get_switch	;wreg free
 11598  01B8B8  502A               	movf	btemp^0,w,c
 11599  01B8BA  A4D8               	btfss	status,2,c
 11600  01B8BC  0012               	return	
 11601  01B8BE  D7F6               	goto	l17793
 11602  01B8C0                     __end_of_display_history:
 11603                           	opt callstack 0
 11604                           
 11605 ;; *************** function _time *****************
 11606 ;; Defined at:
 11607 ;;		line 242 in file "mbmc.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;  t               2  [STACK] PTR long long 
 11610 ;;		 -> time@current_time(8), NULL(0), 
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;		None
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  8  [STACK] long long 
 11615 ;; Registers used:
 11616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/2
 11619 ;;		On exit  : 3F/39
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11626 ;;Total ram usage:        0 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; Hardware stack levels required when called:   15
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_main
 11633 ;;		_display_history
 11634 ;;		_check_day_time
 11635 ;; This function uses a reentrant model
 11636 ;;
 11637                           
 11638                           	psect	text32
 11639  001D1E                     __ptext32:
 11640                           	opt callstack 0
 11641  001D1E                     _time:
 11642                           	opt callstack 0
 11643                           
 11644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 11645  001D1E  0E06               	movlw	6
 11646  001D20  26E1               	addwf	fsr1l,f,c
 11647  001D22  0E00               	movlw	0
 11648  001D24  22E2               	addwfc	fsr1h,f,c
 11649                           
 11650                           ;mbmc.c: 242: time_t time(time_t * t);mbmc.c: 243: {;mbmc.c: 244:  static time_t current
      +                          _time;;mbmc.c: 245:  PIE8bits.TMR5IE = 0;
 11651                           
 11652                           ;incstack = 0
 11653 ;; hardware stack exceeded
 11654  001D26  0139               	movlb	57	; () banked
 11655  001D28  9D98               	bcf	152,6,b	;volatile
 11656                           
 11657                           ; BSR set to: 57
 11658                           ;mbmc.c: 246:  current_time = V.ticks;
 11659  001D2A  0102               	movlb	2	; () banked
 11660  001D2C  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 11661  001D2E  0100               	movlb	0	; () banked
 11662  001D30  6FD2               	movwf	time@current_time& (0+255),b
 11663  001D32  0102               	movlb	2	; () banked
 11664  001D34  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 11665  001D36  0100               	movlb	0	; () banked
 11666  001D38  6FD3               	movwf	(time@current_time+1)& (0+255),b
 11667  001D3A  0102               	movlb	2	; () banked
 11668  001D3C  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 11669  001D3E  0100               	movlb	0	; () banked
 11670  001D40  6FD4               	movwf	(time@current_time+2)& (0+255),b
 11671  001D42  0102               	movlb	2	; () banked
 11672  001D44  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 11673  001D46  0100               	movlb	0	; () banked
 11674  001D48  6FD5               	movwf	(time@current_time+3)& (0+255),b
 11675  001D4A  6BD6               	clrf	(time@current_time+4)& (0+255),b
 11676  001D4C  6BD7               	clrf	(time@current_time+5)& (0+255),b
 11677  001D4E  6BD8               	clrf	(time@current_time+6)& (0+255),b
 11678  001D50  6BD9               	clrf	(time@current_time+7)& (0+255),b
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;mbmc.c: 247:  PIE8bits.TMR5IE = 1;
 11682  001D52  0139               	movlb	57	; () banked
 11683  001D54  8D98               	bsf	152,6,b	;volatile
 11684                           
 11685                           ; BSR set to: 57
 11686                           ;mbmc.c: 248:  if (t) {
 11687                           ;stkvar	_t @ sp[(0)+-8]
 11688  001D56  0EF8               	movlw	-8
 11689  001D58  006F FF8C  F02A    	movff	plusw1,btemp
 11690  001D5E  0EF9               	movlw	-7
 11691  001D60  50E3               	movf	plusw1,w,c
 11692  001D62  102A               	iorwf	btemp^0,w,c
 11693                           
 11694                           ; BSR set to: 57
 11695                           ;mbmc.c: 251:  return current_time;
 11696                           
 11697                           ; BSR set to: 57
 11698  001D64  EE20  F0D2         	lfsr	2,time@current_time
 11699                           
 11700                           ;stkvar	?_time @ sp[(0)+-8]
 11701  001D68  0E08               	movlw	8
 11702  001D6A  6E2A               	movwf	btemp^0,c
 11703  001D6C  0EF8               	movlw	-8
 11704  001D6E                     us1178999:
 11705  001D6E  006F FF7B FFE3     	movff	postinc2,plusw1
 11706  001D74  28E8               	incf	wreg,w,c
 11707  001D76  2E2A               	decfsz	btemp^0,f,c
 11708  001D78  D7FA               	bra	us1178999
 11709                           
 11710                           ; BSR set to: 57
 11711                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 11712  001D7A  0012               	return		;funcret
 11713  001D7C                     __end_of_time:
 11714                           	opt callstack 0
 11715                           
 11716 ;; *************** function _localtime *****************
 11717 ;; Defined at:
 11718 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;  t               1  [STACK] PTR const long long 
 11721 ;;		 -> pclock(8), 
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;		None
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  2  [STACK] PTR struct tm
 11726 ;; Registers used:
 11727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11728 ;; Tracked objects:
 11729 ;;		On entry : 3F/39
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11737 ;;Total ram usage:        0 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:   21
 11740 ;; This function calls:
 11741 ;;		___localtime_r
 11742 ;; This function is called by:
 11743 ;;		_main
 11744 ;;		_display_history
 11745 ;; This function uses a reentrant model
 11746 ;;
 11747                           
 11748                           	psect	text33
 11749  002CFA                     __ptext33:
 11750                           	opt callstack 0
 11751  002CFA                     _localtime:
 11752                           	opt callstack 9
 11753                           
 11754                           ; BSR set to: 57
 11755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11756                           ;incstack = 0
 11757  002CFA  0EDF               	movlw	low localtime@tm
 11758  002CFC  6EE6               	movwf	postinc1,c
 11759  002CFE  0E03               	movlw	high localtime@tm
 11760  002D00  6EE6               	movwf	postinc1,c
 11761                           
 11762                           ;stkvar	_t @ sp[(-2)+-1]
 11763  002D02  0EFD               	movlw	-3
 11764  002D04  50E3               	movf	plusw1,w,c
 11765  002D06  6EE6               	movwf	postinc1,c
 11766  002D08  EC48  F0E5         	call	___localtime_r	;wreg free
 11767                           
 11768                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11769  002D0C  52E5               	movf	postdec1,f,c
 11770  002D0E  0012               	return		;funcret
 11771  002D10                     __end_of_localtime:
 11772                           	opt callstack 0
 11773                           
 11774 ;; *************** function ___localtime_r *****************
 11775 ;; Defined at:
 11776 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 11777 ;; Parameters:    Size  Location     Type
 11778 ;;  t               1  [STACK] PTR const long long 
 11779 ;;		 -> pclock(8), 
 11780 ;;  tm              2  [STACK] PTR struct tm
 11781 ;;		 -> localtime@tm(24), 
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;		None
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  2  [STACK] PTR struct tm
 11786 ;; Registers used:
 11787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/39
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11797 ;;Total ram usage:        0 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:   20
 11800 ;; This function calls:
 11801 ;;		___secs_to_tm
 11802 ;;		___secs_to_zone
 11803 ;; This function is called by:
 11804 ;;		_localtime
 11805 ;; This function uses a reentrant model
 11806 ;;
 11807                           
 11808                           	psect	text34
 11809  01CA90                     __ptext34:
 11810                           	opt callstack 0
 11811  01CA90                     ___localtime_r:
 11812                           	opt callstack 9
 11813                           
 11814                           ;stkvar	_t @ sp[(0)+-1]
 11815                           
 11816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11817                           ;incstack = 0
 11818  01CA90  0EFF               	movlw	-1
 11819  01CA92  50E3               	movf	plusw1,w,c
 11820  01CA94  6ED9               	movwf	fsr2l,c
 11821  01CA96  6ADA               	clrf	fsr2h,c
 11822  01CA98  0E07               	movlw	7
 11823  01CA9A  AEDB               	btfss	plusw2,7,c
 11824  01CA9C  D010               	goto	u17090
 11825  01CA9E  52DE               	movf	postinc2,f,c
 11826  01CAA0  52DE               	movf	postinc2,f,c
 11827  01CAA2  0E80               	movlw	128
 11828  01CAA4  5CDE               	subwf	postinc2,w,c
 11829  01CAA6  0EBD               	movlw	189
 11830  01CAA8  58DE               	subwfb	postinc2,w,c
 11831  01CAAA  0E0E               	movlw	14
 11832  01CAAC  58DE               	subwfb	postinc2,w,c
 11833  01CAAE  0EFF               	movlw	255
 11834  01CAB0  58DE               	subwfb	postinc2,w,c
 11835  01CAB2  0EFF               	movlw	255
 11836  01CAB4  58DE               	subwfb	postinc2,w,c
 11837  01CAB6  0EFF               	movlw	255
 11838  01CAB8  58DE               	subwfb	postinc2,w,c
 11839  01CABA  A0D8               	btfss	status,0,c
 11840  01CABC  D01B               	goto	u17100
 11841  01CABE                     u17090:
 11842                           
 11843                           ;stkvar	_t @ sp[(0)+-1]
 11844  01CABE  0EFF               	movlw	-1
 11845  01CAC0  50E3               	movf	plusw1,w,c
 11846  01CAC2  6ED9               	movwf	fsr2l,c
 11847  01CAC4  6ADA               	clrf	fsr2h,c
 11848  01CAC6  0E07               	movlw	7
 11849  01CAC8  BEDB               	btfsc	plusw2,7,c
 11850  01CACA  D019               	goto	l17279
 11851  01CACC  0E07               	movlw	7
 11852  01CACE  50DB               	movf	plusw2,w,c
 11853  01CAD0  E111               	bnz	u17100
 11854  01CAD2  0E06               	movlw	6
 11855  01CAD4  50DB               	movf	plusw2,w,c
 11856  01CAD6  E10E               	bnz	u17100
 11857  01CAD8  0E05               	movlw	5
 11858  01CADA  50DB               	movf	plusw2,w,c
 11859  01CADC  E10B               	bnz	u17100
 11860  01CADE  04DE               	decf	postinc2,w,c
 11861  01CAE0  0E7B               	movlw	123
 11862  01CAE2  58DE               	subwfb	postinc2,w,c
 11863  01CAE4  0E9D               	movlw	157
 11864  01CAE6  58DE               	subwfb	postinc2,w,c
 11865  01CAE8  0E40               	movlw	64
 11866  01CAEA  58DE               	subwfb	postinc2,w,c
 11867  01CAEC  0EF1               	movlw	241
 11868  01CAEE  58DE               	subwfb	postinc2,w,c
 11869  01CAF0  A0D8               	btfss	status,0,c
 11870  01CAF2  D005               	goto	l17279
 11871  01CAF4                     u17100:
 11872  01CAF4  0E00               	movlw	0
 11873  01CAF6  6E2A               	movwf	btemp^0,c
 11874  01CAF8  0E00               	movlw	0
 11875  01CAFA  6E2B               	movwf	(btemp+1)^0,c
 11876  01CAFC  D0E7               	goto	l3514
 11877  01CAFE                     l17279:
 11878                           
 11879                           ;stkvar	_tm @ sp[(0)+-3]
 11880  01CAFE  0EFD               	movlw	-3
 11881  01CB00  50E3               	movf	plusw1,w,c
 11882  01CB02  0F16               	addlw	22
 11883  01CB04  6E34               	movwf	(btemp+10)^0,c
 11884  01CB06  0EFE               	movlw	-2
 11885  01CB08  006F FF8C  F035    	movff	plusw1,btemp+11
 11886  01CB0E  0E00               	movlw	0
 11887  01CB10  2235               	addwfc	(btemp+11)^0,f,c
 11888  01CB12  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11889  01CB18  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11890  01CB1E  0E00               	movlw	0
 11891  01CB20  6EE6               	movwf	postinc1,c
 11892  01CB22  0E00               	movlw	0
 11893  01CB24  6EE6               	movwf	postinc1,c
 11894                           
 11895                           ;stkvar	_tm @ sp[(-4)+-3]
 11896  01CB26  0EF9               	movlw	-7
 11897  01CB28  50E3               	movf	plusw1,w,c
 11898  01CB2A  0F12               	addlw	18
 11899  01CB2C  6E34               	movwf	(btemp+10)^0,c
 11900  01CB2E  0EFA               	movlw	-6
 11901  01CB30  006F FF8C  F035    	movff	plusw1,btemp+11
 11902  01CB36  0E00               	movlw	0
 11903  01CB38  2235               	addwfc	(btemp+11)^0,f,c
 11904  01CB3A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11905  01CB40  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11906                           
 11907                           ;stkvar	_tm @ sp[(-6)+-3]
 11908  01CB46  0EF7               	movlw	-9
 11909  01CB48  50E3               	movf	plusw1,w,c
 11910  01CB4A  0F10               	addlw	16
 11911  01CB4C  6E34               	movwf	(btemp+10)^0,c
 11912  01CB4E  0EF8               	movlw	-8
 11913  01CB50  006F FF8C  F035    	movff	plusw1,btemp+11
 11914  01CB56  0E00               	movlw	0
 11915  01CB58  2235               	addwfc	(btemp+11)^0,f,c
 11916  01CB5A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11917  01CB60  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11918  01CB66  0E00               	movlw	0
 11919  01CB68  6EE6               	movwf	postinc1,c
 11920  01CB6A  0E00               	movlw	0
 11921  01CB6C  6EE6               	movwf	postinc1,c
 11922                           
 11923                           ;stkvar	_t @ sp[(-10)+-1]
 11924  01CB6E  0EF5               	movlw	-11
 11925  01CB70  50E3               	movf	plusw1,w,c
 11926  01CB72  6ED9               	movwf	fsr2l,c
 11927  01CB74  6ADA               	clrf	fsr2h,c
 11928  01CB76  006F FF7B FFE6     	movff	postinc2,postinc1
 11929  01CB7C  006F FF7B FFE6     	movff	postinc2,postinc1
 11930  01CB82  006F FF7B FFE6     	movff	postinc2,postinc1
 11931  01CB88  006F FF7B FFE6     	movff	postinc2,postinc1
 11932  01CB8E  006F FF7B FFE6     	movff	postinc2,postinc1
 11933  01CB94  006F FF7B FFE6     	movff	postinc2,postinc1
 11934  01CB9A  006F FF7B FFE6     	movff	postinc2,postinc1
 11935  01CBA0  006F FF7B FFE6     	movff	postinc2,postinc1
 11936  01CBA6  ECB5  F0B3         	call	___secs_to_zone	;wreg free
 11937                           
 11938                           ;stkvar	_tm @ sp[(0)+-3]
 11939  01CBAA  0EFD               	movlw	-3
 11940  01CBAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11941  01CBB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11942                           
 11943                           ;stkvar	_t @ sp[(-2)+-1]
 11944  01CBB8  0EFD               	movlw	-3
 11945  01CBBA  50E3               	movf	plusw1,w,c
 11946  01CBBC  6ED9               	movwf	fsr2l,c
 11947  01CBBE  6ADA               	clrf	fsr2h,c
 11948  01CBC0  006F FF78  F03A    	movff	postinc2,btemp+16
 11949  01CBC6  006F FF78  F03B    	movff	postinc2,btemp+17
 11950  01CBCC  006F FF78  F03C    	movff	postinc2,btemp+18
 11951  01CBD2  006F FF78  F03D    	movff	postinc2,btemp+19
 11952  01CBD8  006F FF78  F03E    	movff	postinc2,btemp+20
 11953  01CBDE  006F FF78  F03F    	movff	postinc2,btemp+21
 11954  01CBE4  006F FF78  F040    	movff	postinc2,btemp+22
 11955  01CBEA  006F FF78  F041    	movff	postinc2,btemp+23
 11956                           
 11957                           ;stkvar	_tm @ sp[(-2)+-3]
 11958  01CBF0  0EFB               	movlw	-5
 11959  01CBF2  006F FF8C  F034    	movff	plusw1,btemp+10
 11960  01CBF8  0EFC               	movlw	-4
 11961  01CBFA  006F FF8C  F035    	movff	plusw1,btemp+11
 11962  01CC00  0E12               	movlw	18
 11963  01CC02  2434               	addwf	(btemp+10)^0,w,c
 11964  01CC04  6ED9               	movwf	fsr2l,c
 11965  01CC06  0E00               	movlw	0
 11966  01CC08  2035               	addwfc	(btemp+11)^0,w,c
 11967  01CC0A  6EDA               	movwf	fsr2h,c
 11968  01CC0C  006F FF78  F032    	movff	postinc2,btemp+8
 11969  01CC12  006F FF78  F033    	movff	postinc2,btemp+9
 11970  01CC18  006F FF78  F034    	movff	postinc2,btemp+10
 11971  01CC1E  006F FF78  F035    	movff	postinc2,btemp+11
 11972  01CC24  0060  F0C8  F042   	movff	btemp+8,btemp+24
 11973  01CC2A  0060  F0CC  F043   	movff	btemp+9,btemp+25
 11974  01CC30  0060  F0D0  F044   	movff	btemp+10,btemp+26
 11975  01CC36  0060  F0D4  F045   	movff	btemp+11,btemp+27
 11976  01CC3C  6A46               	clrf	(btemp+28)^0,c
 11977  01CC3E  BE45               	btfsc	(btemp+27)^0,7,c
 11978  01CC40  6846               	setf	(btemp+28)^0,c
 11979  01CC42  0060  F118  F047   	movff	btemp+28,btemp+29
 11980  01CC48  0060  F118  F048   	movff	btemp+28,btemp+30
 11981  01CC4E  0060  F118  F049   	movff	btemp+28,btemp+31
 11982  01CC54  503A               	movf	(btemp+16)^0,w,c
 11983  01CC56  2442               	addwf	(btemp+24)^0,w,c
 11984  01CC58  6E32               	movwf	(btemp+8)^0,c
 11985  01CC5A  503B               	movf	(btemp+17)^0,w,c
 11986  01CC5C  2043               	addwfc	(btemp+25)^0,w,c
 11987  01CC5E  6E33               	movwf	(btemp+9)^0,c
 11988  01CC60  503C               	movf	(btemp+18)^0,w,c
 11989  01CC62  2044               	addwfc	(btemp+26)^0,w,c
 11990  01CC64  6E34               	movwf	(btemp+10)^0,c
 11991  01CC66  503D               	movf	(btemp+19)^0,w,c
 11992  01CC68  2045               	addwfc	(btemp+27)^0,w,c
 11993  01CC6A  6E35               	movwf	(btemp+11)^0,c
 11994  01CC6C  503E               	movf	(btemp+20)^0,w,c
 11995  01CC6E  2046               	addwfc	(btemp+28)^0,w,c
 11996  01CC70  6E36               	movwf	(btemp+12)^0,c
 11997  01CC72  503F               	movf	(btemp+21)^0,w,c
 11998  01CC74  2047               	addwfc	(btemp+29)^0,w,c
 11999  01CC76  6E37               	movwf	(btemp+13)^0,c
 12000  01CC78  5040               	movf	(btemp+22)^0,w,c
 12001  01CC7A  2048               	addwfc	(btemp+30)^0,w,c
 12002  01CC7C  6E38               	movwf	(btemp+14)^0,c
 12003  01CC7E  5041               	movf	(btemp+23)^0,w,c
 12004  01CC80  2049               	addwfc	(btemp+31)^0,w,c
 12005  01CC82  6E39               	movwf	(btemp+15)^0,c
 12006  01CC84  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12007  01CC8A  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12008  01CC90  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12009  01CC96  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12010  01CC9C  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12011  01CCA2  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12012  01CCA8  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12013  01CCAE  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12014  01CCB4  ECAC  F093         	call	___secs_to_tm	;wreg free
 12015  01CCB8  BE2D               	btfsc	(btemp+3)^0,7,c
 12016  01CCBA  D71C               	goto	u17100
 12017                           
 12018                           ;stkvar	_tm @ sp[(0)+-3]
 12019  01CCBC  0EFD               	movlw	-3
 12020  01CCBE  006F FF8C  F02A    	movff	plusw1,btemp
 12021  01CCC4  0EFE               	movlw	-2
 12022  01CCC6  006F FF8C  F02B    	movff	plusw1,btemp+1
 12023  01CCCC                     l3514:
 12024                           
 12025                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12026  01CCCC  52E5               	movf	postdec1,f,c
 12027  01CCCE  52E5               	movf	postdec1,f,c
 12028  01CCD0  52E5               	movf	postdec1,f,c
 12029  01CCD2  0012               	return		;funcret
 12030  01CCD4                     __end_of___localtime_r:
 12031                           	opt callstack 0
 12032                           
 12033 ;; *************** function ___secs_to_zone *****************
 12034 ;; Defined at:
 12035 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  t               8  [STACK] long long 
 12038 ;;  local           2  [STACK] int 
 12039 ;;  isdst           2  [STACK] PTR int 
 12040 ;;		 -> localtime@tm(24), 
 12041 ;;  offset          2  [STACK] PTR long 
 12042 ;;		 -> localtime@tm(24), 
 12043 ;;  oppoff          2  [STACK] PTR long 
 12044 ;;		 -> NULL(0), 
 12045 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12046 ;;		 -> localtime@tm(24), 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  alt             2  [STACK] unsigned int 
 12049 ;;  i               2    0        unsigned int 
 12050 ;;  y               8  [STACK] long long 
 12051 ;;  t1              8  [STACK] long long 
 12052 ;;  t0              8  [STACK] long long 
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1  [STACK] void 
 12055 ;; Registers used:
 12056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/39
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12066 ;;Total ram usage:        0 bytes
 12067 ;; Hardware stack levels used:    1
 12068 ;; Hardware stack levels required when called:   19
 12069 ;; This function calls:
 12070 ;;		___aodiv
 12071 ;;		___year_to_secs
 12072 ;;		_do_tzset
 12073 ;;		_rule_to_secs
 12074 ;;		_scan_trans
 12075 ;;		_zi_read32
 12076 ;; This function is called by:
 12077 ;;		___localtime_r
 12078 ;; This function uses a reentrant model
 12079 ;;
 12080                           
 12081                           	psect	text35
 12082  01676A                     __ptext35:
 12083                           	opt callstack 0
 12084  01676A                     ___secs_to_zone:
 12085                           	opt callstack 0
 12086                           
 12087                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12088  01676A  0E18               	movlw	24
 12089  01676C  26E1               	addwf	fsr1l,f,c
 12090  01676E  0E00               	movlw	0
 12091  016770  22E2               	addwfc	fsr1h,f,c
 12092                           
 12093                           ;incstack = 0
 12094  016772  EC2B  F0DF         	call	_do_tzset	;wreg free
 12095  016776  0100               	movlb	0	; () banked
 12096  016778  51B8               	movf	___daylight& (0+255),w,b
 12097  01677A  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12098  01677C  B4D8               	btfsc	status,2,c
 12099  01677E  D356               	goto	u16880
 12100                           
 12101                           ; BSR set to: 0
 12102  016780  0E58               	movlw	88
 12103  016782  6EE6               	movwf	postinc1,c
 12104  016784  0E85               	movlw	133
 12105  016786  6EE6               	movwf	postinc1,c
 12106  016788  0EE1               	movlw	225
 12107  01678A  6EE6               	movwf	postinc1,c
 12108  01678C  0E01               	movlw	1
 12109  01678E  6EE6               	movwf	postinc1,c
 12110  016790  0E00               	movlw	0
 12111  016792  6EE6               	movwf	postinc1,c
 12112  016794  0E00               	movlw	0
 12113  016796  6EE6               	movwf	postinc1,c
 12114  016798  0E00               	movlw	0
 12115  01679A  6EE6               	movwf	postinc1,c
 12116  01679C  0E00               	movlw	0
 12117  01679E  6EE6               	movwf	postinc1,c
 12118                           
 12119                           ;stkvar	_t @ sp[(-32)+-8]
 12120  0167A0  50E1               	movf	fsr1l,w,c
 12121  0167A2  0FD8               	addlw	-40
 12122  0167A4  6ED9               	movwf	fsr2l,c
 12123  0167A6  50E2               	movf	fsr1h,w,c
 12124  0167A8  6EDA               	movwf	fsr2h,c
 12125  0167AA  0EFF               	movlw	255
 12126  0167AC  22DA               	addwfc	fsr2h,f,c
 12127  0167AE  006F FF7B FFE6     	movff	postinc2,postinc1
 12128  0167B4  006F FF7B FFE6     	movff	postinc2,postinc1
 12129  0167BA  006F FF7B FFE6     	movff	postinc2,postinc1
 12130  0167C0  006F FF7B FFE6     	movff	postinc2,postinc1
 12131  0167C6  006F FF7B FFE6     	movff	postinc2,postinc1
 12132  0167CC  006F FF7B FFE6     	movff	postinc2,postinc1
 12133  0167D2  006F FF7B FFE6     	movff	postinc2,postinc1
 12134  0167D8  006F FF7B FFE6     	movff	postinc2,postinc1
 12135  0167DE  ECAB  F0E1         	call	___aodiv	;wreg free
 12136  0167E2  52E5               	movf	postdec1,f,c
 12137  0167E4  006F FF9C  F041    	movff	indf1,btemp+23
 12138  0167EA  52E5               	movf	postdec1,f,c
 12139  0167EC  006F FF9C  F040    	movff	indf1,btemp+22
 12140  0167F2  52E5               	movf	postdec1,f,c
 12141  0167F4  006F FF9C  F03F    	movff	indf1,btemp+21
 12142  0167FA  52E5               	movf	postdec1,f,c
 12143  0167FC  006F FF9C  F03E    	movff	indf1,btemp+20
 12144  016802  52E5               	movf	postdec1,f,c
 12145  016804  006F FF9C  F03D    	movff	indf1,btemp+19
 12146  01680A  52E5               	movf	postdec1,f,c
 12147  01680C  006F FF9C  F03C    	movff	indf1,btemp+18
 12148  016812  52E5               	movf	postdec1,f,c
 12149  016814  006F FF9C  F03B    	movff	indf1,btemp+17
 12150  01681A  52E5               	movf	postdec1,f,c
 12151  01681C  006F FF9C  F03A    	movff	indf1,btemp+16
 12152  016822  0EF8               	movlw	248
 12153  016824  26E1               	addwf	fsr1l,f,c
 12154  016826  0EFF               	movlw	255
 12155  016828  22E2               	addwfc	fsr1h,f,c
 12156  01682A  0E46               	movlw	70
 12157  01682C  243A               	addwf	(btemp+16)^0,w,c
 12158  01682E  6E42               	movwf	(btemp+24)^0,c
 12159  016830  0E00               	movlw	0
 12160  016832  203B               	addwfc	(btemp+17)^0,w,c
 12161  016834  6E43               	movwf	(btemp+25)^0,c
 12162  016836  0E00               	movlw	0
 12163  016838  203C               	addwfc	(btemp+18)^0,w,c
 12164  01683A  6E44               	movwf	(btemp+26)^0,c
 12165  01683C  0E00               	movlw	0
 12166  01683E  203D               	addwfc	(btemp+19)^0,w,c
 12167  016840  6E45               	movwf	(btemp+27)^0,c
 12168  016842  0E00               	movlw	0
 12169  016844  203E               	addwfc	(btemp+20)^0,w,c
 12170  016846  6E46               	movwf	(btemp+28)^0,c
 12171  016848  0E00               	movlw	0
 12172  01684A  203F               	addwfc	(btemp+21)^0,w,c
 12173  01684C  6E47               	movwf	(btemp+29)^0,c
 12174  01684E  0E00               	movlw	0
 12175  016850  2040               	addwfc	(btemp+22)^0,w,c
 12176  016852  6E48               	movwf	(btemp+30)^0,c
 12177  016854  0E00               	movlw	0
 12178  016856  2041               	addwfc	(btemp+23)^0,w,c
 12179  016858  6E49               	movwf	(btemp+31)^0,c
 12180                           
 12181                           ;stkvar	_y @ sp[(-24)+0]
 12182  01685A  0EE8               	movlw	-24
 12183  01685C  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12184  016862  0EE9               	movlw	-23
 12185  016864  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12186  01686A  0EEA               	movlw	-22
 12187  01686C  0060  F113  FFE3   	movff	btemp+26,plusw1
 12188  016872  0EEB               	movlw	-21
 12189  016874  0060  F117  FFE3   	movff	btemp+27,plusw1
 12190  01687A  0EEC               	movlw	-20
 12191  01687C  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12192  016882  0EED               	movlw	-19
 12193  016884  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12194  01688A  0EEE               	movlw	-18
 12195  01688C  0060  F123  FFE3   	movff	btemp+30,plusw1
 12196  016892  0EEF               	movlw	-17
 12197  016894  0060  F127  FFE3   	movff	btemp+31,plusw1
 12198  01689A  D010               	goto	l17049
 12199  01689C                     l17047:
 12200                           
 12201                           ;stkvar	_y @ sp[(-24)+0]
 12202  01689C  50E1               	movf	fsr1l,w,c
 12203  01689E  0FE8               	addlw	-24
 12204  0168A0  6ED9               	movwf	fsr2l,c
 12205  0168A2  50E2               	movf	fsr1h,w,c
 12206  0168A4  6EDA               	movwf	fsr2h,c
 12207  0168A6  0EFF               	movlw	255
 12208  0168A8  22DA               	addwfc	fsr2h,f,c
 12209  0168AA  06DE               	decf	postinc2,f,c
 12210  0168AC  0E00               	movlw	0
 12211  0168AE  5ADE               	subwfb	postinc2,f,c
 12212  0168B0  5ADE               	subwfb	postinc2,f,c
 12213  0168B2  5ADE               	subwfb	postinc2,f,c
 12214  0168B4  5ADE               	subwfb	postinc2,f,c
 12215  0168B6  5ADE               	subwfb	postinc2,f,c
 12216  0168B8  5ADE               	subwfb	postinc2,f,c
 12217  0168BA  5ADE               	subwfb	postinc2,f,c
 12218  0168BC                     l17049:
 12219  0168BC  0E00               	movlw	0
 12220  0168BE  6EE6               	movwf	postinc1,c
 12221  0168C0  0E00               	movlw	0
 12222  0168C2  6EE6               	movwf	postinc1,c
 12223                           
 12224                           ;stkvar	_y @ sp[(-26)+0]
 12225  0168C4  50E1               	movf	fsr1l,w,c
 12226  0168C6  0FE6               	addlw	-26
 12227  0168C8  6ED9               	movwf	fsr2l,c
 12228  0168CA  50E2               	movf	fsr1h,w,c
 12229  0168CC  6EDA               	movwf	fsr2h,c
 12230  0168CE  0EFF               	movlw	255
 12231  0168D0  22DA               	addwfc	fsr2h,f,c
 12232  0168D2  006F FF7B FFE6     	movff	postinc2,postinc1
 12233  0168D8  006F FF7B FFE6     	movff	postinc2,postinc1
 12234  0168DE  006F FF7B FFE6     	movff	postinc2,postinc1
 12235  0168E4  006F FF7B FFE6     	movff	postinc2,postinc1
 12236  0168EA  006F FF7B FFE6     	movff	postinc2,postinc1
 12237  0168F0  006F FF7B FFE6     	movff	postinc2,postinc1
 12238  0168F6  006F FF7B FFE6     	movff	postinc2,postinc1
 12239  0168FC  006F FF7B FFE6     	movff	postinc2,postinc1
 12240  016902  ECFC  F0AE         	call	___year_to_secs	;wreg free
 12241  016906  52E5               	movf	postdec1,f,c
 12242  016908  006F FF9C  F041    	movff	indf1,btemp+23
 12243  01690E  52E5               	movf	postdec1,f,c
 12244  016910  006F FF9C  F040    	movff	indf1,btemp+22
 12245  016916  52E5               	movf	postdec1,f,c
 12246  016918  006F FF9C  F03F    	movff	indf1,btemp+21
 12247  01691E  52E5               	movf	postdec1,f,c
 12248  016920  006F FF9C  F03E    	movff	indf1,btemp+20
 12249  016926  52E5               	movf	postdec1,f,c
 12250  016928  006F FF9C  F03D    	movff	indf1,btemp+19
 12251  01692E  52E5               	movf	postdec1,f,c
 12252  016930  006F FF9C  F03C    	movff	indf1,btemp+18
 12253  016936  52E5               	movf	postdec1,f,c
 12254  016938  006F FF9C  F03B    	movff	indf1,btemp+17
 12255  01693E  52E5               	movf	postdec1,f,c
 12256  016940  006F FF9C  F03A    	movff	indf1,btemp+16
 12257  016946  52E5               	movf	postdec1,f,c
 12258  016948  52E5               	movf	postdec1,f,c
 12259                           
 12260                           ;stkvar	_t @ sp[(-24)+-8]
 12261  01694A  0EE0               	movlw	-32
 12262  01694C  006F FF8C  F02A    	movff	plusw1,btemp
 12263  016952  503A               	movf	(btemp+16)^0,w,c
 12264  016954  5C2A               	subwf	btemp^0,w,c
 12265  016956  0EE1               	movlw	-31
 12266  016958  006F FF8C  F02A    	movff	plusw1,btemp
 12267  01695E  503B               	movf	(btemp+17)^0,w,c
 12268  016960  582A               	subwfb	btemp^0,w,c
 12269  016962  0EE2               	movlw	-30
 12270  016964  006F FF8C  F02A    	movff	plusw1,btemp
 12271  01696A  503C               	movf	(btemp+18)^0,w,c
 12272  01696C  582A               	subwfb	btemp^0,w,c
 12273  01696E  0EE3               	movlw	-29
 12274  016970  006F FF8C  F02A    	movff	plusw1,btemp
 12275  016976  503D               	movf	(btemp+19)^0,w,c
 12276  016978  582A               	subwfb	btemp^0,w,c
 12277  01697A  0EE4               	movlw	-28
 12278  01697C  006F FF8C  F02A    	movff	plusw1,btemp
 12279  016982  503E               	movf	(btemp+20)^0,w,c
 12280  016984  582A               	subwfb	btemp^0,w,c
 12281  016986  0EE5               	movlw	-27
 12282  016988  006F FF8C  F02A    	movff	plusw1,btemp
 12283  01698E  503F               	movf	(btemp+21)^0,w,c
 12284  016990  582A               	subwfb	btemp^0,w,c
 12285  016992  0EE6               	movlw	-26
 12286  016994  006F FF8C  F02A    	movff	plusw1,btemp
 12287  01699A  5040               	movf	(btemp+22)^0,w,c
 12288  01699C  582A               	subwfb	btemp^0,w,c
 12289  01699E  0EE7               	movlw	-25
 12290  0169A0  50E3               	movf	plusw1,w,c
 12291  0169A2  0A80               	xorlw	128
 12292  0169A4  6E2A               	movwf	btemp^0,c
 12293  0169A6  5041               	movf	(btemp+23)^0,w,c
 12294  0169A8  0A80               	xorlw	128
 12295  0169AA  582A               	subwfb	btemp^0,w,c
 12296  0169AC  B0D8               	btfsc	status,0,c
 12297  0169AE  D011               	goto	l17053
 12298  0169B0  D775               	goto	l17047
 12299  0169B2                     l17051:
 12300                           
 12301                           ;stkvar	_y @ sp[(-24)+0]
 12302  0169B2  50E1               	movf	fsr1l,w,c
 12303  0169B4  0FE8               	addlw	-24
 12304  0169B6  6ED9               	movwf	fsr2l,c
 12305  0169B8  50E2               	movf	fsr1h,w,c
 12306  0169BA  6EDA               	movwf	fsr2h,c
 12307  0169BC  0EFF               	movlw	255
 12308  0169BE  22DA               	addwfc	fsr2h,f,c
 12309  0169C0  2ADE               	incf	postinc2,f,c
 12310  0169C2  0E00               	movlw	0
 12311  0169C4  22DE               	addwfc	postinc2,f,c
 12312  0169C6  22DE               	addwfc	postinc2,f,c
 12313  0169C8  22DE               	addwfc	postinc2,f,c
 12314  0169CA  22DE               	addwfc	postinc2,f,c
 12315  0169CC  22DE               	addwfc	postinc2,f,c
 12316  0169CE  22DE               	addwfc	postinc2,f,c
 12317  0169D0  22DE               	addwfc	postinc2,f,c
 12318  0169D2                     l17053:
 12319                           
 12320                           ;stkvar	_t @ sp[(-24)+-8]
 12321  0169D2  0E00               	movlw	0
 12322  0169D4  6EE6               	movwf	postinc1,c
 12323  0169D6  0E00               	movlw	0
 12324  0169D8  6EE6               	movwf	postinc1,c
 12325                           
 12326                           ;stkvar	_y @ sp[(-26)+0]
 12327  0169DA  0EE6               	movlw	-26
 12328  0169DC  50E3               	movf	plusw1,w,c
 12329  0169DE  0F01               	addlw	1
 12330  0169E0  6E3A               	movwf	(btemp+16)^0,c
 12331  0169E2  0EE7               	movlw	-25
 12332  0169E4  006F FF8C  F03B    	movff	plusw1,btemp+17
 12333  0169EA  0E00               	movlw	0
 12334  0169EC  223B               	addwfc	(btemp+17)^0,f,c
 12335  0169EE  0EE8               	movlw	-24
 12336  0169F0  006F FF8C  F03C    	movff	plusw1,btemp+18
 12337  0169F6  0E00               	movlw	0
 12338  0169F8  223C               	addwfc	(btemp+18)^0,f,c
 12339  0169FA  0EE9               	movlw	-23
 12340  0169FC  006F FF8C  F03D    	movff	plusw1,btemp+19
 12341  016A02  0E00               	movlw	0
 12342  016A04  223D               	addwfc	(btemp+19)^0,f,c
 12343  016A06  0EEA               	movlw	-22
 12344  016A08  006F FF8C  F03E    	movff	plusw1,btemp+20
 12345  016A0E  0E00               	movlw	0
 12346  016A10  223E               	addwfc	(btemp+20)^0,f,c
 12347  016A12  0EEB               	movlw	-21
 12348  016A14  006F FF8C  F03F    	movff	plusw1,btemp+21
 12349  016A1A  0E00               	movlw	0
 12350  016A1C  223F               	addwfc	(btemp+21)^0,f,c
 12351  016A1E  0EEC               	movlw	-20
 12352  016A20  006F FF8C  F040    	movff	plusw1,btemp+22
 12353  016A26  0E00               	movlw	0
 12354  016A28  2240               	addwfc	(btemp+22)^0,f,c
 12355  016A2A  0EED               	movlw	-19
 12356  016A2C  006F FF8C  F041    	movff	plusw1,btemp+23
 12357  016A32  0E00               	movlw	0
 12358  016A34  2241               	addwfc	(btemp+23)^0,f,c
 12359  016A36  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12360  016A3C  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12361  016A42  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12362  016A48  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12363  016A4E  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12364  016A54  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12365  016A5A  0060  F103  FFE6   	movff	btemp+22,postinc1
 12366  016A60  0060  F107  FFE6   	movff	btemp+23,postinc1
 12367  016A66  ECFC  F0AE         	call	___year_to_secs	;wreg free
 12368  016A6A  52E5               	movf	postdec1,f,c
 12369  016A6C  006F FF9C  F041    	movff	indf1,btemp+23
 12370  016A72  52E5               	movf	postdec1,f,c
 12371  016A74  006F FF9C  F040    	movff	indf1,btemp+22
 12372  016A7A  52E5               	movf	postdec1,f,c
 12373  016A7C  006F FF9C  F03F    	movff	indf1,btemp+21
 12374  016A82  52E5               	movf	postdec1,f,c
 12375  016A84  006F FF9C  F03E    	movff	indf1,btemp+20
 12376  016A8A  52E5               	movf	postdec1,f,c
 12377  016A8C  006F FF9C  F03D    	movff	indf1,btemp+19
 12378  016A92  52E5               	movf	postdec1,f,c
 12379  016A94  006F FF9C  F03C    	movff	indf1,btemp+18
 12380  016A9A  52E5               	movf	postdec1,f,c
 12381  016A9C  006F FF9C  F03B    	movff	indf1,btemp+17
 12382  016AA2  52E5               	movf	postdec1,f,c
 12383  016AA4  006F FF9C  F03A    	movff	indf1,btemp+16
 12384  016AAA  52E5               	movf	postdec1,f,c
 12385  016AAC  52E5               	movf	postdec1,f,c
 12386  016AAE  0EE0               	movlw	-32
 12387  016AB0  50E3               	movf	plusw1,w,c
 12388  016AB2  5C3A               	subwf	(btemp+16)^0,w,c
 12389  016AB4  0EE1               	movlw	-31
 12390  016AB6  50E3               	movf	plusw1,w,c
 12391  016AB8  583B               	subwfb	(btemp+17)^0,w,c
 12392  016ABA  0EE2               	movlw	-30
 12393  016ABC  50E3               	movf	plusw1,w,c
 12394  016ABE  583C               	subwfb	(btemp+18)^0,w,c
 12395  016AC0  0EE3               	movlw	-29
 12396  016AC2  50E3               	movf	plusw1,w,c
 12397  016AC4  583D               	subwfb	(btemp+19)^0,w,c
 12398  016AC6  0EE4               	movlw	-28
 12399  016AC8  50E3               	movf	plusw1,w,c
 12400  016ACA  583E               	subwfb	(btemp+20)^0,w,c
 12401  016ACC  0EE5               	movlw	-27
 12402  016ACE  50E3               	movf	plusw1,w,c
 12403  016AD0  583F               	subwfb	(btemp+21)^0,w,c
 12404  016AD2  0EE6               	movlw	-26
 12405  016AD4  50E3               	movf	plusw1,w,c
 12406  016AD6  5840               	subwfb	(btemp+22)^0,w,c
 12407  016AD8  5041               	movf	(btemp+23)^0,w,c
 12408  016ADA  0A80               	xorlw	128
 12409  016ADC  6E2A               	movwf	btemp^0,c
 12410  016ADE  0EE7               	movlw	-25
 12411  016AE0  50E3               	movf	plusw1,w,c
 12412  016AE2  0A80               	xorlw	128
 12413  016AE4  582A               	subwfb	btemp^0,w,c
 12414  016AE6  A0D8               	btfss	status,0,c
 12415  016AE8  D764               	goto	l17051
 12416                           
 12417                           ;stkvar	_y @ sp[(-24)+0]
 12418  016AEA  0EE8               	movlw	-24
 12419  016AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 12420  016AF2  006F FF8F FFE6     	movff	plusw1,postinc1
 12421  016AF8  0EE8               	movlw	low _r0
 12422  016AFA  6EE6               	movwf	postinc1,c
 12423  016AFC  0E02               	movlw	high _r0
 12424  016AFE  6EE6               	movwf	postinc1,c
 12425  016B00  ECF9  F0BF         	call	_rule_to_secs	;wreg free
 12426  016B04  52E5               	movf	postdec1,f,c
 12427  016B06  006F FF9C  F041    	movff	indf1,btemp+23
 12428  016B0C  52E5               	movf	postdec1,f,c
 12429  016B0E  006F FF9C  F040    	movff	indf1,btemp+22
 12430  016B14  52E5               	movf	postdec1,f,c
 12431  016B16  006F FF9C  F03F    	movff	indf1,btemp+21
 12432  016B1C  52E5               	movf	postdec1,f,c
 12433  016B1E  006F FF9C  F03E    	movff	indf1,btemp+20
 12434  016B24  52E5               	movf	postdec1,f,c
 12435  016B26  006F FF9C  F03D    	movff	indf1,btemp+19
 12436  016B2C  52E5               	movf	postdec1,f,c
 12437  016B2E  006F FF9C  F03C    	movff	indf1,btemp+18
 12438  016B34  52E5               	movf	postdec1,f,c
 12439  016B36  006F FF9C  F03B    	movff	indf1,btemp+17
 12440  016B3C  52E5               	movf	postdec1,f,c
 12441  016B3E  006F FF9C  F03A    	movff	indf1,btemp+16
 12442                           
 12443                           ;stkvar	_t0 @ sp[(-24)+16]
 12444  016B44  0EF8               	movlw	-8
 12445  016B46  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12446  016B4C  0EF9               	movlw	-7
 12447  016B4E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12448  016B54  0EFA               	movlw	-6
 12449  016B56  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12450  016B5C  0EFB               	movlw	-5
 12451  016B5E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12452  016B64  0EFC               	movlw	-4
 12453  016B66  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12454  016B6C  0EFD               	movlw	-3
 12455  016B6E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12456  016B74  0EFE               	movlw	-2
 12457  016B76  0060  F103  FFE3   	movff	btemp+22,plusw1
 12458  016B7C  0EFF               	movlw	-1
 12459  016B7E  0060  F107  FFE3   	movff	btemp+23,plusw1
 12460                           
 12461                           ;stkvar	_y @ sp[(-24)+0]
 12462  016B84  0EE8               	movlw	-24
 12463  016B86  006F FF8F FFE6     	movff	plusw1,postinc1
 12464  016B8C  006F FF8F FFE6     	movff	plusw1,postinc1
 12465  016B92  0EDE               	movlw	low _r1
 12466  016B94  6EE6               	movwf	postinc1,c
 12467  016B96  0E02               	movlw	high _r1
 12468  016B98  6EE6               	movwf	postinc1,c
 12469  016B9A  ECF9  F0BF         	call	_rule_to_secs	;wreg free
 12470  016B9E  52E5               	movf	postdec1,f,c
 12471  016BA0  006F FF9C  F041    	movff	indf1,btemp+23
 12472  016BA6  52E5               	movf	postdec1,f,c
 12473  016BA8  006F FF9C  F040    	movff	indf1,btemp+22
 12474  016BAE  52E5               	movf	postdec1,f,c
 12475  016BB0  006F FF9C  F03F    	movff	indf1,btemp+21
 12476  016BB6  52E5               	movf	postdec1,f,c
 12477  016BB8  006F FF9C  F03E    	movff	indf1,btemp+20
 12478  016BBE  52E5               	movf	postdec1,f,c
 12479  016BC0  006F FF9C  F03D    	movff	indf1,btemp+19
 12480  016BC6  52E5               	movf	postdec1,f,c
 12481  016BC8  006F FF9C  F03C    	movff	indf1,btemp+18
 12482  016BCE  52E5               	movf	postdec1,f,c
 12483  016BD0  006F FF9C  F03B    	movff	indf1,btemp+17
 12484  016BD6  52E5               	movf	postdec1,f,c
 12485  016BD8  006F FF9C  F03A    	movff	indf1,btemp+16
 12486                           
 12487                           ;stkvar	_t1 @ sp[(-24)+8]
 12488  016BDE  0EF0               	movlw	-16
 12489  016BE0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12490  016BE6  0EF1               	movlw	-15
 12491  016BE8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12492  016BEE  0EF2               	movlw	-14
 12493  016BF0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12494  016BF6  0EF3               	movlw	-13
 12495  016BF8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12496  016BFE  0EF4               	movlw	-12
 12497  016C00  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12498  016C06  0EF5               	movlw	-11
 12499  016C08  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12500  016C0E  0EF6               	movlw	-10
 12501  016C10  0060  F103  FFE3   	movff	btemp+22,plusw1
 12502  016C16  0EF7               	movlw	-9
 12503  016C18  0060  F107  FFE3   	movff	btemp+23,plusw1
 12504                           
 12505                           ;stkvar	_local @ sp[(-24)+-10]
 12506  016C1E  0EDE               	movlw	-34
 12507  016C20  006F FF8C  F02A    	movff	plusw1,btemp
 12508  016C26  0EDF               	movlw	-33
 12509  016C28  50E3               	movf	plusw1,w,c
 12510  016C2A  102A               	iorwf	btemp^0,w,c
 12511  016C2C  A4D8               	btfss	status,2,c
 12512  016C2E  D044               	goto	l17063
 12513  016C30  0060  F1C0  F03A   	movff	___timezone,btemp+16
 12514  016C36  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 12515  016C3C  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 12516  016C42  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 12517  016C48  6A3E               	clrf	(btemp+20)^0,c
 12518  016C4A  BE3D               	btfsc	(btemp+19)^0,7,c
 12519  016C4C  683E               	setf	(btemp+20)^0,c
 12520  016C4E  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12521  016C54  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12522  016C5A  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12523                           
 12524                           ;stkvar	_t0 @ sp[(-24)+16]
 12525  016C60  50E1               	movf	fsr1l,w,c
 12526  016C62  0FF8               	addlw	-8
 12527  016C64  6ED9               	movwf	fsr2l,c
 12528  016C66  50E2               	movf	fsr1h,w,c
 12529  016C68  6EDA               	movwf	fsr2h,c
 12530  016C6A  0EFF               	movlw	255
 12531  016C6C  22DA               	addwfc	fsr2h,f,c
 12532  016C6E  503A               	movf	(btemp+16)^0,w,c
 12533  016C70  26DE               	addwf	postinc2,f,c
 12534  016C72  503B               	movf	(btemp+17)^0,w,c
 12535  016C74  22DE               	addwfc	postinc2,f,c
 12536  016C76  503C               	movf	(btemp+18)^0,w,c
 12537  016C78  22DE               	addwfc	postinc2,f,c
 12538  016C7A  503D               	movf	(btemp+19)^0,w,c
 12539  016C7C  22DE               	addwfc	postinc2,f,c
 12540  016C7E  503E               	movf	(btemp+20)^0,w,c
 12541  016C80  22DE               	addwfc	postinc2,f,c
 12542  016C82  503F               	movf	(btemp+21)^0,w,c
 12543  016C84  22DE               	addwfc	postinc2,f,c
 12544  016C86  5040               	movf	(btemp+22)^0,w,c
 12545  016C88  22DE               	addwfc	postinc2,f,c
 12546  016C8A  5041               	movf	(btemp+23)^0,w,c
 12547  016C8C  22DE               	addwfc	postinc2,f,c
 12548                           
 12549                           ;stkvar	_t1 @ sp[(-24)+8]
 12550  016C8E  50E1               	movf	fsr1l,w,c
 12551  016C90  0FF0               	addlw	-16
 12552  016C92  6ED9               	movwf	fsr2l,c
 12553  016C94  50E2               	movf	fsr1h,w,c
 12554  016C96  6EDA               	movwf	fsr2h,c
 12555  016C98  0EFF               	movlw	255
 12556  016C9A  22DA               	addwfc	fsr2h,f,c
 12557  016C9C  0100               	movlb	0	; () banked
 12558  016C9E  51B6               	movf	_dst_off& (0+255),w,b
 12559  016CA0  26DE               	addwf	postinc2,f,c
 12560  016CA2  51B7               	movf	(_dst_off+1)& (0+255),w,b
 12561  016CA4  22DE               	addwfc	postinc2,f,c
 12562  016CA6  0E00               	movlw	0
 12563  016CA8  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 12564  016CAA  0EFF               	movlw	255
 12565  016CAC  22DE               	addwfc	postinc2,f,c
 12566  016CAE  22DE               	addwfc	postinc2,f,c
 12567  016CB0  22DE               	addwfc	postinc2,f,c
 12568  016CB2  22DE               	addwfc	postinc2,f,c
 12569  016CB4  22DE               	addwfc	postinc2,f,c
 12570  016CB6  22DE               	addwfc	postinc2,f,c
 12571  016CB8                     l17063:
 12572                           
 12573                           ;stkvar	_t1 @ sp[(-24)+8]
 12574                           ;stkvar	_t0 @ sp[(-24)+16]
 12575  016CB8  50E1               	movf	fsr1l,w,c
 12576  016CBA  0FF8               	addlw	-8
 12577  016CBC  6ED9               	movwf	fsr2l,c
 12578  016CBE  50E2               	movf	fsr1h,w,c
 12579  016CC0  6EDA               	movwf	fsr2h,c
 12580  016CC2  0EFF               	movlw	255
 12581  016CC4  22DA               	addwfc	fsr2h,f,c
 12582  016CC6  0EF0               	movlw	-16
 12583  016CC8  50E3               	movf	plusw1,w,c
 12584  016CCA  5CDE               	subwf	postinc2,w,c
 12585  016CCC  0EF1               	movlw	-15
 12586  016CCE  50E3               	movf	plusw1,w,c
 12587  016CD0  58DE               	subwfb	postinc2,w,c
 12588  016CD2  0EF2               	movlw	-14
 12589  016CD4  50E3               	movf	plusw1,w,c
 12590  016CD6  58DE               	subwfb	postinc2,w,c
 12591  016CD8  0EF3               	movlw	-13
 12592  016CDA  50E3               	movf	plusw1,w,c
 12593  016CDC  58DE               	subwfb	postinc2,w,c
 12594  016CDE  0EF4               	movlw	-12
 12595  016CE0  50E3               	movf	plusw1,w,c
 12596  016CE2  58DE               	subwfb	postinc2,w,c
 12597  016CE4  0EF5               	movlw	-11
 12598  016CE6  50E3               	movf	plusw1,w,c
 12599  016CE8  58DE               	subwfb	postinc2,w,c
 12600  016CEA  0EF6               	movlw	-10
 12601  016CEC  50E3               	movf	plusw1,w,c
 12602  016CEE  58DE               	subwfb	postinc2,w,c
 12603  016CF0  50DE               	movf	postinc2,w,c
 12604  016CF2  0A80               	xorlw	128
 12605  016CF4  6E2A               	movwf	btemp^0,c
 12606  016CF6  0EF7               	movlw	-9
 12607  016CF8  50E3               	movf	plusw1,w,c
 12608  016CFA  0A80               	xorlw	128
 12609  016CFC  582A               	subwfb	btemp^0,w,c
 12610  016CFE  B0D8               	btfsc	status,0,c
 12611  016D00  D04B               	goto	l17073
 12612                           
 12613                           ;stkvar	_t0 @ sp[(-24)+16]
 12614                           ;stkvar	_t @ sp[(-24)+-8]
 12615  016D02  50E1               	movf	fsr1l,w,c
 12616  016D04  0FE0               	addlw	-32
 12617  016D06  6ED9               	movwf	fsr2l,c
 12618  016D08  50E2               	movf	fsr1h,w,c
 12619  016D0A  6EDA               	movwf	fsr2h,c
 12620  016D0C  0EFF               	movlw	255
 12621  016D0E  22DA               	addwfc	fsr2h,f,c
 12622  016D10  0EF8               	movlw	-8
 12623  016D12  50E3               	movf	plusw1,w,c
 12624  016D14  5CDE               	subwf	postinc2,w,c
 12625  016D16  0EF9               	movlw	-7
 12626  016D18  50E3               	movf	plusw1,w,c
 12627  016D1A  58DE               	subwfb	postinc2,w,c
 12628  016D1C  0EFA               	movlw	-6
 12629  016D1E  50E3               	movf	plusw1,w,c
 12630  016D20  58DE               	subwfb	postinc2,w,c
 12631  016D22  0EFB               	movlw	-5
 12632  016D24  50E3               	movf	plusw1,w,c
 12633  016D26  58DE               	subwfb	postinc2,w,c
 12634  016D28  0EFC               	movlw	-4
 12635  016D2A  50E3               	movf	plusw1,w,c
 12636  016D2C  58DE               	subwfb	postinc2,w,c
 12637  016D2E  0EFD               	movlw	-3
 12638  016D30  50E3               	movf	plusw1,w,c
 12639  016D32  58DE               	subwfb	postinc2,w,c
 12640  016D34  0EFE               	movlw	-2
 12641  016D36  50E3               	movf	plusw1,w,c
 12642  016D38  58DE               	subwfb	postinc2,w,c
 12643  016D3A  50DE               	movf	postinc2,w,c
 12644  016D3C  0A80               	xorlw	128
 12645  016D3E  6E2A               	movwf	btemp^0,c
 12646  016D40  0EFF               	movlw	-1
 12647  016D42  50E3               	movf	plusw1,w,c
 12648  016D44  0A80               	xorlw	128
 12649  016D46  582A               	subwfb	btemp^0,w,c
 12650  016D48  A0D8               	btfss	status,0,c
 12651  016D4A  D070               	goto	u16880
 12652                           
 12653                           ;stkvar	_t1 @ sp[(-24)+8]
 12654                           ;stkvar	_t @ sp[(-24)+-8]
 12655  016D4C  50E1               	movf	fsr1l,w,c
 12656  016D4E  0FE0               	addlw	-32
 12657  016D50  6ED9               	movwf	fsr2l,c
 12658  016D52  50E2               	movf	fsr1h,w,c
 12659  016D54  6EDA               	movwf	fsr2h,c
 12660  016D56  0EFF               	movlw	255
 12661  016D58  22DA               	addwfc	fsr2h,f,c
 12662  016D5A  0EF0               	movlw	-16
 12663  016D5C  50E3               	movf	plusw1,w,c
 12664  016D5E  5CDE               	subwf	postinc2,w,c
 12665  016D60  0EF1               	movlw	-15
 12666  016D62  50E3               	movf	plusw1,w,c
 12667  016D64  58DE               	subwfb	postinc2,w,c
 12668  016D66  0EF2               	movlw	-14
 12669  016D68  50E3               	movf	plusw1,w,c
 12670  016D6A  58DE               	subwfb	postinc2,w,c
 12671  016D6C  0EF3               	movlw	-13
 12672  016D6E  50E3               	movf	plusw1,w,c
 12673  016D70  58DE               	subwfb	postinc2,w,c
 12674  016D72  0EF4               	movlw	-12
 12675  016D74  50E3               	movf	plusw1,w,c
 12676  016D76  58DE               	subwfb	postinc2,w,c
 12677  016D78  0EF5               	movlw	-11
 12678  016D7A  50E3               	movf	plusw1,w,c
 12679  016D7C  58DE               	subwfb	postinc2,w,c
 12680  016D7E  0EF6               	movlw	-10
 12681  016D80  50E3               	movf	plusw1,w,c
 12682  016D82  58DE               	subwfb	postinc2,w,c
 12683  016D84  50DE               	movf	postinc2,w,c
 12684  016D86  0A80               	xorlw	128
 12685  016D88  6E2A               	movwf	btemp^0,c
 12686  016D8A  0EF7               	movlw	-9
 12687  016D8C  50E3               	movf	plusw1,w,c
 12688  016D8E  0A80               	xorlw	128
 12689  016D90  582A               	subwfb	btemp^0,w,c
 12690  016D92  A0D8               	btfss	status,0,c
 12691  016D94  D0C1               	goto	l17091
 12692  016D96  D04A               	goto	u16880
 12693  016D98                     l17073:
 12694                           
 12695                           ;stkvar	_t1 @ sp[(-24)+8]
 12696                           ;stkvar	_t @ sp[(-24)+-8]
 12697  016D98  50E1               	movf	fsr1l,w,c
 12698  016D9A  0FE0               	addlw	-32
 12699  016D9C  6ED9               	movwf	fsr2l,c
 12700  016D9E  50E2               	movf	fsr1h,w,c
 12701  016DA0  6EDA               	movwf	fsr2h,c
 12702  016DA2  0EFF               	movlw	255
 12703  016DA4  22DA               	addwfc	fsr2h,f,c
 12704  016DA6  0EF0               	movlw	-16
 12705  016DA8  50E3               	movf	plusw1,w,c
 12706  016DAA  5CDE               	subwf	postinc2,w,c
 12707  016DAC  0EF1               	movlw	-15
 12708  016DAE  50E3               	movf	plusw1,w,c
 12709  016DB0  58DE               	subwfb	postinc2,w,c
 12710  016DB2  0EF2               	movlw	-14
 12711  016DB4  50E3               	movf	plusw1,w,c
 12712  016DB6  58DE               	subwfb	postinc2,w,c
 12713  016DB8  0EF3               	movlw	-13
 12714  016DBA  50E3               	movf	plusw1,w,c
 12715  016DBC  58DE               	subwfb	postinc2,w,c
 12716  016DBE  0EF4               	movlw	-12
 12717  016DC0  50E3               	movf	plusw1,w,c
 12718  016DC2  58DE               	subwfb	postinc2,w,c
 12719  016DC4  0EF5               	movlw	-11
 12720  016DC6  50E3               	movf	plusw1,w,c
 12721  016DC8  58DE               	subwfb	postinc2,w,c
 12722  016DCA  0EF6               	movlw	-10
 12723  016DCC  50E3               	movf	plusw1,w,c
 12724  016DCE  58DE               	subwfb	postinc2,w,c
 12725  016DD0  50DE               	movf	postinc2,w,c
 12726  016DD2  0A80               	xorlw	128
 12727  016DD4  6E2A               	movwf	btemp^0,c
 12728  016DD6  0EF7               	movlw	-9
 12729  016DD8  50E3               	movf	plusw1,w,c
 12730  016DDA  0A80               	xorlw	128
 12731  016DDC  582A               	subwfb	btemp^0,w,c
 12732  016DDE  A0D8               	btfss	status,0,c
 12733  016DE0  D09B               	goto	l17091
 12734                           
 12735                           ;stkvar	_t0 @ sp[(-24)+16]
 12736                           ;stkvar	_t @ sp[(-24)+-8]
 12737  016DE2  50E1               	movf	fsr1l,w,c
 12738  016DE4  0FE0               	addlw	-32
 12739  016DE6  6ED9               	movwf	fsr2l,c
 12740  016DE8  50E2               	movf	fsr1h,w,c
 12741  016DEA  6EDA               	movwf	fsr2h,c
 12742  016DEC  0EFF               	movlw	255
 12743  016DEE  22DA               	addwfc	fsr2h,f,c
 12744  016DF0  0EF8               	movlw	-8
 12745  016DF2  50E3               	movf	plusw1,w,c
 12746  016DF4  5CDE               	subwf	postinc2,w,c
 12747  016DF6  0EF9               	movlw	-7
 12748  016DF8  50E3               	movf	plusw1,w,c
 12749  016DFA  58DE               	subwfb	postinc2,w,c
 12750  016DFC  0EFA               	movlw	-6
 12751  016DFE  50E3               	movf	plusw1,w,c
 12752  016E00  58DE               	subwfb	postinc2,w,c
 12753  016E02  0EFB               	movlw	-5
 12754  016E04  50E3               	movf	plusw1,w,c
 12755  016E06  58DE               	subwfb	postinc2,w,c
 12756  016E08  0EFC               	movlw	-4
 12757  016E0A  50E3               	movf	plusw1,w,c
 12758  016E0C  58DE               	subwfb	postinc2,w,c
 12759  016E0E  0EFD               	movlw	-3
 12760  016E10  50E3               	movf	plusw1,w,c
 12761  016E12  58DE               	subwfb	postinc2,w,c
 12762  016E14  0EFE               	movlw	-2
 12763  016E16  50E3               	movf	plusw1,w,c
 12764  016E18  58DE               	subwfb	postinc2,w,c
 12765  016E1A  50DE               	movf	postinc2,w,c
 12766  016E1C  0A80               	xorlw	128
 12767  016E1E  6E2A               	movwf	btemp^0,c
 12768  016E20  0EFF               	movlw	-1
 12769  016E22  50E3               	movf	plusw1,w,c
 12770  016E24  0A80               	xorlw	128
 12771  016E26  582A               	subwfb	btemp^0,w,c
 12772  016E28  B0D8               	btfsc	status,0,c
 12773  016E2A  D076               	goto	l17091
 12774  016E2C                     u16880:
 12775                           
 12776                           ;stkvar	_isdst @ sp[(-24)+-12]
 12777  016E2C  0EDC               	movlw	-36
 12778  016E2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12779  016E34  0EDD               	movlw	-35
 12780  016E36  006F FF8F FFDA     	movff	plusw1,fsr2h
 12781  016E3C  0E00               	movlw	0
 12782  016E3E  6EDE               	movwf	postinc2,c
 12783  016E40  0E00               	movlw	0
 12784  016E42  6EDD               	movwf	postdec2,c
 12785  016E44  0060  F1C0  F032   	movff	___timezone,btemp+8
 12786  016E4A  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 12787  016E50  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 12788  016E56  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 12789  016E5C  1E32               	comf	(btemp+8)^0,f,c
 12790  016E5E  1E33               	comf	(btemp+9)^0,f,c
 12791  016E60  1E34               	comf	(btemp+10)^0,f,c
 12792  016E62  1E35               	comf	(btemp+11)^0,f,c
 12793  016E64  2A32               	incf	(btemp+8)^0,f,c
 12794  016E66  0E00               	movlw	0
 12795  016E68  2233               	addwfc	(btemp+9)^0,f,c
 12796  016E6A  2234               	addwfc	(btemp+10)^0,f,c
 12797  016E6C  2235               	addwfc	(btemp+11)^0,f,c
 12798                           
 12799                           ;stkvar	_offset @ sp[(-24)+-14]
 12800  016E6E  0EDA               	movlw	-38
 12801  016E70  006F FF8F FFD9     	movff	plusw1,fsr2l
 12802  016E76  0EDB               	movlw	-37
 12803  016E78  006F FF8F FFDA     	movff	plusw1,fsr2h
 12804  016E7E  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 12805  016E84  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 12806  016E8A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 12807  016E90  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 12808                           
 12809                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12810  016E96  0ED8               	movlw	-40
 12811  016E98  006F FF8C  F02A    	movff	plusw1,btemp
 12812  016E9E  0ED9               	movlw	-39
 12813  016EA0  50E3               	movf	plusw1,w,c
 12814  016EA2  102A               	iorwf	btemp^0,w,c
 12815  016EA4  B4D8               	btfsc	status,2,c
 12816  016EA6  D029               	goto	l17087
 12817  016EA8  0060  F2D8  F034   	movff	_dst_off,btemp+10
 12818  016EAE  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 12819  016EB4  1E34               	comf	(btemp+10)^0,f,c
 12820  016EB6  1E35               	comf	(btemp+11)^0,f,c
 12821  016EB8  4A34               	infsnz	(btemp+10)^0,f,c
 12822  016EBA  2A35               	incf	(btemp+11)^0,f,c
 12823  016EBC  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 12824  016EC2  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 12825  016EC8  0E00               	movlw	0
 12826  016ECA  BE2F               	btfsc	(btemp+5)^0,7,c
 12827  016ECC  0EFF               	movlw	255
 12828  016ECE  6E30               	movwf	(btemp+6)^0,c
 12829  016ED0  6E31               	movwf	(btemp+7)^0,c
 12830                           
 12831                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12832  016ED2  0ED8               	movlw	-40
 12833  016ED4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12834  016EDA  0ED9               	movlw	-39
 12835  016EDC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12836  016EE2  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 12837  016EE8  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 12838  016EEE  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 12839  016EF4  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 12840  016EFA                     l17087:
 12841                           
 12842                           ;stkvar	_zonename @ sp[(-24)+-18]
 12843  016EFA  0ED6               	movlw	-42
 12844  016EFC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12845  016F02  0ED7               	movlw	-41
 12846  016F04  006F FF8F FFDA     	movff	plusw1,fsr2h
 12847  016F0A  0060  F1B3  FFDE   	movff	___tzname,postinc2
 12848  016F10  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 12849  016F16  D075               	goto	l4026
 12850  016F18                     l17091:
 12851                           
 12852                           ;stkvar	_isdst @ sp[(-24)+-12]
 12853  016F18  0EDC               	movlw	-36
 12854  016F1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12855  016F20  0EDD               	movlw	-35
 12856  016F22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12857  016F28  0E01               	movlw	1
 12858  016F2A  6EDE               	movwf	postinc2,c
 12859  016F2C  0E00               	movlw	0
 12860  016F2E  6EDD               	movwf	postdec2,c
 12861  016F30  0060  F2D8  F034   	movff	_dst_off,btemp+10
 12862  016F36  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 12863  016F3C  1E34               	comf	(btemp+10)^0,f,c
 12864  016F3E  1E35               	comf	(btemp+11)^0,f,c
 12865  016F40  4A34               	infsnz	(btemp+10)^0,f,c
 12866  016F42  2A35               	incf	(btemp+11)^0,f,c
 12867  016F44  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 12868  016F4A  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 12869  016F50  0E00               	movlw	0
 12870  016F52  BE2F               	btfsc	(btemp+5)^0,7,c
 12871  016F54  0EFF               	movlw	255
 12872  016F56  6E30               	movwf	(btemp+6)^0,c
 12873  016F58  6E31               	movwf	(btemp+7)^0,c
 12874                           
 12875                           ;stkvar	_offset @ sp[(-24)+-14]
 12876  016F5A  0EDA               	movlw	-38
 12877  016F5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12878  016F62  0EDB               	movlw	-37
 12879  016F64  006F FF8F FFDA     	movff	plusw1,fsr2h
 12880  016F6A  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 12881  016F70  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 12882  016F76  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 12883  016F7C  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 12884                           
 12885                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12886  016F82  0ED8               	movlw	-40
 12887  016F84  006F FF8C  F02A    	movff	plusw1,btemp
 12888  016F8A  0ED9               	movlw	-39
 12889  016F8C  50E3               	movf	plusw1,w,c
 12890  016F8E  102A               	iorwf	btemp^0,w,c
 12891  016F90  B4D8               	btfsc	status,2,c
 12892  016F92  D029               	goto	l17099
 12893  016F94  0060  F1C0  F032   	movff	___timezone,btemp+8
 12894  016F9A  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 12895  016FA0  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 12896  016FA6  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 12897  016FAC  1E32               	comf	(btemp+8)^0,f,c
 12898  016FAE  1E33               	comf	(btemp+9)^0,f,c
 12899  016FB0  1E34               	comf	(btemp+10)^0,f,c
 12900  016FB2  1E35               	comf	(btemp+11)^0,f,c
 12901  016FB4  2A32               	incf	(btemp+8)^0,f,c
 12902  016FB6  0E00               	movlw	0
 12903  016FB8  2233               	addwfc	(btemp+9)^0,f,c
 12904  016FBA  2234               	addwfc	(btemp+10)^0,f,c
 12905  016FBC  2235               	addwfc	(btemp+11)^0,f,c
 12906                           
 12907                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12908  016FBE  0ED8               	movlw	-40
 12909  016FC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12910  016FC6  0ED9               	movlw	-39
 12911  016FC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12912  016FCE  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 12913  016FD4  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 12914  016FDA  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 12915  016FE0  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 12916  016FE6                     l17099:
 12917                           
 12918                           ;stkvar	_zonename @ sp[(-24)+-18]
 12919  016FE6  0ED6               	movlw	-42
 12920  016FE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12921  016FEE  0ED7               	movlw	-41
 12922  016FF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12923  016FF6  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 12924  016FFC  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 12925  017002                     l4026:
 12926                           
 12927                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 12928  017002  0ED6               	movlw	214
 12929  017004  26E1               	addwf	fsr1l,f,c
 12930  017006  0EFF               	movlw	255
 12931  017008  22E2               	addwfc	fsr1h,f,c
 12932  01700A  0012               	return		;funcret
 12933  01700C                     __end_of___secs_to_zone:
 12934                           	opt callstack 0
 12935                           
 12936 ;; *************** function _scan_trans *****************
 12937 ;; Defined at:
 12938 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12939 ;; Parameters:    Size  Location     Type
 12940 ;;  t               8  [STACK] long long 
 12941 ;;  local           2  [STACK] int 
 12942 ;;  alt             2  [STACK] PTR unsigned int 
 12943 ;;		 -> alt(2), 
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;  x               8    0        unsigned long long 
 12946 ;;  a               2    0        unsigned int 
 12947 ;;  scale           2    0        int 
 12948 ;;  n               2    0        unsigned int 
 12949 ;;  m               2    0        unsigned int 
 12950 ;;  off             2    0        int 
 12951 ;; Return value:  Size  Location     Type
 12952 ;;                  2  [STACK] unsigned int 
 12953 ;; Registers used:
 12954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 12955 ;; Tracked objects:
 12956 ;;		On entry : 0/0
 12957 ;;		On exit  : 0/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12964 ;;Total ram usage:        0 bytes
 12965 ;; Hardware stack levels used:    1
 12966 ;; Hardware stack levels required when called:   16
 12967 ;; This function calls:
 12968 ;;		_zi_read32
 12969 ;; This function is called by:
 12970 ;;		___secs_to_zone
 12971 ;; This function uses a reentrant model
 12972 ;;
 12973                           
 12974                           	psect	text36
 12975  002466                     __ptext36:
 12976                           	opt callstack 0
 12977  002466                     _scan_trans:
 12978                           	opt callstack 11
 12979                           
 12980                           ;stkvar	_alt @ sp[(0)+-12]
 12981                           
 12982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 12983                           ;incstack = 0
 12984  002466  0EF4               	movlw	-12
 12985  002468  006F FF8C  F02A    	movff	plusw1,btemp
 12986  00246E  0EF5               	movlw	-11
 12987  002470  50E3               	movf	plusw1,w,c
 12988  002472  102A               	iorwf	btemp^0,w,c
 12989  002474  B4D8               	btfsc	status,2,c
 12990  002476  D00C               	goto	l16845
 12991                           
 12992                           ;stkvar	_alt @ sp[(0)+-12]
 12993  002478  0EF4               	movlw	-12
 12994  00247A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12995  002480  0EF5               	movlw	-11
 12996  002482  006F FF8F FFDA     	movff	plusw1,fsr2h
 12997  002488  0E00               	movlw	0
 12998  00248A  6EDE               	movwf	postinc2,c
 12999  00248C  0E00               	movlw	0
 13000  00248E  6EDD               	movwf	postdec2,c
 13001  002490                     l16845:
 13002  002490  0E00               	movlw	0
 13003  002492  6E2A               	movwf	btemp^0,c
 13004  002494  0E00               	movlw	0
 13005  002496  6E2B               	movwf	(btemp+1)^0,c
 13006                           
 13007                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13008  002498  0EF4               	movlw	244
 13009  00249A  26E1               	addwf	fsr1l,f,c
 13010  00249C  0EFF               	movlw	255
 13011  00249E  22E2               	addwfc	fsr1h,f,c
 13012  0024A0  0012               	return		;funcret
 13013  0024A2                     __end_of_scan_trans:
 13014                           	opt callstack 0
 13015                           
 13016 ;; *************** function _zi_read32 *****************
 13017 ;; Defined at:
 13018 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;  z               2  [STACK] PTR const unsigned char 
 13021 ;;		 -> NULL(0), 
 13022 ;; Auto vars:     Size  Location     Type
 13023 ;;		None
 13024 ;; Return value:  Size  Location     Type
 13025 ;;                  4  [STACK] unsigned long 
 13026 ;; Registers used:
 13027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13028 ;; Tracked objects:
 13029 ;;		On entry : 0/0
 13030 ;;		On exit  : 0/0
 13031 ;;		Unchanged: 0/0
 13032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13037 ;;Total ram usage:        0 bytes
 13038 ;; Hardware stack levels used:    1
 13039 ;; Hardware stack levels required when called:   15
 13040 ;; This function calls:
 13041 ;;		Nothing
 13042 ;; This function is called by:
 13043 ;;		_scan_trans
 13044 ;;		___secs_to_zone
 13045 ;; This function uses a reentrant model
 13046 ;;
 13047                           
 13048                           	psect	text37
 13049  0001AE                     __ptext37:
 13050                           	opt callstack 0
 13051  0001AE                     _zi_read32:
 13052                           	opt callstack 12
 13053                           
 13054                           ;stkvar	_z @ sp[(0)+-2]
 13055                           
 13056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13057                           ;incstack = 0
 13058  0001AE  0EFE               	movlw	-2
 13059  0001B0  006F FF8C  F034    	movff	plusw1,btemp+10
 13060  0001B6  0EFF               	movlw	-1
 13061  0001B8  006F FF8C  F035    	movff	plusw1,btemp+11
 13062  0001BE  0E02               	movlw	2
 13063  0001C0  2434               	addwf	(btemp+10)^0,w,c
 13064  0001C2  6ED9               	movwf	fsr2l,c
 13065  0001C4  0E00               	movlw	0
 13066  0001C6  2035               	addwfc	(btemp+11)^0,w,c
 13067  0001C8  6EDA               	movwf	fsr2h,c
 13068  0001CA  50DF               	movf	indf2,w,c
 13069  0001CC  6E35               	movwf	(btemp+11)^0,c
 13070  0001CE  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13071  0001D4  6A2F               	clrf	(btemp+5)^0,c
 13072  0001D6  6A30               	clrf	(btemp+6)^0,c
 13073  0001D8  6A31               	clrf	(btemp+7)^0,c
 13074  0001DA  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13075  0001E0  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13076  0001E6  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13077  0001EC  6A2E               	clrf	(btemp+4)^0,c
 13078                           
 13079                           ;stkvar	_z @ sp[(0)+-2]
 13080  0001EE  0EFE               	movlw	-2
 13081  0001F0  006F FF8C  F034    	movff	plusw1,btemp+10
 13082  0001F6  0EFF               	movlw	-1
 13083  0001F8  006F FF8C  F035    	movff	plusw1,btemp+11
 13084  0001FE  0E01               	movlw	1
 13085  000200  2434               	addwf	(btemp+10)^0,w,c
 13086  000202  6ED9               	movwf	fsr2l,c
 13087  000204  0E00               	movlw	0
 13088  000206  2035               	addwfc	(btemp+11)^0,w,c
 13089  000208  6EDA               	movwf	fsr2h,c
 13090  00020A  50DF               	movf	indf2,w,c
 13091  00020C  6E35               	movwf	(btemp+11)^0,c
 13092  00020E  0060  F0D4  F02A   	movff	btemp+11,btemp
 13093  000214  6A2B               	clrf	(btemp+1)^0,c
 13094  000216  6A2C               	clrf	(btemp+2)^0,c
 13095  000218  6A2D               	clrf	(btemp+3)^0,c
 13096  00021A  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13097  000220  0060  F0A8  F02C   	movff	btemp,btemp+2
 13098  000226  6A2B               	clrf	(btemp+1)^0,c
 13099  000228  6A2A               	clrf	btemp^0,c
 13100                           
 13101                           ;stkvar	_z @ sp[(0)+-2]
 13102  00022A  0EFE               	movlw	-2
 13103  00022C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13104  000232  0EFF               	movlw	-1
 13105  000234  006F FF8F FFDA     	movff	plusw1,fsr2h
 13106  00023A  50DF               	movf	indf2,w,c
 13107  00023C  6E32               	movwf	(btemp+8)^0,c
 13108  00023E  6A33               	clrf	(btemp+9)^0,c
 13109  000240  6A34               	clrf	(btemp+10)^0,c
 13110  000242  6A35               	clrf	(btemp+11)^0,c
 13111  000244  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13112  00024A  6A34               	clrf	(btemp+10)^0,c
 13113  00024C  6A33               	clrf	(btemp+9)^0,c
 13114  00024E  6A32               	clrf	(btemp+8)^0,c
 13115  000250  502A               	movf	btemp^0,w,c
 13116  000252  1232               	iorwf	(btemp+8)^0,f,c
 13117  000254  502B               	movf	(btemp+1)^0,w,c
 13118  000256  1233               	iorwf	(btemp+9)^0,f,c
 13119  000258  502C               	movf	(btemp+2)^0,w,c
 13120  00025A  1234               	iorwf	(btemp+10)^0,f,c
 13121  00025C  502D               	movf	(btemp+3)^0,w,c
 13122  00025E  1235               	iorwf	(btemp+11)^0,f,c
 13123  000260  502E               	movf	(btemp+4)^0,w,c
 13124  000262  1232               	iorwf	(btemp+8)^0,f,c
 13125  000264  502F               	movf	(btemp+5)^0,w,c
 13126  000266  1233               	iorwf	(btemp+9)^0,f,c
 13127  000268  5030               	movf	(btemp+6)^0,w,c
 13128  00026A  1234               	iorwf	(btemp+10)^0,f,c
 13129  00026C  5031               	movf	(btemp+7)^0,w,c
 13130  00026E  1235               	iorwf	(btemp+11)^0,f,c
 13131                           
 13132                           ;stkvar	_z @ sp[(0)+-2]
 13133  000270  0EFE               	movlw	-2
 13134  000272  006F FF8C  F030    	movff	plusw1,btemp+6
 13135  000278  0EFF               	movlw	-1
 13136  00027A  006F FF8C  F031    	movff	plusw1,btemp+7
 13137  000280  0E03               	movlw	3
 13138  000282  2430               	addwf	(btemp+6)^0,w,c
 13139  000284  6ED9               	movwf	fsr2l,c
 13140  000286  0E00               	movlw	0
 13141  000288  2031               	addwfc	(btemp+7)^0,w,c
 13142  00028A  6EDA               	movwf	fsr2h,c
 13143  00028C  50DF               	movf	indf2,w,c
 13144  00028E  1032               	iorwf	(btemp+8)^0,w,c
 13145  000290  6E2A               	movwf	btemp^0,c
 13146  000292  5033               	movf	(btemp+9)^0,w,c
 13147  000294  6E2B               	movwf	(btemp+1)^0,c
 13148  000296  5034               	movf	(btemp+10)^0,w,c
 13149  000298  6E2C               	movwf	(btemp+2)^0,c
 13150  00029A  5035               	movf	(btemp+11)^0,w,c
 13151  00029C  6E2D               	movwf	(btemp+3)^0,c
 13152                           
 13153                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13154  00029E  52E5               	movf	postdec1,f,c
 13155  0002A0  52E5               	movf	postdec1,f,c
 13156  0002A2  0012               	return		;funcret
 13157  0002A4                     __end_of_zi_read32:
 13158                           	opt callstack 0
 13159                           
 13160 ;; *************** function _rule_to_secs *****************
 13161 ;; Defined at:
 13162 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13163 ;; Parameters:    Size  Location     Type
 13164 ;;  rule            2  [STACK] PTR const int 
 13165 ;;		 -> r1(10), r0(10), 
 13166 ;;  year            2  [STACK] int 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  days            2  [STACK] int 
 13169 ;;  wday            2  [STACK] int 
 13170 ;;  t               8  [STACK] long long 
 13171 ;;  is_leap         2  [STACK] int 
 13172 ;;  n               2  [STACK] int 
 13173 ;;  x               2  [STACK] int 
 13174 ;;  m               2  [STACK] int 
 13175 ;;  d               2  [STACK] int 
 13176 ;; Return value:  Size  Location     Type
 13177 ;;                  8  [STACK] long long 
 13178 ;; Registers used:
 13179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13180 ;; Tracked objects:
 13181 ;;		On entry : 0/0
 13182 ;;		On exit  : 0/0
 13183 ;;		Unchanged: 0/0
 13184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13189 ;;Total ram usage:        0 bytes
 13190 ;; Hardware stack levels used:    1
 13191 ;; Hardware stack levels required when called:   17
 13192 ;; This function calls:
 13193 ;;		___aldiv
 13194 ;;		___aomod
 13195 ;;		___lmul
 13196 ;;		___month_to_secs
 13197 ;;		___year_to_secs
 13198 ;;		_days_in_month
 13199 ;; This function is called by:
 13200 ;;		___secs_to_zone
 13201 ;; This function uses a reentrant model
 13202 ;;
 13203                           
 13204                           	psect	text38
 13205  017FF2                     __ptext38:
 13206                           	opt callstack 0
 13207  017FF2                     _rule_to_secs:
 13208                           	opt callstack 0
 13209                           
 13210                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13211  017FF2  0E1A               	movlw	26
 13212  017FF4  26E1               	addwf	fsr1l,f,c
 13213  017FF6  0E00               	movlw	0
 13214  017FF8  22E2               	addwfc	fsr1h,f,c
 13215                           
 13216                           ;stkvar	_is_leap @ sp[(-22)+12]
 13217                           
 13218                           ;incstack = 0
 13219  017FFA  0EF6               	movlw	246
 13220  017FFC  24E1               	addwf	fsr1l,w,c
 13221  017FFE  6E2A               	movwf	btemp^0,c
 13222  018000  0EFF               	movlw	255
 13223  018002  20E2               	addwfc	fsr1h,w,c
 13224  018004  6E2B               	movwf	(btemp+1)^0,c
 13225  018006  0060  F0AB  FFE6   	movff	btemp,postinc1
 13226  01800C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13227                           
 13228                           ;stkvar	_year @ sp[(-24)+-8]
 13229  018012  0EE0               	movlw	-32
 13230  018014  006F FF8C  F03A    	movff	plusw1,btemp+16
 13231  01801A  0EE1               	movlw	-31
 13232  01801C  006F FF8C  F03B    	movff	plusw1,btemp+17
 13233  018022  6A3C               	clrf	(btemp+18)^0,c
 13234  018024  BE3B               	btfsc	(btemp+17)^0,7,c
 13235  018026  683C               	setf	(btemp+18)^0,c
 13236  018028  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13237  01802E  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13238  018034  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13239  01803A  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13240  018040  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13241  018046  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13242  01804C  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13243  018052  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13244  018058  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13245  01805E  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13246  018064  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13247  01806A  0060  F103  FFE6   	movff	btemp+22,postinc1
 13248  018070  0060  F107  FFE6   	movff	btemp+23,postinc1
 13249  018076  ECFC  F0AE         	call	___year_to_secs	;wreg free
 13250  01807A  52E5               	movf	postdec1,f,c
 13251  01807C  006F FF9C  F041    	movff	indf1,btemp+23
 13252  018082  52E5               	movf	postdec1,f,c
 13253  018084  006F FF9C  F040    	movff	indf1,btemp+22
 13254  01808A  52E5               	movf	postdec1,f,c
 13255  01808C  006F FF9C  F03F    	movff	indf1,btemp+21
 13256  018092  52E5               	movf	postdec1,f,c
 13257  018094  006F FF9C  F03E    	movff	indf1,btemp+20
 13258  01809A  52E5               	movf	postdec1,f,c
 13259  01809C  006F FF9C  F03D    	movff	indf1,btemp+19
 13260  0180A2  52E5               	movf	postdec1,f,c
 13261  0180A4  006F FF9C  F03C    	movff	indf1,btemp+18
 13262  0180AA  52E5               	movf	postdec1,f,c
 13263  0180AC  006F FF9C  F03B    	movff	indf1,btemp+17
 13264  0180B2  52E5               	movf	postdec1,f,c
 13265  0180B4  006F FF9C  F03A    	movff	indf1,btemp+16
 13266  0180BA  52E5               	movf	postdec1,f,c
 13267  0180BC  52E5               	movf	postdec1,f,c
 13268                           
 13269                           ;stkvar	_t @ sp[(-22)+4]
 13270  0180BE  0EEE               	movlw	-18
 13271  0180C0  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13272  0180C6  0EEF               	movlw	-17
 13273  0180C8  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13274  0180CE  0EF0               	movlw	-16
 13275  0180D0  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13276  0180D6  0EF1               	movlw	-15
 13277  0180D8  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13278  0180DE  0EF2               	movlw	-14
 13279  0180E0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13280  0180E6  0EF3               	movlw	-13
 13281  0180E8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13282  0180EE  0EF4               	movlw	-12
 13283  0180F0  0060  F103  FFE3   	movff	btemp+22,plusw1
 13284  0180F6  0EF5               	movlw	-11
 13285  0180F8  0060  F107  FFE3   	movff	btemp+23,plusw1
 13286                           
 13287                           ;stkvar	_rule @ sp[(-22)+-6]
 13288  0180FE  0EE4               	movlw	-28
 13289  018100  006F FF8F FFD9     	movff	plusw1,fsr2l
 13290  018106  0EE5               	movlw	-27
 13291  018108  006F FF8F FFDA     	movff	plusw1,fsr2h
 13292  01810E  0E4D               	movlw	77
 13293  018110  18DE               	xorwf	postinc2,w,c
 13294  018112  10DE               	iorwf	postinc2,w,c
 13295  018114  B4D8               	btfsc	status,2,c
 13296  018116  D074               	goto	l16961
 13297                           
 13298                           ;stkvar	_rule @ sp[(-22)+-6]
 13299  018118  0EE4               	movlw	-28
 13300  01811A  006F FF8C  F034    	movff	plusw1,btemp+10
 13301  018120  0EE5               	movlw	-27
 13302  018122  006F FF8C  F035    	movff	plusw1,btemp+11
 13303  018128  0E02               	movlw	2
 13304  01812A  2434               	addwf	(btemp+10)^0,w,c
 13305  01812C  6ED9               	movwf	fsr2l,c
 13306  01812E  0E00               	movlw	0
 13307  018130  2035               	addwfc	(btemp+11)^0,w,c
 13308  018132  6EDA               	movwf	fsr2h,c
 13309  018134  006F FF78  F034    	movff	postinc2,btemp+10
 13310  01813A  006F FF74  F035    	movff	postdec2,btemp+11
 13311                           
 13312                           ;stkvar	_x @ sp[(-22)+16]
 13313  018140  0EFA               	movlw	-6
 13314  018142  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13315  018148  0EFB               	movlw	-5
 13316  01814A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13317                           
 13318                           ;stkvar	_rule @ sp[(-22)+-6]
 13319  018150  0EE4               	movlw	-28
 13320  018152  006F FF8F FFD9     	movff	plusw1,fsr2l
 13321  018158  0EE5               	movlw	-27
 13322  01815A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13323  018160  0E4A               	movlw	74
 13324  018162  18DE               	xorwf	postinc2,w,c
 13325  018164  10DE               	iorwf	postinc2,w,c
 13326  018166  A4D8               	btfss	status,2,c
 13327  018168  D021               	goto	l16959
 13328                           
 13329                           ;stkvar	_x @ sp[(-22)+16]
 13330  01816A  0EFB               	movlw	-5
 13331  01816C  BEE3               	btfsc	plusw1,7,c
 13332  01816E  D014               	goto	u16730
 13333  018170  0EFB               	movlw	-5
 13334  018172  50E3               	movf	plusw1,w,c
 13335  018174  E108               	bnz	u16720
 13336  018176  0EFA               	movlw	-6
 13337  018178  006F FF8C  F02A    	movff	plusw1,btemp
 13338  01817E  0E3C               	movlw	60
 13339  018180  5E2A               	subwf	btemp^0,f,c
 13340  018182  A0D8               	btfss	status,0,c
 13341  018184  D009               	goto	u16730
 13342  018186                     u16720:
 13343                           
 13344                           ;stkvar	_is_leap @ sp[(-22)+12]
 13345  018186  0EF6               	movlw	-10
 13346  018188  006F FF8C  F02A    	movff	plusw1,btemp
 13347  01818E  0EF7               	movlw	-9
 13348  018190  50E3               	movf	plusw1,w,c
 13349  018192  102A               	iorwf	btemp^0,w,c
 13350  018194  A4D8               	btfss	status,2,c
 13351  018196  D00A               	goto	l16959
 13352  018198                     u16730:
 13353                           
 13354                           ;stkvar	_x @ sp[(-22)+16]
 13355  018198  50E1               	movf	fsr1l,w,c
 13356  01819A  0FFA               	addlw	-6
 13357  01819C  6ED9               	movwf	fsr2l,c
 13358  01819E  50E2               	movf	fsr1h,w,c
 13359  0181A0  6EDA               	movwf	fsr2h,c
 13360  0181A2  0EFF               	movlw	255
 13361  0181A4  22DA               	addwfc	fsr2h,f,c
 13362  0181A6  06DE               	decf	postinc2,f,c
 13363  0181A8  0E00               	movlw	0
 13364  0181AA  5ADD               	subwfb	postdec2,f,c
 13365  0181AC                     l16959:
 13366  0181AC  0E80               	movlw	128
 13367  0181AE  6EE6               	movwf	postinc1,c
 13368  0181B0  0E51               	movlw	81
 13369  0181B2  6EE6               	movwf	postinc1,c
 13370  0181B4  0E01               	movlw	1
 13371  0181B6  6EE6               	movwf	postinc1,c
 13372  0181B8  0E00               	movlw	0
 13373  0181BA  6EE6               	movwf	postinc1,c
 13374                           
 13375                           ;stkvar	_x @ sp[(-26)+16]
 13376  0181BC  0EF6               	movlw	-10
 13377  0181BE  006F FF8C  F034    	movff	plusw1,btemp+10
 13378  0181C4  0EF7               	movlw	-9
 13379  0181C6  006F FF8C  F035    	movff	plusw1,btemp+11
 13380  0181CC  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13381  0181D2  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13382  0181D8  0E00               	movlw	0
 13383  0181DA  BE2F               	btfsc	(btemp+5)^0,7,c
 13384  0181DC  0EFF               	movlw	255
 13385  0181DE  6E30               	movwf	(btemp+6)^0,c
 13386  0181E0  6E31               	movwf	(btemp+7)^0,c
 13387  0181E2  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13388  0181E8  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13389  0181EE  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13390  0181F4  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13391  0181FA  ECB8  F002         	call	___lmul	;wreg free
 13392  0181FE  D1EC               	goto	L9
 13393  018200                     l16961:
 13394                           
 13395                           ;stkvar	_rule @ sp[(-22)+-6]
 13396  018200  0EE4               	movlw	-28
 13397  018202  006F FF8C  F034    	movff	plusw1,btemp+10
 13398  018208  0EE5               	movlw	-27
 13399  01820A  006F FF8C  F035    	movff	plusw1,btemp+11
 13400  018210  0E02               	movlw	2
 13401  018212  2434               	addwf	(btemp+10)^0,w,c
 13402  018214  6ED9               	movwf	fsr2l,c
 13403  018216  0E00               	movlw	0
 13404  018218  2035               	addwfc	(btemp+11)^0,w,c
 13405  01821A  6EDA               	movwf	fsr2h,c
 13406  01821C  006F FF78  F034    	movff	postinc2,btemp+10
 13407  018222  006F FF74  F035    	movff	postdec2,btemp+11
 13408                           
 13409                           ;stkvar	_m @ sp[(-22)+18]
 13410  018228  0EFC               	movlw	-4
 13411  01822A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13412  018230  0EFD               	movlw	-3
 13413  018232  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13414                           
 13415                           ;stkvar	_rule @ sp[(-22)+-6]
 13416  018238  0EE4               	movlw	-28
 13417  01823A  006F FF8C  F034    	movff	plusw1,btemp+10
 13418  018240  0EE5               	movlw	-27
 13419  018242  006F FF8C  F035    	movff	plusw1,btemp+11
 13420  018248  0E04               	movlw	4
 13421  01824A  2434               	addwf	(btemp+10)^0,w,c
 13422  01824C  6ED9               	movwf	fsr2l,c
 13423  01824E  0E00               	movlw	0
 13424  018250  2035               	addwfc	(btemp+11)^0,w,c
 13425  018252  6EDA               	movwf	fsr2h,c
 13426  018254  006F FF78  F034    	movff	postinc2,btemp+10
 13427  01825A  006F FF74  F035    	movff	postdec2,btemp+11
 13428                           
 13429                           ;stkvar	_n @ sp[(-22)+14]
 13430  018260  0EF8               	movlw	-8
 13431  018262  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13432  018268  0EF9               	movlw	-7
 13433  01826A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13434                           
 13435                           ;stkvar	_rule @ sp[(-22)+-6]
 13436  018270  0EE4               	movlw	-28
 13437  018272  006F FF8C  F034    	movff	plusw1,btemp+10
 13438  018278  0EE5               	movlw	-27
 13439  01827A  006F FF8C  F035    	movff	plusw1,btemp+11
 13440  018280  0E06               	movlw	6
 13441  018282  2434               	addwf	(btemp+10)^0,w,c
 13442  018284  6ED9               	movwf	fsr2l,c
 13443  018286  0E00               	movlw	0
 13444  018288  2035               	addwfc	(btemp+11)^0,w,c
 13445  01828A  6EDA               	movwf	fsr2h,c
 13446  01828C  006F FF78  F034    	movff	postinc2,btemp+10
 13447  018292  006F FF74  F035    	movff	postdec2,btemp+11
 13448                           
 13449                           ;stkvar	_d @ sp[(-22)+20]
 13450  018298  0EFE               	movlw	-2
 13451  01829A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13452  0182A0  0EFF               	movlw	-1
 13453  0182A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13454                           
 13455                           ;stkvar	_is_leap @ sp[(-22)+12]
 13456  0182A8  0EF6               	movlw	-10
 13457  0182AA  006F FF8F FFE6     	movff	plusw1,postinc1
 13458  0182B0  006F FF8F FFE6     	movff	plusw1,postinc1
 13459                           
 13460                           ;stkvar	_m @ sp[(-24)+18]
 13461  0182B6  0EFA               	movlw	-6
 13462  0182B8  50E3               	movf	plusw1,w,c
 13463  0182BA  0FFF               	addlw	255
 13464  0182BC  6E34               	movwf	(btemp+10)^0,c
 13465  0182BE  0EFB               	movlw	-5
 13466  0182C0  006F FF8C  F035    	movff	plusw1,btemp+11
 13467  0182C6  0EFF               	movlw	255
 13468  0182C8  2235               	addwfc	(btemp+11)^0,f,c
 13469  0182CA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13470  0182D0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13471  0182D6  ECCD  F001         	call	___month_to_secs	;wreg free
 13472  0182DA  0060  F0A8  F03A   	movff	btemp,btemp+16
 13473  0182E0  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13474  0182E6  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13475  0182EC  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13476  0182F2  6A3E               	clrf	(btemp+20)^0,c
 13477  0182F4  BE3D               	btfsc	(btemp+19)^0,7,c
 13478  0182F6  683E               	setf	(btemp+20)^0,c
 13479  0182F8  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13480  0182FE  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13481  018304  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13482                           
 13483                           ;stkvar	_t @ sp[(-22)+4]
 13484  01830A  50E1               	movf	fsr1l,w,c
 13485  01830C  0FEE               	addlw	-18
 13486  01830E  6ED9               	movwf	fsr2l,c
 13487  018310  50E2               	movf	fsr1h,w,c
 13488  018312  6EDA               	movwf	fsr2h,c
 13489  018314  0EFF               	movlw	255
 13490  018316  22DA               	addwfc	fsr2h,f,c
 13491  018318  503A               	movf	(btemp+16)^0,w,c
 13492  01831A  26DE               	addwf	postinc2,f,c
 13493  01831C  503B               	movf	(btemp+17)^0,w,c
 13494  01831E  22DE               	addwfc	postinc2,f,c
 13495  018320  503C               	movf	(btemp+18)^0,w,c
 13496  018322  22DE               	addwfc	postinc2,f,c
 13497  018324  503D               	movf	(btemp+19)^0,w,c
 13498  018326  22DE               	addwfc	postinc2,f,c
 13499  018328  503E               	movf	(btemp+20)^0,w,c
 13500  01832A  22DE               	addwfc	postinc2,f,c
 13501  01832C  503F               	movf	(btemp+21)^0,w,c
 13502  01832E  22DE               	addwfc	postinc2,f,c
 13503  018330  5040               	movf	(btemp+22)^0,w,c
 13504  018332  22DE               	addwfc	postinc2,f,c
 13505  018334  5041               	movf	(btemp+23)^0,w,c
 13506  018336  22DE               	addwfc	postinc2,f,c
 13507  018338  0E80               	movlw	128
 13508  01833A  6EE6               	movwf	postinc1,c
 13509  01833C  0E51               	movlw	81
 13510  01833E  6EE6               	movwf	postinc1,c
 13511  018340  0E01               	movlw	1
 13512  018342  6EE6               	movwf	postinc1,c
 13513  018344  0E00               	movlw	0
 13514  018346  6EE6               	movwf	postinc1,c
 13515  018348  0E80               	movlw	128
 13516  01834A  6EE6               	movwf	postinc1,c
 13517  01834C  0E3A               	movlw	58
 13518  01834E  6EE6               	movwf	postinc1,c
 13519  018350  0E09               	movlw	9
 13520  018352  6EE6               	movwf	postinc1,c
 13521  018354  0E00               	movlw	0
 13522  018356  6EE6               	movwf	postinc1,c
 13523  018358  0E00               	movlw	0
 13524  01835A  6EE6               	movwf	postinc1,c
 13525  01835C  0E00               	movlw	0
 13526  01835E  6EE6               	movwf	postinc1,c
 13527  018360  0E00               	movlw	0
 13528  018362  6EE6               	movwf	postinc1,c
 13529  018364  0E00               	movlw	0
 13530  018366  6EE6               	movwf	postinc1,c
 13531                           
 13532                           ;stkvar	_t @ sp[(-34)+4]
 13533  018368  0EE2               	movlw	-30
 13534  01836A  50E3               	movf	plusw1,w,c
 13535  01836C  0F00               	addlw	0
 13536  01836E  6E3A               	movwf	(btemp+16)^0,c
 13537  018370  0EE3               	movlw	-29
 13538  018372  006F FF8C  F03B    	movff	plusw1,btemp+17
 13539  018378  0E46               	movlw	70
 13540  01837A  223B               	addwfc	(btemp+17)^0,f,c
 13541  01837C  0EE4               	movlw	-28
 13542  01837E  006F FF8C  F03C    	movff	plusw1,btemp+18
 13543  018384  0E05               	movlw	5
 13544  018386  223C               	addwfc	(btemp+18)^0,f,c
 13545  018388  0EE5               	movlw	-27
 13546  01838A  006F FF8C  F03D    	movff	plusw1,btemp+19
 13547  018390  0E00               	movlw	0
 13548  018392  223D               	addwfc	(btemp+19)^0,f,c
 13549  018394  0EE6               	movlw	-26
 13550  018396  006F FF8C  F03E    	movff	plusw1,btemp+20
 13551  01839C  0E00               	movlw	0
 13552  01839E  223E               	addwfc	(btemp+20)^0,f,c
 13553  0183A0  0EE7               	movlw	-25
 13554  0183A2  006F FF8C  F03F    	movff	plusw1,btemp+21
 13555  0183A8  0E00               	movlw	0
 13556  0183AA  223F               	addwfc	(btemp+21)^0,f,c
 13557  0183AC  0EE8               	movlw	-24
 13558  0183AE  006F FF8C  F040    	movff	plusw1,btemp+22
 13559  0183B4  0E00               	movlw	0
 13560  0183B6  2240               	addwfc	(btemp+22)^0,f,c
 13561  0183B8  0EE9               	movlw	-23
 13562  0183BA  006F FF8C  F041    	movff	plusw1,btemp+23
 13563  0183C0  0E00               	movlw	0
 13564  0183C2  2241               	addwfc	(btemp+23)^0,f,c
 13565  0183C4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13566  0183CA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13567  0183D0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13568  0183D6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13569  0183DC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13570  0183E2  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13571  0183E8  0060  F103  FFE6   	movff	btemp+22,postinc1
 13572  0183EE  0060  F107  FFE6   	movff	btemp+23,postinc1
 13573  0183F4  EC6A  F0E6         	call	___aomod	;wreg free
 13574  0183F8  52E5               	movf	postdec1,f,c
 13575  0183FA  006F FF9C  F041    	movff	indf1,btemp+23
 13576  018400  52E5               	movf	postdec1,f,c
 13577  018402  006F FF9C  F040    	movff	indf1,btemp+22
 13578  018408  52E5               	movf	postdec1,f,c
 13579  01840A  006F FF9C  F03F    	movff	indf1,btemp+21
 13580  018410  52E5               	movf	postdec1,f,c
 13581  018412  006F FF9C  F03E    	movff	indf1,btemp+20
 13582  018418  52E5               	movf	postdec1,f,c
 13583  01841A  006F FF9C  F03D    	movff	indf1,btemp+19
 13584  018420  52E5               	movf	postdec1,f,c
 13585  018422  006F FF9C  F03C    	movff	indf1,btemp+18
 13586  018428  52E5               	movf	postdec1,f,c
 13587  01842A  006F FF9C  F03B    	movff	indf1,btemp+17
 13588  018430  52E5               	movf	postdec1,f,c
 13589  018432  006F FF9C  F03A    	movff	indf1,btemp+16
 13590  018438  0EF8               	movlw	248
 13591  01843A  26E1               	addwf	fsr1l,f,c
 13592  01843C  0EFF               	movlw	255
 13593  01843E  22E2               	addwfc	fsr1h,f,c
 13594  018440  0060  F0E8  F034   	movff	btemp+16,btemp+10
 13595  018446  0060  F0EC  F035   	movff	btemp+17,btemp+11
 13596  01844C  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13597  018452  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13598  018458  0E00               	movlw	0
 13599  01845A  BE2F               	btfsc	(btemp+5)^0,7,c
 13600  01845C  0EFF               	movlw	255
 13601  01845E  6E30               	movwf	(btemp+6)^0,c
 13602  018460  6E31               	movwf	(btemp+7)^0,c
 13603  018462  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13604  018468  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13605  01846E  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13606  018474  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13607  01847A  EC18  F0F1         	call	___aldiv	;wreg free
 13608  01847E  0060  F0A8  F034   	movff	btemp,btemp+10
 13609  018484  0060  F0AC  F035   	movff	btemp+1,btemp+11
 13610                           
 13611                           ;stkvar	_wday @ sp[(-22)+2]
 13612  01848A  0EEC               	movlw	-20
 13613  01848C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13614  018492  0EED               	movlw	-19
 13615  018494  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13616                           
 13617                           ;stkvar	_wday @ sp[(-22)+2]
 13618                           ;stkvar	_d @ sp[(-22)+20]
 13619  01849A  0EFE               	movlw	-2
 13620  01849C  006F FF8C  F034    	movff	plusw1,btemp+10
 13621  0184A2  0EFF               	movlw	-1
 13622  0184A4  006F FF8C  F035    	movff	plusw1,btemp+11
 13623  0184AA  0EEC               	movlw	-20
 13624  0184AC  50E3               	movf	plusw1,w,c
 13625  0184AE  5E34               	subwf	(btemp+10)^0,f,c
 13626  0184B0  0EED               	movlw	-19
 13627  0184B2  50E3               	movf	plusw1,w,c
 13628  0184B4  5A35               	subwfb	(btemp+11)^0,f,c
 13629                           
 13630                           ;stkvar	_days @ sp[(-22)+0]
 13631  0184B6  0EEA               	movlw	-22
 13632  0184B8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13633  0184BE  0EEB               	movlw	-21
 13634  0184C0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13635                           
 13636                           ;stkvar	_days @ sp[(-22)+0]
 13637  0184C6  0EEB               	movlw	-21
 13638  0184C8  AEE3               	btfss	plusw1,7,c
 13639  0184CA  D011               	goto	l4018
 13640                           
 13641                           ;stkvar	_days @ sp[(-22)+0]
 13642  0184CC  0EEA               	movlw	-22
 13643  0184CE  50E3               	movf	plusw1,w,c
 13644  0184D0  0F07               	addlw	7
 13645  0184D2  6E2A               	movwf	btemp^0,c
 13646  0184D4  0EEA               	movlw	-22
 13647  0184D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 13648  0184DC  6A2A               	clrf	btemp^0,c
 13649  0184DE  0EEB               	movlw	-21
 13650  0184E0  50E3               	movf	plusw1,w,c
 13651  0184E2  202A               	addwfc	btemp^0,w,c
 13652  0184E4  6E2A               	movwf	btemp^0,c
 13653  0184E6  0EEB               	movlw	-21
 13654  0184E8  0060  F0AB  FFE3   	movff	btemp,plusw1
 13655  0184EE                     l4018:
 13656                           
 13657                           ;stkvar	_n @ sp[(-22)+14]
 13658  0184EE  0EF8               	movlw	-8
 13659  0184F0  006F FF8C  F02A    	movff	plusw1,btemp
 13660  0184F6  0E05               	movlw	5
 13661  0184F8  182A               	xorwf	btemp^0,w,c
 13662  0184FA  E134               	bnz	l16977
 13663  0184FC  0EF9               	movlw	-7
 13664  0184FE  50E3               	movf	plusw1,w,c
 13665  018500  A4D8               	btfss	status,2,c
 13666  018502  D030               	goto	l16977
 13667                           
 13668                           ;stkvar	_is_leap @ sp[(-22)+12]
 13669  018504  0EF6               	movlw	-10
 13670  018506  006F FF8F FFE6     	movff	plusw1,postinc1
 13671  01850C  006F FF8F FFE6     	movff	plusw1,postinc1
 13672                           
 13673                           ;stkvar	_m @ sp[(-24)+18]
 13674  018512  0EFA               	movlw	-6
 13675  018514  006F FF8F FFE6     	movff	plusw1,postinc1
 13676  01851A  006F FF8F FFE6     	movff	plusw1,postinc1
 13677  018520  EC99  F00D         	call	_days_in_month	;wreg free
 13678                           
 13679                           ;stkvar	_days @ sp[(-22)+0]
 13680  018524  0EEA               	movlw	-22
 13681  018526  50E3               	movf	plusw1,w,c
 13682  018528  0F1C               	addlw	28
 13683  01852A  6E34               	movwf	(btemp+10)^0,c
 13684  01852C  0EEB               	movlw	-21
 13685  01852E  006F FF8C  F035    	movff	plusw1,btemp+11
 13686  018534  0E00               	movlw	0
 13687  018536  2235               	addwfc	(btemp+11)^0,f,c
 13688  018538  502A               	movf	btemp^0,w,c
 13689  01853A  5C34               	subwf	(btemp+10)^0,w,c
 13690  01853C  5035               	movf	(btemp+11)^0,w,c
 13691  01853E  0A80               	xorlw	128
 13692  018540  6E2C               	movwf	(btemp+2)^0,c
 13693  018542  502B               	movf	(btemp+1)^0,w,c
 13694  018544  0A80               	xorlw	128
 13695  018546  582C               	subwfb	(btemp+2)^0,w,c
 13696  018548  A0D8               	btfss	status,0,c
 13697  01854A  D00C               	goto	l16977
 13698  01854C  0E04               	movlw	4
 13699  01854E  6E34               	movwf	(btemp+10)^0,c
 13700  018550  0E00               	movlw	0
 13701  018552  6E35               	movwf	(btemp+11)^0,c
 13702                           
 13703                           ;stkvar	_n @ sp[(-22)+14]
 13704  018554  0EF8               	movlw	-8
 13705  018556  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13706  01855C  0EF9               	movlw	-7
 13707  01855E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13708  018564                     l16977:
 13709  018564  0E80               	movlw	128
 13710  018566  6EE6               	movwf	postinc1,c
 13711  018568  0E51               	movlw	81
 13712  01856A  6EE6               	movwf	postinc1,c
 13713  01856C  0E01               	movlw	1
 13714  01856E  6EE6               	movwf	postinc1,c
 13715  018570  0E00               	movlw	0
 13716  018572  6EE6               	movwf	postinc1,c
 13717                           
 13718                           ;stkvar	_days @ sp[(-26)+0]
 13719                           ;stkvar	_n @ sp[(-26)+14]
 13720  018574  0EF4               	movlw	-12
 13721  018576  006F FF8C  F034    	movff	plusw1,btemp+10
 13722  01857C  0EF5               	movlw	-11
 13723  01857E  006F FF8C  F035    	movff	plusw1,btemp+11
 13724  018584  0E07               	movlw	7
 13725  018586  0234               	mulwf	(btemp+10)^0,c
 13726  018588  006F FFCC  F032    	movff	prodl,btemp+8
 13727  01858E  006F FFD0  F033    	movff	prodh,btemp+9
 13728  018594  0235               	mulwf	(btemp+11)^0,c
 13729  018596  50F3               	movf	prodl,w,c
 13730  018598  2633               	addwf	(btemp+9)^0,f,c
 13731  01859A  0EE6               	movlw	-26
 13732  01859C  50E3               	movf	plusw1,w,c
 13733  01859E  2632               	addwf	(btemp+8)^0,f,c
 13734  0185A0  0EE7               	movlw	-25
 13735  0185A2  50E3               	movf	plusw1,w,c
 13736  0185A4  2233               	addwfc	(btemp+9)^0,f,c
 13737  0185A6  0EF9               	movlw	249
 13738  0185A8  2432               	addwf	(btemp+8)^0,w,c
 13739  0185AA  6E2E               	movwf	(btemp+4)^0,c
 13740  0185AC  0EFF               	movlw	255
 13741  0185AE  2033               	addwfc	(btemp+9)^0,w,c
 13742  0185B0  6E2F               	movwf	(btemp+5)^0,c
 13743  0185B2  6A30               	clrf	(btemp+6)^0,c
 13744  0185B4  BE2F               	btfsc	(btemp+5)^0,7,c
 13745  0185B6  0630               	decf	(btemp+6)^0,f,c
 13746  0185B8  5030               	movf	(btemp+6)^0,w,c
 13747  0185BA  6E31               	movwf	(btemp+7)^0,c
 13748  0185BC  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13749  0185C2  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13750  0185C8  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13751  0185CE  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13752  0185D4  ECB8  F002         	call	___lmul	;wreg free
 13753  0185D8                     L9:
 13754  0185D8  0060  F0A8  F03A   	movff	btemp,btemp+16
 13755  0185DE  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13756  0185E4  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13757  0185EA  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13758  0185F0  6A3E               	clrf	(btemp+20)^0,c
 13759  0185F2  BE3D               	btfsc	(btemp+19)^0,7,c
 13760  0185F4  683E               	setf	(btemp+20)^0,c
 13761  0185F6  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13762  0185FC  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13763  018602  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13764                           
 13765                           ;stkvar	_t @ sp[(-22)+4]
 13766  018608  50E1               	movf	fsr1l,w,c
 13767  01860A  0FEE               	addlw	-18
 13768  01860C  6ED9               	movwf	fsr2l,c
 13769  01860E  50E2               	movf	fsr1h,w,c
 13770  018610  6EDA               	movwf	fsr2h,c
 13771  018612  0EFF               	movlw	255
 13772  018614  22DA               	addwfc	fsr2h,f,c
 13773  018616  503A               	movf	(btemp+16)^0,w,c
 13774  018618  26DE               	addwf	postinc2,f,c
 13775  01861A  503B               	movf	(btemp+17)^0,w,c
 13776  01861C  22DE               	addwfc	postinc2,f,c
 13777  01861E  503C               	movf	(btemp+18)^0,w,c
 13778  018620  22DE               	addwfc	postinc2,f,c
 13779  018622  503D               	movf	(btemp+19)^0,w,c
 13780  018624  22DE               	addwfc	postinc2,f,c
 13781  018626  503E               	movf	(btemp+20)^0,w,c
 13782  018628  22DE               	addwfc	postinc2,f,c
 13783  01862A  503F               	movf	(btemp+21)^0,w,c
 13784  01862C  22DE               	addwfc	postinc2,f,c
 13785  01862E  5040               	movf	(btemp+22)^0,w,c
 13786  018630  22DE               	addwfc	postinc2,f,c
 13787  018632  5041               	movf	(btemp+23)^0,w,c
 13788  018634  22DE               	addwfc	postinc2,f,c
 13789                           
 13790                           ;stkvar	_rule @ sp[(-22)+-6]
 13791  018636  0EE4               	movlw	-28
 13792  018638  006F FF8C  F034    	movff	plusw1,btemp+10
 13793  01863E  0EE5               	movlw	-27
 13794  018640  006F FF8C  F035    	movff	plusw1,btemp+11
 13795  018646  0E08               	movlw	8
 13796  018648  2434               	addwf	(btemp+10)^0,w,c
 13797  01864A  6ED9               	movwf	fsr2l,c
 13798  01864C  0E00               	movlw	0
 13799  01864E  2035               	addwfc	(btemp+11)^0,w,c
 13800  018650  6EDA               	movwf	fsr2h,c
 13801  018652  006F FF78  F034    	movff	postinc2,btemp+10
 13802  018658  006F FF74  F035    	movff	postdec2,btemp+11
 13803                           
 13804                           ;stkvar	_t @ sp[(-22)+4]
 13805  01865E  50E1               	movf	fsr1l,w,c
 13806  018660  0FEE               	addlw	-18
 13807  018662  6ED9               	movwf	fsr2l,c
 13808  018664  50E2               	movf	fsr1h,w,c
 13809  018666  6EDA               	movwf	fsr2h,c
 13810  018668  0EFF               	movlw	255
 13811  01866A  22DA               	addwfc	fsr2h,f,c
 13812  01866C  5034               	movf	(btemp+10)^0,w,c
 13813  01866E  26DE               	addwf	postinc2,f,c
 13814  018670  5035               	movf	(btemp+11)^0,w,c
 13815  018672  22DE               	addwfc	postinc2,f,c
 13816  018674  0E00               	movlw	0
 13817  018676  BE35               	btfsc	(btemp+11)^0,7,c
 13818  018678  0EFF               	movlw	255
 13819  01867A  22DE               	addwfc	postinc2,f,c
 13820  01867C  22DE               	addwfc	postinc2,f,c
 13821  01867E  22DE               	addwfc	postinc2,f,c
 13822  018680  22DE               	addwfc	postinc2,f,c
 13823  018682  22DE               	addwfc	postinc2,f,c
 13824  018684  22DE               	addwfc	postinc2,f,c
 13825                           
 13826                           ;stkvar	_t @ sp[(-22)+4]
 13827  018686  0EEE               	movlw	238
 13828  018688  24E1               	addwf	fsr1l,w,c
 13829  01868A  6ED9               	movwf	fsr2l,c
 13830  01868C  0EFF               	movlw	255
 13831  01868E  20E2               	addwfc	fsr1h,w,c
 13832  018690  6EDA               	movwf	fsr2h,c
 13833                           
 13834                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 13835  018692  0E08               	movlw	8
 13836  018694  6E2A               	movwf	btemp^0,c
 13837  018696  0EE2               	movlw	-30
 13838  018698                     us1677999:
 13839  018698  006F FF7B FFE3     	movff	postinc2,plusw1
 13840  01869E  28E8               	incf	wreg,w,c
 13841  0186A0  2E2A               	decfsz	btemp^0,f,c
 13842  0186A2  D7FA               	bra	us1677999
 13843                           
 13844                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 13845  0186A4  0EEA               	movlw	234
 13846  0186A6  26E1               	addwf	fsr1l,f,c
 13847  0186A8  0EFF               	movlw	255
 13848  0186AA  22E2               	addwfc	fsr1h,f,c
 13849  0186AC  0012               	return		;funcret
 13850  0186AE                     __end_of_rule_to_secs:
 13851                           	opt callstack 0
 13852                           
 13853 ;; *************** function _days_in_month *****************
 13854 ;; Defined at:
 13855 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13856 ;; Parameters:    Size  Location     Type
 13857 ;;  m               2  [STACK] int 
 13858 ;;  is_leap         2  [STACK] int 
 13859 ;; Auto vars:     Size  Location     Type
 13860 ;;		None
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  2  [STACK] int 
 13863 ;; Registers used:
 13864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 0/0
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13874 ;;Total ram usage:        0 bytes
 13875 ;; Hardware stack levels used:    1
 13876 ;; Hardware stack levels required when called:   15
 13877 ;; This function calls:
 13878 ;;		Nothing
 13879 ;; This function is called by:
 13880 ;;		_rule_to_secs
 13881 ;; This function uses a reentrant model
 13882 ;;
 13883                           
 13884                           	psect	text39
 13885  001B32                     __ptext39:
 13886                           	opt callstack 0
 13887  001B32                     _days_in_month:
 13888                           	opt callstack 11
 13889                           
 13890                           ;stkvar	_m @ sp[(0)+-2]
 13891                           
 13892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13893                           ;incstack = 0
 13894  001B32  0EFE               	movlw	-2
 13895  001B34  006F FF8C  F02A    	movff	plusw1,btemp
 13896  001B3A  0E02               	movlw	2
 13897  001B3C  182A               	xorwf	btemp^0,w,c
 13898  001B3E  E10D               	bnz	l16463
 13899  001B40  0EFF               	movlw	-1
 13900  001B42  50E3               	movf	plusw1,w,c
 13901  001B44  A4D8               	btfss	status,2,c
 13902  001B46  D009               	goto	l16463
 13903                           
 13904                           ;stkvar	_is_leap @ sp[(0)+-4]
 13905  001B48  0EFC               	movlw	-4
 13906  001B4A  50E3               	movf	plusw1,w,c
 13907  001B4C  0F1C               	addlw	28
 13908  001B4E  6E2A               	movwf	btemp^0,c
 13909  001B50  0EFD               	movlw	-3
 13910  001B52  006F FF8C  F02B    	movff	plusw1,btemp+1
 13911  001B58  D017               	goto	L10
 13912  001B5A                     l16463:
 13913  001B5A  0EFF               	movlw	255
 13914  001B5C  6E35               	movwf	(btemp+11)^0,c
 13915                           
 13916                           ;stkvar	_m @ sp[(0)+-2]
 13917  001B5E  0EFE               	movlw	-2
 13918  001B60  50E3               	movf	plusw1,w,c
 13919  001B62  2435               	addwf	(btemp+11)^0,w,c
 13920  001B64  6E34               	movwf	(btemp+10)^0,c
 13921  001B66  0ED5               	movlw	213
 13922  001B68  6E2A               	movwf	btemp^0,c
 13923  001B6A  0E0A               	movlw	10
 13924  001B6C  6E2B               	movwf	(btemp+1)^0,c
 13925  001B6E  2A34               	incf	(btemp+10)^0,f,c
 13926  001B70  D003               	goto	u16164
 13927  001B72                     u16165:
 13928  001B72  342B               	rlcf	(btemp+1)^0,w,c
 13929  001B74  322B               	rrcf	(btemp+1)^0,f,c
 13930  001B76  322A               	rrcf	btemp^0,f,c
 13931  001B78                     u16164:
 13932  001B78  2E34               	decfsz	(btemp+10)^0,f,c
 13933  001B7A  D7FB               	goto	u16165
 13934  001B7C  0E01               	movlw	1
 13935  001B7E  162A               	andwf	btemp^0,f,c
 13936  001B80  0E00               	movlw	0
 13937  001B82  162B               	andwf	(btemp+1)^0,f,c
 13938  001B84  0E1E               	movlw	30
 13939  001B86  262A               	addwf	btemp^0,f,c
 13940  001B88                     L10:
 13941  001B88  0E00               	movlw	0
 13942  001B8A  222B               	addwfc	(btemp+1)^0,f,c
 13943                           
 13944                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13945  001B8C  52E5               	movf	postdec1,f,c
 13946  001B8E  52E5               	movf	postdec1,f,c
 13947  001B90  52E5               	movf	postdec1,f,c
 13948  001B92  52E5               	movf	postdec1,f,c
 13949  001B94  0012               	return		;funcret
 13950  001B96                     __end_of_days_in_month:
 13951                           	opt callstack 0
 13952                           
 13953 ;; *************** function ___year_to_secs *****************
 13954 ;; Defined at:
 13955 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 13956 ;; Parameters:    Size  Location     Type
 13957 ;;  year            8  [STACK] long long 
 13958 ;;  is_leap         2  [STACK] PTR int 
 13959 ;;		 -> F5(2), is_leap(2), NULL(0), 
 13960 ;; Auto vars:     Size  Location     Type
 13961 ;;  y               2  [STACK] int 
 13962 ;;  leaps           2  [STACK] int 
 13963 ;;  rem             2  [STACK] int 
 13964 ;;  5               2  [STACK] int 
 13965 ;;  centuries       2  [STACK] int 
 13966 ;;  leaps           2  [STACK] int 
 13967 ;;  cycles          2  [STACK] int 
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  8  [STACK] long long 
 13970 ;; Registers used:
 13971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13981 ;;Total ram usage:        0 bytes
 13982 ;; Hardware stack levels used:    1
 13983 ;; Hardware stack levels required when called:   16
 13984 ;; This function calls:
 13985 ;;		___aodiv
 13986 ;;		___aomod
 13987 ;;		___lmul
 13988 ;;		___omul
 13989 ;; This function is called by:
 13990 ;;		_rule_to_secs
 13991 ;;		___secs_to_zone
 13992 ;; This function uses a reentrant model
 13993 ;;
 13994                           
 13995                           	psect	text40
 13996  015DF8                     __ptext40:
 13997                           	opt callstack 0
 13998  015DF8                     ___year_to_secs:
 13999                           	opt callstack 0
 14000                           
 14001                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14002  015DF8  0E0E               	movlw	14
 14003  015DFA  26E1               	addwf	fsr1l,f,c
 14004  015DFC  0E00               	movlw	0
 14005  015DFE  22E2               	addwfc	fsr1h,f,c
 14006                           
 14007                           ;stkvar	_year @ sp[(-14)+-8]
 14008                           
 14009                           ;incstack = 0
 14010  015E00  0EEA               	movlw	-22
 14011  015E02  50E3               	movf	plusw1,w,c
 14012  015E04  0FFE               	addlw	254
 14013  015E06  6E3A               	movwf	(btemp+16)^0,c
 14014  015E08  0EEB               	movlw	-21
 14015  015E0A  006F FF8C  F03B    	movff	plusw1,btemp+17
 14016  015E10  0EFF               	movlw	255
 14017  015E12  223B               	addwfc	(btemp+17)^0,f,c
 14018  015E14  0EEC               	movlw	-20
 14019  015E16  006F FF8C  F03C    	movff	plusw1,btemp+18
 14020  015E1C  0EFF               	movlw	255
 14021  015E1E  223C               	addwfc	(btemp+18)^0,f,c
 14022  015E20  0EED               	movlw	-19
 14023  015E22  006F FF8C  F03D    	movff	plusw1,btemp+19
 14024  015E28  0EFF               	movlw	255
 14025  015E2A  223D               	addwfc	(btemp+19)^0,f,c
 14026  015E2C  0EEE               	movlw	-18
 14027  015E2E  006F FF8C  F03E    	movff	plusw1,btemp+20
 14028  015E34  0EFF               	movlw	255
 14029  015E36  223E               	addwfc	(btemp+20)^0,f,c
 14030  015E38  0EEF               	movlw	-17
 14031  015E3A  006F FF8C  F03F    	movff	plusw1,btemp+21
 14032  015E40  0EFF               	movlw	255
 14033  015E42  223F               	addwfc	(btemp+21)^0,f,c
 14034  015E44  0EF0               	movlw	-16
 14035  015E46  006F FF8C  F040    	movff	plusw1,btemp+22
 14036  015E4C  0EFF               	movlw	255
 14037  015E4E  2240               	addwfc	(btemp+22)^0,f,c
 14038  015E50  0EF1               	movlw	-15
 14039  015E52  006F FF8C  F041    	movff	plusw1,btemp+23
 14040  015E58  0EFF               	movlw	255
 14041  015E5A  2241               	addwfc	(btemp+23)^0,f,c
 14042  015E5C  5041               	movf	(btemp+23)^0,w,c
 14043  015E5E  1040               	iorwf	(btemp+22)^0,w,c
 14044  015E60  103F               	iorwf	(btemp+21)^0,w,c
 14045  015E62  103E               	iorwf	(btemp+20)^0,w,c
 14046  015E64  103D               	iorwf	(btemp+19)^0,w,c
 14047  015E66  103C               	iorwf	(btemp+18)^0,w,c
 14048  015E68  103B               	iorwf	(btemp+17)^0,w,c
 14049  015E6A  E103               	bnz	u16171
 14050  015E6C  0E89               	movlw	137
 14051  015E6E  5C3A               	subwf	(btemp+16)^0,w,c
 14052  015E70  B0D8               	btfsc	status,0,c
 14053  015E72                     u16171:
 14054  015E72  D0E7               	goto	l16489
 14055                           
 14056                           ;stkvar	_year @ sp[(-14)+-8]
 14057                           ;stkvar	_y @ sp[(-14)+0]
 14058  015E74  0EEA               	movlw	-22
 14059  015E76  006F FF8C  F02A    	movff	plusw1,btemp
 14060  015E7C  0EF2               	movlw	-14
 14061  015E7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 14062  015E84  0EEB               	movlw	-21
 14063  015E86  006F FF8C  F02A    	movff	plusw1,btemp
 14064  015E8C  0EF3               	movlw	-13
 14065  015E8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 14066                           
 14067                           ;stkvar	_y @ sp[(-14)+0]
 14068  015E94  0EF2               	movlw	-14
 14069  015E96  50E3               	movf	plusw1,w,c
 14070  015E98  0FBC               	addlw	188
 14071  015E9A  6E34               	movwf	(btemp+10)^0,c
 14072  015E9C  0EF3               	movlw	-13
 14073  015E9E  006F FF8C  F035    	movff	plusw1,btemp+11
 14074  015EA4  0EFF               	movlw	255
 14075  015EA6  2235               	addwfc	(btemp+11)^0,f,c
 14076  015EA8  3435               	rlcf	(btemp+11)^0,w,c
 14077  015EAA  3235               	rrcf	(btemp+11)^0,f,c
 14078  015EAC  3234               	rrcf	(btemp+10)^0,f,c
 14079  015EAE  3435               	rlcf	(btemp+11)^0,w,c
 14080  015EB0  3235               	rrcf	(btemp+11)^0,f,c
 14081  015EB2  3234               	rrcf	(btemp+10)^0,f,c
 14082                           
 14083                           ;stkvar	_leaps @ sp[(-14)+2]
 14084  015EB4  0EF4               	movlw	-12
 14085  015EB6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14086  015EBC  0EF5               	movlw	-11
 14087  015EBE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14088  015EC4  0EBC               	movlw	188
 14089  015EC6  6E35               	movwf	(btemp+11)^0,c
 14090                           
 14091                           ;stkvar	_y @ sp[(-14)+0]
 14092  015EC8  0EF2               	movlw	-14
 14093  015ECA  50E3               	movf	plusw1,w,c
 14094  015ECC  2435               	addwf	(btemp+11)^0,w,c
 14095  015ECE  6E34               	movwf	(btemp+10)^0,c
 14096  015ED0  0E03               	movlw	3
 14097  015ED2  1634               	andwf	(btemp+10)^0,f,c
 14098  015ED4  A4D8               	btfss	status,2,c
 14099  015ED6  D01D               	goto	l16481
 14100                           
 14101                           ;stkvar	_leaps @ sp[(-14)+2]
 14102  015ED8  50E1               	movf	fsr1l,w,c
 14103  015EDA  0FF4               	addlw	-12
 14104  015EDC  6ED9               	movwf	fsr2l,c
 14105  015EDE  50E2               	movf	fsr1h,w,c
 14106  015EE0  6EDA               	movwf	fsr2h,c
 14107  015EE2  0EFF               	movlw	255
 14108  015EE4  22DA               	addwfc	fsr2h,f,c
 14109  015EE6  06DE               	decf	postinc2,f,c
 14110  015EE8  0E00               	movlw	0
 14111  015EEA  5ADD               	subwfb	postdec2,f,c
 14112                           
 14113                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14114  015EEC  0EE8               	movlw	-24
 14115  015EEE  006F FF8C  F02A    	movff	plusw1,btemp
 14116  015EF4  0EE9               	movlw	-23
 14117  015EF6  50E3               	movf	plusw1,w,c
 14118  015EF8  102A               	iorwf	btemp^0,w,c
 14119  015EFA  B4D8               	btfsc	status,2,c
 14120  015EFC  D01F               	goto	l16485
 14121                           
 14122                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14123  015EFE  0EE8               	movlw	-24
 14124  015F00  006F FF8F FFD9     	movff	plusw1,fsr2l
 14125  015F06  0EE9               	movlw	-23
 14126  015F08  006F FF8F FFDA     	movff	plusw1,fsr2h
 14127  015F0E  0E01               	movlw	1
 14128  015F10  D012               	goto	L11
 14129  015F12                     l16481:
 14130                           
 14131                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14132  015F12  0EE8               	movlw	-24
 14133  015F14  006F FF8C  F02A    	movff	plusw1,btemp
 14134  015F1A  0EE9               	movlw	-23
 14135  015F1C  50E3               	movf	plusw1,w,c
 14136  015F1E  102A               	iorwf	btemp^0,w,c
 14137  015F20  B4D8               	btfsc	status,2,c
 14138  015F22  D00C               	goto	l16485
 14139                           
 14140                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14141  015F24  0EE8               	movlw	-24
 14142  015F26  006F FF8F FFD9     	movff	plusw1,fsr2l
 14143  015F2C  0EE9               	movlw	-23
 14144  015F2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14145  015F34  0E00               	movlw	0
 14146  015F36                     L11:
 14147  015F36  6EDE               	movwf	postinc2,c
 14148  015F38  0E00               	movlw	0
 14149  015F3A  6EDD               	movwf	postdec2,c
 14150  015F3C                     l16485:
 14151  015F3C  0E80               	movlw	128
 14152  015F3E  6EE6               	movwf	postinc1,c
 14153  015F40  0E33               	movlw	51
 14154  015F42  6EE6               	movwf	postinc1,c
 14155  015F44  0EE1               	movlw	225
 14156  015F46  6EE6               	movwf	postinc1,c
 14157  015F48  0E01               	movlw	1
 14158  015F4A  6EE6               	movwf	postinc1,c
 14159                           
 14160                           ;stkvar	_y @ sp[(-18)+0]
 14161  015F4C  0EEE               	movlw	-18
 14162  015F4E  006F FF8C  F034    	movff	plusw1,btemp+10
 14163  015F54  0EEF               	movlw	-17
 14164  015F56  006F FF8C  F035    	movff	plusw1,btemp+11
 14165  015F5C  0EBA               	movlw	186
 14166  015F5E  2434               	addwf	(btemp+10)^0,w,c
 14167  015F60  6E2E               	movwf	(btemp+4)^0,c
 14168  015F62  0EFF               	movlw	255
 14169  015F64  2035               	addwfc	(btemp+11)^0,w,c
 14170  015F66  6E2F               	movwf	(btemp+5)^0,c
 14171  015F68  6A30               	clrf	(btemp+6)^0,c
 14172  015F6A  BE2F               	btfsc	(btemp+5)^0,7,c
 14173  015F6C  0630               	decf	(btemp+6)^0,f,c
 14174  015F6E  5030               	movf	(btemp+6)^0,w,c
 14175  015F70  6E31               	movwf	(btemp+7)^0,c
 14176  015F72  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14177  015F78  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14178  015F7E  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14179  015F84  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14180  015F8A  ECB8  F002         	call	___lmul	;wreg free
 14181  015F8E  0060  F0A8  F032   	movff	btemp,btemp+8
 14182  015F94  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14183  015F9A  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14184  015FA0  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14185  015FA6  0E80               	movlw	128
 14186  015FA8  6EE6               	movwf	postinc1,c
 14187  015FAA  0E51               	movlw	81
 14188  015FAC  6EE6               	movwf	postinc1,c
 14189  015FAE  0E01               	movlw	1
 14190  015FB0  6EE6               	movwf	postinc1,c
 14191  015FB2  0E00               	movlw	0
 14192  015FB4  6EE6               	movwf	postinc1,c
 14193                           
 14194                           ;stkvar	_leaps @ sp[(-18)+2]
 14195  015FB6  0EF0               	movlw	-16
 14196  015FB8  006F FF8C  F030    	movff	plusw1,btemp+6
 14197  015FBE  0EF1               	movlw	-15
 14198  015FC0  006F FF8C  F031    	movff	plusw1,btemp+7
 14199  015FC6  0060  F0C0  F02A   	movff	btemp+6,btemp
 14200  015FCC  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14201  015FD2  0E00               	movlw	0
 14202  015FD4  BE2B               	btfsc	(btemp+1)^0,7,c
 14203  015FD6  0EFF               	movlw	255
 14204  015FD8  6E2C               	movwf	(btemp+2)^0,c
 14205  015FDA  6E2D               	movwf	(btemp+3)^0,c
 14206  015FDC  0060  F0AB  FFE6   	movff	btemp,postinc1
 14207  015FE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14208  015FE8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14209  015FEE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14210  015FF4  ECB8  F002         	call	___lmul	;wreg free
 14211  015FF8  502A               	movf	btemp^0,w,c
 14212  015FFA  2432               	addwf	(btemp+8)^0,w,c
 14213  015FFC  6E2E               	movwf	(btemp+4)^0,c
 14214  015FFE  502B               	movf	(btemp+1)^0,w,c
 14215  016000  2033               	addwfc	(btemp+9)^0,w,c
 14216  016002  6E2F               	movwf	(btemp+5)^0,c
 14217  016004  502C               	movf	(btemp+2)^0,w,c
 14218  016006  2034               	addwfc	(btemp+10)^0,w,c
 14219  016008  6E30               	movwf	(btemp+6)^0,c
 14220  01600A  502D               	movf	(btemp+3)^0,w,c
 14221  01600C  2035               	addwfc	(btemp+11)^0,w,c
 14222  01600E  6E31               	movwf	(btemp+7)^0,c
 14223  016010  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14224  016016  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14225  01601C  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14226  016022  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14227  016028  6A3E               	clrf	(btemp+20)^0,c
 14228  01602A  BE3D               	btfsc	(btemp+19)^0,7,c
 14229  01602C  683E               	setf	(btemp+20)^0,c
 14230  01602E  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14231  016034  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14232  01603A  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14233  016040  D36F               	goto	L12
 14234  016042                     l16489:
 14235                           
 14236                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14237  016042  0EE8               	movlw	-24
 14238  016044  006F FF8C  F02A    	movff	plusw1,btemp
 14239  01604A  0EE9               	movlw	-23
 14240  01604C  50E3               	movf	plusw1,w,c
 14241  01604E  102A               	iorwf	btemp^0,w,c
 14242  016050  A4D8               	btfss	status,2,c
 14243  016052  D012               	goto	l16495
 14244                           
 14245                           ;stkvar	F5 @ sp[(-14)+6]
 14246  016054  0EF8               	movlw	-8
 14247  016056  6AE3               	clrf	plusw1,c
 14248  016058  0EF9               	movlw	-7
 14249  01605A  6AE3               	clrf	plusw1,c
 14250                           
 14251                           ;stkvar	F5 @ sp[(-14)+6]
 14252  01605C  0EF8               	movlw	248
 14253  01605E  24E1               	addwf	fsr1l,w,c
 14254  016060  6E34               	movwf	(btemp+10)^0,c
 14255  016062  0EFF               	movlw	255
 14256  016064  20E2               	addwfc	fsr1h,w,c
 14257  016066  6E35               	movwf	(btemp+11)^0,c
 14258                           
 14259                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14260  016068  0EE9               	movlw	-23
 14261  01606A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14262  016070  0EE8               	movlw	-24
 14263  016072  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14264  016078                     l16495:
 14265  016078  0E90               	movlw	144
 14266  01607A  6EE6               	movwf	postinc1,c
 14267  01607C  0E01               	movlw	1
 14268  01607E  6EE6               	movwf	postinc1,c
 14269  016080  0E00               	movlw	0
 14270  016082  6EE6               	movwf	postinc1,c
 14271  016084  0E00               	movlw	0
 14272  016086  6EE6               	movwf	postinc1,c
 14273  016088  0E00               	movlw	0
 14274  01608A  6EE6               	movwf	postinc1,c
 14275  01608C  0E00               	movlw	0
 14276  01608E  6EE6               	movwf	postinc1,c
 14277  016090  0E00               	movlw	0
 14278  016092  6EE6               	movwf	postinc1,c
 14279  016094  0E00               	movlw	0
 14280  016096  6EE6               	movwf	postinc1,c
 14281                           
 14282                           ;stkvar	_year @ sp[(-22)+-8]
 14283  016098  0EE2               	movlw	-30
 14284  01609A  50E3               	movf	plusw1,w,c
 14285  01609C  0F9C               	addlw	156
 14286  01609E  6E3A               	movwf	(btemp+16)^0,c
 14287  0160A0  0EE3               	movlw	-29
 14288  0160A2  006F FF8C  F03B    	movff	plusw1,btemp+17
 14289  0160A8  0EFF               	movlw	255
 14290  0160AA  223B               	addwfc	(btemp+17)^0,f,c
 14291  0160AC  0EE4               	movlw	-28
 14292  0160AE  006F FF8C  F03C    	movff	plusw1,btemp+18
 14293  0160B4  0EFF               	movlw	255
 14294  0160B6  223C               	addwfc	(btemp+18)^0,f,c
 14295  0160B8  0EE5               	movlw	-27
 14296  0160BA  006F FF8C  F03D    	movff	plusw1,btemp+19
 14297  0160C0  0EFF               	movlw	255
 14298  0160C2  223D               	addwfc	(btemp+19)^0,f,c
 14299  0160C4  0EE6               	movlw	-26
 14300  0160C6  006F FF8C  F03E    	movff	plusw1,btemp+20
 14301  0160CC  0EFF               	movlw	255
 14302  0160CE  223E               	addwfc	(btemp+20)^0,f,c
 14303  0160D0  0EE7               	movlw	-25
 14304  0160D2  006F FF8C  F03F    	movff	plusw1,btemp+21
 14305  0160D8  0EFF               	movlw	255
 14306  0160DA  223F               	addwfc	(btemp+21)^0,f,c
 14307  0160DC  0EE8               	movlw	-24
 14308  0160DE  006F FF8C  F040    	movff	plusw1,btemp+22
 14309  0160E4  0EFF               	movlw	255
 14310  0160E6  2240               	addwfc	(btemp+22)^0,f,c
 14311  0160E8  0EE9               	movlw	-23
 14312  0160EA  006F FF8C  F041    	movff	plusw1,btemp+23
 14313  0160F0  0EFF               	movlw	255
 14314  0160F2  2241               	addwfc	(btemp+23)^0,f,c
 14315  0160F4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14316  0160FA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14317  016100  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14318  016106  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14319  01610C  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14320  016112  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14321  016118  0060  F103  FFE6   	movff	btemp+22,postinc1
 14322  01611E  0060  F107  FFE6   	movff	btemp+23,postinc1
 14323  016124  ECAB  F0E1         	call	___aodiv	;wreg free
 14324  016128  52E5               	movf	postdec1,f,c
 14325  01612A  006F FF9C  F041    	movff	indf1,btemp+23
 14326  016130  52E5               	movf	postdec1,f,c
 14327  016132  006F FF9C  F040    	movff	indf1,btemp+22
 14328  016138  52E5               	movf	postdec1,f,c
 14329  01613A  006F FF9C  F03F    	movff	indf1,btemp+21
 14330  016140  52E5               	movf	postdec1,f,c
 14331  016142  006F FF9C  F03E    	movff	indf1,btemp+20
 14332  016148  52E5               	movf	postdec1,f,c
 14333  01614A  006F FF9C  F03D    	movff	indf1,btemp+19
 14334  016150  52E5               	movf	postdec1,f,c
 14335  016152  006F FF9C  F03C    	movff	indf1,btemp+18
 14336  016158  52E5               	movf	postdec1,f,c
 14337  01615A  006F FF9C  F03B    	movff	indf1,btemp+17
 14338  016160  52E5               	movf	postdec1,f,c
 14339  016162  006F FF9C  F03A    	movff	indf1,btemp+16
 14340  016168  0EF8               	movlw	248
 14341  01616A  26E1               	addwf	fsr1l,f,c
 14342  01616C  0EFF               	movlw	255
 14343  01616E  22E2               	addwfc	fsr1h,f,c
 14344  016170  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14345  016176  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14346                           
 14347                           ;stkvar	_cycles @ sp[(-14)+12]
 14348  01617C  0EFE               	movlw	-2
 14349  01617E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14350  016184  0EFF               	movlw	-1
 14351  016186  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14352  01618C  0E90               	movlw	144
 14353  01618E  6EE6               	movwf	postinc1,c
 14354  016190  0E01               	movlw	1
 14355  016192  6EE6               	movwf	postinc1,c
 14356  016194  0E00               	movlw	0
 14357  016196  6EE6               	movwf	postinc1,c
 14358  016198  0E00               	movlw	0
 14359  01619A  6EE6               	movwf	postinc1,c
 14360  01619C  0E00               	movlw	0
 14361  01619E  6EE6               	movwf	postinc1,c
 14362  0161A0  0E00               	movlw	0
 14363  0161A2  6EE6               	movwf	postinc1,c
 14364  0161A4  0E00               	movlw	0
 14365  0161A6  6EE6               	movwf	postinc1,c
 14366  0161A8  0E00               	movlw	0
 14367  0161AA  6EE6               	movwf	postinc1,c
 14368                           
 14369                           ;stkvar	_year @ sp[(-22)+-8]
 14370  0161AC  0EE2               	movlw	-30
 14371  0161AE  50E3               	movf	plusw1,w,c
 14372  0161B0  0F9C               	addlw	156
 14373  0161B2  6E3A               	movwf	(btemp+16)^0,c
 14374  0161B4  0EE3               	movlw	-29
 14375  0161B6  006F FF8C  F03B    	movff	plusw1,btemp+17
 14376  0161BC  0EFF               	movlw	255
 14377  0161BE  223B               	addwfc	(btemp+17)^0,f,c
 14378  0161C0  0EE4               	movlw	-28
 14379  0161C2  006F FF8C  F03C    	movff	plusw1,btemp+18
 14380  0161C8  0EFF               	movlw	255
 14381  0161CA  223C               	addwfc	(btemp+18)^0,f,c
 14382  0161CC  0EE5               	movlw	-27
 14383  0161CE  006F FF8C  F03D    	movff	plusw1,btemp+19
 14384  0161D4  0EFF               	movlw	255
 14385  0161D6  223D               	addwfc	(btemp+19)^0,f,c
 14386  0161D8  0EE6               	movlw	-26
 14387  0161DA  006F FF8C  F03E    	movff	plusw1,btemp+20
 14388  0161E0  0EFF               	movlw	255
 14389  0161E2  223E               	addwfc	(btemp+20)^0,f,c
 14390  0161E4  0EE7               	movlw	-25
 14391  0161E6  006F FF8C  F03F    	movff	plusw1,btemp+21
 14392  0161EC  0EFF               	movlw	255
 14393  0161EE  223F               	addwfc	(btemp+21)^0,f,c
 14394  0161F0  0EE8               	movlw	-24
 14395  0161F2  006F FF8C  F040    	movff	plusw1,btemp+22
 14396  0161F8  0EFF               	movlw	255
 14397  0161FA  2240               	addwfc	(btemp+22)^0,f,c
 14398  0161FC  0EE9               	movlw	-23
 14399  0161FE  006F FF8C  F041    	movff	plusw1,btemp+23
 14400  016204  0EFF               	movlw	255
 14401  016206  2241               	addwfc	(btemp+23)^0,f,c
 14402  016208  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14403  01620E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14404  016214  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14405  01621A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14406  016220  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14407  016226  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14408  01622C  0060  F103  FFE6   	movff	btemp+22,postinc1
 14409  016232  0060  F107  FFE6   	movff	btemp+23,postinc1
 14410  016238  EC6A  F0E6         	call	___aomod	;wreg free
 14411  01623C  52E5               	movf	postdec1,f,c
 14412  01623E  006F FF9C  F041    	movff	indf1,btemp+23
 14413  016244  52E5               	movf	postdec1,f,c
 14414  016246  006F FF9C  F040    	movff	indf1,btemp+22
 14415  01624C  52E5               	movf	postdec1,f,c
 14416  01624E  006F FF9C  F03F    	movff	indf1,btemp+21
 14417  016254  52E5               	movf	postdec1,f,c
 14418  016256  006F FF9C  F03E    	movff	indf1,btemp+20
 14419  01625C  52E5               	movf	postdec1,f,c
 14420  01625E  006F FF9C  F03D    	movff	indf1,btemp+19
 14421  016264  52E5               	movf	postdec1,f,c
 14422  016266  006F FF9C  F03C    	movff	indf1,btemp+18
 14423  01626C  52E5               	movf	postdec1,f,c
 14424  01626E  006F FF9C  F03B    	movff	indf1,btemp+17
 14425  016274  52E5               	movf	postdec1,f,c
 14426  016276  006F FF9C  F03A    	movff	indf1,btemp+16
 14427  01627C  0EF8               	movlw	248
 14428  01627E  26E1               	addwf	fsr1l,f,c
 14429  016280  0EFF               	movlw	255
 14430  016282  22E2               	addwfc	fsr1h,f,c
 14431  016284  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14432  01628A  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14433                           
 14434                           ;stkvar	_rem @ sp[(-14)+4]
 14435  016290  0EF6               	movlw	-10
 14436  016292  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14437  016298  0EF7               	movlw	-9
 14438  01629A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14439                           
 14440                           ;stkvar	_rem @ sp[(-14)+4]
 14441  0162A0  0EF7               	movlw	-9
 14442  0162A2  AEE3               	btfss	plusw1,7,c
 14443  0162A4  D015               	goto	l16505
 14444                           
 14445                           ;stkvar	_cycles @ sp[(-14)+12]
 14446  0162A6  50E1               	movf	fsr1l,w,c
 14447  0162A8  0FFE               	addlw	-2
 14448  0162AA  6ED9               	movwf	fsr2l,c
 14449  0162AC  50E2               	movf	fsr1h,w,c
 14450  0162AE  6EDA               	movwf	fsr2h,c
 14451  0162B0  0EFF               	movlw	255
 14452  0162B2  22DA               	addwfc	fsr2h,f,c
 14453  0162B4  06DE               	decf	postinc2,f,c
 14454  0162B6  0E00               	movlw	0
 14455  0162B8  5ADD               	subwfb	postdec2,f,c
 14456                           
 14457                           ;stkvar	_rem @ sp[(-14)+4]
 14458  0162BA  50E1               	movf	fsr1l,w,c
 14459  0162BC  0FF6               	addlw	-10
 14460  0162BE  6ED9               	movwf	fsr2l,c
 14461  0162C0  50E2               	movf	fsr1h,w,c
 14462  0162C2  6EDA               	movwf	fsr2h,c
 14463  0162C4  0EFF               	movlw	255
 14464  0162C6  22DA               	addwfc	fsr2h,f,c
 14465  0162C8  0E90               	movlw	144
 14466  0162CA  26DE               	addwf	postinc2,f,c
 14467  0162CC  0E01               	movlw	1
 14468  0162CE  22DD               	addwfc	postdec2,f,c
 14469  0162D0                     l16505:
 14470                           
 14471                           ;stkvar	_rem @ sp[(-14)+4]
 14472  0162D0  0EF6               	movlw	-10
 14473  0162D2  006F FF8C  F02A    	movff	plusw1,btemp
 14474  0162D8  0EF7               	movlw	-9
 14475  0162DA  50E3               	movf	plusw1,w,c
 14476  0162DC  102A               	iorwf	btemp^0,w,c
 14477  0162DE  A4D8               	btfss	status,2,c
 14478  0162E0  D015               	goto	l16513
 14479                           
 14480                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14481  0162E2  0EE8               	movlw	-24
 14482  0162E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14483  0162EA  0EE9               	movlw	-23
 14484  0162EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14485  0162F2  0E01               	movlw	1
 14486  0162F4  6EDE               	movwf	postinc2,c
 14487  0162F6  0E00               	movlw	0
 14488  0162F8  6EDD               	movwf	postdec2,c
 14489                           
 14490                           ;stkvar	_centuries @ sp[(-14)+8]
 14491  0162FA  0EFA               	movlw	-6
 14492  0162FC  6AE3               	clrf	plusw1,c
 14493  0162FE  0EFB               	movlw	-5
 14494  016300  6AE3               	clrf	plusw1,c
 14495  016302                     l16511:
 14496                           
 14497                           ;stkvar	_leaps @ sp[(-14)+10]
 14498  016302  0EFC               	movlw	-4
 14499  016304  6AE3               	clrf	plusw1,c
 14500  016306  0EFD               	movlw	-3
 14501  016308  6AE3               	clrf	plusw1,c
 14502  01630A  D0D6               	goto	l16545
 14503  01630C                     l16513:
 14504                           
 14505                           ;stkvar	_rem @ sp[(-14)+4]
 14506  01630C  0EF7               	movlw	-9
 14507  01630E  BEE3               	btfsc	plusw1,7,c
 14508  016310  D04A               	goto	l16525
 14509  016312  0EF7               	movlw	-9
 14510  016314  50E3               	movf	plusw1,w,c
 14511  016316  E108               	bnz	u16240
 14512  016318  0EF6               	movlw	-10
 14513  01631A  006F FF8C  F02A    	movff	plusw1,btemp
 14514  016320  0EC8               	movlw	200
 14515  016322  5E2A               	subwf	btemp^0,f,c
 14516  016324  A0D8               	btfss	status,0,c
 14517  016326  D03F               	goto	l16525
 14518  016328                     u16240:
 14519                           
 14520                           ;stkvar	_rem @ sp[(-14)+4]
 14521  016328  0EF7               	movlw	-9
 14522  01632A  BEE3               	btfsc	plusw1,7,c
 14523  01632C  D025               	goto	l16521
 14524  01632E  0EF6               	movlw	-10
 14525  016330  006F FF8C  F02A    	movff	plusw1,btemp
 14526  016336  0E2C               	movlw	44
 14527  016338  5E2A               	subwf	btemp^0,f,c
 14528  01633A  0EF7               	movlw	-9
 14529  01633C  006F FF8C  F02A    	movff	plusw1,btemp
 14530  016342  0E01               	movlw	1
 14531  016344  5A2A               	subwfb	btemp^0,f,c
 14532  016346  A0D8               	btfss	status,0,c
 14533  016348  D017               	goto	l16521
 14534  01634A  0E03               	movlw	3
 14535  01634C  6E34               	movwf	(btemp+10)^0,c
 14536  01634E  0E00               	movlw	0
 14537  016350  6E35               	movwf	(btemp+11)^0,c
 14538                           
 14539                           ;stkvar	_centuries @ sp[(-14)+8]
 14540  016352  0EFA               	movlw	-6
 14541  016354  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14542  01635A  0EFB               	movlw	-5
 14543  01635C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14544                           
 14545                           ;stkvar	_rem @ sp[(-14)+4]
 14546  016362  50E1               	movf	fsr1l,w,c
 14547  016364  0FF6               	addlw	-10
 14548  016366  6ED9               	movwf	fsr2l,c
 14549  016368  50E2               	movf	fsr1h,w,c
 14550  01636A  6EDA               	movwf	fsr2h,c
 14551  01636C  0EFF               	movlw	255
 14552  01636E  22DA               	addwfc	fsr2h,f,c
 14553  016370  0ED4               	movlw	212
 14554  016372  26DE               	addwf	postinc2,f,c
 14555  016374  0EFE               	movlw	254
 14556  016376  D015               	goto	L13
 14557  016378                     l16521:
 14558  016378  0E02               	movlw	2
 14559  01637A  6E34               	movwf	(btemp+10)^0,c
 14560  01637C  0E00               	movlw	0
 14561  01637E  6E35               	movwf	(btemp+11)^0,c
 14562                           
 14563                           ;stkvar	_centuries @ sp[(-14)+8]
 14564  016380  0EFA               	movlw	-6
 14565  016382  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14566  016388  0EFB               	movlw	-5
 14567  01638A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14568                           
 14569                           ;stkvar	_rem @ sp[(-14)+4]
 14570  016390  50E1               	movf	fsr1l,w,c
 14571  016392  0FF6               	addlw	-10
 14572  016394  6ED9               	movwf	fsr2l,c
 14573  016396  50E2               	movf	fsr1h,w,c
 14574  016398  6EDA               	movwf	fsr2h,c
 14575  01639A  0EFF               	movlw	255
 14576  01639C  22DA               	addwfc	fsr2h,f,c
 14577  01639E  0E38               	movlw	56
 14578  0163A0  D024               	goto	L14
 14579  0163A2                     L13:
 14580  0163A2  22DD               	addwfc	postdec2,f,c
 14581  0163A4  D029               	goto	l16533
 14582  0163A6                     l16525:
 14583                           
 14584                           ;stkvar	_rem @ sp[(-14)+4]
 14585  0163A6  0EF7               	movlw	-9
 14586  0163A8  BEE3               	btfsc	plusw1,7,c
 14587  0163AA  D022               	goto	l16531
 14588  0163AC  0EF7               	movlw	-9
 14589  0163AE  50E3               	movf	plusw1,w,c
 14590  0163B0  E108               	bnz	u16260
 14591  0163B2  0EF6               	movlw	-10
 14592  0163B4  006F FF8C  F02A    	movff	plusw1,btemp
 14593  0163BA  0E64               	movlw	100
 14594  0163BC  5E2A               	subwf	btemp^0,f,c
 14595  0163BE  A0D8               	btfss	status,0,c
 14596  0163C0  D017               	goto	l16531
 14597  0163C2                     u16260:
 14598  0163C2  0E01               	movlw	1
 14599  0163C4  6E34               	movwf	(btemp+10)^0,c
 14600  0163C6  0E00               	movlw	0
 14601  0163C8  6E35               	movwf	(btemp+11)^0,c
 14602                           
 14603                           ;stkvar	_centuries @ sp[(-14)+8]
 14604  0163CA  0EFA               	movlw	-6
 14605  0163CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14606  0163D2  0EFB               	movlw	-5
 14607  0163D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14608                           
 14609                           ;stkvar	_rem @ sp[(-14)+4]
 14610  0163DA  50E1               	movf	fsr1l,w,c
 14611  0163DC  0FF6               	addlw	-10
 14612  0163DE  6ED9               	movwf	fsr2l,c
 14613  0163E0  50E2               	movf	fsr1h,w,c
 14614  0163E2  6EDA               	movwf	fsr2h,c
 14615  0163E4  0EFF               	movlw	255
 14616  0163E6  22DA               	addwfc	fsr2h,f,c
 14617  0163E8  0E9C               	movlw	156
 14618  0163EA                     L14:
 14619  0163EA  26DE               	addwf	postinc2,f,c
 14620  0163EC  0EFF               	movlw	255
 14621  0163EE  D7D9               	goto	L13
 14622  0163F0                     l16531:
 14623                           
 14624                           ;stkvar	_centuries @ sp[(-14)+8]
 14625  0163F0  0EFA               	movlw	-6
 14626  0163F2  6AE3               	clrf	plusw1,c
 14627  0163F4  0EFB               	movlw	-5
 14628  0163F6  6AE3               	clrf	plusw1,c
 14629  0163F8                     l16533:
 14630                           
 14631                           ;stkvar	_rem @ sp[(-14)+4]
 14632  0163F8  0EF6               	movlw	-10
 14633  0163FA  006F FF8C  F02A    	movff	plusw1,btemp
 14634  016400  0EF7               	movlw	-9
 14635  016402  50E3               	movf	plusw1,w,c
 14636  016404  102A               	iorwf	btemp^0,w,c
 14637  016406  A4D8               	btfss	status,2,c
 14638  016408  D00D               	goto	l16539
 14639                           
 14640                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14641  01640A  0EE8               	movlw	-24
 14642  01640C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14643  016412  0EE9               	movlw	-23
 14644  016414  006F FF8F FFDA     	movff	plusw1,fsr2h
 14645  01641A  0E00               	movlw	0
 14646  01641C  6EDE               	movwf	postinc2,c
 14647  01641E  0E00               	movlw	0
 14648  016420  6EDD               	movwf	postdec2,c
 14649  016422  D76F               	goto	l16511
 14650  016424                     l16539:
 14651                           
 14652                           ;stkvar	_rem @ sp[(-14)+4]
 14653  016424  0EF6               	movlw	-10
 14654  016426  006F FF8C  F034    	movff	plusw1,btemp+10
 14655  01642C  0EF7               	movlw	-9
 14656  01642E  006F FF8C  F035    	movff	plusw1,btemp+11
 14657  016434  90D8               	bcf	status,0,c
 14658  016436  3235               	rrcf	(btemp+11)^0,f,c
 14659  016438  3234               	rrcf	(btemp+10)^0,f,c
 14660  01643A  90D8               	bcf	status,0,c
 14661  01643C  3235               	rrcf	(btemp+11)^0,f,c
 14662  01643E  3234               	rrcf	(btemp+10)^0,f,c
 14663                           
 14664                           ;stkvar	_leaps @ sp[(-14)+10]
 14665  016440  0EFC               	movlw	-4
 14666  016442  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14667  016448  0EFD               	movlw	-3
 14668  01644A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14669  016450  0E03               	movlw	3
 14670  016452  6E34               	movwf	(btemp+10)^0,c
 14671  016454  0E00               	movlw	0
 14672  016456  6E35               	movwf	(btemp+11)^0,c
 14673                           
 14674                           ;stkvar	_rem @ sp[(-14)+4]
 14675  016458  0EF6               	movlw	-10
 14676  01645A  006F FF8C  F02A    	movff	plusw1,btemp
 14677  016460  5034               	movf	(btemp+10)^0,w,c
 14678  016462  162A               	andwf	btemp^0,f,c
 14679  016464  0EF6               	movlw	-10
 14680  016466  0060  F0AB  FFE3   	movff	btemp,plusw1
 14681  01646C  0EF7               	movlw	-9
 14682  01646E  006F FF8C  F02A    	movff	plusw1,btemp
 14683  016474  5035               	movf	(btemp+11)^0,w,c
 14684  016476  162A               	andwf	btemp^0,f,c
 14685  016478  0EF7               	movlw	-9
 14686  01647A  0060  F0AB  FFE3   	movff	btemp,plusw1
 14687                           
 14688                           ;stkvar	_rem @ sp[(-14)+4]
 14689  016480  0EF6               	movlw	-10
 14690  016482  006F FF8C  F02A    	movff	plusw1,btemp
 14691  016488  0EF7               	movlw	-9
 14692  01648A  50E3               	movf	plusw1,w,c
 14693  01648C  102A               	iorwf	btemp^0,w,c
 14694  01648E  A4D8               	btfss	status,2,c
 14695  016490  D002               	goto	u16280
 14696  016492  0E01               	movlw	1
 14697  016494  D001               	goto	u16290
 14698  016496                     u16280:
 14699  016496  0E00               	movlw	0
 14700  016498                     u16290:
 14701  016498  6E34               	movwf	(btemp+10)^0,c
 14702  01649A  6A35               	clrf	(btemp+11)^0,c
 14703                           
 14704                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14705  01649C  0EE8               	movlw	-24
 14706  01649E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14707  0164A4  0EE9               	movlw	-23
 14708  0164A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14709  0164AC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 14710  0164B2  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 14711  0164B8                     l16545:
 14712                           
 14713                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14714  0164B8  0EE8               	movlw	-24
 14715  0164BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14716  0164C0  0EE9               	movlw	-23
 14717  0164C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14718  0164C8  006F FF78  F034    	movff	postinc2,btemp+10
 14719  0164CE  006F FF74  F035    	movff	postdec2,btemp+11
 14720                           
 14721                           ;stkvar	_centuries @ sp[(-14)+8]
 14722  0164D4  0EFA               	movlw	-6
 14723  0164D6  006F FF8C  F032    	movff	plusw1,btemp+8
 14724  0164DC  0EFB               	movlw	-5
 14725  0164DE  006F FF8C  F033    	movff	plusw1,btemp+9
 14726  0164E4  0E18               	movlw	24
 14727  0164E6  0232               	mulwf	(btemp+8)^0,c
 14728  0164E8  006F FFCC  F030    	movff	prodl,btemp+6
 14729  0164EE  006F FFD0  F031    	movff	prodh,btemp+7
 14730  0164F4  0233               	mulwf	(btemp+9)^0,c
 14731  0164F6  50F3               	movf	prodl,w,c
 14732  0164F8  2631               	addwf	(btemp+7)^0,f,c
 14733                           
 14734                           ;stkvar	_cycles @ sp[(-14)+12]
 14735  0164FA  0EFE               	movlw	-2
 14736  0164FC  006F FF8C  F032    	movff	plusw1,btemp+8
 14737  016502  0EFF               	movlw	-1
 14738  016504  006F FF8C  F033    	movff	plusw1,btemp+9
 14739  01650A  0E61               	movlw	97
 14740  01650C  0232               	mulwf	(btemp+8)^0,c
 14741  01650E  006F FFCC  F02E    	movff	prodl,btemp+4
 14742  016514  006F FFD0  F02F    	movff	prodh,btemp+5
 14743  01651A  0233               	mulwf	(btemp+9)^0,c
 14744  01651C  50F3               	movf	prodl,w,c
 14745  01651E  262F               	addwf	(btemp+5)^0,f,c
 14746  016520  5030               	movf	(btemp+6)^0,w,c
 14747  016522  262E               	addwf	(btemp+4)^0,f,c
 14748  016524  5031               	movf	(btemp+7)^0,w,c
 14749  016526  222F               	addwfc	(btemp+5)^0,f,c
 14750  016528  5034               	movf	(btemp+10)^0,w,c
 14751  01652A  5E2E               	subwf	(btemp+4)^0,f,c
 14752  01652C  5035               	movf	(btemp+11)^0,w,c
 14753  01652E  5A2F               	subwfb	(btemp+5)^0,f,c
 14754                           
 14755                           ;stkvar	_leaps @ sp[(-14)+10]
 14756  016530  50E1               	movf	fsr1l,w,c
 14757  016532  0FFC               	addlw	-4
 14758  016534  6ED9               	movwf	fsr2l,c
 14759  016536  50E2               	movf	fsr1h,w,c
 14760  016538  6EDA               	movwf	fsr2h,c
 14761  01653A  0EFF               	movlw	255
 14762  01653C  22DA               	addwfc	fsr2h,f,c
 14763  01653E  502E               	movf	(btemp+4)^0,w,c
 14764  016540  26DE               	addwf	postinc2,f,c
 14765  016542  502F               	movf	(btemp+5)^0,w,c
 14766  016544  22DD               	addwfc	postdec2,f,c
 14767  016546  0E80               	movlw	128
 14768  016548  6EE6               	movwf	postinc1,c
 14769  01654A  0E51               	movlw	81
 14770  01654C  6EE6               	movwf	postinc1,c
 14771  01654E  0E01               	movlw	1
 14772  016550  6EE6               	movwf	postinc1,c
 14773  016552  0E00               	movlw	0
 14774  016554  6EE6               	movwf	postinc1,c
 14775  016556  0E00               	movlw	0
 14776  016558  6EE6               	movwf	postinc1,c
 14777  01655A  0E00               	movlw	0
 14778  01655C  6EE6               	movwf	postinc1,c
 14779  01655E  0E00               	movlw	0
 14780  016560  6EE6               	movwf	postinc1,c
 14781  016562  0E00               	movlw	0
 14782  016564  6EE6               	movwf	postinc1,c
 14783                           
 14784                           ;stkvar	_leaps @ sp[(-22)+10]
 14785  016566  0EF4               	movlw	-12
 14786  016568  006F FF8C  F03A    	movff	plusw1,btemp+16
 14787  01656E  0EF5               	movlw	-11
 14788  016570  006F FF8C  F03B    	movff	plusw1,btemp+17
 14789  016576  6A3C               	clrf	(btemp+18)^0,c
 14790  016578  BE3B               	btfsc	(btemp+17)^0,7,c
 14791  01657A  683C               	setf	(btemp+18)^0,c
 14792  01657C  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 14793  016582  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 14794  016588  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 14795  01658E  0060  F0F0  F040   	movff	btemp+18,btemp+22
 14796  016594  0060  F0F0  F041   	movff	btemp+18,btemp+23
 14797  01659A  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14798  0165A0  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14799  0165A6  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14800  0165AC  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14801  0165B2  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14802  0165B8  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14803  0165BE  0060  F103  FFE6   	movff	btemp+22,postinc1
 14804  0165C4  0060  F107  FFE6   	movff	btemp+23,postinc1
 14805  0165CA  EC63  F0F8         	call	___omul	;wreg free
 14806  0165CE  52E5               	movf	postdec1,f,c
 14807  0165D0  006F FF9C  F041    	movff	indf1,btemp+23
 14808  0165D6  52E5               	movf	postdec1,f,c
 14809  0165D8  006F FF9C  F040    	movff	indf1,btemp+22
 14810  0165DE  52E5               	movf	postdec1,f,c
 14811  0165E0  006F FF9C  F03F    	movff	indf1,btemp+21
 14812  0165E6  52E5               	movf	postdec1,f,c
 14813  0165E8  006F FF9C  F03E    	movff	indf1,btemp+20
 14814  0165EE  52E5               	movf	postdec1,f,c
 14815  0165F0  006F FF9C  F03D    	movff	indf1,btemp+19
 14816  0165F6  52E5               	movf	postdec1,f,c
 14817  0165F8  006F FF9C  F03C    	movff	indf1,btemp+18
 14818  0165FE  52E5               	movf	postdec1,f,c
 14819  016600  006F FF9C  F03B    	movff	indf1,btemp+17
 14820  016606  52E5               	movf	postdec1,f,c
 14821  016608  006F FF9C  F03A    	movff	indf1,btemp+16
 14822  01660E  0EF8               	movlw	248
 14823  016610  26E1               	addwf	fsr1l,f,c
 14824  016612  0EFF               	movlw	255
 14825  016614  22E2               	addwfc	fsr1h,f,c
 14826  016616  0E80               	movlw	128
 14827  016618  6EE6               	movwf	postinc1,c
 14828  01661A  0E33               	movlw	51
 14829  01661C  6EE6               	movwf	postinc1,c
 14830  01661E  0EE1               	movlw	225
 14831  016620  6EE6               	movwf	postinc1,c
 14832  016622  0E01               	movlw	1
 14833  016624  6EE6               	movwf	postinc1,c
 14834  016626  0E00               	movlw	0
 14835  016628  6EE6               	movwf	postinc1,c
 14836  01662A  0E00               	movlw	0
 14837  01662C  6EE6               	movwf	postinc1,c
 14838  01662E  0E00               	movlw	0
 14839  016630  6EE6               	movwf	postinc1,c
 14840  016632  0E00               	movlw	0
 14841  016634  6EE6               	movwf	postinc1,c
 14842                           
 14843                           ;stkvar	_year @ sp[(-22)+-8]
 14844  016636  50E1               	movf	fsr1l,w,c
 14845  016638  0FE2               	addlw	-30
 14846  01663A  6ED9               	movwf	fsr2l,c
 14847  01663C  50E2               	movf	fsr1h,w,c
 14848  01663E  6EDA               	movwf	fsr2h,c
 14849  016640  0EFF               	movlw	255
 14850  016642  22DA               	addwfc	fsr2h,f,c
 14851  016644  006F FF7B FFE6     	movff	postinc2,postinc1
 14852  01664A  006F FF7B FFE6     	movff	postinc2,postinc1
 14853  016650  006F FF7B FFE6     	movff	postinc2,postinc1
 14854  016656  006F FF7B FFE6     	movff	postinc2,postinc1
 14855  01665C  006F FF7B FFE6     	movff	postinc2,postinc1
 14856  016662  006F FF7B FFE6     	movff	postinc2,postinc1
 14857  016668  006F FF7B FFE6     	movff	postinc2,postinc1
 14858  01666E  006F FF7B FFE6     	movff	postinc2,postinc1
 14859  016674  EC63  F0F8         	call	___omul	;wreg free
 14860  016678  52E5               	movf	postdec1,f,c
 14861  01667A  006F FF9C  F049    	movff	indf1,btemp+31
 14862  016680  52E5               	movf	postdec1,f,c
 14863  016682  006F FF9C  F048    	movff	indf1,btemp+30
 14864  016688  52E5               	movf	postdec1,f,c
 14865  01668A  006F FF9C  F047    	movff	indf1,btemp+29
 14866  016690  52E5               	movf	postdec1,f,c
 14867  016692  006F FF9C  F046    	movff	indf1,btemp+28
 14868  016698  52E5               	movf	postdec1,f,c
 14869  01669A  006F FF9C  F045    	movff	indf1,btemp+27
 14870  0166A0  52E5               	movf	postdec1,f,c
 14871  0166A2  006F FF9C  F044    	movff	indf1,btemp+26
 14872  0166A8  52E5               	movf	postdec1,f,c
 14873  0166AA  006F FF9C  F043    	movff	indf1,btemp+25
 14874  0166B0  52E5               	movf	postdec1,f,c
 14875  0166B2  006F FF9C  F042    	movff	indf1,btemp+24
 14876  0166B8  0EF8               	movlw	248
 14877  0166BA  26E1               	addwf	fsr1l,f,c
 14878  0166BC  0EFF               	movlw	255
 14879  0166BE  22E2               	addwfc	fsr1h,f,c
 14880  0166C0  503A               	movf	(btemp+16)^0,w,c
 14881  0166C2  2442               	addwf	(btemp+24)^0,w,c
 14882  0166C4  6E32               	movwf	(btemp+8)^0,c
 14883  0166C6  503B               	movf	(btemp+17)^0,w,c
 14884  0166C8  2043               	addwfc	(btemp+25)^0,w,c
 14885  0166CA  6E33               	movwf	(btemp+9)^0,c
 14886  0166CC  503C               	movf	(btemp+18)^0,w,c
 14887  0166CE  2044               	addwfc	(btemp+26)^0,w,c
 14888  0166D0  6E34               	movwf	(btemp+10)^0,c
 14889  0166D2  503D               	movf	(btemp+19)^0,w,c
 14890  0166D4  2045               	addwfc	(btemp+27)^0,w,c
 14891  0166D6  6E35               	movwf	(btemp+11)^0,c
 14892  0166D8  503E               	movf	(btemp+20)^0,w,c
 14893  0166DA  2046               	addwfc	(btemp+28)^0,w,c
 14894  0166DC  6E36               	movwf	(btemp+12)^0,c
 14895  0166DE  503F               	movf	(btemp+21)^0,w,c
 14896  0166E0  2047               	addwfc	(btemp+29)^0,w,c
 14897  0166E2  6E37               	movwf	(btemp+13)^0,c
 14898  0166E4  5040               	movf	(btemp+22)^0,w,c
 14899  0166E6  2048               	addwfc	(btemp+30)^0,w,c
 14900  0166E8  6E38               	movwf	(btemp+14)^0,c
 14901  0166EA  5041               	movf	(btemp+23)^0,w,c
 14902  0166EC  2049               	addwfc	(btemp+31)^0,w,c
 14903  0166EE  6E39               	movwf	(btemp+15)^0,c
 14904  0166F0  0E00               	movlw	0
 14905  0166F2  2432               	addwf	(btemp+8)^0,w,c
 14906  0166F4  6E3A               	movwf	(btemp+16)^0,c
 14907  0166F6  0E77               	movlw	119
 14908  0166F8  2033               	addwfc	(btemp+9)^0,w,c
 14909  0166FA  6E3B               	movwf	(btemp+17)^0,c
 14910  0166FC  0E76               	movlw	118
 14911  0166FE  2034               	addwfc	(btemp+10)^0,w,c
 14912  016700  6E3C               	movwf	(btemp+18)^0,c
 14913  016702  0E7C               	movlw	124
 14914  016704  2035               	addwfc	(btemp+11)^0,w,c
 14915  016706  6E3D               	movwf	(btemp+19)^0,c
 14916  016708  0EFF               	movlw	255
 14917  01670A  2036               	addwfc	(btemp+12)^0,w,c
 14918  01670C  6E3E               	movwf	(btemp+20)^0,c
 14919  01670E  0EFF               	movlw	255
 14920  016710  2037               	addwfc	(btemp+13)^0,w,c
 14921  016712  6E3F               	movwf	(btemp+21)^0,c
 14922  016714  0EFF               	movlw	255
 14923  016716  2038               	addwfc	(btemp+14)^0,w,c
 14924  016718  6E40               	movwf	(btemp+22)^0,c
 14925  01671A  0EFF               	movlw	255
 14926  01671C  2039               	addwfc	(btemp+15)^0,w,c
 14927  01671E  6E41               	movwf	(btemp+23)^0,c
 14928  016720                     L12:
 14929                           
 14930                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 14931  016720  0EEA               	movlw	-22
 14932  016722  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 14933  016728  0EEB               	movlw	-21
 14934  01672A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 14935  016730  0EEC               	movlw	-20
 14936  016732  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 14937  016738  0EED               	movlw	-19
 14938  01673A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 14939  016740  0EEE               	movlw	-18
 14940  016742  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 14941  016748  0EEF               	movlw	-17
 14942  01674A  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 14943  016750  0EF0               	movlw	-16
 14944  016752  0060  F103  FFE3   	movff	btemp+22,plusw1
 14945  016758  0EF1               	movlw	-15
 14946  01675A  0060  F107  FFE3   	movff	btemp+23,plusw1
 14947                           
 14948                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 14949  016760  0EF2               	movlw	242
 14950  016762  26E1               	addwf	fsr1l,f,c
 14951  016764  0EFF               	movlw	255
 14952  016766  22E2               	addwfc	fsr1h,f,c
 14953  016768  0012               	return		;funcret
 14954  01676A                     __end_of___year_to_secs:
 14955                           	opt callstack 0
 14956                           
 14957 ;; *************** function ___month_to_secs *****************
 14958 ;; Defined at:
 14959 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;  month           2  [STACK] int 
 14962 ;;  is_leap         2  [STACK] int 
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;  t               4  [STACK] long 
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  4  [STACK] long 
 14967 ;; Registers used:
 14968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/0
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14978 ;;Total ram usage:        0 bytes
 14979 ;; Hardware stack levels used:    1
 14980 ;; Hardware stack levels required when called:   15
 14981 ;; This function calls:
 14982 ;;		Nothing
 14983 ;; This function is called by:
 14984 ;;		_rule_to_secs
 14985 ;; This function uses a reentrant model
 14986 ;;
 14987                           
 14988                           	psect	text41
 14989  00039A                     __ptext41:
 14990                           	opt callstack 0
 14991  00039A                     ___month_to_secs:
 14992                           	opt callstack 0
 14993                           
 14994                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14995  00039A  52E6               	movf	postinc1,f,c
 14996  00039C  52E6               	movf	postinc1,f,c
 14997  00039E  52E6               	movf	postinc1,f,c
 14998  0003A0  52E6               	movf	postinc1,f,c
 14999                           
 15000                           ;stkvar	_month @ sp[(-4)+-2]
 15001                           
 15002                           ;incstack = 0
 15003  0003A2  0EFA               	movlw	-6
 15004  0003A4  006F FF8C  F034    	movff	plusw1,btemp+10
 15005  0003AA  0EFB               	movlw	-5
 15006  0003AC  006F FF8C  F035    	movff	plusw1,btemp+11
 15007  0003B2  90D8               	bcf	status,0,c
 15008  0003B4  3634               	rlcf	(btemp+10)^0,f,c
 15009  0003B6  3635               	rlcf	(btemp+11)^0,f,c
 15010  0003B8  90D8               	bcf	status,0,c
 15011  0003BA  3634               	rlcf	(btemp+10)^0,f,c
 15012  0003BC  3635               	rlcf	(btemp+11)^0,f,c
 15013  0003BE  0E41               	movlw	low ___month_to_secs@secs_through_month
 15014  0003C0  2434               	addwf	(btemp+10)^0,w,c
 15015  0003C2  6EF6               	movwf	tblptrl,c
 15016  0003C4  0EF8               	movlw	high ___month_to_secs@secs_through_month
 15017  0003C6  2035               	addwfc	(btemp+11)^0,w,c
 15018  0003C8  6EF7               	movwf	tblptrh,c
 15019  0003CA                     	if	1	;There are 3 active tblptr bytes
 15020  0003CA  6AF8               	clrf	tblptru,c
 15021  0003CC  0E00               	movlw	low (__mediumconst shr (0+16))
 15022  0003CE  22F8               	addwfc	tblptru,f,c
 15023  0003D0                     	endif
 15024  0003D0  0009               	tblrd		*+
 15025  0003D2  006F FFD4  F032    	movff	tablat,btemp+8
 15026  0003D8  0009               	tblrd		*+
 15027  0003DA  006F FFD4  F033    	movff	tablat,btemp+9
 15028  0003E0  0009               	tblrd		*+
 15029  0003E2  006F FFD4  F034    	movff	tablat,btemp+10
 15030  0003E8  0009               	tblrd		*+
 15031  0003EA  006F FFD4  F035    	movff	tablat,btemp+11
 15032                           
 15033                           ;stkvar	_t @ sp[(-4)+0]
 15034  0003F0  0EFC               	movlw	-4
 15035  0003F2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15036  0003F8  0EFD               	movlw	-3
 15037  0003FA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15038  000400  0EFE               	movlw	-2
 15039  000402  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15040  000408  0EFF               	movlw	-1
 15041  00040A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15042                           
 15043                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15044  000410  0EF8               	movlw	-8
 15045  000412  006F FF8C  F02A    	movff	plusw1,btemp
 15046  000418  0EF9               	movlw	-7
 15047  00041A  50E3               	movf	plusw1,w,c
 15048  00041C  102A               	iorwf	btemp^0,w,c
 15049  00041E  B4D8               	btfsc	status,2,c
 15050  000420  D01D               	goto	l16559
 15051                           
 15052                           ;stkvar	_month @ sp[(-4)+-2]
 15053  000422  0EFB               	movlw	-5
 15054  000424  BEE3               	btfsc	plusw1,7,c
 15055  000426  D01A               	goto	l16559
 15056  000428  0EFB               	movlw	-5
 15057  00042A  50E3               	movf	plusw1,w,c
 15058  00042C  E108               	bnz	u16310
 15059  00042E  0EFA               	movlw	-6
 15060  000430  006F FF8C  F02A    	movff	plusw1,btemp
 15061  000436  0E02               	movlw	2
 15062  000438  5E2A               	subwf	btemp^0,f,c
 15063  00043A  A0D8               	btfss	status,0,c
 15064  00043C  D00F               	goto	l16559
 15065  00043E                     u16310:
 15066                           
 15067                           ;stkvar	_t @ sp[(-4)+0]
 15068  00043E  50E1               	movf	fsr1l,w,c
 15069  000440  0FFC               	addlw	-4
 15070  000442  6ED9               	movwf	fsr2l,c
 15071  000444  50E2               	movf	fsr1h,w,c
 15072  000446  6EDA               	movwf	fsr2h,c
 15073  000448  0EFF               	movlw	255
 15074  00044A  22DA               	addwfc	fsr2h,f,c
 15075  00044C  0E80               	movlw	128
 15076  00044E  26DE               	addwf	postinc2,f,c
 15077  000450  0E51               	movlw	81
 15078  000452  22DE               	addwfc	postinc2,f,c
 15079  000454  0E01               	movlw	1
 15080  000456  22DE               	addwfc	postinc2,f,c
 15081  000458  0E00               	movlw	0
 15082  00045A  22DE               	addwfc	postinc2,f,c
 15083  00045C                     l16559:
 15084                           
 15085                           ;stkvar	_t @ sp[(-4)+0]
 15086  00045C  0EFC               	movlw	-4
 15087  00045E  006F FF8C  F02A    	movff	plusw1,btemp
 15088  000464  0EFD               	movlw	-3
 15089  000466  006F FF8C  F02B    	movff	plusw1,btemp+1
 15090  00046C  0EFE               	movlw	-2
 15091  00046E  006F FF8C  F02C    	movff	plusw1,btemp+2
 15092  000474  0EFF               	movlw	-1
 15093  000476  006F FF8C  F02D    	movff	plusw1,btemp+3
 15094                           
 15095                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15096  00047C  0EF8               	movlw	248
 15097  00047E  26E1               	addwf	fsr1l,f,c
 15098  000480  0EFF               	movlw	255
 15099  000482  22E2               	addwfc	fsr1h,f,c
 15100  000484  0012               	return		;funcret
 15101  000486                     __end_of___month_to_secs:
 15102                           	opt callstack 0
 15103                           
 15104 ;; *************** function _do_tzset *****************
 15105 ;; Defined at:
 15106 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15107 ;; Parameters:    Size  Location     Type
 15108 ;;		None
 15109 ;; Auto vars:     Size  Location     Type
 15110 ;;  s               2  [STACK] PTR const unsigned char 
 15111 ;;		 -> __gmt(4), 
 15112 ;; Return value:  Size  Location     Type
 15113 ;;                  1  [STACK] void 
 15114 ;; Registers used:
 15115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15116 ;; Tracked objects:
 15117 ;;		On entry : 0/39
 15118 ;;		On exit  : 0/0
 15119 ;;		Unchanged: 0/0
 15120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15125 ;;Total ram usage:        0 bytes
 15126 ;; Hardware stack levels used:    1
 15127 ;; Hardware stack levels required when called:   18
 15128 ;; This function calls:
 15129 ;;		_getname
 15130 ;;		_getoff
 15131 ;;		_getrule
 15132 ;; This function is called by:
 15133 ;;		___secs_to_zone
 15134 ;; This function uses a reentrant model
 15135 ;;
 15136                           
 15137                           	psect	text42
 15138  01BE56                     __ptext42:
 15139                           	opt callstack 0
 15140  01BE56                     _do_tzset:
 15141                           	opt callstack 0
 15142                           
 15143                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15144  01BE56  52E6               	movf	postinc1,f,c
 15145  01BE58  52E6               	movf	postinc1,f,c
 15146                           
 15147                           ;stkvar	_s @ sp[(-2)+0]
 15148                           
 15149                           ;incstack = 0
 15150  01BE5A  0EF9               	movlw	high ___gmt
 15151  01BE5C  6E2A               	movwf	btemp^0,c
 15152  01BE5E  0EFF               	movlw	-1
 15153  01BE60  0060  F0AB  FFE3   	movff	btemp,plusw1
 15154  01BE66  0EAD               	movlw	low ___gmt
 15155  01BE68  6E2A               	movwf	btemp^0,c
 15156  01BE6A  0EFE               	movlw	-2
 15157  01BE6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 15158                           
 15159                           ;stkvar	_s @ sp[(-2)+0]
 15160  01BE72  0EFE               	movlw	254
 15161  01BE74  24E1               	addwf	fsr1l,w,c
 15162  01BE76  6E2A               	movwf	btemp^0,c
 15163  01BE78  0EFF               	movlw	255
 15164  01BE7A  20E2               	addwfc	fsr1h,w,c
 15165  01BE7C  6E2B               	movwf	(btemp+1)^0,c
 15166  01BE7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 15167  01BE84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15168  01BE8A  0EF2               	movlw	low _std_name
 15169  01BE8C  6EE6               	movwf	postinc1,c
 15170  01BE8E  0E01               	movlw	high _std_name
 15171  01BE90  6EE6               	movwf	postinc1,c
 15172  01BE92  ECFF  F0D7         	call	_getname	;wreg free
 15173  01BE96  0EF2               	movlw	low _std_name
 15174  01BE98  0100               	movlb	0	; () banked
 15175  01BE9A  6F6C               	movwf	___tzname& (0+255),b
 15176  01BE9C  0E01               	movlw	high _std_name
 15177  01BE9E  6F6D               	movwf	(___tzname+1)& (0+255),b
 15178                           
 15179                           ; BSR set to: 0
 15180                           ;stkvar	_s @ sp[(-2)+0]
 15181  01BEA0  0EFE               	movlw	254
 15182  01BEA2  24E1               	addwf	fsr1l,w,c
 15183  01BEA4  6E2A               	movwf	btemp^0,c
 15184  01BEA6  0EFF               	movlw	255
 15185  01BEA8  20E2               	addwfc	fsr1h,w,c
 15186  01BEAA  6E2B               	movwf	(btemp+1)^0,c
 15187  01BEAC  0060  F0AB  FFE6   	movff	btemp,postinc1
 15188  01BEB2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15189  01BEB8  EC8A  F0E7         	call	_getoff	;wreg free
 15190  01BEBC  0060  F0A8  F070   	movff	btemp,___timezone
 15191  01BEC2  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15192  01BEC8  0100               	movlb	0	; () banked
 15193  01BECA  0E00               	movlw	0
 15194  01BECC  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15195  01BECE  0EFF               	movlw	-1
 15196  01BED0  6F72               	movwf	(___timezone+2)& (0+255),b
 15197  01BED2  6F73               	movwf	(___timezone+3)& (0+255),b
 15198                           
 15199                           ; BSR set to: 0
 15200                           ;stkvar	_s @ sp[(-2)+0]
 15201  01BED4  0EFE               	movlw	254
 15202  01BED6  24E1               	addwf	fsr1l,w,c
 15203  01BED8  6E2A               	movwf	btemp^0,c
 15204  01BEDA  0EFF               	movlw	255
 15205  01BEDC  20E2               	addwfc	fsr1h,w,c
 15206  01BEDE  6E2B               	movwf	(btemp+1)^0,c
 15207  01BEE0  0060  F0AB  FFE6   	movff	btemp,postinc1
 15208  01BEE6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15209  01BEEC  0EEB               	movlw	low _dst_name
 15210  01BEEE  6EE6               	movwf	postinc1,c
 15211  01BEF0  0E01               	movlw	high _dst_name
 15212  01BEF2  6EE6               	movwf	postinc1,c
 15213  01BEF4  ECFF  F0D7         	call	_getname	;wreg free
 15214  01BEF8  0EEB               	movlw	low _dst_name
 15215  01BEFA  0100               	movlb	0	; () banked
 15216  01BEFC  6F6E               	movwf	(___tzname+2)& (0+255),b
 15217  01BEFE  0E01               	movlw	high _dst_name
 15218  01BF00  6F6F               	movwf	(___tzname+3)& (0+255),b
 15219                           
 15220                           ; BSR set to: 0
 15221  01BF02  0101               	movlb	1	; () banked
 15222  01BF04  51EB               	movf	_dst_name& (0+255),w,b
 15223  01BF06  B4D8               	btfsc	status,2,c
 15224  01BF08  D070               	goto	l3966
 15225                           
 15226                           ; BSR set to: 1
 15227  01BF0A  0E00               	movlw	0
 15228  01BF0C  0100               	movlb	0	; () banked
 15229  01BF0E  6FB9               	movwf	(___daylight+1)& (0+255),b
 15230  01BF10  0E01               	movlw	1
 15231  01BF12  6FB8               	movwf	___daylight& (0+255),b
 15232                           
 15233                           ; BSR set to: 0
 15234                           ;stkvar	_s @ sp[(-2)+0]
 15235  01BF14  50E1               	movf	fsr1l,w,c
 15236  01BF16  0FFE               	addlw	-2
 15237  01BF18  6ED9               	movwf	fsr2l,c
 15238  01BF1A  50E2               	movf	fsr1h,w,c
 15239  01BF1C  6EDA               	movwf	fsr2h,c
 15240  01BF1E  0EFF               	movlw	255
 15241  01BF20  22DA               	addwfc	fsr2h,f,c
 15242  01BF22  006F FF7B FFF6     	movff	postinc2,tblptrl
 15243  01BF28  006F FF77 FFF7     	movff	postdec2,tblptrh
 15244  01BF2E                     	if	0	;tblptru may be non-zero
 15245  01BF2E                     	endif
 15246  01BF2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15247  01BF2E  0E00               	movlw	low (__mediumconst shr (0+16))
 15248  01BF30  6EF8               	movwf	tblptru,c
 15249  01BF32                     	endif
 15250  01BF32  0008               	tblrd		*
 15251  01BF34  50F5               	movf	tablat,w,c
 15252  01BF36  0A2B               	xorlw	43
 15253  01BF38  B4D8               	btfsc	status,2,c
 15254  01BF3A  D035               	goto	u16660
 15255                           
 15256                           ; BSR set to: 0
 15257                           ;stkvar	_s @ sp[(-2)+0]
 15258  01BF3C  50E1               	movf	fsr1l,w,c
 15259  01BF3E  0FFE               	addlw	-2
 15260  01BF40  6ED9               	movwf	fsr2l,c
 15261  01BF42  50E2               	movf	fsr1h,w,c
 15262  01BF44  6EDA               	movwf	fsr2h,c
 15263  01BF46  0EFF               	movlw	255
 15264  01BF48  22DA               	addwfc	fsr2h,f,c
 15265  01BF4A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15266  01BF50  006F FF77 FFF7     	movff	postdec2,tblptrh
 15267  01BF56                     	if	0	;tblptru may be non-zero
 15268  01BF56                     	endif
 15269  01BF56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15270  01BF56  0E00               	movlw	low (__mediumconst shr (0+16))
 15271  01BF58  6EF8               	movwf	tblptru,c
 15272  01BF5A                     	endif
 15273  01BF5A  0008               	tblrd		*
 15274  01BF5C  50F5               	movf	tablat,w,c
 15275  01BF5E  0A2D               	xorlw	45
 15276  01BF60  B4D8               	btfsc	status,2,c
 15277  01BF62  D021               	goto	u16660
 15278                           
 15279                           ; BSR set to: 0
 15280  01BF64  0ED0               	movlw	208
 15281  01BF66  6E34               	movwf	(btemp+10)^0,c
 15282  01BF68  0EFF               	movlw	255
 15283  01BF6A  6E35               	movwf	(btemp+11)^0,c
 15284                           
 15285                           ;stkvar	_s @ sp[(-2)+0]
 15286  01BF6C  50E1               	movf	fsr1l,w,c
 15287  01BF6E  0FFE               	addlw	-2
 15288  01BF70  6ED9               	movwf	fsr2l,c
 15289  01BF72  50E2               	movf	fsr1h,w,c
 15290  01BF74  6EDA               	movwf	fsr2h,c
 15291  01BF76  0EFF               	movlw	255
 15292  01BF78  22DA               	addwfc	fsr2h,f,c
 15293  01BF7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15294  01BF80  006F FF77 FFF7     	movff	postdec2,tblptrh
 15295  01BF86                     	if	0	;tblptru may be non-zero
 15296  01BF86                     	endif
 15297  01BF86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15298  01BF86  0E00               	movlw	low (__mediumconst shr (0+16))
 15299  01BF88  6EF8               	movwf	tblptru,c
 15300  01BF8A                     	endif
 15301  01BF8A  0008               	tblrd		*
 15302  01BF8C  50F5               	movf	tablat,w,c
 15303  01BF8E  6E32               	movwf	(btemp+8)^0,c
 15304  01BF90  6A33               	clrf	(btemp+9)^0,c
 15305  01BF92  5034               	movf	(btemp+10)^0,w,c
 15306  01BF94  2632               	addwf	(btemp+8)^0,f,c
 15307  01BF96  5035               	movf	(btemp+11)^0,w,c
 15308  01BF98  2233               	addwfc	(btemp+9)^0,f,c
 15309  01BF9A  5033               	movf	(btemp+9)^0,w,c
 15310  01BF9C  E119               	bnz	l16817
 15311  01BF9E  0E0A               	movlw	10
 15312  01BFA0  5C32               	subwf	(btemp+8)^0,w,c
 15313  01BFA2  B0D8               	btfsc	status,0,c
 15314  01BFA4  D015               	goto	l16817
 15315  01BFA6                     u16660:
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;stkvar	_s @ sp[(-2)+0]
 15319  01BFA6  0EFE               	movlw	254
 15320  01BFA8  24E1               	addwf	fsr1l,w,c
 15321  01BFAA  6E2A               	movwf	btemp^0,c
 15322  01BFAC  0EFF               	movlw	255
 15323  01BFAE  20E2               	addwfc	fsr1h,w,c
 15324  01BFB0  6E2B               	movwf	(btemp+1)^0,c
 15325  01BFB2  0060  F0AB  FFE6   	movff	btemp,postinc1
 15326  01BFB8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15327  01BFBE  EC8A  F0E7         	call	_getoff	;wreg free
 15328  01BFC2  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15329  01BFC8  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15330  01BFCE  D012               	goto	l16819
 15331  01BFD0                     l16817:
 15332                           
 15333                           ; BSR set to: 0
 15334  01BFD0  0060  F1C0  F034   	movff	___timezone,btemp+10
 15335  01BFD6  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15336  01BFDC  0EF0               	movlw	240
 15337  01BFDE  2434               	addwf	(btemp+10)^0,w,c
 15338  01BFE0  6FB6               	movwf	_dst_off& (0+255),b
 15339  01BFE2  0EF1               	movlw	241
 15340  01BFE4  2035               	addwfc	(btemp+11)^0,w,c
 15341  01BFE6  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15342  01BFE8  D005               	goto	l16819
 15343  01BFEA                     l3966:
 15344                           
 15345                           ; BSR set to: 1
 15346  01BFEA  0100               	movlb	0	; () banked
 15347  01BFEC  6BB8               	clrf	___daylight& (0+255),b
 15348  01BFEE  6BB9               	clrf	(___daylight+1)& (0+255),b
 15349  01BFF0  6BB6               	clrf	_dst_off& (0+255),b
 15350  01BFF2  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15351  01BFF4                     l16819:
 15352                           
 15353                           ;stkvar	_s @ sp[(-2)+0]
 15354  01BFF4  50E1               	movf	fsr1l,w,c
 15355  01BFF6  0FFE               	addlw	-2
 15356  01BFF8  6ED9               	movwf	fsr2l,c
 15357  01BFFA  50E2               	movf	fsr1h,w,c
 15358  01BFFC  6EDA               	movwf	fsr2h,c
 15359  01BFFE  0EFF               	movlw	255
 15360  01C000  22DA               	addwfc	fsr2h,f,c
 15361  01C002  006F FF7B FFF6     	movff	postinc2,tblptrl
 15362  01C008  006F FF77 FFF7     	movff	postdec2,tblptrh
 15363  01C00E                     	if	0	;tblptru may be non-zero
 15364  01C00E                     	endif
 15365  01C00E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15366  01C00E  0E00               	movlw	low (__mediumconst shr (0+16))
 15367  01C010  6EF8               	movwf	tblptru,c
 15368  01C012                     	endif
 15369  01C012  0008               	tblrd		*
 15370  01C014  50F5               	movf	tablat,w,c
 15371  01C016  0A2C               	xorlw	44
 15372  01C018  A4D8               	btfss	status,2,c
 15373  01C01A  D023               	goto	l16825
 15374                           
 15375                           ;stkvar	_s @ sp[(-2)+0]
 15376  01C01C  0EFE               	movlw	-2
 15377  01C01E  50E3               	movf	plusw1,w,c
 15378  01C020  0F01               	addlw	1
 15379  01C022  6E2A               	movwf	btemp^0,c
 15380  01C024  0EFE               	movlw	-2
 15381  01C026  0060  F0AB  FFE3   	movff	btemp,plusw1
 15382  01C02C  6A2A               	clrf	btemp^0,c
 15383  01C02E  0EFF               	movlw	-1
 15384  01C030  50E3               	movf	plusw1,w,c
 15385  01C032  202A               	addwfc	btemp^0,w,c
 15386  01C034  6E2A               	movwf	btemp^0,c
 15387  01C036  0EFF               	movlw	-1
 15388  01C038  0060  F0AB  FFE3   	movff	btemp,plusw1
 15389  01C03E  0EE8               	movlw	low _r0
 15390  01C040  6EE6               	movwf	postinc1,c
 15391  01C042  0E02               	movlw	high _r0
 15392  01C044  6EE6               	movwf	postinc1,c
 15393                           
 15394                           ;stkvar	_s @ sp[(-4)+0]
 15395  01C046  0EFC               	movlw	252
 15396  01C048  24E1               	addwf	fsr1l,w,c
 15397  01C04A  6E2A               	movwf	btemp^0,c
 15398  01C04C  0EFF               	movlw	255
 15399  01C04E  20E2               	addwfc	fsr1h,w,c
 15400  01C050  6E2B               	movwf	(btemp+1)^0,c
 15401  01C052  0060  F0AB  FFE6   	movff	btemp,postinc1
 15402  01C058  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15403  01C05E  EC6B  F0E0         	call	_getrule	;wreg free
 15404  01C062                     l16825:
 15405                           
 15406                           ;stkvar	_s @ sp[(-2)+0]
 15407  01C062  50E1               	movf	fsr1l,w,c
 15408  01C064  0FFE               	addlw	-2
 15409  01C066  6ED9               	movwf	fsr2l,c
 15410  01C068  50E2               	movf	fsr1h,w,c
 15411  01C06A  6EDA               	movwf	fsr2h,c
 15412  01C06C  0EFF               	movlw	255
 15413  01C06E  22DA               	addwfc	fsr2h,f,c
 15414  01C070  006F FF7B FFF6     	movff	postinc2,tblptrl
 15415  01C076  006F FF77 FFF7     	movff	postdec2,tblptrh
 15416  01C07C                     	if	0	;tblptru may be non-zero
 15417  01C07C                     	endif
 15418  01C07C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15419  01C07C  0E00               	movlw	low (__mediumconst shr (0+16))
 15420  01C07E  6EF8               	movwf	tblptru,c
 15421  01C080                     	endif
 15422  01C080  0008               	tblrd		*
 15423  01C082  50F5               	movf	tablat,w,c
 15424  01C084  0A2C               	xorlw	44
 15425  01C086  A4D8               	btfss	status,2,c
 15426  01C088  D023               	goto	l3974
 15427                           
 15428                           ;stkvar	_s @ sp[(-2)+0]
 15429  01C08A  0EFE               	movlw	-2
 15430  01C08C  50E3               	movf	plusw1,w,c
 15431  01C08E  0F01               	addlw	1
 15432  01C090  6E2A               	movwf	btemp^0,c
 15433  01C092  0EFE               	movlw	-2
 15434  01C094  0060  F0AB  FFE3   	movff	btemp,plusw1
 15435  01C09A  6A2A               	clrf	btemp^0,c
 15436  01C09C  0EFF               	movlw	-1
 15437  01C09E  50E3               	movf	plusw1,w,c
 15438  01C0A0  202A               	addwfc	btemp^0,w,c
 15439  01C0A2  6E2A               	movwf	btemp^0,c
 15440  01C0A4  0EFF               	movlw	-1
 15441  01C0A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 15442  01C0AC  0EDE               	movlw	low _r1
 15443  01C0AE  6EE6               	movwf	postinc1,c
 15444  01C0B0  0E02               	movlw	high _r1
 15445  01C0B2  6EE6               	movwf	postinc1,c
 15446                           
 15447                           ;stkvar	_s @ sp[(-4)+0]
 15448  01C0B4  0EFC               	movlw	252
 15449  01C0B6  24E1               	addwf	fsr1l,w,c
 15450  01C0B8  6E2A               	movwf	btemp^0,c
 15451  01C0BA  0EFF               	movlw	255
 15452  01C0BC  20E2               	addwfc	fsr1h,w,c
 15453  01C0BE  6E2B               	movwf	(btemp+1)^0,c
 15454  01C0C0  0060  F0AB  FFE6   	movff	btemp,postinc1
 15455  01C0C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15456  01C0CC  EC6B  F0E0         	call	_getrule	;wreg free
 15457  01C0D0                     l3974:
 15458                           
 15459                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15460  01C0D0  52E5               	movf	postdec1,f,c
 15461  01C0D2  52E5               	movf	postdec1,f,c
 15462  01C0D4  0012               	return		;funcret
 15463  01C0D6                     __end_of_do_tzset:
 15464                           	opt callstack 0
 15465                           
 15466 ;; *************** function _getrule *****************
 15467 ;; Defined at:
 15468 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15469 ;; Parameters:    Size  Location     Type
 15470 ;;  p               2  [STACK] PTR PTR const unsigned c
 15471 ;;		 -> s(2), 
 15472 ;;  rule            2  [STACK] PTR int 
 15473 ;;		 -> r1(10), r0(10), 
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;  r               2  [STACK] int 
 15476 ;; Return value:  Size  Location     Type
 15477 ;;                  1  [STACK] void 
 15478 ;; Registers used:
 15479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15480 ;; Tracked objects:
 15481 ;;		On entry : 0/0
 15482 ;;		On exit  : 0/0
 15483 ;;		Unchanged: 0/0
 15484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15489 ;;Total ram usage:        0 bytes
 15490 ;; Hardware stack levels used:    1
 15491 ;; Hardware stack levels required when called:   17
 15492 ;; This function calls:
 15493 ;;		_getint
 15494 ;;		_getoff
 15495 ;; This function is called by:
 15496 ;;		_do_tzset
 15497 ;; This function uses a reentrant model
 15498 ;;
 15499                           
 15500                           	psect	text43
 15501  01C0D6                     __ptext43:
 15502                           	opt callstack 0
 15503  01C0D6                     _getrule:
 15504                           	opt callstack 0
 15505                           
 15506                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15507  01C0D6  52E6               	movf	postinc1,f,c
 15508  01C0D8  52E6               	movf	postinc1,f,c
 15509                           
 15510                           ;stkvar	_p @ sp[(-2)+-2]
 15511                           
 15512                           ;incstack = 0
 15513  01C0DA  0EFC               	movlw	-4
 15514  01C0DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15515  01C0E2  0EFD               	movlw	-3
 15516  01C0E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15517  01C0EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15518  01C0F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15519  01C0F6                     	if	0	;tblptru may be non-zero
 15520  01C0F6                     	endif
 15521  01C0F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15522  01C0F6  0E00               	movlw	low (__mediumconst shr (0+16))
 15523  01C0F8  6EF8               	movwf	tblptru,c
 15524  01C0FA                     	endif
 15525  01C0FA  0008               	tblrd		*
 15526  01C0FC  50F5               	movf	tablat,w,c
 15527  01C0FE  6E34               	movwf	(btemp+10)^0,c
 15528  01C100  6A35               	clrf	(btemp+11)^0,c
 15529                           
 15530                           ;stkvar	_rule @ sp[(-2)+-4]
 15531  01C102  0EFA               	movlw	-6
 15532  01C104  006F FF8F FFD9     	movff	plusw1,fsr2l
 15533  01C10A  0EFB               	movlw	-5
 15534  01C10C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15535  01C112  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15536  01C118  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15537  01C11E  006F FF78  F034    	movff	postinc2,btemp+10
 15538  01C124  006F FF74  F035    	movff	postdec2,btemp+11
 15539                           
 15540                           ;stkvar	_r @ sp[(-2)+0]
 15541  01C12A  0EFE               	movlw	-2
 15542  01C12C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15543  01C132  0EFF               	movlw	-1
 15544  01C134  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15545                           
 15546                           ;stkvar	_r @ sp[(-2)+0]
 15547  01C13A  0EFE               	movlw	-2
 15548  01C13C  006F FF8C  F02A    	movff	plusw1,btemp
 15549  01C142  0E4D               	movlw	77
 15550  01C144  182A               	xorwf	btemp^0,w,c
 15551  01C146  E104               	bnz	u16070
 15552  01C148  0EFF               	movlw	-1
 15553  01C14A  50E3               	movf	plusw1,w,c
 15554  01C14C  B4D8               	btfsc	status,2,c
 15555  01C14E  D036               	goto	l16403
 15556  01C150                     u16070:
 15557                           
 15558                           ;stkvar	_r @ sp[(-2)+0]
 15559  01C150  0EFE               	movlw	-2
 15560  01C152  006F FF8C  F02A    	movff	plusw1,btemp
 15561  01C158  0E4A               	movlw	74
 15562  01C15A  182A               	xorwf	btemp^0,w,c
 15563  01C15C  E110               	bnz	l16399
 15564  01C15E  0EFF               	movlw	-1
 15565  01C160  50E3               	movf	plusw1,w,c
 15566  01C162  A4D8               	btfss	status,2,c
 15567  01C164  D00C               	goto	l16399
 15568                           
 15569                           ;stkvar	_p @ sp[(-2)+-2]
 15570  01C166  0EFC               	movlw	-4
 15571  01C168  006F FF8F FFD9     	movff	plusw1,fsr2l
 15572  01C16E  0EFD               	movlw	-3
 15573  01C170  006F FF8F FFDA     	movff	plusw1,fsr2h
 15574  01C176  2ADE               	incf	postinc2,f,c
 15575  01C178  0E00               	movlw	0
 15576  01C17A  22DD               	addwfc	postdec2,f,c
 15577  01C17C  D00C               	goto	l16401
 15578  01C17E                     l16399:
 15579                           
 15580                           ;stkvar	_rule @ sp[(-2)+-4]
 15581  01C17E  0EFA               	movlw	-6
 15582  01C180  006F FF8F FFD9     	movff	plusw1,fsr2l
 15583  01C186  0EFB               	movlw	-5
 15584  01C188  006F FF8F FFDA     	movff	plusw1,fsr2h
 15585  01C18E  0E00               	movlw	0
 15586  01C190  6EDE               	movwf	postinc2,c
 15587  01C192  0E00               	movlw	0
 15588  01C194  6EDD               	movwf	postdec2,c
 15589  01C196                     l16401:
 15590                           
 15591                           ;stkvar	_p @ sp[(-2)+-2]
 15592  01C196  0EFC               	movlw	-4
 15593  01C198  006F FF8F FFE6     	movff	plusw1,postinc1
 15594  01C19E  006F FF8F FFE6     	movff	plusw1,postinc1
 15595  01C1A4  EC86  F0FF         	call	_getint	;wreg free
 15596                           
 15597                           ;stkvar	_rule @ sp[(-2)+-4]
 15598  01C1A8  0EFA               	movlw	-6
 15599  01C1AA  006F FF8C  F034    	movff	plusw1,btemp+10
 15600  01C1B0  0EFB               	movlw	-5
 15601  01C1B2  006F FF8C  F035    	movff	plusw1,btemp+11
 15602  01C1B8  0E02               	movlw	2
 15603  01C1BA  D06D               	goto	L15
 15604  01C1BC                     l16403:
 15605                           
 15606                           ;stkvar	_p @ sp[(-2)+-2]
 15607  01C1BC  0EFC               	movlw	-4
 15608  01C1BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15609  01C1C4  0EFD               	movlw	-3
 15610  01C1C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15611  01C1CC  2ADE               	incf	postinc2,f,c
 15612  01C1CE  0E00               	movlw	0
 15613  01C1D0  22DD               	addwfc	postdec2,f,c
 15614                           
 15615                           ;stkvar	_p @ sp[(-2)+-2]
 15616  01C1D2  0EFC               	movlw	-4
 15617  01C1D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15618  01C1DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15619  01C1E0  EC86  F0FF         	call	_getint	;wreg free
 15620                           
 15621                           ;stkvar	_rule @ sp[(-2)+-4]
 15622  01C1E4  0EFA               	movlw	-6
 15623  01C1E6  006F FF8C  F034    	movff	plusw1,btemp+10
 15624  01C1EC  0EFB               	movlw	-5
 15625  01C1EE  006F FF8C  F035    	movff	plusw1,btemp+11
 15626  01C1F4  0E02               	movlw	2
 15627  01C1F6  2434               	addwf	(btemp+10)^0,w,c
 15628  01C1F8  6ED9               	movwf	fsr2l,c
 15629  01C1FA  0E00               	movlw	0
 15630  01C1FC  2035               	addwfc	(btemp+11)^0,w,c
 15631  01C1FE  6EDA               	movwf	fsr2h,c
 15632  01C200  0060  F0AB  FFDE   	movff	btemp,postinc2
 15633  01C206  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15634                           
 15635                           ;stkvar	_p @ sp[(-2)+-2]
 15636  01C20C  0EFC               	movlw	-4
 15637  01C20E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15638  01C214  0EFD               	movlw	-3
 15639  01C216  006F FF8F FFDA     	movff	plusw1,fsr2h
 15640  01C21C  2ADE               	incf	postinc2,f,c
 15641  01C21E  0E00               	movlw	0
 15642  01C220  22DD               	addwfc	postdec2,f,c
 15643                           
 15644                           ;stkvar	_p @ sp[(-2)+-2]
 15645  01C222  0EFC               	movlw	-4
 15646  01C224  006F FF8F FFE6     	movff	plusw1,postinc1
 15647  01C22A  006F FF8F FFE6     	movff	plusw1,postinc1
 15648  01C230  EC86  F0FF         	call	_getint	;wreg free
 15649                           
 15650                           ;stkvar	_rule @ sp[(-2)+-4]
 15651  01C234  0EFA               	movlw	-6
 15652  01C236  006F FF8C  F034    	movff	plusw1,btemp+10
 15653  01C23C  0EFB               	movlw	-5
 15654  01C23E  006F FF8C  F035    	movff	plusw1,btemp+11
 15655  01C244  0E04               	movlw	4
 15656  01C246  2434               	addwf	(btemp+10)^0,w,c
 15657  01C248  6ED9               	movwf	fsr2l,c
 15658  01C24A  0E00               	movlw	0
 15659  01C24C  2035               	addwfc	(btemp+11)^0,w,c
 15660  01C24E  6EDA               	movwf	fsr2h,c
 15661  01C250  0060  F0AB  FFDE   	movff	btemp,postinc2
 15662  01C256  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15663                           
 15664                           ;stkvar	_p @ sp[(-2)+-2]
 15665  01C25C  0EFC               	movlw	-4
 15666  01C25E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15667  01C264  0EFD               	movlw	-3
 15668  01C266  006F FF8F FFDA     	movff	plusw1,fsr2h
 15669  01C26C  2ADE               	incf	postinc2,f,c
 15670  01C26E  0E00               	movlw	0
 15671  01C270  22DD               	addwfc	postdec2,f,c
 15672                           
 15673                           ;stkvar	_p @ sp[(-2)+-2]
 15674  01C272  0EFC               	movlw	-4
 15675  01C274  006F FF8F FFE6     	movff	plusw1,postinc1
 15676  01C27A  006F FF8F FFE6     	movff	plusw1,postinc1
 15677  01C280  EC86  F0FF         	call	_getint	;wreg free
 15678                           
 15679                           ;stkvar	_rule @ sp[(-2)+-4]
 15680  01C284  0EFA               	movlw	-6
 15681  01C286  006F FF8C  F034    	movff	plusw1,btemp+10
 15682  01C28C  0EFB               	movlw	-5
 15683  01C28E  006F FF8C  F035    	movff	plusw1,btemp+11
 15684  01C294  0E06               	movlw	6
 15685  01C296                     L15:
 15686  01C296  2434               	addwf	(btemp+10)^0,w,c
 15687  01C298  6ED9               	movwf	fsr2l,c
 15688  01C29A  0E00               	movlw	0
 15689  01C29C  2035               	addwfc	(btemp+11)^0,w,c
 15690  01C29E  6EDA               	movwf	fsr2h,c
 15691  01C2A0  0060  F0AB  FFDE   	movff	btemp,postinc2
 15692  01C2A6  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15693                           
 15694                           ;stkvar	_p @ sp[(-2)+-2]
 15695  01C2AC  0EFC               	movlw	-4
 15696  01C2AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15697  01C2B4  0EFD               	movlw	-3
 15698  01C2B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15699  01C2BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15700  01C2C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15701  01C2C8                     	if	0	;tblptru may be non-zero
 15702  01C2C8                     	endif
 15703  01C2C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15704  01C2C8  0E00               	movlw	low (__mediumconst shr (0+16))
 15705  01C2CA  6EF8               	movwf	tblptru,c
 15706  01C2CC                     	endif
 15707  01C2CC  0008               	tblrd		*
 15708  01C2CE  50F5               	movf	tablat,w,c
 15709  01C2D0  0A2F               	xorlw	47
 15710  01C2D2  A4D8               	btfss	status,2,c
 15711  01C2D4  D029               	goto	l16419
 15712                           
 15713                           ;stkvar	_p @ sp[(-2)+-2]
 15714  01C2D6  0EFC               	movlw	-4
 15715  01C2D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15716  01C2DE  0EFD               	movlw	-3
 15717  01C2E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15718  01C2E6  2ADE               	incf	postinc2,f,c
 15719  01C2E8  0E00               	movlw	0
 15720  01C2EA  22DD               	addwfc	postdec2,f,c
 15721                           
 15722                           ;stkvar	_p @ sp[(-2)+-2]
 15723  01C2EC  0EFC               	movlw	-4
 15724  01C2EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15725  01C2F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15726  01C2FA  EC8A  F0E7         	call	_getoff	;wreg free
 15727                           
 15728                           ;stkvar	_rule @ sp[(-2)+-4]
 15729  01C2FE  0EFA               	movlw	-6
 15730  01C300  006F FF8C  F034    	movff	plusw1,btemp+10
 15731  01C306  0EFB               	movlw	-5
 15732  01C308  006F FF8C  F035    	movff	plusw1,btemp+11
 15733  01C30E  0E08               	movlw	8
 15734  01C310  2434               	addwf	(btemp+10)^0,w,c
 15735  01C312  6ED9               	movwf	fsr2l,c
 15736  01C314  0E00               	movlw	0
 15737  01C316  2035               	addwfc	(btemp+11)^0,w,c
 15738  01C318  6EDA               	movwf	fsr2h,c
 15739  01C31A  0060  F0AB  FFDE   	movff	btemp,postinc2
 15740  01C320  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15741  01C326  D012               	goto	l3939
 15742  01C328                     l16419:
 15743                           
 15744                           ;stkvar	_rule @ sp[(-2)+-4]
 15745  01C328  0EFA               	movlw	-6
 15746  01C32A  006F FF8C  F034    	movff	plusw1,btemp+10
 15747  01C330  0EFB               	movlw	-5
 15748  01C332  006F FF8C  F035    	movff	plusw1,btemp+11
 15749  01C338  0E08               	movlw	8
 15750  01C33A  2434               	addwf	(btemp+10)^0,w,c
 15751  01C33C  6ED9               	movwf	fsr2l,c
 15752  01C33E  0E00               	movlw	0
 15753  01C340  2035               	addwfc	(btemp+11)^0,w,c
 15754  01C342  6EDA               	movwf	fsr2h,c
 15755  01C344  0E20               	movlw	32
 15756  01C346  6EDE               	movwf	postinc2,c
 15757  01C348  0E1C               	movlw	28
 15758  01C34A  6EDD               	movwf	postdec2,c
 15759  01C34C                     l3939:
 15760                           
 15761                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15762  01C34C  0EFA               	movlw	250
 15763  01C34E  26E1               	addwf	fsr1l,f,c
 15764  01C350  0EFF               	movlw	255
 15765  01C352  22E2               	addwfc	fsr1h,f,c
 15766  01C354  0012               	return		;funcret
 15767  01C356                     __end_of_getrule:
 15768                           	opt callstack 0
 15769                           
 15770 ;; *************** function _getoff *****************
 15771 ;; Defined at:
 15772 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15773 ;; Parameters:    Size  Location     Type
 15774 ;;  p               2  [STACK] PTR PTR const unsigned c
 15775 ;;		 -> s(2), 
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;  off             2  [STACK] int 
 15778 ;;  neg             2  [STACK] int 
 15779 ;; Return value:  Size  Location     Type
 15780 ;;                  2  [STACK] int 
 15781 ;; Registers used:
 15782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15783 ;; Tracked objects:
 15784 ;;		On entry : 0/0
 15785 ;;		On exit  : 0/0
 15786 ;;		Unchanged: 0/0
 15787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15792 ;;Total ram usage:        0 bytes
 15793 ;; Hardware stack levels used:    1
 15794 ;; Hardware stack levels required when called:   16
 15795 ;; This function calls:
 15796 ;;		_getint
 15797 ;; This function is called by:
 15798 ;;		_getrule
 15799 ;;		_do_tzset
 15800 ;; This function uses a reentrant model
 15801 ;;
 15802                           
 15803                           	psect	text44
 15804  01CF14                     __ptext44:
 15805                           	opt callstack 0
 15806  01CF14                     _getoff:
 15807                           	opt callstack 0
 15808                           
 15809                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15810  01CF14  52E6               	movf	postinc1,f,c
 15811  01CF16  52E6               	movf	postinc1,f,c
 15812  01CF18  52E6               	movf	postinc1,f,c
 15813  01CF1A  52E6               	movf	postinc1,f,c
 15814                           
 15815                           ;stkvar	_neg @ sp[(-4)+2]
 15816                           
 15817                           ;incstack = 0
 15818  01CF1C  0EFE               	movlw	-2
 15819  01CF1E  6AE3               	clrf	plusw1,c
 15820  01CF20  0EFF               	movlw	-1
 15821  01CF22  6AE3               	clrf	plusw1,c
 15822                           
 15823                           ;stkvar	_p @ sp[(-4)+-2]
 15824  01CF24  0EFA               	movlw	-6
 15825  01CF26  006F FF8F FFD9     	movff	plusw1,fsr2l
 15826  01CF2C  0EFB               	movlw	-5
 15827  01CF2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15828  01CF34  006F FF7B FFF6     	movff	postinc2,tblptrl
 15829  01CF3A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15830  01CF40                     	if	0	;tblptru may be non-zero
 15831  01CF40                     	endif
 15832  01CF40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15833  01CF40  0E00               	movlw	low (__mediumconst shr (0+16))
 15834  01CF42  6EF8               	movwf	tblptru,c
 15835  01CF44                     	endif
 15836  01CF44  0008               	tblrd		*
 15837  01CF46  50F5               	movf	tablat,w,c
 15838  01CF48  0A2D               	xorlw	45
 15839  01CF4A  A4D8               	btfss	status,2,c
 15840  01CF4C  D018               	goto	l15767
 15841                           
 15842                           ;stkvar	_p @ sp[(-4)+-2]
 15843  01CF4E  0EFA               	movlw	-6
 15844  01CF50  006F FF8F FFD9     	movff	plusw1,fsr2l
 15845  01CF56  0EFB               	movlw	-5
 15846  01CF58  006F FF8F FFDA     	movff	plusw1,fsr2h
 15847  01CF5E  2ADE               	incf	postinc2,f,c
 15848  01CF60  0E00               	movlw	0
 15849  01CF62  22DD               	addwfc	postdec2,f,c
 15850  01CF64  0E01               	movlw	1
 15851  01CF66  6E34               	movwf	(btemp+10)^0,c
 15852  01CF68  0E00               	movlw	0
 15853  01CF6A  6E35               	movwf	(btemp+11)^0,c
 15854                           
 15855                           ;stkvar	_neg @ sp[(-4)+2]
 15856  01CF6C  0EFE               	movlw	-2
 15857  01CF6E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15858  01CF74  0EFF               	movlw	-1
 15859  01CF76  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15860  01CF7C  D020               	goto	l15771
 15861  01CF7E                     l15767:
 15862                           
 15863                           ;stkvar	_p @ sp[(-4)+-2]
 15864  01CF7E  0EFA               	movlw	-6
 15865  01CF80  006F FF8F FFD9     	movff	plusw1,fsr2l
 15866  01CF86  0EFB               	movlw	-5
 15867  01CF88  006F FF8F FFDA     	movff	plusw1,fsr2h
 15868  01CF8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15869  01CF94  006F FF77 FFF7     	movff	postdec2,tblptrh
 15870  01CF9A                     	if	0	;tblptru may be non-zero
 15871  01CF9A                     	endif
 15872  01CF9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15873  01CF9A  0E00               	movlw	low (__mediumconst shr (0+16))
 15874  01CF9C  6EF8               	movwf	tblptru,c
 15875  01CF9E                     	endif
 15876  01CF9E  0008               	tblrd		*
 15877  01CFA0  50F5               	movf	tablat,w,c
 15878  01CFA2  0A2B               	xorlw	43
 15879  01CFA4  A4D8               	btfss	status,2,c
 15880  01CFA6  D00B               	goto	l15771
 15881                           
 15882                           ;stkvar	_p @ sp[(-4)+-2]
 15883  01CFA8  0EFA               	movlw	-6
 15884  01CFAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15885  01CFB0  0EFB               	movlw	-5
 15886  01CFB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15887  01CFB8  2ADE               	incf	postinc2,f,c
 15888  01CFBA  0E00               	movlw	0
 15889  01CFBC  22DD               	addwfc	postdec2,f,c
 15890  01CFBE                     l15771:
 15891                           
 15892                           ;stkvar	_p @ sp[(-4)+-2]
 15893  01CFBE  0EFA               	movlw	-6
 15894  01CFC0  006F FF8F FFE6     	movff	plusw1,postinc1
 15895  01CFC6  006F FF8F FFE6     	movff	plusw1,postinc1
 15896  01CFCC  EC86  F0FF         	call	_getint	;wreg free
 15897  01CFD0  0060  F0A8  F034   	movff	btemp,btemp+10
 15898  01CFD6  0060  F0AC  F035   	movff	btemp+1,btemp+11
 15899  01CFDC  0E10               	movlw	16
 15900  01CFDE  0234               	mulwf	(btemp+10)^0,c
 15901  01CFE0  006F FFCC  F032    	movff	prodl,btemp+8
 15902  01CFE6  006F FFD0  F033    	movff	prodh,btemp+9
 15903  01CFEC  0235               	mulwf	(btemp+11)^0,c
 15904  01CFEE  50F3               	movf	prodl,w,c
 15905  01CFF0  2633               	addwf	(btemp+9)^0,f,c
 15906  01CFF2  0E0E               	movlw	14
 15907  01CFF4  0234               	mulwf	(btemp+10)^0,c
 15908  01CFF6  50F3               	movf	prodl,w,c
 15909  01CFF8  2633               	addwf	(btemp+9)^0,f,c
 15910                           
 15911                           ;stkvar	_off @ sp[(-4)+0]
 15912  01CFFA  0EFC               	movlw	-4
 15913  01CFFC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15914  01D002  0EFD               	movlw	-3
 15915  01D004  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15916                           
 15917                           ;stkvar	_p @ sp[(-4)+-2]
 15918  01D00A  0EFA               	movlw	-6
 15919  01D00C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15920  01D012  0EFB               	movlw	-5
 15921  01D014  006F FF8F FFDA     	movff	plusw1,fsr2h
 15922  01D01A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15923  01D020  006F FF77 FFF7     	movff	postdec2,tblptrh
 15924  01D026                     	if	0	;tblptru may be non-zero
 15925  01D026                     	endif
 15926  01D026                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15927  01D026  0E00               	movlw	low (__mediumconst shr (0+16))
 15928  01D028  6EF8               	movwf	tblptru,c
 15929  01D02A                     	endif
 15930  01D02A  0008               	tblrd		*
 15931  01D02C  50F5               	movf	tablat,w,c
 15932  01D02E  0A3A               	xorlw	58
 15933  01D030  A4D8               	btfss	status,2,c
 15934  01D032  D064               	goto	l15785
 15935                           
 15936                           ;stkvar	_p @ sp[(-4)+-2]
 15937  01D034  0EFA               	movlw	-6
 15938  01D036  006F FF8F FFD9     	movff	plusw1,fsr2l
 15939  01D03C  0EFB               	movlw	-5
 15940  01D03E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15941  01D044  2ADE               	incf	postinc2,f,c
 15942  01D046  0E00               	movlw	0
 15943  01D048  22DD               	addwfc	postdec2,f,c
 15944                           
 15945                           ;stkvar	_p @ sp[(-4)+-2]
 15946  01D04A  0EFA               	movlw	-6
 15947  01D04C  006F FF8F FFE6     	movff	plusw1,postinc1
 15948  01D052  006F FF8F FFE6     	movff	plusw1,postinc1
 15949  01D058  EC86  F0FF         	call	_getint	;wreg free
 15950  01D05C  0060  F0A8  F034   	movff	btemp,btemp+10
 15951  01D062  0060  F0AC  F035   	movff	btemp+1,btemp+11
 15952  01D068  0E3C               	movlw	60
 15953  01D06A  0234               	mulwf	(btemp+10)^0,c
 15954  01D06C  006F FFCC  F032    	movff	prodl,btemp+8
 15955  01D072  006F FFD0  F033    	movff	prodh,btemp+9
 15956  01D078  0235               	mulwf	(btemp+11)^0,c
 15957  01D07A  50F3               	movf	prodl,w,c
 15958  01D07C  2633               	addwf	(btemp+9)^0,f,c
 15959                           
 15960                           ;stkvar	_off @ sp[(-4)+0]
 15961  01D07E  50E1               	movf	fsr1l,w,c
 15962  01D080  0FFC               	addlw	-4
 15963  01D082  6ED9               	movwf	fsr2l,c
 15964  01D084  50E2               	movf	fsr1h,w,c
 15965  01D086  6EDA               	movwf	fsr2h,c
 15966  01D088  0EFF               	movlw	255
 15967  01D08A  22DA               	addwfc	fsr2h,f,c
 15968  01D08C  5032               	movf	(btemp+8)^0,w,c
 15969  01D08E  26DE               	addwf	postinc2,f,c
 15970  01D090  5033               	movf	(btemp+9)^0,w,c
 15971  01D092  22DD               	addwfc	postdec2,f,c
 15972                           
 15973                           ;stkvar	_p @ sp[(-4)+-2]
 15974  01D094  0EFA               	movlw	-6
 15975  01D096  006F FF8F FFD9     	movff	plusw1,fsr2l
 15976  01D09C  0EFB               	movlw	-5
 15977  01D09E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15978  01D0A4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15979  01D0AA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15980  01D0B0                     	if	0	;tblptru may be non-zero
 15981  01D0B0                     	endif
 15982  01D0B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15983  01D0B0  0E00               	movlw	low (__mediumconst shr (0+16))
 15984  01D0B2  6EF8               	movwf	tblptru,c
 15985  01D0B4                     	endif
 15986  01D0B4  0008               	tblrd		*
 15987  01D0B6  50F5               	movf	tablat,w,c
 15988  01D0B8  0A3A               	xorlw	58
 15989  01D0BA  A4D8               	btfss	status,2,c
 15990  01D0BC  D01F               	goto	l15785
 15991                           
 15992                           ;stkvar	_p @ sp[(-4)+-2]
 15993  01D0BE  0EFA               	movlw	-6
 15994  01D0C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15995  01D0C6  0EFB               	movlw	-5
 15996  01D0C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15997  01D0CE  2ADE               	incf	postinc2,f,c
 15998  01D0D0  0E00               	movlw	0
 15999  01D0D2  22DD               	addwfc	postdec2,f,c
 16000                           
 16001                           ;stkvar	_p @ sp[(-4)+-2]
 16002  01D0D4  0EFA               	movlw	-6
 16003  01D0D6  006F FF8F FFE6     	movff	plusw1,postinc1
 16004  01D0DC  006F FF8F FFE6     	movff	plusw1,postinc1
 16005  01D0E2  EC86  F0FF         	call	_getint	;wreg free
 16006                           
 16007                           ;stkvar	_off @ sp[(-4)+0]
 16008  01D0E6  50E1               	movf	fsr1l,w,c
 16009  01D0E8  0FFC               	addlw	-4
 16010  01D0EA  6ED9               	movwf	fsr2l,c
 16011  01D0EC  50E2               	movf	fsr1h,w,c
 16012  01D0EE  6EDA               	movwf	fsr2h,c
 16013  01D0F0  0EFF               	movlw	255
 16014  01D0F2  22DA               	addwfc	fsr2h,f,c
 16015  01D0F4  502A               	movf	btemp^0,w,c
 16016  01D0F6  26DE               	addwf	postinc2,f,c
 16017  01D0F8  502B               	movf	(btemp+1)^0,w,c
 16018  01D0FA  22DD               	addwfc	postdec2,f,c
 16019  01D0FC                     l15785:
 16020                           
 16021                           ;stkvar	_neg @ sp[(-4)+2]
 16022  01D0FC  0EFE               	movlw	-2
 16023  01D0FE  006F FF8C  F02A    	movff	plusw1,btemp
 16024  01D104  0EFF               	movlw	-1
 16025  01D106  50E3               	movf	plusw1,w,c
 16026  01D108  102A               	iorwf	btemp^0,w,c
 16027  01D10A  A4D8               	btfss	status,2,c
 16028  01D10C  D009               	goto	l15789
 16029                           
 16030                           ;stkvar	_off @ sp[(-4)+0]
 16031  01D10E  0EFC               	movlw	-4
 16032  01D110  006F FF8C  F02A    	movff	plusw1,btemp
 16033  01D116  0EFD               	movlw	-3
 16034  01D118  006F FF8C  F02B    	movff	plusw1,btemp+1
 16035  01D11E  D00D               	goto	l3930
 16036  01D120                     l15789:
 16037                           
 16038                           ;stkvar	_off @ sp[(-4)+0]
 16039  01D120  0EFC               	movlw	-4
 16040  01D122  006F FF8C  F02A    	movff	plusw1,btemp
 16041  01D128  1E2A               	comf	btemp^0,f,c
 16042  01D12A  0EFD               	movlw	-3
 16043  01D12C  006F FF8C  F02B    	movff	plusw1,btemp+1
 16044  01D132  1E2B               	comf	(btemp+1)^0,f,c
 16045  01D134  2A2A               	incf	btemp^0,f,c
 16046  01D136  B4D8               	btfsc	status,2,c
 16047  01D138  2A2B               	incf	(btemp+1)^0,f,c
 16048  01D13A                     l3930:
 16049                           
 16050                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16051  01D13A  0EFA               	movlw	250
 16052  01D13C  26E1               	addwf	fsr1l,f,c
 16053  01D13E  0EFF               	movlw	255
 16054  01D140  22E2               	addwfc	fsr1h,f,c
 16055  01D142  0012               	return		;funcret
 16056  01D144                     __end_of_getoff:
 16057                           	opt callstack 0
 16058                           
 16059 ;; *************** function _getint *****************
 16060 ;; Defined at:
 16061 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;  p               2  [STACK] PTR PTR const unsigned c
 16064 ;;		 -> s(2), 
 16065 ;; Auto vars:     Size  Location     Type
 16066 ;;  x               2  [STACK] unsigned int 
 16067 ;; Return value:  Size  Location     Type
 16068 ;;                  2  [STACK] int 
 16069 ;; Registers used:
 16070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16071 ;; Tracked objects:
 16072 ;;		On entry : 0/0
 16073 ;;		On exit  : 0/0
 16074 ;;		Unchanged: 0/0
 16075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16080 ;;Total ram usage:        0 bytes
 16081 ;; Hardware stack levels used:    1
 16082 ;; Hardware stack levels required when called:   15
 16083 ;; This function calls:
 16084 ;;		Nothing
 16085 ;; This function is called by:
 16086 ;;		_getoff
 16087 ;;		_getrule
 16088 ;; This function uses a reentrant model
 16089 ;;
 16090                           
 16091                           	psect	text45
 16092  01FF0C                     __ptext45:
 16093                           	opt callstack 0
 16094  01FF0C                     _getint:
 16095                           	opt callstack 0
 16096                           
 16097                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16098  01FF0C  52E6               	movf	postinc1,f,c
 16099  01FF0E  52E6               	movf	postinc1,f,c
 16100                           
 16101                           ;stkvar	_x @ sp[(-2)+0]
 16102                           
 16103                           ;incstack = 0
 16104  01FF10  0EFE               	movlw	-2
 16105  01FF12  6AE3               	clrf	plusw1,c
 16106  01FF14  0EFF               	movlw	-1
 16107  01FF16  6AE3               	clrf	plusw1,c
 16108  01FF18  D043               	goto	l15533
 16109  01FF1A                     l15529:
 16110  01FF1A  0ED0               	movlw	208
 16111  01FF1C  6E34               	movwf	(btemp+10)^0,c
 16112  01FF1E  0EFF               	movlw	255
 16113  01FF20  6E35               	movwf	(btemp+11)^0,c
 16114                           
 16115                           ;stkvar	_x @ sp[(-2)+0]
 16116  01FF22  0EFE               	movlw	-2
 16117  01FF24  006F FF8C  F032    	movff	plusw1,btemp+8
 16118  01FF2A  0EFF               	movlw	-1
 16119  01FF2C  006F FF8C  F033    	movff	plusw1,btemp+9
 16120  01FF32  0E0A               	movlw	10
 16121  01FF34  0232               	mulwf	(btemp+8)^0,c
 16122  01FF36  006F FFCC  F030    	movff	prodl,btemp+6
 16123  01FF3C  006F FFD0  F031    	movff	prodh,btemp+7
 16124  01FF42  0233               	mulwf	(btemp+9)^0,c
 16125  01FF44  50F3               	movf	prodl,w,c
 16126  01FF46  2631               	addwf	(btemp+7)^0,f,c
 16127                           
 16128                           ;stkvar	_p @ sp[(-2)+-2]
 16129  01FF48  0EFC               	movlw	-4
 16130  01FF4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16131  01FF50  0EFD               	movlw	-3
 16132  01FF52  006F FF8F FFDA     	movff	plusw1,fsr2h
 16133  01FF58  006F FF7B FFF6     	movff	postinc2,tblptrl
 16134  01FF5E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16135  01FF64                     	if	0	;tblptru may be non-zero
 16136  01FF64                     	endif
 16137  01FF64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16138  01FF64  0E00               	movlw	low (__mediumconst shr (0+16))
 16139  01FF66  6EF8               	movwf	tblptru,c
 16140  01FF68                     	endif
 16141  01FF68  0008               	tblrd		*
 16142  01FF6A  50F5               	movf	tablat,w,c
 16143  01FF6C  2630               	addwf	(btemp+6)^0,f,c
 16144  01FF6E  0E00               	movlw	0
 16145  01FF70  2231               	addwfc	(btemp+7)^0,f,c
 16146  01FF72  5034               	movf	(btemp+10)^0,w,c
 16147  01FF74  2630               	addwf	(btemp+6)^0,f,c
 16148  01FF76  5035               	movf	(btemp+11)^0,w,c
 16149  01FF78  2231               	addwfc	(btemp+7)^0,f,c
 16150                           
 16151                           ;stkvar	_x @ sp[(-2)+0]
 16152  01FF7A  0EFE               	movlw	-2
 16153  01FF7C  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16154  01FF82  0EFF               	movlw	-1
 16155  01FF84  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16156                           
 16157                           ;stkvar	_p @ sp[(-2)+-2]
 16158  01FF8A  0EFC               	movlw	-4
 16159  01FF8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16160  01FF92  0EFD               	movlw	-3
 16161  01FF94  006F FF8F FFDA     	movff	plusw1,fsr2h
 16162  01FF9A  2ADE               	incf	postinc2,f,c
 16163  01FF9C  0E00               	movlw	0
 16164  01FF9E  22DD               	addwfc	postdec2,f,c
 16165  01FFA0                     l15533:
 16166  01FFA0  0ED0               	movlw	208
 16167  01FFA2  6E34               	movwf	(btemp+10)^0,c
 16168  01FFA4  0EFF               	movlw	255
 16169  01FFA6  6E35               	movwf	(btemp+11)^0,c
 16170                           
 16171                           ;stkvar	_p @ sp[(-2)+-2]
 16172  01FFA8  0EFC               	movlw	-4
 16173  01FFAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16174  01FFB0  0EFD               	movlw	-3
 16175  01FFB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16176  01FFB8  006F FF7B FFF6     	movff	postinc2,tblptrl
 16177  01FFBE  006F FF77 FFF7     	movff	postdec2,tblptrh
 16178  01FFC4                     	if	0	;tblptru may be non-zero
 16179  01FFC4                     	endif
 16180  01FFC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16181  01FFC4  0E00               	movlw	low (__mediumconst shr (0+16))
 16182  01FFC6  6EF8               	movwf	tblptru,c
 16183  01FFC8                     	endif
 16184  01FFC8  0008               	tblrd		*
 16185  01FFCA  50F5               	movf	tablat,w,c
 16186  01FFCC  6E32               	movwf	(btemp+8)^0,c
 16187  01FFCE  6A33               	clrf	(btemp+9)^0,c
 16188  01FFD0  5034               	movf	(btemp+10)^0,w,c
 16189  01FFD2  2632               	addwf	(btemp+8)^0,f,c
 16190  01FFD4  5035               	movf	(btemp+11)^0,w,c
 16191  01FFD6  2233               	addwfc	(btemp+9)^0,f,c
 16192  01FFD8  5033               	movf	(btemp+9)^0,w,c
 16193  01FFDA  E104               	bnz	u14370
 16194  01FFDC  0E0A               	movlw	10
 16195  01FFDE  5C32               	subwf	(btemp+8)^0,w,c
 16196  01FFE0  A0D8               	btfss	status,0,c
 16197  01FFE2  D79B               	goto	l15529
 16198  01FFE4                     u14370:
 16199                           
 16200                           ;stkvar	_x @ sp[(-2)+0]
 16201  01FFE4  0EFE               	movlw	-2
 16202  01FFE6  006F FF8C  F02A    	movff	plusw1,btemp
 16203  01FFEC  0EFF               	movlw	-1
 16204  01FFEE  006F FF8C  F02B    	movff	plusw1,btemp+1
 16205                           
 16206                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16207  01FFF4  52E5               	movf	postdec1,f,c
 16208  01FFF6  52E5               	movf	postdec1,f,c
 16209  01FFF8  52E5               	movf	postdec1,f,c
 16210  01FFFA  52E5               	movf	postdec1,f,c
 16211  01FFFC  0012               	return		;funcret
 16212  01FFFE                     __end_of_getint:
 16213                           	opt callstack 0
 16214                           
 16215 ;; *************** function _getname *****************
 16216 ;; Defined at:
 16217 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;  d               2  [STACK] PTR unsigned char 
 16220 ;;		 -> dst_name(7), std_name(7), 
 16221 ;;  p               2  [STACK] PTR PTR const unsigned c
 16222 ;;		 -> s(2), 
 16223 ;; Auto vars:     Size  Location     Type
 16224 ;;  i               2  [STACK] int 
 16225 ;; Return value:  Size  Location     Type
 16226 ;;                  1  [STACK] void 
 16227 ;; Registers used:
 16228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16229 ;; Tracked objects:
 16230 ;;		On entry : 0/39
 16231 ;;		On exit  : 0/0
 16232 ;;		Unchanged: 0/0
 16233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16238 ;;Total ram usage:        0 bytes
 16239 ;; Hardware stack levels used:    1
 16240 ;; Hardware stack levels required when called:   15
 16241 ;; This function calls:
 16242 ;;		Nothing
 16243 ;; This function is called by:
 16244 ;;		_do_tzset
 16245 ;; This function uses a reentrant model
 16246 ;;
 16247                           
 16248                           	psect	text46
 16249  01AFFE                     __ptext46:
 16250                           	opt callstack 0
 16251  01AFFE                     _getname:
 16252                           	opt callstack 0
 16253                           
 16254                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16255  01AFFE  52E6               	movf	postinc1,f,c
 16256  01B000  52E6               	movf	postinc1,f,c
 16257                           
 16258                           ;stkvar	_p @ sp[(-2)+-4]
 16259                           
 16260                           ;incstack = 0
 16261  01B002  0EFA               	movlw	-6
 16262  01B004  006F FF8F FFD9     	movff	plusw1,fsr2l
 16263  01B00A  0EFB               	movlw	-5
 16264  01B00C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16265  01B012  006F FF7B FFF6     	movff	postinc2,tblptrl
 16266  01B018  006F FF77 FFF7     	movff	postdec2,tblptrh
 16267  01B01E                     	if	0	;tblptru may be non-zero
 16268  01B01E                     	endif
 16269  01B01E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16270  01B01E  0E00               	movlw	low (__mediumconst shr (0+16))
 16271  01B020  6EF8               	movwf	tblptru,c
 16272  01B022                     	endif
 16273  01B022  0008               	tblrd		*
 16274  01B024  50F5               	movf	tablat,w,c
 16275  01B026  0A3C               	xorlw	60
 16276  01B028  A4D8               	btfss	status,2,c
 16277  01B02A  D09E               	goto	l16437
 16278                           
 16279                           ;stkvar	_p @ sp[(-2)+-4]
 16280  01B02C  0EFA               	movlw	-6
 16281  01B02E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16282  01B034  0EFB               	movlw	-5
 16283  01B036  006F FF8F FFDA     	movff	plusw1,fsr2h
 16284  01B03C  2ADE               	incf	postinc2,f,c
 16285  01B03E  0E00               	movlw	0
 16286  01B040  22DD               	addwfc	postdec2,f,c
 16287                           
 16288                           ;stkvar	_i @ sp[(-2)+0]
 16289  01B042  0EFE               	movlw	-2
 16290  01B044  6AE3               	clrf	plusw1,c
 16291  01B046  0EFF               	movlw	-1
 16292  01B048  6AE3               	clrf	plusw1,c
 16293  01B04A  D04D               	goto	l16431
 16294  01B04C                     l16427:
 16295                           
 16296                           ;stkvar	_i @ sp[(-2)+0]
 16297  01B04C  0EFE               	movlw	-2
 16298  01B04E  006F FF8C  F034    	movff	plusw1,btemp+10
 16299  01B054  0EFF               	movlw	-1
 16300  01B056  006F FF8C  F035    	movff	plusw1,btemp+11
 16301                           
 16302                           ;stkvar	_p @ sp[(-2)+-4]
 16303  01B05C  0EFA               	movlw	-6
 16304  01B05E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16305  01B064  0EFB               	movlw	-5
 16306  01B066  006F FF8F FFDA     	movff	plusw1,fsr2h
 16307  01B06C  006F FF78  F032    	movff	postinc2,btemp+8
 16308  01B072  006F FF74  F033    	movff	postdec2,btemp+9
 16309  01B078  5034               	movf	(btemp+10)^0,w,c
 16310  01B07A  2632               	addwf	(btemp+8)^0,f,c
 16311  01B07C  5035               	movf	(btemp+11)^0,w,c
 16312  01B07E  2233               	addwfc	(btemp+9)^0,f,c
 16313  01B080  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16314  01B086  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16315  01B08C                     	if	0	;tblptru may be non-zero
 16316  01B08C                     	endif
 16317  01B08C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16318  01B08C  0E00               	movlw	low (__mediumconst shr (0+16))
 16319  01B08E  6EF8               	movwf	tblptru,c
 16320  01B090                     	endif
 16321                           
 16322                           ;stkvar	_i @ sp[(-2)+0]
 16323  01B090  0EFE               	movlw	-2
 16324  01B092  006F FF8C  F034    	movff	plusw1,btemp+10
 16325  01B098  0EFF               	movlw	-1
 16326  01B09A  006F FF8C  F035    	movff	plusw1,btemp+11
 16327                           
 16328                           ;stkvar	_d @ sp[(-2)+-2]
 16329  01B0A0  0EFC               	movlw	-4
 16330  01B0A2  006F FF8C  F032    	movff	plusw1,btemp+8
 16331  01B0A8  0EFD               	movlw	-3
 16332  01B0AA  006F FF8C  F033    	movff	plusw1,btemp+9
 16333  01B0B0  5034               	movf	(btemp+10)^0,w,c
 16334  01B0B2  2432               	addwf	(btemp+8)^0,w,c
 16335  01B0B4  6ED9               	movwf	fsr2l,c
 16336  01B0B6  5035               	movf	(btemp+11)^0,w,c
 16337  01B0B8  2033               	addwfc	(btemp+9)^0,w,c
 16338  01B0BA  6EDA               	movwf	fsr2h,c
 16339  01B0BC  0008               	tblrd		*
 16340  01B0BE  006F FFD7 FFDF     	movff	tablat,indf2
 16341                           
 16342                           ;stkvar	_i @ sp[(-2)+0]
 16343  01B0C4  0EFE               	movlw	-2
 16344  01B0C6  50E3               	movf	plusw1,w,c
 16345  01B0C8  0F01               	addlw	1
 16346  01B0CA  6E2A               	movwf	btemp^0,c
 16347  01B0CC  0EFE               	movlw	-2
 16348  01B0CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 16349  01B0D4  6A2A               	clrf	btemp^0,c
 16350  01B0D6  0EFF               	movlw	-1
 16351  01B0D8  50E3               	movf	plusw1,w,c
 16352  01B0DA  202A               	addwfc	btemp^0,w,c
 16353  01B0DC  6E2A               	movwf	btemp^0,c
 16354  01B0DE  0EFF               	movlw	-1
 16355  01B0E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 16356  01B0E6                     l16431:
 16357                           
 16358                           ;stkvar	_i @ sp[(-2)+0]
 16359  01B0E6  0EFE               	movlw	-2
 16360  01B0E8  006F FF8C  F034    	movff	plusw1,btemp+10
 16361  01B0EE  0EFF               	movlw	-1
 16362  01B0F0  006F FF8C  F035    	movff	plusw1,btemp+11
 16363                           
 16364                           ;stkvar	_p @ sp[(-2)+-4]
 16365  01B0F6  0EFA               	movlw	-6
 16366  01B0F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16367  01B0FE  0EFB               	movlw	-5
 16368  01B100  006F FF8F FFDA     	movff	plusw1,fsr2h
 16369  01B106  006F FF78  F032    	movff	postinc2,btemp+8
 16370  01B10C  006F FF74  F033    	movff	postdec2,btemp+9
 16371  01B112  5034               	movf	(btemp+10)^0,w,c
 16372  01B114  2632               	addwf	(btemp+8)^0,f,c
 16373  01B116  5035               	movf	(btemp+11)^0,w,c
 16374  01B118  2233               	addwfc	(btemp+9)^0,f,c
 16375  01B11A  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16376  01B120  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16377  01B126                     	if	0	;tblptru may be non-zero
 16378  01B126                     	endif
 16379  01B126                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16380  01B126  0E00               	movlw	low (__mediumconst shr (0+16))
 16381  01B128  6EF8               	movwf	tblptru,c
 16382  01B12A                     	endif
 16383  01B12A  0008               	tblrd		*
 16384  01B12C  50F5               	movf	tablat,w,c
 16385  01B12E  0A3E               	xorlw	62
 16386  01B130  B4D8               	btfsc	status,2,c
 16387  01B132  D00E               	goto	u16120
 16388                           
 16389                           ;stkvar	_i @ sp[(-2)+0]
 16390  01B134  0EFF               	movlw	-1
 16391  01B136  BEE3               	btfsc	plusw1,7,c
 16392  01B138  D789               	goto	l16427
 16393  01B13A  0EFF               	movlw	-1
 16394  01B13C  50E3               	movf	plusw1,w,c
 16395  01B13E  E108               	bnz	u16120
 16396  01B140  0EFE               	movlw	-2
 16397  01B142  006F FF8C  F02A    	movff	plusw1,btemp
 16398  01B148  0E06               	movlw	6
 16399  01B14A  5E2A               	subwf	btemp^0,f,c
 16400  01B14C  A0D8               	btfss	status,0,c
 16401  01B14E  D77E               	goto	l16427
 16402  01B150                     u16120:
 16403                           
 16404                           ;stkvar	_p @ sp[(-2)+-4]
 16405  01B150  0EFA               	movlw	-6
 16406  01B152  006F FF8F FFD9     	movff	plusw1,fsr2l
 16407  01B158  0EFB               	movlw	-5
 16408  01B15A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16409  01B160  2ADE               	incf	postinc2,f,c
 16410  01B162  0E00               	movlw	0
 16411  01B164  22DD               	addwfc	postdec2,f,c
 16412  01B166  D098               	goto	u16140
 16413  01B168                     l16437:
 16414                           
 16415                           ;stkvar	_i @ sp[(-2)+0]
 16416  01B168  0EFE               	movlw	-2
 16417  01B16A  6AE3               	clrf	plusw1,c
 16418  01B16C  0EFF               	movlw	-1
 16419  01B16E  6AE3               	clrf	plusw1,c
 16420  01B170  D04D               	goto	l16443
 16421  01B172                     l16439:
 16422                           
 16423                           ;stkvar	_i @ sp[(-2)+0]
 16424  01B172  0EFE               	movlw	-2
 16425  01B174  006F FF8C  F034    	movff	plusw1,btemp+10
 16426  01B17A  0EFF               	movlw	-1
 16427  01B17C  006F FF8C  F035    	movff	plusw1,btemp+11
 16428                           
 16429                           ;stkvar	_p @ sp[(-2)+-4]
 16430  01B182  0EFA               	movlw	-6
 16431  01B184  006F FF8F FFD9     	movff	plusw1,fsr2l
 16432  01B18A  0EFB               	movlw	-5
 16433  01B18C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16434  01B192  006F FF78  F032    	movff	postinc2,btemp+8
 16435  01B198  006F FF74  F033    	movff	postdec2,btemp+9
 16436  01B19E  5034               	movf	(btemp+10)^0,w,c
 16437  01B1A0  2632               	addwf	(btemp+8)^0,f,c
 16438  01B1A2  5035               	movf	(btemp+11)^0,w,c
 16439  01B1A4  2233               	addwfc	(btemp+9)^0,f,c
 16440  01B1A6  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16441  01B1AC  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16442  01B1B2                     	if	0	;tblptru may be non-zero
 16443  01B1B2                     	endif
 16444  01B1B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16445  01B1B2  0E00               	movlw	low (__mediumconst shr (0+16))
 16446  01B1B4  6EF8               	movwf	tblptru,c
 16447  01B1B6                     	endif
 16448                           
 16449                           ;stkvar	_i @ sp[(-2)+0]
 16450  01B1B6  0EFE               	movlw	-2
 16451  01B1B8  006F FF8C  F034    	movff	plusw1,btemp+10
 16452  01B1BE  0EFF               	movlw	-1
 16453  01B1C0  006F FF8C  F035    	movff	plusw1,btemp+11
 16454                           
 16455                           ;stkvar	_d @ sp[(-2)+-2]
 16456  01B1C6  0EFC               	movlw	-4
 16457  01B1C8  006F FF8C  F032    	movff	plusw1,btemp+8
 16458  01B1CE  0EFD               	movlw	-3
 16459  01B1D0  006F FF8C  F033    	movff	plusw1,btemp+9
 16460  01B1D6  5034               	movf	(btemp+10)^0,w,c
 16461  01B1D8  2432               	addwf	(btemp+8)^0,w,c
 16462  01B1DA  6ED9               	movwf	fsr2l,c
 16463  01B1DC  5035               	movf	(btemp+11)^0,w,c
 16464  01B1DE  2033               	addwfc	(btemp+9)^0,w,c
 16465  01B1E0  6EDA               	movwf	fsr2h,c
 16466  01B1E2  0008               	tblrd		*
 16467  01B1E4  006F FFD7 FFDF     	movff	tablat,indf2
 16468                           
 16469                           ;stkvar	_i @ sp[(-2)+0]
 16470  01B1EA  0EFE               	movlw	-2
 16471  01B1EC  50E3               	movf	plusw1,w,c
 16472  01B1EE  0F01               	addlw	1
 16473  01B1F0  6E2A               	movwf	btemp^0,c
 16474  01B1F2  0EFE               	movlw	-2
 16475  01B1F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 16476  01B1FA  6A2A               	clrf	btemp^0,c
 16477  01B1FC  0EFF               	movlw	-1
 16478  01B1FE  50E3               	movf	plusw1,w,c
 16479  01B200  202A               	addwfc	btemp^0,w,c
 16480  01B202  6E2A               	movwf	btemp^0,c
 16481  01B204  0EFF               	movlw	-1
 16482  01B206  0060  F0AB  FFE3   	movff	btemp,plusw1
 16483  01B20C                     l16443:
 16484  01B20C  0E9F               	movlw	159
 16485  01B20E  6E34               	movwf	(btemp+10)^0,c
 16486  01B210  0EFF               	movlw	255
 16487  01B212  6E35               	movwf	(btemp+11)^0,c
 16488                           
 16489                           ;stkvar	_i @ sp[(-2)+0]
 16490  01B214  0EFE               	movlw	-2
 16491  01B216  006F FF8C  F032    	movff	plusw1,btemp+8
 16492  01B21C  0EFF               	movlw	-1
 16493  01B21E  006F FF8C  F033    	movff	plusw1,btemp+9
 16494                           
 16495                           ;stkvar	_p @ sp[(-2)+-4]
 16496  01B224  0EFA               	movlw	-6
 16497  01B226  006F FF8F FFD9     	movff	plusw1,fsr2l
 16498  01B22C  0EFB               	movlw	-5
 16499  01B22E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16500  01B234  006F FF78  F030    	movff	postinc2,btemp+6
 16501  01B23A  006F FF74  F031    	movff	postdec2,btemp+7
 16502  01B240  5032               	movf	(btemp+8)^0,w,c
 16503  01B242  2630               	addwf	(btemp+6)^0,f,c
 16504  01B244  5033               	movf	(btemp+9)^0,w,c
 16505  01B246  2231               	addwfc	(btemp+7)^0,f,c
 16506  01B248  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16507  01B24E  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16508  01B254                     	if	0	;tblptru may be non-zero
 16509  01B254                     	endif
 16510  01B254                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16511  01B254  0E00               	movlw	low (__mediumconst shr (0+16))
 16512  01B256  6EF8               	movwf	tblptru,c
 16513  01B258                     	endif
 16514  01B258  0008               	tblrd		*
 16515  01B25A  50F5               	movf	tablat,w,c
 16516  01B25C  6E32               	movwf	(btemp+8)^0,c
 16517  01B25E  6A33               	clrf	(btemp+9)^0,c
 16518  01B260  0E20               	movlw	32
 16519  01B262  1232               	iorwf	(btemp+8)^0,f,c
 16520  01B264  0E00               	movlw	0
 16521  01B266  1233               	iorwf	(btemp+9)^0,f,c
 16522  01B268  5034               	movf	(btemp+10)^0,w,c
 16523  01B26A  2632               	addwf	(btemp+8)^0,f,c
 16524  01B26C  5035               	movf	(btemp+11)^0,w,c
 16525  01B26E  2233               	addwfc	(btemp+9)^0,f,c
 16526  01B270  5033               	movf	(btemp+9)^0,w,c
 16527  01B272  E112               	bnz	l16447
 16528  01B274  0E1A               	movlw	26
 16529  01B276  5C32               	subwf	(btemp+8)^0,w,c
 16530  01B278  B0D8               	btfsc	status,0,c
 16531  01B27A  D00E               	goto	u16140
 16532                           
 16533                           ;stkvar	_i @ sp[(-2)+0]
 16534  01B27C  0EFF               	movlw	-1
 16535  01B27E  BEE3               	btfsc	plusw1,7,c
 16536  01B280  D778               	goto	l16439
 16537  01B282  0EFF               	movlw	-1
 16538  01B284  50E3               	movf	plusw1,w,c
 16539  01B286  E108               	bnz	u16140
 16540  01B288  0EFE               	movlw	-2
 16541  01B28A  006F FF8C  F02A    	movff	plusw1,btemp
 16542  01B290  0E06               	movlw	6
 16543  01B292  5E2A               	subwf	btemp^0,f,c
 16544  01B294  A0D8               	btfss	status,0,c
 16545  01B296  D76D               	goto	l16439
 16546  01B298                     u16140:
 16547  01B298                     l16447:
 16548                           
 16549                           ;stkvar	_i @ sp[(-2)+0]
 16550  01B298  0EFE               	movlw	-2
 16551  01B29A  006F FF8C  F034    	movff	plusw1,btemp+10
 16552  01B2A0  0EFF               	movlw	-1
 16553  01B2A2  006F FF8C  F035    	movff	plusw1,btemp+11
 16554                           
 16555                           ;stkvar	_p @ sp[(-2)+-4]
 16556  01B2A8  0EFA               	movlw	-6
 16557  01B2AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16558  01B2B0  0EFB               	movlw	-5
 16559  01B2B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16560  01B2B8  5034               	movf	(btemp+10)^0,w,c
 16561  01B2BA  26DE               	addwf	postinc2,f,c
 16562  01B2BC  5035               	movf	(btemp+11)^0,w,c
 16563  01B2BE  22DD               	addwfc	postdec2,f,c
 16564                           
 16565                           ;stkvar	_i @ sp[(-2)+0]
 16566  01B2C0  0EFE               	movlw	-2
 16567  01B2C2  006F FF8C  F034    	movff	plusw1,btemp+10
 16568  01B2C8  0EFF               	movlw	-1
 16569  01B2CA  006F FF8C  F035    	movff	plusw1,btemp+11
 16570                           
 16571                           ;stkvar	_d @ sp[(-2)+-2]
 16572  01B2D0  0EFC               	movlw	-4
 16573  01B2D2  006F FF8C  F032    	movff	plusw1,btemp+8
 16574  01B2D8  0EFD               	movlw	-3
 16575  01B2DA  006F FF8C  F033    	movff	plusw1,btemp+9
 16576  01B2E0  5034               	movf	(btemp+10)^0,w,c
 16577  01B2E2  2432               	addwf	(btemp+8)^0,w,c
 16578  01B2E4  6ED9               	movwf	fsr2l,c
 16579  01B2E6  5035               	movf	(btemp+11)^0,w,c
 16580  01B2E8  2033               	addwfc	(btemp+9)^0,w,c
 16581  01B2EA  6EDA               	movwf	fsr2h,c
 16582  01B2EC  0E00               	movlw	0
 16583  01B2EE  6EDF               	movwf	indf2,c
 16584                           
 16585                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16586  01B2F0  0EFA               	movlw	250
 16587  01B2F2  26E1               	addwf	fsr1l,f,c
 16588  01B2F4  0EFF               	movlw	255
 16589  01B2F6  22E2               	addwfc	fsr1h,f,c
 16590  01B2F8  0012               	return		;funcret
 16591  01B2FA                     __end_of_getname:
 16592                           	opt callstack 0
 16593                           
 16594 ;; *************** function ___secs_to_tm *****************
 16595 ;; Defined at:
 16596 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;  t               8  [STACK] long long 
 16599 ;;  tm              2  [STACK] PTR struct tm
 16600 ;;		 -> localtime@tm(24), 
 16601 ;; Auto vars:     Size  Location     Type
 16602 ;;  years           8  [STACK] long long 
 16603 ;;  days            8  [STACK] long long 
 16604 ;;  secs            8  [STACK] long long 
 16605 ;;  remdays         4  [STACK] long 
 16606 ;;  q_cycles        4  [STACK] long 
 16607 ;;  c_cycles        4  [STACK] long 
 16608 ;;  remyears        4  [STACK] long 
 16609 ;;  remsecs         4  [STACK] long 
 16610 ;;  qc_cycles       4  [STACK] long 
 16611 ;;  months          2  [STACK] int 
 16612 ;;  leap            2  [STACK] int 
 16613 ;;  yday            2  [STACK] int 
 16614 ;;  wday            2  [STACK] int 
 16615 ;; Return value:  Size  Location     Type
 16616 ;;                  4  [STACK] long 
 16617 ;; Registers used:
 16618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 16619 ;; Tracked objects:
 16620 ;;		On entry : 0/39
 16621 ;;		On exit  : 0/0
 16622 ;;		Unchanged: 0/0
 16623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16628 ;;Total ram usage:        0 bytes
 16629 ;; Hardware stack levels used:    1
 16630 ;; Hardware stack levels required when called:   16
 16631 ;; This function calls:
 16632 ;;		___aldiv
 16633 ;;		___almod
 16634 ;;		___aodiv
 16635 ;;		___aomod
 16636 ;;		___lmul
 16637 ;;		___omul
 16638 ;; This function is called by:
 16639 ;;		___localtime_r
 16640 ;; This function uses a reentrant model
 16641 ;;
 16642                           
 16643                           	psect	text47
 16644  012758                     __ptext47:
 16645                           	opt callstack 0
 16646  012758                     ___secs_to_tm:
 16647                           	opt callstack 0
 16648                           
 16649                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16650  012758  0E39               	movlw	57
 16651  01275A  26E1               	addwf	fsr1l,f,c
 16652  01275C  0E00               	movlw	0
 16653  01275E  22E2               	addwfc	fsr1h,f,c
 16654                           
 16655                           ;stkvar	_t @ sp[(-57)+-8]
 16656                           
 16657                           ;incstack = 0
 16658  012760  0EC6               	movlw	-58
 16659  012762  AEE3               	btfss	plusw1,7,c
 16660  012764  D026               	goto	u16910
 16661  012766  0EC1               	movlw	-63
 16662  012768  006F FF8C  F02A    	movff	plusw1,btemp
 16663  01276E  0E80               	movlw	128
 16664  012770  5E2A               	subwf	btemp^0,f,c
 16665  012772  0EC2               	movlw	-62
 16666  012774  006F FF8C  F02A    	movff	plusw1,btemp
 16667  01277A  0EBD               	movlw	189
 16668  01277C  5A2A               	subwfb	btemp^0,f,c
 16669  01277E  0EC3               	movlw	-61
 16670  012780  006F FF8C  F02A    	movff	plusw1,btemp
 16671  012786  0E0E               	movlw	14
 16672  012788  5A2A               	subwfb	btemp^0,f,c
 16673  01278A  0EC4               	movlw	-60
 16674  01278C  006F FF8C  F02A    	movff	plusw1,btemp
 16675  012792  0EFF               	movlw	255
 16676  012794  5A2A               	subwfb	btemp^0,f,c
 16677  012796  0EC5               	movlw	-59
 16678  012798  006F FF8C  F02A    	movff	plusw1,btemp
 16679  01279E  0EFF               	movlw	255
 16680  0127A0  5A2A               	subwfb	btemp^0,f,c
 16681  0127A2  0EC6               	movlw	-58
 16682  0127A4  006F FF8C  F02A    	movff	plusw1,btemp
 16683  0127AA  0EFF               	movlw	255
 16684  0127AC  5A2A               	subwfb	btemp^0,f,c
 16685  0127AE  A0D8               	btfss	status,0,c
 16686  0127B0  D028               	goto	u16920
 16687  0127B2                     u16910:
 16688                           
 16689                           ;stkvar	_t @ sp[(-57)+-8]
 16690  0127B2  0EC6               	movlw	-58
 16691  0127B4  BEE3               	btfsc	plusw1,7,c
 16692  0127B6  D02F               	goto	l17109
 16693  0127B8  0EC6               	movlw	-58
 16694  0127BA  50E3               	movf	plusw1,w,c
 16695  0127BC  E122               	bnz	u16920
 16696  0127BE  0EC5               	movlw	-59
 16697  0127C0  50E3               	movf	plusw1,w,c
 16698  0127C2  E11F               	bnz	u16920
 16699  0127C4  0EC4               	movlw	-60
 16700  0127C6  50E3               	movf	plusw1,w,c
 16701  0127C8  E11C               	bnz	u16920
 16702  0127CA  0EBF               	movlw	-65
 16703  0127CC  04E3               	decf	plusw1,w,c
 16704  0127CE  0EC0               	movlw	-64
 16705  0127D0  006F FF8C  F02A    	movff	plusw1,btemp
 16706  0127D6  0E7B               	movlw	123
 16707  0127D8  5A2A               	subwfb	btemp^0,f,c
 16708  0127DA  0EC1               	movlw	-63
 16709  0127DC  006F FF8C  F02A    	movff	plusw1,btemp
 16710  0127E2  0E9D               	movlw	157
 16711  0127E4  5A2A               	subwfb	btemp^0,f,c
 16712  0127E6  0EC2               	movlw	-62
 16713  0127E8  006F FF8C  F02A    	movff	plusw1,btemp
 16714  0127EE  0E40               	movlw	64
 16715  0127F0  5A2A               	subwfb	btemp^0,f,c
 16716  0127F2  0EC3               	movlw	-61
 16717  0127F4  006F FF8C  F02A    	movff	plusw1,btemp
 16718  0127FA  0EF1               	movlw	241
 16719  0127FC  5A2A               	subwfb	btemp^0,f,c
 16720  0127FE  A0D8               	btfss	status,0,c
 16721  012800  D00A               	goto	l17109
 16722  012802                     u16920:
 16723  012802  0EFF               	movlw	255
 16724  012804  6E2A               	movwf	btemp^0,c
 16725  012806  0EFF               	movlw	255
 16726  012808  6E2B               	movwf	(btemp+1)^0,c
 16727  01280A  0EFF               	movlw	255
 16728  01280C  6E2C               	movwf	(btemp+2)^0,c
 16729  01280E  0EFF               	movlw	255
 16730  012810  6E2D               	movwf	(btemp+3)^0,c
 16731  012812  EF10  F09C         	goto	l3846
 16732  012816                     l17109:
 16733                           
 16734                           ;stkvar	_t @ sp[(-57)+-8]
 16735  012816  0EBF               	movlw	-65
 16736  012818  50E3               	movf	plusw1,w,c
 16737  01281A  0F80               	addlw	128
 16738  01281C  6E3A               	movwf	(btemp+16)^0,c
 16739  01281E  0EC0               	movlw	-64
 16740  012820  006F FF8C  F03B    	movff	plusw1,btemp+17
 16741  012826  0EA2               	movlw	162
 16742  012828  223B               	addwfc	(btemp+17)^0,f,c
 16743  01282A  0EC1               	movlw	-63
 16744  01282C  006F FF8C  F03C    	movff	plusw1,btemp+18
 16745  012832  0E43               	movlw	67
 16746  012834  223C               	addwfc	(btemp+18)^0,f,c
 16747  012836  0EC2               	movlw	-62
 16748  012838  006F FF8C  F03D    	movff	plusw1,btemp+19
 16749  01283E  0EC7               	movlw	199
 16750  012840  223D               	addwfc	(btemp+19)^0,f,c
 16751  012842  0EC3               	movlw	-61
 16752  012844  006F FF8C  F03E    	movff	plusw1,btemp+20
 16753  01284A  0EFF               	movlw	255
 16754  01284C  223E               	addwfc	(btemp+20)^0,f,c
 16755  01284E  0EC4               	movlw	-60
 16756  012850  006F FF8C  F03F    	movff	plusw1,btemp+21
 16757  012856  0EFF               	movlw	255
 16758  012858  223F               	addwfc	(btemp+21)^0,f,c
 16759  01285A  0EC5               	movlw	-59
 16760  01285C  006F FF8C  F040    	movff	plusw1,btemp+22
 16761  012862  0EFF               	movlw	255
 16762  012864  2240               	addwfc	(btemp+22)^0,f,c
 16763  012866  0EC6               	movlw	-58
 16764  012868  006F FF8C  F041    	movff	plusw1,btemp+23
 16765  01286E  0EFF               	movlw	255
 16766  012870  2241               	addwfc	(btemp+23)^0,f,c
 16767                           
 16768                           ;stkvar	_secs @ sp[(-57)+17]
 16769  012872  0ED8               	movlw	-40
 16770  012874  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16771  01287A  0ED9               	movlw	-39
 16772  01287C  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16773  012882  0EDA               	movlw	-38
 16774  012884  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16775  01288A  0EDB               	movlw	-37
 16776  01288C  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16777  012892  0EDC               	movlw	-36
 16778  012894  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16779  01289A  0EDD               	movlw	-35
 16780  01289C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16781  0128A2  0EDE               	movlw	-34
 16782  0128A4  0060  F103  FFE3   	movff	btemp+22,plusw1
 16783  0128AA  0EDF               	movlw	-33
 16784  0128AC  0060  F107  FFE3   	movff	btemp+23,plusw1
 16785  0128B2  0E80               	movlw	128
 16786  0128B4  6EE6               	movwf	postinc1,c
 16787  0128B6  0E51               	movlw	81
 16788  0128B8  6EE6               	movwf	postinc1,c
 16789  0128BA  0E01               	movlw	1
 16790  0128BC  6EE6               	movwf	postinc1,c
 16791  0128BE  0E00               	movlw	0
 16792  0128C0  6EE6               	movwf	postinc1,c
 16793  0128C2  0E00               	movlw	0
 16794  0128C4  6EE6               	movwf	postinc1,c
 16795  0128C6  0E00               	movlw	0
 16796  0128C8  6EE6               	movwf	postinc1,c
 16797  0128CA  0E00               	movlw	0
 16798  0128CC  6EE6               	movwf	postinc1,c
 16799  0128CE  0E00               	movlw	0
 16800  0128D0  6EE6               	movwf	postinc1,c
 16801                           
 16802                           ;stkvar	_secs @ sp[(-65)+17]
 16803  0128D2  50E1               	movf	fsr1l,w,c
 16804  0128D4  0FD0               	addlw	-48
 16805  0128D6  6ED9               	movwf	fsr2l,c
 16806  0128D8  50E2               	movf	fsr1h,w,c
 16807  0128DA  6EDA               	movwf	fsr2h,c
 16808  0128DC  0EFF               	movlw	255
 16809  0128DE  22DA               	addwfc	fsr2h,f,c
 16810  0128E0  006F FF7B FFE6     	movff	postinc2,postinc1
 16811  0128E6  006F FF7B FFE6     	movff	postinc2,postinc1
 16812  0128EC  006F FF7B FFE6     	movff	postinc2,postinc1
 16813  0128F2  006F FF7B FFE6     	movff	postinc2,postinc1
 16814  0128F8  006F FF7B FFE6     	movff	postinc2,postinc1
 16815  0128FE  006F FF7B FFE6     	movff	postinc2,postinc1
 16816  012904  006F FF7B FFE6     	movff	postinc2,postinc1
 16817  01290A  006F FF7B FFE6     	movff	postinc2,postinc1
 16818  012910  ECAB  F0E1         	call	___aodiv	;wreg free
 16819  012914  52E5               	movf	postdec1,f,c
 16820  012916  006F FF9C  F041    	movff	indf1,btemp+23
 16821  01291C  52E5               	movf	postdec1,f,c
 16822  01291E  006F FF9C  F040    	movff	indf1,btemp+22
 16823  012924  52E5               	movf	postdec1,f,c
 16824  012926  006F FF9C  F03F    	movff	indf1,btemp+21
 16825  01292C  52E5               	movf	postdec1,f,c
 16826  01292E  006F FF9C  F03E    	movff	indf1,btemp+20
 16827  012934  52E5               	movf	postdec1,f,c
 16828  012936  006F FF9C  F03D    	movff	indf1,btemp+19
 16829  01293C  52E5               	movf	postdec1,f,c
 16830  01293E  006F FF9C  F03C    	movff	indf1,btemp+18
 16831  012944  52E5               	movf	postdec1,f,c
 16832  012946  006F FF9C  F03B    	movff	indf1,btemp+17
 16833  01294C  52E5               	movf	postdec1,f,c
 16834  01294E  006F FF9C  F03A    	movff	indf1,btemp+16
 16835  012954  0EF8               	movlw	248
 16836  012956  26E1               	addwf	fsr1l,f,c
 16837  012958  0EFF               	movlw	255
 16838  01295A  22E2               	addwfc	fsr1h,f,c
 16839                           
 16840                           ;stkvar	_days @ sp[(-57)+9]
 16841  01295C  0ED0               	movlw	-48
 16842  01295E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16843  012964  0ED1               	movlw	-47
 16844  012966  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16845  01296C  0ED2               	movlw	-46
 16846  01296E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16847  012974  0ED3               	movlw	-45
 16848  012976  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16849  01297C  0ED4               	movlw	-44
 16850  01297E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16851  012984  0ED5               	movlw	-43
 16852  012986  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16853  01298C  0ED6               	movlw	-42
 16854  01298E  0060  F103  FFE3   	movff	btemp+22,plusw1
 16855  012994  0ED7               	movlw	-41
 16856  012996  0060  F107  FFE3   	movff	btemp+23,plusw1
 16857  01299C  0E80               	movlw	128
 16858  01299E  6EE6               	movwf	postinc1,c
 16859  0129A0  0E51               	movlw	81
 16860  0129A2  6EE6               	movwf	postinc1,c
 16861  0129A4  0E01               	movlw	1
 16862  0129A6  6EE6               	movwf	postinc1,c
 16863  0129A8  0E00               	movlw	0
 16864  0129AA  6EE6               	movwf	postinc1,c
 16865  0129AC  0E00               	movlw	0
 16866  0129AE  6EE6               	movwf	postinc1,c
 16867  0129B0  0E00               	movlw	0
 16868  0129B2  6EE6               	movwf	postinc1,c
 16869  0129B4  0E00               	movlw	0
 16870  0129B6  6EE6               	movwf	postinc1,c
 16871  0129B8  0E00               	movlw	0
 16872  0129BA  6EE6               	movwf	postinc1,c
 16873                           
 16874                           ;stkvar	_secs @ sp[(-65)+17]
 16875  0129BC  50E1               	movf	fsr1l,w,c
 16876  0129BE  0FD0               	addlw	-48
 16877  0129C0  6ED9               	movwf	fsr2l,c
 16878  0129C2  50E2               	movf	fsr1h,w,c
 16879  0129C4  6EDA               	movwf	fsr2h,c
 16880  0129C6  0EFF               	movlw	255
 16881  0129C8  22DA               	addwfc	fsr2h,f,c
 16882  0129CA  006F FF7B FFE6     	movff	postinc2,postinc1
 16883  0129D0  006F FF7B FFE6     	movff	postinc2,postinc1
 16884  0129D6  006F FF7B FFE6     	movff	postinc2,postinc1
 16885  0129DC  006F FF7B FFE6     	movff	postinc2,postinc1
 16886  0129E2  006F FF7B FFE6     	movff	postinc2,postinc1
 16887  0129E8  006F FF7B FFE6     	movff	postinc2,postinc1
 16888  0129EE  006F FF7B FFE6     	movff	postinc2,postinc1
 16889  0129F4  006F FF7B FFE6     	movff	postinc2,postinc1
 16890  0129FA  EC6A  F0E6         	call	___aomod	;wreg free
 16891  0129FE  52E5               	movf	postdec1,f,c
 16892  012A00  006F FF9C  F041    	movff	indf1,btemp+23
 16893  012A06  52E5               	movf	postdec1,f,c
 16894  012A08  006F FF9C  F040    	movff	indf1,btemp+22
 16895  012A0E  52E5               	movf	postdec1,f,c
 16896  012A10  006F FF9C  F03F    	movff	indf1,btemp+21
 16897  012A16  52E5               	movf	postdec1,f,c
 16898  012A18  006F FF9C  F03E    	movff	indf1,btemp+20
 16899  012A1E  52E5               	movf	postdec1,f,c
 16900  012A20  006F FF9C  F03D    	movff	indf1,btemp+19
 16901  012A26  52E5               	movf	postdec1,f,c
 16902  012A28  006F FF9C  F03C    	movff	indf1,btemp+18
 16903  012A2E  52E5               	movf	postdec1,f,c
 16904  012A30  006F FF9C  F03B    	movff	indf1,btemp+17
 16905  012A36  52E5               	movf	postdec1,f,c
 16906  012A38  006F FF9C  F03A    	movff	indf1,btemp+16
 16907  012A3E  0EF8               	movlw	248
 16908  012A40  26E1               	addwf	fsr1l,f,c
 16909  012A42  0EFF               	movlw	255
 16910  012A44  22E2               	addwfc	fsr1h,f,c
 16911  012A46  0060  F0E8  F032   	movff	btemp+16,btemp+8
 16912  012A4C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 16913  012A52  0060  F0F0  F034   	movff	btemp+18,btemp+10
 16914  012A58  0060  F0F4  F035   	movff	btemp+19,btemp+11
 16915                           
 16916                           ;stkvar	_remsecs @ sp[(-57)+41]
 16917  012A5E  0EF0               	movlw	-16
 16918  012A60  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16919  012A66  0EF1               	movlw	-15
 16920  012A68  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16921  012A6E  0EF2               	movlw	-14
 16922  012A70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16923  012A76  0EF3               	movlw	-13
 16924  012A78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16925                           
 16926                           ;stkvar	_remsecs @ sp[(-57)+41]
 16927  012A7E  0EF3               	movlw	-13
 16928  012A80  AEE3               	btfss	plusw1,7,c
 16929  012A82  D01F               	goto	l17121
 16930                           
 16931                           ;stkvar	_remsecs @ sp[(-57)+41]
 16932  012A84  50E1               	movf	fsr1l,w,c
 16933  012A86  0FF0               	addlw	-16
 16934  012A88  6ED9               	movwf	fsr2l,c
 16935  012A8A  50E2               	movf	fsr1h,w,c
 16936  012A8C  6EDA               	movwf	fsr2h,c
 16937  012A8E  0EFF               	movlw	255
 16938  012A90  22DA               	addwfc	fsr2h,f,c
 16939  012A92  0E80               	movlw	128
 16940  012A94  26DE               	addwf	postinc2,f,c
 16941  012A96  0E51               	movlw	81
 16942  012A98  22DE               	addwfc	postinc2,f,c
 16943  012A9A  0E01               	movlw	1
 16944  012A9C  22DE               	addwfc	postinc2,f,c
 16945  012A9E  0E00               	movlw	0
 16946  012AA0  22DE               	addwfc	postinc2,f,c
 16947                           
 16948                           ;stkvar	_days @ sp[(-57)+9]
 16949  012AA2  50E1               	movf	fsr1l,w,c
 16950  012AA4  0FD0               	addlw	-48
 16951  012AA6  6ED9               	movwf	fsr2l,c
 16952  012AA8  50E2               	movf	fsr1h,w,c
 16953  012AAA  6EDA               	movwf	fsr2h,c
 16954  012AAC  0EFF               	movlw	255
 16955  012AAE  22DA               	addwfc	fsr2h,f,c
 16956  012AB0  06DE               	decf	postinc2,f,c
 16957  012AB2  0E00               	movlw	0
 16958  012AB4  5ADE               	subwfb	postinc2,f,c
 16959  012AB6  5ADE               	subwfb	postinc2,f,c
 16960  012AB8  5ADE               	subwfb	postinc2,f,c
 16961  012ABA  5ADE               	subwfb	postinc2,f,c
 16962  012ABC  5ADE               	subwfb	postinc2,f,c
 16963  012ABE  5ADE               	subwfb	postinc2,f,c
 16964  012AC0  5ADE               	subwfb	postinc2,f,c
 16965  012AC2                     l17121:
 16966  012AC2  0E07               	movlw	7
 16967  012AC4  6EE6               	movwf	postinc1,c
 16968  012AC6  0E00               	movlw	0
 16969  012AC8  6EE6               	movwf	postinc1,c
 16970  012ACA  0E00               	movlw	0
 16971  012ACC  6EE6               	movwf	postinc1,c
 16972  012ACE  0E00               	movlw	0
 16973  012AD0  6EE6               	movwf	postinc1,c
 16974  012AD2  0E00               	movlw	0
 16975  012AD4  6EE6               	movwf	postinc1,c
 16976  012AD6  0E00               	movlw	0
 16977  012AD8  6EE6               	movwf	postinc1,c
 16978  012ADA  0E00               	movlw	0
 16979  012ADC  6EE6               	movwf	postinc1,c
 16980  012ADE  0E00               	movlw	0
 16981  012AE0  6EE6               	movwf	postinc1,c
 16982                           
 16983                           ;stkvar	_days @ sp[(-65)+9]
 16984  012AE2  0EC8               	movlw	-56
 16985  012AE4  50E3               	movf	plusw1,w,c
 16986  012AE6  0F03               	addlw	3
 16987  012AE8  6E3A               	movwf	(btemp+16)^0,c
 16988  012AEA  0EC9               	movlw	-55
 16989  012AEC  006F FF8C  F03B    	movff	plusw1,btemp+17
 16990  012AF2  0E00               	movlw	0
 16991  012AF4  223B               	addwfc	(btemp+17)^0,f,c
 16992  012AF6  0ECA               	movlw	-54
 16993  012AF8  006F FF8C  F03C    	movff	plusw1,btemp+18
 16994  012AFE  0E00               	movlw	0
 16995  012B00  223C               	addwfc	(btemp+18)^0,f,c
 16996  012B02  0ECB               	movlw	-53
 16997  012B04  006F FF8C  F03D    	movff	plusw1,btemp+19
 16998  012B0A  0E00               	movlw	0
 16999  012B0C  223D               	addwfc	(btemp+19)^0,f,c
 17000  012B0E  0ECC               	movlw	-52
 17001  012B10  006F FF8C  F03E    	movff	plusw1,btemp+20
 17002  012B16  0E00               	movlw	0
 17003  012B18  223E               	addwfc	(btemp+20)^0,f,c
 17004  012B1A  0ECD               	movlw	-51
 17005  012B1C  006F FF8C  F03F    	movff	plusw1,btemp+21
 17006  012B22  0E00               	movlw	0
 17007  012B24  223F               	addwfc	(btemp+21)^0,f,c
 17008  012B26  0ECE               	movlw	-50
 17009  012B28  006F FF8C  F040    	movff	plusw1,btemp+22
 17010  012B2E  0E00               	movlw	0
 17011  012B30  2240               	addwfc	(btemp+22)^0,f,c
 17012  012B32  0ECF               	movlw	-49
 17013  012B34  006F FF8C  F041    	movff	plusw1,btemp+23
 17014  012B3A  0E00               	movlw	0
 17015  012B3C  2241               	addwfc	(btemp+23)^0,f,c
 17016  012B3E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17017  012B44  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17018  012B4A  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17019  012B50  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17020  012B56  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17021  012B5C  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17022  012B62  0060  F103  FFE6   	movff	btemp+22,postinc1
 17023  012B68  0060  F107  FFE6   	movff	btemp+23,postinc1
 17024  012B6E  EC6A  F0E6         	call	___aomod	;wreg free
 17025  012B72  52E5               	movf	postdec1,f,c
 17026  012B74  006F FF9C  F041    	movff	indf1,btemp+23
 17027  012B7A  52E5               	movf	postdec1,f,c
 17028  012B7C  006F FF9C  F040    	movff	indf1,btemp+22
 17029  012B82  52E5               	movf	postdec1,f,c
 17030  012B84  006F FF9C  F03F    	movff	indf1,btemp+21
 17031  012B8A  52E5               	movf	postdec1,f,c
 17032  012B8C  006F FF9C  F03E    	movff	indf1,btemp+20
 17033  012B92  52E5               	movf	postdec1,f,c
 17034  012B94  006F FF9C  F03D    	movff	indf1,btemp+19
 17035  012B9A  52E5               	movf	postdec1,f,c
 17036  012B9C  006F FF9C  F03C    	movff	indf1,btemp+18
 17037  012BA2  52E5               	movf	postdec1,f,c
 17038  012BA4  006F FF9C  F03B    	movff	indf1,btemp+17
 17039  012BAA  52E5               	movf	postdec1,f,c
 17040  012BAC  006F FF9C  F03A    	movff	indf1,btemp+16
 17041  012BB2  0EF8               	movlw	248
 17042  012BB4  26E1               	addwf	fsr1l,f,c
 17043  012BB6  0EFF               	movlw	255
 17044  012BB8  22E2               	addwfc	fsr1h,f,c
 17045  012BBA  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17046  012BC0  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17047                           
 17048                           ;stkvar	_wday @ sp[(-57)+55]
 17049  012BC6  0EFE               	movlw	-2
 17050  012BC8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17051  012BCE  0EFF               	movlw	-1
 17052  012BD0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17053                           
 17054                           ;stkvar	_wday @ sp[(-57)+55]
 17055  012BD6  0EFF               	movlw	-1
 17056  012BD8  AEE3               	btfss	plusw1,7,c
 17057  012BDA  D011               	goto	l17127
 17058                           
 17059                           ;stkvar	_wday @ sp[(-57)+55]
 17060  012BDC  0EFE               	movlw	-2
 17061  012BDE  50E3               	movf	plusw1,w,c
 17062  012BE0  0F07               	addlw	7
 17063  012BE2  6E2A               	movwf	btemp^0,c
 17064  012BE4  0EFE               	movlw	-2
 17065  012BE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 17066  012BEC  6A2A               	clrf	btemp^0,c
 17067  012BEE  0EFF               	movlw	-1
 17068  012BF0  50E3               	movf	plusw1,w,c
 17069  012BF2  202A               	addwfc	btemp^0,w,c
 17070  012BF4  6E2A               	movwf	btemp^0,c
 17071  012BF6  0EFF               	movlw	-1
 17072  012BF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 17073  012BFE                     l17127:
 17074  012BFE  0EB1               	movlw	177
 17075  012C00  6EE6               	movwf	postinc1,c
 17076  012C02  0E3A               	movlw	58
 17077  012C04  6EE6               	movwf	postinc1,c
 17078  012C06  0E02               	movlw	2
 17079  012C08  6EE6               	movwf	postinc1,c
 17080  012C0A  0E00               	movlw	0
 17081  012C0C  6EE6               	movwf	postinc1,c
 17082  012C0E  0E00               	movlw	0
 17083  012C10  6EE6               	movwf	postinc1,c
 17084  012C12  0E00               	movlw	0
 17085  012C14  6EE6               	movwf	postinc1,c
 17086  012C16  0E00               	movlw	0
 17087  012C18  6EE6               	movwf	postinc1,c
 17088  012C1A  0E00               	movlw	0
 17089  012C1C  6EE6               	movwf	postinc1,c
 17090                           
 17091                           ;stkvar	_days @ sp[(-65)+9]
 17092  012C1E  50E1               	movf	fsr1l,w,c
 17093  012C20  0FC8               	addlw	-56
 17094  012C22  6ED9               	movwf	fsr2l,c
 17095  012C24  50E2               	movf	fsr1h,w,c
 17096  012C26  6EDA               	movwf	fsr2h,c
 17097  012C28  0EFF               	movlw	255
 17098  012C2A  22DA               	addwfc	fsr2h,f,c
 17099  012C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 17100  012C32  006F FF7B FFE6     	movff	postinc2,postinc1
 17101  012C38  006F FF7B FFE6     	movff	postinc2,postinc1
 17102  012C3E  006F FF7B FFE6     	movff	postinc2,postinc1
 17103  012C44  006F FF7B FFE6     	movff	postinc2,postinc1
 17104  012C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 17105  012C50  006F FF7B FFE6     	movff	postinc2,postinc1
 17106  012C56  006F FF7B FFE6     	movff	postinc2,postinc1
 17107  012C5C  ECAB  F0E1         	call	___aodiv	;wreg free
 17108  012C60  52E5               	movf	postdec1,f,c
 17109  012C62  006F FF9C  F041    	movff	indf1,btemp+23
 17110  012C68  52E5               	movf	postdec1,f,c
 17111  012C6A  006F FF9C  F040    	movff	indf1,btemp+22
 17112  012C70  52E5               	movf	postdec1,f,c
 17113  012C72  006F FF9C  F03F    	movff	indf1,btemp+21
 17114  012C78  52E5               	movf	postdec1,f,c
 17115  012C7A  006F FF9C  F03E    	movff	indf1,btemp+20
 17116  012C80  52E5               	movf	postdec1,f,c
 17117  012C82  006F FF9C  F03D    	movff	indf1,btemp+19
 17118  012C88  52E5               	movf	postdec1,f,c
 17119  012C8A  006F FF9C  F03C    	movff	indf1,btemp+18
 17120  012C90  52E5               	movf	postdec1,f,c
 17121  012C92  006F FF9C  F03B    	movff	indf1,btemp+17
 17122  012C98  52E5               	movf	postdec1,f,c
 17123  012C9A  006F FF9C  F03A    	movff	indf1,btemp+16
 17124  012CA0  0EF8               	movlw	248
 17125  012CA2  26E1               	addwf	fsr1l,f,c
 17126  012CA4  0EFF               	movlw	255
 17127  012CA6  22E2               	addwfc	fsr1h,f,c
 17128  012CA8  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17129  012CAE  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17130  012CB4  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17131  012CBA  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17132                           
 17133                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17134  012CC0  0EF4               	movlw	-12
 17135  012CC2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17136  012CC8  0EF5               	movlw	-11
 17137  012CCA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17138  012CD0  0EF6               	movlw	-10
 17139  012CD2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17140  012CD8  0EF7               	movlw	-9
 17141  012CDA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17142  012CE0  0EB1               	movlw	177
 17143  012CE2  6EE6               	movwf	postinc1,c
 17144  012CE4  0E3A               	movlw	58
 17145  012CE6  6EE6               	movwf	postinc1,c
 17146  012CE8  0E02               	movlw	2
 17147  012CEA  6EE6               	movwf	postinc1,c
 17148  012CEC  0E00               	movlw	0
 17149  012CEE  6EE6               	movwf	postinc1,c
 17150  012CF0  0E00               	movlw	0
 17151  012CF2  6EE6               	movwf	postinc1,c
 17152  012CF4  0E00               	movlw	0
 17153  012CF6  6EE6               	movwf	postinc1,c
 17154  012CF8  0E00               	movlw	0
 17155  012CFA  6EE6               	movwf	postinc1,c
 17156  012CFC  0E00               	movlw	0
 17157  012CFE  6EE6               	movwf	postinc1,c
 17158                           
 17159                           ;stkvar	_days @ sp[(-65)+9]
 17160  012D00  50E1               	movf	fsr1l,w,c
 17161  012D02  0FC8               	addlw	-56
 17162  012D04  6ED9               	movwf	fsr2l,c
 17163  012D06  50E2               	movf	fsr1h,w,c
 17164  012D08  6EDA               	movwf	fsr2h,c
 17165  012D0A  0EFF               	movlw	255
 17166  012D0C  22DA               	addwfc	fsr2h,f,c
 17167  012D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 17168  012D14  006F FF7B FFE6     	movff	postinc2,postinc1
 17169  012D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 17170  012D20  006F FF7B FFE6     	movff	postinc2,postinc1
 17171  012D26  006F FF7B FFE6     	movff	postinc2,postinc1
 17172  012D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 17173  012D32  006F FF7B FFE6     	movff	postinc2,postinc1
 17174  012D38  006F FF7B FFE6     	movff	postinc2,postinc1
 17175  012D3E  EC6A  F0E6         	call	___aomod	;wreg free
 17176  012D42  52E5               	movf	postdec1,f,c
 17177  012D44  006F FF9C  F041    	movff	indf1,btemp+23
 17178  012D4A  52E5               	movf	postdec1,f,c
 17179  012D4C  006F FF9C  F040    	movff	indf1,btemp+22
 17180  012D52  52E5               	movf	postdec1,f,c
 17181  012D54  006F FF9C  F03F    	movff	indf1,btemp+21
 17182  012D5A  52E5               	movf	postdec1,f,c
 17183  012D5C  006F FF9C  F03E    	movff	indf1,btemp+20
 17184  012D62  52E5               	movf	postdec1,f,c
 17185  012D64  006F FF9C  F03D    	movff	indf1,btemp+19
 17186  012D6A  52E5               	movf	postdec1,f,c
 17187  012D6C  006F FF9C  F03C    	movff	indf1,btemp+18
 17188  012D72  52E5               	movf	postdec1,f,c
 17189  012D74  006F FF9C  F03B    	movff	indf1,btemp+17
 17190  012D7A  52E5               	movf	postdec1,f,c
 17191  012D7C  006F FF9C  F03A    	movff	indf1,btemp+16
 17192  012D82  0EF8               	movlw	248
 17193  012D84  26E1               	addwf	fsr1l,f,c
 17194  012D86  0EFF               	movlw	255
 17195  012D88  22E2               	addwfc	fsr1h,f,c
 17196  012D8A  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17197  012D90  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17198  012D96  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17199  012D9C  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17200                           
 17201                           ;stkvar	_remdays @ sp[(-57)+25]
 17202  012DA2  0EE0               	movlw	-32
 17203  012DA4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17204  012DAA  0EE1               	movlw	-31
 17205  012DAC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17206  012DB2  0EE2               	movlw	-30
 17207  012DB4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17208  012DBA  0EE3               	movlw	-29
 17209  012DBC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17210                           
 17211                           ;stkvar	_remdays @ sp[(-57)+25]
 17212  012DC2  0EE3               	movlw	-29
 17213  012DC4  AEE3               	btfss	plusw1,7,c
 17214  012DC6  D01B               	goto	l17135
 17215                           
 17216                           ;stkvar	_remdays @ sp[(-57)+25]
 17217  012DC8  50E1               	movf	fsr1l,w,c
 17218  012DCA  0FE0               	addlw	-32
 17219  012DCC  6ED9               	movwf	fsr2l,c
 17220  012DCE  50E2               	movf	fsr1h,w,c
 17221  012DD0  6EDA               	movwf	fsr2h,c
 17222  012DD2  0EFF               	movlw	255
 17223  012DD4  22DA               	addwfc	fsr2h,f,c
 17224  012DD6  0EB1               	movlw	177
 17225  012DD8  26DE               	addwf	postinc2,f,c
 17226  012DDA  0E3A               	movlw	58
 17227  012DDC  22DE               	addwfc	postinc2,f,c
 17228  012DDE  0E02               	movlw	2
 17229  012DE0  22DE               	addwfc	postinc2,f,c
 17230  012DE2  0E00               	movlw	0
 17231  012DE4  22DE               	addwfc	postinc2,f,c
 17232                           
 17233                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17234  012DE6  50E1               	movf	fsr1l,w,c
 17235  012DE8  0FF4               	addlw	-12
 17236  012DEA  6ED9               	movwf	fsr2l,c
 17237  012DEC  50E2               	movf	fsr1h,w,c
 17238  012DEE  6EDA               	movwf	fsr2h,c
 17239  012DF0  0EFF               	movlw	255
 17240  012DF2  22DA               	addwfc	fsr2h,f,c
 17241  012DF4  06DE               	decf	postinc2,f,c
 17242  012DF6  0E00               	movlw	0
 17243  012DF8  5ADE               	subwfb	postinc2,f,c
 17244  012DFA  5ADE               	subwfb	postinc2,f,c
 17245  012DFC  5ADE               	subwfb	postinc2,f,c
 17246  012DFE                     l17135:
 17247  012DFE  0EAC               	movlw	172
 17248  012E00  6EE6               	movwf	postinc1,c
 17249  012E02  0E8E               	movlw	142
 17250  012E04  6EE6               	movwf	postinc1,c
 17251  012E06  0E00               	movlw	0
 17252  012E08  6EE6               	movwf	postinc1,c
 17253  012E0A  0E00               	movlw	0
 17254  012E0C  6EE6               	movwf	postinc1,c
 17255                           
 17256                           ;stkvar	_remdays @ sp[(-61)+25]
 17257  012E0E  0EDC               	movlw	-36
 17258  012E10  006F FF8F FFE6     	movff	plusw1,postinc1
 17259  012E16  006F FF8F FFE6     	movff	plusw1,postinc1
 17260  012E1C  006F FF8F FFE6     	movff	plusw1,postinc1
 17261  012E22  006F FF8F FFE6     	movff	plusw1,postinc1
 17262  012E28  EC18  F0F1         	call	___aldiv	;wreg free
 17263                           
 17264                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17265  012E2C  0EE8               	movlw	-24
 17266  012E2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 17267  012E34  0EE9               	movlw	-23
 17268  012E36  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17269  012E3C  0EEA               	movlw	-22
 17270  012E3E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17271  012E44  0EEB               	movlw	-21
 17272  012E46  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17273                           
 17274                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17275  012E4C  0EE8               	movlw	-24
 17276  012E4E  006F FF8C  F02A    	movff	plusw1,btemp
 17277  012E54  0E04               	movlw	4
 17278  012E56  182A               	xorwf	btemp^0,w,c
 17279  012E58  E116               	bnz	l17141
 17280  012E5A  0EE9               	movlw	-23
 17281  012E5C  50E3               	movf	plusw1,w,c
 17282  012E5E  E113               	bnz	l17141
 17283  012E60  0EEA               	movlw	-22
 17284  012E62  50E3               	movf	plusw1,w,c
 17285  012E64  E110               	bnz	l17141
 17286  012E66  0EEB               	movlw	-21
 17287  012E68  50E3               	movf	plusw1,w,c
 17288  012E6A  A4D8               	btfss	status,2,c
 17289  012E6C  D00C               	goto	l17141
 17290                           
 17291                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17292  012E6E  50E1               	movf	fsr1l,w,c
 17293  012E70  0FE8               	addlw	-24
 17294  012E72  6ED9               	movwf	fsr2l,c
 17295  012E74  50E2               	movf	fsr1h,w,c
 17296  012E76  6EDA               	movwf	fsr2h,c
 17297  012E78  0EFF               	movlw	255
 17298  012E7A  22DA               	addwfc	fsr2h,f,c
 17299  012E7C  06DE               	decf	postinc2,f,c
 17300  012E7E  0E00               	movlw	0
 17301  012E80  5ADE               	subwfb	postinc2,f,c
 17302  012E82  5ADE               	subwfb	postinc2,f,c
 17303  012E84  5ADE               	subwfb	postinc2,f,c
 17304  012E86                     l17141:
 17305  012E86  0EAC               	movlw	172
 17306  012E88  6EE6               	movwf	postinc1,c
 17307  012E8A  0E8E               	movlw	142
 17308  012E8C  6EE6               	movwf	postinc1,c
 17309  012E8E  0E00               	movlw	0
 17310  012E90  6EE6               	movwf	postinc1,c
 17311  012E92  0E00               	movlw	0
 17312  012E94  6EE6               	movwf	postinc1,c
 17313                           
 17314                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17315  012E96  0EE4               	movlw	-28
 17316  012E98  006F FF8F FFE6     	movff	plusw1,postinc1
 17317  012E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17318  012EA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17319  012EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17320  012EB0  ECB8  F002         	call	___lmul	;wreg free
 17321                           
 17322                           ;stkvar	_remdays @ sp[(-57)+25]
 17323  012EB4  50E1               	movf	fsr1l,w,c
 17324  012EB6  0FE0               	addlw	-32
 17325  012EB8  6ED9               	movwf	fsr2l,c
 17326  012EBA  50E2               	movf	fsr1h,w,c
 17327  012EBC  6EDA               	movwf	fsr2h,c
 17328  012EBE  0EFF               	movlw	255
 17329  012EC0  22DA               	addwfc	fsr2h,f,c
 17330  012EC2  502A               	movf	btemp^0,w,c
 17331  012EC4  5EDE               	subwf	postinc2,f,c
 17332  012EC6  502B               	movf	(btemp+1)^0,w,c
 17333  012EC8  5ADE               	subwfb	postinc2,f,c
 17334  012ECA  502C               	movf	(btemp+2)^0,w,c
 17335  012ECC  5ADE               	subwfb	postinc2,f,c
 17336  012ECE  502D               	movf	(btemp+3)^0,w,c
 17337  012ED0  5ADE               	subwfb	postinc2,f,c
 17338  012ED2  0EB5               	movlw	181
 17339  012ED4  6EE6               	movwf	postinc1,c
 17340  012ED6  0E05               	movlw	5
 17341  012ED8  6EE6               	movwf	postinc1,c
 17342  012EDA  0E00               	movlw	0
 17343  012EDC  6EE6               	movwf	postinc1,c
 17344  012EDE  0E00               	movlw	0
 17345  012EE0  6EE6               	movwf	postinc1,c
 17346                           
 17347                           ;stkvar	_remdays @ sp[(-61)+25]
 17348  012EE2  0EDC               	movlw	-36
 17349  012EE4  006F FF8F FFE6     	movff	plusw1,postinc1
 17350  012EEA  006F FF8F FFE6     	movff	plusw1,postinc1
 17351  012EF0  006F FF8F FFE6     	movff	plusw1,postinc1
 17352  012EF6  006F FF8F FFE6     	movff	plusw1,postinc1
 17353  012EFC  EC18  F0F1         	call	___aldiv	;wreg free
 17354                           
 17355                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17356  012F00  0EE4               	movlw	-28
 17357  012F02  0060  F0AB  FFE3   	movff	btemp,plusw1
 17358  012F08  0EE5               	movlw	-27
 17359  012F0A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17360  012F10  0EE6               	movlw	-26
 17361  012F12  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17362  012F18  0EE7               	movlw	-25
 17363  012F1A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17364                           
 17365                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17366  012F20  0EE4               	movlw	-28
 17367  012F22  006F FF8C  F02A    	movff	plusw1,btemp
 17368  012F28  0E19               	movlw	25
 17369  012F2A  182A               	xorwf	btemp^0,w,c
 17370  012F2C  E116               	bnz	l17149
 17371  012F2E  0EE5               	movlw	-27
 17372  012F30  50E3               	movf	plusw1,w,c
 17373  012F32  E113               	bnz	l17149
 17374  012F34  0EE6               	movlw	-26
 17375  012F36  50E3               	movf	plusw1,w,c
 17376  012F38  E110               	bnz	l17149
 17377  012F3A  0EE7               	movlw	-25
 17378  012F3C  50E3               	movf	plusw1,w,c
 17379  012F3E  A4D8               	btfss	status,2,c
 17380  012F40  D00C               	goto	l17149
 17381                           
 17382                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17383  012F42  50E1               	movf	fsr1l,w,c
 17384  012F44  0FE4               	addlw	-28
 17385  012F46  6ED9               	movwf	fsr2l,c
 17386  012F48  50E2               	movf	fsr1h,w,c
 17387  012F4A  6EDA               	movwf	fsr2h,c
 17388  012F4C  0EFF               	movlw	255
 17389  012F4E  22DA               	addwfc	fsr2h,f,c
 17390  012F50  06DE               	decf	postinc2,f,c
 17391  012F52  0E00               	movlw	0
 17392  012F54  5ADE               	subwfb	postinc2,f,c
 17393  012F56  5ADE               	subwfb	postinc2,f,c
 17394  012F58  5ADE               	subwfb	postinc2,f,c
 17395  012F5A                     l17149:
 17396  012F5A  0EB5               	movlw	181
 17397  012F5C  6EE6               	movwf	postinc1,c
 17398  012F5E  0E05               	movlw	5
 17399  012F60  6EE6               	movwf	postinc1,c
 17400  012F62  0E00               	movlw	0
 17401  012F64  6EE6               	movwf	postinc1,c
 17402  012F66  0E00               	movlw	0
 17403  012F68  6EE6               	movwf	postinc1,c
 17404                           
 17405                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17406  012F6A  0EE0               	movlw	-32
 17407  012F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 17408  012F72  006F FF8F FFE6     	movff	plusw1,postinc1
 17409  012F78  006F FF8F FFE6     	movff	plusw1,postinc1
 17410  012F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 17411  012F84  ECB8  F002         	call	___lmul	;wreg free
 17412                           
 17413                           ;stkvar	_remdays @ sp[(-57)+25]
 17414  012F88  50E1               	movf	fsr1l,w,c
 17415  012F8A  0FE0               	addlw	-32
 17416  012F8C  6ED9               	movwf	fsr2l,c
 17417  012F8E  50E2               	movf	fsr1h,w,c
 17418  012F90  6EDA               	movwf	fsr2h,c
 17419  012F92  0EFF               	movlw	255
 17420  012F94  22DA               	addwfc	fsr2h,f,c
 17421  012F96  502A               	movf	btemp^0,w,c
 17422  012F98  5EDE               	subwf	postinc2,f,c
 17423  012F9A  502B               	movf	(btemp+1)^0,w,c
 17424  012F9C  5ADE               	subwfb	postinc2,f,c
 17425  012F9E  502C               	movf	(btemp+2)^0,w,c
 17426  012FA0  5ADE               	subwfb	postinc2,f,c
 17427  012FA2  502D               	movf	(btemp+3)^0,w,c
 17428  012FA4  5ADE               	subwfb	postinc2,f,c
 17429  012FA6  0E6D               	movlw	109
 17430  012FA8  6EE6               	movwf	postinc1,c
 17431  012FAA  0E01               	movlw	1
 17432  012FAC  6EE6               	movwf	postinc1,c
 17433  012FAE  0E00               	movlw	0
 17434  012FB0  6EE6               	movwf	postinc1,c
 17435  012FB2  0E00               	movlw	0
 17436  012FB4  6EE6               	movwf	postinc1,c
 17437                           
 17438                           ;stkvar	_remdays @ sp[(-61)+25]
 17439  012FB6  0EDC               	movlw	-36
 17440  012FB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17441  012FBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17442  012FC4  006F FF8F FFE6     	movff	plusw1,postinc1
 17443  012FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 17444  012FD0  EC18  F0F1         	call	___aldiv	;wreg free
 17445                           
 17446                           ;stkvar	_remyears @ sp[(-57)+37]
 17447  012FD4  0EEC               	movlw	-20
 17448  012FD6  0060  F0AB  FFE3   	movff	btemp,plusw1
 17449  012FDC  0EED               	movlw	-19
 17450  012FDE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17451  012FE4  0EEE               	movlw	-18
 17452  012FE6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17453  012FEC  0EEF               	movlw	-17
 17454  012FEE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17455                           
 17456                           ;stkvar	_remyears @ sp[(-57)+37]
 17457  012FF4  0EEC               	movlw	-20
 17458  012FF6  006F FF8C  F02A    	movff	plusw1,btemp
 17459  012FFC  0E04               	movlw	4
 17460  012FFE  182A               	xorwf	btemp^0,w,c
 17461  013000  E116               	bnz	l17157
 17462  013002  0EED               	movlw	-19
 17463  013004  50E3               	movf	plusw1,w,c
 17464  013006  E113               	bnz	l17157
 17465  013008  0EEE               	movlw	-18
 17466  01300A  50E3               	movf	plusw1,w,c
 17467  01300C  E110               	bnz	l17157
 17468  01300E  0EEF               	movlw	-17
 17469  013010  50E3               	movf	plusw1,w,c
 17470  013012  A4D8               	btfss	status,2,c
 17471  013014  D00C               	goto	l17157
 17472                           
 17473                           ;stkvar	_remyears @ sp[(-57)+37]
 17474  013016  50E1               	movf	fsr1l,w,c
 17475  013018  0FEC               	addlw	-20
 17476  01301A  6ED9               	movwf	fsr2l,c
 17477  01301C  50E2               	movf	fsr1h,w,c
 17478  01301E  6EDA               	movwf	fsr2h,c
 17479  013020  0EFF               	movlw	255
 17480  013022  22DA               	addwfc	fsr2h,f,c
 17481  013024  06DE               	decf	postinc2,f,c
 17482  013026  0E00               	movlw	0
 17483  013028  5ADE               	subwfb	postinc2,f,c
 17484  01302A  5ADE               	subwfb	postinc2,f,c
 17485  01302C  5ADE               	subwfb	postinc2,f,c
 17486  01302E                     l17157:
 17487  01302E  0E6D               	movlw	109
 17488  013030  6EE6               	movwf	postinc1,c
 17489  013032  0E01               	movlw	1
 17490  013034  6EE6               	movwf	postinc1,c
 17491  013036  0E00               	movlw	0
 17492  013038  6EE6               	movwf	postinc1,c
 17493  01303A  0E00               	movlw	0
 17494  01303C  6EE6               	movwf	postinc1,c
 17495                           
 17496                           ;stkvar	_remyears @ sp[(-61)+37]
 17497  01303E  0EE8               	movlw	-24
 17498  013040  006F FF8F FFE6     	movff	plusw1,postinc1
 17499  013046  006F FF8F FFE6     	movff	plusw1,postinc1
 17500  01304C  006F FF8F FFE6     	movff	plusw1,postinc1
 17501  013052  006F FF8F FFE6     	movff	plusw1,postinc1
 17502  013058  ECB8  F002         	call	___lmul	;wreg free
 17503                           
 17504                           ;stkvar	_remdays @ sp[(-57)+25]
 17505  01305C  50E1               	movf	fsr1l,w,c
 17506  01305E  0FE0               	addlw	-32
 17507  013060  6ED9               	movwf	fsr2l,c
 17508  013062  50E2               	movf	fsr1h,w,c
 17509  013064  6EDA               	movwf	fsr2h,c
 17510  013066  0EFF               	movlw	255
 17511  013068  22DA               	addwfc	fsr2h,f,c
 17512  01306A  502A               	movf	btemp^0,w,c
 17513  01306C  5EDE               	subwf	postinc2,f,c
 17514  01306E  502B               	movf	(btemp+1)^0,w,c
 17515  013070  5ADE               	subwfb	postinc2,f,c
 17516  013072  502C               	movf	(btemp+2)^0,w,c
 17517  013074  5ADE               	subwfb	postinc2,f,c
 17518  013076  502D               	movf	(btemp+3)^0,w,c
 17519  013078  5ADE               	subwfb	postinc2,f,c
 17520                           
 17521                           ;stkvar	___secs_to_tm$7875 @ sp[(-57)+0]
 17522  01307A  0EC7               	movlw	-57
 17523  01307C  6AE3               	clrf	plusw1,c
 17524                           
 17525                           ;stkvar	_remyears @ sp[(-57)+37]
 17526  01307E  0EEC               	movlw	-20
 17527  013080  50E3               	movf	plusw1,w,c
 17528  013082  E127               	bnz	l17169
 17529  013084  0EED               	movlw	-19
 17530  013086  50E3               	movf	plusw1,w,c
 17531  013088  E124               	bnz	l17169
 17532  01308A  0EEE               	movlw	-18
 17533  01308C  50E3               	movf	plusw1,w,c
 17534  01308E  E121               	bnz	l17169
 17535  013090  0EEF               	movlw	-17
 17536  013092  50E3               	movf	plusw1,w,c
 17537  013094  A4D8               	btfss	status,2,c
 17538  013096  D01D               	goto	l17169
 17539                           
 17540                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17541  013098  0EE4               	movlw	-28
 17542  01309A  50E3               	movf	plusw1,w,c
 17543  01309C  E117               	bnz	l17167
 17544  01309E  0EE5               	movlw	-27
 17545  0130A0  50E3               	movf	plusw1,w,c
 17546  0130A2  E114               	bnz	l17167
 17547  0130A4  0EE6               	movlw	-26
 17548  0130A6  50E3               	movf	plusw1,w,c
 17549  0130A8  E111               	bnz	l17167
 17550  0130AA  0EE7               	movlw	-25
 17551  0130AC  50E3               	movf	plusw1,w,c
 17552  0130AE  A4D8               	btfss	status,2,c
 17553  0130B0  D00D               	goto	u17010
 17554                           
 17555                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17556  0130B2  0EE8               	movlw	-24
 17557  0130B4  50E3               	movf	plusw1,w,c
 17558  0130B6  E10D               	bnz	l17169
 17559  0130B8  0EE9               	movlw	-23
 17560  0130BA  50E3               	movf	plusw1,w,c
 17561  0130BC  E10A               	bnz	l17169
 17562  0130BE  0EEA               	movlw	-22
 17563  0130C0  50E3               	movf	plusw1,w,c
 17564  0130C2  E107               	bnz	l17169
 17565  0130C4  0EEB               	movlw	-21
 17566  0130C6  50E3               	movf	plusw1,w,c
 17567  0130C8  A4D8               	btfss	status,2,c
 17568  0130CA  D003               	goto	l17169
 17569  0130CC                     u17010:
 17570  0130CC                     l17167:
 17571                           
 17572                           ;stkvar	___secs_to_tm$7875 @ sp[(-57)+0]
 17573  0130CC  0EC7               	movlw	-57
 17574  0130CE  6AE3               	clrf	plusw1,c
 17575  0130D0  2AE3               	incf	plusw1,f,c
 17576  0130D2                     l17169:
 17577                           
 17578                           ;stkvar	___secs_to_tm$7875 @ sp[(-57)+0]
 17579  0130D2  0EC7               	movlw	-57
 17580  0130D4  50E3               	movf	plusw1,w,c
 17581  0130D6  6E34               	movwf	(btemp+10)^0,c
 17582  0130D8  6A35               	clrf	(btemp+11)^0,c
 17583                           
 17584                           ;stkvar	_leap @ sp[(-57)+51]
 17585  0130DA  0EFA               	movlw	-6
 17586  0130DC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17587  0130E2  0EFB               	movlw	-5
 17588  0130E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17589                           
 17590                           ;stkvar	_remdays @ sp[(-57)+25]
 17591                           ;stkvar	_leap @ sp[(-57)+51]
 17592  0130EA  0EFA               	movlw	-6
 17593  0130EC  006F FF8C  F034    	movff	plusw1,btemp+10
 17594  0130F2  0EFB               	movlw	-5
 17595  0130F4  006F FF8C  F035    	movff	plusw1,btemp+11
 17596  0130FA  0EE0               	movlw	-32
 17597  0130FC  50E3               	movf	plusw1,w,c
 17598  0130FE  2634               	addwf	(btemp+10)^0,f,c
 17599  013100  0EE1               	movlw	-31
 17600  013102  50E3               	movf	plusw1,w,c
 17601  013104  2235               	addwfc	(btemp+11)^0,f,c
 17602  013106  0E3B               	movlw	59
 17603  013108  2634               	addwf	(btemp+10)^0,f,c
 17604  01310A  0E00               	movlw	0
 17605  01310C  2235               	addwfc	(btemp+11)^0,f,c
 17606                           
 17607                           ;stkvar	_yday @ sp[(-57)+53]
 17608  01310E  0EFC               	movlw	-4
 17609  013110  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17610  013116  0EFD               	movlw	-3
 17611  013118  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17612                           
 17613                           ;stkvar	_leap @ sp[(-57)+51]
 17614  01311E  0EFA               	movlw	-6
 17615  013120  50E3               	movf	plusw1,w,c
 17616  013122  0F6D               	addlw	109
 17617  013124  6E34               	movwf	(btemp+10)^0,c
 17618  013126  0EFB               	movlw	-5
 17619  013128  006F FF8C  F035    	movff	plusw1,btemp+11
 17620  01312E  0E01               	movlw	1
 17621  013130  2235               	addwfc	(btemp+11)^0,f,c
 17622                           
 17623                           ;stkvar	_yday @ sp[(-57)+53]
 17624  013132  0EFC               	movlw	-4
 17625  013134  006F FF8C  F02A    	movff	plusw1,btemp
 17626  01313A  5034               	movf	(btemp+10)^0,w,c
 17627  01313C  5C2A               	subwf	btemp^0,w,c
 17628  01313E  0EFD               	movlw	-3
 17629  013140  50E3               	movf	plusw1,w,c
 17630  013142  0A80               	xorlw	128
 17631  013144  6E2A               	movwf	btemp^0,c
 17632  013146  5035               	movf	(btemp+11)^0,w,c
 17633  013148  0A80               	xorlw	128
 17634  01314A  582A               	subwfb	btemp^0,w,c
 17635  01314C  A0D8               	btfss	status,0,c
 17636  01314E  D01E               	goto	l17177
 17637                           
 17638                           ;stkvar	_leap @ sp[(-57)+51]
 17639  013150  0EFA               	movlw	-6
 17640  013152  50E3               	movf	plusw1,w,c
 17641  013154  0F6D               	addlw	109
 17642  013156  6E34               	movwf	(btemp+10)^0,c
 17643  013158  0EFB               	movlw	-5
 17644  01315A  006F FF8C  F035    	movff	plusw1,btemp+11
 17645  013160  0E01               	movlw	1
 17646  013162  2235               	addwfc	(btemp+11)^0,f,c
 17647                           
 17648                           ;stkvar	_yday @ sp[(-57)+53]
 17649  013164  0EFC               	movlw	-4
 17650  013166  006F FF8C  F02A    	movff	plusw1,btemp
 17651  01316C  5034               	movf	(btemp+10)^0,w,c
 17652  01316E  5E2A               	subwf	btemp^0,f,c
 17653  013170  0EFC               	movlw	-4
 17654  013172  0060  F0AB  FFE3   	movff	btemp,plusw1
 17655  013178  0EFD               	movlw	-3
 17656  01317A  006F FF8C  F02A    	movff	plusw1,btemp
 17657  013180  5035               	movf	(btemp+11)^0,w,c
 17658  013182  5A2A               	subwfb	btemp^0,f,c
 17659  013184  0EFD               	movlw	-3
 17660  013186  0060  F0AB  FFE3   	movff	btemp,plusw1
 17661  01318C                     l17177:
 17662                           
 17663                           ;stkvar	_remyears @ sp[(-57)+37]
 17664                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17665  01318C  0EE4               	movlw	-28
 17666  01318E  006F FF8C  F032    	movff	plusw1,btemp+8
 17667  013194  0EE5               	movlw	-27
 17668  013196  006F FF8C  F033    	movff	plusw1,btemp+9
 17669  01319C  0EE6               	movlw	-26
 17670  01319E  006F FF8C  F034    	movff	plusw1,btemp+10
 17671  0131A4  0EE7               	movlw	-25
 17672  0131A6  006F FF8C  F035    	movff	plusw1,btemp+11
 17673  0131AC  0E02               	movlw	2
 17674  0131AE                     u17035:
 17675  0131AE  90D8               	bcf	status,0,c
 17676  0131B0  3632               	rlcf	(btemp+8)^0,f,c
 17677  0131B2  3633               	rlcf	(btemp+9)^0,f,c
 17678  0131B4  3634               	rlcf	(btemp+10)^0,f,c
 17679  0131B6  3635               	rlcf	(btemp+11)^0,f,c
 17680  0131B8  2EE8               	decfsz	wreg,f,c
 17681  0131BA  D7F9               	goto	u17035
 17682  0131BC  0E64               	movlw	100
 17683  0131BE  6EE6               	movwf	postinc1,c
 17684  0131C0  0E00               	movlw	0
 17685  0131C2  6EE6               	movwf	postinc1,c
 17686  0131C4  0E00               	movlw	0
 17687  0131C6  6EE6               	movwf	postinc1,c
 17688  0131C8  0E00               	movlw	0
 17689  0131CA  6EE6               	movwf	postinc1,c
 17690                           
 17691                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17692  0131CC  0EE4               	movlw	-28
 17693  0131CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17694  0131D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17695  0131DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17696  0131E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17697  0131E6  ECB8  F002         	call	___lmul	;wreg free
 17698  0131EA  5032               	movf	(btemp+8)^0,w,c
 17699  0131EC  242A               	addwf	btemp^0,w,c
 17700  0131EE  6E2E               	movwf	(btemp+4)^0,c
 17701  0131F0  5033               	movf	(btemp+9)^0,w,c
 17702  0131F2  202B               	addwfc	(btemp+1)^0,w,c
 17703  0131F4  6E2F               	movwf	(btemp+5)^0,c
 17704  0131F6  5034               	movf	(btemp+10)^0,w,c
 17705  0131F8  202C               	addwfc	(btemp+2)^0,w,c
 17706  0131FA  6E30               	movwf	(btemp+6)^0,c
 17707  0131FC  5035               	movf	(btemp+11)^0,w,c
 17708  0131FE  202D               	addwfc	(btemp+3)^0,w,c
 17709  013200  6E31               	movwf	(btemp+7)^0,c
 17710  013202  0EEC               	movlw	-20
 17711  013204  50E3               	movf	plusw1,w,c
 17712  013206  262E               	addwf	(btemp+4)^0,f,c
 17713  013208  0EED               	movlw	-19
 17714  01320A  50E3               	movf	plusw1,w,c
 17715  01320C  222F               	addwfc	(btemp+5)^0,f,c
 17716  01320E  0EEE               	movlw	-18
 17717  013210  50E3               	movf	plusw1,w,c
 17718  013212  2230               	addwfc	(btemp+6)^0,f,c
 17719  013214  0EEF               	movlw	-17
 17720  013216  50E3               	movf	plusw1,w,c
 17721  013218  2231               	addwfc	(btemp+7)^0,f,c
 17722  01321A  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 17723  013220  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 17724  013226  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 17725  01322C  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 17726  013232  6A3E               	clrf	(btemp+20)^0,c
 17727  013234  BE3D               	btfsc	(btemp+19)^0,7,c
 17728  013236  683E               	setf	(btemp+20)^0,c
 17729  013238  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 17730  01323E  0060  F0F8  F040   	movff	btemp+20,btemp+22
 17731  013244  0060  F0F8  F041   	movff	btemp+20,btemp+23
 17732  01324A  0E90               	movlw	144
 17733  01324C  6EE6               	movwf	postinc1,c
 17734  01324E  0E01               	movlw	1
 17735  013250  6EE6               	movwf	postinc1,c
 17736  013252  0E00               	movlw	0
 17737  013254  6EE6               	movwf	postinc1,c
 17738  013256  0E00               	movlw	0
 17739  013258  6EE6               	movwf	postinc1,c
 17740  01325A  0E00               	movlw	0
 17741  01325C  6EE6               	movwf	postinc1,c
 17742  01325E  0E00               	movlw	0
 17743  013260  6EE6               	movwf	postinc1,c
 17744  013262  0E00               	movlw	0
 17745  013264  6EE6               	movwf	postinc1,c
 17746  013266  0E00               	movlw	0
 17747  013268  6EE6               	movwf	postinc1,c
 17748                           
 17749                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 17750  01326A  0EEC               	movlw	-20
 17751  01326C  006F FF8C  F042    	movff	plusw1,btemp+24
 17752  013272  0EED               	movlw	-19
 17753  013274  006F FF8C  F043    	movff	plusw1,btemp+25
 17754  01327A  0EEE               	movlw	-18
 17755  01327C  006F FF8C  F044    	movff	plusw1,btemp+26
 17756  013282  0EEF               	movlw	-17
 17757  013284  006F FF8C  F045    	movff	plusw1,btemp+27
 17758  01328A  6A46               	clrf	(btemp+28)^0,c
 17759  01328C  BE45               	btfsc	(btemp+27)^0,7,c
 17760  01328E  6846               	setf	(btemp+28)^0,c
 17761  013290  0060  F118  F047   	movff	btemp+28,btemp+29
 17762  013296  0060  F118  F048   	movff	btemp+28,btemp+30
 17763  01329C  0060  F118  F049   	movff	btemp+28,btemp+31
 17764  0132A2  0060  F10B  FFE6   	movff	btemp+24,postinc1
 17765  0132A8  0060  F10F  FFE6   	movff	btemp+25,postinc1
 17766  0132AE  0060  F113  FFE6   	movff	btemp+26,postinc1
 17767  0132B4  0060  F117  FFE6   	movff	btemp+27,postinc1
 17768  0132BA  0060  F11B  FFE6   	movff	btemp+28,postinc1
 17769  0132C0  0060  F11F  FFE6   	movff	btemp+29,postinc1
 17770  0132C6  0060  F123  FFE6   	movff	btemp+30,postinc1
 17771  0132CC  0060  F127  FFE6   	movff	btemp+31,postinc1
 17772  0132D2  EC63  F0F8         	call	___omul	;wreg free
 17773  0132D6  52E5               	movf	postdec1,f,c
 17774  0132D8  006F FF9C  F049    	movff	indf1,btemp+31
 17775  0132DE  52E5               	movf	postdec1,f,c
 17776  0132E0  006F FF9C  F048    	movff	indf1,btemp+30
 17777  0132E6  52E5               	movf	postdec1,f,c
 17778  0132E8  006F FF9C  F047    	movff	indf1,btemp+29
 17779  0132EE  52E5               	movf	postdec1,f,c
 17780  0132F0  006F FF9C  F046    	movff	indf1,btemp+28
 17781  0132F6  52E5               	movf	postdec1,f,c
 17782  0132F8  006F FF9C  F045    	movff	indf1,btemp+27
 17783  0132FE  52E5               	movf	postdec1,f,c
 17784  013300  006F FF9C  F044    	movff	indf1,btemp+26
 17785  013306  52E5               	movf	postdec1,f,c
 17786  013308  006F FF9C  F043    	movff	indf1,btemp+25
 17787  01330E  52E5               	movf	postdec1,f,c
 17788  013310  006F FF9C  F042    	movff	indf1,btemp+24
 17789  013316  0EF8               	movlw	248
 17790  013318  26E1               	addwf	fsr1l,f,c
 17791  01331A  0EFF               	movlw	255
 17792  01331C  22E2               	addwfc	fsr1h,f,c
 17793  01331E  503A               	movf	(btemp+16)^0,w,c
 17794  013320  2442               	addwf	(btemp+24)^0,w,c
 17795  013322  6E32               	movwf	(btemp+8)^0,c
 17796  013324  503B               	movf	(btemp+17)^0,w,c
 17797  013326  2043               	addwfc	(btemp+25)^0,w,c
 17798  013328  6E33               	movwf	(btemp+9)^0,c
 17799  01332A  503C               	movf	(btemp+18)^0,w,c
 17800  01332C  2044               	addwfc	(btemp+26)^0,w,c
 17801  01332E  6E34               	movwf	(btemp+10)^0,c
 17802  013330  503D               	movf	(btemp+19)^0,w,c
 17803  013332  2045               	addwfc	(btemp+27)^0,w,c
 17804  013334  6E35               	movwf	(btemp+11)^0,c
 17805  013336  503E               	movf	(btemp+20)^0,w,c
 17806  013338  2046               	addwfc	(btemp+28)^0,w,c
 17807  01333A  6E36               	movwf	(btemp+12)^0,c
 17808  01333C  503F               	movf	(btemp+21)^0,w,c
 17809  01333E  2047               	addwfc	(btemp+29)^0,w,c
 17810  013340  6E37               	movwf	(btemp+13)^0,c
 17811  013342  5040               	movf	(btemp+22)^0,w,c
 17812  013344  2048               	addwfc	(btemp+30)^0,w,c
 17813  013346  6E38               	movwf	(btemp+14)^0,c
 17814  013348  5041               	movf	(btemp+23)^0,w,c
 17815  01334A  2049               	addwfc	(btemp+31)^0,w,c
 17816  01334C  6E39               	movwf	(btemp+15)^0,c
 17817                           
 17818                           ;stkvar	_years @ sp[(-57)+1]
 17819  01334E  0EC8               	movlw	-56
 17820  013350  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17821  013356  0EC9               	movlw	-55
 17822  013358  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17823  01335E  0ECA               	movlw	-54
 17824  013360  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17825  013366  0ECB               	movlw	-53
 17826  013368  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17827  01336E  0ECC               	movlw	-52
 17828  013370  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 17829  013376  0ECD               	movlw	-51
 17830  013378  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 17831  01337E  0ECE               	movlw	-50
 17832  013380  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 17833  013386  0ECF               	movlw	-49
 17834  013388  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 17835                           
 17836                           ;stkvar	_months @ sp[(-57)+49]
 17837  01338E  0EF8               	movlw	-8
 17838  013390  6AE3               	clrf	plusw1,c
 17839  013392  0EF9               	movlw	-7
 17840  013394  6AE3               	clrf	plusw1,c
 17841  013396  D030               	goto	l17185
 17842  013398                     l17181:
 17843                           
 17844                           ;stkvar	_remdays @ sp[(-57)+25]
 17845  013398  50E1               	movf	fsr1l,w,c
 17846  01339A  0FE0               	addlw	-32
 17847  01339C  6ED9               	movwf	fsr2l,c
 17848  01339E  50E2               	movf	fsr1h,w,c
 17849  0133A0  6EDA               	movwf	fsr2h,c
 17850  0133A2  0EFF               	movlw	255
 17851  0133A4  22DA               	addwfc	fsr2h,f,c
 17852                           
 17853                           ;stkvar	_months @ sp[(-57)+49]
 17854  0133A6  0EF8               	movlw	-8
 17855  0133A8  006F FF8C  F034    	movff	plusw1,btemp+10
 17856  0133AE  0EF9               	movlw	-7
 17857  0133B0  006F FF8C  F035    	movff	plusw1,btemp+11
 17858  0133B6  0E71               	movlw	low ___secs_to_tm@days_in_month
 17859  0133B8  2434               	addwf	(btemp+10)^0,w,c
 17860  0133BA  6EF6               	movwf	tblptrl,c
 17861  0133BC  0EF8               	movlw	high ___secs_to_tm@days_in_month
 17862  0133BE  2035               	addwfc	(btemp+11)^0,w,c
 17863  0133C0  6EF7               	movwf	tblptrh,c
 17864  0133C2                     	if	1	;There are 3 active tblptr bytes
 17865  0133C2  6AF8               	clrf	tblptru,c
 17866  0133C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17867  0133C6  22F8               	addwfc	tblptru,f,c
 17868  0133C8                     	endif
 17869  0133C8  0008               	tblrd		*
 17870  0133CA  50F5               	movf	tablat,w,c
 17871  0133CC  5EDE               	subwf	postinc2,f,c
 17872  0133CE  0E00               	movlw	0
 17873  0133D0  5ADE               	subwfb	postinc2,f,c
 17874  0133D2  5ADE               	subwfb	postinc2,f,c
 17875  0133D4  5ADE               	subwfb	postinc2,f,c
 17876                           
 17877                           ;stkvar	_months @ sp[(-57)+49]
 17878  0133D6  0EF8               	movlw	-8
 17879  0133D8  50E3               	movf	plusw1,w,c
 17880  0133DA  0F01               	addlw	1
 17881  0133DC  6E2A               	movwf	btemp^0,c
 17882  0133DE  0EF8               	movlw	-8
 17883  0133E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 17884  0133E6  6A2A               	clrf	btemp^0,c
 17885  0133E8  0EF9               	movlw	-7
 17886  0133EA  50E3               	movf	plusw1,w,c
 17887  0133EC  202A               	addwfc	btemp^0,w,c
 17888  0133EE  6E2A               	movwf	btemp^0,c
 17889  0133F0  0EF9               	movlw	-7
 17890  0133F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 17891  0133F8                     l17185:
 17892                           
 17893                           ;stkvar	_months @ sp[(-57)+49]
 17894  0133F8  0EF8               	movlw	-8
 17895  0133FA  006F FF8C  F034    	movff	plusw1,btemp+10
 17896  013400  0EF9               	movlw	-7
 17897  013402  006F FF8C  F035    	movff	plusw1,btemp+11
 17898  013408  0E71               	movlw	low ___secs_to_tm@days_in_month
 17899  01340A  2434               	addwf	(btemp+10)^0,w,c
 17900  01340C  6EF6               	movwf	tblptrl,c
 17901  01340E  0EF8               	movlw	high ___secs_to_tm@days_in_month
 17902  013410  2035               	addwfc	(btemp+11)^0,w,c
 17903  013412  6EF7               	movwf	tblptrh,c
 17904  013414                     	if	1	;There are 3 active tblptr bytes
 17905  013414  6AF8               	clrf	tblptru,c
 17906  013416  0E00               	movlw	low (__mediumconst shr (0+16))
 17907  013418  22F8               	addwfc	tblptru,f,c
 17908  01341A                     	endif
 17909  01341A  0008               	tblrd		*
 17910  01341C  006F FFD4  F035    	movff	tablat,btemp+11
 17911  013422  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 17912  013428  6A2F               	clrf	(btemp+5)^0,c
 17913  01342A  6A30               	clrf	(btemp+6)^0,c
 17914  01342C  6A31               	clrf	(btemp+7)^0,c
 17915                           
 17916                           ;stkvar	_remdays @ sp[(-57)+25]
 17917  01342E  0EE0               	movlw	-32
 17918  013430  006F FF8C  F02A    	movff	plusw1,btemp
 17919  013436  502E               	movf	(btemp+4)^0,w,c
 17920  013438  5C2A               	subwf	btemp^0,w,c
 17921  01343A  0EE1               	movlw	-31
 17922  01343C  006F FF8C  F02A    	movff	plusw1,btemp
 17923  013442  502F               	movf	(btemp+5)^0,w,c
 17924  013444  582A               	subwfb	btemp^0,w,c
 17925  013446  0EE2               	movlw	-30
 17926  013448  006F FF8C  F02A    	movff	plusw1,btemp
 17927  01344E  5030               	movf	(btemp+6)^0,w,c
 17928  013450  582A               	subwfb	btemp^0,w,c
 17929  013452  0EE3               	movlw	-29
 17930  013454  50E3               	movf	plusw1,w,c
 17931  013456  0A80               	xorlw	128
 17932  013458  6E2A               	movwf	btemp^0,c
 17933  01345A  5031               	movf	(btemp+7)^0,w,c
 17934  01345C  0A80               	xorlw	128
 17935  01345E  582A               	subwfb	btemp^0,w,c
 17936  013460  B0D8               	btfsc	status,0,c
 17937  013462  D79A               	goto	l17181
 17938                           
 17939                           ;stkvar	_months @ sp[(-57)+49]
 17940  013464  0EF9               	movlw	-7
 17941  013466  BEE3               	btfsc	plusw1,7,c
 17942  013468  D026               	goto	l17193
 17943  01346A  0EF9               	movlw	-7
 17944  01346C  50E3               	movf	plusw1,w,c
 17945  01346E  E108               	bnz	u17050
 17946  013470  0EF8               	movlw	-8
 17947  013472  006F FF8C  F02A    	movff	plusw1,btemp
 17948  013478  0E0A               	movlw	10
 17949  01347A  5E2A               	subwf	btemp^0,f,c
 17950  01347C  A0D8               	btfss	status,0,c
 17951  01347E  D01B               	goto	l17193
 17952  013480                     u17050:
 17953                           
 17954                           ;stkvar	_months @ sp[(-57)+49]
 17955  013480  50E1               	movf	fsr1l,w,c
 17956  013482  0FF8               	addlw	-8
 17957  013484  6ED9               	movwf	fsr2l,c
 17958  013486  50E2               	movf	fsr1h,w,c
 17959  013488  6EDA               	movwf	fsr2h,c
 17960  01348A  0EFF               	movlw	255
 17961  01348C  22DA               	addwfc	fsr2h,f,c
 17962  01348E  0EF4               	movlw	244
 17963  013490  26DE               	addwf	postinc2,f,c
 17964  013492  0EFF               	movlw	255
 17965  013494  22DD               	addwfc	postdec2,f,c
 17966                           
 17967                           ;stkvar	_years @ sp[(-57)+1]
 17968  013496  50E1               	movf	fsr1l,w,c
 17969  013498  0FC8               	addlw	-56
 17970  01349A  6ED9               	movwf	fsr2l,c
 17971  01349C  50E2               	movf	fsr1h,w,c
 17972  01349E  6EDA               	movwf	fsr2h,c
 17973  0134A0  0EFF               	movlw	255
 17974  0134A2  22DA               	addwfc	fsr2h,f,c
 17975  0134A4  2ADE               	incf	postinc2,f,c
 17976  0134A6  0E00               	movlw	0
 17977  0134A8  22DE               	addwfc	postinc2,f,c
 17978  0134AA  22DE               	addwfc	postinc2,f,c
 17979  0134AC  22DE               	addwfc	postinc2,f,c
 17980  0134AE  22DE               	addwfc	postinc2,f,c
 17981  0134B0  22DE               	addwfc	postinc2,f,c
 17982  0134B2  22DE               	addwfc	postinc2,f,c
 17983  0134B4  22DE               	addwfc	postinc2,f,c
 17984  0134B6                     l17193:
 17985                           
 17986                           ;stkvar	_years @ sp[(-57)+1]
 17987  0134B6  0EC8               	movlw	-56
 17988  0134B8  50E3               	movf	plusw1,w,c
 17989  0134BA  0F64               	addlw	100
 17990  0134BC  6E3A               	movwf	(btemp+16)^0,c
 17991  0134BE  0EC9               	movlw	-55
 17992  0134C0  006F FF8C  F03B    	movff	plusw1,btemp+17
 17993  0134C6  0E00               	movlw	0
 17994  0134C8  223B               	addwfc	(btemp+17)^0,f,c
 17995  0134CA  0ECA               	movlw	-54
 17996  0134CC  006F FF8C  F03C    	movff	plusw1,btemp+18
 17997  0134D2  0E00               	movlw	0
 17998  0134D4  223C               	addwfc	(btemp+18)^0,f,c
 17999  0134D6  0ECB               	movlw	-53
 18000  0134D8  006F FF8C  F03D    	movff	plusw1,btemp+19
 18001  0134DE  0E00               	movlw	0
 18002  0134E0  223D               	addwfc	(btemp+19)^0,f,c
 18003  0134E2  0ECC               	movlw	-52
 18004  0134E4  006F FF8C  F03E    	movff	plusw1,btemp+20
 18005  0134EA  0E00               	movlw	0
 18006  0134EC  223E               	addwfc	(btemp+20)^0,f,c
 18007  0134EE  0ECD               	movlw	-51
 18008  0134F0  006F FF8C  F03F    	movff	plusw1,btemp+21
 18009  0134F6  0E00               	movlw	0
 18010  0134F8  223F               	addwfc	(btemp+21)^0,f,c
 18011  0134FA  0ECE               	movlw	-50
 18012  0134FC  006F FF8C  F040    	movff	plusw1,btemp+22
 18013  013502  0E00               	movlw	0
 18014  013504  2240               	addwfc	(btemp+22)^0,f,c
 18015  013506  0ECF               	movlw	-49
 18016  013508  006F FF8C  F041    	movff	plusw1,btemp+23
 18017  01350E  0E00               	movlw	0
 18018  013510  2241               	addwfc	(btemp+23)^0,f,c
 18019  013512  BE41               	btfsc	(btemp+23)^0,7,c
 18020  013514  D00C               	goto	u17060
 18021  013516  5041               	movf	(btemp+23)^0,w,c
 18022  013518  1040               	iorwf	(btemp+22)^0,w,c
 18023  01351A  103F               	iorwf	(btemp+21)^0,w,c
 18024  01351C  103E               	iorwf	(btemp+20)^0,w,c
 18025  01351E  103D               	iorwf	(btemp+19)^0,w,c
 18026  013520  103C               	iorwf	(btemp+18)^0,w,c
 18027  013522  E103               	bnz	u17061
 18028  013524  0E80               	movlw	128
 18029  013526  5C3B               	subwf	(btemp+17)^0,w,c
 18030  013528  B0D8               	btfsc	status,0,c
 18031  01352A                     u17061:
 18032  01352A  EF01  F094         	goto	u16920
 18033  01352E                     u17060:
 18034                           
 18035                           ;stkvar	_years @ sp[(-57)+1]
 18036  01352E  0EC8               	movlw	-56
 18037  013530  50E3               	movf	plusw1,w,c
 18038  013532  0F64               	addlw	100
 18039  013534  6E3A               	movwf	(btemp+16)^0,c
 18040  013536  0EC9               	movlw	-55
 18041  013538  006F FF8C  F03B    	movff	plusw1,btemp+17
 18042  01353E  0E00               	movlw	0
 18043  013540  223B               	addwfc	(btemp+17)^0,f,c
 18044  013542  0ECA               	movlw	-54
 18045  013544  006F FF8C  F03C    	movff	plusw1,btemp+18
 18046  01354A  0E00               	movlw	0
 18047  01354C  223C               	addwfc	(btemp+18)^0,f,c
 18048  01354E  0ECB               	movlw	-53
 18049  013550  006F FF8C  F03D    	movff	plusw1,btemp+19
 18050  013556  0E00               	movlw	0
 18051  013558  223D               	addwfc	(btemp+19)^0,f,c
 18052  01355A  0ECC               	movlw	-52
 18053  01355C  006F FF8C  F03E    	movff	plusw1,btemp+20
 18054  013562  0E00               	movlw	0
 18055  013564  223E               	addwfc	(btemp+20)^0,f,c
 18056  013566  0ECD               	movlw	-51
 18057  013568  006F FF8C  F03F    	movff	plusw1,btemp+21
 18058  01356E  0E00               	movlw	0
 18059  013570  223F               	addwfc	(btemp+21)^0,f,c
 18060  013572  0ECE               	movlw	-50
 18061  013574  006F FF8C  F040    	movff	plusw1,btemp+22
 18062  01357A  0E00               	movlw	0
 18063  01357C  2240               	addwfc	(btemp+22)^0,f,c
 18064  01357E  0ECF               	movlw	-49
 18065  013580  006F FF8C  F041    	movff	plusw1,btemp+23
 18066  013586  0E00               	movlw	0
 18067  013588  2241               	addwfc	(btemp+23)^0,f,c
 18068  01358A  AE41               	btfss	(btemp+23)^0,7,c
 18069  01358C  D011               	goto	l17201
 18070  01358E  0E80               	movlw	128
 18071  013590  5C3B               	subwf	(btemp+17)^0,w,c
 18072  013592  0EFF               	movlw	255
 18073  013594  583C               	subwfb	(btemp+18)^0,w,c
 18074  013596  0EFF               	movlw	255
 18075  013598  583D               	subwfb	(btemp+19)^0,w,c
 18076  01359A  0EFF               	movlw	255
 18077  01359C  583E               	subwfb	(btemp+20)^0,w,c
 18078  01359E  0EFF               	movlw	255
 18079  0135A0  583F               	subwfb	(btemp+21)^0,w,c
 18080  0135A2  0EFF               	movlw	255
 18081  0135A4  5840               	subwfb	(btemp+22)^0,w,c
 18082  0135A6  0EFF               	movlw	255
 18083  0135A8  5841               	subwfb	(btemp+23)^0,w,c
 18084  0135AA  A0D8               	btfss	status,0,c
 18085  0135AC  EF01  F094         	goto	u16920
 18086  0135B0                     l17201:
 18087                           
 18088                           ;stkvar	_years @ sp[(-57)+1]
 18089  0135B0  0EC8               	movlw	-56
 18090  0135B2  50E3               	movf	plusw1,w,c
 18091  0135B4  0F64               	addlw	100
 18092  0135B6  6E34               	movwf	(btemp+10)^0,c
 18093  0135B8  0EC9               	movlw	-55
 18094  0135BA  006F FF8C  F035    	movff	plusw1,btemp+11
 18095  0135C0  0E00               	movlw	0
 18096  0135C2  2235               	addwfc	(btemp+11)^0,f,c
 18097                           
 18098                           ;stkvar	_tm @ sp[(-57)+-10]
 18099  0135C4  0EBD               	movlw	-67
 18100  0135C6  006F FF8C  F032    	movff	plusw1,btemp+8
 18101  0135CC  0EBE               	movlw	-66
 18102  0135CE  006F FF8C  F033    	movff	plusw1,btemp+9
 18103  0135D4  0E0A               	movlw	10
 18104  0135D6  2432               	addwf	(btemp+8)^0,w,c
 18105  0135D8  6ED9               	movwf	fsr2l,c
 18106  0135DA  0E00               	movlw	0
 18107  0135DC  2033               	addwfc	(btemp+9)^0,w,c
 18108  0135DE  6EDA               	movwf	fsr2h,c
 18109  0135E0  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18110  0135E6  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18111                           
 18112                           ;stkvar	_months @ sp[(-57)+49]
 18113  0135EC  0EF8               	movlw	-8
 18114  0135EE  50E3               	movf	plusw1,w,c
 18115  0135F0  0F02               	addlw	2
 18116  0135F2  6E34               	movwf	(btemp+10)^0,c
 18117  0135F4  0EF9               	movlw	-7
 18118  0135F6  006F FF8C  F035    	movff	plusw1,btemp+11
 18119  0135FC  0E00               	movlw	0
 18120  0135FE  2235               	addwfc	(btemp+11)^0,f,c
 18121                           
 18122                           ;stkvar	_tm @ sp[(-57)+-10]
 18123  013600  0EBD               	movlw	-67
 18124  013602  006F FF8C  F032    	movff	plusw1,btemp+8
 18125  013608  0EBE               	movlw	-66
 18126  01360A  006F FF8C  F033    	movff	plusw1,btemp+9
 18127  013610  0E08               	movlw	8
 18128  013612  2432               	addwf	(btemp+8)^0,w,c
 18129  013614  6ED9               	movwf	fsr2l,c
 18130  013616  0E00               	movlw	0
 18131  013618  2033               	addwfc	(btemp+9)^0,w,c
 18132  01361A  6EDA               	movwf	fsr2h,c
 18133  01361C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18134  013622  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18135                           
 18136                           ;stkvar	_remdays @ sp[(-57)+25]
 18137  013628  0EE0               	movlw	-32
 18138  01362A  50E3               	movf	plusw1,w,c
 18139  01362C  0F01               	addlw	1
 18140  01362E  6E34               	movwf	(btemp+10)^0,c
 18141  013630  0EE1               	movlw	-31
 18142  013632  006F FF8C  F035    	movff	plusw1,btemp+11
 18143  013638  0E00               	movlw	0
 18144  01363A  2235               	addwfc	(btemp+11)^0,f,c
 18145                           
 18146                           ;stkvar	_tm @ sp[(-57)+-10]
 18147  01363C  0EBD               	movlw	-67
 18148  01363E  006F FF8C  F032    	movff	plusw1,btemp+8
 18149  013644  0EBE               	movlw	-66
 18150  013646  006F FF8C  F033    	movff	plusw1,btemp+9
 18151  01364C  0E06               	movlw	6
 18152  01364E  2432               	addwf	(btemp+8)^0,w,c
 18153  013650  6ED9               	movwf	fsr2l,c
 18154  013652  0E00               	movlw	0
 18155  013654  2033               	addwfc	(btemp+9)^0,w,c
 18156  013656  6EDA               	movwf	fsr2h,c
 18157  013658  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18158  01365E  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18159                           
 18160                           ;stkvar	_wday @ sp[(-57)+55]
 18161  013664  50E1               	movf	fsr1l,w,c
 18162  013666  0FFE               	addlw	-2
 18163  013668  6ED9               	movwf	fsr2l,c
 18164  01366A  50E2               	movf	fsr1h,w,c
 18165  01366C  6EDA               	movwf	fsr2h,c
 18166  01366E  0EFF               	movlw	255
 18167  013670  22DA               	addwfc	fsr2h,f,c
 18168                           
 18169                           ;stkvar	_tm @ sp[(-57)+-10]
 18170  013672  0EBD               	movlw	-67
 18171  013674  006F FF8C  F034    	movff	plusw1,btemp+10
 18172  01367A  0EBE               	movlw	-66
 18173  01367C  006F FF8C  F035    	movff	plusw1,btemp+11
 18174  013682  0E0C               	movlw	12
 18175  013684  2434               	addwf	(btemp+10)^0,w,c
 18176  013686  6EE9               	movwf	fsr0l,c
 18177  013688  0E00               	movlw	0
 18178  01368A  2035               	addwfc	(btemp+11)^0,w,c
 18179  01368C  6EEA               	movwf	fsr0h,c
 18180  01368E  006F FF7B FFEE     	movff	postinc2,postinc0
 18181  013694  006F FF77 FFED     	movff	postdec2,postdec0
 18182                           
 18183                           ;stkvar	_yday @ sp[(-57)+53]
 18184  01369A  50E1               	movf	fsr1l,w,c
 18185  01369C  0FFC               	addlw	-4
 18186  01369E  6ED9               	movwf	fsr2l,c
 18187  0136A0  50E2               	movf	fsr1h,w,c
 18188  0136A2  6EDA               	movwf	fsr2h,c
 18189  0136A4  0EFF               	movlw	255
 18190  0136A6  22DA               	addwfc	fsr2h,f,c
 18191                           
 18192                           ;stkvar	_tm @ sp[(-57)+-10]
 18193  0136A8  0EBD               	movlw	-67
 18194  0136AA  006F FF8C  F034    	movff	plusw1,btemp+10
 18195  0136B0  0EBE               	movlw	-66
 18196  0136B2  006F FF8C  F035    	movff	plusw1,btemp+11
 18197  0136B8  0E0E               	movlw	14
 18198  0136BA  2434               	addwf	(btemp+10)^0,w,c
 18199  0136BC  6EE9               	movwf	fsr0l,c
 18200  0136BE  0E00               	movlw	0
 18201  0136C0  2035               	addwfc	(btemp+11)^0,w,c
 18202  0136C2  6EEA               	movwf	fsr0h,c
 18203  0136C4  006F FF7B FFEE     	movff	postinc2,postinc0
 18204  0136CA  006F FF77 FFED     	movff	postdec2,postdec0
 18205  0136D0  0E10               	movlw	16
 18206  0136D2  6EE6               	movwf	postinc1,c
 18207  0136D4  0E0E               	movlw	14
 18208  0136D6  6EE6               	movwf	postinc1,c
 18209  0136D8  0E00               	movlw	0
 18210  0136DA  6EE6               	movwf	postinc1,c
 18211  0136DC  0E00               	movlw	0
 18212  0136DE  6EE6               	movwf	postinc1,c
 18213                           
 18214                           ;stkvar	_remsecs @ sp[(-61)+41]
 18215  0136E0  0EEC               	movlw	-20
 18216  0136E2  006F FF8F FFE6     	movff	plusw1,postinc1
 18217  0136E8  006F FF8F FFE6     	movff	plusw1,postinc1
 18218  0136EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18219  0136F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18220  0136FA  EC18  F0F1         	call	___aldiv	;wreg free
 18221  0136FE  0060  F0A8  F034   	movff	btemp,btemp+10
 18222  013704  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18223                           
 18224                           ;stkvar	_tm @ sp[(-57)+-10]
 18225  01370A  0EBD               	movlw	-67
 18226  01370C  006F FF8C  F032    	movff	plusw1,btemp+8
 18227  013712  0EBE               	movlw	-66
 18228  013714  006F FF8C  F033    	movff	plusw1,btemp+9
 18229  01371A  0E04               	movlw	4
 18230  01371C  2432               	addwf	(btemp+8)^0,w,c
 18231  01371E  6ED9               	movwf	fsr2l,c
 18232  013720  0E00               	movlw	0
 18233  013722  2033               	addwfc	(btemp+9)^0,w,c
 18234  013724  6EDA               	movwf	fsr2h,c
 18235  013726  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18236  01372C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18237  013732  0E3C               	movlw	60
 18238  013734  6EE6               	movwf	postinc1,c
 18239  013736  0E00               	movlw	0
 18240  013738  6EE6               	movwf	postinc1,c
 18241  01373A  0E00               	movlw	0
 18242  01373C  6EE6               	movwf	postinc1,c
 18243  01373E  0E00               	movlw	0
 18244  013740  6EE6               	movwf	postinc1,c
 18245  013742  0E3C               	movlw	60
 18246  013744  6EE6               	movwf	postinc1,c
 18247  013746  0E00               	movlw	0
 18248  013748  6EE6               	movwf	postinc1,c
 18249  01374A  0E00               	movlw	0
 18250  01374C  6EE6               	movwf	postinc1,c
 18251  01374E  0E00               	movlw	0
 18252  013750  6EE6               	movwf	postinc1,c
 18253                           
 18254                           ;stkvar	_remsecs @ sp[(-65)+41]
 18255  013752  0EE8               	movlw	-24
 18256  013754  006F FF8F FFE6     	movff	plusw1,postinc1
 18257  01375A  006F FF8F FFE6     	movff	plusw1,postinc1
 18258  013760  006F FF8F FFE6     	movff	plusw1,postinc1
 18259  013766  006F FF8F FFE6     	movff	plusw1,postinc1
 18260  01376C  EC18  F0F1         	call	___aldiv	;wreg free
 18261  013770  0060  F0AB  FFE6   	movff	btemp,postinc1
 18262  013776  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18263  01377C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18264  013782  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18265  013788  EC9E  F0F5         	call	___almod	;wreg free
 18266  01378C  0060  F0A8  F034   	movff	btemp,btemp+10
 18267  013792  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18268                           
 18269                           ;stkvar	_tm @ sp[(-57)+-10]
 18270  013798  0EBD               	movlw	-67
 18271  01379A  006F FF8C  F032    	movff	plusw1,btemp+8
 18272  0137A0  0EBE               	movlw	-66
 18273  0137A2  006F FF8C  F033    	movff	plusw1,btemp+9
 18274  0137A8  0E02               	movlw	2
 18275  0137AA  2432               	addwf	(btemp+8)^0,w,c
 18276  0137AC  6ED9               	movwf	fsr2l,c
 18277  0137AE  0E00               	movlw	0
 18278  0137B0  2033               	addwfc	(btemp+9)^0,w,c
 18279  0137B2  6EDA               	movwf	fsr2h,c
 18280  0137B4  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18281  0137BA  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18282  0137C0  0E3C               	movlw	60
 18283  0137C2  6EE6               	movwf	postinc1,c
 18284  0137C4  0E00               	movlw	0
 18285  0137C6  6EE6               	movwf	postinc1,c
 18286  0137C8  0E00               	movlw	0
 18287  0137CA  6EE6               	movwf	postinc1,c
 18288  0137CC  0E00               	movlw	0
 18289  0137CE  6EE6               	movwf	postinc1,c
 18290                           
 18291                           ;stkvar	_remsecs @ sp[(-61)+41]
 18292  0137D0  0EEC               	movlw	-20
 18293  0137D2  006F FF8F FFE6     	movff	plusw1,postinc1
 18294  0137D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18295  0137DE  006F FF8F FFE6     	movff	plusw1,postinc1
 18296  0137E4  006F FF8F FFE6     	movff	plusw1,postinc1
 18297  0137EA  EC9E  F0F5         	call	___almod	;wreg free
 18298  0137EE  0060  F0A8  F034   	movff	btemp,btemp+10
 18299  0137F4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18300                           
 18301                           ;stkvar	_tm @ sp[(-57)+-10]
 18302  0137FA  0EBD               	movlw	-67
 18303  0137FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 18304  013802  0EBE               	movlw	-66
 18305  013804  006F FF8F FFDA     	movff	plusw1,fsr2h
 18306  01380A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18307  013810  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18308  013816  0E00               	movlw	0
 18309  013818  6E2A               	movwf	btemp^0,c
 18310  01381A  6A2B               	clrf	(btemp+1)^0,c
 18311  01381C  6A2C               	clrf	(btemp+2)^0,c
 18312  01381E  6A2D               	clrf	(btemp+3)^0,c
 18313  013820                     l3846:
 18314                           
 18315                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18316  013820  0EBD               	movlw	189
 18317  013822  26E1               	addwf	fsr1l,f,c
 18318  013824  0EFF               	movlw	255
 18319  013826  22E2               	addwfc	fsr1h,f,c
 18320  013828  0012               	return		;funcret
 18321  01382A                     __end_of___secs_to_tm:
 18322                           	opt callstack 0
 18323                           
 18324 ;; *************** function ___omul *****************
 18325 ;; Defined at:
 18326 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18327 ;; Parameters:    Size  Location     Type
 18328 ;;  multiplier      8  [STACK] unsigned long long 
 18329 ;;  multiplicand    8  [STACK] unsigned long long 
 18330 ;; Auto vars:     Size  Location     Type
 18331 ;;  product         8  [STACK] unsigned long long 
 18332 ;; Return value:  Size  Location     Type
 18333 ;;                  8  [STACK] unsigned long long 
 18334 ;; Registers used:
 18335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18336 ;; Tracked objects:
 18337 ;;		On entry : 0/0
 18338 ;;		On exit  : 0/0
 18339 ;;		Unchanged: 0/0
 18340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18345 ;;Total ram usage:        0 bytes
 18346 ;; Hardware stack levels used:    1
 18347 ;; Hardware stack levels required when called:   15
 18348 ;; This function calls:
 18349 ;;		Nothing
 18350 ;; This function is called by:
 18351 ;;		___secs_to_tm
 18352 ;;		___year_to_secs
 18353 ;; This function uses a reentrant model
 18354 ;;
 18355                           
 18356                           	psect	text48
 18357  01F0C6                     __ptext48:
 18358                           	opt callstack 0
 18359  01F0C6                     ___omul:
 18360                           	opt callstack 0
 18361                           
 18362                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18363  01F0C6  0E08               	movlw	8
 18364  01F0C8  26E1               	addwf	fsr1l,f,c
 18365  01F0CA  0E00               	movlw	0
 18366  01F0CC  22E2               	addwfc	fsr1h,f,c
 18367                           
 18368                           ;stkvar	_product @ sp[(-8)+0]
 18369                           
 18370                           ;incstack = 0
 18371  01F0CE  0E07               	movlw	7
 18372  01F0D0  6E2A               	movwf	btemp^0,c
 18373  01F0D2  0EF8               	movlw	-8
 18374  01F0D4                     u14511:
 18375  01F0D4  6AE3               	clrf	plusw1,c
 18376  01F0D6  2AE8               	incf	wreg,f,c
 18377  01F0D8  062A               	decf	btemp^0,f,c
 18378  01F0DA  E2FC               	bc	u14511
 18379  01F0DC                     l15621:
 18380                           
 18381                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18382  01F0DC  0EF0               	movlw	-16
 18383  01F0DE  A0E3               	btfss	plusw1,0,c
 18384  01F0E0  D050               	goto	l15625
 18385                           
 18386                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18387                           ;stkvar	_product @ sp[(-8)+0]
 18388  01F0E2  0EF8               	movlw	-8
 18389  01F0E4  50E3               	movf	plusw1,w,c
 18390  01F0E6  6E2A               	movwf	btemp^0,c
 18391  01F0E8  0EE8               	movlw	-24
 18392  01F0EA  50E3               	movf	plusw1,w,c
 18393  01F0EC  262A               	addwf	btemp^0,f,c
 18394  01F0EE  0EF8               	movlw	-8
 18395  01F0F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18396  01F0F6  0EF9               	movlw	-7
 18397  01F0F8  50E3               	movf	plusw1,w,c
 18398  01F0FA  6E2A               	movwf	btemp^0,c
 18399  01F0FC  0EE9               	movlw	-23
 18400  01F0FE  50E3               	movf	plusw1,w,c
 18401  01F100  222A               	addwfc	btemp^0,f,c
 18402  01F102  0EF9               	movlw	-7
 18403  01F104  0060  F0AB  FFE3   	movff	btemp,plusw1
 18404  01F10A  0EFA               	movlw	-6
 18405  01F10C  50E3               	movf	plusw1,w,c
 18406  01F10E  6E2A               	movwf	btemp^0,c
 18407  01F110  0EEA               	movlw	-22
 18408  01F112  50E3               	movf	plusw1,w,c
 18409  01F114  222A               	addwfc	btemp^0,f,c
 18410  01F116  0EFA               	movlw	-6
 18411  01F118  0060  F0AB  FFE3   	movff	btemp,plusw1
 18412  01F11E  0EFB               	movlw	-5
 18413  01F120  50E3               	movf	plusw1,w,c
 18414  01F122  6E2A               	movwf	btemp^0,c
 18415  01F124  0EEB               	movlw	-21
 18416  01F126  50E3               	movf	plusw1,w,c
 18417  01F128  222A               	addwfc	btemp^0,f,c
 18418  01F12A  0EFB               	movlw	-5
 18419  01F12C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18420  01F132  0EFC               	movlw	-4
 18421  01F134  50E3               	movf	plusw1,w,c
 18422  01F136  6E2A               	movwf	btemp^0,c
 18423  01F138  0EEC               	movlw	-20
 18424  01F13A  50E3               	movf	plusw1,w,c
 18425  01F13C  222A               	addwfc	btemp^0,f,c
 18426  01F13E  0EFC               	movlw	-4
 18427  01F140  0060  F0AB  FFE3   	movff	btemp,plusw1
 18428  01F146  0EFD               	movlw	-3
 18429  01F148  50E3               	movf	plusw1,w,c
 18430  01F14A  6E2A               	movwf	btemp^0,c
 18431  01F14C  0EED               	movlw	-19
 18432  01F14E  50E3               	movf	plusw1,w,c
 18433  01F150  222A               	addwfc	btemp^0,f,c
 18434  01F152  0EFD               	movlw	-3
 18435  01F154  0060  F0AB  FFE3   	movff	btemp,plusw1
 18436  01F15A  0EFE               	movlw	-2
 18437  01F15C  50E3               	movf	plusw1,w,c
 18438  01F15E  6E2A               	movwf	btemp^0,c
 18439  01F160  0EEE               	movlw	-18
 18440  01F162  50E3               	movf	plusw1,w,c
 18441  01F164  222A               	addwfc	btemp^0,f,c
 18442  01F166  0EFE               	movlw	-2
 18443  01F168  0060  F0AB  FFE3   	movff	btemp,plusw1
 18444  01F16E  0EFF               	movlw	-1
 18445  01F170  50E3               	movf	plusw1,w,c
 18446  01F172  6E2A               	movwf	btemp^0,c
 18447  01F174  0EEF               	movlw	-17
 18448  01F176  50E3               	movf	plusw1,w,c
 18449  01F178  222A               	addwfc	btemp^0,f,c
 18450  01F17A  0EFF               	movlw	-1
 18451  01F17C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18452  01F182                     l15625:
 18453                           
 18454                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18455  01F182  90D8               	bcf	status,0,c
 18456  01F184  0EE8               	movlw	-24
 18457  01F186  36E3               	rlcf	plusw1,f,c
 18458  01F188  0EE9               	movlw	-23
 18459  01F18A  36E3               	rlcf	plusw1,f,c
 18460  01F18C  0EEA               	movlw	-22
 18461  01F18E  36E3               	rlcf	plusw1,f,c
 18462  01F190  0EEB               	movlw	-21
 18463  01F192  36E3               	rlcf	plusw1,f,c
 18464  01F194  0EEC               	movlw	-20
 18465  01F196  36E3               	rlcf	plusw1,f,c
 18466  01F198  0EED               	movlw	-19
 18467  01F19A  36E3               	rlcf	plusw1,f,c
 18468  01F19C  0EEE               	movlw	-18
 18469  01F19E  36E3               	rlcf	plusw1,f,c
 18470  01F1A0  0EEF               	movlw	-17
 18471  01F1A2  36E3               	rlcf	plusw1,f,c
 18472                           
 18473                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18474  01F1A4  90D8               	bcf	status,0,c
 18475  01F1A6  0EF7               	movlw	-9
 18476  01F1A8  32E3               	rrcf	plusw1,f,c
 18477  01F1AA  0EF6               	movlw	-10
 18478  01F1AC  32E3               	rrcf	plusw1,f,c
 18479  01F1AE  0EF5               	movlw	-11
 18480  01F1B0  32E3               	rrcf	plusw1,f,c
 18481  01F1B2  0EF4               	movlw	-12
 18482  01F1B4  32E3               	rrcf	plusw1,f,c
 18483  01F1B6  0EF3               	movlw	-13
 18484  01F1B8  32E3               	rrcf	plusw1,f,c
 18485  01F1BA  0EF2               	movlw	-14
 18486  01F1BC  32E3               	rrcf	plusw1,f,c
 18487  01F1BE  0EF1               	movlw	-15
 18488  01F1C0  32E3               	rrcf	plusw1,f,c
 18489  01F1C2  0EF0               	movlw	-16
 18490  01F1C4  32E3               	rrcf	plusw1,f,c
 18491                           
 18492                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18493  01F1C6  0EF0               	movlw	-16
 18494  01F1C8  50E3               	movf	plusw1,w,c
 18495  01F1CA  E188               	bnz	l15621
 18496  01F1CC  0EF1               	movlw	-15
 18497  01F1CE  50E3               	movf	plusw1,w,c
 18498  01F1D0  E185               	bnz	l15621
 18499  01F1D2  0EF2               	movlw	-14
 18500  01F1D4  50E3               	movf	plusw1,w,c
 18501  01F1D6  E182               	bnz	l15621
 18502  01F1D8  0EF3               	movlw	-13
 18503  01F1DA  50E3               	movf	plusw1,w,c
 18504  01F1DC  E10C               	bnz	u14531
 18505  01F1DE  0EF4               	movlw	-12
 18506  01F1E0  50E3               	movf	plusw1,w,c
 18507  01F1E2  E109               	bnz	u14531
 18508  01F1E4  0EF5               	movlw	-11
 18509  01F1E6  50E3               	movf	plusw1,w,c
 18510  01F1E8  E106               	bnz	u14531
 18511  01F1EA  0EF6               	movlw	-10
 18512  01F1EC  50E3               	movf	plusw1,w,c
 18513  01F1EE  E103               	bnz	u14531
 18514  01F1F0  0EF7               	movlw	-9
 18515  01F1F2  50E3               	movf	plusw1,w,c
 18516  01F1F4  A4D8               	btfss	status,2,c
 18517  01F1F6                     u14531:
 18518  01F1F6  D772               	goto	l15621
 18519                           
 18520                           ;stkvar	_product @ sp[(-8)+0]
 18521  01F1F8  0EF8               	movlw	248
 18522  01F1FA  24E1               	addwf	fsr1l,w,c
 18523  01F1FC  6ED9               	movwf	fsr2l,c
 18524  01F1FE  0EFF               	movlw	255
 18525  01F200  20E2               	addwfc	fsr1h,w,c
 18526  01F202  6EDA               	movwf	fsr2h,c
 18527                           
 18528                           ;stkvar	?___omul @ sp[(-8)+-8]
 18529  01F204  0E08               	movlw	8
 18530  01F206  6E2A               	movwf	btemp^0,c
 18531  01F208  0EF0               	movlw	-16
 18532  01F20A                     us1454999:
 18533  01F20A  006F FF7B FFE3     	movff	postinc2,plusw1
 18534  01F210  28E8               	incf	wreg,w,c
 18535  01F212  2E2A               	decfsz	btemp^0,f,c
 18536  01F214  D7FA               	bra	us1454999
 18537                           
 18538                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18539  01F216  0EF8               	movlw	248
 18540  01F218  26E1               	addwf	fsr1l,f,c
 18541  01F21A  0EFF               	movlw	255
 18542  01F21C  22E2               	addwfc	fsr1h,f,c
 18543  01F21E  0012               	return		;funcret
 18544  01F220                     __end_of___omul:
 18545                           	opt callstack 0
 18546                           
 18547 ;; *************** function ___lmul *****************
 18548 ;; Defined at:
 18549 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18550 ;; Parameters:    Size  Location     Type
 18551 ;;  multiplier      4  [STACK] unsigned long 
 18552 ;;  multiplicand    4  [STACK] unsigned long 
 18553 ;; Auto vars:     Size  Location     Type
 18554 ;;  product         4  [STACK] unsigned long 
 18555 ;; Return value:  Size  Location     Type
 18556 ;;                  4  [STACK] unsigned long 
 18557 ;; Registers used:
 18558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18559 ;; Tracked objects:
 18560 ;;		On entry : 0/0
 18561 ;;		On exit  : 0/0
 18562 ;;		Unchanged: 0/0
 18563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18568 ;;Total ram usage:        0 bytes
 18569 ;; Hardware stack levels used:    1
 18570 ;; Hardware stack levels required when called:   15
 18571 ;; This function calls:
 18572 ;;		Nothing
 18573 ;; This function is called by:
 18574 ;;		___secs_to_tm
 18575 ;;		_rule_to_secs
 18576 ;;		___year_to_secs
 18577 ;; This function uses a reentrant model
 18578 ;;
 18579                           
 18580                           	psect	text49
 18581  000570                     __ptext49:
 18582                           	opt callstack 0
 18583  000570                     ___lmul:
 18584                           	opt callstack 0
 18585                           
 18586                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18587  000570  52E6               	movf	postinc1,f,c
 18588  000572  52E6               	movf	postinc1,f,c
 18589  000574  52E6               	movf	postinc1,f,c
 18590  000576  52E6               	movf	postinc1,f,c
 18591                           
 18592                           ;stkvar	_product @ sp[(-4)+0]
 18593                           
 18594                           ;incstack = 0
 18595  000578  0EFC               	movlw	-4
 18596  00057A  6AE3               	clrf	plusw1,c
 18597  00057C  0EFD               	movlw	-3
 18598  00057E  6AE3               	clrf	plusw1,c
 18599  000580  0EFE               	movlw	-2
 18600  000582  6AE3               	clrf	plusw1,c
 18601  000584  0EFF               	movlw	-1
 18602  000586  6AE3               	clrf	plusw1,c
 18603  000588                     l2730:
 18604                           
 18605                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18606  000588  0EF8               	movlw	-8
 18607  00058A  A0E3               	btfss	plusw1,0,c
 18608  00058C  D028               	goto	l15611
 18609                           
 18610                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18611                           ;stkvar	_product @ sp[(-4)+0]
 18612  00058E  0EFC               	movlw	-4
 18613  000590  50E3               	movf	plusw1,w,c
 18614  000592  6E2A               	movwf	btemp^0,c
 18615  000594  0EF4               	movlw	-12
 18616  000596  50E3               	movf	plusw1,w,c
 18617  000598  262A               	addwf	btemp^0,f,c
 18618  00059A  0EFC               	movlw	-4
 18619  00059C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18620  0005A2  0EFD               	movlw	-3
 18621  0005A4  50E3               	movf	plusw1,w,c
 18622  0005A6  6E2A               	movwf	btemp^0,c
 18623  0005A8  0EF5               	movlw	-11
 18624  0005AA  50E3               	movf	plusw1,w,c
 18625  0005AC  222A               	addwfc	btemp^0,f,c
 18626  0005AE  0EFD               	movlw	-3
 18627  0005B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18628  0005B6  0EFE               	movlw	-2
 18629  0005B8  50E3               	movf	plusw1,w,c
 18630  0005BA  6E2A               	movwf	btemp^0,c
 18631  0005BC  0EF6               	movlw	-10
 18632  0005BE  50E3               	movf	plusw1,w,c
 18633  0005C0  222A               	addwfc	btemp^0,f,c
 18634  0005C2  0EFE               	movlw	-2
 18635  0005C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18636  0005CA  0EFF               	movlw	-1
 18637  0005CC  50E3               	movf	plusw1,w,c
 18638  0005CE  6E2A               	movwf	btemp^0,c
 18639  0005D0  0EF7               	movlw	-9
 18640  0005D2  50E3               	movf	plusw1,w,c
 18641  0005D4  222A               	addwfc	btemp^0,f,c
 18642  0005D6  0EFF               	movlw	-1
 18643  0005D8  0060  F0AB  FFE3   	movff	btemp,plusw1
 18644  0005DE                     l15611:
 18645                           
 18646                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18647  0005DE  90D8               	bcf	status,0,c
 18648  0005E0  0EF4               	movlw	-12
 18649  0005E2  36E3               	rlcf	plusw1,f,c
 18650  0005E4  0EF5               	movlw	-11
 18651  0005E6  36E3               	rlcf	plusw1,f,c
 18652  0005E8  0EF6               	movlw	-10
 18653  0005EA  36E3               	rlcf	plusw1,f,c
 18654  0005EC  0EF7               	movlw	-9
 18655  0005EE  36E3               	rlcf	plusw1,f,c
 18656                           
 18657                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18658  0005F0  90D8               	bcf	status,0,c
 18659  0005F2  0EFB               	movlw	-5
 18660  0005F4  32E3               	rrcf	plusw1,f,c
 18661  0005F6  0EFA               	movlw	-6
 18662  0005F8  32E3               	rrcf	plusw1,f,c
 18663  0005FA  0EF9               	movlw	-7
 18664  0005FC  32E3               	rrcf	plusw1,f,c
 18665  0005FE  0EF8               	movlw	-8
 18666  000600  32E3               	rrcf	plusw1,f,c
 18667                           
 18668                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18669  000602  0EF8               	movlw	-8
 18670  000604  50E3               	movf	plusw1,w,c
 18671  000606  E1C0               	bnz	l2730
 18672  000608  0EF9               	movlw	-7
 18673  00060A  50E3               	movf	plusw1,w,c
 18674  00060C  E1BD               	bnz	l2730
 18675  00060E  0EFA               	movlw	-6
 18676  000610  50E3               	movf	plusw1,w,c
 18677  000612  E1BA               	bnz	l2730
 18678  000614  0EFB               	movlw	-5
 18679  000616  50E3               	movf	plusw1,w,c
 18680  000618  A4D8               	btfss	status,2,c
 18681  00061A  D7B6               	goto	l2730
 18682                           
 18683                           ;stkvar	_product @ sp[(-4)+0]
 18684  00061C  0EFC               	movlw	-4
 18685  00061E  006F FF8C  F02A    	movff	plusw1,btemp
 18686  000624  0EFD               	movlw	-3
 18687  000626  006F FF8C  F02B    	movff	plusw1,btemp+1
 18688  00062C  0EFE               	movlw	-2
 18689  00062E  006F FF8C  F02C    	movff	plusw1,btemp+2
 18690  000634  0EFF               	movlw	-1
 18691  000636  006F FF8C  F02D    	movff	plusw1,btemp+3
 18692                           
 18693                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18694  00063C  0EF4               	movlw	244
 18695  00063E  26E1               	addwf	fsr1l,f,c
 18696  000640  0EFF               	movlw	255
 18697  000642  22E2               	addwfc	fsr1h,f,c
 18698  000644  0012               	return		;funcret
 18699  000646                     __end_of___lmul:
 18700                           	opt callstack 0
 18701                           
 18702 ;; *************** function ___almod *****************
 18703 ;; Defined at:
 18704 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 18705 ;; Parameters:    Size  Location     Type
 18706 ;;  dividend        4  [STACK] long 
 18707 ;;  divisor         4  [STACK] long 
 18708 ;; Auto vars:     Size  Location     Type
 18709 ;;  sign            1  [STACK] unsigned char 
 18710 ;;  counter         1  [STACK] unsigned char 
 18711 ;; Return value:  Size  Location     Type
 18712 ;;                  4  [STACK] long 
 18713 ;; Registers used:
 18714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18715 ;; Tracked objects:
 18716 ;;		On entry : 0/39
 18717 ;;		On exit  : 0/0
 18718 ;;		Unchanged: 0/0
 18719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18724 ;;Total ram usage:        0 bytes
 18725 ;; Hardware stack levels used:    1
 18726 ;; Hardware stack levels required when called:   15
 18727 ;; This function calls:
 18728 ;;		Nothing
 18729 ;; This function is called by:
 18730 ;;		___secs_to_tm
 18731 ;; This function uses a reentrant model
 18732 ;;
 18733                           
 18734                           	psect	text50
 18735  01EB3C                     __ptext50:
 18736                           	opt callstack 0
 18737  01EB3C                     ___almod:
 18738                           	opt callstack 0
 18739                           
 18740                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18741  01EB3C  52E6               	movf	postinc1,f,c
 18742  01EB3E  52E6               	movf	postinc1,f,c
 18743                           
 18744                           ;stkvar	_sign @ sp[(-2)+0]
 18745                           
 18746                           ;incstack = 0
 18747  01EB40  0EFE               	movlw	-2
 18748  01EB42  6AE3               	clrf	plusw1,c
 18749                           
 18750                           ;stkvar	_dividend @ sp[(-2)+-4]
 18751  01EB44  0EFD               	movlw	-3
 18752  01EB46  AEE3               	btfss	plusw1,7,c
 18753  01EB48  D014               	goto	l12071
 18754                           
 18755                           ;stkvar	_dividend @ sp[(-2)+-4]
 18756                           ;stkvar	_dividend @ sp[(-2)+-4]
 18757  01EB4A  0EFA               	movlw	-6
 18758  01EB4C  6CE3               	negf	plusw1,c
 18759  01EB4E  0EFB               	movlw	-5
 18760  01EB50  1EE3               	comf	plusw1,f,c
 18761  01EB52  0EFC               	movlw	-4
 18762  01EB54  1EE3               	comf	plusw1,f,c
 18763  01EB56  0EFD               	movlw	-3
 18764  01EB58  1EE3               	comf	plusw1,f,c
 18765  01EB5A  E308               	bnc	u11270
 18766  01EB5C  0EFB               	movlw	-5
 18767  01EB5E  2AE3               	incf	plusw1,f,c
 18768  01EB60  E305               	bnc	u11270
 18769  01EB62  0EFC               	movlw	-4
 18770  01EB64  2AE3               	incf	plusw1,f,c
 18771  01EB66  E302               	bnc	u11270
 18772  01EB68  0EFD               	movlw	-3
 18773  01EB6A  2AE3               	incf	plusw1,f,c
 18774  01EB6C                     u11270:
 18775                           
 18776                           ;stkvar	_sign @ sp[(-2)+0]
 18777  01EB6C  0EFE               	movlw	-2
 18778  01EB6E  6AE3               	clrf	plusw1,c
 18779  01EB70  2AE3               	incf	plusw1,f,c
 18780  01EB72                     l12071:
 18781                           
 18782                           ;stkvar	_divisor @ sp[(-2)+-8]
 18783  01EB72  0EF9               	movlw	-7
 18784  01EB74  AEE3               	btfss	plusw1,7,c
 18785  01EB76  D011               	goto	u11290
 18786                           
 18787                           ;stkvar	_divisor @ sp[(-2)+-8]
 18788                           ;stkvar	_divisor @ sp[(-2)+-8]
 18789  01EB78  0EF6               	movlw	-10
 18790  01EB7A  6CE3               	negf	plusw1,c
 18791  01EB7C  0EF7               	movlw	-9
 18792  01EB7E  1EE3               	comf	plusw1,f,c
 18793  01EB80  0EF8               	movlw	-8
 18794  01EB82  1EE3               	comf	plusw1,f,c
 18795  01EB84  0EF9               	movlw	-7
 18796  01EB86  1EE3               	comf	plusw1,f,c
 18797  01EB88  E308               	bnc	u11290
 18798  01EB8A  0EF7               	movlw	-9
 18799  01EB8C  2AE3               	incf	plusw1,f,c
 18800  01EB8E  E305               	bnc	u11290
 18801  01EB90  0EF8               	movlw	-8
 18802  01EB92  2AE3               	incf	plusw1,f,c
 18803  01EB94  E302               	bnc	u11290
 18804  01EB96  0EF9               	movlw	-7
 18805  01EB98  2AE3               	incf	plusw1,f,c
 18806  01EB9A                     u11290:
 18807                           
 18808                           ;stkvar	_divisor @ sp[(-2)+-8]
 18809  01EB9A  0EF6               	movlw	-10
 18810  01EB9C  50E3               	movf	plusw1,w,c
 18811  01EB9E  E10A               	bnz	u11300
 18812  01EBA0  0EF7               	movlw	-9
 18813  01EBA2  50E3               	movf	plusw1,w,c
 18814  01EBA4  E107               	bnz	u11300
 18815  01EBA6  0EF8               	movlw	-8
 18816  01EBA8  50E3               	movf	plusw1,w,c
 18817  01EBAA  E104               	bnz	u11300
 18818  01EBAC  0EF9               	movlw	-7
 18819  01EBAE  50E3               	movf	plusw1,w,c
 18820  01EBB0  B4D8               	btfsc	status,2,c
 18821  01EBB2  D04D               	goto	u11330
 18822  01EBB4                     u11300:
 18823                           
 18824                           ;stkvar	_counter @ sp[(-2)+1]
 18825  01EBB4  0EFF               	movlw	-1
 18826  01EBB6  6AE3               	clrf	plusw1,c
 18827  01EBB8  D00A               	goto	L16
 18828  01EBBA                     l12079:
 18829                           
 18830                           ;stkvar	_divisor @ sp[(-2)+-8]
 18831  01EBBA  90D8               	bcf	status,0,c
 18832  01EBBC  0EF6               	movlw	-10
 18833  01EBBE  36E3               	rlcf	plusw1,f,c
 18834  01EBC0  0EF7               	movlw	-9
 18835  01EBC2  36E3               	rlcf	plusw1,f,c
 18836  01EBC4  0EF8               	movlw	-8
 18837  01EBC6  36E3               	rlcf	plusw1,f,c
 18838  01EBC8  0EF9               	movlw	-7
 18839  01EBCA  36E3               	rlcf	plusw1,f,c
 18840                           
 18841                           ;stkvar	_counter @ sp[(-2)+1]
 18842  01EBCC  0EFF               	movlw	-1
 18843  01EBCE                     L16:
 18844  01EBCE  2AE3               	incf	plusw1,f,c
 18845                           
 18846                           ;stkvar	_divisor @ sp[(-2)+-8]
 18847  01EBD0  0EF9               	movlw	-7
 18848  01EBD2  AEE3               	btfss	plusw1,7,c
 18849  01EBD4  D7F2               	goto	l12079
 18850  01EBD6                     u11310:
 18851                           
 18852                           ;stkvar	_divisor @ sp[(-2)+-8]
 18853                           ;stkvar	_dividend @ sp[(-2)+-4]
 18854  01EBD6  50E1               	movf	fsr1l,w,c
 18855  01EBD8  0FFA               	addlw	-6
 18856  01EBDA  6ED9               	movwf	fsr2l,c
 18857  01EBDC  50E2               	movf	fsr1h,w,c
 18858  01EBDE  6EDA               	movwf	fsr2h,c
 18859  01EBE0  0EFF               	movlw	255
 18860  01EBE2  22DA               	addwfc	fsr2h,f,c
 18861  01EBE4  0EF6               	movlw	-10
 18862  01EBE6  50E3               	movf	plusw1,w,c
 18863  01EBE8  5CDE               	subwf	postinc2,w,c
 18864  01EBEA  0EF7               	movlw	-9
 18865  01EBEC  50E3               	movf	plusw1,w,c
 18866  01EBEE  58DE               	subwfb	postinc2,w,c
 18867  01EBF0  0EF8               	movlw	-8
 18868  01EBF2  50E3               	movf	plusw1,w,c
 18869  01EBF4  58DE               	subwfb	postinc2,w,c
 18870  01EBF6  0EF9               	movlw	-7
 18871  01EBF8  50E3               	movf	plusw1,w,c
 18872  01EBFA  58DE               	subwfb	postinc2,w,c
 18873  01EBFC  A0D8               	btfss	status,0,c
 18874  01EBFE  D013               	goto	l12087
 18875                           
 18876                           ;stkvar	_divisor @ sp[(-2)+-8]
 18877                           ;stkvar	_dividend @ sp[(-2)+-4]
 18878  01EC00  50E1               	movf	fsr1l,w,c
 18879  01EC02  0FFA               	addlw	-6
 18880  01EC04  6ED9               	movwf	fsr2l,c
 18881  01EC06  50E2               	movf	fsr1h,w,c
 18882  01EC08  6EDA               	movwf	fsr2h,c
 18883  01EC0A  0EFF               	movlw	255
 18884  01EC0C  22DA               	addwfc	fsr2h,f,c
 18885  01EC0E  0EF6               	movlw	-10
 18886  01EC10  50E3               	movf	plusw1,w,c
 18887  01EC12  5EDE               	subwf	postinc2,f,c
 18888  01EC14  0EF7               	movlw	-9
 18889  01EC16  50E3               	movf	plusw1,w,c
 18890  01EC18  5ADE               	subwfb	postinc2,f,c
 18891  01EC1A  0EF8               	movlw	-8
 18892  01EC1C  50E3               	movf	plusw1,w,c
 18893  01EC1E  5ADE               	subwfb	postinc2,f,c
 18894  01EC20  0EF9               	movlw	-7
 18895  01EC22  50E3               	movf	plusw1,w,c
 18896  01EC24  5ADE               	subwfb	postinc2,f,c
 18897  01EC26                     l12087:
 18898                           
 18899                           ;stkvar	_divisor @ sp[(-2)+-8]
 18900  01EC26  90D8               	bcf	status,0,c
 18901  01EC28  0EF9               	movlw	-7
 18902  01EC2A  32E3               	rrcf	plusw1,f,c
 18903  01EC2C  0EF8               	movlw	-8
 18904  01EC2E  32E3               	rrcf	plusw1,f,c
 18905  01EC30  0EF7               	movlw	-9
 18906  01EC32  32E3               	rrcf	plusw1,f,c
 18907  01EC34  0EF6               	movlw	-10
 18908  01EC36  32E3               	rrcf	plusw1,f,c
 18909                           
 18910                           ;stkvar	_counter @ sp[(-2)+1]
 18911  01EC38  0EFF               	movlw	-1
 18912  01EC3A  50E3               	movf	plusw1,w,c
 18913  01EC3C  6E2A               	movwf	btemp^0,c
 18914  01EC3E  0E01               	movlw	1
 18915  01EC40  5E2A               	subwf	btemp^0,f,c
 18916  01EC42  0EFF               	movlw	-1
 18917  01EC44  0060  F0AB  FFE3   	movff	btemp,plusw1
 18918  01EC4A  A4D8               	btfss	status,2,c
 18919  01EC4C  D7C4               	goto	u11310
 18920  01EC4E                     u11330:
 18921                           
 18922                           ;stkvar	_sign @ sp[(-2)+0]
 18923  01EC4E  0EFE               	movlw	-2
 18924  01EC50  50E3               	movf	plusw1,w,c
 18925  01EC52  B4D8               	btfsc	status,2,c
 18926  01EC54  D011               	goto	u11350
 18927                           
 18928                           ;stkvar	_dividend @ sp[(-2)+-4]
 18929                           ;stkvar	_dividend @ sp[(-2)+-4]
 18930  01EC56  0EFA               	movlw	-6
 18931  01EC58  6CE3               	negf	plusw1,c
 18932  01EC5A  0EFB               	movlw	-5
 18933  01EC5C  1EE3               	comf	plusw1,f,c
 18934  01EC5E  0EFC               	movlw	-4
 18935  01EC60  1EE3               	comf	plusw1,f,c
 18936  01EC62  0EFD               	movlw	-3
 18937  01EC64  1EE3               	comf	plusw1,f,c
 18938  01EC66  E308               	bnc	u11350
 18939  01EC68  0EFB               	movlw	-5
 18940  01EC6A  2AE3               	incf	plusw1,f,c
 18941  01EC6C  E305               	bnc	u11350
 18942  01EC6E  0EFC               	movlw	-4
 18943  01EC70  2AE3               	incf	plusw1,f,c
 18944  01EC72  E302               	bnc	u11350
 18945  01EC74  0EFD               	movlw	-3
 18946  01EC76  2AE3               	incf	plusw1,f,c
 18947  01EC78                     u11350:
 18948                           
 18949                           ;stkvar	_dividend @ sp[(-2)+-4]
 18950  01EC78  0EFA               	movlw	-6
 18951  01EC7A  006F FF8C  F02A    	movff	plusw1,btemp
 18952  01EC80  0EFB               	movlw	-5
 18953  01EC82  006F FF8C  F02B    	movff	plusw1,btemp+1
 18954  01EC88  0EFC               	movlw	-4
 18955  01EC8A  006F FF8C  F02C    	movff	plusw1,btemp+2
 18956  01EC90  0EFD               	movlw	-3
 18957  01EC92  006F FF8C  F02D    	movff	plusw1,btemp+3
 18958                           
 18959                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 18960  01EC98  0EF6               	movlw	246
 18961  01EC9A  26E1               	addwf	fsr1l,f,c
 18962  01EC9C  0EFF               	movlw	255
 18963  01EC9E  22E2               	addwfc	fsr1h,f,c
 18964  01ECA0  0012               	return		;funcret
 18965  01ECA2                     __end_of___almod:
 18966                           	opt callstack 0
 18967                           
 18968 ;; *************** function ___aldiv *****************
 18969 ;; Defined at:
 18970 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 18971 ;; Parameters:    Size  Location     Type
 18972 ;;  dividend        4  [STACK] long 
 18973 ;;  divisor         4  [STACK] long 
 18974 ;; Auto vars:     Size  Location     Type
 18975 ;;  quotient        4  [STACK] long 
 18976 ;;  sign            1  [STACK] unsigned char 
 18977 ;;  counter         1  [STACK] unsigned char 
 18978 ;; Return value:  Size  Location     Type
 18979 ;;                  4  [STACK] long 
 18980 ;; Registers used:
 18981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18982 ;; Tracked objects:
 18983 ;;		On entry : 0/0
 18984 ;;		On exit  : 0/0
 18985 ;;		Unchanged: 0/0
 18986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18991 ;;Total ram usage:        0 bytes
 18992 ;; Hardware stack levels used:    1
 18993 ;; Hardware stack levels required when called:   15
 18994 ;; This function calls:
 18995 ;;		Nothing
 18996 ;; This function is called by:
 18997 ;;		___secs_to_tm
 18998 ;;		_rule_to_secs
 18999 ;; This function uses a reentrant model
 19000 ;;
 19001                           
 19002                           	psect	text51
 19003  01E230                     __ptext51:
 19004                           	opt callstack 0
 19005  01E230                     ___aldiv:
 19006                           	opt callstack 0
 19007                           
 19008                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19009  01E230  0E06               	movlw	6
 19010  01E232  26E1               	addwf	fsr1l,f,c
 19011  01E234  0E00               	movlw	0
 19012  01E236  22E2               	addwfc	fsr1h,f,c
 19013                           
 19014                           ;stkvar	_sign @ sp[(-6)+4]
 19015                           
 19016                           ;incstack = 0
 19017  01E238  0EFE               	movlw	-2
 19018  01E23A  6AE3               	clrf	plusw1,c
 19019                           
 19020                           ;stkvar	_divisor @ sp[(-6)+-8]
 19021  01E23C  0EF5               	movlw	-11
 19022  01E23E  AEE3               	btfss	plusw1,7,c
 19023  01E240  D014               	goto	l16355
 19024                           
 19025                           ;stkvar	_divisor @ sp[(-6)+-8]
 19026                           ;stkvar	_divisor @ sp[(-6)+-8]
 19027  01E242  0EF2               	movlw	-14
 19028  01E244  6CE3               	negf	plusw1,c
 19029  01E246  0EF3               	movlw	-13
 19030  01E248  1EE3               	comf	plusw1,f,c
 19031  01E24A  0EF4               	movlw	-12
 19032  01E24C  1EE3               	comf	plusw1,f,c
 19033  01E24E  0EF5               	movlw	-11
 19034  01E250  1EE3               	comf	plusw1,f,c
 19035  01E252  E308               	bnc	u15980
 19036  01E254  0EF3               	movlw	-13
 19037  01E256  2AE3               	incf	plusw1,f,c
 19038  01E258  E305               	bnc	u15980
 19039  01E25A  0EF4               	movlw	-12
 19040  01E25C  2AE3               	incf	plusw1,f,c
 19041  01E25E  E302               	bnc	u15980
 19042  01E260  0EF5               	movlw	-11
 19043  01E262  2AE3               	incf	plusw1,f,c
 19044  01E264                     u15980:
 19045                           
 19046                           ;stkvar	_sign @ sp[(-6)+4]
 19047  01E264  0EFE               	movlw	-2
 19048  01E266  6AE3               	clrf	plusw1,c
 19049  01E268  2AE3               	incf	plusw1,f,c
 19050  01E26A                     l16355:
 19051                           
 19052                           ;stkvar	_dividend @ sp[(-6)+-4]
 19053  01E26A  0EF9               	movlw	-7
 19054  01E26C  AEE3               	btfss	plusw1,7,c
 19055  01E26E  D013               	goto	l16361
 19056                           
 19057                           ;stkvar	_dividend @ sp[(-6)+-4]
 19058                           ;stkvar	_dividend @ sp[(-6)+-4]
 19059  01E270  0EF6               	movlw	-10
 19060  01E272  6CE3               	negf	plusw1,c
 19061  01E274  0EF7               	movlw	-9
 19062  01E276  1EE3               	comf	plusw1,f,c
 19063  01E278  0EF8               	movlw	-8
 19064  01E27A  1EE3               	comf	plusw1,f,c
 19065  01E27C  0EF9               	movlw	-7
 19066  01E27E  1EE3               	comf	plusw1,f,c
 19067  01E280  E308               	bnc	u16000
 19068  01E282  0EF7               	movlw	-9
 19069  01E284  2AE3               	incf	plusw1,f,c
 19070  01E286  E305               	bnc	u16000
 19071  01E288  0EF8               	movlw	-8
 19072  01E28A  2AE3               	incf	plusw1,f,c
 19073  01E28C  E302               	bnc	u16000
 19074  01E28E  0EF9               	movlw	-7
 19075  01E290  2AE3               	incf	plusw1,f,c
 19076  01E292                     u16000:
 19077                           
 19078                           ;stkvar	_sign @ sp[(-6)+4]
 19079  01E292  0EFE               	movlw	-2
 19080  01E294  70E3               	btg	plusw1,0,c
 19081  01E296                     l16361:
 19082                           
 19083                           ;stkvar	_quotient @ sp[(-6)+0]
 19084  01E296  0EFA               	movlw	-6
 19085  01E298  6AE3               	clrf	plusw1,c
 19086  01E29A  0EFB               	movlw	-5
 19087  01E29C  6AE3               	clrf	plusw1,c
 19088  01E29E  0EFC               	movlw	-4
 19089  01E2A0  6AE3               	clrf	plusw1,c
 19090  01E2A2  0EFD               	movlw	-3
 19091  01E2A4  6AE3               	clrf	plusw1,c
 19092                           
 19093                           ;stkvar	_divisor @ sp[(-6)+-8]
 19094  01E2A6  0EF2               	movlw	-14
 19095  01E2A8  50E3               	movf	plusw1,w,c
 19096  01E2AA  E10A               	bnz	u16010
 19097  01E2AC  0EF3               	movlw	-13
 19098  01E2AE  50E3               	movf	plusw1,w,c
 19099  01E2B0  E107               	bnz	u16010
 19100  01E2B2  0EF4               	movlw	-12
 19101  01E2B4  50E3               	movf	plusw1,w,c
 19102  01E2B6  E104               	bnz	u16010
 19103  01E2B8  0EF5               	movlw	-11
 19104  01E2BA  50E3               	movf	plusw1,w,c
 19105  01E2BC  B4D8               	btfsc	status,2,c
 19106  01E2BE  D058               	goto	u16040
 19107  01E2C0                     u16010:
 19108                           
 19109                           ;stkvar	_counter @ sp[(-6)+5]
 19110  01E2C0  0EFF               	movlw	-1
 19111  01E2C2  6AE3               	clrf	plusw1,c
 19112  01E2C4  D00A               	goto	L17
 19113  01E2C6                     l16367:
 19114                           
 19115                           ;stkvar	_divisor @ sp[(-6)+-8]
 19116  01E2C6  90D8               	bcf	status,0,c
 19117  01E2C8  0EF2               	movlw	-14
 19118  01E2CA  36E3               	rlcf	plusw1,f,c
 19119  01E2CC  0EF3               	movlw	-13
 19120  01E2CE  36E3               	rlcf	plusw1,f,c
 19121  01E2D0  0EF4               	movlw	-12
 19122  01E2D2  36E3               	rlcf	plusw1,f,c
 19123  01E2D4  0EF5               	movlw	-11
 19124  01E2D6  36E3               	rlcf	plusw1,f,c
 19125                           
 19126                           ;stkvar	_counter @ sp[(-6)+5]
 19127  01E2D8  0EFF               	movlw	-1
 19128  01E2DA                     L17:
 19129  01E2DA  2AE3               	incf	plusw1,f,c
 19130                           
 19131                           ;stkvar	_divisor @ sp[(-6)+-8]
 19132  01E2DC  0EF5               	movlw	-11
 19133  01E2DE  AEE3               	btfss	plusw1,7,c
 19134  01E2E0  D7F2               	goto	l16367
 19135  01E2E2                     u16020:
 19136                           
 19137                           ;stkvar	_quotient @ sp[(-6)+0]
 19138  01E2E2  90D8               	bcf	status,0,c
 19139  01E2E4  0EFA               	movlw	-6
 19140  01E2E6  36E3               	rlcf	plusw1,f,c
 19141  01E2E8  0EFB               	movlw	-5
 19142  01E2EA  36E3               	rlcf	plusw1,f,c
 19143  01E2EC  0EFC               	movlw	-4
 19144  01E2EE  36E3               	rlcf	plusw1,f,c
 19145  01E2F0  0EFD               	movlw	-3
 19146  01E2F2  36E3               	rlcf	plusw1,f,c
 19147                           
 19148                           ;stkvar	_divisor @ sp[(-6)+-8]
 19149                           ;stkvar	_dividend @ sp[(-6)+-4]
 19150  01E2F4  50E1               	movf	fsr1l,w,c
 19151  01E2F6  0FF6               	addlw	-10
 19152  01E2F8  6ED9               	movwf	fsr2l,c
 19153  01E2FA  50E2               	movf	fsr1h,w,c
 19154  01E2FC  6EDA               	movwf	fsr2h,c
 19155  01E2FE  0EFF               	movlw	255
 19156  01E300  22DA               	addwfc	fsr2h,f,c
 19157  01E302  0EF2               	movlw	-14
 19158  01E304  50E3               	movf	plusw1,w,c
 19159  01E306  5CDE               	subwf	postinc2,w,c
 19160  01E308  0EF3               	movlw	-13
 19161  01E30A  50E3               	movf	plusw1,w,c
 19162  01E30C  58DE               	subwfb	postinc2,w,c
 19163  01E30E  0EF4               	movlw	-12
 19164  01E310  50E3               	movf	plusw1,w,c
 19165  01E312  58DE               	subwfb	postinc2,w,c
 19166  01E314  0EF5               	movlw	-11
 19167  01E316  50E3               	movf	plusw1,w,c
 19168  01E318  58DE               	subwfb	postinc2,w,c
 19169  01E31A  A0D8               	btfss	status,0,c
 19170  01E31C  D015               	goto	l16379
 19171                           
 19172                           ;stkvar	_divisor @ sp[(-6)+-8]
 19173                           ;stkvar	_dividend @ sp[(-6)+-4]
 19174  01E31E  50E1               	movf	fsr1l,w,c
 19175  01E320  0FF6               	addlw	-10
 19176  01E322  6ED9               	movwf	fsr2l,c
 19177  01E324  50E2               	movf	fsr1h,w,c
 19178  01E326  6EDA               	movwf	fsr2h,c
 19179  01E328  0EFF               	movlw	255
 19180  01E32A  22DA               	addwfc	fsr2h,f,c
 19181  01E32C  0EF2               	movlw	-14
 19182  01E32E  50E3               	movf	plusw1,w,c
 19183  01E330  5EDE               	subwf	postinc2,f,c
 19184  01E332  0EF3               	movlw	-13
 19185  01E334  50E3               	movf	plusw1,w,c
 19186  01E336  5ADE               	subwfb	postinc2,f,c
 19187  01E338  0EF4               	movlw	-12
 19188  01E33A  50E3               	movf	plusw1,w,c
 19189  01E33C  5ADE               	subwfb	postinc2,f,c
 19190  01E33E  0EF5               	movlw	-11
 19191  01E340  50E3               	movf	plusw1,w,c
 19192  01E342  5ADE               	subwfb	postinc2,f,c
 19193                           
 19194                           ;stkvar	_quotient @ sp[(-6)+0]
 19195  01E344  0EFA               	movlw	-6
 19196  01E346  80E3               	bsf	plusw1,0,c
 19197  01E348                     l16379:
 19198                           
 19199                           ;stkvar	_divisor @ sp[(-6)+-8]
 19200  01E348  90D8               	bcf	status,0,c
 19201  01E34A  0EF5               	movlw	-11
 19202  01E34C  32E3               	rrcf	plusw1,f,c
 19203  01E34E  0EF4               	movlw	-12
 19204  01E350  32E3               	rrcf	plusw1,f,c
 19205  01E352  0EF3               	movlw	-13
 19206  01E354  32E3               	rrcf	plusw1,f,c
 19207  01E356  0EF2               	movlw	-14
 19208  01E358  32E3               	rrcf	plusw1,f,c
 19209                           
 19210                           ;stkvar	_counter @ sp[(-6)+5]
 19211  01E35A  0EFF               	movlw	-1
 19212  01E35C  50E3               	movf	plusw1,w,c
 19213  01E35E  6E2A               	movwf	btemp^0,c
 19214  01E360  0E01               	movlw	1
 19215  01E362  5E2A               	subwf	btemp^0,f,c
 19216  01E364  0EFF               	movlw	-1
 19217  01E366  0060  F0AB  FFE3   	movff	btemp,plusw1
 19218  01E36C  A4D8               	btfss	status,2,c
 19219  01E36E  D7B9               	goto	u16020
 19220  01E370                     u16040:
 19221                           
 19222                           ;stkvar	_sign @ sp[(-6)+4]
 19223  01E370  0EFE               	movlw	-2
 19224  01E372  50E3               	movf	plusw1,w,c
 19225  01E374  B4D8               	btfsc	status,2,c
 19226  01E376  D011               	goto	u16060
 19227                           
 19228                           ;stkvar	_quotient @ sp[(-6)+0]
 19229                           ;stkvar	_quotient @ sp[(-6)+0]
 19230  01E378  0EFA               	movlw	-6
 19231  01E37A  6CE3               	negf	plusw1,c
 19232  01E37C  0EFB               	movlw	-5
 19233  01E37E  1EE3               	comf	plusw1,f,c
 19234  01E380  0EFC               	movlw	-4
 19235  01E382  1EE3               	comf	plusw1,f,c
 19236  01E384  0EFD               	movlw	-3
 19237  01E386  1EE3               	comf	plusw1,f,c
 19238  01E388  E308               	bnc	u16060
 19239  01E38A  0EFB               	movlw	-5
 19240  01E38C  2AE3               	incf	plusw1,f,c
 19241  01E38E  E305               	bnc	u16060
 19242  01E390  0EFC               	movlw	-4
 19243  01E392  2AE3               	incf	plusw1,f,c
 19244  01E394  E302               	bnc	u16060
 19245  01E396  0EFD               	movlw	-3
 19246  01E398  2AE3               	incf	plusw1,f,c
 19247  01E39A                     u16060:
 19248                           
 19249                           ;stkvar	_quotient @ sp[(-6)+0]
 19250  01E39A  0EFA               	movlw	-6
 19251  01E39C  006F FF8C  F02A    	movff	plusw1,btemp
 19252  01E3A2  0EFB               	movlw	-5
 19253  01E3A4  006F FF8C  F02B    	movff	plusw1,btemp+1
 19254  01E3AA  0EFC               	movlw	-4
 19255  01E3AC  006F FF8C  F02C    	movff	plusw1,btemp+2
 19256  01E3B2  0EFD               	movlw	-3
 19257  01E3B4  006F FF8C  F02D    	movff	plusw1,btemp+3
 19258                           
 19259                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19260  01E3BA  0EF2               	movlw	242
 19261  01E3BC  26E1               	addwf	fsr1l,f,c
 19262  01E3BE  0EFF               	movlw	255
 19263  01E3C0  22E2               	addwfc	fsr1h,f,c
 19264  01E3C2  0012               	return		;funcret
 19265  01E3C4                     __end_of___aldiv:
 19266                           	opt callstack 0
 19267                           
 19268 ;; *************** function _asctime *****************
 19269 ;; Defined at:
 19270 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19271 ;; Parameters:    Size  Location     Type
 19272 ;;  tim             2  [STACK] PTR const struct tm
 19273 ;;		 -> localtime@tm(24), NULL(0), 
 19274 ;; Auto vars:     Size  Location     Type
 19275 ;;  cp              2  [STACK] PTR unsigned char 
 19276 ;;		 -> asctime@buf(27), 
 19277 ;;  s               2  [STACK] PTR const unsigned char 
 19278 ;;		 -> STR_141(37), STR_140(22), 
 19279 ;; Return value:  Size  Location     Type
 19280 ;;                  2  [STACK] PTR unsigned char 
 19281 ;; Registers used:
 19282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19283 ;; Tracked objects:
 19284 ;;		On entry : 0/39
 19285 ;;		On exit  : 0/0
 19286 ;;		Unchanged: 0/0
 19287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19292 ;;Total ram usage:        0 bytes
 19293 ;; Hardware stack levels used:    1
 19294 ;; Hardware stack levels required when called:   17
 19295 ;; This function calls:
 19296 ;;		___awdiv
 19297 ;;		___awmod
 19298 ;;		_put2d
 19299 ;; This function is called by:
 19300 ;;		_main
 19301 ;;		_display_history
 19302 ;; This function uses a reentrant model
 19303 ;;
 19304                           
 19305                           	psect	text52
 19306  018C28                     __ptext52:
 19307                           	opt callstack 0
 19308  018C28                     _asctime:
 19309                           	opt callstack 0
 19310                           
 19311                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19312  018C28  52E6               	movf	postinc1,f,c
 19313  018C2A  52E6               	movf	postinc1,f,c
 19314  018C2C  52E6               	movf	postinc1,f,c
 19315  018C2E  52E6               	movf	postinc1,f,c
 19316                           
 19317                           ;stkvar	_tim @ sp[(-4)+-2]
 19318                           
 19319                           ;incstack = 0
 19320  018C30  0EFA               	movlw	-6
 19321  018C32  006F FF8C  F034    	movff	plusw1,btemp+10
 19322  018C38  0EFB               	movlw	-5
 19323  018C3A  006F FF8C  F035    	movff	plusw1,btemp+11
 19324  018C40  0E0C               	movlw	12
 19325  018C42  2434               	addwf	(btemp+10)^0,w,c
 19326  018C44  6ED9               	movwf	fsr2l,c
 19327  018C46  0E00               	movlw	0
 19328  018C48  2035               	addwfc	(btemp+11)^0,w,c
 19329  018C4A  6EDA               	movwf	fsr2h,c
 19330  018C4C  006F FF78  F034    	movff	postinc2,btemp+10
 19331  018C52  006F FF74  F035    	movff	postdec2,btemp+11
 19332  018C58  0E03               	movlw	3
 19333  018C5A  0234               	mulwf	(btemp+10)^0,c
 19334  018C5C  006F FFCC  F032    	movff	prodl,btemp+8
 19335  018C62  006F FFD0  F033    	movff	prodh,btemp+9
 19336  018C68  0235               	mulwf	(btemp+11)^0,c
 19337  018C6A  50F3               	movf	prodl,w,c
 19338  018C6C  2633               	addwf	(btemp+9)^0,f,c
 19339  018C6E  0E75               	movlw	low STR_140
 19340  018C70  6E34               	movwf	(btemp+10)^0,c
 19341  018C72  0EFB               	movlw	high STR_140
 19342  018C74  6E35               	movwf	(btemp+11)^0,c
 19343  018C76  5032               	movf	(btemp+8)^0,w,c
 19344  018C78  2634               	addwf	(btemp+10)^0,f,c
 19345  018C7A  5033               	movf	(btemp+9)^0,w,c
 19346  018C7C  2235               	addwfc	(btemp+11)^0,f,c
 19347                           
 19348                           ;stkvar	_s @ sp[(-4)+2]
 19349  018C7E  0EFF               	movlw	-1
 19350  018C80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19351  018C86  0EFE               	movlw	-2
 19352  018C88  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19353                           
 19354                           ;stkvar	_cp @ sp[(-4)+0]
 19355  018C8E  0E03               	movlw	high asctime@buf
 19356  018C90  6E2A               	movwf	btemp^0,c
 19357  018C92  0EFD               	movlw	-3
 19358  018C94  0060  F0AB  FFE3   	movff	btemp,plusw1
 19359  018C9A  0EC4               	movlw	low asctime@buf
 19360  018C9C  6E2A               	movwf	btemp^0,c
 19361  018C9E  0EFC               	movlw	-4
 19362  018CA0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19363                           
 19364                           ;stkvar	_s @ sp[(-4)+2]
 19365  018CA6  50E1               	movf	fsr1l,w,c
 19366  018CA8  0FFE               	addlw	-2
 19367  018CAA  6ED9               	movwf	fsr2l,c
 19368  018CAC  50E2               	movf	fsr1h,w,c
 19369  018CAE  6EDA               	movwf	fsr2h,c
 19370  018CB0  0EFF               	movlw	255
 19371  018CB2  22DA               	addwfc	fsr2h,f,c
 19372  018CB4  006F FF7B FFF6     	movff	postinc2,tblptrl
 19373  018CBA  006F FF77 FFF7     	movff	postdec2,tblptrh
 19374  018CC0                     	if	0	;tblptru may be non-zero
 19375  018CC0                     	endif
 19376  018CC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19377  018CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 19378  018CC2  6EF8               	movwf	tblptru,c
 19379  018CC4                     	endif
 19380                           
 19381                           ;stkvar	_cp @ sp[(-4)+0]
 19382  018CC4  0EFC               	movlw	-4
 19383  018CC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19384  018CCC  0EFD               	movlw	-3
 19385  018CCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19386  018CD4  0008               	tblrd		*
 19387  018CD6  006F FFD7 FFDF     	movff	tablat,indf2
 19388                           
 19389                           ;stkvar	_s @ sp[(-4)+2]
 19390  018CDC  0EFE               	movlw	-2
 19391  018CDE  50E3               	movf	plusw1,w,c
 19392  018CE0  0F01               	addlw	1
 19393  018CE2  6E2A               	movwf	btemp^0,c
 19394  018CE4  0EFE               	movlw	-2
 19395  018CE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19396  018CEC  6A2A               	clrf	btemp^0,c
 19397  018CEE  0EFF               	movlw	-1
 19398  018CF0  50E3               	movf	plusw1,w,c
 19399  018CF2  202A               	addwfc	btemp^0,w,c
 19400  018CF4  6E2A               	movwf	btemp^0,c
 19401  018CF6  0EFF               	movlw	-1
 19402  018CF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19403                           
 19404                           ;stkvar	_cp @ sp[(-4)+0]
 19405  018CFE  0EFC               	movlw	-4
 19406  018D00  50E3               	movf	plusw1,w,c
 19407  018D02  0F01               	addlw	1
 19408  018D04  6E2A               	movwf	btemp^0,c
 19409  018D06  0EFC               	movlw	-4
 19410  018D08  0060  F0AB  FFE3   	movff	btemp,plusw1
 19411  018D0E  6A2A               	clrf	btemp^0,c
 19412  018D10  0EFD               	movlw	-3
 19413  018D12  50E3               	movf	plusw1,w,c
 19414  018D14  202A               	addwfc	btemp^0,w,c
 19415  018D16  6E2A               	movwf	btemp^0,c
 19416  018D18  0EFD               	movlw	-3
 19417  018D1A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19418                           
 19419                           ;stkvar	_s @ sp[(-4)+2]
 19420  018D20  50E1               	movf	fsr1l,w,c
 19421  018D22  0FFE               	addlw	-2
 19422  018D24  6ED9               	movwf	fsr2l,c
 19423  018D26  50E2               	movf	fsr1h,w,c
 19424  018D28  6EDA               	movwf	fsr2h,c
 19425  018D2A  0EFF               	movlw	255
 19426  018D2C  22DA               	addwfc	fsr2h,f,c
 19427  018D2E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19428  018D34  006F FF77 FFF7     	movff	postdec2,tblptrh
 19429  018D3A                     	if	0	;tblptru may be non-zero
 19430  018D3A                     	endif
 19431  018D3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19432  018D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 19433  018D3C  6EF8               	movwf	tblptru,c
 19434  018D3E                     	endif
 19435                           
 19436                           ;stkvar	_cp @ sp[(-4)+0]
 19437  018D3E  0EFC               	movlw	-4
 19438  018D40  006F FF8F FFD9     	movff	plusw1,fsr2l
 19439  018D46  0EFD               	movlw	-3
 19440  018D48  006F FF8F FFDA     	movff	plusw1,fsr2h
 19441  018D4E  0008               	tblrd		*
 19442  018D50  006F FFD7 FFDF     	movff	tablat,indf2
 19443                           
 19444                           ;stkvar	_s @ sp[(-4)+2]
 19445  018D56  0EFE               	movlw	-2
 19446  018D58  50E3               	movf	plusw1,w,c
 19447  018D5A  0F01               	addlw	1
 19448  018D5C  6E2A               	movwf	btemp^0,c
 19449  018D5E  0EFE               	movlw	-2
 19450  018D60  0060  F0AB  FFE3   	movff	btemp,plusw1
 19451  018D66  6A2A               	clrf	btemp^0,c
 19452  018D68  0EFF               	movlw	-1
 19453  018D6A  50E3               	movf	plusw1,w,c
 19454  018D6C  202A               	addwfc	btemp^0,w,c
 19455  018D6E  6E2A               	movwf	btemp^0,c
 19456  018D70  0EFF               	movlw	-1
 19457  018D72  0060  F0AB  FFE3   	movff	btemp,plusw1
 19458                           
 19459                           ;stkvar	_cp @ sp[(-4)+0]
 19460  018D78  0EFC               	movlw	-4
 19461  018D7A  50E3               	movf	plusw1,w,c
 19462  018D7C  0F01               	addlw	1
 19463  018D7E  6E2A               	movwf	btemp^0,c
 19464  018D80  0EFC               	movlw	-4
 19465  018D82  0060  F0AB  FFE3   	movff	btemp,plusw1
 19466  018D88  6A2A               	clrf	btemp^0,c
 19467  018D8A  0EFD               	movlw	-3
 19468  018D8C  50E3               	movf	plusw1,w,c
 19469  018D8E  202A               	addwfc	btemp^0,w,c
 19470  018D90  6E2A               	movwf	btemp^0,c
 19471  018D92  0EFD               	movlw	-3
 19472  018D94  0060  F0AB  FFE3   	movff	btemp,plusw1
 19473                           
 19474                           ;stkvar	_s @ sp[(-4)+2]
 19475  018D9A  50E1               	movf	fsr1l,w,c
 19476  018D9C  0FFE               	addlw	-2
 19477  018D9E  6ED9               	movwf	fsr2l,c
 19478  018DA0  50E2               	movf	fsr1h,w,c
 19479  018DA2  6EDA               	movwf	fsr2h,c
 19480  018DA4  0EFF               	movlw	255
 19481  018DA6  22DA               	addwfc	fsr2h,f,c
 19482  018DA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 19483  018DAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 19484  018DB4                     	if	0	;tblptru may be non-zero
 19485  018DB4                     	endif
 19486  018DB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19487  018DB4  0E00               	movlw	low (__mediumconst shr (0+16))
 19488  018DB6  6EF8               	movwf	tblptru,c
 19489  018DB8                     	endif
 19490                           
 19491                           ;stkvar	_cp @ sp[(-4)+0]
 19492  018DB8  0EFC               	movlw	-4
 19493  018DBA  006F FF8F FFD9     	movff	plusw1,fsr2l
 19494  018DC0  0EFD               	movlw	-3
 19495  018DC2  006F FF8F FFDA     	movff	plusw1,fsr2h
 19496  018DC8  0008               	tblrd		*
 19497  018DCA  006F FFD7 FFDF     	movff	tablat,indf2
 19498                           
 19499                           ;stkvar	_cp @ sp[(-4)+0]
 19500  018DD0  0EFC               	movlw	-4
 19501  018DD2  50E3               	movf	plusw1,w,c
 19502  018DD4  0F01               	addlw	1
 19503  018DD6  6E2A               	movwf	btemp^0,c
 19504  018DD8  0EFC               	movlw	-4
 19505  018DDA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19506  018DE0  6A2A               	clrf	btemp^0,c
 19507  018DE2  0EFD               	movlw	-3
 19508  018DE4  50E3               	movf	plusw1,w,c
 19509  018DE6  202A               	addwfc	btemp^0,w,c
 19510  018DE8  6E2A               	movwf	btemp^0,c
 19511  018DEA  0EFD               	movlw	-3
 19512  018DEC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19513                           
 19514                           ;stkvar	_cp @ sp[(-4)+0]
 19515  018DF2  0EFC               	movlw	-4
 19516  018DF4  006F FF8F FFD9     	movff	plusw1,fsr2l
 19517  018DFA  0EFD               	movlw	-3
 19518  018DFC  006F FF8F FFDA     	movff	plusw1,fsr2h
 19519  018E02  0E20               	movlw	32
 19520  018E04  6EDF               	movwf	indf2,c
 19521                           
 19522                           ;stkvar	_cp @ sp[(-4)+0]
 19523  018E06  0EFC               	movlw	-4
 19524  018E08  50E3               	movf	plusw1,w,c
 19525  018E0A  0F01               	addlw	1
 19526  018E0C  6E2A               	movwf	btemp^0,c
 19527  018E0E  0EFC               	movlw	-4
 19528  018E10  0060  F0AB  FFE3   	movff	btemp,plusw1
 19529  018E16  6A2A               	clrf	btemp^0,c
 19530  018E18  0EFD               	movlw	-3
 19531  018E1A  50E3               	movf	plusw1,w,c
 19532  018E1C  202A               	addwfc	btemp^0,w,c
 19533  018E1E  6E2A               	movwf	btemp^0,c
 19534  018E20  0EFD               	movlw	-3
 19535  018E22  0060  F0AB  FFE3   	movff	btemp,plusw1
 19536                           
 19537                           ;stkvar	_tim @ sp[(-4)+-2]
 19538  018E28  0EFA               	movlw	-6
 19539  018E2A  006F FF8C  F034    	movff	plusw1,btemp+10
 19540  018E30  0EFB               	movlw	-5
 19541  018E32  006F FF8C  F035    	movff	plusw1,btemp+11
 19542  018E38  0E08               	movlw	8
 19543  018E3A  2434               	addwf	(btemp+10)^0,w,c
 19544  018E3C  6ED9               	movwf	fsr2l,c
 19545  018E3E  0E00               	movlw	0
 19546  018E40  2035               	addwfc	(btemp+11)^0,w,c
 19547  018E42  6EDA               	movwf	fsr2h,c
 19548  018E44  006F FF78  F034    	movff	postinc2,btemp+10
 19549  018E4A  006F FF74  F035    	movff	postdec2,btemp+11
 19550  018E50  0E03               	movlw	3
 19551  018E52  0234               	mulwf	(btemp+10)^0,c
 19552  018E54  006F FFCC  F032    	movff	prodl,btemp+8
 19553  018E5A  006F FFD0  F033    	movff	prodh,btemp+9
 19554  018E60  0235               	mulwf	(btemp+11)^0,c
 19555  018E62  50F3               	movf	prodl,w,c
 19556  018E64  2633               	addwf	(btemp+9)^0,f,c
 19557  018E66  0E3C               	movlw	low STR_141
 19558  018E68  6E34               	movwf	(btemp+10)^0,c
 19559  018E6A  0EFA               	movlw	high STR_141
 19560  018E6C  6E35               	movwf	(btemp+11)^0,c
 19561  018E6E  5032               	movf	(btemp+8)^0,w,c
 19562  018E70  2634               	addwf	(btemp+10)^0,f,c
 19563  018E72  5033               	movf	(btemp+9)^0,w,c
 19564  018E74  2235               	addwfc	(btemp+11)^0,f,c
 19565                           
 19566                           ;stkvar	_s @ sp[(-4)+2]
 19567  018E76  0EFF               	movlw	-1
 19568  018E78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19569  018E7E  0EFE               	movlw	-2
 19570  018E80  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19571                           
 19572                           ;stkvar	_s @ sp[(-4)+2]
 19573  018E86  50E1               	movf	fsr1l,w,c
 19574  018E88  0FFE               	addlw	-2
 19575  018E8A  6ED9               	movwf	fsr2l,c
 19576  018E8C  50E2               	movf	fsr1h,w,c
 19577  018E8E  6EDA               	movwf	fsr2h,c
 19578  018E90  0EFF               	movlw	255
 19579  018E92  22DA               	addwfc	fsr2h,f,c
 19580  018E94  006F FF7B FFF6     	movff	postinc2,tblptrl
 19581  018E9A  006F FF77 FFF7     	movff	postdec2,tblptrh
 19582  018EA0                     	if	0	;tblptru may be non-zero
 19583  018EA0                     	endif
 19584  018EA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19585  018EA0  0E00               	movlw	low (__mediumconst shr (0+16))
 19586  018EA2  6EF8               	movwf	tblptru,c
 19587  018EA4                     	endif
 19588                           
 19589                           ;stkvar	_cp @ sp[(-4)+0]
 19590  018EA4  0EFC               	movlw	-4
 19591  018EA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19592  018EAC  0EFD               	movlw	-3
 19593  018EAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19594  018EB4  0008               	tblrd		*
 19595  018EB6  006F FFD7 FFDF     	movff	tablat,indf2
 19596                           
 19597                           ;stkvar	_s @ sp[(-4)+2]
 19598  018EBC  0EFE               	movlw	-2
 19599  018EBE  50E3               	movf	plusw1,w,c
 19600  018EC0  0F01               	addlw	1
 19601  018EC2  6E2A               	movwf	btemp^0,c
 19602  018EC4  0EFE               	movlw	-2
 19603  018EC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19604  018ECC  6A2A               	clrf	btemp^0,c
 19605  018ECE  0EFF               	movlw	-1
 19606  018ED0  50E3               	movf	plusw1,w,c
 19607  018ED2  202A               	addwfc	btemp^0,w,c
 19608  018ED4  6E2A               	movwf	btemp^0,c
 19609  018ED6  0EFF               	movlw	-1
 19610  018ED8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19611                           
 19612                           ;stkvar	_cp @ sp[(-4)+0]
 19613  018EDE  0EFC               	movlw	-4
 19614  018EE0  50E3               	movf	plusw1,w,c
 19615  018EE2  0F01               	addlw	1
 19616  018EE4  6E2A               	movwf	btemp^0,c
 19617  018EE6  0EFC               	movlw	-4
 19618  018EE8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19619  018EEE  6A2A               	clrf	btemp^0,c
 19620  018EF0  0EFD               	movlw	-3
 19621  018EF2  50E3               	movf	plusw1,w,c
 19622  018EF4  202A               	addwfc	btemp^0,w,c
 19623  018EF6  6E2A               	movwf	btemp^0,c
 19624  018EF8  0EFD               	movlw	-3
 19625  018EFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19626                           
 19627                           ;stkvar	_s @ sp[(-4)+2]
 19628  018F00  50E1               	movf	fsr1l,w,c
 19629  018F02  0FFE               	addlw	-2
 19630  018F04  6ED9               	movwf	fsr2l,c
 19631  018F06  50E2               	movf	fsr1h,w,c
 19632  018F08  6EDA               	movwf	fsr2h,c
 19633  018F0A  0EFF               	movlw	255
 19634  018F0C  22DA               	addwfc	fsr2h,f,c
 19635  018F0E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19636  018F14  006F FF77 FFF7     	movff	postdec2,tblptrh
 19637  018F1A                     	if	0	;tblptru may be non-zero
 19638  018F1A                     	endif
 19639  018F1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19640  018F1A  0E00               	movlw	low (__mediumconst shr (0+16))
 19641  018F1C  6EF8               	movwf	tblptru,c
 19642  018F1E                     	endif
 19643                           
 19644                           ;stkvar	_cp @ sp[(-4)+0]
 19645  018F1E  0EFC               	movlw	-4
 19646  018F20  006F FF8F FFD9     	movff	plusw1,fsr2l
 19647  018F26  0EFD               	movlw	-3
 19648  018F28  006F FF8F FFDA     	movff	plusw1,fsr2h
 19649  018F2E  0008               	tblrd		*
 19650  018F30  006F FFD7 FFDF     	movff	tablat,indf2
 19651                           
 19652                           ;stkvar	_s @ sp[(-4)+2]
 19653  018F36  0EFE               	movlw	-2
 19654  018F38  50E3               	movf	plusw1,w,c
 19655  018F3A  0F01               	addlw	1
 19656  018F3C  6E2A               	movwf	btemp^0,c
 19657  018F3E  0EFE               	movlw	-2
 19658  018F40  0060  F0AB  FFE3   	movff	btemp,plusw1
 19659  018F46  6A2A               	clrf	btemp^0,c
 19660  018F48  0EFF               	movlw	-1
 19661  018F4A  50E3               	movf	plusw1,w,c
 19662  018F4C  202A               	addwfc	btemp^0,w,c
 19663  018F4E  6E2A               	movwf	btemp^0,c
 19664  018F50  0EFF               	movlw	-1
 19665  018F52  0060  F0AB  FFE3   	movff	btemp,plusw1
 19666                           
 19667                           ;stkvar	_cp @ sp[(-4)+0]
 19668  018F58  0EFC               	movlw	-4
 19669  018F5A  50E3               	movf	plusw1,w,c
 19670  018F5C  0F01               	addlw	1
 19671  018F5E  6E2A               	movwf	btemp^0,c
 19672  018F60  0EFC               	movlw	-4
 19673  018F62  0060  F0AB  FFE3   	movff	btemp,plusw1
 19674  018F68  6A2A               	clrf	btemp^0,c
 19675  018F6A  0EFD               	movlw	-3
 19676  018F6C  50E3               	movf	plusw1,w,c
 19677  018F6E  202A               	addwfc	btemp^0,w,c
 19678  018F70  6E2A               	movwf	btemp^0,c
 19679  018F72  0EFD               	movlw	-3
 19680  018F74  0060  F0AB  FFE3   	movff	btemp,plusw1
 19681                           
 19682                           ;stkvar	_s @ sp[(-4)+2]
 19683  018F7A  50E1               	movf	fsr1l,w,c
 19684  018F7C  0FFE               	addlw	-2
 19685  018F7E  6ED9               	movwf	fsr2l,c
 19686  018F80  50E2               	movf	fsr1h,w,c
 19687  018F82  6EDA               	movwf	fsr2h,c
 19688  018F84  0EFF               	movlw	255
 19689  018F86  22DA               	addwfc	fsr2h,f,c
 19690  018F88  006F FF7B FFF6     	movff	postinc2,tblptrl
 19691  018F8E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19692  018F94                     	if	0	;tblptru may be non-zero
 19693  018F94                     	endif
 19694  018F94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19695  018F94  0E00               	movlw	low (__mediumconst shr (0+16))
 19696  018F96  6EF8               	movwf	tblptru,c
 19697  018F98                     	endif
 19698                           
 19699                           ;stkvar	_cp @ sp[(-4)+0]
 19700  018F98  0EFC               	movlw	-4
 19701  018F9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 19702  018FA0  0EFD               	movlw	-3
 19703  018FA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 19704  018FA8  0008               	tblrd		*
 19705  018FAA  006F FFD7 FFDF     	movff	tablat,indf2
 19706  018FB0  0E20               	movlw	32
 19707  018FB2  0103               	movlb	3	; () banked
 19708  018FB4  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 19709                           
 19710                           ; BSR set to: 3
 19711  018FB6  0E20               	movlw	32
 19712  018FB8  6EE6               	movwf	postinc1,c
 19713  018FBA  0E20               	movlw	32
 19714  018FBC  6EE6               	movwf	postinc1,c
 19715                           
 19716                           ;stkvar	_tim @ sp[(-6)+-2]
 19717  018FBE  0EF8               	movlw	-8
 19718  018FC0  006F FF8C  F034    	movff	plusw1,btemp+10
 19719  018FC6  0EF9               	movlw	-7
 19720  018FC8  006F FF8C  F035    	movff	plusw1,btemp+11
 19721  018FCE  0E06               	movlw	6
 19722  018FD0  2434               	addwf	(btemp+10)^0,w,c
 19723  018FD2  6ED9               	movwf	fsr2l,c
 19724  018FD4  0E00               	movlw	0
 19725  018FD6  2035               	addwfc	(btemp+11)^0,w,c
 19726  018FD8  6EDA               	movwf	fsr2h,c
 19727  018FDA  50DF               	movf	indf2,w,c
 19728  018FDC  6EE6               	movwf	postinc1,c
 19729  018FDE  0ECE               	movlw	low (asctime@buf+10)
 19730  018FE0  6EE6               	movwf	postinc1,c
 19731  018FE2  0E03               	movlw	high (asctime@buf+10)
 19732  018FE4  6EE6               	movwf	postinc1,c
 19733  018FE6  ECD2  F0FC         	call	_put2d	;wreg free
 19734  018FEA  0E3A               	movlw	58
 19735  018FEC  6EE6               	movwf	postinc1,c
 19736  018FEE  0E30               	movlw	48
 19737  018FF0  6EE6               	movwf	postinc1,c
 19738                           
 19739                           ;stkvar	_tim @ sp[(-6)+-2]
 19740  018FF2  0EF8               	movlw	-8
 19741  018FF4  006F FF8C  F034    	movff	plusw1,btemp+10
 19742  018FFA  0EF9               	movlw	-7
 19743  018FFC  006F FF8C  F035    	movff	plusw1,btemp+11
 19744  019002  0E04               	movlw	4
 19745  019004  2434               	addwf	(btemp+10)^0,w,c
 19746  019006  6ED9               	movwf	fsr2l,c
 19747  019008  0E00               	movlw	0
 19748  01900A  2035               	addwfc	(btemp+11)^0,w,c
 19749  01900C  6EDA               	movwf	fsr2h,c
 19750  01900E  50DF               	movf	indf2,w,c
 19751  019010  6EE6               	movwf	postinc1,c
 19752  019012  0ED1               	movlw	low (asctime@buf+13)
 19753  019014  6EE6               	movwf	postinc1,c
 19754  019016  0E03               	movlw	high (asctime@buf+13)
 19755  019018  6EE6               	movwf	postinc1,c
 19756  01901A  ECD2  F0FC         	call	_put2d	;wreg free
 19757  01901E  0E3A               	movlw	58
 19758  019020  6EE6               	movwf	postinc1,c
 19759  019022  0E30               	movlw	48
 19760  019024  6EE6               	movwf	postinc1,c
 19761                           
 19762                           ;stkvar	_tim @ sp[(-6)+-2]
 19763  019026  0EF8               	movlw	-8
 19764  019028  006F FF8C  F034    	movff	plusw1,btemp+10
 19765  01902E  0EF9               	movlw	-7
 19766  019030  006F FF8C  F035    	movff	plusw1,btemp+11
 19767  019036  0E02               	movlw	2
 19768  019038  2434               	addwf	(btemp+10)^0,w,c
 19769  01903A  6ED9               	movwf	fsr2l,c
 19770  01903C  0E00               	movlw	0
 19771  01903E  2035               	addwfc	(btemp+11)^0,w,c
 19772  019040  6EDA               	movwf	fsr2h,c
 19773  019042  50DF               	movf	indf2,w,c
 19774  019044  6EE6               	movwf	postinc1,c
 19775  019046  0ED4               	movlw	low (asctime@buf+16)
 19776  019048  6EE6               	movwf	postinc1,c
 19777  01904A  0E03               	movlw	high (asctime@buf+16)
 19778  01904C  6EE6               	movwf	postinc1,c
 19779  01904E  ECD2  F0FC         	call	_put2d	;wreg free
 19780  019052  0E20               	movlw	32
 19781  019054  6EE6               	movwf	postinc1,c
 19782  019056  0E30               	movlw	48
 19783  019058  6EE6               	movwf	postinc1,c
 19784                           
 19785                           ;stkvar	_tim @ sp[(-6)+-2]
 19786  01905A  0EF8               	movlw	-8
 19787  01905C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19788  019062  0EF9               	movlw	-7
 19789  019064  006F FF8F FFDA     	movff	plusw1,fsr2h
 19790  01906A  50DF               	movf	indf2,w,c
 19791  01906C  6EE6               	movwf	postinc1,c
 19792  01906E  0ED7               	movlw	low (asctime@buf+19)
 19793  019070  6EE6               	movwf	postinc1,c
 19794  019072  0E03               	movlw	high (asctime@buf+19)
 19795  019074  6EE6               	movwf	postinc1,c
 19796  019076  ECD2  F0FC         	call	_put2d	;wreg free
 19797  01907A  0E00               	movlw	0
 19798  01907C  6EE6               	movwf	postinc1,c
 19799  01907E  0E20               	movlw	32
 19800  019080  6EE6               	movwf	postinc1,c
 19801  019082  0E64               	movlw	100
 19802  019084  6EE6               	movwf	postinc1,c
 19803  019086  0E00               	movlw	0
 19804  019088  6EE6               	movwf	postinc1,c
 19805                           
 19806                           ;stkvar	_tim @ sp[(-8)+-2]
 19807  01908A  0EF6               	movlw	-10
 19808  01908C  006F FF8C  F034    	movff	plusw1,btemp+10
 19809  019092  0EF7               	movlw	-9
 19810  019094  006F FF8C  F035    	movff	plusw1,btemp+11
 19811  01909A  0E0A               	movlw	10
 19812  01909C  2434               	addwf	(btemp+10)^0,w,c
 19813  01909E  6ED9               	movwf	fsr2l,c
 19814  0190A0  0E00               	movlw	0
 19815  0190A2  2035               	addwfc	(btemp+11)^0,w,c
 19816  0190A4  6EDA               	movwf	fsr2h,c
 19817  0190A6  006F FF78  F034    	movff	postinc2,btemp+10
 19818  0190AC  006F FF74  F035    	movff	postdec2,btemp+11
 19819  0190B2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 19820  0190B8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 19821  0190BE  ECBC  F0F9         	call	___awdiv	;wreg free
 19822  0190C2  502A               	movf	btemp^0,w,c
 19823  0190C4  0F13               	addlw	19
 19824  0190C6  6EE6               	movwf	postinc1,c
 19825  0190C8  0EDA               	movlw	low (asctime@buf+22)
 19826  0190CA  6EE6               	movwf	postinc1,c
 19827  0190CC  0E03               	movlw	high (asctime@buf+22)
 19828  0190CE  6EE6               	movwf	postinc1,c
 19829  0190D0  ECD2  F0FC         	call	_put2d	;wreg free
 19830  0190D4  0E0A               	movlw	10
 19831  0190D6  6EE6               	movwf	postinc1,c
 19832  0190D8  0E30               	movlw	48
 19833  0190DA  6EE6               	movwf	postinc1,c
 19834  0190DC  0E64               	movlw	100
 19835  0190DE  6EE6               	movwf	postinc1,c
 19836  0190E0  0E00               	movlw	0
 19837  0190E2  6EE6               	movwf	postinc1,c
 19838                           
 19839                           ;stkvar	_tim @ sp[(-8)+-2]
 19840  0190E4  0EF6               	movlw	-10
 19841  0190E6  006F FF8C  F034    	movff	plusw1,btemp+10
 19842  0190EC  0EF7               	movlw	-9
 19843  0190EE  006F FF8C  F035    	movff	plusw1,btemp+11
 19844  0190F4  0E0A               	movlw	10
 19845  0190F6  2434               	addwf	(btemp+10)^0,w,c
 19846  0190F8  6ED9               	movwf	fsr2l,c
 19847  0190FA  0E00               	movlw	0
 19848  0190FC  2035               	addwfc	(btemp+11)^0,w,c
 19849  0190FE  6EDA               	movwf	fsr2h,c
 19850  019100  006F FF78  F034    	movff	postinc2,btemp+10
 19851  019106  006F FF74  F035    	movff	postdec2,btemp+11
 19852  01910C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 19853  019112  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 19854  019118  ECEB  F0FD         	call	___awmod	;wreg free
 19855  01911C  502A               	movf	btemp^0,w,c
 19856  01911E  6EE6               	movwf	postinc1,c
 19857  019120  0EDC               	movlw	low (asctime@buf+24)
 19858  019122  6EE6               	movwf	postinc1,c
 19859  019124  0E03               	movlw	high (asctime@buf+24)
 19860  019126  6EE6               	movwf	postinc1,c
 19861  019128  ECD2  F0FC         	call	_put2d	;wreg free
 19862  01912C  0EC4               	movlw	low asctime@buf
 19863  01912E  6E2A               	movwf	btemp^0,c
 19864  019130  0E03               	movlw	high asctime@buf
 19865  019132  6E2B               	movwf	(btemp+1)^0,c
 19866                           
 19867                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19868  019134  0EFA               	movlw	250
 19869  019136  26E1               	addwf	fsr1l,f,c
 19870  019138  0EFF               	movlw	255
 19871  01913A  22E2               	addwfc	fsr1h,f,c
 19872  01913C  0012               	return		;funcret
 19873  01913E                     __end_of_asctime:
 19874                           	opt callstack 0
 19875                           
 19876 ;; *************** function _put2d *****************
 19877 ;; Defined at:
 19878 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19879 ;; Parameters:    Size  Location     Type
 19880 ;;  cp              2  [STACK] PTR unsigned char 
 19881 ;;		 -> asctime@buf(27), 
 19882 ;;  i               1  [STACK] unsigned char 
 19883 ;;  cl              1  [STACK] unsigned char 
 19884 ;;  ct              1  [STACK] unsigned char 
 19885 ;; Auto vars:     Size  Location     Type
 19886 ;;		None
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  1  [STACK] void 
 19889 ;; Registers used:
 19890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/3
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19900 ;;Total ram usage:        0 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:   16
 19903 ;; This function calls:
 19904 ;;		___awdiv
 19905 ;;		___lbmod
 19906 ;; This function is called by:
 19907 ;;		_asctime
 19908 ;; This function uses a reentrant model
 19909 ;;
 19910                           
 19911                           	psect	text53
 19912  01F9A4                     __ptext53:
 19913                           	opt callstack 0
 19914  01F9A4                     _put2d:
 19915                           	opt callstack 12
 19916                           
 19917                           ;stkvar	_ct @ sp[(0)+-5]
 19918                           ;stkvar	_cp @ sp[(0)+-2]
 19919                           
 19920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19921                           ;incstack = 0
 19922  01F9A4  0EFE               	movlw	-2
 19923  01F9A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19924  01F9AC  0EFF               	movlw	-1
 19925  01F9AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19926  01F9B4  0EFB               	movlw	-5
 19927  01F9B6  006F FF8F FFDF     	movff	plusw1,indf2
 19928  01F9BC  0E0A               	movlw	10
 19929  01F9BE  6EE6               	movwf	postinc1,c
 19930                           
 19931                           ;stkvar	_i @ sp[(-1)+-3]
 19932  01F9C0  0EFC               	movlw	-4
 19933  01F9C2  50E3               	movf	plusw1,w,c
 19934  01F9C4  6EE6               	movwf	postinc1,c
 19935  01F9C6  EC27  F008         	call	___lbmod	;wreg free
 19936  01F9CA  0E30               	movlw	48
 19937  01F9CC  262A               	addwf	btemp^0,f,c
 19938                           
 19939                           ;stkvar	_cp @ sp[(0)+-2]
 19940  01F9CE  0EFE               	movlw	-2
 19941  01F9D0  006F FF8C  F02B    	movff	plusw1,btemp+1
 19942  01F9D6  0E01               	movlw	1
 19943  01F9D8  5E2B               	subwf	(btemp+1)^0,f,c
 19944  01F9DA  0EFE               	movlw	-2
 19945  01F9DC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 19946  01F9E2  0EFF               	movlw	-1
 19947  01F9E4  006F FF8C  F02B    	movff	plusw1,btemp+1
 19948  01F9EA  0E00               	movlw	0
 19949  01F9EC  5A2B               	subwfb	(btemp+1)^0,f,c
 19950  01F9EE  0EFF               	movlw	-1
 19951  01F9F0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 19952  01F9F6  0EFE               	movlw	-2
 19953  01F9F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19954  01F9FE  0EFF               	movlw	-1
 19955  01FA00  006F FF8F FFDA     	movff	plusw1,fsr2h
 19956  01FA06  0060  F0AB  FFDF   	movff	btemp,indf2
 19957  01FA0C  0E0A               	movlw	10
 19958  01FA0E  6EE6               	movwf	postinc1,c
 19959  01FA10  0E00               	movlw	0
 19960  01FA12  6EE6               	movwf	postinc1,c
 19961                           
 19962                           ;stkvar	_i @ sp[(-2)+-3]
 19963  01FA14  0EFB               	movlw	-5
 19964  01FA16  50E3               	movf	plusw1,w,c
 19965  01FA18  6EE6               	movwf	postinc1,c
 19966  01FA1A  0E00               	movlw	0
 19967  01FA1C  6EE6               	movwf	postinc1,c
 19968  01FA1E  ECBC  F0F9         	call	___awdiv	;wreg free
 19969                           
 19970                           ;stkvar	_i @ sp[(0)+-3]
 19971  01FA22  0EFD               	movlw	-3
 19972  01FA24  0060  F0AB  FFE3   	movff	btemp,plusw1
 19973  01FA2A  0EFD               	movlw	-3
 19974  01FA2C  50E3               	movf	plusw1,w,c
 19975  01FA2E  B4D8               	btfsc	status,2,c
 19976  01FA30  D021               	goto	l17269
 19977                           
 19978                           ;stkvar	_cp @ sp[(0)+-2]
 19979  01FA32  0EFE               	movlw	-2
 19980  01FA34  006F FF8C  F02A    	movff	plusw1,btemp
 19981  01FA3A  0E01               	movlw	1
 19982  01FA3C  5E2A               	subwf	btemp^0,f,c
 19983  01FA3E  0EFE               	movlw	-2
 19984  01FA40  0060  F0AB  FFE3   	movff	btemp,plusw1
 19985  01FA46  0EFF               	movlw	-1
 19986  01FA48  006F FF8C  F02A    	movff	plusw1,btemp
 19987  01FA4E  0E00               	movlw	0
 19988  01FA50  5A2A               	subwfb	btemp^0,f,c
 19989  01FA52  0EFF               	movlw	-1
 19990  01FA54  0060  F0AB  FFE3   	movff	btemp,plusw1
 19991  01FA5A  0EFE               	movlw	-2
 19992  01FA5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19993  01FA62  0EFF               	movlw	-1
 19994  01FA64  006F FF8F FFDA     	movff	plusw1,fsr2h
 19995                           
 19996                           ;stkvar	_i @ sp[(0)+-3]
 19997  01FA6A  0EFD               	movlw	-3
 19998  01FA6C  50E3               	movf	plusw1,w,c
 19999  01FA6E  0F30               	addlw	48
 20000  01FA70  6EDF               	movwf	indf2,c
 20001  01FA72  D020               	goto	l3415
 20002  01FA74                     l17269:
 20003                           
 20004                           ;stkvar	_cl @ sp[(0)+-4]
 20005                           ;stkvar	_cp @ sp[(0)+-2]
 20006  01FA74  0EFE               	movlw	-2
 20007  01FA76  006F FF8C  F02A    	movff	plusw1,btemp
 20008  01FA7C  0E01               	movlw	1
 20009  01FA7E  5E2A               	subwf	btemp^0,f,c
 20010  01FA80  0EFE               	movlw	-2
 20011  01FA82  0060  F0AB  FFE3   	movff	btemp,plusw1
 20012  01FA88  0EFF               	movlw	-1
 20013  01FA8A  006F FF8C  F02A    	movff	plusw1,btemp
 20014  01FA90  0E00               	movlw	0
 20015  01FA92  5A2A               	subwfb	btemp^0,f,c
 20016  01FA94  0EFF               	movlw	-1
 20017  01FA96  0060  F0AB  FFE3   	movff	btemp,plusw1
 20018  01FA9C  0EFE               	movlw	-2
 20019  01FA9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20020  01FAA4  0EFF               	movlw	-1
 20021  01FAA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 20022  01FAAC  0EFC               	movlw	-4
 20023  01FAAE  006F FF8F FFDF     	movff	plusw1,indf2
 20024  01FAB4                     l3415:
 20025                           
 20026                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20027  01FAB4  0EFB               	movlw	251
 20028  01FAB6  26E1               	addwf	fsr1l,f,c
 20029  01FAB8  0EFF               	movlw	255
 20030  01FABA  22E2               	addwfc	fsr1h,f,c
 20031  01FABC  0012               	return		;funcret
 20032  01FABE                     __end_of_put2d:
 20033                           	opt callstack 0
 20034                           
 20035 ;; *************** function ___lbmod *****************
 20036 ;; Defined at:
 20037 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20038 ;; Parameters:    Size  Location     Type
 20039 ;;  dividend        1  [STACK] unsigned char 
 20040 ;;  divisor         1  [STACK] unsigned char 
 20041 ;; Auto vars:     Size  Location     Type
 20042 ;;  rem             1  [STACK] unsigned char 
 20043 ;;  counter         1  [STACK] unsigned char 
 20044 ;; Return value:  Size  Location     Type
 20045 ;;                  1  [STACK] unsigned char 
 20046 ;; Registers used:
 20047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20048 ;; Tracked objects:
 20049 ;;		On entry : 0/3
 20050 ;;		On exit  : 0/0
 20051 ;;		Unchanged: 0/0
 20052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20057 ;;Total ram usage:        0 bytes
 20058 ;; Hardware stack levels used:    1
 20059 ;; Hardware stack levels required when called:   15
 20060 ;; This function calls:
 20061 ;;		Nothing
 20062 ;; This function is called by:
 20063 ;;		_put2d
 20064 ;; This function uses a reentrant model
 20065 ;;
 20066                           
 20067                           	psect	text54
 20068  00104E                     __ptext54:
 20069                           	opt callstack 0
 20070  00104E                     ___lbmod:
 20071                           	opt callstack 0
 20072                           
 20073                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20074  00104E  52E6               	movf	postinc1,f,c
 20075  001050  52E6               	movf	postinc1,f,c
 20076                           
 20077                           ;stkvar	_counter @ sp[(-2)+1]
 20078                           
 20079                           ;incstack = 0
 20080  001052  0EFF               	movlw	-1
 20081  001054  6AE3               	clrf	plusw1,c
 20082  001056  86E3               	bsf	plusw1,3,c
 20083                           
 20084                           ;stkvar	_rem @ sp[(-2)+0]
 20085  001058  0EFE               	movlw	-2
 20086  00105A  6AE3               	clrf	plusw1,c
 20087  00105C                     l12503:
 20088                           
 20089                           ;stkvar	_dividend @ sp[(-2)+-1]
 20090  00105C  0EFD               	movlw	-3
 20091  00105E  006F FF8C  F035    	movff	plusw1,btemp+11
 20092                           
 20093                           ;stkvar	_rem @ sp[(-2)+0]
 20094  001064  0EFE               	movlw	-2
 20095  001066  006F FF8C  F034    	movff	plusw1,btemp+10
 20096  00106C  90D8               	bcf	status,0,c
 20097  00106E  3435               	rlcf	(btemp+11)^0,w,c
 20098  001070  3434               	rlcf	(btemp+10)^0,w,c
 20099  001072  6E35               	movwf	(btemp+11)^0,c
 20100                           
 20101                           ;stkvar	_rem @ sp[(-2)+0]
 20102  001074  0EFE               	movlw	-2
 20103  001076  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20104                           
 20105                           ;stkvar	_dividend @ sp[(-2)+-1]
 20106  00107C  50E1               	movf	fsr1l,w,c
 20107  00107E  0FFD               	addlw	-3
 20108  001080  6ED9               	movwf	fsr2l,c
 20109  001082  50E2               	movf	fsr1h,w,c
 20110  001084  6EDA               	movwf	fsr2h,c
 20111  001086  0EFF               	movlw	255
 20112  001088  22DA               	addwfc	fsr2h,f,c
 20113  00108A  90D8               	bcf	status,0,c
 20114  00108C  36DF               	rlcf	indf2,f,c
 20115                           
 20116                           ;stkvar	_divisor @ sp[(-2)+-2]
 20117                           ;stkvar	_rem @ sp[(-2)+0]
 20118  00108E  50E1               	movf	fsr1l,w,c
 20119  001090  0FFE               	addlw	-2
 20120  001092  6ED9               	movwf	fsr2l,c
 20121  001094  50E2               	movf	fsr1h,w,c
 20122  001096  6EDA               	movwf	fsr2h,c
 20123  001098  0EFF               	movlw	255
 20124  00109A  22DA               	addwfc	fsr2h,f,c
 20125  00109C  0EFC               	movlw	-4
 20126  00109E  50E3               	movf	plusw1,w,c
 20127  0010A0  5CDE               	subwf	postinc2,w,c
 20128  0010A2  A0D8               	btfss	status,0,c
 20129  0010A4  D00D               	goto	l12511
 20130                           
 20131                           ;stkvar	_divisor @ sp[(-2)+-2]
 20132  0010A6  0EFC               	movlw	-4
 20133  0010A8  006F FF8C  F035    	movff	plusw1,btemp+11
 20134                           
 20135                           ;stkvar	_rem @ sp[(-2)+0]
 20136  0010AE  50E1               	movf	fsr1l,w,c
 20137  0010B0  0FFE               	addlw	-2
 20138  0010B2  6ED9               	movwf	fsr2l,c
 20139  0010B4  50E2               	movf	fsr1h,w,c
 20140  0010B6  6EDA               	movwf	fsr2h,c
 20141  0010B8  0EFF               	movlw	255
 20142  0010BA  22DA               	addwfc	fsr2h,f,c
 20143  0010BC  5035               	movf	(btemp+11)^0,w,c
 20144  0010BE  5EDF               	subwf	indf2,f,c
 20145  0010C0                     l12511:
 20146                           
 20147                           ;stkvar	_counter @ sp[(-2)+1]
 20148  0010C0  0EFF               	movlw	-1
 20149  0010C2  50E3               	movf	plusw1,w,c
 20150  0010C4  6E2A               	movwf	btemp^0,c
 20151  0010C6  0E01               	movlw	1
 20152  0010C8  5E2A               	subwf	btemp^0,f,c
 20153  0010CA  0EFF               	movlw	-1
 20154  0010CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 20155  0010D2  A4D8               	btfss	status,2,c
 20156  0010D4  D7C3               	goto	l12503
 20157                           
 20158                           ;stkvar	_rem @ sp[(-2)+0]
 20159  0010D6  0EFE               	movlw	-2
 20160  0010D8  006F FF8C  F02A    	movff	plusw1,btemp
 20161                           
 20162                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20163  0010DE  52E5               	movf	postdec1,f,c
 20164  0010E0  52E5               	movf	postdec1,f,c
 20165  0010E2  52E5               	movf	postdec1,f,c
 20166  0010E4  52E5               	movf	postdec1,f,c
 20167  0010E6  0012               	return		;funcret
 20168  0010E8                     __end_of___lbmod:
 20169                           	opt callstack 0
 20170                           
 20171 ;; *************** function _current_sensor_cal *****************
 20172 ;; Defined at:
 20173 ;;		line 506 in file "main.c"
 20174 ;; Parameters:    Size  Location     Type
 20175 ;;		None
 20176 ;; Auto vars:     Size  Location     Type
 20177 ;;  cp              4  [STACK] unsigned long 
 20178 ;;  cb              4  [STACK] unsigned long 
 20179 ;;  cpz             4  [STACK] unsigned long 
 20180 ;;  cbz             4  [STACK] unsigned long 
 20181 ;;  x               1  [STACK] unsigned char 
 20182 ;; Return value:  Size  Location     Type
 20183 ;;                  1  [STACK] _Bool 
 20184 ;; Registers used:
 20185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20186 ;; Tracked objects:
 20187 ;;		On entry : 0/2
 20188 ;;		On exit  : 0/0
 20189 ;;		Unchanged: 0/0
 20190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20195 ;;Total ram usage:        0 bytes
 20196 ;; Hardware stack levels used:    1
 20197 ;; Hardware stack levels required when called:   27
 20198 ;; This function calls:
 20199 ;;		_WaitMs
 20200 ;;		___fldiv
 20201 ;;		___xxtofl
 20202 ;;		_cal_current_10A
 20203 ;;		_cal_current_zero
 20204 ;;		_clear_adc_scan
 20205 ;;		_clear_switch
 20206 ;;		_get_raw_result
 20207 ;;		_get_switch
 20208 ;;		_get_vterm_ptr
 20209 ;;		_spinners
 20210 ;;		_sprintf
 20211 ;;		_start_adc_scan
 20212 ;;		_update_lcd
 20213 ;;		_write_cal_data
 20214 ;; This function is called by:
 20215 ;;		_main
 20216 ;; This function uses a reentrant model
 20217 ;;
 20218                           
 20219                           	psect	text55
 20220  0147D6                     __ptext55:
 20221                           	opt callstack 0
 20222  0147D6                     _current_sensor_cal:
 20223                           	opt callstack 0
 20224                           
 20225                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20226  0147D6  0E11               	movlw	17
 20227  0147D8  26E1               	addwf	fsr1l,f,c
 20228  0147DA  0E00               	movlw	0
 20229  0147DC  22E2               	addwfc	fsr1h,f,c
 20230                           
 20231                           ;main.c: 508:  uint8_t x = 0;
 20232                           ;stkvar	_x @ sp[(-17)+16]
 20233                           
 20234                           ;incstack = 0
 20235  0147DE  0EFF               	movlw	-1
 20236  0147E0  6AE3               	clrf	plusw1,c
 20237                           
 20238                           ;main.c: 509:  uint32_t cb = 0, cp = 0;
 20239                           ;stkvar	_cb @ sp[(-17)+4]
 20240  0147E2  0EF3               	movlw	-13
 20241  0147E4  6AE3               	clrf	plusw1,c
 20242  0147E6  0EF4               	movlw	-12
 20243  0147E8  6AE3               	clrf	plusw1,c
 20244  0147EA  0EF5               	movlw	-11
 20245  0147EC  6AE3               	clrf	plusw1,c
 20246  0147EE  0EF6               	movlw	-10
 20247  0147F0  6AE3               	clrf	plusw1,c
 20248                           
 20249                           ;stkvar	_cp @ sp[(-17)+0]
 20250  0147F2  0EEF               	movlw	-17
 20251  0147F4  6AE3               	clrf	plusw1,c
 20252  0147F6  0EF0               	movlw	-16
 20253  0147F8  6AE3               	clrf	plusw1,c
 20254  0147FA  0EF1               	movlw	-15
 20255  0147FC  6AE3               	clrf	plusw1,c
 20256  0147FE  0EF2               	movlw	-14
 20257  014800  6AE3               	clrf	plusw1,c
 20258                           
 20259                           ;main.c: 511:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20260  014802  0E66               	movlw	low STR_52
 20261  014804  6EE6               	movwf	postinc1,c
 20262  014806  0EFE               	movlw	high STR_52
 20263  014808  6EE6               	movwf	postinc1,c
 20264  01480A  0E00               	movlw	0
 20265  01480C  6EE6               	movwf	postinc1,c
 20266  01480E  0E00               	movlw	0
 20267  014810  6EE6               	movwf	postinc1,c
 20268  014812  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20269  014816  0060  F0AB  FFE6   	movff	btemp,postinc1
 20270  01481C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20271  014822  0E04               	movlw	4
 20272  014824  6EE6               	movwf	postinc1,c
 20273  014826  EC01  F0FF         	call	_sprintf	;wreg free
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;main.c: 512:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 20277  01482A  0EE8               	movlw	low STR_53
 20278  01482C  6EE6               	movwf	postinc1,c
 20279  01482E  0EFD               	movlw	high STR_53
 20280  014830  6EE6               	movwf	postinc1,c
 20281  014832  0E00               	movlw	0
 20282  014834  6EE6               	movwf	postinc1,c
 20283  014836  0E01               	movlw	1
 20284  014838  6EE6               	movwf	postinc1,c
 20285  01483A  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20286  01483E  0060  F0AB  FFE6   	movff	btemp,postinc1
 20287  014844  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20288  01484A  0E04               	movlw	4
 20289  01484C  6EE6               	movwf	postinc1,c
 20290  01484E  EC01  F0FF         	call	_sprintf	;wreg free
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;main.c: 513:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 20294  014852  0ED3               	movlw	low STR_54
 20295  014854  6EE6               	movwf	postinc1,c
 20296  014856  0EFD               	movlw	high STR_54
 20297  014858  6EE6               	movwf	postinc1,c
 20298  01485A  0E00               	movlw	0
 20299  01485C  6EE6               	movwf	postinc1,c
 20300  01485E  0E02               	movlw	2
 20301  014860  6EE6               	movwf	postinc1,c
 20302  014862  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20303  014866  0060  F0AB  FFE6   	movff	btemp,postinc1
 20304  01486C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20305  014872  0E04               	movlw	4
 20306  014874  6EE6               	movwf	postinc1,c
 20307  014876  EC01  F0FF         	call	_sprintf	;wreg free
 20308                           
 20309                           ; BSR set to: 0
 20310                           ;main.c: 514:  update_lcd(0);
 20311  01487A  0E00               	movlw	0
 20312  01487C  6EE6               	movwf	postinc1,c
 20313  01487E  ECB3  F0F7         	call	_update_lcd	;wreg free
 20314                           
 20315                           ;main.c: 515:  WaitMs(2000);
 20316  014882  0ED0               	movlw	208
 20317  014884  6EE6               	movwf	postinc1,c
 20318  014886  0E07               	movlw	7
 20319  014888  6EE6               	movwf	postinc1,c
 20320  01488A  ECA6  F012         	call	_WaitMs	;wreg free
 20321  01488E                     l17589:
 20322                           
 20323                           ;main.c: 517:   if (++x > 64)
 20324                           ;stkvar	_x @ sp[(-17)+16]
 20325  01488E  0EFF               	movlw	-1
 20326  014890  2AE3               	incf	plusw1,f,c
 20327  014892  0EFF               	movlw	-1
 20328  014894  006F FF8C  F02A    	movff	plusw1,btemp
 20329  01489A  0E40               	movlw	64
 20330  01489C  642A               	cpfsgt	btemp^0,c
 20331  01489E  D002               	goto	l17593
 20332  0148A0  EFC0  F0A9         	goto	l1519
 20333  0148A4                     l17593:
 20334                           
 20335                           ;main.c: 519:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 20336  0148A4  0E00               	movlw	0
 20337  0148A6  6EE6               	movwf	postinc1,c
 20338  0148A8  0E04               	movlw	4
 20339  0148AA  6EE6               	movwf	postinc1,c
 20340  0148AC  EC52  F001         	call	_spinners	;wreg free
 20341  0148B0  502A               	movf	btemp^0,w,c
 20342  0148B2  6EE6               	movwf	postinc1,c
 20343  0148B4  0E00               	movlw	0
 20344  0148B6  6EE6               	movwf	postinc1,c
 20345  0148B8  0E4D               	movlw	low STR_55
 20346  0148BA  6EE6               	movwf	postinc1,c
 20347  0148BC  0EFF               	movlw	high STR_55
 20348  0148BE  6EE6               	movwf	postinc1,c
 20349  0148C0  0E00               	movlw	0
 20350  0148C2  6EE6               	movwf	postinc1,c
 20351  0148C4  0E02               	movlw	2
 20352  0148C6  6EE6               	movwf	postinc1,c
 20353  0148C8  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20354  0148CC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20355  0148D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20356  0148D8  0E06               	movlw	6
 20357  0148DA  6EE6               	movwf	postinc1,c
 20358  0148DC  EC01  F0FF         	call	_sprintf	;wreg free
 20359                           
 20360                           ;main.c: 520:   update_lcd(0);
 20361  0148E0  0E00               	movlw	0
 20362  0148E2  6EE6               	movwf	postinc1,c
 20363  0148E4  ECB3  F0F7         	call	_update_lcd	;wreg free
 20364                           
 20365                           ;main.c: 521:   WaitMs(100);
 20366  0148E8  0E64               	movlw	100
 20367  0148EA  6EE6               	movwf	postinc1,c
 20368  0148EC  0E00               	movlw	0
 20369  0148EE  6EE6               	movwf	postinc1,c
 20370  0148F0  ECA6  F012         	call	_WaitMs	;wreg free
 20371                           
 20372                           ;main.c: 522:  } while (get_switch(SCALIB));
 20373  0148F4  0E04               	movlw	4
 20374  0148F6  6EE6               	movwf	postinc1,c
 20375  0148F8  ECB9  F013         	call	_get_switch	;wreg free
 20376  0148FC  502A               	movf	btemp^0,w,c
 20377  0148FE  A4D8               	btfss	status,2,c
 20378  014900  D7C6               	goto	l17589
 20379                           
 20380                           ;main.c: 524:  x = 0;
 20381                           ;stkvar	_x @ sp[(-17)+16]
 20382  014902  0EFF               	movlw	-1
 20383  014904  6AE3               	clrf	plusw1,c
 20384  014906                     l17601:
 20385                           
 20386                           ;main.c: 526:   cb += get_raw_result(C_BATT);
 20387  014906  0E00               	movlw	0
 20388  014908  6EE6               	movwf	postinc1,c
 20389  01490A  ECBB  F015         	call	_get_raw_result	;wreg free
 20390                           
 20391                           ;stkvar	_cb @ sp[(-17)+4]
 20392  01490E  50E1               	movf	fsr1l,w,c
 20393  014910  0FF3               	addlw	-13
 20394  014912  6ED9               	movwf	fsr2l,c
 20395  014914  50E2               	movf	fsr1h,w,c
 20396  014916  6EDA               	movwf	fsr2h,c
 20397  014918  0EFF               	movlw	255
 20398  01491A  22DA               	addwfc	fsr2h,f,c
 20399  01491C  502A               	movf	btemp^0,w,c
 20400  01491E  26DE               	addwf	postinc2,f,c
 20401  014920  502B               	movf	(btemp+1)^0,w,c
 20402  014922  22DE               	addwfc	postinc2,f,c
 20403  014924  0E00               	movlw	0
 20404  014926  22DE               	addwfc	postinc2,f,c
 20405  014928  22DE               	addwfc	postinc2,f,c
 20406                           
 20407                           ;main.c: 527:   cp += get_raw_result(C_PV);
 20408  01492A  0E01               	movlw	1
 20409  01492C  6EE6               	movwf	postinc1,c
 20410  01492E  ECBB  F015         	call	_get_raw_result	;wreg free
 20411                           
 20412                           ;stkvar	_cp @ sp[(-17)+0]
 20413  014932  50E1               	movf	fsr1l,w,c
 20414  014934  0FEF               	addlw	-17
 20415  014936  6ED9               	movwf	fsr2l,c
 20416  014938  50E2               	movf	fsr1h,w,c
 20417  01493A  6EDA               	movwf	fsr2h,c
 20418  01493C  0EFF               	movlw	255
 20419  01493E  22DA               	addwfc	fsr2h,f,c
 20420  014940  502A               	movf	btemp^0,w,c
 20421  014942  26DE               	addwf	postinc2,f,c
 20422  014944  502B               	movf	(btemp+1)^0,w,c
 20423  014946  22DE               	addwfc	postinc2,f,c
 20424  014948  0E00               	movlw	0
 20425  01494A  22DE               	addwfc	postinc2,f,c
 20426  01494C  22DE               	addwfc	postinc2,f,c
 20427                           
 20428                           ;main.c: 528:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 20429  01494E  0EA5               	movlw	low STR_56
 20430  014950  6EE6               	movwf	postinc1,c
 20431  014952  0EFE               	movlw	high STR_56
 20432  014954  6EE6               	movwf	postinc1,c
 20433  014956  0E00               	movlw	0
 20434  014958  6EE6               	movwf	postinc1,c
 20435  01495A  0E00               	movlw	0
 20436  01495C  6EE6               	movwf	postinc1,c
 20437  01495E  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20438  014962  0060  F0AB  FFE6   	movff	btemp,postinc1
 20439  014968  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20440  01496E  0E04               	movlw	4
 20441  014970  6EE6               	movwf	postinc1,c
 20442  014972  EC01  F0FF         	call	_sprintf	;wreg free
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;main.c: 529:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 20446  014976  0E01               	movlw	1
 20447  014978  6EE6               	movwf	postinc1,c
 20448  01497A  ECBB  F015         	call	_get_raw_result	;wreg free
 20449  01497E  0060  F0AB  FFE6   	movff	btemp,postinc1
 20450  014984  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20451  01498A  0E00               	movlw	0
 20452  01498C  6EE6               	movwf	postinc1,c
 20453  01498E  ECBB  F015         	call	_get_raw_result	;wreg free
 20454  014992  0060  F0AB  FFE6   	movff	btemp,postinc1
 20455  014998  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20456  01499E  0E2B               	movlw	low STR_57
 20457  0149A0  6EE6               	movwf	postinc1,c
 20458  0149A2  0EFD               	movlw	high STR_57
 20459  0149A4  6EE6               	movwf	postinc1,c
 20460  0149A6  0E00               	movlw	0
 20461  0149A8  6EE6               	movwf	postinc1,c
 20462  0149AA  0E01               	movlw	1
 20463  0149AC  6EE6               	movwf	postinc1,c
 20464  0149AE  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20465  0149B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20466  0149B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20467  0149BE  0E08               	movlw	8
 20468  0149C0  6EE6               	movwf	postinc1,c
 20469  0149C2  EC01  F0FF         	call	_sprintf	;wreg free
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;main.c: 530:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 20473                           ;stkvar	_x @ sp[(-17)+16]
 20474  0149C6  0EFF               	movlw	-1
 20475  0149C8  50E3               	movf	plusw1,w,c
 20476  0149CA  6EE6               	movwf	postinc1,c
 20477  0149CC  0E00               	movlw	0
 20478  0149CE  6EE6               	movwf	postinc1,c
 20479  0149D0  0E0E               	movlw	low STR_58
 20480  0149D2  6EE6               	movwf	postinc1,c
 20481  0149D4  0EFF               	movlw	high STR_58
 20482  0149D6  6EE6               	movwf	postinc1,c
 20483  0149D8  0E00               	movlw	0
 20484  0149DA  6EE6               	movwf	postinc1,c
 20485  0149DC  0E02               	movlw	2
 20486  0149DE  6EE6               	movwf	postinc1,c
 20487  0149E0  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20488  0149E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 20489  0149EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20490  0149F0  0E06               	movlw	6
 20491  0149F2  6EE6               	movwf	postinc1,c
 20492  0149F4  EC01  F0FF         	call	_sprintf	;wreg free
 20493                           
 20494                           ; BSR set to: 0
 20495                           ;main.c: 531:   update_lcd(0);
 20496  0149F8  0E00               	movlw	0
 20497  0149FA  6EE6               	movwf	postinc1,c
 20498  0149FC  ECB3  F0F7         	call	_update_lcd	;wreg free
 20499                           
 20500                           ;main.c: 532:   clear_adc_scan();
 20501  014A00  EC44  F017         	call	_clear_adc_scan	;wreg free
 20502                           
 20503                           ; BSR set to: 1
 20504                           ;main.c: 533:   start_adc_scan();
 20505  014A04  ECCB  F00D         	call	_start_adc_scan	;wreg free
 20506                           
 20507                           ;main.c: 534:   WaitMs(100);
 20508  014A08  0E64               	movlw	100
 20509  014A0A  6EE6               	movwf	postinc1,c
 20510  014A0C  0E00               	movlw	0
 20511  014A0E  6EE6               	movwf	postinc1,c
 20512  014A10  ECA6  F012         	call	_WaitMs	;wreg free
 20513                           
 20514                           ;main.c: 535:  } while (++x < 64);
 20515                           ;stkvar	_x @ sp[(-17)+16]
 20516  014A14  0EFF               	movlw	-1
 20517  014A16  2AE3               	incf	plusw1,f,c
 20518  014A18  0EFF               	movlw	-1
 20519  014A1A  006F FF8C  F02A    	movff	plusw1,btemp
 20520  014A20  0E3F               	movlw	63
 20521  014A22  642A               	cpfsgt	btemp^0,c
 20522  014A24  D770               	goto	l17601
 20523                           
 20524                           ;main.c: 536:  cb = cb >> 6;
 20525  014A26  0E06               	movlw	6
 20526  014A28  6E35               	movwf	(btemp+11)^0,c
 20527                           
 20528                           ;stkvar	_cb @ sp[(-17)+4]
 20529  014A2A  50E1               	movf	fsr1l,w,c
 20530  014A2C  0FF3               	addlw	-13
 20531  014A2E  6ED9               	movwf	fsr2l,c
 20532  014A30  50E2               	movf	fsr1h,w,c
 20533  014A32  6EDA               	movwf	fsr2h,c
 20534  014A34  0EFF               	movlw	255
 20535  014A36  22DA               	addwfc	fsr2h,f,c
 20536  014A38  2835               	incf	(btemp+11)^0,w,c
 20537  014A3A  52DE               	movf	postinc2,f,c
 20538  014A3C  D007               	goto	u17420
 20539  014A3E                     u17425:
 20540  014A3E  52DE               	movf	postinc2,f,c
 20541  014A40  52DE               	movf	postinc2,f,c
 20542  014A42  90D8               	bcf	status,0,c
 20543  014A44  32DD               	rrcf	postdec2,f,c
 20544  014A46  32DD               	rrcf	postdec2,f,c
 20545  014A48  32DD               	rrcf	postdec2,f,c
 20546  014A4A  32DE               	rrcf	postinc2,f,c
 20547  014A4C                     u17420:
 20548  014A4C  2EE8               	decfsz	wreg,f,c
 20549  014A4E  D7F7               	goto	u17425
 20550                           
 20551                           ;main.c: 537:  cp = cp >> 6;
 20552  014A50  0E06               	movlw	6
 20553  014A52  6E35               	movwf	(btemp+11)^0,c
 20554                           
 20555                           ;stkvar	_cp @ sp[(-17)+0]
 20556  014A54  50E1               	movf	fsr1l,w,c
 20557  014A56  0FEF               	addlw	-17
 20558  014A58  6ED9               	movwf	fsr2l,c
 20559  014A5A  50E2               	movf	fsr1h,w,c
 20560  014A5C  6EDA               	movwf	fsr2h,c
 20561  014A5E  0EFF               	movlw	255
 20562  014A60  22DA               	addwfc	fsr2h,f,c
 20563  014A62  2835               	incf	(btemp+11)^0,w,c
 20564  014A64  52DE               	movf	postinc2,f,c
 20565  014A66  D007               	goto	u17430
 20566  014A68                     u17435:
 20567  014A68  52DE               	movf	postinc2,f,c
 20568  014A6A  52DE               	movf	postinc2,f,c
 20569  014A6C  90D8               	bcf	status,0,c
 20570  014A6E  32DD               	rrcf	postdec2,f,c
 20571  014A70  32DD               	rrcf	postdec2,f,c
 20572  014A72  32DD               	rrcf	postdec2,f,c
 20573  014A74  32DE               	rrcf	postinc2,f,c
 20574  014A76                     u17430:
 20575  014A76  2EE8               	decfsz	wreg,f,c
 20576  014A78  D7F7               	goto	u17435
 20577                           
 20578                           ;main.c: 539:  if (cal_current_zero(0, cb, cp)) {
 20579                           ;stkvar	_cp @ sp[(-17)+0]
 20580  014A7A  0EEF               	movlw	-17
 20581  014A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 20582  014A82  006F FF8F FFE6     	movff	plusw1,postinc1
 20583                           
 20584                           ;stkvar	_cb @ sp[(-19)+4]
 20585  014A88  0EF1               	movlw	-15
 20586  014A8A  006F FF8F FFE6     	movff	plusw1,postinc1
 20587  014A90  006F FF8F FFE6     	movff	plusw1,postinc1
 20588  014A96  0E00               	movlw	0
 20589  014A98  6EE6               	movwf	postinc1,c
 20590  014A9A  ECC0  F008         	call	_cal_current_zero	;wreg free
 20591  014A9E  502A               	movf	btemp^0,w,c
 20592  014AA0  B4D8               	btfsc	status,2,c
 20593  014AA2  D075               	goto	l17639
 20594                           
 20595                           ;main.c: 540:   cal_current_zero(1, cb, cp);
 20596                           ;stkvar	_cp @ sp[(-17)+0]
 20597  014AA4  0EEF               	movlw	-17
 20598  014AA6  006F FF8F FFE6     	movff	plusw1,postinc1
 20599  014AAC  006F FF8F FFE6     	movff	plusw1,postinc1
 20600                           
 20601                           ;stkvar	_cb @ sp[(-19)+4]
 20602  014AB2  0EF1               	movlw	-15
 20603  014AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 20604  014ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 20605  014AC0  0E01               	movlw	1
 20606  014AC2  6EE6               	movwf	postinc1,c
 20607  014AC4  ECC0  F008         	call	_cal_current_zero	;wreg free
 20608                           
 20609                           ;main.c: 541:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20610  014AC8  0E66               	movlw	low STR_52
 20611  014ACA  6EE6               	movwf	postinc1,c
 20612  014ACC  0EFE               	movlw	high STR_52
 20613  014ACE  6EE6               	movwf	postinc1,c
 20614  014AD0  0E00               	movlw	0
 20615  014AD2  6EE6               	movwf	postinc1,c
 20616  014AD4  0E00               	movlw	0
 20617  014AD6  6EE6               	movwf	postinc1,c
 20618  014AD8  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20619  014ADC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20620  014AE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20621  014AE8  0E04               	movlw	4
 20622  014AEA  6EE6               	movwf	postinc1,c
 20623  014AEC  EC01  F0FF         	call	_sprintf	;wreg free
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;main.c: 542:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 20627                           ;stkvar	_cp @ sp[(-17)+0]
 20628  014AF0  0EEF               	movlw	-17
 20629  014AF2  006F FF8F FFE6     	movff	plusw1,postinc1
 20630  014AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 20631  014AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 20632  014B04  006F FF8F FFE6     	movff	plusw1,postinc1
 20633                           
 20634                           ;stkvar	_cb @ sp[(-21)+4]
 20635  014B0A  0EEF               	movlw	-17
 20636  014B0C  006F FF8F FFE6     	movff	plusw1,postinc1
 20637  014B12  006F FF8F FFE6     	movff	plusw1,postinc1
 20638  014B18  006F FF8F FFE6     	movff	plusw1,postinc1
 20639  014B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 20640  014B24  0E55               	movlw	low STR_60
 20641  014B26  6EE6               	movwf	postinc1,c
 20642  014B28  0EFD               	movlw	high STR_60
 20643  014B2A  6EE6               	movwf	postinc1,c
 20644  014B2C  0E00               	movlw	0
 20645  014B2E  6EE6               	movwf	postinc1,c
 20646  014B30  0E01               	movlw	1
 20647  014B32  6EE6               	movwf	postinc1,c
 20648  014B34  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20649  014B38  0060  F0AB  FFE6   	movff	btemp,postinc1
 20650  014B3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20651  014B44  0E0C               	movlw	12
 20652  014B46  6EE6               	movwf	postinc1,c
 20653  014B48  EC01  F0FF         	call	_sprintf	;wreg free
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;main.c: 543:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 20657  014B4C  0E27               	movlw	low STR_61
 20658  014B4E  6EE6               	movwf	postinc1,c
 20659  014B50  0EFE               	movlw	high STR_61
 20660  014B52  6EE6               	movwf	postinc1,c
 20661  014B54  0E00               	movlw	0
 20662  014B56  6EE6               	movwf	postinc1,c
 20663  014B58  0E02               	movlw	2
 20664  014B5A  6EE6               	movwf	postinc1,c
 20665  014B5C  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20666  014B60  0060  F0AB  FFE6   	movff	btemp,postinc1
 20667  014B66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20668  014B6C  0E04               	movlw	4
 20669  014B6E  6EE6               	movwf	postinc1,c
 20670  014B70  EC01  F0FF         	call	_sprintf	;wreg free
 20671                           
 20672                           ; BSR set to: 0
 20673                           ;main.c: 544:   update_lcd(0);
 20674  014B74  0E00               	movlw	0
 20675  014B76  6EE6               	movwf	postinc1,c
 20676  014B78  ECB3  F0F7         	call	_update_lcd	;wreg free
 20677                           
 20678                           ;main.c: 545:   WaitMs(2000);
 20679  014B7C  0ED0               	movlw	208
 20680  014B7E  6EE6               	movwf	postinc1,c
 20681  014B80  0E07               	movlw	7
 20682  014B82  6EE6               	movwf	postinc1,c
 20683  014B84  ECA6  F012         	call	_WaitMs	;wreg free
 20684                           
 20685                           ;main.c: 546:   write_cal_data();
 20686  014B88  EC10  F0F9         	call	_write_cal_data	;wreg free
 20687                           
 20688                           ;main.c: 547:  } else {
 20689  014B8C  D05B               	goto	l17645
 20690  014B8E                     l17639:
 20691                           
 20692                           ;main.c: 548:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20693  014B8E  0E66               	movlw	low STR_52
 20694  014B90  6EE6               	movwf	postinc1,c
 20695  014B92  0EFE               	movlw	high STR_52
 20696  014B94  6EE6               	movwf	postinc1,c
 20697  014B96  0E00               	movlw	0
 20698  014B98  6EE6               	movwf	postinc1,c
 20699  014B9A  0E00               	movlw	0
 20700  014B9C  6EE6               	movwf	postinc1,c
 20701  014B9E  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20702  014BA2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20703  014BA8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20704  014BAE  0E04               	movlw	4
 20705  014BB0  6EE6               	movwf	postinc1,c
 20706  014BB2  EC01  F0FF         	call	_sprintf	;wreg free
 20707                           
 20708                           ;main.c: 549:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 20709  014BB6  0E01               	movlw	1
 20710  014BB8  6EE6               	movwf	postinc1,c
 20711  014BBA  ECBB  F015         	call	_get_raw_result	;wreg free
 20712  014BBE  0060  F0AB  FFE6   	movff	btemp,postinc1
 20713  014BC4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20714  014BCA  0E00               	movlw	0
 20715  014BCC  6EE6               	movwf	postinc1,c
 20716  014BCE  ECBB  F015         	call	_get_raw_result	;wreg free
 20717  014BD2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20718  014BD8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20719  014BDE  0E55               	movlw	low STR_60
 20720  014BE0  6EE6               	movwf	postinc1,c
 20721  014BE2  0EFD               	movlw	high STR_60
 20722  014BE4  6EE6               	movwf	postinc1,c
 20723  014BE6  0E00               	movlw	0
 20724  014BE8  6EE6               	movwf	postinc1,c
 20725  014BEA  0E01               	movlw	1
 20726  014BEC  6EE6               	movwf	postinc1,c
 20727  014BEE  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20728  014BF2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20729  014BF8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20730  014BFE  0E08               	movlw	8
 20731  014C00  6EE6               	movwf	postinc1,c
 20732  014C02  EC01  F0FF         	call	_sprintf	;wreg free
 20733                           
 20734                           ;main.c: 550:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 20735  014C06  0EF9               	movlw	low STR_64
 20736  014C08  6EE6               	movwf	postinc1,c
 20737  014C0A  0EFE               	movlw	high STR_64
 20738  014C0C  6EE6               	movwf	postinc1,c
 20739  014C0E  0E00               	movlw	0
 20740  014C10  6EE6               	movwf	postinc1,c
 20741  014C12  0E02               	movlw	2
 20742  014C14  6EE6               	movwf	postinc1,c
 20743  014C16  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20744  014C1A  0060  F0AB  FFE6   	movff	btemp,postinc1
 20745  014C20  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20746  014C26  0E04               	movlw	4
 20747  014C28  6EE6               	movwf	postinc1,c
 20748  014C2A  EC01  F0FF         	call	_sprintf	;wreg free
 20749                           
 20750                           ;main.c: 551:   update_lcd(0);
 20751  014C2E  0E00               	movlw	0
 20752  014C30  6EE6               	movwf	postinc1,c
 20753  014C32  ECB3  F0F7         	call	_update_lcd	;wreg free
 20754  014C36                     l17641:
 20755                           
 20756                           ;main.c: 552:   WaitMs(2000);
 20757  014C36  0ED0               	movlw	208
 20758  014C38  6EE6               	movwf	postinc1,c
 20759  014C3A  0E07               	movlw	7
 20760  014C3C  6EE6               	movwf	postinc1,c
 20761  014C3E  ECA6  F012         	call	_WaitMs	;wreg free
 20762  014C42  D39E               	goto	l1519
 20763  014C44                     l17645:
 20764                           
 20765                           ;main.c: 557:  uint32_t cbz, cpz;;main.c: 559:  clear_switch(SCALIB);
 20766  014C44  0E04               	movlw	4
 20767  014C46  6EE6               	movwf	postinc1,c
 20768  014C48  ECC2  F00F         	call	_clear_switch	;wreg free
 20769                           
 20770                           ;main.c: 560:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20771  014C4C  0E66               	movlw	low STR_52
 20772  014C4E  6EE6               	movwf	postinc1,c
 20773  014C50  0EFE               	movlw	high STR_52
 20774  014C52  6EE6               	movwf	postinc1,c
 20775  014C54  0E00               	movlw	0
 20776  014C56  6EE6               	movwf	postinc1,c
 20777  014C58  0E00               	movlw	0
 20778  014C5A  6EE6               	movwf	postinc1,c
 20779  014C5C  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20780  014C60  0060  F0AB  FFE6   	movff	btemp,postinc1
 20781  014C66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20782  014C6C  0E04               	movlw	4
 20783  014C6E  6EE6               	movwf	postinc1,c
 20784  014C70  EC01  F0FF         	call	_sprintf	;wreg free
 20785                           
 20786                           ; BSR set to: 0
 20787                           ;main.c: 561:  sprintf(get_vterm_ptr(1, 0), "10 Amp Sensor       ");
 20788  014C74  0E3C               	movlw	low STR_66
 20789  014C76  6EE6               	movwf	postinc1,c
 20790  014C78  0EFE               	movlw	high STR_66
 20791  014C7A  6EE6               	movwf	postinc1,c
 20792  014C7C  0E00               	movlw	0
 20793  014C7E  6EE6               	movwf	postinc1,c
 20794  014C80  0E01               	movlw	1
 20795  014C82  6EE6               	movwf	postinc1,c
 20796  014C84  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20797  014C88  0060  F0AB  FFE6   	movff	btemp,postinc1
 20798  014C8E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20799  014C94  0E04               	movlw	4
 20800  014C96  6EE6               	movwf	postinc1,c
 20801  014C98  EC01  F0FF         	call	_sprintf	;wreg free
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;main.c: 562:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 20805  014C9C  0ED3               	movlw	low STR_54
 20806  014C9E  6EE6               	movwf	postinc1,c
 20807  014CA0  0EFD               	movlw	high STR_54
 20808  014CA2  6EE6               	movwf	postinc1,c
 20809  014CA4  0E00               	movlw	0
 20810  014CA6  6EE6               	movwf	postinc1,c
 20811  014CA8  0E02               	movlw	2
 20812  014CAA  6EE6               	movwf	postinc1,c
 20813  014CAC  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20814  014CB0  0060  F0AB  FFE6   	movff	btemp,postinc1
 20815  014CB6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20816  014CBC  0E04               	movlw	4
 20817  014CBE  6EE6               	movwf	postinc1,c
 20818  014CC0  EC01  F0FF         	call	_sprintf	;wreg free
 20819                           
 20820                           ; BSR set to: 0
 20821                           ;main.c: 563:  update_lcd(0);
 20822  014CC4  0E00               	movlw	0
 20823  014CC6  6EE6               	movwf	postinc1,c
 20824  014CC8  ECB3  F0F7         	call	_update_lcd	;wreg free
 20825                           
 20826                           ;main.c: 564:  WaitMs(2000);
 20827  014CCC  0ED0               	movlw	208
 20828  014CCE  6EE6               	movwf	postinc1,c
 20829  014CD0  0E07               	movlw	7
 20830  014CD2  6EE6               	movwf	postinc1,c
 20831  014CD4  ECA6  F012         	call	_WaitMs	;wreg free
 20832                           
 20833                           ;main.c: 565:  x = 0;
 20834                           ;stkvar	_x @ sp[(-17)+16]
 20835  014CD8  0EFF               	movlw	-1
 20836  014CDA  6AE3               	clrf	plusw1,c
 20837  014CDC                     l17659:
 20838                           
 20839                           ;main.c: 567:   if (++x > 64)
 20840                           ;stkvar	_x @ sp[(-17)+16]
 20841  014CDC  0EFF               	movlw	-1
 20842  014CDE  2AE3               	incf	plusw1,f,c
 20843  014CE0  0EFF               	movlw	-1
 20844  014CE2  006F FF8C  F02A    	movff	plusw1,btemp
 20845  014CE8  0E40               	movlw	64
 20846  014CEA  642A               	cpfsgt	btemp^0,c
 20847  014CEC  D001               	goto	l17663
 20848  014CEE  D348               	goto	l1519
 20849  014CF0                     l17663:
 20850                           
 20851                           ;main.c: 569:   sprintf(get_vterm_ptr(2, 0), "Press button %c  ", spinners(4, 0));
 20852  014CF0  0E00               	movlw	0
 20853  014CF2  6EE6               	movwf	postinc1,c
 20854  014CF4  0E04               	movlw	4
 20855  014CF6  6EE6               	movwf	postinc1,c
 20856  014CF8  EC52  F001         	call	_spinners	;wreg free
 20857  014CFC  502A               	movf	btemp^0,w,c
 20858  014CFE  6EE6               	movwf	postinc1,c
 20859  014D00  0E00               	movlw	0
 20860  014D02  6EE6               	movwf	postinc1,c
 20861  014D04  0E74               	movlw	low STR_68
 20862  014D06  6EE6               	movwf	postinc1,c
 20863  014D08  0EFF               	movlw	high STR_68
 20864  014D0A  6EE6               	movwf	postinc1,c
 20865  014D0C  0E00               	movlw	0
 20866  014D0E  6EE6               	movwf	postinc1,c
 20867  014D10  0E02               	movlw	2
 20868  014D12  6EE6               	movwf	postinc1,c
 20869  014D14  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 20870  014D18  0060  F0AB  FFE6   	movff	btemp,postinc1
 20871  014D1E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20872  014D24  0E06               	movlw	6
 20873  014D26  6EE6               	movwf	postinc1,c
 20874  014D28  EC01  F0FF         	call	_sprintf	;wreg free
 20875                           
 20876                           ;main.c: 570:   update_lcd(0);
 20877  014D2C  0E00               	movlw	0
 20878  014D2E  6EE6               	movwf	postinc1,c
 20879  014D30  ECB3  F0F7         	call	_update_lcd	;wreg free
 20880                           
 20881                           ;main.c: 571:   WaitMs(100);
 20882  014D34  0E64               	movlw	100
 20883  014D36  6EE6               	movwf	postinc1,c
 20884  014D38  0E00               	movlw	0
 20885  014D3A  6EE6               	movwf	postinc1,c
 20886  014D3C  ECA6  F012         	call	_WaitMs	;wreg free
 20887                           
 20888                           ;main.c: 572:  } while (!get_switch(SCALIB));
 20889  014D40  0E04               	movlw	4
 20890  014D42  6EE6               	movwf	postinc1,c
 20891  014D44  ECB9  F013         	call	_get_switch	;wreg free
 20892  014D48  502A               	movf	btemp^0,w,c
 20893  014D4A  B4D8               	btfsc	status,2,c
 20894  014D4C  D7C7               	goto	l17659
 20895                           
 20896                           ;main.c: 574:  x = 0;
 20897                           ;stkvar	_x @ sp[(-17)+16]
 20898  014D4E  0EFF               	movlw	-1
 20899  014D50  6AE3               	clrf	plusw1,c
 20900                           
 20901                           ;main.c: 575:  cbz = cb;
 20902                           ;stkvar	_cb @ sp[(-17)+4]
 20903  014D52  0EF3               	movlw	-13
 20904  014D54  006F FF8C  F032    	movff	plusw1,btemp+8
 20905  014D5A  0EF4               	movlw	-12
 20906  014D5C  006F FF8C  F033    	movff	plusw1,btemp+9
 20907  014D62  0EF5               	movlw	-11
 20908  014D64  006F FF8C  F034    	movff	plusw1,btemp+10
 20909  014D6A  0EF6               	movlw	-10
 20910  014D6C  006F FF8C  F035    	movff	plusw1,btemp+11
 20911                           
 20912                           ;stkvar	_cbz @ sp[(-17)+12]
 20913  014D72  0EFB               	movlw	-5
 20914  014D74  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 20915  014D7A  0EFC               	movlw	-4
 20916  014D7C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 20917  014D82  0EFD               	movlw	-3
 20918  014D84  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20919  014D8A  0EFE               	movlw	-2
 20920  014D8C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20921                           
 20922                           ;main.c: 576:  cpz = cp;
 20923                           ;stkvar	_cp @ sp[(-17)+0]
 20924  014D92  0EEF               	movlw	-17
 20925  014D94  006F FF8C  F032    	movff	plusw1,btemp+8
 20926  014D9A  0EF0               	movlw	-16
 20927  014D9C  006F FF8C  F033    	movff	plusw1,btemp+9
 20928  014DA2  0EF1               	movlw	-15
 20929  014DA4  006F FF8C  F034    	movff	plusw1,btemp+10
 20930  014DAA  0EF2               	movlw	-14
 20931  014DAC  006F FF8C  F035    	movff	plusw1,btemp+11
 20932                           
 20933                           ;stkvar	_cpz @ sp[(-17)+8]
 20934  014DB2  0EF7               	movlw	-9
 20935  014DB4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 20936  014DBA  0EF8               	movlw	-8
 20937  014DBC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 20938  014DC2  0EF9               	movlw	-7
 20939  014DC4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20940  014DCA  0EFA               	movlw	-6
 20941  014DCC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20942                           
 20943                           ;main.c: 577:  cb = 0;
 20944                           ;stkvar	_cb @ sp[(-17)+4]
 20945  014DD2  0EF3               	movlw	-13
 20946  014DD4  6AE3               	clrf	plusw1,c
 20947  014DD6  0EF4               	movlw	-12
 20948  014DD8  6AE3               	clrf	plusw1,c
 20949  014DDA  0EF5               	movlw	-11
 20950  014DDC  6AE3               	clrf	plusw1,c
 20951  014DDE  0EF6               	movlw	-10
 20952  014DE0  6AE3               	clrf	plusw1,c
 20953                           
 20954                           ;main.c: 578:  cp = 0;
 20955                           ;stkvar	_cp @ sp[(-17)+0]
 20956  014DE2  0EEF               	movlw	-17
 20957  014DE4  6AE3               	clrf	plusw1,c
 20958  014DE6  0EF0               	movlw	-16
 20959  014DE8  6AE3               	clrf	plusw1,c
 20960  014DEA  0EF1               	movlw	-15
 20961  014DEC  6AE3               	clrf	plusw1,c
 20962  014DEE  0EF2               	movlw	-14
 20963  014DF0  6AE3               	clrf	plusw1,c
 20964  014DF2                     l17679:
 20965                           
 20966                           ;main.c: 580:   cb += get_raw_result(C_BATT);
 20967  014DF2  0E00               	movlw	0
 20968  014DF4  6EE6               	movwf	postinc1,c
 20969  014DF6  ECBB  F015         	call	_get_raw_result	;wreg free
 20970                           
 20971                           ;stkvar	_cb @ sp[(-17)+4]
 20972  014DFA  50E1               	movf	fsr1l,w,c
 20973  014DFC  0FF3               	addlw	-13
 20974  014DFE  6ED9               	movwf	fsr2l,c
 20975  014E00  50E2               	movf	fsr1h,w,c
 20976  014E02  6EDA               	movwf	fsr2h,c
 20977  014E04  0EFF               	movlw	255
 20978  014E06  22DA               	addwfc	fsr2h,f,c
 20979  014E08  502A               	movf	btemp^0,w,c
 20980  014E0A  26DE               	addwf	postinc2,f,c
 20981  014E0C  502B               	movf	(btemp+1)^0,w,c
 20982  014E0E  22DE               	addwfc	postinc2,f,c
 20983  014E10  0E00               	movlw	0
 20984  014E12  22DE               	addwfc	postinc2,f,c
 20985  014E14  22DE               	addwfc	postinc2,f,c
 20986                           
 20987                           ;main.c: 581:   cp += get_raw_result(C_PV);
 20988  014E16  0E01               	movlw	1
 20989  014E18  6EE6               	movwf	postinc1,c
 20990  014E1A  ECBB  F015         	call	_get_raw_result	;wreg free
 20991                           
 20992                           ;stkvar	_cp @ sp[(-17)+0]
 20993  014E1E  50E1               	movf	fsr1l,w,c
 20994  014E20  0FEF               	addlw	-17
 20995  014E22  6ED9               	movwf	fsr2l,c
 20996  014E24  50E2               	movf	fsr1h,w,c
 20997  014E26  6EDA               	movwf	fsr2h,c
 20998  014E28  0EFF               	movlw	255
 20999  014E2A  22DA               	addwfc	fsr2h,f,c
 21000  014E2C  502A               	movf	btemp^0,w,c
 21001  014E2E  26DE               	addwf	postinc2,f,c
 21002  014E30  502B               	movf	(btemp+1)^0,w,c
 21003  014E32  22DE               	addwfc	postinc2,f,c
 21004  014E34  0E00               	movlw	0
 21005  014E36  22DE               	addwfc	postinc2,f,c
 21006  014E38  22DE               	addwfc	postinc2,f,c
 21007                           
 21008                           ;main.c: 582:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 21009  014E3A  0EA5               	movlw	low STR_56
 21010  014E3C  6EE6               	movwf	postinc1,c
 21011  014E3E  0EFE               	movlw	high STR_56
 21012  014E40  6EE6               	movwf	postinc1,c
 21013  014E42  0E00               	movlw	0
 21014  014E44  6EE6               	movwf	postinc1,c
 21015  014E46  0E00               	movlw	0
 21016  014E48  6EE6               	movwf	postinc1,c
 21017  014E4A  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 21018  014E4E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21019  014E54  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21020  014E5A  0E04               	movlw	4
 21021  014E5C  6EE6               	movwf	postinc1,c
 21022  014E5E  EC01  F0FF         	call	_sprintf	;wreg free
 21023                           
 21024                           ; BSR set to: 0
 21025                           ;main.c: 583:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 21026  014E62  0E01               	movlw	1
 21027  014E64  6EE6               	movwf	postinc1,c
 21028  014E66  ECBB  F015         	call	_get_raw_result	;wreg free
 21029  014E6A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21030  014E70  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21031  014E76  0E00               	movlw	0
 21032  014E78  6EE6               	movwf	postinc1,c
 21033  014E7A  ECBB  F015         	call	_get_raw_result	;wreg free
 21034  014E7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21035  014E84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21036  014E8A  0E2B               	movlw	low STR_57
 21037  014E8C  6EE6               	movwf	postinc1,c
 21038  014E8E  0EFD               	movlw	high STR_57
 21039  014E90  6EE6               	movwf	postinc1,c
 21040  014E92  0E00               	movlw	0
 21041  014E94  6EE6               	movwf	postinc1,c
 21042  014E96  0E01               	movlw	1
 21043  014E98  6EE6               	movwf	postinc1,c
 21044  014E9A  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 21045  014E9E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21046  014EA4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21047  014EAA  0E08               	movlw	8
 21048  014EAC  6EE6               	movwf	postinc1,c
 21049  014EAE  EC01  F0FF         	call	_sprintf	;wreg free
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;main.c: 584:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 21053                           ;stkvar	_x @ sp[(-17)+16]
 21054  014EB2  0EFF               	movlw	-1
 21055  014EB4  50E3               	movf	plusw1,w,c
 21056  014EB6  6EE6               	movwf	postinc1,c
 21057  014EB8  0E00               	movlw	0
 21058  014EBA  6EE6               	movwf	postinc1,c
 21059  014EBC  0E0E               	movlw	low STR_58
 21060  014EBE  6EE6               	movwf	postinc1,c
 21061  014EC0  0EFF               	movlw	high STR_58
 21062  014EC2  6EE6               	movwf	postinc1,c
 21063  014EC4  0E00               	movlw	0
 21064  014EC6  6EE6               	movwf	postinc1,c
 21065  014EC8  0E02               	movlw	2
 21066  014ECA  6EE6               	movwf	postinc1,c
 21067  014ECC  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 21068  014ED0  0060  F0AB  FFE6   	movff	btemp,postinc1
 21069  014ED6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21070  014EDC  0E06               	movlw	6
 21071  014EDE  6EE6               	movwf	postinc1,c
 21072  014EE0  EC01  F0FF         	call	_sprintf	;wreg free
 21073                           
 21074                           ; BSR set to: 0
 21075                           ;main.c: 585:   update_lcd(0);
 21076  014EE4  0E00               	movlw	0
 21077  014EE6  6EE6               	movwf	postinc1,c
 21078  014EE8  ECB3  F0F7         	call	_update_lcd	;wreg free
 21079                           
 21080                           ;main.c: 586:   clear_adc_scan();
 21081  014EEC  EC44  F017         	call	_clear_adc_scan	;wreg free
 21082                           
 21083                           ; BSR set to: 1
 21084                           ;main.c: 587:   start_adc_scan();
 21085  014EF0  ECCB  F00D         	call	_start_adc_scan	;wreg free
 21086                           
 21087                           ;main.c: 588:   WaitMs(100);
 21088  014EF4  0E64               	movlw	100
 21089  014EF6  6EE6               	movwf	postinc1,c
 21090  014EF8  0E00               	movlw	0
 21091  014EFA  6EE6               	movwf	postinc1,c
 21092  014EFC  ECA6  F012         	call	_WaitMs	;wreg free
 21093                           
 21094                           ;main.c: 589:  } while (++x < 64);
 21095                           ;stkvar	_x @ sp[(-17)+16]
 21096  014F00  0EFF               	movlw	-1
 21097  014F02  2AE3               	incf	plusw1,f,c
 21098  014F04  0EFF               	movlw	-1
 21099  014F06  006F FF8C  F02A    	movff	plusw1,btemp
 21100  014F0C  0E3F               	movlw	63
 21101  014F0E  642A               	cpfsgt	btemp^0,c
 21102  014F10  D770               	goto	l17679
 21103                           
 21104                           ;main.c: 590:  cb = cb >> 6;
 21105  014F12  0E06               	movlw	6
 21106  014F14  6E35               	movwf	(btemp+11)^0,c
 21107                           
 21108                           ;stkvar	_cb @ sp[(-17)+4]
 21109  014F16  50E1               	movf	fsr1l,w,c
 21110  014F18  0FF3               	addlw	-13
 21111  014F1A  6ED9               	movwf	fsr2l,c
 21112  014F1C  50E2               	movf	fsr1h,w,c
 21113  014F1E  6EDA               	movwf	fsr2h,c
 21114  014F20  0EFF               	movlw	255
 21115  014F22  22DA               	addwfc	fsr2h,f,c
 21116  014F24  2835               	incf	(btemp+11)^0,w,c
 21117  014F26  52DE               	movf	postinc2,f,c
 21118  014F28  D007               	goto	u17480
 21119  014F2A                     u17485:
 21120  014F2A  52DE               	movf	postinc2,f,c
 21121  014F2C  52DE               	movf	postinc2,f,c
 21122  014F2E  90D8               	bcf	status,0,c
 21123  014F30  32DD               	rrcf	postdec2,f,c
 21124  014F32  32DD               	rrcf	postdec2,f,c
 21125  014F34  32DD               	rrcf	postdec2,f,c
 21126  014F36  32DE               	rrcf	postinc2,f,c
 21127  014F38                     u17480:
 21128  014F38  2EE8               	decfsz	wreg,f,c
 21129  014F3A  D7F7               	goto	u17485
 21130                           
 21131                           ;main.c: 591:  cp = cp >> 6;
 21132  014F3C  0E06               	movlw	6
 21133  014F3E  6E35               	movwf	(btemp+11)^0,c
 21134                           
 21135                           ;stkvar	_cp @ sp[(-17)+0]
 21136  014F40  50E1               	movf	fsr1l,w,c
 21137  014F42  0FEF               	addlw	-17
 21138  014F44  6ED9               	movwf	fsr2l,c
 21139  014F46  50E2               	movf	fsr1h,w,c
 21140  014F48  6EDA               	movwf	fsr2h,c
 21141  014F4A  0EFF               	movlw	255
 21142  014F4C  22DA               	addwfc	fsr2h,f,c
 21143  014F4E  2835               	incf	(btemp+11)^0,w,c
 21144  014F50  52DE               	movf	postinc2,f,c
 21145  014F52  D007               	goto	u17490
 21146  014F54                     u17495:
 21147  014F54  52DE               	movf	postinc2,f,c
 21148  014F56  52DE               	movf	postinc2,f,c
 21149  014F58  90D8               	bcf	status,0,c
 21150  014F5A  32DD               	rrcf	postdec2,f,c
 21151  014F5C  32DD               	rrcf	postdec2,f,c
 21152  014F5E  32DD               	rrcf	postdec2,f,c
 21153  014F60  32DE               	rrcf	postinc2,f,c
 21154  014F62                     u17490:
 21155  014F62  2EE8               	decfsz	wreg,f,c
 21156  014F64  D7F7               	goto	u17495
 21157                           
 21158                           ;main.c: 593:  if (cal_current_10A(0, cb, cp, 0.0, 0.0)) {
 21159  014F66  0E00               	movlw	0
 21160  014F68  6EE6               	movwf	postinc1,c
 21161  014F6A  0E00               	movlw	0
 21162  014F6C  6EE6               	movwf	postinc1,c
 21163  014F6E  0E00               	movlw	0
 21164  014F70  6EE6               	movwf	postinc1,c
 21165  014F72  0E00               	movlw	0
 21166  014F74  6EE6               	movwf	postinc1,c
 21167  014F76  0E00               	movlw	0
 21168  014F78  6EE6               	movwf	postinc1,c
 21169  014F7A  0E00               	movlw	0
 21170  014F7C  6EE6               	movwf	postinc1,c
 21171  014F7E  0E00               	movlw	0
 21172  014F80  6EE6               	movwf	postinc1,c
 21173  014F82  0E00               	movlw	0
 21174  014F84  6EE6               	movwf	postinc1,c
 21175                           
 21176                           ;stkvar	_cp @ sp[(-25)+0]
 21177  014F86  0EE7               	movlw	-25
 21178  014F88  006F FF8F FFE6     	movff	plusw1,postinc1
 21179  014F8E  006F FF8F FFE6     	movff	plusw1,postinc1
 21180                           
 21181                           ;stkvar	_cb @ sp[(-27)+4]
 21182  014F94  0EE9               	movlw	-23
 21183  014F96  006F FF8F FFE6     	movff	plusw1,postinc1
 21184  014F9C  006F FF8F FFE6     	movff	plusw1,postinc1
 21185  014FA2  0E00               	movlw	0
 21186  014FA4  6EE6               	movwf	postinc1,c
 21187  014FA6  EC56  F004         	call	_cal_current_10A	;wreg free
 21188  014FAA  502A               	movf	btemp^0,w,c
 21189  014FAC  B4D8               	btfsc	status,2,c
 21190  014FAE  D193               	goto	l17717
 21191                           
 21192                           ;main.c: 594:   cal_current_10A(1, cb, cp, 10.0 / (float) (cb - cbz), 10.0 / (float) (cp
      +                           - cpz));
 21193                           ;stkvar	_cpz @ sp[(-17)+8]
 21194                           ;stkvar	_cp @ sp[(-17)+0]
 21195  014FB0  0EEF               	movlw	-17
 21196  014FB2  006F FF8C  F032    	movff	plusw1,btemp+8
 21197  014FB8  0EF0               	movlw	-16
 21198  014FBA  006F FF8C  F033    	movff	plusw1,btemp+9
 21199  014FC0  0EF1               	movlw	-15
 21200  014FC2  006F FF8C  F034    	movff	plusw1,btemp+10
 21201  014FC8  0EF2               	movlw	-14
 21202  014FCA  006F FF8C  F035    	movff	plusw1,btemp+11
 21203  014FD0  0EF7               	movlw	-9
 21204  014FD2  50E3               	movf	plusw1,w,c
 21205  014FD4  5E32               	subwf	(btemp+8)^0,f,c
 21206  014FD6  0EF8               	movlw	-8
 21207  014FD8  50E3               	movf	plusw1,w,c
 21208  014FDA  5A33               	subwfb	(btemp+9)^0,f,c
 21209  014FDC  0EF9               	movlw	-7
 21210  014FDE  50E3               	movf	plusw1,w,c
 21211  014FE0  5A34               	subwfb	(btemp+10)^0,f,c
 21212  014FE2  0EFA               	movlw	-6
 21213  014FE4  50E3               	movf	plusw1,w,c
 21214  014FE6  5A35               	subwfb	(btemp+11)^0,f,c
 21215  014FE8  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21216  014FEE  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21217  014FF4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21218  014FFA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21219  015000  0E00               	movlw	0
 21220  015002  6EE6               	movwf	postinc1,c
 21221  015004  ECC9  F0EB         	call	___xxtofl	;wreg free
 21222  015008  0060  F0AB  FFE6   	movff	btemp,postinc1
 21223  01500E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21224  015014  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21225  01501A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21226  015020  0E00               	movlw	0
 21227  015022  6EE6               	movwf	postinc1,c
 21228  015024  0E00               	movlw	0
 21229  015026  6EE6               	movwf	postinc1,c
 21230  015028  0E20               	movlw	32
 21231  01502A  6EE6               	movwf	postinc1,c
 21232  01502C  0E41               	movlw	65
 21233  01502E  6EE6               	movwf	postinc1,c
 21234  015030  EC57  F0C3         	call	___fldiv	;wreg free
 21235  015034  0060  F0AB  FFE6   	movff	btemp,postinc1
 21236  01503A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21237  015040  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21238  015046  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21239                           
 21240                           ;stkvar	_cbz @ sp[(-21)+12]
 21241                           ;stkvar	_cb @ sp[(-21)+4]
 21242  01504C  0EEF               	movlw	-17
 21243  01504E  006F FF8C  F032    	movff	plusw1,btemp+8
 21244  015054  0EF0               	movlw	-16
 21245  015056  006F FF8C  F033    	movff	plusw1,btemp+9
 21246  01505C  0EF1               	movlw	-15
 21247  01505E  006F FF8C  F034    	movff	plusw1,btemp+10
 21248  015064  0EF2               	movlw	-14
 21249  015066  006F FF8C  F035    	movff	plusw1,btemp+11
 21250  01506C  0EF7               	movlw	-9
 21251  01506E  50E3               	movf	plusw1,w,c
 21252  015070  5E32               	subwf	(btemp+8)^0,f,c
 21253  015072  0EF8               	movlw	-8
 21254  015074  50E3               	movf	plusw1,w,c
 21255  015076  5A33               	subwfb	(btemp+9)^0,f,c
 21256  015078  0EF9               	movlw	-7
 21257  01507A  50E3               	movf	plusw1,w,c
 21258  01507C  5A34               	subwfb	(btemp+10)^0,f,c
 21259  01507E  0EFA               	movlw	-6
 21260  015080  50E3               	movf	plusw1,w,c
 21261  015082  5A35               	subwfb	(btemp+11)^0,f,c
 21262  015084  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21263  01508A  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21264  015090  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21265  015096  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21266  01509C  0E00               	movlw	0
 21267  01509E  6EE6               	movwf	postinc1,c
 21268  0150A0  ECC9  F0EB         	call	___xxtofl	;wreg free
 21269  0150A4  0060  F0AB  FFE6   	movff	btemp,postinc1
 21270  0150AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21271  0150B0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21272  0150B6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21273  0150BC  0E00               	movlw	0
 21274  0150BE  6EE6               	movwf	postinc1,c
 21275  0150C0  0E00               	movlw	0
 21276  0150C2  6EE6               	movwf	postinc1,c
 21277  0150C4  0E20               	movlw	32
 21278  0150C6  6EE6               	movwf	postinc1,c
 21279  0150C8  0E41               	movlw	65
 21280  0150CA  6EE6               	movwf	postinc1,c
 21281  0150CC  EC57  F0C3         	call	___fldiv	;wreg free
 21282  0150D0  0060  F0AB  FFE6   	movff	btemp,postinc1
 21283  0150D6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21284  0150DC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21285  0150E2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21286                           
 21287                           ;stkvar	_cp @ sp[(-25)+0]
 21288  0150E8  0EE7               	movlw	-25
 21289  0150EA  006F FF8F FFE6     	movff	plusw1,postinc1
 21290  0150F0  006F FF8F FFE6     	movff	plusw1,postinc1
 21291                           
 21292                           ;stkvar	_cb @ sp[(-27)+4]
 21293  0150F6  0EE9               	movlw	-23
 21294  0150F8  006F FF8F FFE6     	movff	plusw1,postinc1
 21295  0150FE  006F FF8F FFE6     	movff	plusw1,postinc1
 21296  015104  0E01               	movlw	1
 21297  015106  6EE6               	movwf	postinc1,c
 21298  015108  EC56  F004         	call	_cal_current_10A	;wreg free
 21299                           
 21300                           ;main.c: 595:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 21301  01510C  0E66               	movlw	low STR_52
 21302  01510E  6EE6               	movwf	postinc1,c
 21303  015110  0EFE               	movlw	high STR_52
 21304  015112  6EE6               	movwf	postinc1,c
 21305  015114  0E00               	movlw	0
 21306  015116  6EE6               	movwf	postinc1,c
 21307  015118  0E00               	movlw	0
 21308  01511A  6EE6               	movwf	postinc1,c
 21309  01511C  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 21310  015120  0060  F0AB  FFE6   	movff	btemp,postinc1
 21311  015126  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21312  01512C  0E04               	movlw	4
 21313  01512E  6EE6               	movwf	postinc1,c
 21314  015130  EC01  F0FF         	call	_sprintf	;wreg free
 21315                           
 21316                           ; BSR set to: 0
 21317                           ;main.c: 596:   sprintf(get_vterm_ptr(1, 0), " %f %f              ", 10.0 / (float) (cb 
      +                          - cbz), 10.0 / (float) (cp - cpz));
 21318                           ;stkvar	_cpz @ sp[(-17)+8]
 21319                           ;stkvar	_cp @ sp[(-17)+0]
 21320  015134  0EEF               	movlw	-17
 21321  015136  006F FF8C  F032    	movff	plusw1,btemp+8
 21322  01513C  0EF0               	movlw	-16
 21323  01513E  006F FF8C  F033    	movff	plusw1,btemp+9
 21324  015144  0EF1               	movlw	-15
 21325  015146  006F FF8C  F034    	movff	plusw1,btemp+10
 21326  01514C  0EF2               	movlw	-14
 21327  01514E  006F FF8C  F035    	movff	plusw1,btemp+11
 21328  015154  0EF7               	movlw	-9
 21329  015156  50E3               	movf	plusw1,w,c
 21330  015158  5E32               	subwf	(btemp+8)^0,f,c
 21331  01515A  0EF8               	movlw	-8
 21332  01515C  50E3               	movf	plusw1,w,c
 21333  01515E  5A33               	subwfb	(btemp+9)^0,f,c
 21334  015160  0EF9               	movlw	-7
 21335  015162  50E3               	movf	plusw1,w,c
 21336  015164  5A34               	subwfb	(btemp+10)^0,f,c
 21337  015166  0EFA               	movlw	-6
 21338  015168  50E3               	movf	plusw1,w,c
 21339  01516A  5A35               	subwfb	(btemp+11)^0,f,c
 21340  01516C  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21341  015172  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21342  015178  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21343  01517E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21344  015184  0E00               	movlw	0
 21345  015186  6EE6               	movwf	postinc1,c
 21346  015188  ECC9  F0EB         	call	___xxtofl	;wreg free
 21347  01518C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21348  015192  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21349  015198  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21350  01519E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21351  0151A4  0E00               	movlw	0
 21352  0151A6  6EE6               	movwf	postinc1,c
 21353  0151A8  0E00               	movlw	0
 21354  0151AA  6EE6               	movwf	postinc1,c
 21355  0151AC  0E20               	movlw	32
 21356  0151AE  6EE6               	movwf	postinc1,c
 21357  0151B0  0E41               	movlw	65
 21358  0151B2  6EE6               	movwf	postinc1,c
 21359  0151B4  EC57  F0C3         	call	___fldiv	;wreg free
 21360  0151B8  0060  F0AB  FFE6   	movff	btemp,postinc1
 21361  0151BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21362  0151C4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21363  0151CA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21364                           
 21365                           ;stkvar	_cbz @ sp[(-21)+12]
 21366                           ;stkvar	_cb @ sp[(-21)+4]
 21367  0151D0  0EEF               	movlw	-17
 21368  0151D2  006F FF8C  F032    	movff	plusw1,btemp+8
 21369  0151D8  0EF0               	movlw	-16
 21370  0151DA  006F FF8C  F033    	movff	plusw1,btemp+9
 21371  0151E0  0EF1               	movlw	-15
 21372  0151E2  006F FF8C  F034    	movff	plusw1,btemp+10
 21373  0151E8  0EF2               	movlw	-14
 21374  0151EA  006F FF8C  F035    	movff	plusw1,btemp+11
 21375  0151F0  0EF7               	movlw	-9
 21376  0151F2  50E3               	movf	plusw1,w,c
 21377  0151F4  5E32               	subwf	(btemp+8)^0,f,c
 21378  0151F6  0EF8               	movlw	-8
 21379  0151F8  50E3               	movf	plusw1,w,c
 21380  0151FA  5A33               	subwfb	(btemp+9)^0,f,c
 21381  0151FC  0EF9               	movlw	-7
 21382  0151FE  50E3               	movf	plusw1,w,c
 21383  015200  5A34               	subwfb	(btemp+10)^0,f,c
 21384  015202  0EFA               	movlw	-6
 21385  015204  50E3               	movf	plusw1,w,c
 21386  015206  5A35               	subwfb	(btemp+11)^0,f,c
 21387  015208  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21388  01520E  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21389  015214  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21390  01521A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21391  015220  0E00               	movlw	0
 21392  015222  6EE6               	movwf	postinc1,c
 21393  015224  ECC9  F0EB         	call	___xxtofl	;wreg free
 21394  015228  0060  F0AB  FFE6   	movff	btemp,postinc1
 21395  01522E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21396  015234  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21397  01523A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21398  015240  0E00               	movlw	0
 21399  015242  6EE6               	movwf	postinc1,c
 21400  015244  0E00               	movlw	0
 21401  015246  6EE6               	movwf	postinc1,c
 21402  015248  0E20               	movlw	32
 21403  01524A  6EE6               	movwf	postinc1,c
 21404  01524C  0E41               	movlw	65
 21405  01524E  6EE6               	movwf	postinc1,c
 21406  015250  EC57  F0C3         	call	___fldiv	;wreg free
 21407  015254  0060  F0AB  FFE6   	movff	btemp,postinc1
 21408  01525A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21409  015260  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21410  015266  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21411  01526C  0E40               	movlw	low STR_73
 21412  01526E  6EE6               	movwf	postinc1,c
 21413  015270  0EFD               	movlw	high STR_73
 21414  015272  6EE6               	movwf	postinc1,c
 21415  015274  0E00               	movlw	0
 21416  015276  6EE6               	movwf	postinc1,c
 21417  015278  0E01               	movlw	1
 21418  01527A  6EE6               	movwf	postinc1,c
 21419  01527C  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 21420  015280  0060  F0AB  FFE6   	movff	btemp,postinc1
 21421  015286  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21422  01528C  0E0C               	movlw	12
 21423  01528E  6EE6               	movwf	postinc1,c
 21424  015290  EC01  F0FF         	call	_sprintf	;wreg free
 21425                           
 21426                           ; BSR set to: 0
 21427                           ;main.c: 597:   sprintf(get_vterm_ptr(2, 0), "10A Cal Set         ");
 21428  015294  0E12               	movlw	low STR_74
 21429  015296  6EE6               	movwf	postinc1,c
 21430  015298  0EFE               	movlw	high STR_74
 21431  01529A  6EE6               	movwf	postinc1,c
 21432  01529C  0E00               	movlw	0
 21433  01529E  6EE6               	movwf	postinc1,c
 21434  0152A0  0E02               	movlw	2
 21435  0152A2  6EE6               	movwf	postinc1,c
 21436  0152A4  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 21437  0152A8  0060  F0AB  FFE6   	movff	btemp,postinc1
 21438  0152AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21439  0152B4  0E04               	movlw	4
 21440  0152B6  6EE6               	movwf	postinc1,c
 21441  0152B8  EC01  F0FF         	call	_sprintf	;wreg free
 21442                           
 21443                           ; BSR set to: 0
 21444                           ;main.c: 598:   update_lcd(0);
 21445  0152BC  0E00               	movlw	0
 21446  0152BE  6EE6               	movwf	postinc1,c
 21447  0152C0  ECB3  F0F7         	call	_update_lcd	;wreg free
 21448                           
 21449                           ;main.c: 599:   WaitMs(5000);
 21450  0152C4  0E88               	movlw	136
 21451  0152C6  6EE6               	movwf	postinc1,c
 21452  0152C8  0E13               	movlw	19
 21453  0152CA  6EE6               	movwf	postinc1,c
 21454  0152CC  ECA6  F012         	call	_WaitMs	;wreg free
 21455                           
 21456                           ;main.c: 600:   write_cal_data();
 21457  0152D0  EC10  F0F9         	call	_write_cal_data	;wreg free
 21458                           
 21459                           ;main.c: 601:  } else {
 21460  0152D4  D055               	goto	l1519
 21461  0152D6                     l17717:
 21462                           
 21463                           ;main.c: 602:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 21464  0152D6  0E66               	movlw	low STR_52
 21465  0152D8  6EE6               	movwf	postinc1,c
 21466  0152DA  0EFE               	movlw	high STR_52
 21467  0152DC  6EE6               	movwf	postinc1,c
 21468  0152DE  0E00               	movlw	0
 21469  0152E0  6EE6               	movwf	postinc1,c
 21470  0152E2  0E00               	movlw	0
 21471  0152E4  6EE6               	movwf	postinc1,c
 21472  0152E6  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 21473  0152EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21474  0152F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21475  0152F6  0E04               	movlw	4
 21476  0152F8  6EE6               	movwf	postinc1,c
 21477  0152FA  EC01  F0FF         	call	_sprintf	;wreg free
 21478                           
 21479                           ;main.c: 603:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 21480  0152FE  0E01               	movlw	1
 21481  015300  6EE6               	movwf	postinc1,c
 21482  015302  ECBB  F015         	call	_get_raw_result	;wreg free
 21483  015306  0060  F0AB  FFE6   	movff	btemp,postinc1
 21484  01530C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21485  015312  0E00               	movlw	0
 21486  015314  6EE6               	movwf	postinc1,c
 21487  015316  ECBB  F015         	call	_get_raw_result	;wreg free
 21488  01531A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21489  015320  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21490  015326  0E55               	movlw	low STR_60
 21491  015328  6EE6               	movwf	postinc1,c
 21492  01532A  0EFD               	movlw	high STR_60
 21493  01532C  6EE6               	movwf	postinc1,c
 21494  01532E  0E00               	movlw	0
 21495  015330  6EE6               	movwf	postinc1,c
 21496  015332  0E01               	movlw	1
 21497  015334  6EE6               	movwf	postinc1,c
 21498  015336  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 21499  01533A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21500  015340  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21501  015346  0E08               	movlw	8
 21502  015348  6EE6               	movwf	postinc1,c
 21503  01534A  EC01  F0FF         	call	_sprintf	;wreg free
 21504                           
 21505                           ;main.c: 604:   sprintf(get_vterm_ptr(2, 0), "10A Out Of Range    ");
 21506  01534E  0ECF               	movlw	low STR_77
 21507  015350  6EE6               	movwf	postinc1,c
 21508  015352  0EFE               	movlw	high STR_77
 21509  015354  6EE6               	movwf	postinc1,c
 21510  015356  0E00               	movlw	0
 21511  015358  6EE6               	movwf	postinc1,c
 21512  01535A  0E02               	movlw	2
 21513  01535C  6EE6               	movwf	postinc1,c
 21514  01535E  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 21515  015362  0060  F0AB  FFE6   	movff	btemp,postinc1
 21516  015368  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21517  01536E  0E04               	movlw	4
 21518  015370  6EE6               	movwf	postinc1,c
 21519  015372  EC01  F0FF         	call	_sprintf	;wreg free
 21520                           
 21521                           ;main.c: 605:   update_lcd(0);
 21522  015376  0E00               	movlw	0
 21523  015378  6EE6               	movwf	postinc1,c
 21524  01537A  ECB3  F0F7         	call	_update_lcd	;wreg free
 21525  01537E  D45B               	goto	l17641
 21526  015380                     l1519:
 21527                           
 21528                           ; _current_sensor_cal: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 0, argsize = 0, vargsize = 0
 21529  015380  0EEF               	movlw	239
 21530  015382  26E1               	addwf	fsr1l,f,c
 21531  015384  0EFF               	movlw	255
 21532  015386  22E2               	addwfc	fsr1h,f,c
 21533  015388  0012               	return		;funcret
 21534  01538A                     __end_of_current_sensor_cal:
 21535                           	opt callstack 0
 21536                           
 21537 ;; *************** function _write_cal_data *****************
 21538 ;; Defined at:
 21539 ;;		line 406 in file "daq.c"
 21540 ;; Parameters:    Size  Location     Type
 21541 ;;		None
 21542 ;; Auto vars:     Size  Location     Type
 21543 ;;  x               2  [STACK] unsigned short 
 21544 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21545 ;;		 -> R(171), 
 21546 ;;  y               2  [STACK] unsigned short 
 21547 ;;  crcVal          1  [STACK] unsigned char 
 21548 ;; Return value:  Size  Location     Type
 21549 ;;                  1  [STACK] void 
 21550 ;; Registers used:
 21551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21552 ;; Tracked objects:
 21553 ;;		On entry : 0/39
 21554 ;;		On exit  : 0/0
 21555 ;;		Unchanged: 0/0
 21556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21561 ;;Total ram usage:        0 bytes
 21562 ;; Hardware stack levels used:    1
 21563 ;; Hardware stack levels required when called:   17
 21564 ;; This function calls:
 21565 ;;		_CRC_8BitDataWrite
 21566 ;;		_CRC_CalculatedResultGet
 21567 ;;		_CRC_Initialize
 21568 ;;		_CRC_IsBusy
 21569 ;;		_CRC_Start
 21570 ;;		_DATAEE_WriteByte
 21571 ;; This function is called by:
 21572 ;;		_main
 21573 ;;		_current_sensor_cal
 21574 ;; This function uses a reentrant model
 21575 ;;
 21576                           
 21577                           	psect	text56
 21578  01F220                     __ptext56:
 21579                           	opt callstack 0
 21580  01F220                     _write_cal_data:
 21581                           	opt callstack 0
 21582                           
 21583                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21584  01F220  0E07               	movlw	7
 21585  01F222  26E1               	addwf	fsr1l,f,c
 21586  01F224  0E00               	movlw	0
 21587  01F226  22E2               	addwfc	fsr1h,f,c
 21588                           
 21589                           ;daq.c: 408:  uint16_t x = 0, y;
 21590                           ;stkvar	_x @ sp[(-7)+0]
 21591                           
 21592                           ;incstack = 0
 21593  01F228  0EF9               	movlw	-7
 21594  01F22A  6AE3               	clrf	plusw1,c
 21595  01F22C  0EFA               	movlw	-6
 21596  01F22E  6AE3               	clrf	plusw1,c
 21597                           
 21598                           ;daq.c: 409:  uint8_t *r_cal_ptr, crcVal;;daq.c: 411:  y = sizeof(R);
 21599  01F230  0EAB               	movlw	171
 21600  01F232  6E34               	movwf	(btemp+10)^0,c
 21601  01F234  0E00               	movlw	0
 21602  01F236  6E35               	movwf	(btemp+11)^0,c
 21603                           
 21604                           ;stkvar	_y @ sp[(-7)+4]
 21605  01F238  0EFD               	movlw	-3
 21606  01F23A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21607  01F240  0EFE               	movlw	-2
 21608  01F242  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21609                           
 21610                           ;daq.c: 412:  R.crc = 0x42;
 21611  01F248  0E42               	movlw	66
 21612  01F24A  0101               	movlb	1	; () banked
 21613  01F24C  6FAA               	movwf	(_R+170)& (0+255),b	;volatile
 21614                           
 21615                           ; BSR set to: 1
 21616                           ;daq.c: 413:  r_cal_ptr = (uint8_t*) & R;
 21617                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21618  01F24E  0E01               	movlw	high _R
 21619  01F250  6E2A               	movwf	btemp^0,c
 21620  01F252  0EFC               	movlw	-4
 21621  01F254  0060  F0AB  FFE3   	movff	btemp,plusw1
 21622  01F25A  0E00               	movlw	low _R
 21623  01F25C  6E2A               	movwf	btemp^0,c
 21624  01F25E  0EFB               	movlw	-5
 21625  01F260  0060  F0AB  FFE3   	movff	btemp,plusw1
 21626                           
 21627                           ; BSR set to: 1
 21628                           ;daq.c: 414:  R.checkmark = 0x1957;
 21629  01F266  0E19               	movlw	25
 21630  01F268  6FA9               	movwf	(_R+169)& (0+255),b	;volatile
 21631  01F26A  0E57               	movlw	87
 21632  01F26C  6FA8               	movwf	(_R+168)& (0+255),b	;volatile
 21633                           
 21634                           ; BSR set to: 1
 21635                           ;daq.c: 416:  CRC_Initialize();
 21636  01F26E  ECE4  F009         	call	_CRC_Initialize	;wreg free
 21637                           
 21638                           ; BSR set to: 0
 21639                           ;daq.c: 419:  CRC_Start();
 21640  01F272  EC41  F017         	call	_CRC_Start	;wreg free
 21641  01F276                     l13591:
 21642                           
 21643                           ;daq.c: 422:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 21644                           ;stkvar	_x @ sp[(-7)+0]
 21645  01F276  0EF9               	movlw	-7
 21646  01F278  006F FF8C  F034    	movff	plusw1,btemp+10
 21647  01F27E  0EFA               	movlw	-6
 21648  01F280  006F FF8C  F035    	movff	plusw1,btemp+11
 21649                           
 21650                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21651  01F286  0EFB               	movlw	-5
 21652  01F288  006F FF8C  F032    	movff	plusw1,btemp+8
 21653  01F28E  0EFC               	movlw	-4
 21654  01F290  006F FF8C  F033    	movff	plusw1,btemp+9
 21655  01F296  5034               	movf	(btemp+10)^0,w,c
 21656  01F298  2432               	addwf	(btemp+8)^0,w,c
 21657  01F29A  6ED9               	movwf	fsr2l,c
 21658  01F29C  5035               	movf	(btemp+11)^0,w,c
 21659  01F29E  2033               	addwfc	(btemp+9)^0,w,c
 21660  01F2A0  6EDA               	movwf	fsr2h,c
 21661  01F2A2  50DF               	movf	indf2,w,c
 21662  01F2A4  6EE6               	movwf	postinc1,c
 21663                           
 21664                           ;stkvar	_x @ sp[(-8)+0]
 21665  01F2A6  0EF8               	movlw	-8
 21666  01F2A8  006F FF8F FFE6     	movff	plusw1,postinc1
 21667  01F2AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21668  01F2B4  ECFF  F00C         	call	_DATAEE_WriteByte	;wreg free
 21669                           
 21670                           ;daq.c: 423:   CRC_8BitDataWrite(r_cal_ptr[x]);
 21671                           ;stkvar	_x @ sp[(-7)+0]
 21672  01F2B8  0EF9               	movlw	-7
 21673  01F2BA  006F FF8C  F034    	movff	plusw1,btemp+10
 21674  01F2C0  0EFA               	movlw	-6
 21675  01F2C2  006F FF8C  F035    	movff	plusw1,btemp+11
 21676                           
 21677                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21678  01F2C8  0EFB               	movlw	-5
 21679  01F2CA  006F FF8C  F032    	movff	plusw1,btemp+8
 21680  01F2D0  0EFC               	movlw	-4
 21681  01F2D2  006F FF8C  F033    	movff	plusw1,btemp+9
 21682  01F2D8  5034               	movf	(btemp+10)^0,w,c
 21683  01F2DA  2432               	addwf	(btemp+8)^0,w,c
 21684  01F2DC  6ED9               	movwf	fsr2l,c
 21685  01F2DE  5035               	movf	(btemp+11)^0,w,c
 21686  01F2E0  2033               	addwfc	(btemp+9)^0,w,c
 21687  01F2E2  6EDA               	movwf	fsr2h,c
 21688  01F2E4  50DF               	movf	indf2,w,c
 21689  01F2E6  6EE6               	movwf	postinc1,c
 21690  01F2E8  ECB3  F016         	call	_CRC_8BitDataWrite	;wreg free
 21691  01F2EC                     l13595:
 21692  01F2EC  ECD5  F016         	call	_CRC_IsBusy	;wreg free
 21693  01F2F0  502A               	movf	btemp^0,w,c
 21694  01F2F2  A4D8               	btfss	status,2,c
 21695  01F2F4  D7FB               	goto	l13595
 21696                           
 21697                           ;daq.c: 425:  } while (++x < y);
 21698                           ;stkvar	_y @ sp[(-7)+4]
 21699  01F2F6  0EFD               	movlw	-3
 21700  01F2F8  006F FF8C  F034    	movff	plusw1,btemp+10
 21701  01F2FE  0EFE               	movlw	-2
 21702  01F300  006F FF8C  F035    	movff	plusw1,btemp+11
 21703                           
 21704                           ;stkvar	_x @ sp[(-7)+0]
 21705  01F306  0EF9               	movlw	-7
 21706  01F308  50E3               	movf	plusw1,w,c
 21707  01F30A  0F01               	addlw	1
 21708  01F30C  6E2A               	movwf	btemp^0,c
 21709  01F30E  0EF9               	movlw	-7
 21710  01F310  0060  F0AB  FFE3   	movff	btemp,plusw1
 21711  01F316  6A2A               	clrf	btemp^0,c
 21712  01F318  0EFA               	movlw	-6
 21713  01F31A  50E3               	movf	plusw1,w,c
 21714  01F31C  202A               	addwfc	btemp^0,w,c
 21715  01F31E  6E2A               	movwf	btemp^0,c
 21716  01F320  0EFA               	movlw	-6
 21717  01F322  0060  F0AB  FFE3   	movff	btemp,plusw1
 21718  01F328  0EF9               	movlw	-7
 21719  01F32A  006F FF8C  F032    	movff	plusw1,btemp+8
 21720  01F330  0EFA               	movlw	-6
 21721  01F332  006F FF8C  F033    	movff	plusw1,btemp+9
 21722  01F338  5034               	movf	(btemp+10)^0,w,c
 21723  01F33A  5C32               	subwf	(btemp+8)^0,w,c
 21724  01F33C  5035               	movf	(btemp+11)^0,w,c
 21725  01F33E  5833               	subwfb	(btemp+9)^0,w,c
 21726  01F340  A0D8               	btfss	status,0,c
 21727  01F342  D799               	goto	l13591
 21728                           
 21729                           ;daq.c: 427:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 21730  01F344  0E00               	movlw	0
 21731  01F346  6EE6               	movwf	postinc1,c
 21732  01F348  0E00               	movlw	0
 21733  01F34A  6EE6               	movwf	postinc1,c
 21734  01F34C  0E00               	movlw	0
 21735  01F34E  6EE6               	movwf	postinc1,c
 21736  01F350  EC2C  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
 21737                           
 21738                           ;stkvar	_crcVal @ sp[(-7)+6]
 21739  01F354  0EFF               	movlw	-1
 21740  01F356  0060  F0AB  FFE3   	movff	btemp,plusw1
 21741                           
 21742                           ;daq.c: 429:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 21743                           ;stkvar	_crcVal @ sp[(-7)+6]
 21744  01F35C  0EFF               	movlw	-1
 21745  01F35E  50E3               	movf	plusw1,w,c
 21746  01F360  6EE6               	movwf	postinc1,c
 21747  01F362  0EAA               	movlw	170
 21748  01F364  6EE6               	movwf	postinc1,c
 21749  01F366  0E00               	movlw	0
 21750  01F368  6EE6               	movwf	postinc1,c
 21751  01F36A  ECFF  F00C         	call	_DATAEE_WriteByte	;wreg free
 21752                           
 21753                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21754  01F36E  0EF9               	movlw	249
 21755  01F370  26E1               	addwf	fsr1l,f,c
 21756  01F372  0EFF               	movlw	255
 21757  01F374  22E2               	addwfc	fsr1h,f,c
 21758  01F376  0012               	return		;funcret
 21759  01F378                     __end_of_write_cal_data:
 21760                           	opt callstack 0
 21761                           
 21762 ;; *************** function _DATAEE_WriteByte *****************
 21763 ;; Defined at:
 21764 ;;		line 172 in file "mcc_generated_files/memory.c"
 21765 ;; Parameters:    Size  Location     Type
 21766 ;;  bAdd            2  [STACK] unsigned short 
 21767 ;;  bData           1  [STACK] unsigned char 
 21768 ;; Auto vars:     Size  Location     Type
 21769 ;;  GIEBitValue     1  [STACK] unsigned char 
 21770 ;; Return value:  Size  Location     Type
 21771 ;;                  1  [STACK] void 
 21772 ;; Registers used:
 21773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21774 ;; Tracked objects:
 21775 ;;		On entry : 0/39
 21776 ;;		On exit  : 0/0
 21777 ;;		Unchanged: 0/0
 21778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21783 ;;Total ram usage:        0 bytes
 21784 ;; Hardware stack levels used:    1
 21785 ;; Hardware stack levels required when called:   15
 21786 ;; This function calls:
 21787 ;;		Nothing
 21788 ;; This function is called by:
 21789 ;;		_write_cal_data
 21790 ;; This function uses a reentrant model
 21791 ;;
 21792                           
 21793                           	psect	text57
 21794  0019FE                     __ptext57:
 21795                           	opt callstack 0
 21796  0019FE                     _DATAEE_WriteByte:
 21797                           	opt callstack 0
 21798                           
 21799                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21800  0019FE  52E6               	movf	postinc1,f,c
 21801                           
 21802                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 21803                           
 21804                           ;incstack = 0
 21805  001A00  AED2               	btfss	210,7,c	;volatile
 21806  001A02  D003               	goto	u12130
 21807  001A04  6A35               	clrf	(btemp+11)^0,c
 21808  001A06  2A35               	incf	(btemp+11)^0,f,c
 21809  001A08  D001               	goto	u12138
 21810  001A0A                     u12130:
 21811  001A0A  6A35               	clrf	(btemp+11)^0,c
 21812  001A0C                     u12138:
 21813                           
 21814                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21815  001A0C  0EFF               	movlw	-1
 21816  001A0E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21817                           
 21818                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 21819                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21820  001A14  0EFE               	movlw	254
 21821  001A16  24E1               	addwf	fsr1l,w,c
 21822  001A18  6ED9               	movwf	fsr2l,c
 21823  001A1A  0EFF               	movlw	255
 21824  001A1C  20E2               	addwfc	fsr1h,w,c
 21825  001A1E  6EDA               	movwf	fsr2h,c
 21826  001A20  50DF               	movf	indf2,w,c
 21827  001A22  0B03               	andlw	3
 21828  001A24  0139               	movlb	57	; () banked
 21829  001A26  6FE1               	movwf	225,b	;volatile
 21830                           
 21831                           ; BSR set to: 57
 21832                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 21833                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21834  001A28  0EFD               	movlw	-3
 21835  001A2A  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 21836                           
 21837                           ; BSR set to: 57
 21838                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 21839                           ;stkvar	_bData @ sp[(-1)+-3]
 21840  001A30  0EFC               	movlw	-4
 21841  001A32  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 21842                           
 21843                           ; BSR set to: 57
 21844                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 21845  001A38  0E3F               	movlw	-193
 21846  001A3A  17E5               	andwf	229,f,b	;volsfr
 21847                           
 21848                           ; BSR set to: 57
 21849                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 21850  001A3C  85E5               	bsf	229,2,b	;volsfr
 21851                           
 21852                           ; BSR set to: 57
 21853                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 21854  001A3E  9ED2               	bcf	210,7,c	;volatile
 21855                           
 21856                           ; BSR set to: 57
 21857                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 21858  001A40  0E55               	movlw	85
 21859  001A42  6FE6               	movwf	230,b	;volsfr
 21860                           
 21861                           ; BSR set to: 57
 21862                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 21863  001A44  0EAA               	movlw	170
 21864  001A46  6FE6               	movwf	230,b	;volsfr
 21865                           
 21866                           ; BSR set to: 57
 21867                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 21868  001A48  83E5               	bsf	229,1,b	;volsfr
 21869  001A4A                     l942:
 21870                           
 21871                           ; BSR set to: 57
 21872                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 21873  001A4A  B3E5               	btfsc	229,1,b	;volsfr
 21874  001A4C  D7FE               	goto	l942
 21875                           
 21876                           ; BSR set to: 57
 21877                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 21878  001A4E  95E5               	bcf	229,2,b	;volsfr
 21879                           
 21880                           ; BSR set to: 57
 21881                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 21882                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21883  001A50  0EFF               	movlw	-1
 21884  001A52  B0E3               	btfsc	plusw1,0,c
 21885  001A54  D002               	bra	u12155
 21886  001A56  9ED2               	bcf	210,7,c	;volatile
 21887  001A58  D001               	bra	u12156
 21888  001A5A                     u12155:
 21889  001A5A  8ED2               	bsf	210,7,c	;volatile
 21890  001A5C                     u12156:
 21891                           
 21892                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21893  001A5C  52E5               	movf	postdec1,f,c
 21894  001A5E  52E5               	movf	postdec1,f,c
 21895  001A60  52E5               	movf	postdec1,f,c
 21896  001A62  52E5               	movf	postdec1,f,c
 21897  001A64  0012               	return		;funcret
 21898  001A66                     __end_of_DATAEE_WriteByte:
 21899                           	opt callstack 0
 21900                           
 21901 ;; *************** function _CRC_Start *****************
 21902 ;; Defined at:
 21903 ;;		line 119 in file "mcc_generated_files/crc.c"
 21904 ;; Parameters:    Size  Location     Type
 21905 ;;		None
 21906 ;; Auto vars:     Size  Location     Type
 21907 ;;		None
 21908 ;; Return value:  Size  Location     Type
 21909 ;;                  1  [STACK] void 
 21910 ;; Registers used:
 21911 ;;		None
 21912 ;; Tracked objects:
 21913 ;;		On entry : 3F/0
 21914 ;;		On exit  : 3F/39
 21915 ;;		Unchanged: 0/0
 21916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21921 ;;Total ram usage:        0 bytes
 21922 ;; Hardware stack levels used:    1
 21923 ;; Hardware stack levels required when called:   15
 21924 ;; This function calls:
 21925 ;;		Nothing
 21926 ;; This function is called by:
 21927 ;;		_read_cal_data
 21928 ;;		_write_cal_data
 21929 ;; This function uses a reentrant model
 21930 ;;
 21931                           
 21932                           	psect	text58
 21933  002E82                     __ptext58:
 21934                           	opt callstack 0
 21935  002E82                     _CRC_Start:
 21936                           	opt callstack 14
 21937                           
 21938                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 21939                           
 21940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21941                           ;incstack = 0
 21942  002E82  0139               	movlb	57	; () banked
 21943  002E84  8D68               	bsf	104,6,b	;volatile
 21944                           
 21945                           ; BSR set to: 57
 21946                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21947  002E86  0012               	return		;funcret
 21948  002E88                     __end_of_CRC_Start:
 21949                           	opt callstack 0
 21950                           
 21951 ;; *************** function _CRC_IsBusy *****************
 21952 ;; Defined at:
 21953 ;;		line 201 in file "mcc_generated_files/crc.c"
 21954 ;; Parameters:    Size  Location     Type
 21955 ;;		None
 21956 ;; Auto vars:     Size  Location     Type
 21957 ;;		None
 21958 ;; Return value:  Size  Location     Type
 21959 ;;                  1  [STACK] _Bool 
 21960 ;; Registers used:
 21961 ;;		btemp
 21962 ;; Tracked objects:
 21963 ;;		On entry : 0/39
 21964 ;;		On exit  : 0/0
 21965 ;;		Unchanged: 0/0
 21966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21971 ;;Total ram usage:        0 bytes
 21972 ;; Hardware stack levels used:    1
 21973 ;; Hardware stack levels required when called:   15
 21974 ;; This function calls:
 21975 ;;		Nothing
 21976 ;; This function is called by:
 21977 ;;		_read_cal_data
 21978 ;;		_write_cal_data
 21979 ;; This function uses a reentrant model
 21980 ;;
 21981                           
 21982                           	psect	text59
 21983  002DAA                     __ptext59:
 21984                           	opt callstack 0
 21985  002DAA                     _CRC_IsBusy:
 21986                           	opt callstack 14
 21987                           
 21988                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 21989                           
 21990                           ; BSR set to: 57
 21991                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21992                           ;incstack = 0
 21993  002DAA  0139               	movlb	57	; () banked
 21994  002DAC  AB68               	btfss	104,5,b	;volatile
 21995  002DAE  D003               	goto	u12360
 21996  002DB0  6A2A               	clrf	btemp^0,c
 21997  002DB2  2A2A               	incf	btemp^0,f,c
 21998  002DB4  0012               	return	
 21999  002DB6                     u12360:
 22000  002DB6  6A2A               	clrf	btemp^0,c
 22001                           
 22002                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 22003  002DB8  0012               	return		;funcret
 22004  002DBA                     __end_of_CRC_IsBusy:
 22005                           	opt callstack 0
 22006                           
 22007 ;; *************** function _CRC_CalculatedResultGet *****************
 22008 ;; Defined at:
 22009 ;;		line 159 in file "mcc_generated_files/crc.c"
 22010 ;; Parameters:    Size  Location     Type
 22011 ;;  reverse         1  [STACK] _Bool 
 22012 ;;  xorValue        2  [STACK] unsigned short 
 22013 ;; Auto vars:     Size  Location     Type
 22014 ;;  result          2  [STACK] unsigned short 
 22015 ;;  mask            2  [STACK] unsigned short 
 22016 ;; Return value:  Size  Location     Type
 22017 ;;                  2  [STACK] unsigned short 
 22018 ;; Registers used:
 22019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 22020 ;; Tracked objects:
 22021 ;;		On entry : 0/39
 22022 ;;		On exit  : 0/0
 22023 ;;		Unchanged: 0/0
 22024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22029 ;;Total ram usage:        0 bytes
 22030 ;; Hardware stack levels used:    1
 22031 ;; Hardware stack levels required when called:   16
 22032 ;; This function calls:
 22033 ;;		_CRC_ReverseValue
 22034 ;; This function is called by:
 22035 ;;		_read_cal_data
 22036 ;;		_write_cal_data
 22037 ;; This function uses a reentrant model
 22038 ;;
 22039                           
 22040                           	psect	text60
 22041  01E858                     __ptext60:
 22042                           	opt callstack 0
 22043  01E858                     _CRC_CalculatedResultGet:
 22044                           	opt callstack 0
 22045                           
 22046                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22047  01E858  52E6               	movf	postinc1,f,c
 22048  01E85A  52E6               	movf	postinc1,f,c
 22049  01E85C  52E6               	movf	postinc1,f,c
 22050  01E85E  52E6               	movf	postinc1,f,c
 22051                           
 22052                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 22053                           
 22054                           ;incstack = 0
 22055  01E860  0139               	movlb	57	; () banked
 22056  01E862  9D68               	bcf	104,6,b	;volatile
 22057                           
 22058                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 22059  01E864  9DA0               	bcf	160,6,b	;volatile
 22060                           
 22061                           ; BSR set to: 57
 22062                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 22063  01E866  5169               	movf	105,w,b	;volatile
 22064  01E868  0B0F               	andlw	15
 22065  01E86A  6E35               	movwf	(btemp+11)^0,c
 22066  01E86C  3A35               	swapf	(btemp+11)^0,f,c
 22067  01E86E  5169               	movf	105,w,b	;volatile
 22068  01E870  1835               	xorwf	(btemp+11)^0,w,c
 22069  01E872  0B0F               	andlw	-241
 22070  01E874  1835               	xorwf	(btemp+11)^0,w,c
 22071  01E876  6F69               	movwf	105,b	;volatile
 22072                           
 22073                           ; BSR set to: 57
 22074                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 22075  01E878  0E08               	movlw	8
 22076  01E87A  0100               	movlb	0	; () banked
 22077  01E87C  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 22078  01E87E  D003               	goto	l1282
 22079                           
 22080                           ; BSR set to: 0
 22081                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 22082  01E880  0139               	movlb	57	; () banked
 22083  01E882  6B61               	clrf	97,b	;volatile
 22084  01E884  D001               	goto	L18
 22085  01E886                     l1282:
 22086                           
 22087                           ; BSR set to: 0
 22088                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 22089  01E886  0139               	movlb	57	; () banked
 22090  01E888                     L18:
 22091  01E888  6B60               	clrf	96,b	;volatile
 22092                           
 22093                           ; BSR set to: 57
 22094                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 22095                           
 22096                           ;mcc_generated_files/crc.c: 176:      }
 22097  01E88A  8D68               	bsf	104,6,b	;volatile
 22098  01E88C                     l1284:
 22099                           
 22100                           ; BSR set to: 57
 22101  01E88C  ADA0               	btfss	160,6,b	;volatile
 22102  01E88E  D7FE               	goto	l1284
 22103                           
 22104                           ; BSR set to: 57
 22105                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 22106  01E890  9DA0               	bcf	160,6,b	;volatile
 22107                           
 22108                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 22109  01E892  9D68               	bcf	104,6,b	;volatile
 22110                           
 22111                           ; BSR set to: 57
 22112                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 22113  01E894  0060  F388  F035   	movff	_crcObj,btemp+11
 22114  01E89A  0EFF               	movlw	255
 22115  01E89C  2635               	addwf	(btemp+11)^0,f,c
 22116  01E89E  3A35               	swapf	(btemp+11)^0,f,c
 22117  01E8A0  5169               	movf	105,w,b	;volatile
 22118  01E8A2  1835               	xorwf	(btemp+11)^0,w,c
 22119  01E8A4  0B0F               	andlw	-241
 22120  01E8A6  1835               	xorwf	(btemp+11)^0,w,c
 22121  01E8A8  6F69               	movwf	105,b	;volatile
 22122                           
 22123                           ; BSR set to: 57
 22124                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 22125  01E8AA  5162               	movf	98,w,b	;volatile
 22126  01E8AC  006E F58C  F02A    	movff	14691,btemp	;volatile
 22127  01E8B2  6A2B               	clrf	(btemp+1)^0,c
 22128  01E8B4  0060  F0A8  F02B   	movff	btemp,btemp+1
 22129  01E8BA  6A2A               	clrf	btemp^0,c
 22130  01E8BC  122A               	iorwf	btemp^0,f,c
 22131  01E8BE  0E00               	movlw	0
 22132  01E8C0  122B               	iorwf	(btemp+1)^0,f,c
 22133                           
 22134                           ;stkvar	_result @ sp[(-4)+0]
 22135  01E8C2  0EFC               	movlw	-4
 22136  01E8C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 22137  01E8CA  0EFD               	movlw	-3
 22138  01E8CC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22139                           
 22140                           ; BSR set to: 57
 22141                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 22142  01E8D2  0E10               	movlw	16
 22143  01E8D4  0100               	movlb	0	; () banked
 22144  01E8D6  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 22145  01E8D8  D03A               	goto	l12877
 22146                           
 22147                           ; BSR set to: 0
 22148                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 22149  01E8DA  0EFF               	movlw	255
 22150  01E8DC  6E34               	movwf	(btemp+10)^0,c
 22151  01E8DE  0EFF               	movlw	255
 22152  01E8E0  6E35               	movwf	(btemp+11)^0,c
 22153  01E8E2  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 22154  01E8E8  0E01               	movlw	1
 22155  01E8EA  6E30               	movwf	(btemp+6)^0,c
 22156  01E8EC  0E00               	movlw	0
 22157  01E8EE  6E31               	movwf	(btemp+7)^0,c
 22158  01E8F0  2A33               	incf	(btemp+9)^0,f,c
 22159  01E8F2  D003               	goto	u12344
 22160  01E8F4                     u12345:
 22161  01E8F4  90D8               	bcf	status,0,c
 22162  01E8F6  3630               	rlcf	(btemp+6)^0,f,c
 22163  01E8F8  3631               	rlcf	(btemp+7)^0,f,c
 22164  01E8FA                     u12344:
 22165  01E8FA  2E33               	decfsz	(btemp+9)^0,f,c
 22166  01E8FC  D7FB               	goto	u12345
 22167  01E8FE  5034               	movf	(btemp+10)^0,w,c
 22168  01E900  2630               	addwf	(btemp+6)^0,f,c
 22169  01E902  5035               	movf	(btemp+11)^0,w,c
 22170  01E904  2231               	addwfc	(btemp+7)^0,f,c
 22171                           
 22172                           ;stkvar	_mask @ sp[(-4)+2]
 22173  01E906  0EFE               	movlw	-2
 22174  01E908  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 22175  01E90E  0EFF               	movlw	-1
 22176  01E910  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 22177                           
 22178                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 22179                           ;stkvar	_mask @ sp[(-4)+2]
 22180  01E916  0EFE               	movlw	-2
 22181  01E918  006F FF8C  F034    	movff	plusw1,btemp+10
 22182  01E91E  0EFF               	movlw	-1
 22183  01E920  006F FF8C  F035    	movff	plusw1,btemp+11
 22184                           
 22185                           ;stkvar	_result @ sp[(-4)+0]
 22186  01E926  0EFC               	movlw	-4
 22187  01E928  006F FF8C  F02A    	movff	plusw1,btemp
 22188  01E92E  5034               	movf	(btemp+10)^0,w,c
 22189  01E930  162A               	andwf	btemp^0,f,c
 22190  01E932  0EFC               	movlw	-4
 22191  01E934  0060  F0AB  FFE3   	movff	btemp,plusw1
 22192  01E93A  0EFD               	movlw	-3
 22193  01E93C  006F FF8C  F02A    	movff	plusw1,btemp
 22194  01E942  5035               	movf	(btemp+11)^0,w,c
 22195  01E944  162A               	andwf	btemp^0,f,c
 22196  01E946  0EFD               	movlw	-3
 22197  01E948  0060  F0AB  FFE3   	movff	btemp,plusw1
 22198  01E94E                     l12877:
 22199                           
 22200                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 22201                           ;stkvar	_reverse @ sp[(-4)+-1]
 22202  01E94E  0EFB               	movlw	-5
 22203  01E950  50E3               	movf	plusw1,w,c
 22204  01E952  B4D8               	btfsc	status,2,c
 22205  01E954  D011               	goto	l12881
 22206                           
 22207                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 22208                           ;stkvar	_result @ sp[(-4)+0]
 22209  01E956  0EFC               	movlw	-4
 22210  01E958  006F FF8F FFE6     	movff	plusw1,postinc1
 22211  01E95E  006F FF8F FFE6     	movff	plusw1,postinc1
 22212  01E964  EC8D  F003         	call	_CRC_ReverseValue	;wreg free
 22213                           
 22214                           ;stkvar	_result @ sp[(-4)+0]
 22215  01E968  0EFC               	movlw	-4
 22216  01E96A  0060  F0AB  FFE3   	movff	btemp,plusw1
 22217  01E970  0EFD               	movlw	-3
 22218  01E972  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22219  01E978                     l12881:
 22220                           
 22221                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 22222                           ;stkvar	_xorValue @ sp[(-4)+-3]
 22223  01E978  0EF9               	movlw	-7
 22224  01E97A  006F FF8C  F034    	movff	plusw1,btemp+10
 22225  01E980  0EFA               	movlw	-6
 22226  01E982  006F FF8C  F035    	movff	plusw1,btemp+11
 22227                           
 22228                           ;stkvar	_result @ sp[(-4)+0]
 22229  01E988  0EFC               	movlw	-4
 22230  01E98A  006F FF8C  F02A    	movff	plusw1,btemp
 22231  01E990  5034               	movf	(btemp+10)^0,w,c
 22232  01E992  1A2A               	xorwf	btemp^0,f,c
 22233  01E994  0EFC               	movlw	-4
 22234  01E996  0060  F0AB  FFE3   	movff	btemp,plusw1
 22235  01E99C  0EFD               	movlw	-3
 22236  01E99E  006F FF8C  F02A    	movff	plusw1,btemp
 22237  01E9A4  5035               	movf	(btemp+11)^0,w,c
 22238  01E9A6  1A2A               	xorwf	btemp^0,f,c
 22239  01E9A8  0EFD               	movlw	-3
 22240  01E9AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 22241                           
 22242                           ;mcc_generated_files/crc.c: 198:     return result;
 22243                           ;stkvar	_result @ sp[(-4)+0]
 22244  01E9B0  0EFC               	movlw	-4
 22245  01E9B2  006F FF8C  F02A    	movff	plusw1,btemp
 22246  01E9B8  0EFD               	movlw	-3
 22247  01E9BA  006F FF8C  F02B    	movff	plusw1,btemp+1
 22248                           
 22249                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 22250  01E9C0  0EF9               	movlw	249
 22251  01E9C2  26E1               	addwf	fsr1l,f,c
 22252  01E9C4  0EFF               	movlw	255
 22253  01E9C6  22E2               	addwfc	fsr1h,f,c
 22254  01E9C8  0012               	return		;funcret
 22255  01E9CA                     __end_of_CRC_CalculatedResultGet:
 22256                           	opt callstack 0
 22257                           
 22258 ;; *************** function _CRC_ReverseValue *****************
 22259 ;; Defined at:
 22260 ;;		line 138 in file "mcc_generated_files/crc.c"
 22261 ;; Parameters:    Size  Location     Type
 22262 ;;  crc             2  [STACK] unsigned short 
 22263 ;; Auto vars:     Size  Location     Type
 22264 ;;  mask            2  [STACK] unsigned short 
 22265 ;;  reverse         2  [STACK] unsigned short 
 22266 ;; Return value:  Size  Location     Type
 22267 ;;                  2  [STACK] unsigned short 
 22268 ;; Registers used:
 22269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22270 ;; Tracked objects:
 22271 ;;		On entry : 0/0
 22272 ;;		On exit  : 0/0
 22273 ;;		Unchanged: 0/0
 22274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22279 ;;Total ram usage:        0 bytes
 22280 ;; Hardware stack levels used:    1
 22281 ;; Hardware stack levels required when called:   15
 22282 ;; This function calls:
 22283 ;;		Nothing
 22284 ;; This function is called by:
 22285 ;;		_CRC_CalculatedResultGet
 22286 ;; This function uses a reentrant model
 22287 ;;
 22288                           
 22289                           	psect	text61
 22290  00071A                     __ptext61:
 22291                           	opt callstack 0
 22292  00071A                     _CRC_ReverseValue:
 22293                           	opt callstack 0
 22294                           
 22295                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22296  00071A  52E6               	movf	postinc1,f,c
 22297  00071C  52E6               	movf	postinc1,f,c
 22298  00071E  52E6               	movf	postinc1,f,c
 22299  000720  52E6               	movf	postinc1,f,c
 22300                           
 22301                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 22302                           
 22303                           ;incstack = 0
 22304  000722  0E01               	movlw	1
 22305  000724  6E34               	movwf	(btemp+10)^0,c
 22306  000726  0E00               	movlw	0
 22307  000728  6E35               	movwf	(btemp+11)^0,c
 22308                           
 22309                           ;stkvar	_mask @ sp[(-4)+0]
 22310  00072A  0EFC               	movlw	-4
 22311  00072C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 22312  000732  0EFD               	movlw	-3
 22313  000734  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22314                           
 22315                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 22316  00073A  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 22317  000740  0EFF               	movlw	255
 22318  000742  2635               	addwf	(btemp+11)^0,f,c
 22319                           
 22320                           ;stkvar	_mask @ sp[(-4)+0]
 22321  000744  50E1               	movf	fsr1l,w,c
 22322  000746  0FFC               	addlw	-4
 22323  000748  6ED9               	movwf	fsr2l,c
 22324  00074A  50E2               	movf	fsr1h,w,c
 22325  00074C  6EDA               	movwf	fsr2h,c
 22326  00074E  0EFF               	movlw	255
 22327  000750  22DA               	addwfc	fsr2h,f,c
 22328  000752  2835               	incf	(btemp+11)^0,w,c
 22329  000754  D003               	goto	u11610
 22330  000756                     u11615:
 22331  000756  90D8               	bcf	status,0,c
 22332  000758  36DE               	rlcf	postinc2,f,c
 22333  00075A  36DD               	rlcf	postdec2,f,c
 22334  00075C                     u11610:
 22335  00075C  2EE8               	decfsz	wreg,f,c
 22336  00075E  D7FB               	goto	u11615
 22337                           
 22338                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 22339                           ;stkvar	_reverse @ sp[(-4)+2]
 22340  000760  0EFE               	movlw	-2
 22341  000762  6AE3               	clrf	plusw1,c
 22342  000764  0EFF               	movlw	-1
 22343  000766  6AE3               	clrf	plusw1,c
 22344                           
 22345                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22346  000768  D029               	goto	l12361
 22347  00076A                     l12353:
 22348                           
 22349                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 22350                           ;stkvar	_crc @ sp[(-4)+-2]
 22351  00076A  0EFA               	movlw	-6
 22352  00076C  A0E3               	btfss	plusw1,0,c
 22353  00076E  D01C               	goto	l12357
 22354                           
 22355                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 22356                           ;stkvar	_mask @ sp[(-4)+0]
 22357  000770  0EFC               	movlw	-4
 22358  000772  006F FF8C  F034    	movff	plusw1,btemp+10
 22359  000778  0EFD               	movlw	-3
 22360  00077A  006F FF8C  F035    	movff	plusw1,btemp+11
 22361                           
 22362                           ;stkvar	_reverse @ sp[(-4)+2]
 22363  000780  0EFE               	movlw	-2
 22364  000782  006F FF8C  F02A    	movff	plusw1,btemp
 22365  000788  5034               	movf	(btemp+10)^0,w,c
 22366  00078A  122A               	iorwf	btemp^0,f,c
 22367  00078C  0EFE               	movlw	-2
 22368  00078E  0060  F0AB  FFE3   	movff	btemp,plusw1
 22369  000794  0EFF               	movlw	-1
 22370  000796  006F FF8C  F02A    	movff	plusw1,btemp
 22371  00079C  5035               	movf	(btemp+11)^0,w,c
 22372  00079E  122A               	iorwf	btemp^0,f,c
 22373  0007A0  0EFF               	movlw	-1
 22374  0007A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 22375  0007A8                     l12357:
 22376                           
 22377                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 22378                           ;stkvar	_mask @ sp[(-4)+0]
 22379  0007A8  90D8               	bcf	status,0,c
 22380  0007AA  0EFD               	movlw	-3
 22381  0007AC  32E3               	rrcf	plusw1,f,c
 22382  0007AE  0EFC               	movlw	-4
 22383  0007B0  32E3               	rrcf	plusw1,f,c
 22384                           
 22385                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 22386                           ;stkvar	_crc @ sp[(-4)+-2]
 22387  0007B2  90D8               	bcf	status,0,c
 22388  0007B4  0EFB               	movlw	-5
 22389  0007B6  32E3               	rrcf	plusw1,f,c
 22390  0007B8  0EFA               	movlw	-6
 22391  0007BA  32E3               	rrcf	plusw1,f,c
 22392  0007BC                     l12361:
 22393                           
 22394                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22395                           ;stkvar	_crc @ sp[(-4)+-2]
 22396  0007BC  0EFA               	movlw	-6
 22397  0007BE  006F FF8C  F02A    	movff	plusw1,btemp
 22398  0007C4  0EFB               	movlw	-5
 22399  0007C6  50E3               	movf	plusw1,w,c
 22400  0007C8  102A               	iorwf	btemp^0,w,c
 22401  0007CA  A4D8               	btfss	status,2,c
 22402  0007CC  D7CE               	goto	l12353
 22403                           
 22404                           ;mcc_generated_files/crc.c: 156:     return reverse;
 22405                           ;stkvar	_reverse @ sp[(-4)+2]
 22406  0007CE  0EFE               	movlw	-2
 22407  0007D0  006F FF8C  F02A    	movff	plusw1,btemp
 22408  0007D6  0EFF               	movlw	-1
 22409  0007D8  006F FF8C  F02B    	movff	plusw1,btemp+1
 22410                           
 22411                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22412  0007DE  0EFA               	movlw	250
 22413  0007E0  26E1               	addwf	fsr1l,f,c
 22414  0007E2  0EFF               	movlw	255
 22415  0007E4  22E2               	addwfc	fsr1h,f,c
 22416  0007E6  0012               	return		;funcret
 22417  0007E8                     __end_of_CRC_ReverseValue:
 22418                           	opt callstack 0
 22419                           
 22420 ;; *************** function _CRC_8BitDataWrite *****************
 22421 ;; Defined at:
 22422 ;;		line 125 in file "mcc_generated_files/crc.c"
 22423 ;; Parameters:    Size  Location     Type
 22424 ;;  data            1  [STACK] unsigned char 
 22425 ;; Auto vars:     Size  Location     Type
 22426 ;;		None
 22427 ;; Return value:  Size  Location     Type
 22428 ;;                  1  [STACK] _Bool 
 22429 ;; Registers used:
 22430 ;;		fsr1l, fsr1h
 22431 ;; Tracked objects:
 22432 ;;		On entry : 0/5
 22433 ;;		On exit  : 3F/39
 22434 ;;		Unchanged: 0/0
 22435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22440 ;;Total ram usage:        0 bytes
 22441 ;; Hardware stack levels used:    1
 22442 ;; Hardware stack levels required when called:   15
 22443 ;; This function calls:
 22444 ;;		Nothing
 22445 ;; This function is called by:
 22446 ;;		_read_cal_data
 22447 ;;		_write_cal_data
 22448 ;; This function uses a reentrant model
 22449 ;;
 22450                           
 22451                           	psect	text62
 22452  002D66                     __ptext62:
 22453                           	opt callstack 0
 22454  002D66                     _CRC_8BitDataWrite:
 22455                           	opt callstack 14
 22456                           
 22457                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 22458                           
 22459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22460                           ;incstack = 0
 22461  002D66  0139               	movlb	57	; () banked
 22462  002D68  B168               	btfsc	104,0,b	;volatile
 22463  002D6A  D004               	goto	l1271
 22464                           
 22465                           ; BSR set to: 57
 22466                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 22467                           ;stkvar	_data @ sp[(0)+-1]
 22468  002D6C  0EFF               	movlw	-1
 22469  002D6E  006F FF8F F960     	movff	plusw1,14688	;volatile
 22470  002D74                     l1271:
 22471                           
 22472                           ; BSR set to: 57
 22473                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 22474  002D74  52E5               	movf	postdec1,f,c
 22475  002D76  0012               	return		;funcret
 22476  002D78                     __end_of_CRC_8BitDataWrite:
 22477                           	opt callstack 0
 22478                           
 22479 ;; *************** function _start_adc_scan *****************
 22480 ;; Defined at:
 22481 ;;		line 70 in file "daq.c"
 22482 ;; Parameters:    Size  Location     Type
 22483 ;;		None
 22484 ;; Auto vars:     Size  Location     Type
 22485 ;;		None
 22486 ;; Return value:  Size  Location     Type
 22487 ;;                  1  [STACK] _Bool 
 22488 ;; Registers used:
 22489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22490 ;; Tracked objects:
 22491 ;;		On entry : 0/0
 22492 ;;		On exit  : 0/0
 22493 ;;		Unchanged: 0/0
 22494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22499 ;;Total ram usage:        0 bytes
 22500 ;; Hardware stack levels used:    1
 22501 ;; Hardware stack levels required when called:   16
 22502 ;; This function calls:
 22503 ;;		_ADCC_DischargeSampleCapacitor
 22504 ;;		_ADCC_SetADIInterruptHandler
 22505 ;;		_ADCC_SetADTIInterruptHandler
 22506 ;;		_ADCC_StartConversion
 22507 ;; This function is called by:
 22508 ;;		_main
 22509 ;;		_current_sensor_cal
 22510 ;;		_update_adc_result
 22511 ;; This function uses a reentrant model
 22512 ;;
 22513                           
 22514                           	psect	text63
 22515  001B96                     __ptext63:
 22516                           	opt callstack 0
 22517  001B96                     _start_adc_scan:
 22518                           	opt callstack 14
 22519                           
 22520                           ;daq.c: 72:  if (R.done)
 22521                           
 22522                           ; BSR set to: 57
 22523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22524                           ;incstack = 0
 22525  001B96  0101               	movlb	1	; () banked
 22526  001B98  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 22527  001B9A  A4D8               	btfss	status,2,c
 22528  001B9C  0012               	return	
 22529                           
 22530                           ; BSR set to: 1
 22531                           ;daq.c: 75:  R.scan_index = 0;
 22532  001B9E  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22533                           
 22534                           ; BSR set to: 1
 22535                           ;daq.c: 76:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22536  001BA0  013A               	movlb	58	; () banked
 22537  001BA2  5140               	movf	64,w,b	;volatile
 22538  001BA4  006E F940  F02A    	movff	14928,btemp	;volatile
 22539  001BAA  6A2B               	clrf	(btemp+1)^0,c
 22540  001BAC  0060  F0A8  F02B   	movff	btemp,btemp+1
 22541  001BB2  6A2A               	clrf	btemp^0,c
 22542  001BB4  262A               	addwf	btemp^0,f,c
 22543  001BB6  0E00               	movlw	0
 22544  001BB8  222B               	addwfc	(btemp+1)^0,f,c
 22545  001BBA  0E77               	movlw	119
 22546  001BBC  142A               	andwf	btemp^0,w,c
 22547  001BBE  0101               	movlb	1	; () banked
 22548  001BC0  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22549  001BC2  0E3C               	movlw	60
 22550  001BC4  142B               	andwf	(btemp+1)^0,w,c
 22551  001BC6  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22552                           
 22553                           ; BSR set to: 1
 22554                           ;daq.c: 77:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22555  001BC8  0EAA               	movlw	low _adc_int_handler
 22556  001BCA  6EE6               	movwf	postinc1,c
 22557  001BCC  0E2E               	movlw	high _adc_int_handler
 22558  001BCE  6EE6               	movwf	postinc1,c
 22559  001BD0  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22560  001BD2  6EE6               	movwf	postinc1,c
 22561  001BD4  ECED  F014         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22562                           
 22563                           ;daq.c: 78:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22564  001BD8  0EEA               	movlw	low _adc_int_t_handler
 22565  001BDA  6EE6               	movwf	postinc1,c
 22566  001BDC  0E15               	movlw	high _adc_int_t_handler
 22567  001BDE  6EE6               	movwf	postinc1,c
 22568  001BE0  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 22569  001BE2  6EE6               	movwf	postinc1,c
 22570  001BE4  ECD9  F014         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22571                           
 22572                           ;daq.c: 79:  ADCC_DischargeSampleCapacitor();
 22573  001BE8  EC31  F017         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22574                           
 22575                           ; BSR set to: 62
 22576                           ;daq.c: 80:  ADCC_StartConversion(R.scan_index & 0xf);
 22577  001BEC  0101               	movlb	1	; () banked
 22578  001BEE  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 22579  001BF0  0B0F               	andlw	15
 22580  001BF2  6EE6               	movwf	postinc1,c
 22581  001BF4  ECBC  F016         	call	_ADCC_StartConversion	;wreg free
 22582                           
 22583                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22584  001BF8  0012               	return		;funcret
 22585  001BFA                     __end_of_start_adc_scan:
 22586                           	opt callstack 0
 22587                           
 22588 ;; *************** function _ADCC_StartConversion *****************
 22589 ;; Defined at:
 22590 ;;		line 128 in file "mcc_generated_files/adcc.c"
 22591 ;; Parameters:    Size  Location     Type
 22592 ;;  channel         1  [STACK] enum E16136
 22593 ;; Auto vars:     Size  Location     Type
 22594 ;;		None
 22595 ;; Return value:  Size  Location     Type
 22596 ;;                  1  [STACK] void 
 22597 ;; Registers used:
 22598 ;;		fsr1l, fsr1h
 22599 ;; Tracked objects:
 22600 ;;		On entry : 3F/1
 22601 ;;		On exit  : 3F/3E
 22602 ;;		Unchanged: 0/0
 22603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22608 ;;Total ram usage:        0 bytes
 22609 ;; Hardware stack levels used:    1
 22610 ;; Hardware stack levels required when called:   15
 22611 ;; This function calls:
 22612 ;;		Nothing
 22613 ;; This function is called by:
 22614 ;;		_start_adc_scan
 22615 ;;		_adc_int_t_handler
 22616 ;; This function uses a reentrant model
 22617 ;;
 22618                           
 22619                           	psect	text64
 22620  002D78                     __ptext64:
 22621                           	opt callstack 0
 22622  002D78                     _ADCC_StartConversion:
 22623                           	opt callstack 0
 22624                           
 22625                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 22626                           ;stkvar	_channel @ sp[(0)+-1]
 22627                           
 22628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22629                           ;incstack = 0
 22630 ;; hardware stack exceeded
 22631  002D78  0EFF               	movlw	-1
 22632  002D7A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 22633                           
 22634                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 22635  002D80  013E               	movlb	62	; () banked
 22636  002D82  8FF8               	bsf	248,7,b	;volatile
 22637                           
 22638                           ; BSR set to: 62
 22639                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 22640  002D84  81F8               	bsf	248,0,b	;volatile
 22641                           
 22642                           ; BSR set to: 62
 22643                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 22644  002D86  52E5               	movf	postdec1,f,c
 22645  002D88  0012               	return		;funcret
 22646  002D8A                     __end_of_ADCC_StartConversion:
 22647                           	opt callstack 0
 22648                           
 22649 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 22650 ;; Defined at:
 22651 ;;		line 189 in file "mcc_generated_files/adcc.c"
 22652 ;; Parameters:    Size  Location     Type
 22653 ;;		None
 22654 ;; Auto vars:     Size  Location     Type
 22655 ;;		None
 22656 ;; Return value:  Size  Location     Type
 22657 ;;                  1  [STACK] void 
 22658 ;; Registers used:
 22659 ;;		wreg, status,2
 22660 ;; Tracked objects:
 22661 ;;		On entry : 0/1
 22662 ;;		On exit  : 3F/3E
 22663 ;;		Unchanged: 0/0
 22664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22669 ;;Total ram usage:        0 bytes
 22670 ;; Hardware stack levels used:    1
 22671 ;; Hardware stack levels required when called:   15
 22672 ;; This function calls:
 22673 ;;		Nothing
 22674 ;; This function is called by:
 22675 ;;		_start_adc_scan
 22676 ;;		_adc_int_t_handler
 22677 ;; This function uses a reentrant model
 22678 ;;
 22679                           
 22680                           	psect	text65
 22681  002E62                     __ptext65:
 22682                           	opt callstack 0
 22683  002E62                     _ADCC_DischargeSampleCapacitor:
 22684                           	opt callstack 0
 22685                           
 22686                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 22687                           
 22688                           ; BSR set to: 62
 22689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22690                           ;incstack = 0
 22691 ;; hardware stack exceeded
 22692  002E62  0E3B               	movlw	59
 22693  002E64  013E               	movlb	62	; () banked
 22694  002E66  6FF1               	movwf	241,b	;volatile
 22695                           
 22696                           ; BSR set to: 62
 22697                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 22698  002E68  0012               	return		;funcret
 22699  002E6A                     __end_of_ADCC_DischargeSampleCapacitor:
 22700                           	opt callstack 0
 22701                           
 22702 ;; *************** function _spinners *****************
 22703 ;; Defined at:
 22704 ;;		line 147 in file "mbmc.c"
 22705 ;; Parameters:    Size  Location     Type
 22706 ;;  shape           1  [STACK] unsigned char 
 22707 ;;  reset           1  [STACK] const unsigned char 
 22708 ;; Auto vars:     Size  Location     Type
 22709 ;;  c               1  [STACK] unsigned char 
 22710 ;; Return value:  Size  Location     Type
 22711 ;;                  1  [STACK] unsigned char 
 22712 ;; Registers used:
 22713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 22714 ;; Tracked objects:
 22715 ;;		On entry : 0/0
 22716 ;;		On exit  : 0/0
 22717 ;;		Unchanged: 0/0
 22718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22723 ;;Total ram usage:        0 bytes
 22724 ;; Hardware stack levels used:    1
 22725 ;; Hardware stack levels required when called:   16
 22726 ;; This function calls:
 22727 ;;		_strlen
 22728 ;; This function is called by:
 22729 ;;		_main
 22730 ;;		_current_sensor_cal
 22731 ;; This function uses a reentrant model
 22732 ;;
 22733                           
 22734                           	psect	text66
 22735  0002A4                     __ptext66:
 22736                           	opt callstack 0
 22737  0002A4                     _spinners:
 22738                           	opt callstack 0
 22739                           
 22740                           ; BSR set to: 62
 22741                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22742  0002A4  52E6               	movf	postinc1,f,c
 22743                           
 22744                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 22745                           ;stkvar	_shape @ sp[(-1)+-1]
 22746                           
 22747                           ;incstack = 0
 22748  0002A6  0EFE               	movlw	-2
 22749  0002A8  006F FF8C  F02A    	movff	plusw1,btemp
 22750  0002AE  0E05               	movlw	5
 22751  0002B0  642A               	cpfsgt	btemp^0,c
 22752  0002B2  D002               	goto	l2186
 22753                           
 22754                           ;mbmc.c: 153:   shape = 0;
 22755                           ;stkvar	_shape @ sp[(-1)+-1]
 22756  0002B4  0EFE               	movlw	-2
 22757  0002B6  6AE3               	clrf	plusw1,c
 22758  0002B8                     l2186:
 22759                           
 22760                           ;mbmc.c: 154:  if (reset)
 22761                           ;stkvar	_reset @ sp[(-1)+-2]
 22762  0002B8  0EFD               	movlw	-3
 22763  0002BA  50E3               	movf	plusw1,w,c
 22764  0002BC  B4D8               	btfsc	status,2,c
 22765  0002BE  D00C               	goto	l13497
 22766                           
 22767                           ;mbmc.c: 155:   s[shape] = 0;
 22768                           ;stkvar	_shape @ sp[(-1)+-1]
 22769  0002C0  0EFE               	movlw	-2
 22770  0002C2  50E3               	movf	plusw1,w,c
 22771  0002C4  6E34               	movwf	(btemp+10)^0,c
 22772  0002C6  6A35               	clrf	(btemp+11)^0,c
 22773  0002C8  0EDD               	movlw	low spinners@s
 22774  0002CA  2434               	addwf	(btemp+10)^0,w,c
 22775  0002CC  6ED9               	movwf	fsr2l,c
 22776  0002CE  0E01               	movlw	high spinners@s
 22777  0002D0  2035               	addwfc	(btemp+11)^0,w,c
 22778  0002D2  6EDA               	movwf	fsr2h,c
 22779  0002D4  0E00               	movlw	0
 22780  0002D6  6EDF               	movwf	indf2,c
 22781  0002D8                     l13497:
 22782                           
 22783                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 22784                           ;stkvar	_shape @ sp[(-1)+-1]
 22785  0002D8  0EFE               	movlw	-2
 22786  0002DA  50E3               	movf	plusw1,w,c
 22787  0002DC  0D14               	mullw	20
 22788  0002DE  0E2D               	movlw	low _spin
 22789  0002E0  6E34               	movwf	(btemp+10)^0,c
 22790  0002E2  0EF9               	movlw	high _spin
 22791  0002E4  6E35               	movwf	(btemp+11)^0,c
 22792  0002E6  50F3               	movf	243,w,c
 22793  0002E8  2634               	addwf	(btemp+10)^0,f,c
 22794  0002EA  50F4               	movf	244,w,c
 22795  0002EC  2235               	addwfc	(btemp+11)^0,f,c
 22796                           
 22797                           ;stkvar	_shape @ sp[(-1)+-1]
 22798  0002EE  0EFE               	movlw	-2
 22799  0002F0  50E3               	movf	plusw1,w,c
 22800  0002F2  6E32               	movwf	(btemp+8)^0,c
 22801  0002F4  6A33               	clrf	(btemp+9)^0,c
 22802  0002F6  0EDD               	movlw	low spinners@s
 22803  0002F8  2432               	addwf	(btemp+8)^0,w,c
 22804  0002FA  6ED9               	movwf	fsr2l,c
 22805  0002FC  0E01               	movlw	high spinners@s
 22806  0002FE  2033               	addwfc	(btemp+9)^0,w,c
 22807  000300  6EDA               	movwf	fsr2h,c
 22808  000302  50DF               	movf	indf2,w,c
 22809  000304  2634               	addwf	(btemp+10)^0,f,c
 22810  000306  0E00               	movlw	0
 22811  000308  2235               	addwfc	(btemp+11)^0,f,c
 22812  00030A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 22813  000310  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 22814  000316                     	if	0	;tblptru may be non-zero
 22815  000316                     	endif
 22816  000316                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22817  000316  0E00               	movlw	low (__mediumconst shr (0+16))
 22818  000318  6EF8               	movwf	tblptru,c
 22819  00031A                     	endif
 22820                           
 22821                           ;stkvar	_c @ sp[(-1)+0]
 22822  00031A  0008               	tblrd		*
 22823  00031C  0EFF               	movlw	-1
 22824  00031E  006F FFD7 FFE3     	movff	tablat,plusw1
 22825                           
 22826                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 22827                           ;stkvar	_shape @ sp[(-1)+-1]
 22828  000324  0EFE               	movlw	-2
 22829  000326  50E3               	movf	plusw1,w,c
 22830  000328  0D14               	mullw	20
 22831  00032A  0E2D               	movlw	low _spin
 22832  00032C  6E34               	movwf	(btemp+10)^0,c
 22833  00032E  0EF9               	movlw	high _spin
 22834  000330  6E35               	movwf	(btemp+11)^0,c
 22835  000332  50F3               	movf	243,w,c
 22836  000334  2634               	addwf	(btemp+10)^0,f,c
 22837  000336  50F4               	movf	244,w,c
 22838  000338  2235               	addwfc	(btemp+11)^0,f,c
 22839  00033A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22840  000340  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22841  000346  ECD6  F007         	call	_strlen	;wreg free
 22842                           
 22843                           ;stkvar	_shape @ sp[(-1)+-1]
 22844  00034A  0EFE               	movlw	-2
 22845  00034C  50E3               	movf	plusw1,w,c
 22846  00034E  6E34               	movwf	(btemp+10)^0,c
 22847  000350  6A35               	clrf	(btemp+11)^0,c
 22848  000352  0EDD               	movlw	low spinners@s
 22849  000354  2434               	addwf	(btemp+10)^0,w,c
 22850  000356  6ED9               	movwf	fsr2l,c
 22851  000358  0E01               	movlw	high spinners@s
 22852  00035A  2035               	addwfc	(btemp+11)^0,w,c
 22853  00035C  6EDA               	movwf	fsr2h,c
 22854  00035E  2ADF               	incf	indf2,f,c
 22855  000360  50DF               	movf	indf2,w,c
 22856  000362  6E34               	movwf	(btemp+10)^0,c
 22857  000364  6A35               	clrf	(btemp+11)^0,c
 22858  000366  502A               	movf	btemp^0,w,c
 22859  000368  5C34               	subwf	(btemp+10)^0,w,c
 22860  00036A  502B               	movf	(btemp+1)^0,w,c
 22861  00036C  5835               	subwfb	(btemp+11)^0,w,c
 22862  00036E  A0D8               	btfss	status,0,c
 22863  000370  D00C               	goto	l13503
 22864                           
 22865                           ;mbmc.c: 158:   s[shape] = 0;
 22866                           ;stkvar	_shape @ sp[(-1)+-1]
 22867  000372  0EFE               	movlw	-2
 22868  000374  50E3               	movf	plusw1,w,c
 22869  000376  6E34               	movwf	(btemp+10)^0,c
 22870  000378  6A35               	clrf	(btemp+11)^0,c
 22871  00037A  0EDD               	movlw	low spinners@s
 22872  00037C  2434               	addwf	(btemp+10)^0,w,c
 22873  00037E  6ED9               	movwf	fsr2l,c
 22874  000380  0E01               	movlw	high spinners@s
 22875  000382  2035               	addwfc	(btemp+11)^0,w,c
 22876  000384  6EDA               	movwf	fsr2h,c
 22877  000386  0E00               	movlw	0
 22878  000388  6EDF               	movwf	indf2,c
 22879  00038A                     l13503:
 22880                           
 22881                           ;mbmc.c: 159:  return c;
 22882                           ;stkvar	_c @ sp[(-1)+0]
 22883  00038A  0EFF               	movlw	-1
 22884  00038C  006F FF8C  F02A    	movff	plusw1,btemp
 22885                           
 22886                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 22887  000392  52E5               	movf	postdec1,f,c
 22888  000394  52E5               	movf	postdec1,f,c
 22889  000396  52E5               	movf	postdec1,f,c
 22890  000398  0012               	return		;funcret
 22891  00039A                     __end_of_spinners:
 22892                           	opt callstack 0
 22893                           
 22894 ;; *************** function _get_switch *****************
 22895 ;; Defined at:
 22896 ;;		line 18 in file "dio.c"
 22897 ;; Parameters:    Size  Location     Type
 22898 ;;  i               1  [STACK] const unsigned char 
 22899 ;; Auto vars:     Size  Location     Type
 22900 ;;		None
 22901 ;; Return value:  Size  Location     Type
 22902 ;;                  1  [STACK] enum E17187
 22903 ;; Registers used:
 22904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22905 ;; Tracked objects:
 22906 ;;		On entry : 0/0
 22907 ;;		On exit  : 0/0
 22908 ;;		Unchanged: 0/0
 22909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22914 ;;Total ram usage:        0 bytes
 22915 ;; Hardware stack levels used:    1
 22916 ;; Hardware stack levels required when called:   15
 22917 ;; This function calls:
 22918 ;;		Nothing
 22919 ;; This function is called by:
 22920 ;;		_main
 22921 ;;		_current_sensor_cal
 22922 ;;		_display_history
 22923 ;;		_hid_input
 22924 ;; This function uses a reentrant model
 22925 ;;
 22926                           
 22927                           	psect	text67
 22928  002772                     __ptext67:
 22929                           	opt callstack 0
 22930  002772                     _get_switch:
 22931                           	opt callstack 13
 22932                           
 22933                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 22934                           ;stkvar	_i @ sp[(0)+-1]
 22935                           
 22936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22937                           ;incstack = 0
 22938  002772  0EFF               	movlw	-1
 22939  002774  006F FF8C  F02A    	movff	plusw1,btemp
 22940  00277A  0E05               	movlw	5
 22941  00277C  642A               	cpfsgt	btemp^0,c
 22942  00277E  D002               	goto	l12947
 22943                           
 22944                           ;dio.c: 21:   return SW_OFF;
 22945  002780  0E00               	movlw	0
 22946  002782  D00A               	goto	L19
 22947  002784                     l12947:
 22948                           
 22949                           ;dio.c: 23:  return S.button[i].sw;
 22950                           ;stkvar	_i @ sp[(0)+-1]
 22951  002784  0EFF               	movlw	-1
 22952  002786  50E3               	movf	plusw1,w,c
 22953  002788  0D05               	mullw	5
 22954  00278A  0EB4               	movlw	low _S
 22955  00278C  24F3               	addwf	243,w,c
 22956  00278E  6ED9               	movwf	fsr2l,c
 22957  002790  0E01               	movlw	high _S
 22958  002792  20F4               	addwfc	prodh,w,c
 22959  002794  6EDA               	movwf	fsr2h,c
 22960  002796  50DF               	movf	indf2,w,c
 22961  002798                     L19:
 22962  002798  6E2A               	movwf	btemp^0,c
 22963                           
 22964                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22965  00279A  52E5               	movf	postdec1,f,c
 22966  00279C  0012               	return		;funcret
 22967  00279E                     __end_of_get_switch:
 22968                           	opt callstack 0
 22969                           
 22970 ;; *************** function _clear_switch *****************
 22971 ;; Defined at:
 22972 ;;		line 49 in file "dio.c"
 22973 ;; Parameters:    Size  Location     Type
 22974 ;;  i               1  [STACK] const unsigned char 
 22975 ;; Auto vars:     Size  Location     Type
 22976 ;;		None
 22977 ;; Return value:  Size  Location     Type
 22978 ;;                  1  [STACK] void 
 22979 ;; Registers used:
 22980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 22981 ;; Tracked objects:
 22982 ;;		On entry : 0/0
 22983 ;;		On exit  : 0/0
 22984 ;;		Unchanged: 0/0
 22985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22990 ;;Total ram usage:        0 bytes
 22991 ;; Hardware stack levels used:    1
 22992 ;; Hardware stack levels required when called:   15
 22993 ;; This function calls:
 22994 ;;		Nothing
 22995 ;; This function is called by:
 22996 ;;		_current_sensor_cal
 22997 ;; This function uses a reentrant model
 22998 ;;
 22999                           
 23000                           	psect	text68
 23001  001F84                     __ptext68:
 23002                           	opt callstack 0
 23003  001F84                     _clear_switch:
 23004                           	opt callstack 14
 23005                           
 23006                           ;dio.c: 49: void clear_switch(const uint8_t i);dio.c: 50: {;dio.c: 51:  if (i >= 6)
 23007                           ;stkvar	_i @ sp[(0)+-1]
 23008                           
 23009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23010                           ;incstack = 0
 23011  001F84  0EFF               	movlw	-1
 23012  001F86  006F FF8C  F02A    	movff	plusw1,btemp
 23013  001F8C  0E05               	movlw	5
 23014  001F8E  642A               	cpfsgt	btemp^0,c
 23015  001F90  D001               	goto	l13657
 23016  001F92  D01D               	goto	l2248
 23017  001F94                     l13657:
 23018                           
 23019                           ;dio.c: 54:  S.button[i].count = 0;
 23020                           ;stkvar	_i @ sp[(0)+-1]
 23021  001F94  0EFF               	movlw	-1
 23022  001F96  50E3               	movf	plusw1,w,c
 23023  001F98  0D05               	mullw	5
 23024  001F9A  0EB5               	movlw	low (_S+1)
 23025  001F9C  24F3               	addwf	243,w,c
 23026  001F9E  6ED9               	movwf	fsr2l,c
 23027  001FA0  0E01               	movlw	high (_S+1)
 23028  001FA2  20F4               	addwfc	prodh,w,c
 23029  001FA4  6EDA               	movwf	fsr2h,c
 23030  001FA6  6ADE               	clrf	postinc2,c
 23031  001FA8  6ADE               	clrf	postinc2,c
 23032  001FAA  6ADE               	clrf	postinc2,c
 23033  001FAC  6ADD               	clrf	postdec2,c
 23034                           
 23035                           ;dio.c: 55:  S.sw_bitmap &= ~(1 << i);
 23036                           ;stkvar	_i @ sp[(0)+-1]
 23037  001FAE  0EFF               	movlw	-1
 23038  001FB0  006F FF8C  F035    	movff	plusw1,btemp+11
 23039  001FB6  0E01               	movlw	1
 23040  001FB8  6E34               	movwf	(btemp+10)^0,c
 23041  001FBA  2A35               	incf	(btemp+11)^0,f,c
 23042  001FBC  D002               	goto	u12724
 23043  001FBE                     u12725:
 23044  001FBE  90D8               	bcf	status,0,c
 23045  001FC0  3634               	rlcf	(btemp+10)^0,f,c
 23046  001FC2                     u12724:
 23047  001FC2  2E35               	decfsz	(btemp+11)^0,f,c
 23048  001FC4  D7FC               	goto	u12725
 23049  001FC6  5034               	movf	(btemp+10)^0,w,c
 23050  001FC8  0AFF               	xorlw	255
 23051  001FCA  0101               	movlb	1	; () banked
 23052  001FCC  17DC               	andwf	(_S+40)& (0+255),f,b	;volatile
 23053  001FCE                     l2248:
 23054                           
 23055                           ; _clear_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 23056  001FCE  52E5               	movf	postdec1,f,c
 23057  001FD0  0012               	return		;funcret
 23058  001FD2                     __end_of_clear_switch:
 23059                           	opt callstack 0
 23060                           
 23061 ;; *************** function _clear_adc_scan *****************
 23062 ;; Defined at:
 23063 ;;		line 101 in file "daq.c"
 23064 ;; Parameters:    Size  Location     Type
 23065 ;;		None
 23066 ;; Auto vars:     Size  Location     Type
 23067 ;;		None
 23068 ;; Return value:  Size  Location     Type
 23069 ;;                  1  [STACK] void 
 23070 ;; Registers used:
 23071 ;;		None
 23072 ;; Tracked objects:
 23073 ;;		On entry : 0/0
 23074 ;;		On exit  : 3F/1
 23075 ;;		Unchanged: 0/0
 23076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23081 ;;Total ram usage:        0 bytes
 23082 ;; Hardware stack levels used:    1
 23083 ;; Hardware stack levels required when called:   15
 23084 ;; This function calls:
 23085 ;;		Nothing
 23086 ;; This function is called by:
 23087 ;;		_main
 23088 ;;		_current_sensor_cal
 23089 ;;		_update_adc_result
 23090 ;; This function uses a reentrant model
 23091 ;;
 23092                           
 23093                           	psect	text69
 23094  002E88                     __ptext69:
 23095                           	opt callstack 0
 23096  002E88                     _clear_adc_scan:
 23097                           	opt callstack 13
 23098                           
 23099                           ;daq.c: 103:  R.done = 0;
 23100                           
 23101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23102                           ;incstack = 0
 23103  002E88  0101               	movlb	1	; () banked
 23104  002E8A  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 23105                           
 23106                           ; BSR set to: 1
 23107                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23108  002E8C  0012               	return		;funcret
 23109  002E8E                     __end_of_clear_adc_scan:
 23110                           	opt callstack 0
 23111                           
 23112 ;; *************** function _cal_current_zero *****************
 23113 ;; Defined at:
 23114 ;;		line 327 in file "daq.c"
 23115 ;; Parameters:    Size  Location     Type
 23116 ;;  mode            1  [STACK] const _Bool 
 23117 ;;  cb              2  [STACK] const short 
 23118 ;;  cp              2  [STACK] const short 
 23119 ;; Auto vars:     Size  Location     Type
 23120 ;;		None
 23121 ;; Return value:  Size  Location     Type
 23122 ;;                  1  [STACK] _Bool 
 23123 ;; Registers used:
 23124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23125 ;; Tracked objects:
 23126 ;;		On entry : 0/1
 23127 ;;		On exit  : 0/0
 23128 ;;		Unchanged: 0/0
 23129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23134 ;;Total ram usage:        0 bytes
 23135 ;; Hardware stack levels used:    1
 23136 ;; Hardware stack levels required when called:   16
 23137 ;; This function calls:
 23138 ;;		_check_range
 23139 ;; This function is called by:
 23140 ;;		_current_sensor_cal
 23141 ;; This function uses a reentrant model
 23142 ;;
 23143                           
 23144                           	psect	text70
 23145  001180                     __ptext70:
 23146                           	opt callstack 0
 23147  001180                     _cal_current_zero:
 23148                           	opt callstack 13
 23149                           
 23150                           ;daq.c: 327: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 328: {;daq.c: 330:  if (!check_range(cb, 100, 4000))
 23151                           
 23152                           ; BSR set to: 1
 23153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23154                           ;incstack = 0
 23155  001180  0EA0               	movlw	160
 23156  001182  6EE6               	movwf	postinc1,c
 23157  001184  0E0F               	movlw	15
 23158  001186  6EE6               	movwf	postinc1,c
 23159  001188  0E64               	movlw	100
 23160  00118A  6EE6               	movwf	postinc1,c
 23161  00118C  0E00               	movlw	0
 23162  00118E  6EE6               	movwf	postinc1,c
 23163                           
 23164                           ;stkvar	_cb @ sp[(-4)+-3]
 23165  001190  0EF9               	movlw	-7
 23166  001192  006F FF8F FFE6     	movff	plusw1,postinc1
 23167  001198  006F FF8F FFE6     	movff	plusw1,postinc1
 23168  00119E  EC36  F00B         	call	_check_range	;wreg free
 23169  0011A2  502A               	movf	btemp^0,w,c
 23170  0011A4  A4D8               	btfss	status,2,c
 23171  0011A6  D002               	goto	l13633
 23172  0011A8                     u12680:
 23173                           
 23174                           ;daq.c: 331:   return 0;
 23175  0011A8  0E00               	movlw	0
 23176  0011AA  D019               	goto	L20
 23177  0011AC                     l13633:
 23178                           
 23179                           ;daq.c: 333:  if (!check_range(cp, 100, 4000))
 23180  0011AC  0EA0               	movlw	160
 23181  0011AE  6EE6               	movwf	postinc1,c
 23182  0011B0  0E0F               	movlw	15
 23183  0011B2  6EE6               	movwf	postinc1,c
 23184  0011B4  0E64               	movlw	100
 23185  0011B6  6EE6               	movwf	postinc1,c
 23186  0011B8  0E00               	movlw	0
 23187  0011BA  6EE6               	movwf	postinc1,c
 23188                           
 23189                           ;stkvar	_cp @ sp[(-4)+-5]
 23190  0011BC  0EF7               	movlw	-9
 23191  0011BE  006F FF8F FFE6     	movff	plusw1,postinc1
 23192  0011C4  006F FF8F FFE6     	movff	plusw1,postinc1
 23193  0011CA  EC36  F00B         	call	_check_range	;wreg free
 23194  0011CE  502A               	movf	btemp^0,w,c
 23195  0011D0  B4D8               	btfsc	status,2,c
 23196  0011D2  D7EA               	goto	u12680
 23197                           
 23198                           ;daq.c: 336:  if (!mode)
 23199                           ;stkvar	_mode @ sp[(0)+-1]
 23200  0011D4  0EFF               	movlw	-1
 23201  0011D6  50E3               	movf	plusw1,w,c
 23202  0011D8  A4D8               	btfss	status,2,c
 23203  0011DA  D003               	goto	l13645
 23204  0011DC                     u12700:
 23205                           
 23206                           ;daq.c: 337:   return 1;
 23207  0011DC  0E01               	movlw	1
 23208  0011DE                     L20:
 23209  0011DE  6E2A               	movwf	btemp^0,c
 23210  0011E0  D013               	goto	l2064
 23211  0011E2                     l13645:
 23212                           
 23213                           ;daq.c: 339:  R.n_offset[0] = cb;
 23214                           ;stkvar	_cb @ sp[(0)+-3]
 23215  0011E2  0EFD               	movlw	-3
 23216  0011E4  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 23217  0011EA  0EFE               	movlw	-2
 23218  0011EC  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 23219                           
 23220                           ;daq.c: 340:  R.n_offset[1] = cp;
 23221                           ;stkvar	_cp @ sp[(0)+-5]
 23222  0011F2  0EFB               	movlw	-5
 23223  0011F4  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 23224  0011FA  0EFC               	movlw	-4
 23225  0011FC  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 23226                           
 23227                           ;daq.c: 341:  R.c_zero_cal = 1;
 23228  001202  0101               	movlb	1	; () banked
 23229  001204  83A7               	bsf	(_R+167)& (0+255),1,b	;volatile
 23230  001206  D7EA               	goto	u12700
 23231  001208                     l2064:
 23232                           
 23233                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 23234  001208  0EFB               	movlw	251
 23235  00120A  26E1               	addwf	fsr1l,f,c
 23236  00120C  0EFF               	movlw	255
 23237  00120E  22E2               	addwfc	fsr1h,f,c
 23238  001210  0012               	return		;funcret
 23239  001212                     __end_of_cal_current_zero:
 23240                           	opt callstack 0
 23241                           
 23242 ;; *************** function _cal_current_10A *****************
 23243 ;; Defined at:
 23244 ;;		line 348 in file "daq.c"
 23245 ;; Parameters:    Size  Location     Type
 23246 ;;  mode            1  [STACK] const _Bool 
 23247 ;;  cb              2  [STACK] const short 
 23248 ;;  cp              2  [STACK] const short 
 23249 ;;  scaleb          4  [STACK] const float 
 23250 ;;  scalep          4  [STACK] const float 
 23251 ;; Auto vars:     Size  Location     Type
 23252 ;;		None
 23253 ;; Return value:  Size  Location     Type
 23254 ;;                  1  [STACK] _Bool 
 23255 ;; Registers used:
 23256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 23257 ;; Tracked objects:
 23258 ;;		On entry : 0/1
 23259 ;;		On exit  : 0/0
 23260 ;;		Unchanged: 0/0
 23261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23266 ;;Total ram usage:        0 bytes
 23267 ;; Hardware stack levels used:    1
 23268 ;; Hardware stack levels required when called:   16
 23269 ;; This function calls:
 23270 ;;		_check_range
 23271 ;; This function is called by:
 23272 ;;		_current_sensor_cal
 23273 ;; This function uses a reentrant model
 23274 ;;
 23275                           
 23276                           	psect	text71
 23277  0008AC                     __ptext71:
 23278                           	opt callstack 0
 23279  0008AC                     _cal_current_10A:
 23280                           	opt callstack 13
 23281                           
 23282                           ;daq.c: 348: _Bool cal_current_10A(const _Bool mode, const int16_t cb, const int16_t cp,
      +                           const float scaleb, const float scalep);daq.c: 349: {;daq.c: 350:  if (!check_range(cb,
      +                           100, 4050))
 23283                           
 23284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 13, argsize = 13 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 23285                           ;incstack = 0
 23286  0008AC  0ED2               	movlw	210
 23287  0008AE  6EE6               	movwf	postinc1,c
 23288  0008B0  0E0F               	movlw	15
 23289  0008B2  6EE6               	movwf	postinc1,c
 23290  0008B4  0E64               	movlw	100
 23291  0008B6  6EE6               	movwf	postinc1,c
 23292  0008B8  0E00               	movlw	0
 23293  0008BA  6EE6               	movwf	postinc1,c
 23294                           
 23295                           ;stkvar	_cb @ sp[(-4)+-3]
 23296  0008BC  0EF9               	movlw	-7
 23297  0008BE  006F FF8F FFE6     	movff	plusw1,postinc1
 23298  0008C4  006F FF8F FFE6     	movff	plusw1,postinc1
 23299  0008CA  EC36  F00B         	call	_check_range	;wreg free
 23300  0008CE  502A               	movf	btemp^0,w,c
 23301  0008D0  A4D8               	btfss	status,2,c
 23302  0008D2  D002               	goto	l13667
 23303  0008D4                     u12730:
 23304                           
 23305                           ;daq.c: 351:   return 0;
 23306  0008D4  0E00               	movlw	0
 23307  0008D6  D019               	goto	L21
 23308  0008D8                     l13667:
 23309                           
 23310                           ;daq.c: 353:  if (!check_range(cp, 100, 4278))
 23311  0008D8  0EB6               	movlw	182
 23312  0008DA  6EE6               	movwf	postinc1,c
 23313  0008DC  0E10               	movlw	16
 23314  0008DE  6EE6               	movwf	postinc1,c
 23315  0008E0  0E64               	movlw	100
 23316  0008E2  6EE6               	movwf	postinc1,c
 23317  0008E4  0E00               	movlw	0
 23318  0008E6  6EE6               	movwf	postinc1,c
 23319                           
 23320                           ;stkvar	_cp @ sp[(-4)+-5]
 23321  0008E8  0EF7               	movlw	-9
 23322  0008EA  006F FF8F FFE6     	movff	plusw1,postinc1
 23323  0008F0  006F FF8F FFE6     	movff	plusw1,postinc1
 23324  0008F6  EC36  F00B         	call	_check_range	;wreg free
 23325  0008FA  502A               	movf	btemp^0,w,c
 23326  0008FC  B4D8               	btfsc	status,2,c
 23327  0008FE  D7EA               	goto	u12730
 23328                           
 23329                           ;daq.c: 356:  if (!mode)
 23330                           ;stkvar	_mode @ sp[(0)+-1]
 23331  000900  0EFF               	movlw	-1
 23332  000902  50E3               	movf	plusw1,w,c
 23333  000904  A4D8               	btfss	status,2,c
 23334  000906  D003               	goto	l13679
 23335  000908                     u12750:
 23336                           
 23337                           ;daq.c: 357:   return 1;
 23338  000908  0E01               	movlw	1
 23339  00090A                     L21:
 23340  00090A  6E2A               	movwf	btemp^0,c
 23341  00090C  D029               	goto	l2070
 23342  00090E                     l13679:
 23343                           
 23344                           ;daq.c: 359:  R.n_scalar[0] = scaleb;
 23345                           ;stkvar	_scaleb @ sp[(0)+-9]
 23346  00090E  50E1               	movf	fsr1l,w,c
 23347  000910  0FF7               	addlw	-9
 23348  000912  6ED9               	movwf	fsr2l,c
 23349  000914  50E2               	movf	fsr1h,w,c
 23350  000916  6EDA               	movwf	fsr2h,c
 23351  000918  0EFF               	movlw	255
 23352  00091A  22DA               	addwfc	fsr2h,f,c
 23353  00091C  006F FF78  F12A    	movff	postinc2,_R+42	;volatile
 23354  000922  006F FF78  F12B    	movff	postinc2,_R+43	;volatile
 23355  000928  006F FF78  F12C    	movff	postinc2,_R+44	;volatile
 23356  00092E  006F FF78  F12D    	movff	postinc2,_R+45	;volatile
 23357                           
 23358                           ;daq.c: 360:  R.n_scalar[1] = scalep;
 23359                           ;stkvar	_scalep @ sp[(0)+-13]
 23360  000934  50E1               	movf	fsr1l,w,c
 23361  000936  0FF3               	addlw	-13
 23362  000938  6ED9               	movwf	fsr2l,c
 23363  00093A  50E2               	movf	fsr1h,w,c
 23364  00093C  6EDA               	movwf	fsr2h,c
 23365  00093E  0EFF               	movlw	255
 23366  000940  22DA               	addwfc	fsr2h,f,c
 23367  000942  006F FF78  F12E    	movff	postinc2,_R+46	;volatile
 23368  000948  006F FF78  F12F    	movff	postinc2,_R+47	;volatile
 23369  00094E  006F FF78  F130    	movff	postinc2,_R+48	;volatile
 23370  000954  006F FF78  F131    	movff	postinc2,_R+49	;volatile
 23371                           
 23372                           ;daq.c: 361:  R.c_scale_cal = 1;
 23373  00095A  0101               	movlb	1	; () banked
 23374  00095C  85A7               	bsf	(_R+167)& (0+255),2,b	;volatile
 23375  00095E  D7D4               	goto	u12750
 23376  000960                     l2070:
 23377                           
 23378                           ; _cal_current_10A: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          13, argsize = 13, vargsize = 0
 23379  000960  0EF3               	movlw	243
 23380  000962  26E1               	addwf	fsr1l,f,c
 23381  000964  0EFF               	movlw	255
 23382  000966  22E2               	addwfc	fsr1h,f,c
 23383  000968  0012               	return		;funcret
 23384  00096A                     __end_of_cal_current_10A:
 23385                           	opt callstack 0
 23386                           
 23387 ;; *************** function _check_range *****************
 23388 ;; Defined at:
 23389 ;;		line 315 in file "daq.c"
 23390 ;; Parameters:    Size  Location     Type
 23391 ;;  value           2  [STACK] const short 
 23392 ;;  window          2  [STACK] const short 
 23393 ;;  standard        2  [STACK] const short 
 23394 ;; Auto vars:     Size  Location     Type
 23395 ;;		None
 23396 ;; Return value:  Size  Location     Type
 23397 ;;                  1  [STACK] _Bool 
 23398 ;; Registers used:
 23399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23400 ;; Tracked objects:
 23401 ;;		On entry : 0/1
 23402 ;;		On exit  : 0/0
 23403 ;;		Unchanged: 0/0
 23404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23409 ;;Total ram usage:        0 bytes
 23410 ;; Hardware stack levels used:    1
 23411 ;; Hardware stack levels required when called:   15
 23412 ;; This function calls:
 23413 ;;		Nothing
 23414 ;; This function is called by:
 23415 ;;		_cal_current_zero
 23416 ;;		_cal_current_10A
 23417 ;; This function uses a reentrant model
 23418 ;;
 23419                           
 23420                           	psect	text72
 23421  00166C                     __ptext72:
 23422                           	opt callstack 0
 23423  00166C                     _check_range:
 23424                           	opt callstack 13
 23425                           
 23426                           ;daq.c: 315: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 316: {;daq.c: 317:  if (value > (standard + window))
 23427                           ;stkvar	_value @ sp[(0)+-2]
 23428                           ;stkvar	_window @ sp[(0)+-4]
 23429                           ;stkvar	_standard @ sp[(0)+-6]
 23430                           
 23431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23432                           ;incstack = 0
 23433  00166C  0EFA               	movlw	-6
 23434  00166E  006F FF8C  F034    	movff	plusw1,btemp+10
 23435  001674  0EFB               	movlw	-5
 23436  001676  006F FF8C  F035    	movff	plusw1,btemp+11
 23437  00167C  0EFC               	movlw	-4
 23438  00167E  50E3               	movf	plusw1,w,c
 23439  001680  2634               	addwf	(btemp+10)^0,f,c
 23440  001682  0EFD               	movlw	-3
 23441  001684  50E3               	movf	plusw1,w,c
 23442  001686  2235               	addwfc	(btemp+11)^0,f,c
 23443  001688  0EFE               	movlw	-2
 23444  00168A  50E3               	movf	plusw1,w,c
 23445  00168C  5C34               	subwf	(btemp+10)^0,w,c
 23446  00168E  5035               	movf	(btemp+11)^0,w,c
 23447  001690  0A80               	xorlw	128
 23448  001692  6E2A               	movwf	btemp^0,c
 23449  001694  0EFF               	movlw	-1
 23450  001696  50E3               	movf	plusw1,w,c
 23451  001698  0A80               	xorlw	128
 23452  00169A  582A               	subwfb	btemp^0,w,c
 23453  00169C  B0D8               	btfsc	status,0,c
 23454  00169E  D002               	goto	l13005
 23455  0016A0                     u12410:
 23456                           
 23457                           ;daq.c: 318:   return 0;
 23458  0016A0  0E00               	movlw	0
 23459  0016A2  D01E               	goto	L22
 23460  0016A4                     l13005:
 23461                           
 23462                           ;daq.c: 319:  if (value < (standard - window))
 23463                           ;stkvar	_window @ sp[(0)+-4]
 23464                           ;stkvar	_standard @ sp[(0)+-6]
 23465  0016A4  0EFA               	movlw	-6
 23466  0016A6  006F FF8C  F034    	movff	plusw1,btemp+10
 23467  0016AC  0EFB               	movlw	-5
 23468  0016AE  006F FF8C  F035    	movff	plusw1,btemp+11
 23469  0016B4  0EFC               	movlw	-4
 23470  0016B6  50E3               	movf	plusw1,w,c
 23471  0016B8  5E34               	subwf	(btemp+10)^0,f,c
 23472  0016BA  0EFD               	movlw	-3
 23473  0016BC  50E3               	movf	plusw1,w,c
 23474  0016BE  5A35               	subwfb	(btemp+11)^0,f,c
 23475                           
 23476                           ;stkvar	_value @ sp[(0)+-2]
 23477  0016C0  0EFE               	movlw	-2
 23478  0016C2  006F FF8C  F02A    	movff	plusw1,btemp
 23479  0016C8  5034               	movf	(btemp+10)^0,w,c
 23480  0016CA  5C2A               	subwf	btemp^0,w,c
 23481  0016CC  0EFF               	movlw	-1
 23482  0016CE  50E3               	movf	plusw1,w,c
 23483  0016D0  0A80               	xorlw	128
 23484  0016D2  6E2A               	movwf	btemp^0,c
 23485  0016D4  5035               	movf	(btemp+11)^0,w,c
 23486  0016D6  0A80               	xorlw	128
 23487  0016D8  582A               	subwfb	btemp^0,w,c
 23488  0016DA  A0D8               	btfss	status,0,c
 23489  0016DC  D7E1               	goto	u12410
 23490                           
 23491                           ;daq.c: 321:  return 1;
 23492  0016DE  0E01               	movlw	1
 23493  0016E0                     L22:
 23494  0016E0  6E2A               	movwf	btemp^0,c
 23495                           
 23496                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 23497  0016E2  0EFA               	movlw	250
 23498  0016E4  26E1               	addwf	fsr1l,f,c
 23499  0016E6  0EFF               	movlw	255
 23500  0016E8  22E2               	addwfc	fsr1h,f,c
 23501  0016EA  0012               	return		;funcret
 23502  0016EC                     __end_of_check_range:
 23503                           	opt callstack 0
 23504                           
 23505 ;; *************** function _convert_adc_data *****************
 23506 ;; Defined at:
 23507 ;;		line 51 in file "mbmc.c"
 23508 ;; Parameters:    Size  Location     Type
 23509 ;;		None
 23510 ;; Auto vars:     Size  Location     Type
 23511 ;;  i               1  [STACK] unsigned char 
 23512 ;; Return value:  Size  Location     Type
 23513 ;;                  1  [STACK] void 
 23514 ;; Registers used:
 23515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23516 ;; Tracked objects:
 23517 ;;		On entry : 0/2
 23518 ;;		On exit  : 0/0
 23519 ;;		Unchanged: 0/0
 23520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23525 ;;Total ram usage:        0 bytes
 23526 ;; Hardware stack levels used:    1
 23527 ;; Hardware stack levels required when called:   18
 23528 ;; This function calls:
 23529 ;;		_conv_raw_result
 23530 ;;		_lp_filter
 23531 ;; This function is called by:
 23532 ;;		_main
 23533 ;; This function uses a reentrant model
 23534 ;;
 23535                           
 23536                           	psect	text73
 23537  000AE0                     __ptext73:
 23538                           	opt callstack 0
 23539  000AE0                     _convert_adc_data:
 23540                           	opt callstack 0
 23541                           
 23542                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23543  000AE0  52E6               	movf	postinc1,f,c
 23544                           
 23545                           ;mbmc.c: 53:  uint8_t i = 0;
 23546                           ;stkvar	_i @ sp[(-1)+0]
 23547                           
 23548                           ;incstack = 0
 23549  000AE2  0EFF               	movlw	-1
 23550  000AE4  6AE3               	clrf	plusw1,c
 23551  000AE6                     l14551:
 23552                           
 23553                           ;mbmc.c: 56:   if (V.calib) {
 23554  000AE6  0102               	movlb	2	; () banked
 23555  000AE8  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 23556  000AEA  B4D8               	btfsc	status,2,c
 23557  000AEC  D01B               	goto	l14555
 23558                           
 23559                           ; BSR set to: 2
 23560                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 23561  000AEE  0E01               	movlw	1
 23562  000AF0  6EE6               	movwf	postinc1,c
 23563                           
 23564                           ;stkvar	_i @ sp[(-2)+0]
 23565  000AF2  0EFE               	movlw	-2
 23566  000AF4  50E3               	movf	plusw1,w,c
 23567  000AF6  6EE6               	movwf	postinc1,c
 23568  000AF8  0E01               	movlw	1
 23569  000AFA  6EE6               	movwf	postinc1,c
 23570                           
 23571                           ;stkvar	_i @ sp[(-4)+0]
 23572  000AFC  0EFC               	movlw	-4
 23573  000AFE  50E3               	movf	plusw1,w,c
 23574  000B00  6EE6               	movwf	postinc1,c
 23575  000B02  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 23576  000B06  0060  F0AB  FFE6   	movff	btemp,postinc1
 23577  000B0C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23578  000B12  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23579  000B18  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23580  000B1E  EC9D  F0EE         	call	_lp_filter	;wreg free
 23581  000B22  D01A               	goto	L23
 23582  000B24                     l14555:
 23583                           
 23584                           ; BSR set to: 2
 23585                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 23586  000B24  0E00               	movlw	0
 23587  000B26  6EE6               	movwf	postinc1,c
 23588                           
 23589                           ;stkvar	_i @ sp[(-2)+0]
 23590  000B28  0EFE               	movlw	-2
 23591  000B2A  50E3               	movf	plusw1,w,c
 23592  000B2C  6EE6               	movwf	postinc1,c
 23593  000B2E  0E00               	movlw	0
 23594  000B30  6EE6               	movwf	postinc1,c
 23595                           
 23596                           ;stkvar	_i @ sp[(-4)+0]
 23597  000B32  0EFC               	movlw	-4
 23598  000B34  50E3               	movf	plusw1,w,c
 23599  000B36  6EE6               	movwf	postinc1,c
 23600  000B38  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 23601  000B3C  0060  F0AB  FFE6   	movff	btemp,postinc1
 23602  000B42  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23603  000B48  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23604  000B4E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23605  000B54  EC9D  F0EE         	call	_lp_filter	;wreg free
 23606  000B58                     L23:
 23607                           
 23608                           ;stkvar	_i @ sp[(-1)+0]
 23609  000B58  0EFF               	movlw	-1
 23610  000B5A  50E3               	movf	plusw1,w,c
 23611  000B5C  0D04               	mullw	4
 23612  000B5E  0EFF               	movlw	low _C
 23613  000B60  24F3               	addwf	243,w,c
 23614  000B62  6ED9               	movwf	fsr2l,c
 23615  000B64  0E08               	movlw	high _C
 23616  000B66  20F4               	addwfc	prodh,w,c
 23617  000B68  6EDA               	movwf	fsr2h,c
 23618  000B6A  0060  F0AB  FFDE   	movff	btemp,postinc2
 23619  000B70  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 23620  000B76  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 23621  000B7C  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 23622                           
 23623                           ;mbmc.c: 61:  } while (++i < 16);
 23624                           ;stkvar	_i @ sp[(-1)+0]
 23625  000B82  0EFF               	movlw	-1
 23626  000B84  2AE3               	incf	plusw1,f,c
 23627  000B86  0EFF               	movlw	-1
 23628  000B88  006F FF8C  F02A    	movff	plusw1,btemp
 23629  000B8E  0E0F               	movlw	15
 23630  000B90  642A               	cpfsgt	btemp^0,c
 23631  000B92  D7A9               	goto	l14551
 23632                           
 23633                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23634  000B94  52E5               	movf	postdec1,f,c
 23635  000B96  0012               	return		;funcret
 23636  000B98                     __end_of_convert_adc_data:
 23637                           	opt callstack 0
 23638                           
 23639 ;; *************** function _clear_hid_pflags *****************
 23640 ;; Defined at:
 23641 ;;		line 67 in file "hid.c"
 23642 ;; Parameters:    Size  Location     Type
 23643 ;;  h               2  [STACK] PTR struct H_data
 23644 ;;		 -> H(9), 
 23645 ;; Auto vars:     Size  Location     Type
 23646 ;;		None
 23647 ;; Return value:  Size  Location     Type
 23648 ;;                  1  [STACK] void 
 23649 ;; Registers used:
 23650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 23651 ;; Tracked objects:
 23652 ;;		On entry : 3E/0
 23653 ;;		On exit  : 0/0
 23654 ;;		Unchanged: 0/0
 23655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23660 ;;Total ram usage:        0 bytes
 23661 ;; Hardware stack levels used:    1
 23662 ;; Hardware stack levels required when called:   15
 23663 ;; This function calls:
 23664 ;;		Nothing
 23665 ;; This function is called by:
 23666 ;;		_main
 23667 ;; This function uses a reentrant model
 23668 ;;
 23669                           
 23670                           	psect	text74
 23671  001A66                     __ptext74:
 23672                           	opt callstack 0
 23673  001A66                     _clear_hid_pflags:
 23674                           	opt callstack 15
 23675                           
 23676                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 23677                           ;stkvar	_h @ sp[(0)+-2]
 23678                           
 23679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23680                           ;incstack = 0
 23681  001A66  0EFE               	movlw	-2
 23682  001A68  006F FF8C  F034    	movff	plusw1,btemp+10
 23683  001A6E  0EFF               	movlw	-1
 23684  001A70  006F FF8C  F035    	movff	plusw1,btemp+11
 23685  001A76  0E03               	movlw	3
 23686  001A78  2434               	addwf	(btemp+10)^0,w,c
 23687  001A7A  6ED9               	movwf	fsr2l,c
 23688  001A7C  0E00               	movlw	0
 23689  001A7E  2035               	addwfc	(btemp+11)^0,w,c
 23690  001A80  6EDA               	movwf	fsr2h,c
 23691  001A82  0E00               	movlw	0
 23692  001A84  6EDF               	movwf	indf2,c
 23693                           
 23694                           ;hid.c: 70:  h->enter_p = SW_OFF;
 23695                           ;stkvar	_h @ sp[(0)+-2]
 23696  001A86  0EFE               	movlw	-2
 23697  001A88  006F FF8C  F034    	movff	plusw1,btemp+10
 23698  001A8E  0EFF               	movlw	-1
 23699  001A90  006F FF8C  F035    	movff	plusw1,btemp+11
 23700  001A96  0E05               	movlw	5
 23701  001A98  2434               	addwf	(btemp+10)^0,w,c
 23702  001A9A  6ED9               	movwf	fsr2l,c
 23703  001A9C  0E00               	movlw	0
 23704  001A9E  2035               	addwfc	(btemp+11)^0,w,c
 23705  001AA0  6EDA               	movwf	fsr2h,c
 23706  001AA2  0E00               	movlw	0
 23707  001AA4  6EDF               	movwf	indf2,c
 23708                           
 23709                           ;hid.c: 71:  h->calib_p = SW_OFF;
 23710                           ;stkvar	_h @ sp[(0)+-2]
 23711  001AA6  0EFE               	movlw	-2
 23712  001AA8  006F FF8C  F034    	movff	plusw1,btemp+10
 23713  001AAE  0EFF               	movlw	-1
 23714  001AB0  006F FF8C  F035    	movff	plusw1,btemp+11
 23715  001AB6  0E07               	movlw	7
 23716  001AB8  2434               	addwf	(btemp+10)^0,w,c
 23717  001ABA  6ED9               	movwf	fsr2l,c
 23718  001ABC  0E00               	movlw	0
 23719  001ABE  2035               	addwfc	(btemp+11)^0,w,c
 23720  001AC0  6EDA               	movwf	fsr2h,c
 23721  001AC2  0E00               	movlw	0
 23722  001AC4  6EDF               	movwf	indf2,c
 23723                           
 23724                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 23725  001AC6  52E5               	movf	postdec1,f,c
 23726  001AC8  52E5               	movf	postdec1,f,c
 23727  001ACA  0012               	return		;funcret
 23728  001ACC                     __end_of_clear_hid_pflags:
 23729                           	opt callstack 0
 23730                           
 23731 ;; *************** function _check_help *****************
 23732 ;; Defined at:
 23733 ;;		line 40 in file "mconfig.c"
 23734 ;; Parameters:    Size  Location     Type
 23735 ;;  flipper         1  [STACK] const _Bool 
 23736 ;; Auto vars:     Size  Location     Type
 23737 ;;  estatus         1    0        _Bool 
 23738 ;; Return value:  Size  Location     Type
 23739 ;;                  1  [STACK] _Bool 
 23740 ;; Registers used:
 23741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23742 ;; Tracked objects:
 23743 ;;		On entry : 3F/2
 23744 ;;		On exit  : 0/0
 23745 ;;		Unchanged: 0/0
 23746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23751 ;;Total ram usage:        0 bytes
 23752 ;; Hardware stack levels used:    1
 23753 ;; Hardware stack levels required when called:   27
 23754 ;; This function calls:
 23755 ;;		_StartTimer
 23756 ;;		_TimerDone
 23757 ;;		_display_help
 23758 ;;		_display_info
 23759 ;;		_get_vterm_ptr
 23760 ;;		_help_button
 23761 ;;		_mode_lamp_bright
 23762 ;;		_mode_lamp_dim
 23763 ;;		_set_display_info
 23764 ;;		_set_temp_display_help
 23765 ;;		_set_vterm
 23766 ;;		_sprintf
 23767 ;;		_update_lcd
 23768 ;;		_vterm_dump
 23769 ;; This function is called by:
 23770 ;;		_main
 23771 ;; This function uses a reentrant model
 23772 ;;
 23773                           
 23774                           	psect	text75
 23775  01D580                     __ptext75:
 23776                           	opt callstack 0
 23777  01D580                     _check_help:
 23778                           	opt callstack 3
 23779                           
 23780                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 23781                           
 23782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23783                           ;incstack = 0
 23784  01D580  EC6E  F012         	call	_help_button	;wreg free
 23785  01D584  502A               	movf	btemp^0,w,c
 23786  01D586  B4D8               	btfsc	status,2,c
 23787  01D588  D0D0               	goto	l17839
 23788  01D58A  EC35  F017         	call	_display_info	;wreg free
 23789  01D58E  042A               	decf	btemp^0,w,c
 23790  01D590  B4D8               	btfsc	status,2,c
 23791  01D592  D0CB               	goto	l17839
 23792                           
 23793                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 23794  01D594  0EDC               	movlw	220
 23795  01D596  6EE6               	movwf	postinc1,c
 23796  01D598  0E05               	movlw	5
 23797  01D59A  6EE6               	movwf	postinc1,c
 23798  01D59C  0E0B               	movlw	11
 23799  01D59E  6EE6               	movwf	postinc1,c
 23800  01D5A0  ECB3  F011         	call	_StartTimer	;wreg free
 23801                           
 23802                           ;mconfig.c: 48:   if (V.debug)
 23803  01D5A4  0102               	movlb	2	; () banked
 23804  01D5A6  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 23805                           
 23806                           ; BSR set to: 2
 23807                           ;mconfig.c: 49:    vterm_dump();
 23808  01D5A8  ECE2  F0F1         	call	_vterm_dump	;wreg free
 23809                           
 23810                           ;mconfig.c: 51:   set_vterm(1);
 23811  01D5AC  0E01               	movlw	1
 23812  01D5AE  6EE6               	movwf	postinc1,c
 23813  01D5B0  EC2C  F016         	call	_set_vterm	;wreg free
 23814                           
 23815                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 23816  01D5B4  EC35  F017         	call	_display_info	;wreg free
 23817  01D5B8  502A               	movf	btemp^0,w,c
 23818  01D5BA  6EE6               	movwf	postinc1,c
 23819  01D5BC  ECDD  F016         	call	_set_temp_display_help	;wreg free
 23820                           
 23821                           ; BSR set to: 2
 23822                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 23823  01D5C0  0E01               	movlw	1
 23824  01D5C2  6EE6               	movwf	postinc1,c
 23825  01D5C4  EC3B  F016         	call	_set_display_info	;wreg free
 23826                           
 23827                           ;mconfig.c: 54:   if (flipper) {
 23828                           ;stkvar	_flipper @ sp[(0)+-1]
 23829  01D5C8  0EFF               	movlw	-1
 23830  01D5CA  50E3               	movf	plusw1,w,c
 23831  01D5CC  B4D8               	btfsc	status,2,c
 23832  01D5CE  D019               	goto	l17825
 23833                           
 23834                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 23835  01D5D0  0EB6               	movlw	low STR_83
 23836  01D5D2  6EE6               	movwf	postinc1,c
 23837  01D5D4  0EFF               	movlw	high STR_83
 23838  01D5D6  6EE6               	movwf	postinc1,c
 23839  01D5D8  0E61               	movlw	low STR_85
 23840  01D5DA  6EE6               	movwf	postinc1,c
 23841  01D5DC  0EFF               	movlw	high STR_85
 23842  01D5DE  6EE6               	movwf	postinc1,c
 23843  01D5E0  0E01               	movlw	1
 23844  01D5E2  6EE6               	movwf	postinc1,c
 23845  01D5E4  0E00               	movlw	0
 23846  01D5E6  6EE6               	movwf	postinc1,c
 23847  01D5E8  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 23848  01D5EC  0060  F0AB  FFE6   	movff	btemp,postinc1
 23849  01D5F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23850  01D5F8  0E06               	movlw	6
 23851  01D5FA  6EE6               	movwf	postinc1,c
 23852  01D5FC  EC01  F0FF         	call	_sprintf	;wreg free
 23853                           
 23854                           ;mconfig.c: 56:   } else {
 23855  01D600  D018               	goto	l1835
 23856  01D602                     l17825:
 23857                           
 23858                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 23859  01D602  0ECC               	movlw	low STR_84
 23860  01D604  6EE6               	movwf	postinc1,c
 23861  01D606  0EFF               	movlw	high STR_84
 23862  01D608  6EE6               	movwf	postinc1,c
 23863  01D60A  0E61               	movlw	low STR_85
 23864  01D60C  6EE6               	movwf	postinc1,c
 23865  01D60E  0EFF               	movlw	high STR_85
 23866  01D610  6EE6               	movwf	postinc1,c
 23867  01D612  0E01               	movlw	1
 23868  01D614  6EE6               	movwf	postinc1,c
 23869  01D616  0E00               	movlw	0
 23870  01D618  6EE6               	movwf	postinc1,c
 23871  01D61A  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 23872  01D61E  0060  F0AB  FFE6   	movff	btemp,postinc1
 23873  01D624  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23874  01D62A  0E06               	movlw	6
 23875  01D62C  6EE6               	movwf	postinc1,c
 23876  01D62E  EC01  F0FF         	call	_sprintf	;wreg free
 23877  01D632                     l1835:
 23878                           
 23879                           ; BSR set to: 0
 23880                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 23881  01D632  0102               	movlb	2	; () banked
 23882  01D634  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23883  01D636  32E8               	rrcf	wreg,f,c
 23884  01D638  32E8               	rrcf	wreg,f,c
 23885  01D63A  0B03               	andlw	3
 23886  01D63C  0D2C               	mullw	44
 23887  01D63E  0E16               	movlw	22
 23888  01D640  26F3               	addwf	243,f,c
 23889  01D642  0E00               	movlw	0
 23890  01D644  22F4               	addwfc	244,f,c
 23891  01D646  0E7D               	movlw	low _T
 23892  01D648  6E34               	movwf	(btemp+10)^0,c
 23893  01D64A  0EF8               	movlw	high _T
 23894  01D64C  6E35               	movwf	(btemp+11)^0,c
 23895  01D64E  50F3               	movf	243,w,c
 23896  01D650  2634               	addwf	(btemp+10)^0,f,c
 23897  01D652  50F4               	movf	244,w,c
 23898  01D654  2235               	addwfc	(btemp+11)^0,f,c
 23899  01D656  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23900  01D65C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23901  01D662  0EC2               	movlw	low STR_87
 23902  01D664  6EE6               	movwf	postinc1,c
 23903  01D666  0EFF               	movlw	high STR_87
 23904  01D668  6EE6               	movwf	postinc1,c
 23905  01D66A  0E01               	movlw	1
 23906  01D66C  6EE6               	movwf	postinc1,c
 23907  01D66E  0E01               	movlw	1
 23908  01D670  6EE6               	movwf	postinc1,c
 23909  01D672  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 23910  01D676  0060  F0AB  FFE6   	movff	btemp,postinc1
 23911  01D67C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23912  01D682  0E06               	movlw	6
 23913  01D684  6EE6               	movwf	postinc1,c
 23914  01D686  EC01  F0FF         	call	_sprintf	;wreg free
 23915                           
 23916                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 23917  01D68A  0102               	movlb	2	; () banked
 23918  01D68C  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23919  01D68E  32E8               	rrcf	wreg,f,c
 23920  01D690  32E8               	rrcf	wreg,f,c
 23921  01D692  0B03               	andlw	3
 23922  01D694  0D2C               	mullw	44
 23923  01D696  0E7D               	movlw	low _T
 23924  01D698  6E34               	movwf	(btemp+10)^0,c
 23925  01D69A  0EF8               	movlw	high _T
 23926  01D69C  6E35               	movwf	(btemp+11)^0,c
 23927  01D69E  50F3               	movf	243,w,c
 23928  01D6A0  2634               	addwf	(btemp+10)^0,f,c
 23929  01D6A2  50F4               	movf	244,w,c
 23930  01D6A4  2235               	addwfc	(btemp+11)^0,f,c
 23931  01D6A6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23932  01D6AC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23933  01D6B2  0EC2               	movlw	low STR_87
 23934  01D6B4  6EE6               	movwf	postinc1,c
 23935  01D6B6  0EFF               	movlw	high STR_87
 23936  01D6B8  6EE6               	movwf	postinc1,c
 23937  01D6BA  0E01               	movlw	1
 23938  01D6BC  6EE6               	movwf	postinc1,c
 23939  01D6BE  0E02               	movlw	2
 23940  01D6C0  6EE6               	movwf	postinc1,c
 23941  01D6C2  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 23942  01D6C6  0060  F0AB  FFE6   	movff	btemp,postinc1
 23943  01D6CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23944  01D6D2  0E06               	movlw	6
 23945  01D6D4  6EE6               	movwf	postinc1,c
 23946  01D6D6  EC01  F0FF         	call	_sprintf	;wreg free
 23947                           
 23948                           ; BSR set to: 0
 23949                           ;mconfig.c: 61:   V.help_id++;
 23950  01D6DA  EE20  F29F         	lfsr	2,_V+152	;volatile
 23951  01D6DE  38DF               	swapf	223,w,c
 23952  01D6E0  6E35               	movwf	(btemp+11)^0,c
 23953  01D6E2  3235               	rrcf	(btemp+11)^0,f,c
 23954  01D6E4  3035               	rrcf	(btemp+11)^0,w,c
 23955  01D6E6  0B03               	andlw	3
 23956  01D6E8  6E35               	movwf	(btemp+11)^0,c
 23957  01D6EA  2A35               	incf	(btemp+11)^0,f,c
 23958  01D6EC  3A35               	swapf	(btemp+11)^0,f,c
 23959  01D6EE  3635               	rlcf	(btemp+11)^0,f,c
 23960  01D6F0  3635               	rlcf	(btemp+11)^0,f,c
 23961  01D6F2  50DF               	movf	223,w,c
 23962  01D6F4  1835               	xorwf	(btemp+11)^0,w,c
 23963  01D6F6  0B3F               	andlw	-193
 23964  01D6F8  1835               	xorwf	(btemp+11)^0,w,c
 23965  01D6FA  6EDF               	movwf	223,c
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 23969  01D6FC  0EB8               	movlw	184
 23970  01D6FE  6EE6               	movwf	postinc1,c
 23971  01D700  0E0B               	movlw	11
 23972  01D702  6EE6               	movwf	postinc1,c
 23973  01D704  0E09               	movlw	9
 23974  01D706  6EE6               	movwf	postinc1,c
 23975  01D708  ECB3  F011         	call	_StartTimer	;wreg free
 23976                           
 23977                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 23978  01D70C  0EB8               	movlw	184
 23979  01D70E  6EE6               	movwf	postinc1,c
 23980  01D710  0E0B               	movlw	11
 23981  01D712  6EE6               	movwf	postinc1,c
 23982  01D714  0E07               	movlw	7
 23983  01D716  6EE6               	movwf	postinc1,c
 23984  01D718  ECB3  F011         	call	_StartTimer	;wreg free
 23985                           
 23986                           ;mconfig.c: 64:   mode_lamp_bright();
 23987  01D71C  ECF4  F016         	call	_mode_lamp_bright	;wreg free
 23988                           
 23989                           ;mconfig.c: 65:   update_lcd(1);
 23990  01D720  0E01               	movlw	1
 23991  01D722  6EE6               	movwf	postinc1,c
 23992  01D724  ECB3  F0F7         	call	_update_lcd	;wreg free
 23993                           
 23994                           ;mconfig.c: 67:  } else {
 23995  01D728  D032               	goto	l1836
 23996  01D72A                     l17839:
 23997                           
 23998                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 23999  01D72A  0E09               	movlw	9
 24000  01D72C  6EE6               	movwf	postinc1,c
 24001  01D72E  EC25  F014         	call	_TimerDone	;wreg free
 24002  01D732  502A               	movf	btemp^0,w,c
 24003  01D734  B4D8               	btfsc	status,2,c
 24004  01D736  D02B               	goto	l1836
 24005                           
 24006                           ;mconfig.c: 69:    set_vterm(0);
 24007  01D738  0E00               	movlw	0
 24008  01D73A  6EE6               	movwf	postinc1,c
 24009  01D73C  EC2C  F016         	call	_set_vterm	;wreg free
 24010                           
 24011                           ;mconfig.c: 70:    V.help = 0;
 24012  01D740  0102               	movlb	2	; () banked
 24013  01D742  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 24014                           
 24015                           ; BSR set to: 2
 24016                           ;mconfig.c: 71:    set_display_info(display_help());
 24017  01D744  EC39  F017         	call	_display_help	;wreg free
 24018  01D748  502A               	movf	btemp^0,w,c
 24019  01D74A  6EE6               	movwf	postinc1,c
 24020  01D74C  EC3B  F016         	call	_set_display_info	;wreg free
 24021                           
 24022                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 24023  01D750  0060  FA67  FFE6   	movff	_V+146,postinc1
 24024  01D756  0060  FA6B  FFE6   	movff	_V+147,postinc1
 24025  01D75C  EC65  F016         	call	_mode_lamp_dim	;wreg free
 24026                           
 24027                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 24028  01D760  0E0B               	movlw	11
 24029  01D762  6EE6               	movwf	postinc1,c
 24030  01D764  EC25  F014         	call	_TimerDone	;wreg free
 24031  01D768  502A               	movf	btemp^0,w,c
 24032  01D76A  B4D8               	btfsc	status,2,c
 24033  01D76C  D010               	goto	l1836
 24034                           
 24035                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 24036  01D76E  0102               	movlb	2	; () banked
 24037  01D770  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 24038  01D772  A4D8               	btfss	status,2,c
 24039  01D774  D002               	goto	u17640
 24040  01D776  0E01               	movlw	1
 24041  01D778  D001               	goto	u17650
 24042  01D77A                     u17640:
 24043  01D77A  0E00               	movlw	0
 24044  01D77C                     u17650:
 24045  01D77C  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 24046                           
 24047                           ; BSR set to: 2
 24048                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 24049  01D77E  0EDC               	movlw	220
 24050  01D780  6EE6               	movwf	postinc1,c
 24051  01D782  0E05               	movlw	5
 24052  01D784  6EE6               	movwf	postinc1,c
 24053  01D786  0E0B               	movlw	11
 24054  01D788  6EE6               	movwf	postinc1,c
 24055  01D78A  ECB3  F011         	call	_StartTimer	;wreg free
 24056  01D78E                     l1836:
 24057                           
 24058                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24059  01D78E  52E5               	movf	postdec1,f,c
 24060  01D790  0012               	return		;funcret
 24061  01D792                     __end_of_check_help:
 24062                           	opt callstack 0
 24063                           
 24064 ;; *************** function _vterm_dump *****************
 24065 ;; Defined at:
 24066 ;;		line 124 in file "mconfig.c"
 24067 ;; Parameters:    Size  Location     Type
 24068 ;;		None
 24069 ;; Auto vars:     Size  Location     Type
 24070 ;;		None
 24071 ;; Return value:  Size  Location     Type
 24072 ;;                  1  [STACK] void 
 24073 ;; Registers used:
 24074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24075 ;; Tracked objects:
 24076 ;;		On entry : 3F/2
 24077 ;;		On exit  : 0/0
 24078 ;;		Unchanged: 0/0
 24079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24084 ;;Total ram usage:        0 bytes
 24085 ;; Hardware stack levels used:    1
 24086 ;; Hardware stack levels required when called:   26
 24087 ;; This function calls:
 24088 ;;		_WaitMs
 24089 ;;		_eaDogM_WriteStringAtPos
 24090 ;;		_get_vterm_ptr
 24091 ;;		_sprintf
 24092 ;;		_wait_lcd_done
 24093 ;; This function is called by:
 24094 ;;		_check_help
 24095 ;; This function uses a reentrant model
 24096 ;;
 24097                           
 24098                           	psect	text76
 24099  01E3C4                     __ptext76:
 24100                           	opt callstack 0
 24101  01E3C4                     _vterm_dump:
 24102                           	opt callstack 3
 24103                           
 24104                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 24105                           
 24106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24107                           ;incstack = 0
 24108  01E3C4  0E01               	movlw	1
 24109  01E3C6  6EE6               	movwf	postinc1,c
 24110  01E3C8  0E00               	movlw	0
 24111  01E3CA  6EE6               	movwf	postinc1,c
 24112  01E3CC  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 24113  01E3D0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24114  01E3D6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24115  01E3DC  0E00               	movlw	0
 24116  01E3DE  6EE6               	movwf	postinc1,c
 24117  01E3E0  0E00               	movlw	0
 24118  01E3E2  6EE6               	movwf	postinc1,c
 24119  01E3E4  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 24120  01E3E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24121  01E3EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24122  01E3F4  0EA7               	movlw	low STR_89
 24123  01E3F6  6EE6               	movwf	postinc1,c
 24124  01E3F8  0EFF               	movlw	high STR_89
 24125  01E3FA  6EE6               	movwf	postinc1,c
 24126  01E3FC  0E08               	movlw	low (_V+1)
 24127  01E3FE  6EE6               	movwf	postinc1,c
 24128  01E400  0E02               	movlw	high (_V+1)
 24129  01E402  6EE6               	movwf	postinc1,c
 24130  01E404  0E08               	movlw	8
 24131  01E406  6EE6               	movwf	postinc1,c
 24132  01E408  EC01  F0FF         	call	_sprintf	;wreg free
 24133                           
 24134                           ; BSR set to: 0
 24135                           ;mconfig.c: 127:  wait_lcd_done();
 24136  01E40C  ECAA  F015         	call	_wait_lcd_done	;wreg free
 24137                           
 24138                           ; BSR set to: 0
 24139                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 24140  01E410  0E08               	movlw	low (_V+1)
 24141  01E412  6EE6               	movwf	postinc1,c
 24142  01E414  0E02               	movlw	high (_V+1)
 24143  01E416  6EE6               	movwf	postinc1,c
 24144  01E418  0E00               	movlw	0
 24145  01E41A  6EE6               	movwf	postinc1,c
 24146  01E41C  0E00               	movlw	0
 24147  01E41E  6EE6               	movwf	postinc1,c
 24148  01E420  EC09  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24149                           
 24150                           ; BSR set to: 59
 24151                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 24152  01E424  0E01               	movlw	1
 24153  01E426  6EE6               	movwf	postinc1,c
 24154  01E428  0E01               	movlw	1
 24155  01E42A  6EE6               	movwf	postinc1,c
 24156  01E42C  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 24157  01E430  0060  F0AB  FFE6   	movff	btemp,postinc1
 24158  01E436  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24159  01E43C  0E00               	movlw	0
 24160  01E43E  6EE6               	movwf	postinc1,c
 24161  01E440  0E01               	movlw	1
 24162  01E442  6EE6               	movwf	postinc1,c
 24163  01E444  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 24164  01E448  0060  F0AB  FFE6   	movff	btemp,postinc1
 24165  01E44E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24166  01E454  0EA7               	movlw	low STR_89
 24167  01E456  6EE6               	movwf	postinc1,c
 24168  01E458  0EFF               	movlw	high STR_89
 24169  01E45A  6EE6               	movwf	postinc1,c
 24170  01E45C  0E08               	movlw	low (_V+1)
 24171  01E45E  6EE6               	movwf	postinc1,c
 24172  01E460  0E02               	movlw	high (_V+1)
 24173  01E462  6EE6               	movwf	postinc1,c
 24174  01E464  0E08               	movlw	8
 24175  01E466  6EE6               	movwf	postinc1,c
 24176  01E468  EC01  F0FF         	call	_sprintf	;wreg free
 24177                           
 24178                           ; BSR set to: 0
 24179                           ;mconfig.c: 130:  wait_lcd_done();
 24180  01E46C  ECAA  F015         	call	_wait_lcd_done	;wreg free
 24181                           
 24182                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 24183  01E470  0E08               	movlw	low (_V+1)
 24184  01E472  6EE6               	movwf	postinc1,c
 24185  01E474  0E02               	movlw	high (_V+1)
 24186  01E476  6EE6               	movwf	postinc1,c
 24187  01E478  0E00               	movlw	0
 24188  01E47A  6EE6               	movwf	postinc1,c
 24189  01E47C  0E01               	movlw	1
 24190  01E47E  6EE6               	movwf	postinc1,c
 24191  01E480  EC09  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24192                           
 24193                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 24194  01E484  0E01               	movlw	1
 24195  01E486  6EE6               	movwf	postinc1,c
 24196  01E488  0E02               	movlw	2
 24197  01E48A  6EE6               	movwf	postinc1,c
 24198  01E48C  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 24199  01E490  0060  F0AB  FFE6   	movff	btemp,postinc1
 24200  01E496  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24201  01E49C  0E00               	movlw	0
 24202  01E49E  6EE6               	movwf	postinc1,c
 24203  01E4A0  0E02               	movlw	2
 24204  01E4A2  6EE6               	movwf	postinc1,c
 24205  01E4A4  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 24206  01E4A8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24207  01E4AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24208  01E4B4  0EA7               	movlw	low STR_89
 24209  01E4B6  6EE6               	movwf	postinc1,c
 24210  01E4B8  0EFF               	movlw	high STR_89
 24211  01E4BA  6EE6               	movwf	postinc1,c
 24212  01E4BC  0E08               	movlw	low (_V+1)
 24213  01E4BE  6EE6               	movwf	postinc1,c
 24214  01E4C0  0E02               	movlw	high (_V+1)
 24215  01E4C2  6EE6               	movwf	postinc1,c
 24216  01E4C4  0E08               	movlw	8
 24217  01E4C6  6EE6               	movwf	postinc1,c
 24218  01E4C8  EC01  F0FF         	call	_sprintf	;wreg free
 24219                           
 24220                           ; BSR set to: 0
 24221                           ;mconfig.c: 133:  wait_lcd_done();
 24222  01E4CC  ECAA  F015         	call	_wait_lcd_done	;wreg free
 24223                           
 24224                           ; BSR set to: 0
 24225                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 24226  01E4D0  0E08               	movlw	low (_V+1)
 24227  01E4D2  6EE6               	movwf	postinc1,c
 24228  01E4D4  0E02               	movlw	high (_V+1)
 24229  01E4D6  6EE6               	movwf	postinc1,c
 24230  01E4D8  0E00               	movlw	0
 24231  01E4DA  6EE6               	movwf	postinc1,c
 24232  01E4DC  0E02               	movlw	2
 24233  01E4DE  6EE6               	movwf	postinc1,c
 24234  01E4E0  EC09  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24235                           
 24236                           ; BSR set to: 59
 24237                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 24238  01E4E4  0E01               	movlw	1
 24239  01E4E6  6EE6               	movwf	postinc1,c
 24240  01E4E8  0E03               	movlw	3
 24241  01E4EA  6EE6               	movwf	postinc1,c
 24242  01E4EC  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 24243  01E4F0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24244  01E4F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24245  01E4FC  0E00               	movlw	0
 24246  01E4FE  6EE6               	movwf	postinc1,c
 24247  01E500  0E03               	movlw	3
 24248  01E502  6EE6               	movwf	postinc1,c
 24249  01E504  ECA2  F013         	call	_get_vterm_ptr	;wreg free
 24250  01E508  0060  F0AB  FFE6   	movff	btemp,postinc1
 24251  01E50E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24252  01E514  0EA7               	movlw	low STR_89
 24253  01E516  6EE6               	movwf	postinc1,c
 24254  01E518  0EFF               	movlw	high STR_89
 24255  01E51A  6EE6               	movwf	postinc1,c
 24256  01E51C  0E08               	movlw	low (_V+1)
 24257  01E51E  6EE6               	movwf	postinc1,c
 24258  01E520  0E02               	movlw	high (_V+1)
 24259  01E522  6EE6               	movwf	postinc1,c
 24260  01E524  0E08               	movlw	8
 24261  01E526  6EE6               	movwf	postinc1,c
 24262  01E528  EC01  F0FF         	call	_sprintf	;wreg free
 24263                           
 24264                           ; BSR set to: 0
 24265                           ;mconfig.c: 136:  wait_lcd_done();
 24266  01E52C  ECAA  F015         	call	_wait_lcd_done	;wreg free
 24267                           
 24268                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 24269  01E530  0E08               	movlw	low (_V+1)
 24270  01E532  6EE6               	movwf	postinc1,c
 24271  01E534  0E02               	movlw	high (_V+1)
 24272  01E536  6EE6               	movwf	postinc1,c
 24273  01E538  0E00               	movlw	0
 24274  01E53A  6EE6               	movwf	postinc1,c
 24275  01E53C  0E03               	movlw	3
 24276  01E53E  6EE6               	movwf	postinc1,c
 24277  01E540  EC09  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24278                           
 24279                           ; BSR set to: 59
 24280                           ;mconfig.c: 138:  WaitMs(3000);
 24281  01E544  0EB8               	movlw	184
 24282  01E546  6EE6               	movwf	postinc1,c
 24283  01E548  0E0B               	movlw	11
 24284  01E54A  6EE6               	movwf	postinc1,c
 24285  01E54C  ECA6  F012         	call	_WaitMs	;wreg free
 24286                           
 24287                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 24288  01E550  0012               	return		;funcret
 24289  01E552                     __end_of_vterm_dump:
 24290                           	opt callstack 0
 24291                           
 24292 ;; *************** function _sprintf *****************
 24293 ;; Defined at:
 24294 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 24295 ;; Parameters:    Size  Location     Type
 24296 ;;  s               2  [STACK] PTR unsigned char 
 24297 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 24298 ;;  fmt             2  [STACK] PTR const unsigned char 
 24299 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 24300 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 24301 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 24302 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 24303 ;;		 -> STR_86(19), STR_85(19), STR_81(14), STR_80(28), 
 24304 ;;		 -> STR_79(28), STR_78(28), STR_77(21), STR_76(21), 
 24305 ;;		 -> STR_75(21), STR_74(21), STR_73(21), STR_72(21), 
 24306 ;;		 -> STR_71(21), STR_70(21), STR_69(21), STR_68(18), 
 24307 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(21), 
 24308 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 24309 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 24310 ;;		 -> STR_55(20), STR_54(21), STR_53(21), STR_52(21), 
 24311 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(23), 
 24312 ;;		 -> STR_47(23), STR_46(23), STR_45(29), STR_44(23), 
 24313 ;;		 -> STR_43(23), STR_42(22), STR_41(22), STR_40(22), 
 24314 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 24315 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 24316 ;;		 -> STR_31(22), STR_30(17), STR_29(16), STR_28(16), 
 24317 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(14), 
 24318 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 24319 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 24320 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 24321 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24322 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24323 ;;		 -> STR_2(21), STR_1(21), 
 24324 ;; Auto vars:     Size  Location     Type
 24325 ;;  f               6  [STACK] struct _IO_FILE
 24326 ;;  ap              2  [STACK] PTR void [1]
 24327 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24328 ;;  ret             2    0        int 
 24329 ;; Return value:  Size  Location     Type
 24330 ;;                  2  [STACK] int 
 24331 ;; Registers used:
 24332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24333 ;; Tracked objects:
 24334 ;;		On entry : 0/2
 24335 ;;		On exit  : 3F/0
 24336 ;;		Unchanged: 0/0
 24337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24342 ;;Total ram usage:        0 bytes
 24343 ;; Hardware stack levels used:    1
 24344 ;; Hardware stack levels required when called:   23
 24345 ;; This function calls:
 24346 ;;		_vfprintf
 24347 ;; This function is called by:
 24348 ;;		_main
 24349 ;;		_current_sensor_cal
 24350 ;;		_display_history
 24351 ;;		_check_help
 24352 ;;		_vterm_dump
 24353 ;;		_calc_bsoc
 24354 ;; This function uses a reentrant model
 24355 ;;
 24356                           
 24357                           	psect	text77
 24358  01FE02                     __ptext77:
 24359                           	opt callstack 0
 24360  01FE02                     _sprintf:
 24361                           	opt callstack 0
 24362                           
 24363                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24364  01FE02  0E08               	movlw	8
 24365  01FE04  26E1               	addwf	fsr1l,f,c
 24366  01FE06  0E00               	movlw	0
 24367  01FE08  22E2               	addwfc	fsr1h,f,c
 24368                           
 24369                           ;incstack = 0
 24370 ;; hardware stack exceeded
 24371  01FE0A  0EFE               	movlw	254
 24372  01FE0C  6E34               	movwf	(btemp+10)^0,c
 24373  01FE0E  0EFF               	movlw	255
 24374  01FE10  6E35               	movwf	(btemp+11)^0,c
 24375                           
 24376                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 24377  01FE12  0EF5               	movlw	245
 24378  01FE14  24E1               	addwf	fsr1l,w,c
 24379  01FE16  6E32               	movwf	(btemp+8)^0,c
 24380  01FE18  0EFF               	movlw	255
 24381  01FE1A  20E2               	addwfc	fsr1h,w,c
 24382  01FE1C  6E33               	movwf	(btemp+9)^0,c
 24383  01FE1E  5034               	movf	(btemp+10)^0,w,c
 24384  01FE20  2632               	addwf	(btemp+8)^0,f,c
 24385  01FE22  5035               	movf	(btemp+11)^0,w,c
 24386  01FE24  2233               	addwfc	(btemp+9)^0,f,c
 24387                           
 24388                           ;stkvar	_ap @ sp[(-8)+6]
 24389  01FE26  0EFF               	movlw	-1
 24390  01FE28  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 24391  01FE2E  0EFE               	movlw	-2
 24392  01FE30  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 24393                           
 24394                           ;stkvar	_s @ sp[(-8)+-3]
 24395  01FE36  0EF5               	movlw	-11
 24396  01FE38  006F FF8C  F034    	movff	plusw1,btemp+10
 24397  01FE3E  0EF6               	movlw	-10
 24398  01FE40  006F FF8C  F035    	movff	plusw1,btemp+11
 24399                           
 24400                           ;stkvar	_f @ sp[(-8)+0]
 24401  01FE46  0EF9               	movlw	-7
 24402  01FE48  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24403  01FE4E  0EF8               	movlw	-8
 24404  01FE50  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24405                           
 24406                           ;stkvar	_f @ sp[(-8)+0]
 24407  01FE56  0EFA               	movlw	250
 24408  01FE58  24E1               	addwf	fsr1l,w,c
 24409  01FE5A  6ED9               	movwf	fsr2l,c
 24410  01FE5C  0EFF               	movlw	255
 24411  01FE5E  20E2               	addwfc	fsr1h,w,c
 24412  01FE60  6EDA               	movwf	fsr2h,c
 24413  01FE62  0E00               	movlw	0
 24414  01FE64  6EDE               	movwf	postinc2,c
 24415  01FE66  0E00               	movlw	0
 24416  01FE68  6EDD               	movwf	postdec2,c
 24417                           
 24418                           ;stkvar	_f @ sp[(-8)+0]
 24419  01FE6A  0EFC               	movlw	252
 24420  01FE6C  24E1               	addwf	fsr1l,w,c
 24421  01FE6E  6ED9               	movwf	fsr2l,c
 24422  01FE70  0EFF               	movlw	255
 24423  01FE72  20E2               	addwfc	fsr1h,w,c
 24424  01FE74  6EDA               	movwf	fsr2h,c
 24425  01FE76  0E00               	movlw	0
 24426  01FE78  6EDE               	movwf	postinc2,c
 24427  01FE7A  0E00               	movlw	0
 24428  01FE7C  6EDD               	movwf	postdec2,c
 24429                           
 24430                           ;stkvar	_ap @ sp[(-8)+6]
 24431  01FE7E  0EFE               	movlw	254
 24432  01FE80  24E1               	addwf	fsr1l,w,c
 24433  01FE82  6E2A               	movwf	btemp^0,c
 24434  01FE84  0EFF               	movlw	255
 24435  01FE86  20E2               	addwfc	fsr1h,w,c
 24436  01FE88  6E2B               	movwf	(btemp+1)^0,c
 24437  01FE8A  0060  F0AB  FFE6   	movff	btemp,postinc1
 24438  01FE90  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24439                           
 24440                           ;stkvar	_fmt @ sp[(-10)+-5]
 24441  01FE96  0EF1               	movlw	-15
 24442  01FE98  006F FF8F FFE6     	movff	plusw1,postinc1
 24443  01FE9E  006F FF8F FFE6     	movff	plusw1,postinc1
 24444                           
 24445                           ;stkvar	_f @ sp[(-12)+0]
 24446  01FEA4  0EF4               	movlw	244
 24447  01FEA6  24E1               	addwf	fsr1l,w,c
 24448  01FEA8  6E2A               	movwf	btemp^0,c
 24449  01FEAA  0EFF               	movlw	255
 24450  01FEAC  20E2               	addwfc	fsr1h,w,c
 24451  01FEAE  6E2B               	movwf	(btemp+1)^0,c
 24452  01FEB0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24453  01FEB6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24454  01FEBC  ECD8  F006         	call	_vfprintf	;wreg free
 24455                           
 24456                           ; BSR set to: 0
 24457                           ;stkvar	_f @ sp[(-8)+0]
 24458  01FEC0  0EFA               	movlw	250
 24459  01FEC2  24E1               	addwf	fsr1l,w,c
 24460  01FEC4  6ED9               	movwf	fsr2l,c
 24461  01FEC6  0EFF               	movlw	255
 24462  01FEC8  20E2               	addwfc	fsr1h,w,c
 24463  01FECA  6EDA               	movwf	fsr2h,c
 24464  01FECC  006F FF78  F034    	movff	postinc2,btemp+10
 24465  01FED2  006F FF74  F035    	movff	postdec2,btemp+11
 24466                           
 24467                           ;stkvar	_s @ sp[(-8)+-3]
 24468  01FED8  0EF5               	movlw	-11
 24469  01FEDA  006F FF8C  F032    	movff	plusw1,btemp+8
 24470  01FEE0  0EF6               	movlw	-10
 24471  01FEE2  006F FF8C  F033    	movff	plusw1,btemp+9
 24472  01FEE8  5034               	movf	(btemp+10)^0,w,c
 24473  01FEEA  2432               	addwf	(btemp+8)^0,w,c
 24474  01FEEC  6ED9               	movwf	fsr2l,c
 24475  01FEEE  5035               	movf	(btemp+11)^0,w,c
 24476  01FEF0  2033               	addwfc	(btemp+9)^0,w,c
 24477  01FEF2  6EDA               	movwf	fsr2h,c
 24478  01FEF4  0E00               	movlw	0
 24479  01FEF6  6EDF               	movwf	indf2,c
 24480                           
 24481                           ; BSR set to: 0
 24482                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 24483  01FEF8  0EF8               	movlw	248
 24484  01FEFA  26E1               	addwf	fsr1l,f,c
 24485  01FEFC  0EFF               	movlw	255
 24486  01FEFE  22E2               	addwfc	fsr1h,f,c
 24487  01FF00  52E5               	movf	postdec1,f,c
 24488  01FF02  50E7               	movf	indf1,w,c
 24489  01FF04  5EE1               	subwf	fsr1l,f,c
 24490  01FF06  0E00               	movlw	0
 24491  01FF08  5AE2               	subwfb	fsr1h,f,c
 24492  01FF0A  0012               	return		;funcret
 24493  01FF0C                     __end_of_sprintf:
 24494                           	opt callstack 0
 24495                           
 24496 ;; *************** function _get_vterm_ptr *****************
 24497 ;; Defined at:
 24498 ;;		line 119 in file "mconfig.c"
 24499 ;; Parameters:    Size  Location     Type
 24500 ;;  line            1  [STACK] const unsigned char 
 24501 ;;  vterm           1  [STACK] const unsigned char 
 24502 ;; Auto vars:     Size  Location     Type
 24503 ;;		None
 24504 ;; Return value:  Size  Location     Type
 24505 ;;                  2  [STACK] PTR unsigned char 
 24506 ;; Registers used:
 24507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24508 ;; Tracked objects:
 24509 ;;		On entry : 0/2
 24510 ;;		On exit  : 0/0
 24511 ;;		Unchanged: 0/0
 24512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24517 ;;Total ram usage:        0 bytes
 24518 ;; Hardware stack levels used:    1
 24519 ;; Hardware stack levels required when called:   15
 24520 ;; This function calls:
 24521 ;;		Nothing
 24522 ;; This function is called by:
 24523 ;;		_main
 24524 ;;		_current_sensor_cal
 24525 ;;		_display_history
 24526 ;;		_check_help
 24527 ;;		_vterm_dump
 24528 ;; This function uses a reentrant model
 24529 ;;
 24530                           
 24531                           	psect	text78
 24532  002744                     __ptext78:
 24533                           	opt callstack 0
 24534  002744                     _get_vterm_ptr:
 24535                           	opt callstack 15
 24536                           
 24537                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 24538                           ;stkvar	_vterm @ sp[(0)+-2]
 24539                           
 24540                           ; BSR set to: 0
 24541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24542                           ;incstack = 0
 24543  002744  0EFE               	movlw	-2
 24544  002746  50E3               	movf	plusw1,w,c
 24545  002748  0B03               	andlw	3
 24546  00274A  0DA0               	mullw	160
 24547  00274C  0E4F               	movlw	low _D
 24548  00274E  6E2A               	movwf	btemp^0,c
 24549  002750  0E0A               	movlw	high _D
 24550  002752  6E2B               	movwf	(btemp+1)^0,c
 24551  002754  50F3               	movf	243,w,c
 24552  002756  262A               	addwf	btemp^0,f,c
 24553  002758  50F4               	movf	244,w,c
 24554  00275A  222B               	addwfc	(btemp+1)^0,f,c
 24555                           
 24556                           ;stkvar	_line @ sp[(0)+-1]
 24557  00275C  0EFF               	movlw	-1
 24558  00275E  50E3               	movf	plusw1,w,c
 24559  002760  0B03               	andlw	3
 24560  002762  0D28               	mullw	40
 24561  002764  50F3               	movf	243,w,c
 24562  002766  262A               	addwf	btemp^0,f,c
 24563  002768  50F4               	movf	244,w,c
 24564  00276A  222B               	addwfc	(btemp+1)^0,f,c
 24565                           
 24566                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24567  00276C  52E5               	movf	postdec1,f,c
 24568  00276E  52E5               	movf	postdec1,f,c
 24569  002770  0012               	return		;funcret
 24570  002772                     __end_of_get_vterm_ptr:
 24571                           	opt callstack 0
 24572                           
 24573 ;; *************** function _WaitMs *****************
 24574 ;; Defined at:
 24575 ;;		line 32 in file "timers.c"
 24576 ;; Parameters:    Size  Location     Type
 24577 ;;  numMilliseco    2  [STACK] const unsigned short 
 24578 ;; Auto vars:     Size  Location     Type
 24579 ;;		None
 24580 ;; Return value:  Size  Location     Type
 24581 ;;                  1  [STACK] void 
 24582 ;; Registers used:
 24583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24584 ;; Tracked objects:
 24585 ;;		On entry : 0/2
 24586 ;;		On exit  : 0/0
 24587 ;;		Unchanged: 0/0
 24588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24593 ;;Total ram usage:        0 bytes
 24594 ;; Hardware stack levels used:    1
 24595 ;; Hardware stack levels required when called:   16
 24596 ;; This function calls:
 24597 ;;		_StartTimer
 24598 ;;		_TimerDone
 24599 ;; This function is called by:
 24600 ;;		_main
 24601 ;;		_current_sensor_cal
 24602 ;;		_display_history
 24603 ;;		_vterm_dump
 24604 ;; This function uses a reentrant model
 24605 ;;
 24606                           
 24607                           	psect	text79
 24608  00254C                     __ptext79:
 24609                           	opt callstack 0
 24610  00254C                     _WaitMs:
 24611                           	opt callstack 13
 24612                           
 24613                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 24614                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 24615                           
 24616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24617                           ;incstack = 0
 24618  00254C  0EFE               	movlw	-2
 24619  00254E  006F FF8F FFE6     	movff	plusw1,postinc1
 24620  002554  006F FF8F FFE6     	movff	plusw1,postinc1
 24621  00255A  0E00               	movlw	0
 24622  00255C  6EE6               	movwf	postinc1,c
 24623  00255E  ECB3  F011         	call	_StartTimer	;wreg free
 24624                           
 24625                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24626  002562  D005               	goto	l12893
 24627  002564                     l1767:
 24628                           
 24629                           ;timers.c: 36:   __nop();
 24630  002564  F000               	nop	
 24631                           
 24632                           ;timers.c: 37:   __nop();
 24633  002566  F000               	nop	
 24634                           
 24635                           ;timers.c: 38:   __nop();
 24636  002568  F000               	nop	
 24637                           
 24638                           ;timers.c: 39:   __nop();
 24639  00256A  F000               	nop	
 24640  00256C  0004               	clrwdt		;# 
 24641  00256E                     l12893:
 24642                           
 24643                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24644  00256E  0E00               	movlw	0
 24645  002570  6EE6               	movwf	postinc1,c
 24646  002572  EC25  F014         	call	_TimerDone	;wreg free
 24647  002576  502A               	movf	btemp^0,w,c
 24648  002578  B4D8               	btfsc	status,2,c
 24649  00257A  D7F4               	goto	l1767
 24650                           
 24651                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24652  00257C  52E5               	movf	postdec1,f,c
 24653  00257E  52E5               	movf	postdec1,f,c
 24654  002580  0012               	return		;funcret
 24655  002582                     __end_of_WaitMs:
 24656                           	opt callstack 0
 24657                           
 24658 ;; *************** function _update_lcd *****************
 24659 ;; Defined at:
 24660 ;;		line 85 in file "mconfig.c"
 24661 ;; Parameters:    Size  Location     Type
 24662 ;;  vterm           1  [STACK] unsigned char 
 24663 ;; Auto vars:     Size  Location     Type
 24664 ;;		None
 24665 ;; Return value:  Size  Location     Type
 24666 ;;                  1  [STACK] unsigned char 
 24667 ;; Registers used:
 24668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24669 ;; Tracked objects:
 24670 ;;		On entry : 0/0
 24671 ;;		On exit  : 0/0
 24672 ;;		Unchanged: 0/0
 24673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24678 ;;Total ram usage:        0 bytes
 24679 ;; Hardware stack levels used:    1
 24680 ;; Hardware stack levels required when called:   26
 24681 ;; This function calls:
 24682 ;;		_eaDogM_WriteStringAtPos
 24683 ;;		_wait_lcd_done
 24684 ;; This function is called by:
 24685 ;;		_main
 24686 ;;		_current_sensor_cal
 24687 ;;		_display_history
 24688 ;;		_check_help
 24689 ;; This function uses a reentrant model
 24690 ;;
 24691                           
 24692                           	psect	text80
 24693  01EF66                     __ptext80:
 24694                           	opt callstack 0
 24695  01EF66                     _update_lcd:
 24696                           	opt callstack 4
 24697                           
 24698                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 24699                           ;stkvar	_vterm @ sp[(0)+-1]
 24700                           
 24701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24702                           ;incstack = 0
 24703  01EF66  0EFF               	movlw	-1
 24704  01EF68  006F FF8C  F02A    	movff	plusw1,btemp
 24705  01EF6E  0E03               	movlw	3
 24706  01EF70  162A               	andwf	btemp^0,f,c
 24707  01EF72  0EFF               	movlw	-1
 24708  01EF74  0060  F0AB  FFE3   	movff	btemp,plusw1
 24709                           
 24710                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 24711  01EF7A  EE23  F0CF         	lfsr	2,_D+640
 24712  01EF7E  A0DF               	btfss	indf2,0,c
 24713  01EF80  D004               	goto	l17299
 24714                           
 24715                           ;stkvar	_vterm @ sp[(0)+-1]
 24716  01EF82  0EFF               	movlw	-1
 24717  01EF84  50E3               	movf	plusw1,w,c
 24718  01EF86  B4D8               	btfsc	status,2,c
 24719  01EF88  D09C               	goto	l1843
 24720  01EF8A                     l17299:
 24721                           
 24722                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 24723                           ;stkvar	_vterm @ sp[(0)+-1]
 24724  01EF8A  0EFF               	movlw	-1
 24725  01EF8C  50E3               	movf	plusw1,w,c
 24726  01EF8E  0DA0               	mullw	160
 24727  01EF90  0E63               	movlw	low (_D+20)
 24728  01EF92  24F3               	addwf	243,w,c
 24729  01EF94  6ED9               	movwf	fsr2l,c
 24730  01EF96  0E0A               	movlw	high (_D+20)
 24731  01EF98  20F4               	addwfc	prodh,w,c
 24732  01EF9A  6EDA               	movwf	fsr2h,c
 24733  01EF9C  0E00               	movlw	0
 24734  01EF9E  6EDF               	movwf	indf2,c
 24735                           
 24736                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 24737                           ;stkvar	_vterm @ sp[(0)+-1]
 24738  01EFA0  0EFF               	movlw	-1
 24739  01EFA2  50E3               	movf	plusw1,w,c
 24740  01EFA4  0DA0               	mullw	160
 24741  01EFA6  0E8B               	movlw	low (_D+60)
 24742  01EFA8  24F3               	addwf	243,w,c
 24743  01EFAA  6ED9               	movwf	fsr2l,c
 24744  01EFAC  0E0A               	movlw	high (_D+60)
 24745  01EFAE  20F4               	addwfc	prodh,w,c
 24746  01EFB0  6EDA               	movwf	fsr2h,c
 24747  01EFB2  0E00               	movlw	0
 24748  01EFB4  6EDF               	movwf	indf2,c
 24749                           
 24750                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 24751                           ;stkvar	_vterm @ sp[(0)+-1]
 24752  01EFB6  0EFF               	movlw	-1
 24753  01EFB8  50E3               	movf	plusw1,w,c
 24754  01EFBA  0DA0               	mullw	160
 24755  01EFBC  0EB3               	movlw	low (_D+100)
 24756  01EFBE  24F3               	addwf	243,w,c
 24757  01EFC0  6ED9               	movwf	fsr2l,c
 24758  01EFC2  0E0A               	movlw	high (_D+100)
 24759  01EFC4  20F4               	addwfc	prodh,w,c
 24760  01EFC6  6EDA               	movwf	fsr2h,c
 24761  01EFC8  0E00               	movlw	0
 24762  01EFCA  6EDF               	movwf	indf2,c
 24763                           
 24764                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 24765                           ;stkvar	_vterm @ sp[(0)+-1]
 24766  01EFCC  0EFF               	movlw	-1
 24767  01EFCE  50E3               	movf	plusw1,w,c
 24768  01EFD0  0DA0               	mullw	160
 24769  01EFD2  0EDB               	movlw	low (_D+140)
 24770  01EFD4  24F3               	addwf	243,w,c
 24771  01EFD6  6ED9               	movwf	fsr2l,c
 24772  01EFD8  0E0A               	movlw	high (_D+140)
 24773  01EFDA  20F4               	addwfc	prodh,w,c
 24774  01EFDC  6EDA               	movwf	fsr2h,c
 24775  01EFDE  0E00               	movlw	0
 24776  01EFE0  6EDF               	movwf	indf2,c
 24777                           
 24778                           ;mconfig.c: 96:  wait_lcd_done();
 24779  01EFE2  ECAA  F015         	call	_wait_lcd_done	;wreg free
 24780                           
 24781                           ; BSR set to: 0
 24782                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 24783                           ;stkvar	_vterm @ sp[(0)+-1]
 24784  01EFE6  0EFF               	movlw	-1
 24785  01EFE8  50E3               	movf	plusw1,w,c
 24786  01EFEA  0DA0               	mullw	160
 24787  01EFEC  0E4F               	movlw	low _D
 24788  01EFEE  6E34               	movwf	(btemp+10)^0,c
 24789  01EFF0  0E0A               	movlw	high _D
 24790  01EFF2  6E35               	movwf	(btemp+11)^0,c
 24791  01EFF4  50F3               	movf	243,w,c
 24792  01EFF6  2634               	addwf	(btemp+10)^0,f,c
 24793  01EFF8  50F4               	movf	244,w,c
 24794  01EFFA  2235               	addwfc	(btemp+11)^0,f,c
 24795  01EFFC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24796  01F002  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24797  01F008  0E00               	movlw	0
 24798  01F00A  6EE6               	movwf	postinc1,c
 24799  01F00C  0E00               	movlw	0
 24800  01F00E  6EE6               	movwf	postinc1,c
 24801  01F010  EC09  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24802                           
 24803                           ; BSR set to: 59
 24804                           ;mconfig.c: 98:  wait_lcd_done();
 24805  01F014  ECAA  F015         	call	_wait_lcd_done	;wreg free
 24806                           
 24807                           ; BSR set to: 0
 24808                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 24809                           ;stkvar	_vterm @ sp[(0)+-1]
 24810  01F018  0EFF               	movlw	-1
 24811  01F01A  50E3               	movf	plusw1,w,c
 24812  01F01C  0DA0               	mullw	160
 24813  01F01E  0E4F               	movlw	low _D
 24814  01F020  6E34               	movwf	(btemp+10)^0,c
 24815  01F022  0E0A               	movlw	high _D
 24816  01F024  6E35               	movwf	(btemp+11)^0,c
 24817  01F026  0E28               	movlw	40
 24818  01F028  2634               	addwf	(btemp+10)^0,f,c
 24819  01F02A  0E00               	movlw	0
 24820  01F02C  2235               	addwfc	(btemp+11)^0,f,c
 24821  01F02E  50F3               	movf	243,w,c
 24822  01F030  2634               	addwf	(btemp+10)^0,f,c
 24823  01F032  50F4               	movf	244,w,c
 24824  01F034  2235               	addwfc	(btemp+11)^0,f,c
 24825  01F036  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24826  01F03C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24827  01F042  0E00               	movlw	0
 24828  01F044  6EE6               	movwf	postinc1,c
 24829  01F046  0E01               	movlw	1
 24830  01F048  6EE6               	movwf	postinc1,c
 24831  01F04A  EC09  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24832                           
 24833                           ; BSR set to: 59
 24834                           ;mconfig.c: 100:  wait_lcd_done();
 24835  01F04E  ECAA  F015         	call	_wait_lcd_done	;wreg free
 24836                           
 24837                           ; BSR set to: 0
 24838                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 24839                           ;stkvar	_vterm @ sp[(0)+-1]
 24840  01F052  0EFF               	movlw	-1
 24841  01F054  50E3               	movf	plusw1,w,c
 24842  01F056  0DA0               	mullw	160
 24843  01F058  0E4F               	movlw	low _D
 24844  01F05A  6E34               	movwf	(btemp+10)^0,c
 24845  01F05C  0E0A               	movlw	high _D
 24846  01F05E  6E35               	movwf	(btemp+11)^0,c
 24847  01F060  0E50               	movlw	80
 24848  01F062  2634               	addwf	(btemp+10)^0,f,c
 24849  01F064  0E00               	movlw	0
 24850  01F066  2235               	addwfc	(btemp+11)^0,f,c
 24851  01F068  50F3               	movf	243,w,c
 24852  01F06A  2634               	addwf	(btemp+10)^0,f,c
 24853  01F06C  50F4               	movf	244,w,c
 24854  01F06E  2235               	addwfc	(btemp+11)^0,f,c
 24855  01F070  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24856  01F076  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24857  01F07C  0E00               	movlw	0
 24858  01F07E  6EE6               	movwf	postinc1,c
 24859  01F080  0E02               	movlw	2
 24860  01F082  6EE6               	movwf	postinc1,c
 24861  01F084  EC09  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24862                           
 24863                           ; BSR set to: 59
 24864                           ;mconfig.c: 102:  wait_lcd_done();
 24865  01F088  ECAA  F015         	call	_wait_lcd_done	;wreg free
 24866                           
 24867                           ; BSR set to: 0
 24868                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 24869                           ;stkvar	_vterm @ sp[(0)+-1]
 24870  01F08C  0EFF               	movlw	-1
 24871  01F08E  50E3               	movf	plusw1,w,c
 24872  01F090  0DA0               	mullw	160
 24873  01F092  0E4F               	movlw	low _D
 24874  01F094  6E34               	movwf	(btemp+10)^0,c
 24875  01F096  0E0A               	movlw	high _D
 24876  01F098  6E35               	movwf	(btemp+11)^0,c
 24877  01F09A  0E78               	movlw	120
 24878  01F09C  2634               	addwf	(btemp+10)^0,f,c
 24879  01F09E  0E00               	movlw	0
 24880  01F0A0  2235               	addwfc	(btemp+11)^0,f,c
 24881  01F0A2  50F3               	movf	243,w,c
 24882  01F0A4  2634               	addwf	(btemp+10)^0,f,c
 24883  01F0A6  50F4               	movf	244,w,c
 24884  01F0A8  2235               	addwfc	(btemp+11)^0,f,c
 24885  01F0AA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24886  01F0B0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24887  01F0B6  0E00               	movlw	0
 24888  01F0B8  6EE6               	movwf	postinc1,c
 24889  01F0BA  0E03               	movlw	3
 24890  01F0BC  6EE6               	movwf	postinc1,c
 24891  01F0BE  EC09  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24892  01F0C2                     l1843:
 24893                           
 24894                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24895  01F0C2  52E5               	movf	postdec1,f,c
 24896  01F0C4  0012               	return		;funcret
 24897  01F0C6                     __end_of_update_lcd:
 24898                           	opt callstack 0
 24899                           
 24900 ;; *************** function _eaDogM_WriteStringAtPos *****************
 24901 ;; Defined at:
 24902 ;;		line 195 in file "eadog.c"
 24903 ;; Parameters:    Size  Location     Type
 24904 ;;  r               1  [STACK] const unsigned char 
 24905 ;;  c               1  [STACK] const unsigned char 
 24906 ;;  strPtr          2  [STACK] PTR unsigned char 
 24907 ;;		 -> D.lcd(640), D(642), V(181), 
 24908 ;; Auto vars:     Size  Location     Type
 24909 ;;  row             1  [STACK] unsigned char 
 24910 ;; Return value:  Size  Location     Type
 24911 ;;                  1  [STACK] void 
 24912 ;; Registers used:
 24913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24914 ;; Tracked objects:
 24915 ;;		On entry : 3F/0
 24916 ;;		On exit  : 3F/3B
 24917 ;;		Unchanged: 0/0
 24918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24923 ;;Total ram usage:        0 bytes
 24924 ;; Hardware stack levels used:    1
 24925 ;; Hardware stack levels required when called:   25
 24926 ;; This function calls:
 24927 ;;		_eaDogM_WriteString
 24928 ;;		_send_lcd_cmd_dma
 24929 ;;		_send_lcd_data_dma
 24930 ;;		_wait_lcd_done
 24931 ;; This function is called by:
 24932 ;;		_update_lcd
 24933 ;;		_vterm_dump
 24934 ;; This function uses a reentrant model
 24935 ;;
 24936                           
 24937                           	psect	text81
 24938  001212                     __ptext81:
 24939                           	opt callstack 0
 24940  001212                     _eaDogM_WriteStringAtPos:
 24941                           	opt callstack 0
 24942                           
 24943                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24944  001212  52E6               	movf	postinc1,f,c
 24945                           
 24946                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 24947                           
 24948                           ;incstack = 0
 24949  001214  D013               	goto	l17245
 24950  001216                     l17233:
 24951                           
 24952                           ;eadog.c: 201:   row = 0x40;
 24953                           ;stkvar	_row @ sp[(-1)+0]
 24954  001216  0EFF               	movlw	-1
 24955  001218  6AE3               	clrf	plusw1,c
 24956  00121A  8CE3               	bsf	plusw1,6,c
 24957                           
 24958                           ;eadog.c: 202:   break;
 24959  00121C  D025               	goto	l17247
 24960  00121E                     l17235:
 24961                           
 24962                           ;eadog.c: 204:   row = 0x14;
 24963                           ;stkvar	_row @ sp[(-1)+0]
 24964  00121E  0EFF               	movlw	-1
 24965  001220  6AE3               	clrf	plusw1,c
 24966  001222  84E3               	bsf	plusw1,2,c
 24967  001224  88E3               	bsf	plusw1,4,c	;indir
 24968                           
 24969                           ;eadog.c: 205:   break;
 24970  001226  D020               	goto	l17247
 24971  001228                     l17237:
 24972                           
 24973                           ;eadog.c: 207:   row = 0x54;
 24974  001228  0E54               	movlw	84
 24975  00122A  6E35               	movwf	(btemp+11)^0,c
 24976                           
 24977                           ;stkvar	_row @ sp[(-1)+0]
 24978  00122C  0EFF               	movlw	-1
 24979  00122E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24980                           
 24981                           ;eadog.c: 208:   break;
 24982  001234  D019               	goto	l17247
 24983  001236                     l17239:
 24984                           
 24985                           ;eadog.c: 210:   row = 0x00;
 24986                           ;stkvar	_row @ sp[(-1)+0]
 24987  001236  0EFF               	movlw	-1
 24988  001238  6AE3               	clrf	plusw1,c
 24989                           
 24990                           ;eadog.c: 211:   break;
 24991  00123A  D016               	goto	l17247
 24992  00123C                     l17245:
 24993                           
 24994                           ;stkvar	_r @ sp[(-1)+-1]
 24995  00123C  0EFE               	movlw	-2
 24996  00123E  50E3               	movf	plusw1,w,c
 24997  001240  6E34               	movwf	(btemp+10)^0,c
 24998  001242  6A35               	clrf	(btemp+11)^0,c
 24999                           
 25000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25001                           ; Switch size 1, requested type "simple"
 25002                           ; Number of cases is 1, Range of values is 0 to 0
 25003                           ; switch strategies available:
 25004                           ; Name         Instructions Cycles
 25005                           ; simple_byte            4     3 (average)
 25006                           ;	Chosen strategy is simple_byte
 25007  001244  5035               	movf	(btemp+11)^0,w,c
 25008  001246  0A00               	xorlw	0	; case 0
 25009  001248  A4D8               	btfss	status,2,c
 25010  00124A  D7E5               	goto	l17233
 25011                           
 25012                           ; Switch size 1, requested type "simple"
 25013                           ; Number of cases is 4, Range of values is 0 to 3
 25014                           ; switch strategies available:
 25015                           ; Name         Instructions Cycles
 25016                           ; simple_byte           13     7 (average)
 25017                           ;	Chosen strategy is simple_byte
 25018  00124C  5034               	movf	(btemp+10)^0,w,c
 25019  00124E  0A00               	xorlw	0	; case 0
 25020  001250  B4D8               	btfsc	status,2,c
 25021  001252  D7E1               	goto	l17233
 25022  001254  0A01               	xorlw	1	; case 1
 25023  001256  B4D8               	btfsc	status,2,c
 25024  001258  D7E2               	goto	l17235
 25025  00125A  0A03               	xorlw	3	; case 2
 25026  00125C  B4D8               	btfsc	status,2,c
 25027  00125E  D7E4               	goto	l17237
 25028  001260  0A01               	xorlw	1	; case 3
 25029  001262  B4D8               	btfsc	status,2,c
 25030  001264  D7E8               	goto	l17239
 25031  001266  D7D7               	goto	l17233
 25032  001268                     l17247:
 25033                           
 25034                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 25035  001268  0E45               	movlw	69
 25036  00126A  6EE6               	movwf	postinc1,c
 25037  00126C  EC1D  F016         	call	_send_lcd_cmd_dma	;wreg free
 25038                           
 25039                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 25040                           ;stkvar	_c @ sp[(-1)+-2]
 25041  001270  0EFD               	movlw	-3
 25042  001272  006F FF8C  F035    	movff	plusw1,btemp+11
 25043                           
 25044                           ;stkvar	_row @ sp[(-1)+0]
 25045  001278  0EFF               	movlw	-1
 25046  00127A  50E3               	movf	plusw1,w,c
 25047  00127C  2435               	addwf	(btemp+11)^0,w,c
 25048  00127E  6EE6               	movwf	postinc1,c
 25049  001280  ECC7  F010         	call	_send_lcd_data_dma	;wreg free
 25050                           
 25051                           ; BSR set to: 59
 25052                           ;eadog.c: 218:  wait_lcd_done();
 25053  001284  ECAA  F015         	call	_wait_lcd_done	;wreg free
 25054                           
 25055                           ; BSR set to: 0
 25056                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 25057                           ;stkvar	_strPtr @ sp[(-1)+-4]
 25058  001288  0EFB               	movlw	-5
 25059  00128A  006F FF8F FFE6     	movff	plusw1,postinc1
 25060  001290  006F FF8F FFE6     	movff	plusw1,postinc1
 25061  001296  EC83  F007         	call	_eaDogM_WriteString	;wreg free
 25062                           
 25063                           ; BSR set to: 59
 25064                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 25065  00129A  0EFB               	movlw	251
 25066  00129C  26E1               	addwf	fsr1l,f,c
 25067  00129E  0EFF               	movlw	255
 25068  0012A0  22E2               	addwfc	fsr1h,f,c
 25069  0012A2  0012               	return		;funcret
 25070  0012A4                     __end_of_eaDogM_WriteStringAtPos:
 25071                           	opt callstack 0
 25072                           
 25073 ;; *************** function _send_lcd_cmd_dma *****************
 25074 ;; Defined at:
 25075 ;;		line 171 in file "eadog.c"
 25076 ;; Parameters:    Size  Location     Type
 25077 ;;  strPtr          1  [STACK] const unsigned char 
 25078 ;; Auto vars:     Size  Location     Type
 25079 ;;		None
 25080 ;; Return value:  Size  Location     Type
 25081 ;;                  1  [STACK] void 
 25082 ;; Registers used:
 25083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25084 ;; Tracked objects:
 25085 ;;		On entry : 0/3D
 25086 ;;		On exit  : 3F/0
 25087 ;;		Unchanged: 0/0
 25088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25093 ;;Total ram usage:        0 bytes
 25094 ;; Hardware stack levels used:    1
 25095 ;; Hardware stack levels required when called:   18
 25096 ;; This function calls:
 25097 ;;		_send_lcd_data_dma
 25098 ;;		_wait_lcd_done
 25099 ;; This function is called by:
 25100 ;;		_eaDogM_WriteStringAtPos
 25101 ;;		_eaDogM_WriteCommand
 25102 ;; This function uses a reentrant model
 25103 ;;
 25104                           
 25105                           	psect	text82
 25106  002C3A                     __ptext82:
 25107                           	opt callstack 0
 25108  002C3A                     _send_lcd_cmd_dma:
 25109                           	opt callstack 10
 25110                           
 25111                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 25112                           
 25113                           ; BSR set to: 59
 25114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25115                           ;incstack = 0
 25116  002C3A  0EFE               	movlw	254
 25117  002C3C  6EE6               	movwf	postinc1,c
 25118  002C3E  ECC7  F010         	call	_send_lcd_data_dma	;wreg free
 25119                           
 25120                           ; BSR set to: 59
 25121                           ;eadog.c: 174:  wait_lcd_done();
 25122  002C42  ECAA  F015         	call	_wait_lcd_done	;wreg free
 25123                           
 25124                           ; BSR set to: 0
 25125                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 25126                           ;stkvar	_strPtr @ sp[(0)+-1]
 25127  002C46  0EFF               	movlw	-1
 25128  002C48  50E3               	movf	plusw1,w,c
 25129  002C4A  6EE6               	movwf	postinc1,c
 25130  002C4C  ECC7  F010         	call	_send_lcd_data_dma	;wreg free
 25131                           
 25132                           ;eadog.c: 176:  wait_lcd_done();
 25133  002C50  ECAA  F015         	call	_wait_lcd_done	;wreg free
 25134                           
 25135                           ; BSR set to: 0
 25136                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25137  002C54  52E5               	movf	postdec1,f,c
 25138  002C56  0012               	return		;funcret
 25139  002C58                     __end_of_send_lcd_cmd_dma:
 25140                           	opt callstack 0
 25141                           
 25142 ;; *************** function _wait_lcd_done *****************
 25143 ;; Defined at:
 25144 ;;		line 443 in file "eadog.c"
 25145 ;; Parameters:    Size  Location     Type
 25146 ;;		None
 25147 ;; Auto vars:     Size  Location     Type
 25148 ;;		None
 25149 ;; Return value:  Size  Location     Type
 25150 ;;                  1  [STACK] void 
 25151 ;; Registers used:
 25152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 25153 ;; Tracked objects:
 25154 ;;		On entry : 0/2
 25155 ;;		On exit  : 3F/0
 25156 ;;		Unchanged: 0/0
 25157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25162 ;;Total ram usage:        0 bytes
 25163 ;; Hardware stack levels used:    1
 25164 ;; Hardware stack levels required when called:   16
 25165 ;; This function calls:
 25166 ;;		_wdtdelay
 25167 ;; This function is called by:
 25168 ;;		_main
 25169 ;;		_send_lcd_cmd_dma
 25170 ;;		_eaDogM_WriteStringAtPos
 25171 ;;		_update_lcd
 25172 ;;		_vterm_dump
 25173 ;; This function uses a reentrant model
 25174 ;;
 25175                           
 25176                           	psect	text83
 25177  002B54                     __ptext83:
 25178                           	opt callstack 0
 25179  002B54                     _wait_lcd_done:
 25180                           	opt callstack 14
 25181                           
 25182                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 25183                           
 25184                           ; BSR set to: 0
 25185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25186                           ;incstack = 0
 25187  002B54  0100               	movlb	0	; () banked
 25188  002B56  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 25189  002B58  D7FD               	goto	_wait_lcd_done
 25190  002B5A                     u10930:
 25191  002B5A  013D               	movlb	61	; () banked
 25192  002B5C  AB17               	btfss	23,5,b	;volatile
 25193  002B5E  D7FD               	goto	u10930
 25194                           
 25195                           ; BSR set to: 61
 25196                           ;eadog.c: 447:  wdtdelay(50);
 25197  002B60  0E32               	movlw	50
 25198  002B62  6EE6               	movwf	postinc1,c
 25199  002B64  0E00               	movlw	0
 25200  002B66  6EE6               	movwf	postinc1,c
 25201  002B68  0E00               	movlw	0
 25202  002B6A  6EE6               	movwf	postinc1,c
 25203  002B6C  0E00               	movlw	0
 25204  002B6E  6EE6               	movwf	postinc1,c
 25205  002B70  ECEB  F00E         	call	_wdtdelay	;wreg free
 25206                           
 25207                           ; BSR set to: 0
 25208                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 25209  002B74  0012               	return		;funcret
 25210  002B76                     __end_of_wait_lcd_done:
 25211                           	opt callstack 0
 25212                           
 25213 ;; *************** function _wdtdelay *****************
 25214 ;; Defined at:
 25215 ;;		line 23 in file "eadog.c"
 25216 ;; Parameters:    Size  Location     Type
 25217 ;;  delay           4  [STACK] const unsigned long 
 25218 ;; Auto vars:     Size  Location     Type
 25219 ;;		None
 25220 ;; Return value:  Size  Location     Type
 25221 ;;                  1  [STACK] void 
 25222 ;; Registers used:
 25223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 25224 ;; Tracked objects:
 25225 ;;		On entry : 2/3D
 25226 ;;		On exit  : 3F/0
 25227 ;;		Unchanged: 0/0
 25228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25233 ;;Total ram usage:        0 bytes
 25234 ;; Hardware stack levels used:    1
 25235 ;; Hardware stack levels required when called:   15
 25236 ;; This function calls:
 25237 ;;		Nothing
 25238 ;; This function is called by:
 25239 ;;		_init_display
 25240 ;;		_send_lcd_data
 25241 ;;		_send_lcd_cmd
 25242 ;;		_send_lcd_cmd_long
 25243 ;;		_wait_lcd_done
 25244 ;; This function uses a reentrant model
 25245 ;;
 25246                           
 25247                           	psect	text84
 25248  001DD6                     __ptext84:
 25249                           	opt callstack 0
 25250  001DD6                     _wdtdelay:
 25251                           	opt callstack 14
 25252                           
 25253                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 25254                           
 25255                           ; BSR set to: 0
 25256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25257                           ;incstack = 0
 25258  001DD6  0100               	movlb	0	; () banked
 25259  001DD8  6B90               	clrf	wdtdelay@dcount& (0+255),b
 25260  001DDA  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 25261  001DDC  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 25262  001DDE  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 25263  001DE0                     l1620:
 25264                           
 25265                           ; BSR set to: 0
 25266                           ;eadog.c: 28:   __nop();
 25267  001DE0  F000               	nop	
 25268  001DE2  0004               	clrwdt		;# 
 25269                           
 25270                           ;eadog.c: 30:  };
 25271  001DE4  0E01               	movlw	1
 25272  001DE6  0100               	movlb	0	; () banked
 25273  001DE8  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 25274  001DEA  0E00               	movlw	0
 25275  001DEC  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 25276  001DEE  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 25277  001DF0  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 25278                           
 25279                           ; BSR set to: 0
 25280                           ;stkvar	_delay @ sp[(0)+-4]
 25281  001DF2  0EFC               	movlw	-4
 25282  001DF4  006F FF8C  F02A    	movff	plusw1,btemp
 25283  001DFA  5190               	movf	wdtdelay@dcount& (0+255),w,b
 25284  001DFC  5C2A               	subwf	btemp^0,w,c
 25285  001DFE  0EFD               	movlw	-3
 25286  001E00  006F FF8C  F02A    	movff	plusw1,btemp
 25287  001E06  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 25288  001E08  582A               	subwfb	btemp^0,w,c
 25289  001E0A  0EFE               	movlw	-2
 25290  001E0C  006F FF8C  F02A    	movff	plusw1,btemp
 25291  001E12  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 25292  001E14  582A               	subwfb	btemp^0,w,c
 25293  001E16  0EFF               	movlw	-1
 25294  001E18  006F FF8C  F02A    	movff	plusw1,btemp
 25295  001E1E  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 25296  001E20  582A               	subwfb	btemp^0,w,c
 25297  001E22  B0D8               	btfsc	status,0,c
 25298  001E24  D7DD               	goto	l1620
 25299                           
 25300                           ; BSR set to: 0
 25301                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 25302  001E26  52E5               	movf	postdec1,f,c
 25303  001E28  52E5               	movf	postdec1,f,c
 25304  001E2A  52E5               	movf	postdec1,f,c
 25305  001E2C  52E5               	movf	postdec1,f,c
 25306  001E2E  0012               	return		;funcret
 25307  001E30                     __end_of_wdtdelay:
 25308                           	opt callstack 0
 25309                           
 25310 ;; *************** function _send_lcd_data_dma *****************
 25311 ;; Defined at:
 25312 ;;		line 182 in file "eadog.c"
 25313 ;; Parameters:    Size  Location     Type
 25314 ;;  strPtr          1  [STACK] const unsigned char 
 25315 ;; Auto vars:     Size  Location     Type
 25316 ;;		None
 25317 ;; Return value:  Size  Location     Type
 25318 ;;                  1  [STACK] void 
 25319 ;; Registers used:
 25320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25321 ;; Tracked objects:
 25322 ;;		On entry : 0/0
 25323 ;;		On exit  : 3F/3B
 25324 ;;		Unchanged: 0/0
 25325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25330 ;;Total ram usage:        0 bytes
 25331 ;; Hardware stack levels used:    1
 25332 ;; Hardware stack levels required when called:   17
 25333 ;; This function calls:
 25334 ;;		_ringBufS_flush
 25335 ;;		_ringBufS_put_dma
 25336 ;;		_start_lcd
 25337 ;;		_wait_lcd_set
 25338 ;; This function is called by:
 25339 ;;		_send_lcd_cmd_dma
 25340 ;;		_eaDogM_WriteStringAtPos
 25341 ;; This function uses a reentrant model
 25342 ;;
 25343                           
 25344                           	psect	text85
 25345  00218E                     __ptext85:
 25346                           	opt callstack 0
 25347  00218E                     _send_lcd_data_dma:
 25348                           	opt callstack 11
 25349                           
 25350                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 25351                           
 25352                           ; BSR set to: 0
 25353                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25354                           ;incstack = 0
 25355  00218E  EC47  F017         	call	_wait_lcd_set	;wreg free
 25356                           
 25357                           ; BSR set to: 0
 25358                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 25359  002192  0E00               	movlw	0
 25360  002194  6EE6               	movwf	postinc1,c
 25361  002196  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25362  00219C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25363  0021A2  EC52  F009         	call	_ringBufS_flush	;wreg free
 25364  0021A6  94BC               	bcf	188,2,c	;volatile
 25365                           
 25366                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 25367  0021A8  013B               	movlb	59	; () banked
 25368  0021AA  9FFC               	bcf	252,7,b	;volatile
 25369                           
 25370                           ; BSR set to: 59
 25371                           ;eadog.c: 189:  DMA1SSZ = 1;
 25372  0021AC  0E00               	movlw	0
 25373  0021AE  6FF8               	movwf	248,b	;volatile
 25374  0021B0  0E01               	movlw	1
 25375  0021B2  6FF7               	movwf	247,b	;volatile
 25376                           
 25377                           ; BSR set to: 59
 25378                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 25379  0021B4  8FFC               	bsf	252,7,b	;volatile
 25380                           
 25381                           ; BSR set to: 59
 25382                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 25383                           ;stkvar	_strPtr @ sp[(0)+-1]
 25384  0021B6  0EFF               	movlw	-1
 25385  0021B8  50E3               	movf	plusw1,w,c
 25386  0021BA  6EE6               	movwf	postinc1,c
 25387  0021BC  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25388  0021C2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25389  0021C8  EC2E  F007         	call	_ringBufS_put_dma	;wreg free
 25390                           
 25391                           ;eadog.c: 192:  start_lcd();
 25392  0021CC  EC4A  F017         	call	_start_lcd	;wreg free
 25393                           
 25394                           ; BSR set to: 59
 25395                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 25396  0021D0  52E5               	movf	postdec1,f,c
 25397  0021D2  0012               	return		;funcret
 25398  0021D4                     __end_of_send_lcd_data_dma:
 25399                           	opt callstack 0
 25400                           
 25401 ;; *************** function _eaDogM_WriteString *****************
 25402 ;; Defined at:
 25403 ;;		line 151 in file "eadog.c"
 25404 ;; Parameters:    Size  Location     Type
 25405 ;;  strPtr          2  [STACK] PTR unsigned char 
 25406 ;;		 -> D.lcd(640), D(642), V(181), 
 25407 ;; Auto vars:     Size  Location     Type
 25408 ;;		None
 25409 ;; Return value:  Size  Location     Type
 25410 ;;                  1  [STACK] void 
 25411 ;; Registers used:
 25412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25413 ;; Tracked objects:
 25414 ;;		On entry : 3F/0
 25415 ;;		On exit  : 3F/3B
 25416 ;;		Unchanged: 0/0
 25417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25422 ;;Total ram usage:        0 bytes
 25423 ;; Hardware stack levels used:    1
 25424 ;; Hardware stack levels required when called:   24
 25425 ;; This function calls:
 25426 ;;		_printf
 25427 ;;		_ringBufS_flush
 25428 ;;		_start_lcd
 25429 ;;		_strlen
 25430 ;;		_wait_lcd_set
 25431 ;; This function is called by:
 25432 ;;		_eaDogM_WriteStringAtPos
 25433 ;; This function uses a reentrant model
 25434 ;;
 25435                           
 25436                           	psect	text86
 25437  000F06                     __ptext86:
 25438                           	opt callstack 0
 25439  000F06                     _eaDogM_WriteString:
 25440                           	opt callstack 4
 25441                           
 25442                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 25443                           
 25444                           ; BSR set to: 59
 25445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25446                           ;incstack = 0
 25447  000F06  EC47  F017         	call	_wait_lcd_set	;wreg free
 25448                           
 25449                           ; BSR set to: 0
 25450                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 25451  000F0A  0E00               	movlw	0
 25452  000F0C  6EE6               	movwf	postinc1,c
 25453  000F0E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25454  000F14  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25455  000F1A  EC52  F009         	call	_ringBufS_flush	;wreg free
 25456  000F1E  94BC               	bcf	188,2,c	;volatile
 25457                           
 25458                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 25459                           ;stkvar	_strPtr @ sp[(0)+-2]
 25460  000F20  0EFE               	movlw	-2
 25461  000F22  006F FF8F FFE6     	movff	plusw1,postinc1
 25462  000F28  006F FF8F FFE6     	movff	plusw1,postinc1
 25463  000F2E  ECD6  F007         	call	_strlen	;wreg free
 25464  000F32  502B               	movf	(btemp+1)^0,w,c
 25465  000F34  E104               	bnz	u16780
 25466  000F36  0E41               	movlw	65
 25467  000F38  5C2A               	subwf	btemp^0,w,c
 25468  000F3A  A0D8               	btfss	status,0,c
 25469  000F3C  D010               	goto	l16995
 25470  000F3E                     u16780:
 25471                           
 25472                           ;stkvar	_strPtr @ sp[(0)+-2]
 25473  000F3E  0EFE               	movlw	-2
 25474  000F40  006F FF8C  F034    	movff	plusw1,btemp+10
 25475  000F46  0EFF               	movlw	-1
 25476  000F48  006F FF8C  F035    	movff	plusw1,btemp+11
 25477  000F4E  0E40               	movlw	64
 25478  000F50  2434               	addwf	(btemp+10)^0,w,c
 25479  000F52  6ED9               	movwf	fsr2l,c
 25480  000F54  0E00               	movlw	0
 25481  000F56  2035               	addwfc	(btemp+11)^0,w,c
 25482  000F58  6EDA               	movwf	fsr2h,c
 25483  000F5A  0E00               	movlw	0
 25484  000F5C  6EDF               	movwf	indf2,c
 25485  000F5E                     l16995:
 25486                           
 25487                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 25488  000F5E  013B               	movlb	59	; () banked
 25489  000F60  9FFC               	bcf	252,7,b	;volatile
 25490                           
 25491                           ; BSR set to: 59
 25492                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 25493                           ;stkvar	_strPtr @ sp[(0)+-2]
 25494  000F62  0EFE               	movlw	-2
 25495  000F64  006F FF8F FFE6     	movff	plusw1,postinc1
 25496  000F6A  006F FF8F FFE6     	movff	plusw1,postinc1
 25497  000F70  ECD6  F007         	call	_strlen	;wreg free
 25498  000F74  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 25499  000F7A  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 25500                           
 25501                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 25502  000F80  013B               	movlb	59	; () banked
 25503  000F82  8FFC               	bsf	252,7,b	;volatile
 25504                           
 25505                           ; BSR set to: 59
 25506                           ;eadog.c: 161:  printf("%s", strPtr);
 25507                           ;stkvar	_strPtr @ sp[(0)+-2]
 25508  000F84  0EFE               	movlw	-2
 25509  000F86  006F FF8F FFE6     	movff	plusw1,postinc1
 25510  000F8C  006F FF8F FFE6     	movff	plusw1,postinc1
 25511  000F92  0EFC               	movlw	low STR_82
 25512  000F94  6EE6               	movwf	postinc1,c
 25513  000F96  0EFF               	movlw	high STR_82
 25514  000F98  6EE6               	movwf	postinc1,c
 25515  000F9A  0E04               	movlw	4
 25516  000F9C  6EE6               	movwf	postinc1,c
 25517  000F9E  ECFD  F00D         	call	_printf	;wreg free
 25518                           
 25519                           ; BSR set to: 0
 25520                           ;eadog.c: 162:  start_lcd();
 25521  000FA2  EC4A  F017         	call	_start_lcd	;wreg free
 25522                           
 25523                           ; BSR set to: 59
 25524                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25525  000FA6  52E5               	movf	postdec1,f,c
 25526  000FA8  52E5               	movf	postdec1,f,c
 25527  000FAA  0012               	return		;funcret
 25528  000FAC                     __end_of_eaDogM_WriteString:
 25529                           	opt callstack 0
 25530                           
 25531 ;; *************** function _wait_lcd_set *****************
 25532 ;; Defined at:
 25533 ;;		line 433 in file "eadog.c"
 25534 ;; Parameters:    Size  Location     Type
 25535 ;;		None
 25536 ;; Auto vars:     Size  Location     Type
 25537 ;;		None
 25538 ;; Return value:  Size  Location     Type
 25539 ;;                  1  [STACK] void 
 25540 ;; Registers used:
 25541 ;;		None
 25542 ;; Tracked objects:
 25543 ;;		On entry : 0/0
 25544 ;;		On exit  : 3F/0
 25545 ;;		Unchanged: 0/0
 25546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25551 ;;Total ram usage:        0 bytes
 25552 ;; Hardware stack levels used:    1
 25553 ;; Hardware stack levels required when called:   15
 25554 ;; This function calls:
 25555 ;;		Nothing
 25556 ;; This function is called by:
 25557 ;;		_eaDogM_WriteString
 25558 ;;		_send_lcd_data_dma
 25559 ;; This function uses a reentrant model
 25560 ;;
 25561                           
 25562                           	psect	text87
 25563  002E8E                     __ptext87:
 25564                           	opt callstack 0
 25565  002E8E                     _wait_lcd_set:
 25566                           	opt callstack 12
 25567                           
 25568                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 25569                           
 25570                           ; BSR set to: 59
 25571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25572                           ;incstack = 0
 25573  002E8E  0100               	movlb	0	; () banked
 25574  002E90  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 25575                           
 25576                           ; BSR set to: 0
 25577                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25578  002E92  0012               	return		;funcret
 25579  002E94                     __end_of_wait_lcd_set:
 25580                           	opt callstack 0
 25581                           
 25582 ;; *************** function _start_lcd *****************
 25583 ;; Defined at:
 25584 ;;		line 428 in file "eadog.c"
 25585 ;; Parameters:    Size  Location     Type
 25586 ;;		None
 25587 ;; Auto vars:     Size  Location     Type
 25588 ;;		None
 25589 ;; Return value:  Size  Location     Type
 25590 ;;                  1  [STACK] void 
 25591 ;; Registers used:
 25592 ;;		None
 25593 ;; Tracked objects:
 25594 ;;		On entry : 0/3B
 25595 ;;		On exit  : 3F/3B
 25596 ;;		Unchanged: 0/0
 25597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25602 ;;Total ram usage:        0 bytes
 25603 ;; Hardware stack levels used:    1
 25604 ;; Hardware stack levels required when called:   15
 25605 ;; This function calls:
 25606 ;;		Nothing
 25607 ;; This function is called by:
 25608 ;;		_eaDogM_WriteString
 25609 ;;		_send_lcd_data_dma
 25610 ;; This function uses a reentrant model
 25611 ;;
 25612                           
 25613                           	psect	text88
 25614  002E94                     __ptext88:
 25615                           	opt callstack 0
 25616  002E94                     _start_lcd:
 25617                           	opt callstack 12
 25618                           
 25619                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 25620                           
 25621                           ; BSR set to: 0
 25622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25623                           ;incstack = 0
 25624  002E94  013B               	movlb	59	; () banked
 25625  002E96  8DFC               	bsf	252,6,b	;volatile
 25626                           
 25627                           ; BSR set to: 59
 25628                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25629  002E98  0012               	return		;funcret
 25630  002E9A                     __end_of_start_lcd:
 25631                           	opt callstack 0
 25632                           
 25633 ;; *************** function _ringBufS_flush *****************
 25634 ;; Defined at:
 25635 ;;		line 76 in file "ringbufs.c"
 25636 ;; Parameters:    Size  Location     Type
 25637 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25638 ;;		 -> ring_buf1(67), 
 25639 ;;  clearBuffer     1  [STACK] const char 
 25640 ;; Auto vars:     Size  Location     Type
 25641 ;;		None
 25642 ;; Return value:  Size  Location     Type
 25643 ;;                  1  [STACK] void 
 25644 ;; Registers used:
 25645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25646 ;; Tracked objects:
 25647 ;;		On entry : 3F/0
 25648 ;;		On exit  : 0/0
 25649 ;;		Unchanged: 0/0
 25650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25655 ;;Total ram usage:        0 bytes
 25656 ;; Hardware stack levels used:    1
 25657 ;; Hardware stack levels required when called:   16
 25658 ;; This function calls:
 25659 ;;		_memset
 25660 ;; This function is called by:
 25661 ;;		_eaDogM_WriteString
 25662 ;;		_send_lcd_data_dma
 25663 ;; This function uses a reentrant model
 25664 ;;
 25665                           
 25666                           	psect	text89
 25667  0012A4                     __ptext89:
 25668                           	opt callstack 0
 25669  0012A4                     _ringBufS_flush:
 25670                           	opt callstack 11
 25671                           
 25672                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 25673                           ;stkvar	__this @ sp[(0)+-2]
 25674                           
 25675                           ; BSR set to: 59
 25676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25677                           ;incstack = 0
 25678  0012A4  0EFE               	movlw	-2
 25679  0012A6  006F FF8C  F034    	movff	plusw1,btemp+10
 25680  0012AC  0EFF               	movlw	-1
 25681  0012AE  006F FF8C  F035    	movff	plusw1,btemp+11
 25682  0012B4  0E42               	movlw	66
 25683  0012B6  2434               	addwf	(btemp+10)^0,w,c
 25684  0012B8  6ED9               	movwf	fsr2l,c
 25685  0012BA  0E00               	movlw	0
 25686  0012BC  2035               	addwfc	(btemp+11)^0,w,c
 25687  0012BE  6EDA               	movwf	fsr2h,c
 25688  0012C0  0E00               	movlw	0
 25689  0012C2  6EDF               	movwf	indf2,c
 25690                           
 25691                           ;ringbufs.c: 79:  _this->head = 0;
 25692                           ;stkvar	__this @ sp[(0)+-2]
 25693  0012C4  0EFE               	movlw	-2
 25694  0012C6  006F FF8C  F034    	movff	plusw1,btemp+10
 25695  0012CC  0EFF               	movlw	-1
 25696  0012CE  006F FF8C  F035    	movff	plusw1,btemp+11
 25697  0012D4  0E40               	movlw	64
 25698  0012D6  2434               	addwf	(btemp+10)^0,w,c
 25699  0012D8  6ED9               	movwf	fsr2l,c
 25700  0012DA  0E00               	movlw	0
 25701  0012DC  2035               	addwfc	(btemp+11)^0,w,c
 25702  0012DE  6EDA               	movwf	fsr2h,c
 25703  0012E0  0E00               	movlw	0
 25704  0012E2  6EDF               	movwf	indf2,c
 25705                           
 25706                           ;ringbufs.c: 80:  _this->tail = 0;
 25707                           ;stkvar	__this @ sp[(0)+-2]
 25708  0012E4  0EFE               	movlw	-2
 25709  0012E6  006F FF8C  F034    	movff	plusw1,btemp+10
 25710  0012EC  0EFF               	movlw	-1
 25711  0012EE  006F FF8C  F035    	movff	plusw1,btemp+11
 25712  0012F4  0E41               	movlw	65
 25713  0012F6  2434               	addwf	(btemp+10)^0,w,c
 25714  0012F8  6ED9               	movwf	fsr2l,c
 25715  0012FA  0E00               	movlw	0
 25716  0012FC  2035               	addwfc	(btemp+11)^0,w,c
 25717  0012FE  6EDA               	movwf	fsr2h,c
 25718  001300  0E00               	movlw	0
 25719  001302  6EDF               	movwf	indf2,c
 25720                           
 25721                           ;ringbufs.c: 81:  if (clearBuffer) {
 25722                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 25723  001304  0EFD               	movlw	-3
 25724  001306  50E3               	movf	plusw1,w,c
 25725  001308  B4D8               	btfsc	status,2,c
 25726  00130A  D011               	goto	l1752
 25727                           
 25728                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 25729  00130C  0E40               	movlw	64
 25730  00130E  6EE6               	movwf	postinc1,c
 25731  001310  0E00               	movlw	0
 25732  001312  6EE6               	movwf	postinc1,c
 25733  001314  0E00               	movlw	0
 25734  001316  6EE6               	movwf	postinc1,c
 25735  001318  0E00               	movlw	0
 25736  00131A  6EE6               	movwf	postinc1,c
 25737                           
 25738                           ;stkvar	__this @ sp[(-4)+-2]
 25739  00131C  0EFA               	movlw	-6
 25740  00131E  006F FF8F FFE6     	movff	plusw1,postinc1
 25741  001324  006F FF8F FFE6     	movff	plusw1,postinc1
 25742  00132A  EC7D  F0D9         	call	_memset	;wreg free
 25743  00132E                     l1752:
 25744                           
 25745                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 25746  00132E  52E5               	movf	postdec1,f,c
 25747  001330  52E5               	movf	postdec1,f,c
 25748  001332  52E5               	movf	postdec1,f,c
 25749  001334  0012               	return		;funcret
 25750  001336                     __end_of_ringBufS_flush:
 25751                           	opt callstack 0
 25752                           
 25753 ;; *************** function _memset *****************
 25754 ;; Defined at:
 25755 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 25756 ;; Parameters:    Size  Location     Type
 25757 ;;  dest            2  [STACK] PTR void 
 25758 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25759 ;;  c               2  [STACK] int 
 25760 ;;  n               2  [STACK] unsigned int 
 25761 ;; Auto vars:     Size  Location     Type
 25762 ;;  s               2  [STACK] PTR unsigned char 
 25763 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25764 ;;  k               2  [STACK] unsigned int 
 25765 ;; Return value:  Size  Location     Type
 25766 ;;                  2  [STACK] PTR void 
 25767 ;; Registers used:
 25768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25769 ;; Tracked objects:
 25770 ;;		On entry : 0/0
 25771 ;;		On exit  : 0/0
 25772 ;;		Unchanged: 0/0
 25773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25778 ;;Total ram usage:        0 bytes
 25779 ;; Hardware stack levels used:    1
 25780 ;; Hardware stack levels required when called:   15
 25781 ;; This function calls:
 25782 ;;		Nothing
 25783 ;; This function is called by:
 25784 ;;		_ringBufS_init
 25785 ;;		_ringBufS_flush
 25786 ;; This function uses a reentrant model
 25787 ;;
 25788                           
 25789                           	psect	text90
 25790  01B2FA                     __ptext90:
 25791                           	opt callstack 0
 25792  01B2FA                     _memset:
 25793                           	opt callstack 0
 25794                           
 25795                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25796  01B2FA  52E6               	movf	postinc1,f,c
 25797  01B2FC  52E6               	movf	postinc1,f,c
 25798  01B2FE  52E6               	movf	postinc1,f,c
 25799  01B300  52E6               	movf	postinc1,f,c
 25800                           
 25801                           ;stkvar	_dest @ sp[(-4)+-2]
 25802                           
 25803                           ;incstack = 0
 25804  01B302  0EFA               	movlw	-6
 25805  01B304  006F FF8C  F034    	movff	plusw1,btemp+10
 25806  01B30A  0EFB               	movlw	-5
 25807  01B30C  006F FF8C  F035    	movff	plusw1,btemp+11
 25808                           
 25809                           ;stkvar	_s @ sp[(-4)+0]
 25810  01B312  0EFD               	movlw	-3
 25811  01B314  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25812  01B31A  0EFC               	movlw	-4
 25813  01B31C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25814                           
 25815                           ;stkvar	_n @ sp[(-4)+-6]
 25816  01B322  0EF6               	movlw	-10
 25817  01B324  006F FF8C  F02A    	movff	plusw1,btemp
 25818  01B32A  0EF7               	movlw	-9
 25819  01B32C  50E3               	movf	plusw1,w,c
 25820  01B32E  102A               	iorwf	btemp^0,w,c
 25821  01B330  B4D8               	btfsc	status,2,c
 25822  01B332  D154               	goto	u14420
 25823                           
 25824                           ;stkvar	_c @ sp[(-4)+-4]
 25825                           ;stkvar	_s @ sp[(-4)+0]
 25826  01B334  0EFC               	movlw	-4
 25827  01B336  006F FF8F FFD9     	movff	plusw1,fsr2l
 25828  01B33C  0EFD               	movlw	-3
 25829  01B33E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25830  01B344  0EF8               	movlw	-8
 25831  01B346  006F FF8F FFDF     	movff	plusw1,indf2
 25832                           
 25833                           ;stkvar	_c @ sp[(-4)+-4]
 25834                           ;stkvar	_n @ sp[(-4)+-6]
 25835                           ;stkvar	_s @ sp[(-4)+0]
 25836  01B34C  0EFC               	movlw	-4
 25837  01B34E  006F FF8C  F034    	movff	plusw1,btemp+10
 25838  01B354  0EFD               	movlw	-3
 25839  01B356  006F FF8C  F035    	movff	plusw1,btemp+11
 25840  01B35C  0EF6               	movlw	-10
 25841  01B35E  50E3               	movf	plusw1,w,c
 25842  01B360  2634               	addwf	(btemp+10)^0,f,c
 25843  01B362  0EF7               	movlw	-9
 25844  01B364  50E3               	movf	plusw1,w,c
 25845  01B366  2235               	addwfc	(btemp+11)^0,f,c
 25846  01B368  0EFF               	movlw	255
 25847  01B36A  2434               	addwf	(btemp+10)^0,w,c
 25848  01B36C  6ED9               	movwf	fsr2l,c
 25849  01B36E  0EFF               	movlw	255
 25850  01B370  2035               	addwfc	(btemp+11)^0,w,c
 25851  01B372  6EDA               	movwf	fsr2h,c
 25852  01B374  0EF8               	movlw	-8
 25853  01B376  006F FF8F FFDF     	movff	plusw1,indf2
 25854                           
 25855                           ;stkvar	_n @ sp[(-4)+-6]
 25856  01B37C  0EF7               	movlw	-9
 25857  01B37E  50E3               	movf	plusw1,w,c
 25858  01B380  E108               	bnz	l15553
 25859  01B382  0EF6               	movlw	-10
 25860  01B384  006F FF8C  F02A    	movff	plusw1,btemp
 25861  01B38A  0E03               	movlw	3
 25862  01B38C  5E2A               	subwf	btemp^0,f,c
 25863  01B38E  A0D8               	btfss	status,0,c
 25864  01B390  D125               	goto	u14420
 25865  01B392                     l15553:
 25866                           
 25867                           ;stkvar	_c @ sp[(-4)+-4]
 25868                           ;stkvar	_s @ sp[(-4)+0]
 25869  01B392  0EFC               	movlw	-4
 25870  01B394  006F FF8C  F034    	movff	plusw1,btemp+10
 25871  01B39A  0EFD               	movlw	-3
 25872  01B39C  006F FF8C  F035    	movff	plusw1,btemp+11
 25873  01B3A2  0E01               	movlw	1
 25874  01B3A4  2434               	addwf	(btemp+10)^0,w,c
 25875  01B3A6  6ED9               	movwf	fsr2l,c
 25876  01B3A8  0E00               	movlw	0
 25877  01B3AA  2035               	addwfc	(btemp+11)^0,w,c
 25878  01B3AC  6EDA               	movwf	fsr2h,c
 25879  01B3AE  0EF8               	movlw	-8
 25880  01B3B0  006F FF8F FFDF     	movff	plusw1,indf2
 25881                           
 25882                           ;stkvar	_c @ sp[(-4)+-4]
 25883                           ;stkvar	_s @ sp[(-4)+0]
 25884  01B3B6  0EFC               	movlw	-4
 25885  01B3B8  006F FF8C  F034    	movff	plusw1,btemp+10
 25886  01B3BE  0EFD               	movlw	-3
 25887  01B3C0  006F FF8C  F035    	movff	plusw1,btemp+11
 25888  01B3C6  0E02               	movlw	2
 25889  01B3C8  2434               	addwf	(btemp+10)^0,w,c
 25890  01B3CA  6ED9               	movwf	fsr2l,c
 25891  01B3CC  0E00               	movlw	0
 25892  01B3CE  2035               	addwfc	(btemp+11)^0,w,c
 25893  01B3D0  6EDA               	movwf	fsr2h,c
 25894  01B3D2  0EF8               	movlw	-8
 25895  01B3D4  006F FF8F FFDF     	movff	plusw1,indf2
 25896                           
 25897                           ;stkvar	_c @ sp[(-4)+-4]
 25898                           ;stkvar	_n @ sp[(-4)+-6]
 25899                           ;stkvar	_s @ sp[(-4)+0]
 25900  01B3DA  0EFC               	movlw	-4
 25901  01B3DC  006F FF8C  F034    	movff	plusw1,btemp+10
 25902  01B3E2  0EFD               	movlw	-3
 25903  01B3E4  006F FF8C  F035    	movff	plusw1,btemp+11
 25904  01B3EA  0EF6               	movlw	-10
 25905  01B3EC  50E3               	movf	plusw1,w,c
 25906  01B3EE  2634               	addwf	(btemp+10)^0,f,c
 25907  01B3F0  0EF7               	movlw	-9
 25908  01B3F2  50E3               	movf	plusw1,w,c
 25909  01B3F4  2235               	addwfc	(btemp+11)^0,f,c
 25910  01B3F6  0EFE               	movlw	254
 25911  01B3F8  2434               	addwf	(btemp+10)^0,w,c
 25912  01B3FA  6ED9               	movwf	fsr2l,c
 25913  01B3FC  0EFF               	movlw	255
 25914  01B3FE  2035               	addwfc	(btemp+11)^0,w,c
 25915  01B400  6EDA               	movwf	fsr2h,c
 25916  01B402  0EF8               	movlw	-8
 25917  01B404  006F FF8F FFDF     	movff	plusw1,indf2
 25918                           
 25919                           ;stkvar	_c @ sp[(-4)+-4]
 25920                           ;stkvar	_n @ sp[(-4)+-6]
 25921                           ;stkvar	_s @ sp[(-4)+0]
 25922  01B40A  0EFC               	movlw	-4
 25923  01B40C  006F FF8C  F034    	movff	plusw1,btemp+10
 25924  01B412  0EFD               	movlw	-3
 25925  01B414  006F FF8C  F035    	movff	plusw1,btemp+11
 25926  01B41A  0EF6               	movlw	-10
 25927  01B41C  50E3               	movf	plusw1,w,c
 25928  01B41E  2634               	addwf	(btemp+10)^0,f,c
 25929  01B420  0EF7               	movlw	-9
 25930  01B422  50E3               	movf	plusw1,w,c
 25931  01B424  2235               	addwfc	(btemp+11)^0,f,c
 25932  01B426  0EFD               	movlw	253
 25933  01B428  2434               	addwf	(btemp+10)^0,w,c
 25934  01B42A  6ED9               	movwf	fsr2l,c
 25935  01B42C  0EFF               	movlw	255
 25936  01B42E  2035               	addwfc	(btemp+11)^0,w,c
 25937  01B430  6EDA               	movwf	fsr2h,c
 25938  01B432  0EF8               	movlw	-8
 25939  01B434  006F FF8F FFDF     	movff	plusw1,indf2
 25940                           
 25941                           ;stkvar	_n @ sp[(-4)+-6]
 25942  01B43A  0EF7               	movlw	-9
 25943  01B43C  50E3               	movf	plusw1,w,c
 25944  01B43E  E108               	bnz	l15559
 25945  01B440  0EF6               	movlw	-10
 25946  01B442  006F FF8C  F02A    	movff	plusw1,btemp
 25947  01B448  0E07               	movlw	7
 25948  01B44A  5E2A               	subwf	btemp^0,f,c
 25949  01B44C  A0D8               	btfss	status,0,c
 25950  01B44E  D0C6               	goto	u14420
 25951  01B450                     l15559:
 25952                           
 25953                           ;stkvar	_c @ sp[(-4)+-4]
 25954                           ;stkvar	_s @ sp[(-4)+0]
 25955  01B450  0EFC               	movlw	-4
 25956  01B452  006F FF8C  F034    	movff	plusw1,btemp+10
 25957  01B458  0EFD               	movlw	-3
 25958  01B45A  006F FF8C  F035    	movff	plusw1,btemp+11
 25959  01B460  0E03               	movlw	3
 25960  01B462  2434               	addwf	(btemp+10)^0,w,c
 25961  01B464  6ED9               	movwf	fsr2l,c
 25962  01B466  0E00               	movlw	0
 25963  01B468  2035               	addwfc	(btemp+11)^0,w,c
 25964  01B46A  6EDA               	movwf	fsr2h,c
 25965  01B46C  0EF8               	movlw	-8
 25966  01B46E  006F FF8F FFDF     	movff	plusw1,indf2
 25967                           
 25968                           ;stkvar	_c @ sp[(-4)+-4]
 25969                           ;stkvar	_n @ sp[(-4)+-6]
 25970                           ;stkvar	_s @ sp[(-4)+0]
 25971  01B474  0EFC               	movlw	-4
 25972  01B476  006F FF8C  F034    	movff	plusw1,btemp+10
 25973  01B47C  0EFD               	movlw	-3
 25974  01B47E  006F FF8C  F035    	movff	plusw1,btemp+11
 25975  01B484  0EF6               	movlw	-10
 25976  01B486  50E3               	movf	plusw1,w,c
 25977  01B488  2634               	addwf	(btemp+10)^0,f,c
 25978  01B48A  0EF7               	movlw	-9
 25979  01B48C  50E3               	movf	plusw1,w,c
 25980  01B48E  2235               	addwfc	(btemp+11)^0,f,c
 25981  01B490  0EFC               	movlw	252
 25982  01B492  2434               	addwf	(btemp+10)^0,w,c
 25983  01B494  6ED9               	movwf	fsr2l,c
 25984  01B496  0EFF               	movlw	255
 25985  01B498  2035               	addwfc	(btemp+11)^0,w,c
 25986  01B49A  6EDA               	movwf	fsr2h,c
 25987  01B49C  0EF8               	movlw	-8
 25988  01B49E  006F FF8F FFDF     	movff	plusw1,indf2
 25989                           
 25990                           ;stkvar	_n @ sp[(-4)+-6]
 25991  01B4A4  0EF7               	movlw	-9
 25992  01B4A6  50E3               	movf	plusw1,w,c
 25993  01B4A8  E108               	bnz	l15565
 25994  01B4AA  0EF6               	movlw	-10
 25995  01B4AC  006F FF8C  F02A    	movff	plusw1,btemp
 25996  01B4B2  0E09               	movlw	9
 25997  01B4B4  5E2A               	subwf	btemp^0,f,c
 25998  01B4B6  A0D8               	btfss	status,0,c
 25999  01B4B8  D091               	goto	u14420
 26000  01B4BA                     l15565:
 26001                           
 26002                           ;stkvar	_s @ sp[(-4)+0]
 26003  01B4BA  0EFC               	movlw	-4
 26004  01B4BC  006F FF8C  F034    	movff	plusw1,btemp+10
 26005  01B4C2  1E34               	comf	(btemp+10)^0,f,c
 26006  01B4C4  0EFD               	movlw	-3
 26007  01B4C6  006F FF8C  F035    	movff	plusw1,btemp+11
 26008  01B4CC  1E35               	comf	(btemp+11)^0,f,c
 26009  01B4CE  2A34               	incf	(btemp+10)^0,f,c
 26010  01B4D0  B4D8               	btfsc	status,2,c
 26011  01B4D2  2A35               	incf	(btemp+11)^0,f,c
 26012  01B4D4  0E03               	movlw	3
 26013  01B4D6  1634               	andwf	(btemp+10)^0,f,c
 26014  01B4D8  0E00               	movlw	0
 26015  01B4DA  1635               	andwf	(btemp+11)^0,f,c
 26016                           
 26017                           ;stkvar	_k @ sp[(-4)+2]
 26018  01B4DC  0EFE               	movlw	-2
 26019  01B4DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26020  01B4E4  0EFF               	movlw	-1
 26021  01B4E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26022                           
 26023                           ;stkvar	_k @ sp[(-4)+2]
 26024                           ;stkvar	_s @ sp[(-4)+0]
 26025  01B4EC  0EFC               	movlw	-4
 26026  01B4EE  50E3               	movf	plusw1,w,c
 26027  01B4F0  6E2A               	movwf	btemp^0,c
 26028  01B4F2  0EFE               	movlw	-2
 26029  01B4F4  50E3               	movf	plusw1,w,c
 26030  01B4F6  262A               	addwf	btemp^0,f,c
 26031  01B4F8  0EFC               	movlw	-4
 26032  01B4FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26033  01B500  0EFD               	movlw	-3
 26034  01B502  50E3               	movf	plusw1,w,c
 26035  01B504  6E2A               	movwf	btemp^0,c
 26036  01B506  0EFF               	movlw	-1
 26037  01B508  50E3               	movf	plusw1,w,c
 26038  01B50A  222A               	addwfc	btemp^0,f,c
 26039  01B50C  0EFD               	movlw	-3
 26040  01B50E  0060  F0AB  FFE3   	movff	btemp,plusw1
 26041                           
 26042                           ;stkvar	_k @ sp[(-4)+2]
 26043                           ;stkvar	_n @ sp[(-4)+-6]
 26044  01B514  0EF6               	movlw	-10
 26045  01B516  50E3               	movf	plusw1,w,c
 26046  01B518  6E2A               	movwf	btemp^0,c
 26047  01B51A  0EFE               	movlw	-2
 26048  01B51C  50E3               	movf	plusw1,w,c
 26049  01B51E  5E2A               	subwf	btemp^0,f,c
 26050  01B520  0EF6               	movlw	-10
 26051  01B522  0060  F0AB  FFE3   	movff	btemp,plusw1
 26052  01B528  0EF7               	movlw	-9
 26053  01B52A  50E3               	movf	plusw1,w,c
 26054  01B52C  6E2A               	movwf	btemp^0,c
 26055  01B52E  0EFF               	movlw	-1
 26056  01B530  50E3               	movf	plusw1,w,c
 26057  01B532  5A2A               	subwfb	btemp^0,f,c
 26058  01B534  0EF7               	movlw	-9
 26059  01B536  0060  F0AB  FFE3   	movff	btemp,plusw1
 26060  01B53C  0EFC               	movlw	252
 26061  01B53E  6E34               	movwf	(btemp+10)^0,c
 26062  01B540  0EFF               	movlw	255
 26063  01B542  6E35               	movwf	(btemp+11)^0,c
 26064                           
 26065                           ;stkvar	_n @ sp[(-4)+-6]
 26066  01B544  0EF6               	movlw	-10
 26067  01B546  006F FF8C  F02A    	movff	plusw1,btemp
 26068  01B54C  5034               	movf	(btemp+10)^0,w,c
 26069  01B54E  162A               	andwf	btemp^0,f,c
 26070  01B550  0EF6               	movlw	-10
 26071  01B552  0060  F0AB  FFE3   	movff	btemp,plusw1
 26072  01B558  0EF7               	movlw	-9
 26073  01B55A  006F FF8C  F02A    	movff	plusw1,btemp
 26074  01B560  5035               	movf	(btemp+11)^0,w,c
 26075  01B562  162A               	andwf	btemp^0,f,c
 26076  01B564  0EF7               	movlw	-9
 26077  01B566  D02E               	goto	L24
 26078  01B568                     l15573:
 26079                           
 26080                           ;stkvar	_c @ sp[(-4)+-4]
 26081                           ;stkvar	_s @ sp[(-4)+0]
 26082  01B568  0EFC               	movlw	-4
 26083  01B56A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26084  01B570  0EFD               	movlw	-3
 26085  01B572  006F FF8F FFDA     	movff	plusw1,fsr2h
 26086  01B578  0EF8               	movlw	-8
 26087  01B57A  006F FF8F FFDF     	movff	plusw1,indf2
 26088                           
 26089                           ;stkvar	_n @ sp[(-4)+-6]
 26090  01B580  0EF6               	movlw	-10
 26091  01B582  006F FF8C  F02A    	movff	plusw1,btemp
 26092  01B588  0E01               	movlw	1
 26093  01B58A  5E2A               	subwf	btemp^0,f,c
 26094  01B58C  0EF6               	movlw	-10
 26095  01B58E  0060  F0AB  FFE3   	movff	btemp,plusw1
 26096  01B594  0EF7               	movlw	-9
 26097  01B596  006F FF8C  F02A    	movff	plusw1,btemp
 26098  01B59C  0E00               	movlw	0
 26099  01B59E  5A2A               	subwfb	btemp^0,f,c
 26100  01B5A0  0EF7               	movlw	-9
 26101  01B5A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 26102                           
 26103                           ;stkvar	_s @ sp[(-4)+0]
 26104  01B5A8  0EFC               	movlw	-4
 26105  01B5AA  50E3               	movf	plusw1,w,c
 26106  01B5AC  0F01               	addlw	1
 26107  01B5AE  6E2A               	movwf	btemp^0,c
 26108  01B5B0  0EFC               	movlw	-4
 26109  01B5B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 26110  01B5B8  6A2A               	clrf	btemp^0,c
 26111  01B5BA  0EFD               	movlw	-3
 26112  01B5BC  50E3               	movf	plusw1,w,c
 26113  01B5BE  202A               	addwfc	btemp^0,w,c
 26114  01B5C0  6E2A               	movwf	btemp^0,c
 26115  01B5C2  0EFD               	movlw	-3
 26116  01B5C4                     L24:
 26117  01B5C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 26118                           
 26119                           ;stkvar	_n @ sp[(-4)+-6]
 26120  01B5CA  0EF6               	movlw	-10
 26121  01B5CC  006F FF8C  F02A    	movff	plusw1,btemp
 26122  01B5D2  0EF7               	movlw	-9
 26123  01B5D4  50E3               	movf	plusw1,w,c
 26124  01B5D6  102A               	iorwf	btemp^0,w,c
 26125  01B5D8  A4D8               	btfss	status,2,c
 26126  01B5DA  D7C6               	goto	l15573
 26127  01B5DC                     u14420:
 26128                           
 26129                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 26130  01B5DC  0EF6               	movlw	246
 26131  01B5DE  26E1               	addwf	fsr1l,f,c
 26132  01B5E0  0EFF               	movlw	255
 26133  01B5E2  22E2               	addwfc	fsr1h,f,c
 26134  01B5E4  0012               	return		;funcret
 26135  01B5E6                     __end_of_memset:
 26136                           	opt callstack 0
 26137                           
 26138 ;; *************** function _printf *****************
 26139 ;; Defined at:
 26140 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 26141 ;; Parameters:    Size  Location     Type
 26142 ;;  fmt             2  [STACK] PTR const unsigned char 
 26143 ;;		 -> STR_82(3), 
 26144 ;; Auto vars:     Size  Location     Type
 26145 ;;  ap              2  [STACK] PTR void [1]
 26146 ;;		 -> ?_printf(2), ?_sprintf(2), 
 26147 ;;  ret             2    0        int 
 26148 ;; Return value:  Size  Location     Type
 26149 ;;                  2  [STACK] int 
 26150 ;; Registers used:
 26151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26152 ;; Tracked objects:
 26153 ;;		On entry : 3F/3B
 26154 ;;		On exit  : 3F/0
 26155 ;;		Unchanged: 0/0
 26156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26161 ;;Total ram usage:        0 bytes
 26162 ;; Hardware stack levels used:    1
 26163 ;; Hardware stack levels required when called:   23
 26164 ;; This function calls:
 26165 ;;		_vfprintf
 26166 ;; This function is called by:
 26167 ;;		_eaDogM_WriteString
 26168 ;; This function uses a reentrant model
 26169 ;;
 26170                           
 26171                           	psect	text91
 26172  001BFA                     __ptext91:
 26173                           	opt callstack 0
 26174  001BFA                     _printf:
 26175                           	opt callstack 0
 26176                           
 26177                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26178  001BFA  52E6               	movf	postinc1,f,c
 26179  001BFC  52E6               	movf	postinc1,f,c
 26180                           
 26181                           ;stkvar	?_printf @ sp[(-2)+-3]
 26182                           
 26183                           ;incstack = 0
 26184  001BFE  0EFB               	movlw	251
 26185  001C00  24E1               	addwf	fsr1l,w,c
 26186  001C02  6E34               	movwf	(btemp+10)^0,c
 26187  001C04  0EFF               	movlw	255
 26188  001C06  20E2               	addwfc	fsr1h,w,c
 26189  001C08  6E35               	movwf	(btemp+11)^0,c
 26190                           
 26191                           ;stkvar	_ap @ sp[(-2)+0]
 26192  001C0A  0EFF               	movlw	-1
 26193  001C0C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26194  001C12  0EFE               	movlw	-2
 26195  001C14  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26196                           
 26197                           ;stkvar	_ap @ sp[(-2)+0]
 26198  001C1A  0EFE               	movlw	254
 26199  001C1C  24E1               	addwf	fsr1l,w,c
 26200  001C1E  6E2A               	movwf	btemp^0,c
 26201  001C20  0EFF               	movlw	255
 26202  001C22  20E2               	addwfc	fsr1h,w,c
 26203  001C24  6E2B               	movwf	(btemp+1)^0,c
 26204  001C26  0060  F0AB  FFE6   	movff	btemp,postinc1
 26205  001C2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26206                           
 26207                           ;stkvar	_fmt @ sp[(-4)+-3]
 26208  001C32  0EF9               	movlw	-7
 26209  001C34  006F FF8F FFE6     	movff	plusw1,postinc1
 26210  001C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 26211  001C40  0E00               	movlw	0
 26212  001C42  6EE6               	movwf	postinc1,c
 26213  001C44  0E00               	movlw	0
 26214  001C46  6EE6               	movwf	postinc1,c
 26215  001C48  ECD8  F006         	call	_vfprintf	;wreg free
 26216                           
 26217                           ; BSR set to: 0
 26218                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 26219  001C4C  52E5               	movf	postdec1,f,c
 26220  001C4E  52E5               	movf	postdec1,f,c
 26221  001C50  52E5               	movf	postdec1,f,c
 26222  001C52  50E7               	movf	indf1,w,c
 26223  001C54  5EE1               	subwf	fsr1l,f,c
 26224  001C56  0E00               	movlw	0
 26225  001C58  5AE2               	subwfb	fsr1h,f,c
 26226  001C5A  0012               	return		;funcret
 26227  001C5C                     __end_of_printf:
 26228                           	opt callstack 0
 26229                           
 26230 ;; *************** function _vfprintf *****************
 26231 ;; Defined at:
 26232 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26233 ;; Parameters:    Size  Location     Type
 26234 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26235 ;;		 -> f(6), NULL(0), 
 26236 ;;  fmt             2  [STACK] PTR const unsigned char 
 26237 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 26238 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 26239 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 26240 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 26241 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 26242 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(21), 
 26243 ;;		 -> STR_76(21), STR_75(21), STR_74(21), STR_73(21), 
 26244 ;;		 -> STR_72(21), STR_71(21), STR_70(21), STR_69(21), 
 26245 ;;		 -> STR_68(18), STR_67(21), STR_66(21), STR_65(21), 
 26246 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 26247 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 26248 ;;		 -> STR_56(21), STR_55(20), STR_54(21), STR_53(21), 
 26249 ;;		 -> STR_52(21), STR_51(22), STR_50(22), STR_49(22), 
 26250 ;;		 -> STR_48(23), STR_47(23), STR_46(23), STR_45(29), 
 26251 ;;		 -> STR_44(23), STR_43(23), STR_42(22), STR_41(22), 
 26252 ;;		 -> STR_40(22), STR_39(22), STR_38(22), STR_37(22), 
 26253 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 26254 ;;		 -> STR_32(22), STR_31(22), STR_30(17), STR_29(16), 
 26255 ;;		 -> STR_28(16), STR_27(21), STR_26(21), STR_25(21), 
 26256 ;;		 -> STR_24(14), STR_23(26), STR_22(26), STR_21(22), 
 26257 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 26258 ;;		 -> STR_16(22), STR_15(22), STR_14(22), STR_13(26), 
 26259 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 26260 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26261 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26262 ;;  ap              2  [STACK] PTR PTR void 
 26263 ;;		 -> ap(2), ap(2), 
 26264 ;; Auto vars:     Size  Location     Type
 26265 ;;  cfmt            2  [STACK] PTR unsigned char 
 26266 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 26267 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 26268 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 26269 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 26270 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 26271 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(21), 
 26272 ;;		 -> STR_76(21), STR_75(21), STR_74(21), STR_73(21), 
 26273 ;;		 -> STR_72(21), STR_71(21), STR_70(21), STR_69(21), 
 26274 ;;		 -> STR_68(18), STR_67(21), STR_66(21), STR_65(21), 
 26275 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 26276 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 26277 ;;		 -> STR_56(21), STR_55(20), STR_54(21), STR_53(21), 
 26278 ;;		 -> STR_52(21), STR_51(22), STR_50(22), STR_49(22), 
 26279 ;;		 -> STR_48(23), STR_47(23), STR_46(23), STR_45(29), 
 26280 ;;		 -> STR_44(23), STR_43(23), STR_42(22), STR_41(22), 
 26281 ;;		 -> STR_40(22), STR_39(22), STR_38(22), STR_37(22), 
 26282 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 26283 ;;		 -> STR_32(22), STR_31(22), STR_30(17), STR_29(16), 
 26284 ;;		 -> STR_28(16), STR_27(21), STR_26(21), STR_25(21), 
 26285 ;;		 -> STR_24(14), STR_23(26), STR_22(26), STR_21(22), 
 26286 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 26287 ;;		 -> STR_16(22), STR_15(22), STR_14(22), STR_13(26), 
 26288 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 26289 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26290 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26291 ;; Return value:  Size  Location     Type
 26292 ;;                  2  [STACK] int 
 26293 ;; Registers used:
 26294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26295 ;; Tracked objects:
 26296 ;;		On entry : 0/2
 26297 ;;		On exit  : 3F/0
 26298 ;;		Unchanged: 0/0
 26299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26304 ;;Total ram usage:        0 bytes
 26305 ;; Hardware stack levels used:    1
 26306 ;; Hardware stack levels required when called:   22
 26307 ;; This function calls:
 26308 ;;		_vfpfcnvrt
 26309 ;; This function is called by:
 26310 ;;		_sprintf
 26311 ;;		_printf
 26312 ;; This function uses a reentrant model
 26313 ;;
 26314                           
 26315                           	psect	text92
 26316  000DB0                     __ptext92:
 26317                           	opt callstack 0
 26318  000DB0                     _vfprintf:
 26319                           	opt callstack 0
 26320                           
 26321                           ; BSR set to: 0
 26322                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26323  000DB0  52E6               	movf	postinc1,f,c
 26324  000DB2  52E6               	movf	postinc1,f,c
 26325                           
 26326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 26327                           ;stkvar	_fmt @ sp[(-2)+-4]
 26328                           
 26329                           ;incstack = 0
 26330 ;; hardware stack exceeded
 26331  000DB4  0EFA               	movlw	-6
 26332  000DB6  006F FF8C  F034    	movff	plusw1,btemp+10
 26333  000DBC  0EFB               	movlw	-5
 26334  000DBE  006F FF8C  F035    	movff	plusw1,btemp+11
 26335                           
 26336                           ;stkvar	_cfmt @ sp[(-2)+0]
 26337  000DC4  0EFF               	movlw	-1
 26338  000DC6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26339  000DCC  0EFE               	movlw	-2
 26340  000DCE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26341                           
 26342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 26343  000DD4  0100               	movlb	0	; () banked
 26344  000DD6  6BBA               	clrf	_nout& (0+255),b
 26345  000DD8  6BBB               	clrf	(_nout+1)& (0+255),b
 26346                           
 26347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26348  000DDA  D021               	goto	l17017
 26349  000DDC                     l17015:
 26350                           
 26351                           ; BSR set to: 0
 26352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 26353                           ;stkvar	_ap @ sp[(-2)+-6]
 26354  000DDC  0EF8               	movlw	-8
 26355  000DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 26356  000DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 26357                           
 26358                           ;stkvar	_cfmt @ sp[(-4)+0]
 26359  000DEA  0EFC               	movlw	252
 26360  000DEC  24E1               	addwf	fsr1l,w,c
 26361  000DEE  6E2A               	movwf	btemp^0,c
 26362  000DF0  0EFF               	movlw	255
 26363  000DF2  20E2               	addwfc	fsr1h,w,c
 26364  000DF4  6E2B               	movwf	(btemp+1)^0,c
 26365  000DF6  0060  F0AB  FFE6   	movff	btemp,postinc1
 26366  000DFC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26367                           
 26368                           ;stkvar	_fp @ sp[(-6)+-2]
 26369  000E02  0EF8               	movlw	-8
 26370  000E04  006F FF8F FFE6     	movff	plusw1,postinc1
 26371  000E0A  006F FF8F FFE6     	movff	plusw1,postinc1
 26372  000E10  EC15  F09C         	call	_vfpfcnvrt	;wreg free
 26373  000E14  502A               	movf	btemp^0,w,c
 26374  000E16  0100               	movlb	0	; () banked
 26375  000E18  27BA               	addwf	_nout& (0+255),f,b
 26376  000E1A  502B               	movf	(btemp+1)^0,w,c
 26377  000E1C  23BB               	addwfc	(_nout+1)& (0+255),f,b
 26378  000E1E                     l17017:
 26379                           
 26380                           ; BSR set to: 0
 26381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26382                           ;stkvar	_cfmt @ sp[(-2)+0]
 26383  000E1E  50E1               	movf	fsr1l,w,c
 26384  000E20  0FFE               	addlw	-2
 26385  000E22  6ED9               	movwf	fsr2l,c
 26386  000E24  50E2               	movf	fsr1h,w,c
 26387  000E26  6EDA               	movwf	fsr2h,c
 26388  000E28  0EFF               	movlw	255
 26389  000E2A  22DA               	addwfc	fsr2h,f,c
 26390  000E2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26391  000E32  006F FF77 FFF7     	movff	postdec2,tblptrh
 26392  000E38                     	if	0	;tblptru may be non-zero
 26393  000E38                     	endif
 26394  000E38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26395  000E38  0E00               	movlw	low (__mediumconst shr (0+16))
 26396  000E3A  6EF8               	movwf	tblptru,c
 26397  000E3C                     	endif
 26398  000E3C  0008               	tblrd		*
 26399  000E3E  50F5               	movf	tablat,w,c
 26400  000E40  0900               	iorlw	0
 26401  000E42  A4D8               	btfss	status,2,c
 26402  000E44  D7CB               	goto	l17015
 26403                           
 26404                           ; BSR set to: 0
 26405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 26406  000E46  0060  F2E8  F02A   	movff	_nout,btemp
 26407  000E4C  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 26408                           
 26409                           ; BSR set to: 0
 26410                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 26411  000E52  0EF8               	movlw	248
 26412  000E54  26E1               	addwf	fsr1l,f,c
 26413  000E56  0EFF               	movlw	255
 26414  000E58  22E2               	addwfc	fsr1h,f,c
 26415  000E5A  0012               	return		;funcret
 26416  000E5C                     __end_of_vfprintf:
 26417                           	opt callstack 0
 26418                           
 26419 ;; *************** function _vfpfcnvrt *****************
 26420 ;; Defined at:
 26421 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26422 ;; Parameters:    Size  Location     Type
 26423 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26424 ;;		 -> f(6), NULL(0), 
 26425 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 26426 ;;		 -> cfmt(2), 
 26427 ;;  ap              2  [STACK] PTR PTR void 
 26428 ;;		 -> ap(2), ap(2), 
 26429 ;; Auto vars:     Size  Location     Type
 26430 ;;  llu             8  [STACK] unsigned long long 
 26431 ;;  ll              8  [STACK] long long 
 26432 ;;  f               4  [STACK] long long 
 26433 ;;  ct              3  [STACK] unsigned char [3]
 26434 ;;  vp              3    0        PTR void 
 26435 ;;  cp              2  [STACK] PTR unsigned char 
 26436 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_84(9), 
 26437 ;;		 -> STR_83(12), D.lcd(640), D(642), T(176), 
 26438 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 26439 ;;  i               2    0        int 
 26440 ;;  done            2    0        int 
 26441 ;;  c               1  [STACK] unsigned char 
 26442 ;; Return value:  Size  Location     Type
 26443 ;;                  2  [STACK] int 
 26444 ;; Registers used:
 26445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26446 ;; Tracked objects:
 26447 ;;		On entry : 0/0
 26448 ;;		On exit  : 0/0
 26449 ;;		Unchanged: 0/0
 26450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26455 ;;Total ram usage:        0 bytes
 26456 ;; Hardware stack levels used:    1
 26457 ;; Hardware stack levels required when called:   21
 26458 ;; This function calls:
 26459 ;;		_atoi
 26460 ;;		_ctoa
 26461 ;;		_dtoa
 26462 ;;		_efgtoa
 26463 ;;		_fputc
 26464 ;;		_isdigit
 26465 ;;		_isupper
 26466 ;;		_stoa
 26467 ;;		_strncmp
 26468 ;;		_tolower
 26469 ;;		_utoa
 26470 ;;		_xtoa
 26471 ;; This function is called by:
 26472 ;;		_vfprintf
 26473 ;; This function uses a reentrant model
 26474 ;;
 26475                           
 26476                           	psect	text93
 26477  01382A                     __ptext93:
 26478                           	opt callstack 0
 26479  01382A                     _vfpfcnvrt:
 26480                           	opt callstack 0
 26481                           
 26482                           ; BSR set to: 0
 26483                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26484  01382A  0E20               	movlw	32
 26485  01382C  26E1               	addwf	fsr1l,f,c
 26486  01382E  0E00               	movlw	0
 26487  013830  22E2               	addwfc	fsr1h,f,c
 26488                           
 26489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 26490                           ;stkvar	_fmt @ sp[(-32)+-4]
 26491                           
 26492                           ;incstack = 0
 26493 ;; hardware stack exceeded
 26494  013832  0EDC               	movlw	-36
 26495  013834  006F FF8F FFD9     	movff	plusw1,fsr2l
 26496  01383A  0EDD               	movlw	-35
 26497  01383C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26498  013842  006F FF7B FFF6     	movff	postinc2,tblptrl
 26499  013848  006F FF77 FFF7     	movff	postdec2,tblptrh
 26500  01384E                     	if	0	;tblptru may be non-zero
 26501  01384E                     	endif
 26502  01384E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26503  01384E  0E00               	movlw	low (__mediumconst shr (0+16))
 26504  013850  6EF8               	movwf	tblptru,c
 26505  013852                     	endif
 26506  013852  0008               	tblrd		*
 26507  013854  50F5               	movf	tablat,w,c
 26508  013856  0A25               	xorlw	37
 26509  013858  A4D8               	btfss	status,2,c
 26510  01385A  EFBC  F0A3         	goto	l16785
 26511                           
 26512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 26513                           ;stkvar	_fmt @ sp[(-32)+-4]
 26514  01385E  0EDC               	movlw	-36
 26515  013860  006F FF8F FFD9     	movff	plusw1,fsr2l
 26516  013866  0EDD               	movlw	-35
 26517  013868  006F FF8F FFDA     	movff	plusw1,fsr2h
 26518  01386E  2ADE               	incf	postinc2,f,c
 26519  013870  0E00               	movlw	0
 26520  013872  22DD               	addwfc	postdec2,f,c
 26521                           
 26522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 26523  013874  6A4A               	clrf	_width^0,c
 26524  013876  6A4B               	clrf	(_width+1)^0,c
 26525  013878  6A4E               	clrf	_flags^0,c
 26526  01387A  6A4F               	clrf	(_flags+1)^0,c
 26527                           
 26528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 26529  01387C  684C               	setf	_prec^0,c
 26530  01387E  684D               	setf	(_prec+1)^0,c
 26531                           
 26532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 26533                           ;stkvar	_fmt @ sp[(-32)+-4]
 26534  013880  0EDC               	movlw	-36
 26535  013882  006F FF8F FFD9     	movff	plusw1,fsr2l
 26536  013888  0EDD               	movlw	-35
 26537  01388A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26538  013890  006F FF7B FFF6     	movff	postinc2,tblptrl
 26539  013896  006F FF77 FFF7     	movff	postdec2,tblptrh
 26540  01389C                     	if	0	;tblptru may be non-zero
 26541  01389C                     	endif
 26542  01389C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26543  01389C  0E00               	movlw	low (__mediumconst shr (0+16))
 26544  01389E  6EF8               	movwf	tblptru,c
 26545  0138A0                     	endif
 26546  0138A0  0008               	tblrd		*
 26547  0138A2  50F5               	movf	tablat,w,c
 26548  0138A4  0A2A               	xorlw	42
 26549  0138A6  A4D8               	btfss	status,2,c
 26550  0138A8  D031               	goto	l16603
 26551                           
 26552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 26553                           ;stkvar	_fmt @ sp[(-32)+-4]
 26554  0138AA  0EDC               	movlw	-36
 26555  0138AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26556  0138B2  0EDD               	movlw	-35
 26557  0138B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26558  0138BA  2ADE               	incf	postinc2,f,c
 26559  0138BC  0E00               	movlw	0
 26560  0138BE  22DD               	addwfc	postdec2,f,c
 26561                           
 26562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 26563                           ;stkvar	_ap @ sp[(-32)+-6]
 26564  0138C0  0EDA               	movlw	-38
 26565  0138C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26566  0138C8  0EDB               	movlw	-37
 26567  0138CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26568  0138D0  0E02               	movlw	2
 26569  0138D2  5EDE               	subwf	postinc2,f,c
 26570  0138D4  0E00               	movlw	0
 26571  0138D6  5ADD               	subwfb	postdec2,f,c
 26572  0138D8  006F FF78  F034    	movff	postinc2,btemp+10
 26573  0138DE  006F FF74  F035    	movff	postdec2,btemp+11
 26574  0138E4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26575  0138EA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26576  0138F0  006F FF78  F04A    	movff	postinc2,_width
 26577  0138F6  006F FF74  F04B    	movff	postdec2,_width+1
 26578                           
 26579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 26580  0138FC  AE4B               	btfss	(_width+1)^0,7,c
 26581  0138FE  D066               	goto	u16370
 26582                           
 26583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 26584  013900  804E               	bsf	_flags^0,0,c
 26585                           
 26586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 26587  013902  6C4A               	negf	_width^0,c
 26588  013904  1E4B               	comf	(_width+1)^0,f,c
 26589  013906  B0D8               	btfsc	status,0,c
 26590  013908  2A4B               	incf	(_width+1)^0,f,c
 26591  01390A  D060               	goto	u16370
 26592  01390C                     l16603:
 26593                           
 26594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 26595                           ;stkvar	_fmt @ sp[(-32)+-4]
 26596  01390C  0EDC               	movlw	-36
 26597  01390E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26598  013914  0EDD               	movlw	-35
 26599  013916  006F FF8F FFDA     	movff	plusw1,fsr2h
 26600  01391C  006F FF78  F034    	movff	postinc2,btemp+10
 26601  013922  006F FF74  F035    	movff	postdec2,btemp+11
 26602  013928  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26603  01392E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26604  013934  ECEB  F0E2         	call	_atoi	;wreg free
 26605  013938  0060  F0A8  F04A   	movff	btemp,_width
 26606  01393E  0060  F0AC  F04B   	movff	btemp+1,_width+1
 26607                           
 26608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26609  013944  D00B               	goto	l16607
 26610  013946                     l16605:
 26611                           
 26612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 26613                           ;stkvar	_fmt @ sp[(-32)+-4]
 26614  013946  0EDC               	movlw	-36
 26615  013948  006F FF8F FFD9     	movff	plusw1,fsr2l
 26616  01394E  0EDD               	movlw	-35
 26617  013950  006F FF8F FFDA     	movff	plusw1,fsr2h
 26618  013956  2ADE               	incf	postinc2,f,c
 26619  013958  0E00               	movlw	0
 26620  01395A  22DD               	addwfc	postdec2,f,c
 26621  01395C                     l16607:
 26622  01395C  0ED0               	movlw	208
 26623  01395E  6E34               	movwf	(btemp+10)^0,c
 26624  013960  0EFF               	movlw	255
 26625  013962  6E35               	movwf	(btemp+11)^0,c
 26626                           
 26627                           ;stkvar	_fmt @ sp[(-32)+-4]
 26628  013964  0EDC               	movlw	-36
 26629  013966  006F FF8F FFD9     	movff	plusw1,fsr2l
 26630  01396C  0EDD               	movlw	-35
 26631  01396E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26632  013974  006F FF7B FFF6     	movff	postinc2,tblptrl
 26633  01397A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26634  013980                     	if	0	;tblptru may be non-zero
 26635  013980                     	endif
 26636  013980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26637  013980  0E00               	movlw	low (__mediumconst shr (0+16))
 26638  013982  6EF8               	movwf	tblptru,c
 26639  013984                     	endif
 26640  013984  0008               	tblrd		*
 26641  013986  50F5               	movf	tablat,w,c
 26642  013988  6E32               	movwf	(btemp+8)^0,c
 26643  01398A  6A33               	clrf	(btemp+9)^0,c
 26644  01398C  5034               	movf	(btemp+10)^0,w,c
 26645  01398E  2632               	addwf	(btemp+8)^0,f,c
 26646  013990  5035               	movf	(btemp+11)^0,w,c
 26647  013992  2233               	addwfc	(btemp+9)^0,f,c
 26648  013994  5033               	movf	(btemp+9)^0,w,c
 26649  013996  E106               	bnz	u16350
 26650  013998  0E0A               	movlw	10
 26651  01399A  5C32               	subwf	(btemp+8)^0,w,c
 26652  01399C  B0D8               	btfsc	status,0,c
 26653  01399E  D002               	goto	u16350
 26654  0139A0  0E01               	movlw	1
 26655  0139A2  D001               	goto	u16360
 26656  0139A4                     u16350:
 26657  0139A4  0E00               	movlw	0
 26658  0139A6                     u16360:
 26659  0139A6  6E34               	movwf	(btemp+10)^0,c
 26660  0139A8  6A35               	clrf	(btemp+11)^0,c
 26661                           
 26662                           ;stkvar	_vfpfcnvrt$6915 @ sp[(-32)+4]
 26663  0139AA  0EE4               	movlw	-28
 26664  0139AC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26665  0139B2  0EE5               	movlw	-27
 26666  0139B4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26667                           
 26668                           ;stkvar	_vfpfcnvrt$6915 @ sp[(-32)+4]
 26669  0139BA  0EE4               	movlw	-28
 26670  0139BC  006F FF8C  F02A    	movff	plusw1,btemp
 26671  0139C2  0EE5               	movlw	-27
 26672  0139C4  50E3               	movf	plusw1,w,c
 26673  0139C6  102A               	iorwf	btemp^0,w,c
 26674  0139C8  A4D8               	btfss	status,2,c
 26675  0139CA  D7BD               	goto	l16605
 26676  0139CC                     u16370:
 26677                           
 26678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 26679                           ;stkvar	_fmt @ sp[(-32)+-4]
 26680  0139CC  0EDC               	movlw	-36
 26681  0139CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26682  0139D4  0EDD               	movlw	-35
 26683  0139D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26684  0139DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 26685  0139E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26686  0139E8                     	if	0	;tblptru may be non-zero
 26687  0139E8                     	endif
 26688  0139E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26689  0139E8  0E00               	movlw	low (__mediumconst shr (0+16))
 26690  0139EA  6EF8               	movwf	tblptru,c
 26691  0139EC                     	endif
 26692  0139EC  0008               	tblrd		*
 26693  0139EE  50F5               	movf	tablat,w,c
 26694  0139F0  0A2E               	xorlw	46
 26695  0139F2  A4D8               	btfss	status,2,c
 26696  0139F4  D0AC               	goto	u16420
 26697                           
 26698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 26699  0139F6  6A4C               	clrf	_prec^0,c
 26700  0139F8  6A4D               	clrf	(_prec+1)^0,c
 26701                           
 26702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 26703                           ;stkvar	_fmt @ sp[(-32)+-4]
 26704  0139FA  0EDC               	movlw	-36
 26705  0139FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26706  013A02  0EDD               	movlw	-35
 26707  013A04  006F FF8F FFDA     	movff	plusw1,fsr2h
 26708  013A0A  2ADE               	incf	postinc2,f,c
 26709  013A0C  0E00               	movlw	0
 26710  013A0E  22DD               	addwfc	postdec2,f,c
 26711                           
 26712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 26713                           ;stkvar	_fmt @ sp[(-32)+-4]
 26714  013A10  0EDC               	movlw	-36
 26715  013A12  006F FF8F FFD9     	movff	plusw1,fsr2l
 26716  013A18  0EDD               	movlw	-35
 26717  013A1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26718  013A20  006F FF7B FFF6     	movff	postinc2,tblptrl
 26719  013A26  006F FF77 FFF7     	movff	postdec2,tblptrh
 26720  013A2C                     	if	0	;tblptru may be non-zero
 26721  013A2C                     	endif
 26722  013A2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26723  013A2C  0E00               	movlw	low (__mediumconst shr (0+16))
 26724  013A2E  6EF8               	movwf	tblptru,c
 26725  013A30                     	endif
 26726  013A30  0008               	tblrd		*
 26727  013A32  50F5               	movf	tablat,w,c
 26728  013A34  0A2A               	xorlw	42
 26729  013A36  A4D8               	btfss	status,2,c
 26730  013A38  D02A               	goto	l16625
 26731                           
 26732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 26733                           ;stkvar	_fmt @ sp[(-32)+-4]
 26734  013A3A  0EDC               	movlw	-36
 26735  013A3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26736  013A42  0EDD               	movlw	-35
 26737  013A44  006F FF8F FFDA     	movff	plusw1,fsr2h
 26738  013A4A  2ADE               	incf	postinc2,f,c
 26739  013A4C  0E00               	movlw	0
 26740  013A4E  22DD               	addwfc	postdec2,f,c
 26741                           
 26742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 26743                           ;stkvar	_ap @ sp[(-32)+-6]
 26744  013A50  0EDA               	movlw	-38
 26745  013A52  006F FF8F FFD9     	movff	plusw1,fsr2l
 26746  013A58  0EDB               	movlw	-37
 26747  013A5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26748  013A60  0E02               	movlw	2
 26749  013A62  5EDE               	subwf	postinc2,f,c
 26750  013A64  0E00               	movlw	0
 26751  013A66  5ADD               	subwfb	postdec2,f,c
 26752  013A68  006F FF78  F034    	movff	postinc2,btemp+10
 26753  013A6E  006F FF74  F035    	movff	postdec2,btemp+11
 26754  013A74  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26755  013A7A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26756  013A80  006F FF78  F04C    	movff	postinc2,_prec
 26757  013A86  006F FF74  F04D    	movff	postdec2,_prec+1
 26758                           
 26759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 26760  013A8C  D060               	goto	u16420
 26761  013A8E                     l16625:
 26762                           
 26763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 26764                           ;stkvar	_fmt @ sp[(-32)+-4]
 26765  013A8E  0EDC               	movlw	-36
 26766  013A90  006F FF8F FFD9     	movff	plusw1,fsr2l
 26767  013A96  0EDD               	movlw	-35
 26768  013A98  006F FF8F FFDA     	movff	plusw1,fsr2h
 26769  013A9E  006F FF78  F034    	movff	postinc2,btemp+10
 26770  013AA4  006F FF74  F035    	movff	postdec2,btemp+11
 26771  013AAA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26772  013AB0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26773  013AB6  ECEB  F0E2         	call	_atoi	;wreg free
 26774  013ABA  0060  F0A8  F04C   	movff	btemp,_prec
 26775  013AC0  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 26776                           
 26777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26778  013AC6  D00B               	goto	l16629
 26779  013AC8                     l16627:
 26780                           
 26781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 26782                           ;stkvar	_fmt @ sp[(-32)+-4]
 26783  013AC8  0EDC               	movlw	-36
 26784  013ACA  006F FF8F FFD9     	movff	plusw1,fsr2l
 26785  013AD0  0EDD               	movlw	-35
 26786  013AD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 26787  013AD8  2ADE               	incf	postinc2,f,c
 26788  013ADA  0E00               	movlw	0
 26789  013ADC  22DD               	addwfc	postdec2,f,c
 26790  013ADE                     l16629:
 26791  013ADE  0ED0               	movlw	208
 26792  013AE0  6E34               	movwf	(btemp+10)^0,c
 26793  013AE2  0EFF               	movlw	255
 26794  013AE4  6E35               	movwf	(btemp+11)^0,c
 26795                           
 26796                           ;stkvar	_fmt @ sp[(-32)+-4]
 26797  013AE6  0EDC               	movlw	-36
 26798  013AE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26799  013AEE  0EDD               	movlw	-35
 26800  013AF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26801  013AF6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26802  013AFC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26803  013B02                     	if	0	;tblptru may be non-zero
 26804  013B02                     	endif
 26805  013B02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26806  013B02  0E00               	movlw	low (__mediumconst shr (0+16))
 26807  013B04  6EF8               	movwf	tblptru,c
 26808  013B06                     	endif
 26809  013B06  0008               	tblrd		*
 26810  013B08  50F5               	movf	tablat,w,c
 26811  013B0A  6E32               	movwf	(btemp+8)^0,c
 26812  013B0C  6A33               	clrf	(btemp+9)^0,c
 26813  013B0E  5034               	movf	(btemp+10)^0,w,c
 26814  013B10  2632               	addwf	(btemp+8)^0,f,c
 26815  013B12  5035               	movf	(btemp+11)^0,w,c
 26816  013B14  2233               	addwfc	(btemp+9)^0,f,c
 26817  013B16  5033               	movf	(btemp+9)^0,w,c
 26818  013B18  E106               	bnz	u16400
 26819  013B1A  0E0A               	movlw	10
 26820  013B1C  5C32               	subwf	(btemp+8)^0,w,c
 26821  013B1E  B0D8               	btfsc	status,0,c
 26822  013B20  D002               	goto	u16400
 26823  013B22  0E01               	movlw	1
 26824  013B24  D001               	goto	u16410
 26825  013B26                     u16400:
 26826  013B26  0E00               	movlw	0
 26827  013B28                     u16410:
 26828  013B28  6E34               	movwf	(btemp+10)^0,c
 26829  013B2A  6A35               	clrf	(btemp+11)^0,c
 26830                           
 26831                           ;stkvar	_vfpfcnvrt$6916 @ sp[(-32)+0]
 26832  013B2C  0EE0               	movlw	-32
 26833  013B2E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26834  013B34  0EE1               	movlw	-31
 26835  013B36  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26836                           
 26837                           ;stkvar	_vfpfcnvrt$6916 @ sp[(-32)+0]
 26838  013B3C  0EE0               	movlw	-32
 26839  013B3E  006F FF8C  F02A    	movff	plusw1,btemp
 26840  013B44  0EE1               	movlw	-31
 26841  013B46  50E3               	movf	plusw1,w,c
 26842  013B48  102A               	iorwf	btemp^0,w,c
 26843  013B4A  A4D8               	btfss	status,2,c
 26844  013B4C  D7BD               	goto	l16627
 26845  013B4E                     u16420:
 26846                           
 26847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 26848                           ;stkvar	_fmt @ sp[(-32)+-4]
 26849  013B4E  0EDC               	movlw	-36
 26850  013B50  006F FF8F FFD9     	movff	plusw1,fsr2l
 26851  013B56  0EDD               	movlw	-35
 26852  013B58  006F FF8F FFDA     	movff	plusw1,fsr2h
 26853  013B5E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26854  013B64  006F FF77 FFF7     	movff	postdec2,tblptrh
 26855  013B6A                     	if	0	;tblptru may be non-zero
 26856  013B6A                     	endif
 26857  013B6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26858  013B6A  0E00               	movlw	low (__mediumconst shr (0+16))
 26859  013B6C  6EF8               	movwf	tblptru,c
 26860  013B6E                     	endif
 26861  013B6E  0008               	tblrd		*
 26862  013B70  50F5               	movf	tablat,w,c
 26863  013B72  6EE6               	movwf	postinc1,c
 26864  013B74  0E00               	movlw	0
 26865  013B76  6EE6               	movwf	postinc1,c
 26866  013B78  ECB3  F00A         	call	_tolower	;wreg free
 26867                           
 26868                           ;stkvar	_ct @ sp[(-32)+26]
 26869  013B7C  0EFA               	movlw	-6
 26870  013B7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 26871                           
 26872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 26873                           ;stkvar	_ct @ sp[(-32)+26]
 26874  013B84  0EFA               	movlw	-6
 26875  013B86  50E3               	movf	plusw1,w,c
 26876  013B88  B4D8               	btfsc	status,2,c
 26877  013B8A  D05B               	goto	l16645
 26878                           
 26879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 26880                           ;stkvar	_ct @ sp[(-32)+26]
 26881  013B8C  0EFB               	movlw	251
 26882  013B8E  24E1               	addwf	fsr1l,w,c
 26883  013B90  6ED9               	movwf	fsr2l,c
 26884  013B92  0EFF               	movlw	255
 26885  013B94  20E2               	addwfc	fsr1h,w,c
 26886  013B96  6EDA               	movwf	fsr2h,c
 26887                           
 26888                           ;stkvar	_fmt @ sp[(-32)+-4]
 26889  013B98  0EDC               	movlw	-36
 26890  013B9A  006F FF8F FFE9     	movff	plusw1,fsr0l
 26891  013BA0  0EDD               	movlw	-35
 26892  013BA2  006F FF8F FFEA     	movff	plusw1,fsr0h
 26893  013BA8  006F FFB8  F034    	movff	postinc0,btemp+10
 26894  013BAE  006F FFB4  F035    	movff	postdec0,btemp+11
 26895  013BB4  0E01               	movlw	1
 26896  013BB6  2634               	addwf	(btemp+10)^0,f,c
 26897  013BB8  0E00               	movlw	0
 26898  013BBA  2235               	addwfc	(btemp+11)^0,f,c
 26899  013BBC  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26900  013BC2  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26901  013BC8                     	if	0	;tblptru may be non-zero
 26902  013BC8                     	endif
 26903  013BC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26904  013BC8  0E00               	movlw	low (__mediumconst shr (0+16))
 26905  013BCA  6EF8               	movwf	tblptru,c
 26906  013BCC                     	endif
 26907  013BCC  0008               	tblrd		*
 26908  013BCE  50F5               	movf	tablat,w,c
 26909  013BD0  6EE6               	movwf	postinc1,c
 26910  013BD2  0E00               	movlw	0
 26911  013BD4  6EE6               	movwf	postinc1,c
 26912  013BD6  ECB3  F00A         	call	_tolower	;wreg free
 26913  013BDA  502A               	movf	btemp^0,w,c
 26914  013BDC  6EDF               	movwf	indf2,c
 26915                           
 26916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 26917                           ;stkvar	_ct @ sp[(-32)+26]
 26918  013BDE  0EFB               	movlw	251
 26919  013BE0  24E1               	addwf	fsr1l,w,c
 26920  013BE2  6ED9               	movwf	fsr2l,c
 26921  013BE4  0EFF               	movlw	255
 26922  013BE6  20E2               	addwfc	fsr1h,w,c
 26923  013BE8  6EDA               	movwf	fsr2h,c
 26924  013BEA  50DF               	movf	indf2,w,c
 26925  013BEC  B4D8               	btfsc	status,2,c
 26926  013BEE  D029               	goto	l16645
 26927                           
 26928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 26929                           ;stkvar	_ct @ sp[(-32)+26]
 26930  013BF0  0EFC               	movlw	252
 26931  013BF2  24E1               	addwf	fsr1l,w,c
 26932  013BF4  6ED9               	movwf	fsr2l,c
 26933  013BF6  0EFF               	movlw	255
 26934  013BF8  20E2               	addwfc	fsr1h,w,c
 26935  013BFA  6EDA               	movwf	fsr2h,c
 26936                           
 26937                           ;stkvar	_fmt @ sp[(-32)+-4]
 26938  013BFC  0EDC               	movlw	-36
 26939  013BFE  006F FF8F FFE9     	movff	plusw1,fsr0l
 26940  013C04  0EDD               	movlw	-35
 26941  013C06  006F FF8F FFEA     	movff	plusw1,fsr0h
 26942  013C0C  006F FFB8  F034    	movff	postinc0,btemp+10
 26943  013C12  006F FFB4  F035    	movff	postdec0,btemp+11
 26944  013C18  0E02               	movlw	2
 26945  013C1A  2634               	addwf	(btemp+10)^0,f,c
 26946  013C1C  0E00               	movlw	0
 26947  013C1E  2235               	addwfc	(btemp+11)^0,f,c
 26948  013C20  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26949  013C26  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26950  013C2C                     	if	0	;tblptru may be non-zero
 26951  013C2C                     	endif
 26952  013C2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26953  013C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 26954  013C2E  6EF8               	movwf	tblptru,c
 26955  013C30                     	endif
 26956  013C30  0008               	tblrd		*
 26957  013C32  50F5               	movf	tablat,w,c
 26958  013C34  6EE6               	movwf	postinc1,c
 26959  013C36  0E00               	movlw	0
 26960  013C38  6EE6               	movwf	postinc1,c
 26961  013C3A  ECB3  F00A         	call	_tolower	;wreg free
 26962  013C3E  502A               	movf	btemp^0,w,c
 26963  013C40  6EDF               	movwf	indf2,c
 26964  013C42                     l16645:
 26965                           
 26966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 26967                           ;stkvar	_fmt @ sp[(-32)+-4]
 26968  013C42  0EDC               	movlw	-36
 26969  013C44  006F FF8F FFD9     	movff	plusw1,fsr2l
 26970  013C4A  0EDD               	movlw	-35
 26971  013C4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26972  013C52  006F FF7B FFF6     	movff	postinc2,tblptrl
 26973  013C58  006F FF77 FFF7     	movff	postdec2,tblptrh
 26974  013C5E                     	if	0	;tblptru may be non-zero
 26975  013C5E                     	endif
 26976  013C5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26977  013C5E  0E00               	movlw	low (__mediumconst shr (0+16))
 26978  013C60  6EF8               	movwf	tblptru,c
 26979  013C62                     	endif
 26980  013C62  0008               	tblrd		*
 26981  013C64  50F5               	movf	tablat,w,c
 26982  013C66  0A63               	xorlw	99
 26983  013C68  A4D8               	btfss	status,2,c
 26984  013C6A  D037               	goto	l16655
 26985                           
 26986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 26987                           ;stkvar	_fmt @ sp[(-32)+-4]
 26988  013C6C  0EDC               	movlw	-36
 26989  013C6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26990  013C74  0EDD               	movlw	-35
 26991  013C76  006F FF8F FFDA     	movff	plusw1,fsr2h
 26992  013C7C  2ADE               	incf	postinc2,f,c
 26993  013C7E  0E00               	movlw	0
 26994  013C80  22DD               	addwfc	postdec2,f,c
 26995                           
 26996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 26997                           ;stkvar	_ap @ sp[(-32)+-6]
 26998  013C82  0EDA               	movlw	-38
 26999  013C84  006F FF8F FFD9     	movff	plusw1,fsr2l
 27000  013C8A  0EDB               	movlw	-37
 27001  013C8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27002  013C92  0E02               	movlw	2
 27003  013C94  5EDE               	subwf	postinc2,f,c
 27004  013C96  0E00               	movlw	0
 27005  013C98  5ADD               	subwfb	postdec2,f,c
 27006  013C9A  006F FF78  F034    	movff	postinc2,btemp+10
 27007  013CA0  006F FF74  F035    	movff	postdec2,btemp+11
 27008  013CA6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27009  013CAC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27010  013CB2  50DF               	movf	indf2,w,c
 27011  013CB4  6E35               	movwf	(btemp+11)^0,c
 27012                           
 27013                           ;stkvar	_c @ sp[(-32)+31]
 27014  013CB6  0EFF               	movlw	-1
 27015  013CB8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27016                           
 27017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 27018                           ;stkvar	_c @ sp[(-32)+31]
 27019  013CBE  0EFF               	movlw	-1
 27020  013CC0  50E3               	movf	plusw1,w,c
 27021  013CC2  6EE6               	movwf	postinc1,c
 27022                           
 27023                           ;stkvar	_fp @ sp[(-33)+-2]
 27024  013CC4  0EDD               	movlw	-35
 27025  013CC6  006F FF8F FFE6     	movff	plusw1,postinc1
 27026  013CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 27027  013CD2  EC2D  F00A         	call	_ctoa	;wreg free
 27028  013CD6  EFE6  F0A3         	goto	l2688
 27029  013CDA                     l16655:
 27030                           
 27031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 27032                           ;stkvar	_fmt @ sp[(-32)+-4]
 27033  013CDA  0EDC               	movlw	-36
 27034  013CDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27035  013CE2  0EDD               	movlw	-35
 27036  013CE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27037  013CEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 27038  013CF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 27039  013CF6                     	if	0	;tblptru may be non-zero
 27040  013CF6                     	endif
 27041  013CF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27042  013CF6  0E00               	movlw	low (__mediumconst shr (0+16))
 27043  013CF8  6EF8               	movwf	tblptru,c
 27044  013CFA                     	endif
 27045  013CFA  0008               	tblrd		*
 27046  013CFC  50F5               	movf	tablat,w,c
 27047  013CFE  0A64               	xorlw	100
 27048  013D00  B4D8               	btfsc	status,2,c
 27049  013D02  D015               	goto	u16470
 27050                           
 27051                           ;stkvar	_fmt @ sp[(-32)+-4]
 27052  013D04  0EDC               	movlw	-36
 27053  013D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 27054  013D0C  0EDD               	movlw	-35
 27055  013D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27056  013D14  006F FF7B FFF6     	movff	postinc2,tblptrl
 27057  013D1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 27058  013D20                     	if	0	;tblptru may be non-zero
 27059  013D20                     	endif
 27060  013D20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27061  013D20  0E00               	movlw	low (__mediumconst shr (0+16))
 27062  013D22  6EF8               	movwf	tblptru,c
 27063  013D24                     	endif
 27064  013D24  0008               	tblrd		*
 27065  013D26  50F5               	movf	tablat,w,c
 27066  013D28  0A69               	xorlw	105
 27067  013D2A  A4D8               	btfss	status,2,c
 27068  013D2C  D076               	goto	l16667
 27069  013D2E                     u16470:
 27070                           
 27071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 27072                           ;stkvar	_fmt @ sp[(-32)+-4]
 27073  013D2E  0EDC               	movlw	-36
 27074  013D30  006F FF8F FFD9     	movff	plusw1,fsr2l
 27075  013D36  0EDD               	movlw	-35
 27076  013D38  006F FF8F FFDA     	movff	plusw1,fsr2h
 27077  013D3E  2ADE               	incf	postinc2,f,c
 27078  013D40  0E00               	movlw	0
 27079  013D42  22DD               	addwfc	postdec2,f,c
 27080                           
 27081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 27082                           ;stkvar	_ap @ sp[(-32)+-6]
 27083  013D44  0EDA               	movlw	-38
 27084  013D46  006F FF8F FFD9     	movff	plusw1,fsr2l
 27085  013D4C  0EDB               	movlw	-37
 27086  013D4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27087  013D54  0E02               	movlw	2
 27088  013D56  5EDE               	subwf	postinc2,f,c
 27089  013D58  0E00               	movlw	0
 27090  013D5A  5ADD               	subwfb	postdec2,f,c
 27091  013D5C  006F FF78  F034    	movff	postinc2,btemp+10
 27092  013D62  006F FF74  F035    	movff	postdec2,btemp+11
 27093  013D68  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27094  013D6E  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27095  013D74  006F FF78  F034    	movff	postinc2,btemp+10
 27096  013D7A  006F FF74  F035    	movff	postdec2,btemp+11
 27097                           
 27098                           ;stkvar	_ll @ sp[(-32)+14]
 27099  013D80  0EEE               	movlw	-18
 27100  013D82  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27101  013D88  0EEF               	movlw	-17
 27102  013D8A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27103  013D90  6A2A               	clrf	btemp^0,c
 27104  013D92  BEE3               	btfsc	plusw1,7,c
 27105  013D94  682A               	setf	btemp^0,c
 27106  013D96  0EF0               	movlw	-16
 27107  013D98  0060  F0AB  FFE3   	movff	btemp,plusw1
 27108  013D9E  0EF1               	movlw	-15
 27109  013DA0  0060  F0AB  FFE3   	movff	btemp,plusw1
 27110  013DA6  0EF2               	movlw	-14
 27111  013DA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 27112  013DAE  0EF3               	movlw	-13
 27113  013DB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 27114  013DB6  0EF4               	movlw	-12
 27115  013DB8  0060  F0AB  FFE3   	movff	btemp,plusw1
 27116  013DBE  0EF5               	movlw	-11
 27117  013DC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 27118  013DC6                     l16663:
 27119                           
 27120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 27121                           ;stkvar	_ll @ sp[(-32)+14]
 27122  013DC6  50E1               	movf	fsr1l,w,c
 27123  013DC8  0FEE               	addlw	-18
 27124  013DCA  6ED9               	movwf	fsr2l,c
 27125  013DCC  50E2               	movf	fsr1h,w,c
 27126  013DCE  6EDA               	movwf	fsr2h,c
 27127  013DD0  0EFF               	movlw	255
 27128  013DD2  22DA               	addwfc	fsr2h,f,c
 27129  013DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 27130  013DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 27131  013DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 27132  013DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 27133  013DEC  006F FF7B FFE6     	movff	postinc2,postinc1
 27134  013DF2  006F FF7B FFE6     	movff	postinc2,postinc1
 27135  013DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 27136  013DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 27137                           
 27138                           ;stkvar	_fp @ sp[(-40)+-2]
 27139  013E04  0ED6               	movlw	-42
 27140  013E06  006F FF8F FFE6     	movff	plusw1,postinc1
 27141  013E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 27142  013E12  ECFD  F0CA         	call	_dtoa	;wreg free
 27143  013E16  EFE6  F0A3         	goto	l2688
 27144  013E1A                     l16667:
 27145                           
 27146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 27147  013E1A  0E02               	movlw	2
 27148  013E1C  6EE6               	movwf	postinc1,c
 27149  013E1E  0E00               	movlw	0
 27150  013E20  6EE6               	movwf	postinc1,c
 27151  013E22  0EED               	movlw	low STR_112
 27152  013E24  6EE6               	movwf	postinc1,c
 27153  013E26  0EFF               	movlw	high STR_112
 27154  013E28  6EE6               	movwf	postinc1,c
 27155                           
 27156                           ;stkvar	_fmt @ sp[(-36)+-4]
 27157  013E2A  0ED8               	movlw	-40
 27158  013E2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27159  013E32  0ED9               	movlw	-39
 27160  013E34  006F FF8F FFDA     	movff	plusw1,fsr2h
 27161  013E3A  006F FF78  F034    	movff	postinc2,btemp+10
 27162  013E40  006F FF74  F035    	movff	postdec2,btemp+11
 27163  013E46  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27164  013E4C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27165  013E52  ECA2  F0E8         	call	_strncmp	;wreg free
 27166  013E56  502A               	movf	btemp^0,w,c
 27167  013E58  102B               	iorwf	(btemp+1)^0,w,c
 27168  013E5A  B4D8               	btfsc	status,2,c
 27169  013E5C  D022               	goto	u16490
 27170  013E5E  0E02               	movlw	2
 27171  013E60  6EE6               	movwf	postinc1,c
 27172  013E62  0E00               	movlw	0
 27173  013E64  6EE6               	movwf	postinc1,c
 27174  013E66  0EF3               	movlw	low STR_116
 27175  013E68  6EE6               	movwf	postinc1,c
 27176  013E6A  0EFF               	movlw	high STR_116
 27177  013E6C  6EE6               	movwf	postinc1,c
 27178                           
 27179                           ;stkvar	_fmt @ sp[(-36)+-4]
 27180  013E6E  0ED8               	movlw	-40
 27181  013E70  006F FF8F FFD9     	movff	plusw1,fsr2l
 27182  013E76  0ED9               	movlw	-39
 27183  013E78  006F FF8F FFDA     	movff	plusw1,fsr2h
 27184  013E7E  006F FF78  F034    	movff	postinc2,btemp+10
 27185  013E84  006F FF74  F035    	movff	postdec2,btemp+11
 27186  013E8A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27187  013E90  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27188  013E96  ECA2  F0E8         	call	_strncmp	;wreg free
 27189  013E9A  502A               	movf	btemp^0,w,c
 27190  013E9C  102B               	iorwf	(btemp+1)^0,w,c
 27191  013E9E  A4D8               	btfss	status,2,c
 27192  013EA0  D069               	goto	l16679
 27193  013EA2                     u16490:
 27194                           
 27195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 27196                           ;stkvar	_fmt @ sp[(-32)+-4]
 27197  013EA2  0EDC               	movlw	-36
 27198  013EA4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27199  013EAA  0EDD               	movlw	-35
 27200  013EAC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27201  013EB2  0E02               	movlw	2
 27202  013EB4  26DE               	addwf	postinc2,f,c
 27203  013EB6  0E00               	movlw	0
 27204  013EB8  22DD               	addwfc	postdec2,f,c
 27205                           
 27206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 27207                           ;stkvar	_ap @ sp[(-32)+-6]
 27208  013EBA  0EDA               	movlw	-38
 27209  013EBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27210  013EC2  0EDB               	movlw	-37
 27211  013EC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27212  013ECA  0E04               	movlw	4
 27213  013ECC  5EDE               	subwf	postinc2,f,c
 27214  013ECE  0E00               	movlw	0
 27215  013ED0  5ADD               	subwfb	postdec2,f,c
 27216  013ED2  006F FF78  F034    	movff	postinc2,btemp+10
 27217  013ED8  006F FF74  F035    	movff	postdec2,btemp+11
 27218  013EDE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27219  013EE4  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27220  013EEA  006F FF78  F032    	movff	postinc2,btemp+8
 27221  013EF0  006F FF78  F033    	movff	postinc2,btemp+9
 27222  013EF6  006F FF78  F034    	movff	postinc2,btemp+10
 27223  013EFC  006F FF78  F035    	movff	postinc2,btemp+11
 27224  013F02  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 27225  013F08  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 27226  013F0E  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 27227  013F14  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 27228  013F1A  6A3E               	clrf	(btemp+20)^0,c
 27229  013F1C  BE3D               	btfsc	(btemp+19)^0,7,c
 27230  013F1E  683E               	setf	(btemp+20)^0,c
 27231  013F20  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 27232  013F26  0060  F0F8  F040   	movff	btemp+20,btemp+22
 27233  013F2C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 27234                           
 27235                           ;stkvar	_ll @ sp[(-32)+14]
 27236  013F32  0EEE               	movlw	-18
 27237  013F34  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27238  013F3A  0EEF               	movlw	-17
 27239  013F3C  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27240  013F42  0EF0               	movlw	-16
 27241  013F44  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27242  013F4A  0EF1               	movlw	-15
 27243  013F4C  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27244  013F52  0EF2               	movlw	-14
 27245  013F54  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27246  013F5A  0EF3               	movlw	-13
 27247  013F5C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27248  013F62  0EF4               	movlw	-12
 27249  013F64  0060  F103  FFE3   	movff	btemp+22,plusw1
 27250  013F6A  0EF5               	movlw	-11
 27251  013F6C  0060  F107  FFE3   	movff	btemp+23,plusw1
 27252  013F72  D729               	goto	l16663
 27253  013F74                     l16679:
 27254                           
 27255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 27256                           ;stkvar	_ct @ sp[(-32)+26]
 27257  013F74  0EFA               	movlw	-6
 27258  013F76  006F FF8C  F02A    	movff	plusw1,btemp
 27259  013F7C  0E66               	movlw	102
 27260  013F7E  182A               	xorwf	btemp^0,w,c
 27261  013F80  A4D8               	btfss	status,2,c
 27262  013F82  D06E               	goto	l16691
 27263                           
 27264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 27265                           ;stkvar	_fmt @ sp[(-32)+-4]
 27266  013F84  0EDC               	movlw	-36
 27267  013F86  006F FF8F FFD9     	movff	plusw1,fsr2l
 27268  013F8C  0EDD               	movlw	-35
 27269  013F8E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27270  013F94  006F FF7B FFF6     	movff	postinc2,tblptrl
 27271  013F9A  006F FF77 FFF7     	movff	postdec2,tblptrh
 27272  013FA0                     	if	0	;tblptru may be non-zero
 27273  013FA0                     	endif
 27274  013FA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27275  013FA0  0E00               	movlw	low (__mediumconst shr (0+16))
 27276  013FA2  6EF8               	movwf	tblptru,c
 27277  013FA4                     	endif
 27278                           
 27279                           ;stkvar	_c @ sp[(-32)+31]
 27280  013FA4  0008               	tblrd		*
 27281  013FA6  0EFF               	movlw	-1
 27282  013FA8  006F FFD7 FFE3     	movff	tablat,plusw1
 27283                           
 27284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 27285                           ;stkvar	_fmt @ sp[(-32)+-4]
 27286  013FAE  0EDC               	movlw	-36
 27287  013FB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 27288  013FB6  0EDD               	movlw	-35
 27289  013FB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 27290  013FBE  2ADE               	incf	postinc2,f,c
 27291  013FC0  0E00               	movlw	0
 27292  013FC2  22DD               	addwfc	postdec2,f,c
 27293                           
 27294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 27295                           ;stkvar	_ap @ sp[(-32)+-6]
 27296  013FC4  0EDA               	movlw	-38
 27297  013FC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 27298  013FCC  0EDB               	movlw	-37
 27299  013FCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 27300  013FD4  0E04               	movlw	4
 27301  013FD6  5EDE               	subwf	postinc2,f,c
 27302  013FD8  0E00               	movlw	0
 27303  013FDA  5ADD               	subwfb	postdec2,f,c
 27304  013FDC  006F FF78  F034    	movff	postinc2,btemp+10
 27305  013FE2  006F FF74  F035    	movff	postdec2,btemp+11
 27306  013FE8  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27307  013FEE  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27308  013FF4  006F FF78  F032    	movff	postinc2,btemp+8
 27309  013FFA  006F FF78  F033    	movff	postinc2,btemp+9
 27310  014000  006F FF78  F034    	movff	postinc2,btemp+10
 27311  014006  006F FF78  F035    	movff	postinc2,btemp+11
 27312                           
 27313                           ;stkvar	_f @ sp[(-32)+22]
 27314  01400C  0EF6               	movlw	-10
 27315  01400E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27316  014014  0EF7               	movlw	-9
 27317  014016  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27318  01401C  0EF8               	movlw	-8
 27319  01401E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27320  014024  0EF9               	movlw	-7
 27321  014026  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27322  01402C                     l16687:
 27323                           
 27324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 27325                           ;stkvar	_c @ sp[(-32)+31]
 27326  01402C  0EFF               	movlw	-1
 27327  01402E  50E3               	movf	plusw1,w,c
 27328  014030  6EE6               	movwf	postinc1,c
 27329                           
 27330                           ;stkvar	_f @ sp[(-33)+22]
 27331  014032  0EF5               	movlw	-11
 27332  014034  006F FF8F FFE6     	movff	plusw1,postinc1
 27333  01403A  006F FF8F FFE6     	movff	plusw1,postinc1
 27334  014040  006F FF8F FFE6     	movff	plusw1,postinc1
 27335  014046  006F FF8F FFE6     	movff	plusw1,postinc1
 27336                           
 27337                           ;stkvar	_fp @ sp[(-37)+-2]
 27338  01404C  0ED9               	movlw	-39
 27339  01404E  006F FF8F FFE6     	movff	plusw1,postinc1
 27340  014054  006F FF8F FFE6     	movff	plusw1,postinc1
 27341  01405A  EC8A  F08A         	call	_efgtoa	;wreg free
 27342  01405E  D3B6               	goto	l2688
 27343  014060                     l16691:
 27344                           
 27345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 27346  014060  0E02               	movlw	2
 27347  014062  6EE6               	movwf	postinc1,c
 27348  014064  0E00               	movlw	0
 27349  014066  6EE6               	movwf	postinc1,c
 27350  014068  0EF0               	movlw	low STR_121
 27351  01406A  6EE6               	movwf	postinc1,c
 27352  01406C  0EFF               	movlw	high STR_121
 27353  01406E  6EE6               	movwf	postinc1,c
 27354                           
 27355                           ;stkvar	_ct @ sp[(-36)+26]
 27356  014070  0EF6               	movlw	246
 27357  014072  24E1               	addwf	fsr1l,w,c
 27358  014074  6E2A               	movwf	btemp^0,c
 27359  014076  0EFF               	movlw	255
 27360  014078  20E2               	addwfc	fsr1h,w,c
 27361  01407A  6E2B               	movwf	(btemp+1)^0,c
 27362  01407C  0060  F0AB  FFE6   	movff	btemp,postinc1
 27363  014082  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 27364  014088  ECA2  F0E8         	call	_strncmp	;wreg free
 27365  01408C  502A               	movf	btemp^0,w,c
 27366  01408E  102B               	iorwf	(btemp+1)^0,w,c
 27367  014090  A4D8               	btfss	status,2,c
 27368  014092  D096               	goto	l16711
 27369                           
 27370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 27371                           ;stkvar	_fmt @ sp[(-32)+-4]
 27372  014094  0EDC               	movlw	-36
 27373  014096  006F FF8F FFD9     	movff	plusw1,fsr2l
 27374  01409C  0EDD               	movlw	-35
 27375  01409E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27376  0140A4  006F FF78  F034    	movff	postinc2,btemp+10
 27377  0140AA  006F FF74  F035    	movff	postdec2,btemp+11
 27378  0140B0  0E01               	movlw	1
 27379  0140B2  2634               	addwf	(btemp+10)^0,f,c
 27380  0140B4  0E00               	movlw	0
 27381  0140B6  2235               	addwfc	(btemp+11)^0,f,c
 27382  0140B8  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27383  0140BE  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27384  0140C4                     	if	0	;tblptru may be non-zero
 27385  0140C4                     	endif
 27386  0140C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27387  0140C4  0E00               	movlw	low (__mediumconst shr (0+16))
 27388  0140C6  6EF8               	movwf	tblptru,c
 27389  0140C8                     	endif
 27390                           
 27391                           ;stkvar	_c @ sp[(-32)+31]
 27392  0140C8  0008               	tblrd		*
 27393  0140CA  0EFF               	movlw	-1
 27394  0140CC  006F FFD7 FFE3     	movff	tablat,plusw1
 27395  0140D2  0EBF               	movlw	191
 27396  0140D4  6E34               	movwf	(btemp+10)^0,c
 27397  0140D6  0EFF               	movlw	255
 27398  0140D8  6E35               	movwf	(btemp+11)^0,c
 27399                           
 27400                           ;stkvar	_fmt @ sp[(-32)+-4]
 27401  0140DA  0EDC               	movlw	-36
 27402  0140DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27403  0140E2  0EDD               	movlw	-35
 27404  0140E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27405  0140EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 27406  0140F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 27407  0140F6                     	if	0	;tblptru may be non-zero
 27408  0140F6                     	endif
 27409  0140F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27410  0140F6  0E00               	movlw	low (__mediumconst shr (0+16))
 27411  0140F8  6EF8               	movwf	tblptru,c
 27412  0140FA                     	endif
 27413  0140FA  0008               	tblrd		*
 27414  0140FC  50F5               	movf	tablat,w,c
 27415  0140FE  6E32               	movwf	(btemp+8)^0,c
 27416  014100  6A33               	clrf	(btemp+9)^0,c
 27417  014102  5034               	movf	(btemp+10)^0,w,c
 27418  014104  2632               	addwf	(btemp+8)^0,f,c
 27419  014106  5035               	movf	(btemp+11)^0,w,c
 27420  014108  2233               	addwfc	(btemp+9)^0,f,c
 27421  01410A  5033               	movf	(btemp+9)^0,w,c
 27422  01410C  E106               	bnz	u16520
 27423  01410E  0E1A               	movlw	26
 27424  014110  5C32               	subwf	(btemp+8)^0,w,c
 27425  014112  B0D8               	btfsc	status,0,c
 27426  014114  D002               	goto	u16520
 27427  014116  0E01               	movlw	1
 27428  014118  D001               	goto	u16530
 27429  01411A                     u16520:
 27430  01411A  0E00               	movlw	0
 27431  01411C                     u16530:
 27432  01411C  6E34               	movwf	(btemp+10)^0,c
 27433  01411E  6A35               	clrf	(btemp+11)^0,c
 27434                           
 27435                           ;stkvar	_vfpfcnvrt$6927 @ sp[(-32)+2]
 27436  014120  0EE2               	movlw	-30
 27437  014122  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27438  014128  0EE3               	movlw	-29
 27439  01412A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27440                           
 27441                           ;stkvar	_vfpfcnvrt$6927 @ sp[(-32)+2]
 27442  014130  0EE2               	movlw	-30
 27443  014132  006F FF8C  F02A    	movff	plusw1,btemp
 27444  014138  0EE3               	movlw	-29
 27445  01413A  50E3               	movf	plusw1,w,c
 27446  01413C  102A               	iorwf	btemp^0,w,c
 27447                           
 27448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 27449                           ;stkvar	_ap @ sp[(-32)+-6]
 27450                           
 27451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 27452                           
 27453                           ;stkvar	_f @ sp[(-32)+22]
 27454                           
 27455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 27456                           ;stkvar	_ap @ sp[(-32)+-6]
 27457  01413E  0EDA               	movlw	-38
 27458  014140  006F FF8F FFD9     	movff	plusw1,fsr2l
 27459  014146  0EDB               	movlw	-37
 27460  014148  006F FF8F FFDA     	movff	plusw1,fsr2h
 27461  01414E  0E04               	movlw	4
 27462  014150  5EDE               	subwf	postinc2,f,c
 27463  014152  0E00               	movlw	0
 27464  014154  5ADD               	subwfb	postdec2,f,c
 27465  014156  006F FF78  F034    	movff	postinc2,btemp+10
 27466  01415C  006F FF74  F035    	movff	postdec2,btemp+11
 27467  014162  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27468  014168  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27469  01416E  006F FF78  F032    	movff	postinc2,btemp+8
 27470  014174  006F FF78  F033    	movff	postinc2,btemp+9
 27471  01417A  006F FF78  F034    	movff	postinc2,btemp+10
 27472  014180  006F FF78  F035    	movff	postinc2,btemp+11
 27473                           
 27474                           ;stkvar	_f @ sp[(-32)+22]
 27475  014186  0EF6               	movlw	-10
 27476  014188  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27477  01418E  0EF7               	movlw	-9
 27478  014190  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27479  014196  0EF8               	movlw	-8
 27480  014198  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27481  01419E  0EF9               	movlw	-7
 27482  0141A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27483                           
 27484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 27485                           ;stkvar	_fmt @ sp[(-32)+-4]
 27486  0141A6  0EDC               	movlw	-36
 27487  0141A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27488  0141AE  0EDD               	movlw	-35
 27489  0141B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27490  0141B6  0E02               	movlw	2
 27491  0141B8  26DE               	addwf	postinc2,f,c
 27492  0141BA  0E00               	movlw	0
 27493  0141BC  22DD               	addwfc	postdec2,f,c
 27494  0141BE  D736               	goto	l16687
 27495  0141C0                     l16711:
 27496                           
 27497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 27498                           ;stkvar	_fmt @ sp[(-32)+-4]
 27499  0141C0  0EDC               	movlw	-36
 27500  0141C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27501  0141C8  0EDD               	movlw	-35
 27502  0141CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27503  0141D0  006F FF7B FFF6     	movff	postinc2,tblptrl
 27504  0141D6  006F FF77 FFF7     	movff	postdec2,tblptrh
 27505  0141DC                     	if	0	;tblptru may be non-zero
 27506  0141DC                     	endif
 27507  0141DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27508  0141DC  0E00               	movlw	low (__mediumconst shr (0+16))
 27509  0141DE  6EF8               	movwf	tblptru,c
 27510  0141E0                     	endif
 27511  0141E0  0008               	tblrd		*
 27512  0141E2  50F5               	movf	tablat,w,c
 27513  0141E4  0A73               	xorlw	115
 27514  0141E6  A4D8               	btfss	status,2,c
 27515  0141E8  D042               	goto	l16721
 27516                           
 27517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 27518                           ;stkvar	_fmt @ sp[(-32)+-4]
 27519  0141EA  0EDC               	movlw	-36
 27520  0141EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27521  0141F2  0EDD               	movlw	-35
 27522  0141F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27523  0141FA  2ADE               	incf	postinc2,f,c
 27524  0141FC  0E00               	movlw	0
 27525  0141FE  22DD               	addwfc	postdec2,f,c
 27526                           
 27527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 27528                           ;stkvar	_ap @ sp[(-32)+-6]
 27529  014200  0EDA               	movlw	-38
 27530  014202  006F FF8F FFD9     	movff	plusw1,fsr2l
 27531  014208  0EDB               	movlw	-37
 27532  01420A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27533  014210  0E02               	movlw	2
 27534  014212  5EDE               	subwf	postinc2,f,c
 27535  014214  0E00               	movlw	0
 27536  014216  5ADD               	subwfb	postdec2,f,c
 27537  014218  006F FF78  F034    	movff	postinc2,btemp+10
 27538  01421E  006F FF74  F035    	movff	postdec2,btemp+11
 27539  014224  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27540  01422A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27541  014230  006F FF78  F034    	movff	postinc2,btemp+10
 27542  014236  006F FF74  F035    	movff	postdec2,btemp+11
 27543                           
 27544                           ;stkvar	_cp @ sp[(-32)+29]
 27545  01423C  0EFE               	movlw	-2
 27546  01423E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27547  014244  0EFD               	movlw	-3
 27548  014246  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27549                           
 27550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 27551                           ;stkvar	_cp @ sp[(-32)+29]
 27552  01424C  0EFD               	movlw	-3
 27553  01424E  006F FF8F FFE6     	movff	plusw1,postinc1
 27554  014254  006F FF8F FFE6     	movff	plusw1,postinc1
 27555                           
 27556                           ;stkvar	_fp @ sp[(-34)+-2]
 27557  01425A  0EDC               	movlw	-36
 27558  01425C  006F FF8F FFE6     	movff	plusw1,postinc1
 27559  014262  006F FF8F FFE6     	movff	plusw1,postinc1
 27560  014268  ECCC  F0DD         	call	_stoa	;wreg free
 27561  01426C  D2AF               	goto	l2688
 27562  01426E                     l16721:
 27563                           
 27564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 27565                           ;stkvar	_fmt @ sp[(-32)+-4]
 27566  01426E  0EDC               	movlw	-36
 27567  014270  006F FF8F FFD9     	movff	plusw1,fsr2l
 27568  014276  0EDD               	movlw	-35
 27569  014278  006F FF8F FFDA     	movff	plusw1,fsr2h
 27570  01427E  006F FF7B FFF6     	movff	postinc2,tblptrl
 27571  014284  006F FF77 FFF7     	movff	postdec2,tblptrh
 27572  01428A                     	if	0	;tblptru may be non-zero
 27573  01428A                     	endif
 27574  01428A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27575  01428A  0E00               	movlw	low (__mediumconst shr (0+16))
 27576  01428C  6EF8               	movwf	tblptru,c
 27577  01428E                     	endif
 27578  01428E  0008               	tblrd		*
 27579  014290  50F5               	movf	tablat,w,c
 27580  014292  0A75               	xorlw	117
 27581  014294  A4D8               	btfss	status,2,c
 27582  014296  D07C               	goto	l16731
 27583                           
 27584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 27585                           ;stkvar	_fmt @ sp[(-32)+-4]
 27586  014298  0EDC               	movlw	-36
 27587  01429A  006F FF8F FFD9     	movff	plusw1,fsr2l
 27588  0142A0  0EDD               	movlw	-35
 27589  0142A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27590  0142A8  2ADE               	incf	postinc2,f,c
 27591  0142AA  0E00               	movlw	0
 27592  0142AC  22DD               	addwfc	postdec2,f,c
 27593                           
 27594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27595                           ;stkvar	_ap @ sp[(-32)+-6]
 27596  0142AE  0EDA               	movlw	-38
 27597  0142B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 27598  0142B6  0EDB               	movlw	-37
 27599  0142B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 27600  0142BE  0E02               	movlw	2
 27601  0142C0  5EDE               	subwf	postinc2,f,c
 27602  0142C2  0E00               	movlw	0
 27603  0142C4  5ADD               	subwfb	postdec2,f,c
 27604  0142C6  006F FF78  F034    	movff	postinc2,btemp+10
 27605  0142CC  006F FF74  F035    	movff	postdec2,btemp+11
 27606  0142D2  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27607  0142D8  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27608  0142DE  006F FF78  F034    	movff	postinc2,btemp+10
 27609  0142E4  006F FF74  F035    	movff	postdec2,btemp+11
 27610  0142EA  5034               	movf	(btemp+10)^0,w,c
 27611  0142EC  6E3A               	movwf	(btemp+16)^0,c
 27612  0142EE  5035               	movf	(btemp+11)^0,w,c
 27613  0142F0  6E3B               	movwf	(btemp+17)^0,c
 27614  0142F2  6A3C               	clrf	(btemp+18)^0,c
 27615  0142F4  6A3D               	clrf	(btemp+19)^0,c
 27616  0142F6  6A3E               	clrf	(btemp+20)^0,c
 27617  0142F8  6A3F               	clrf	(btemp+21)^0,c
 27618  0142FA  6A40               	clrf	(btemp+22)^0,c
 27619  0142FC  6A41               	clrf	(btemp+23)^0,c
 27620                           
 27621                           ;stkvar	_llu @ sp[(-32)+6]
 27622  0142FE  0EE6               	movlw	-26
 27623  014300  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27624  014306  0EE7               	movlw	-25
 27625  014308  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27626  01430E  0EE8               	movlw	-24
 27627  014310  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27628  014316  0EE9               	movlw	-23
 27629  014318  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27630  01431E  0EEA               	movlw	-22
 27631  014320  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27632  014326  0EEB               	movlw	-21
 27633  014328  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27634  01432E  0EEC               	movlw	-20
 27635  014330  0060  F103  FFE3   	movff	btemp+22,plusw1
 27636  014336  0EED               	movlw	-19
 27637  014338  0060  F107  FFE3   	movff	btemp+23,plusw1
 27638                           
 27639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 27640                           ;stkvar	_llu @ sp[(-32)+6]
 27641  01433E  50E1               	movf	fsr1l,w,c
 27642  014340  0FE6               	addlw	-26
 27643  014342  6ED9               	movwf	fsr2l,c
 27644  014344  50E2               	movf	fsr1h,w,c
 27645  014346  6EDA               	movwf	fsr2h,c
 27646  014348  0EFF               	movlw	255
 27647  01434A  22DA               	addwfc	fsr2h,f,c
 27648  01434C  006F FF7B FFE6     	movff	postinc2,postinc1
 27649  014352  006F FF7B FFE6     	movff	postinc2,postinc1
 27650  014358  006F FF7B FFE6     	movff	postinc2,postinc1
 27651  01435E  006F FF7B FFE6     	movff	postinc2,postinc1
 27652  014364  006F FF7B FFE6     	movff	postinc2,postinc1
 27653  01436A  006F FF7B FFE6     	movff	postinc2,postinc1
 27654  014370  006F FF7B FFE6     	movff	postinc2,postinc1
 27655  014376  006F FF7B FFE6     	movff	postinc2,postinc1
 27656                           
 27657                           ;stkvar	_fp @ sp[(-40)+-2]
 27658  01437C  0ED6               	movlw	-42
 27659  01437E  006F FF8F FFE6     	movff	plusw1,postinc1
 27660  014384  006F FF8F FFE6     	movff	plusw1,postinc1
 27661  01438A  EC5F  F0D6         	call	_utoa	;wreg free
 27662  01438E  D21E               	goto	l2688
 27663  014390                     l16731:
 27664                           
 27665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 27666  014390  0E02               	movlw	2
 27667  014392  6EE6               	movwf	postinc1,c
 27668  014394  0E00               	movlw	0
 27669  014396  6EE6               	movwf	postinc1,c
 27670  014398  0EF6               	movlw	low STR_126
 27671  01439A  6EE6               	movwf	postinc1,c
 27672  01439C  0EFF               	movlw	high STR_126
 27673  01439E  6EE6               	movwf	postinc1,c
 27674                           
 27675                           ;stkvar	_fmt @ sp[(-36)+-4]
 27676  0143A0  0ED8               	movlw	-40
 27677  0143A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27678  0143A8  0ED9               	movlw	-39
 27679  0143AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27680  0143B0  006F FF78  F034    	movff	postinc2,btemp+10
 27681  0143B6  006F FF74  F035    	movff	postdec2,btemp+11
 27682  0143BC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27683  0143C2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27684  0143C8  ECA2  F0E8         	call	_strncmp	;wreg free
 27685  0143CC  502A               	movf	btemp^0,w,c
 27686  0143CE  102B               	iorwf	(btemp+1)^0,w,c
 27687  0143D0  A4D8               	btfss	status,2,c
 27688  0143D2  D039               	goto	l16741
 27689                           
 27690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 27691                           ;stkvar	_fmt @ sp[(-32)+-4]
 27692  0143D4  0EDC               	movlw	-36
 27693  0143D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 27694  0143DC  0EDD               	movlw	-35
 27695  0143DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 27696  0143E4  0E02               	movlw	2
 27697  0143E6  26DE               	addwf	postinc2,f,c
 27698  0143E8  0E00               	movlw	0
 27699  0143EA  22DD               	addwfc	postdec2,f,c
 27700                           
 27701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27702                           ;stkvar	_ap @ sp[(-32)+-6]
 27703  0143EC  0EDA               	movlw	-38
 27704  0143EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27705  0143F4  0EDB               	movlw	-37
 27706  0143F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27707  0143FC  0E04               	movlw	4
 27708  0143FE  5EDE               	subwf	postinc2,f,c
 27709  014400  0E00               	movlw	0
 27710  014402  5ADD               	subwfb	postdec2,f,c
 27711  014404  006F FF78  F034    	movff	postinc2,btemp+10
 27712  01440A  006F FF74  F035    	movff	postdec2,btemp+11
 27713  014410  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27714  014416  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27715  01441C  006F FF78  F032    	movff	postinc2,btemp+8
 27716  014422  006F FF78  F033    	movff	postinc2,btemp+9
 27717  014428  006F FF78  F034    	movff	postinc2,btemp+10
 27718  01442E  006F FF78  F035    	movff	postinc2,btemp+11
 27719  014434  5032               	movf	(btemp+8)^0,w,c
 27720  014436  6E3A               	movwf	(btemp+16)^0,c
 27721  014438  5033               	movf	(btemp+9)^0,w,c
 27722  01443A  6E3B               	movwf	(btemp+17)^0,c
 27723  01443C  5034               	movf	(btemp+10)^0,w,c
 27724  01443E  6E3C               	movwf	(btemp+18)^0,c
 27725  014440  5035               	movf	(btemp+11)^0,w,c
 27726  014442  6E3D               	movwf	(btemp+19)^0,c
 27727  014444  D758               	goto	L25
 27728  014446                     l16741:
 27729                           
 27730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 27731                           ;stkvar	_fmt @ sp[(-32)+-4]
 27732  014446  0EDC               	movlw	-36
 27733  014448  006F FF8F FFD9     	movff	plusw1,fsr2l
 27734  01444E  0EDD               	movlw	-35
 27735  014450  006F FF8F FFDA     	movff	plusw1,fsr2h
 27736  014456  006F FF7B FFF6     	movff	postinc2,tblptrl
 27737  01445C  006F FF77 FFF7     	movff	postdec2,tblptrh
 27738  014462                     	if	0	;tblptru may be non-zero
 27739  014462                     	endif
 27740  014462                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27741  014462  0E00               	movlw	low (__mediumconst shr (0+16))
 27742  014464  6EF8               	movwf	tblptru,c
 27743  014466                     	endif
 27744  014466  0008               	tblrd		*
 27745  014468  50F5               	movf	tablat,w,c
 27746  01446A  0A78               	xorlw	120
 27747  01446C  B4D8               	btfsc	status,2,c
 27748  01446E  D015               	goto	u16590
 27749                           
 27750                           ;stkvar	_fmt @ sp[(-32)+-4]
 27751  014470  0EDC               	movlw	-36
 27752  014472  006F FF8F FFD9     	movff	plusw1,fsr2l
 27753  014478  0EDD               	movlw	-35
 27754  01447A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27755  014480  006F FF7B FFF6     	movff	postinc2,tblptrl
 27756  014486  006F FF77 FFF7     	movff	postdec2,tblptrh
 27757  01448C                     	if	0	;tblptru may be non-zero
 27758  01448C                     	endif
 27759  01448C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27760  01448C  0E00               	movlw	low (__mediumconst shr (0+16))
 27761  01448E  6EF8               	movwf	tblptru,c
 27762  014490                     	endif
 27763  014490  0008               	tblrd		*
 27764  014492  50F5               	movf	tablat,w,c
 27765  014494  0A58               	xorlw	88
 27766  014496  A4D8               	btfss	status,2,c
 27767  014498  D094               	goto	l16755
 27768  01449A                     u16590:
 27769                           
 27770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 27771                           ;stkvar	_fmt @ sp[(-32)+-4]
 27772  01449A  0EDC               	movlw	-36
 27773  01449C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27774  0144A2  0EDD               	movlw	-35
 27775  0144A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27776  0144AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 27777  0144B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 27778  0144B6                     	if	0	;tblptru may be non-zero
 27779  0144B6                     	endif
 27780  0144B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27781  0144B6  0E00               	movlw	low (__mediumconst shr (0+16))
 27782  0144B8  6EF8               	movwf	tblptru,c
 27783  0144BA                     	endif
 27784                           
 27785                           ;stkvar	_c @ sp[(-32)+31]
 27786  0144BA  0008               	tblrd		*
 27787  0144BC  0EFF               	movlw	-1
 27788  0144BE  006F FFD7 FFE3     	movff	tablat,plusw1
 27789                           
 27790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 27791                           ;stkvar	_fmt @ sp[(-32)+-4]
 27792  0144C4  0EDC               	movlw	-36
 27793  0144C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 27794  0144CC  0EDD               	movlw	-35
 27795  0144CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 27796  0144D4  2ADE               	incf	postinc2,f,c
 27797  0144D6  0E00               	movlw	0
 27798  0144D8  22DD               	addwfc	postdec2,f,c
 27799                           
 27800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27801                           ;stkvar	_ap @ sp[(-32)+-6]
 27802  0144DA  0EDA               	movlw	-38
 27803  0144DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27804  0144E2  0EDB               	movlw	-37
 27805  0144E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27806  0144EA  0E02               	movlw	2
 27807  0144EC  5EDE               	subwf	postinc2,f,c
 27808  0144EE  0E00               	movlw	0
 27809  0144F0  5ADD               	subwfb	postdec2,f,c
 27810  0144F2  006F FF78  F034    	movff	postinc2,btemp+10
 27811  0144F8  006F FF74  F035    	movff	postdec2,btemp+11
 27812  0144FE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27813  014504  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27814  01450A  006F FF78  F034    	movff	postinc2,btemp+10
 27815  014510  006F FF74  F035    	movff	postdec2,btemp+11
 27816  014516  5034               	movf	(btemp+10)^0,w,c
 27817  014518  6E3A               	movwf	(btemp+16)^0,c
 27818  01451A  5035               	movf	(btemp+11)^0,w,c
 27819  01451C  6E3B               	movwf	(btemp+17)^0,c
 27820  01451E  6A3C               	clrf	(btemp+18)^0,c
 27821  014520  6A3D               	clrf	(btemp+19)^0,c
 27822  014522  6A3E               	clrf	(btemp+20)^0,c
 27823  014524  6A3F               	clrf	(btemp+21)^0,c
 27824  014526  6A40               	clrf	(btemp+22)^0,c
 27825  014528  6A41               	clrf	(btemp+23)^0,c
 27826                           
 27827                           ;stkvar	_llu @ sp[(-32)+6]
 27828  01452A  0EE6               	movlw	-26
 27829  01452C  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27830  014532  0EE7               	movlw	-25
 27831  014534  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27832  01453A  0EE8               	movlw	-24
 27833  01453C  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27834  014542  0EE9               	movlw	-23
 27835  014544  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27836  01454A  0EEA               	movlw	-22
 27837  01454C  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27838  014552  0EEB               	movlw	-21
 27839  014554  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27840  01455A  0EEC               	movlw	-20
 27841  01455C  0060  F103  FFE3   	movff	btemp+22,plusw1
 27842  014562  0EED               	movlw	-19
 27843  014564  0060  F107  FFE3   	movff	btemp+23,plusw1
 27844                           
 27845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 27846                           ;stkvar	_c @ sp[(-32)+31]
 27847  01456A  0EFF               	movlw	-1
 27848  01456C  50E3               	movf	plusw1,w,c
 27849  01456E  6EE6               	movwf	postinc1,c
 27850                           
 27851                           ;stkvar	_llu @ sp[(-33)+6]
 27852  014570  50E1               	movf	fsr1l,w,c
 27853  014572  0FE5               	addlw	-27
 27854  014574  6ED9               	movwf	fsr2l,c
 27855  014576  50E2               	movf	fsr1h,w,c
 27856  014578  6EDA               	movwf	fsr2h,c
 27857  01457A  0EFF               	movlw	255
 27858  01457C  22DA               	addwfc	fsr2h,f,c
 27859  01457E  006F FF7B FFE6     	movff	postinc2,postinc1
 27860  014584  006F FF7B FFE6     	movff	postinc2,postinc1
 27861  01458A  006F FF7B FFE6     	movff	postinc2,postinc1
 27862  014590  006F FF7B FFE6     	movff	postinc2,postinc1
 27863  014596  006F FF7B FFE6     	movff	postinc2,postinc1
 27864  01459C  006F FF7B FFE6     	movff	postinc2,postinc1
 27865  0145A2  006F FF7B FFE6     	movff	postinc2,postinc1
 27866  0145A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27867                           
 27868                           ;stkvar	_fp @ sp[(-41)+-2]
 27869  0145AE  0ED5               	movlw	-43
 27870  0145B0  006F FF8F FFE6     	movff	plusw1,postinc1
 27871  0145B6  006F FF8F FFE6     	movff	plusw1,postinc1
 27872  0145BC  EC6A  F0CF         	call	_xtoa	;wreg free
 27873  0145C0  D105               	goto	l2688
 27874  0145C2                     l16755:
 27875                           
 27876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 27877  0145C2  0E02               	movlw	2
 27878  0145C4  6EE6               	movwf	postinc1,c
 27879  0145C6  0E00               	movlw	0
 27880  0145C8  6EE6               	movwf	postinc1,c
 27881  0145CA  0EF9               	movlw	low STR_131
 27882  0145CC  6EE6               	movwf	postinc1,c
 27883  0145CE  0EFF               	movlw	high STR_131
 27884  0145D0  6EE6               	movwf	postinc1,c
 27885                           
 27886                           ;stkvar	_fmt @ sp[(-36)+-4]
 27887  0145D2  0ED8               	movlw	-40
 27888  0145D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27889  0145DA  0ED9               	movlw	-39
 27890  0145DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27891  0145E2  006F FF78  F034    	movff	postinc2,btemp+10
 27892  0145E8  006F FF74  F035    	movff	postdec2,btemp+11
 27893  0145EE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27894  0145F4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27895  0145FA  ECA2  F0E8         	call	_strncmp	;wreg free
 27896  0145FE  502A               	movf	btemp^0,w,c
 27897  014600  102B               	iorwf	(btemp+1)^0,w,c
 27898  014602  B4D8               	btfsc	status,2,c
 27899  014604  D022               	goto	u16610
 27900  014606  0E02               	movlw	2
 27901  014608  6EE6               	movwf	postinc1,c
 27902  01460A  0E00               	movlw	0
 27903  01460C  6EE6               	movwf	postinc1,c
 27904  01460E  0EEA               	movlw	low STR_135
 27905  014610  6EE6               	movwf	postinc1,c
 27906  014612  0EFF               	movlw	high STR_135
 27907  014614  6EE6               	movwf	postinc1,c
 27908                           
 27909                           ;stkvar	_fmt @ sp[(-36)+-4]
 27910  014616  0ED8               	movlw	-40
 27911  014618  006F FF8F FFD9     	movff	plusw1,fsr2l
 27912  01461E  0ED9               	movlw	-39
 27913  014620  006F FF8F FFDA     	movff	plusw1,fsr2h
 27914  014626  006F FF78  F034    	movff	postinc2,btemp+10
 27915  01462C  006F FF74  F035    	movff	postdec2,btemp+11
 27916  014632  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27917  014638  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27918  01463E  ECA2  F0E8         	call	_strncmp	;wreg free
 27919  014642  502A               	movf	btemp^0,w,c
 27920  014644  102B               	iorwf	(btemp+1)^0,w,c
 27921  014646  A4D8               	btfss	status,2,c
 27922  014648  D058               	goto	l16769
 27923  01464A                     u16610:
 27924                           
 27925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 27926                           ;stkvar	_fmt @ sp[(-32)+-4]
 27927  01464A  0EDC               	movlw	-36
 27928  01464C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27929  014652  0EDD               	movlw	-35
 27930  014654  006F FF8F FFDA     	movff	plusw1,fsr2h
 27931  01465A  006F FF78  F034    	movff	postinc2,btemp+10
 27932  014660  006F FF74  F035    	movff	postdec2,btemp+11
 27933  014666  0E01               	movlw	1
 27934  014668  2634               	addwf	(btemp+10)^0,f,c
 27935  01466A  0E00               	movlw	0
 27936  01466C  2235               	addwfc	(btemp+11)^0,f,c
 27937  01466E  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27938  014674  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27939  01467A                     	if	0	;tblptru may be non-zero
 27940  01467A                     	endif
 27941  01467A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27942  01467A  0E00               	movlw	low (__mediumconst shr (0+16))
 27943  01467C  6EF8               	movwf	tblptru,c
 27944  01467E                     	endif
 27945                           
 27946                           ;stkvar	_c @ sp[(-32)+31]
 27947  01467E  0008               	tblrd		*
 27948  014680  0EFF               	movlw	-1
 27949  014682  006F FFD7 FFE3     	movff	tablat,plusw1
 27950                           
 27951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 27952                           ;stkvar	_fmt @ sp[(-32)+-4]
 27953  014688  0EDC               	movlw	-36
 27954  01468A  006F FF8F FFD9     	movff	plusw1,fsr2l
 27955  014690  0EDD               	movlw	-35
 27956  014692  006F FF8F FFDA     	movff	plusw1,fsr2h
 27957  014698  0E02               	movlw	2
 27958  01469A  26DE               	addwf	postinc2,f,c
 27959  01469C  0E00               	movlw	0
 27960  01469E  22DD               	addwfc	postdec2,f,c
 27961                           
 27962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27963                           ;stkvar	_ap @ sp[(-32)+-6]
 27964  0146A0  0EDA               	movlw	-38
 27965  0146A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27966  0146A8  0EDB               	movlw	-37
 27967  0146AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27968  0146B0  0E04               	movlw	4
 27969  0146B2  5EDE               	subwf	postinc2,f,c
 27970  0146B4  0E00               	movlw	0
 27971  0146B6  5ADD               	subwfb	postdec2,f,c
 27972  0146B8  006F FF78  F034    	movff	postinc2,btemp+10
 27973  0146BE  006F FF74  F035    	movff	postdec2,btemp+11
 27974  0146C4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27975  0146CA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27976  0146D0  006F FF78  F032    	movff	postinc2,btemp+8
 27977  0146D6  006F FF78  F033    	movff	postinc2,btemp+9
 27978  0146DC  006F FF78  F034    	movff	postinc2,btemp+10
 27979  0146E2  006F FF78  F035    	movff	postinc2,btemp+11
 27980  0146E8  5032               	movf	(btemp+8)^0,w,c
 27981  0146EA  6E3A               	movwf	(btemp+16)^0,c
 27982  0146EC  5033               	movf	(btemp+9)^0,w,c
 27983  0146EE  6E3B               	movwf	(btemp+17)^0,c
 27984  0146F0  5034               	movf	(btemp+10)^0,w,c
 27985  0146F2  6E3C               	movwf	(btemp+18)^0,c
 27986  0146F4  5035               	movf	(btemp+11)^0,w,c
 27987  0146F6  6E3D               	movwf	(btemp+19)^0,c
 27988  0146F8  D714               	goto	L26
 27989  0146FA                     l16769:
 27990                           
 27991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 27992                           ;stkvar	_fmt @ sp[(-32)+-4]
 27993  0146FA  0EDC               	movlw	-36
 27994  0146FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27995  014702  0EDD               	movlw	-35
 27996  014704  006F FF8F FFDA     	movff	plusw1,fsr2h
 27997  01470A  006F FF7B FFF6     	movff	postinc2,tblptrl
 27998  014710  006F FF77 FFF7     	movff	postdec2,tblptrh
 27999  014716                     	if	0	;tblptru may be non-zero
 28000  014716                     	endif
 28001  014716                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28002  014716  0E00               	movlw	low (__mediumconst shr (0+16))
 28003  014718  6EF8               	movwf	tblptru,c
 28004  01471A                     	endif
 28005  01471A  0008               	tblrd		*
 28006  01471C  50F5               	movf	tablat,w,c
 28007  01471E  0A25               	xorlw	37
 28008  014720  A4D8               	btfss	status,2,c
 28009  014722  D01A               	goto	l16779
 28010                           
 28011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 28012                           ;stkvar	_fmt @ sp[(-32)+-4]
 28013  014724  0EDC               	movlw	-36
 28014  014726  006F FF8F FFD9     	movff	plusw1,fsr2l
 28015  01472C  0EDD               	movlw	-35
 28016  01472E  006F FF8F FFDA     	movff	plusw1,fsr2h
 28017  014734  2ADE               	incf	postinc2,f,c
 28018  014736  0E00               	movlw	0
 28019  014738  22DD               	addwfc	postdec2,f,c
 28020                           
 28021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 28022                           ;stkvar	_fp @ sp[(-32)+-2]
 28023  01473A  0EDE               	movlw	-34
 28024  01473C  006F FF8F FFE6     	movff	plusw1,postinc1
 28025  014742  006F FF8F FFE6     	movff	plusw1,postinc1
 28026  014748  0E25               	movlw	37
 28027  01474A  6EE6               	movwf	postinc1,c
 28028  01474C  0E00               	movlw	0
 28029  01474E  6EE6               	movwf	postinc1,c
 28030  014750  EC40  F0FC         	call	_fputc	;wreg free
 28031  014754                     l16775:
 28032                           
 28033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 28034  014754  0E01               	movlw	1
 28035  014756  D00C               	goto	L27
 28036  014758                     l16779:
 28037                           
 28038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 28039                           ;stkvar	_fmt @ sp[(-32)+-4]
 28040  014758  0EDC               	movlw	-36
 28041  01475A  006F FF8F FFD9     	movff	plusw1,fsr2l
 28042  014760  0EDD               	movlw	-35
 28043  014762  006F FF8F FFDA     	movff	plusw1,fsr2h
 28044  014768  2ADE               	incf	postinc2,f,c
 28045  01476A  0E00               	movlw	0
 28046  01476C  22DD               	addwfc	postdec2,f,c
 28047                           
 28048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 28049  01476E  0E00               	movlw	0
 28050  014770                     L27:
 28051  014770  6E2A               	movwf	btemp^0,c
 28052  014772  0E00               	movlw	0
 28053  014774  6E2B               	movwf	(btemp+1)^0,c
 28054  014776  D02A               	goto	l2688
 28055  014778                     l16785:
 28056                           
 28057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 28058                           ;stkvar	_fp @ sp[(-32)+-2]
 28059  014778  0EDE               	movlw	-34
 28060  01477A  006F FF8F FFE6     	movff	plusw1,postinc1
 28061  014780  006F FF8F FFE6     	movff	plusw1,postinc1
 28062                           
 28063                           ;stkvar	_fmt @ sp[(-34)+-4]
 28064  014786  0EDA               	movlw	-38
 28065  014788  006F FF8F FFD9     	movff	plusw1,fsr2l
 28066  01478E  0EDB               	movlw	-37
 28067  014790  006F FF8F FFDA     	movff	plusw1,fsr2h
 28068  014796  006F FF7B FFF6     	movff	postinc2,tblptrl
 28069  01479C  006F FF77 FFF7     	movff	postdec2,tblptrh
 28070  0147A2                     	if	0	;tblptru may be non-zero
 28071  0147A2                     	endif
 28072  0147A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28073  0147A2  0E00               	movlw	low (__mediumconst shr (0+16))
 28074  0147A4  6EF8               	movwf	tblptru,c
 28075  0147A6                     	endif
 28076  0147A6  0008               	tblrd		*
 28077  0147A8  50F5               	movf	tablat,w,c
 28078  0147AA  6EE6               	movwf	postinc1,c
 28079  0147AC  0E00               	movlw	0
 28080  0147AE  6EE6               	movwf	postinc1,c
 28081  0147B0  EC40  F0FC         	call	_fputc	;wreg free
 28082                           
 28083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 28084                           ;stkvar	_fmt @ sp[(-32)+-4]
 28085  0147B4  0EDC               	movlw	-36
 28086  0147B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 28087  0147BC  0EDD               	movlw	-35
 28088  0147BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 28089  0147C4  2ADE               	incf	postinc2,f,c
 28090  0147C6  0E00               	movlw	0
 28091  0147C8  22DD               	addwfc	postdec2,f,c
 28092  0147CA  D7C4               	goto	l16775
 28093  0147CC                     l2688:
 28094                           
 28095                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 28096  0147CC  0EDA               	movlw	218
 28097  0147CE  26E1               	addwf	fsr1l,f,c
 28098  0147D0  0EFF               	movlw	255
 28099  0147D2  22E2               	addwfc	fsr1h,f,c
 28100  0147D4  0012               	return		;funcret
 28101  0147D6                     __end_of_vfpfcnvrt:
 28102                           	opt callstack 0
 28103                           
 28104 ;; *************** function _xtoa *****************
 28105 ;; Defined at:
 28106 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28107 ;; Parameters:    Size  Location     Type
 28108 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28109 ;;		 -> f(6), NULL(0), 
 28110 ;;  d               8  [STACK] unsigned long long 
 28111 ;;  x               1  [STACK] unsigned char 
 28112 ;; Auto vars:     Size  Location     Type
 28113 ;;  n               8  [STACK] unsigned long long 
 28114 ;;  c               2  [STACK] int 
 28115 ;;  i               2  [STACK] int 
 28116 ;;  w               2  [STACK] int 
 28117 ;;  p               2  [STACK] int 
 28118 ;; Return value:  Size  Location     Type
 28119 ;;                  2  [STACK] int 
 28120 ;; Registers used:
 28121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28122 ;; Tracked objects:
 28123 ;;		On entry : 0/0
 28124 ;;		On exit  : 0/0
 28125 ;;		Unchanged: 0/0
 28126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28131 ;;Total ram usage:        0 bytes
 28132 ;; Hardware stack levels used:    1
 28133 ;; Hardware stack levels required when called:   20
 28134 ;; This function calls:
 28135 ;;		_isalpha
 28136 ;;		_isupper
 28137 ;;		_pad
 28138 ;;		_toupper
 28139 ;; This function is called by:
 28140 ;;		_vfpfcnvrt
 28141 ;; This function uses a reentrant model
 28142 ;;
 28143                           
 28144                           	psect	text94
 28145  019ED4                     __ptext94:
 28146                           	opt callstack 0
 28147  019ED4                     _xtoa:
 28148                           	opt callstack 0
 28149                           
 28150                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28151  019ED4  0E14               	movlw	20
 28152  019ED6  26E1               	addwf	fsr1l,f,c
 28153  019ED8  0E00               	movlw	0
 28154  019EDA  22E2               	addwfc	fsr1h,f,c
 28155                           
 28156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 28157                           
 28158                           ;incstack = 0
 28159 ;; hardware stack exceeded
 28160  019EDC  AE4D               	btfss	(_prec+1)^0,7,c
 28161                           
 28162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 28163  019EDE  924E               	bcf	_flags^0,1,c
 28164                           
 28165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 28166  019EE0  BE4D               	btfsc	(_prec+1)^0,7,c
 28167  019EE2  D005               	goto	u15800
 28168  019EE4  504D               	movf	(_prec+1)^0,w,c
 28169  019EE6  E110               	bnz	l16283
 28170  019EE8  044C               	decf	_prec^0,w,c
 28171  019EEA  B0D8               	btfsc	status,0,c
 28172  019EEC  D00D               	goto	l16283
 28173  019EEE                     u15800:
 28174  019EEE  0E01               	movlw	1
 28175  019EF0  6E34               	movwf	(btemp+10)^0,c
 28176  019EF2  0E00               	movlw	0
 28177  019EF4  6E35               	movwf	(btemp+11)^0,c
 28178                           
 28179                           ;stkvar	_p @ sp[(-20)+18]
 28180  019EF6  0EFE               	movlw	-2
 28181  019EF8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28182  019EFE  0EFF               	movlw	-1
 28183  019F00  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28184  019F06  D008               	goto	l2638
 28185  019F08                     l16283:
 28186                           
 28187                           ;stkvar	_p @ sp[(-20)+18]
 28188  019F08  0EFE               	movlw	-2
 28189  019F0A  0060  F133  FFE3   	movff	_prec,plusw1
 28190  019F10  0EFF               	movlw	-1
 28191  019F12  0060  F137  FFE3   	movff	_prec+1,plusw1
 28192  019F18                     l2638:
 28193                           
 28194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 28195                           ;stkvar	_w @ sp[(-20)+16]
 28196  019F18  0EFC               	movlw	-4
 28197  019F1A  0060  F12B  FFE3   	movff	_width,plusw1
 28198  019F20  0EFD               	movlw	-3
 28199  019F22  0060  F12F  FFE3   	movff	_width+1,plusw1
 28200                           
 28201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 28202  019F28  A84E               	btfss	_flags^0,4,c
 28203  019F2A  D00B               	goto	l16289
 28204                           
 28205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 28206                           ;stkvar	_w @ sp[(-20)+16]
 28207  019F2C  50E1               	movf	fsr1l,w,c
 28208  019F2E  0FFC               	addlw	-4
 28209  019F30  6ED9               	movwf	fsr2l,c
 28210  019F32  50E2               	movf	fsr1h,w,c
 28211  019F34  6EDA               	movwf	fsr2h,c
 28212  019F36  0EFF               	movlw	255
 28213  019F38  22DA               	addwfc	fsr2h,f,c
 28214  019F3A  0EFE               	movlw	254
 28215  019F3C  26DE               	addwf	postinc2,f,c
 28216  019F3E  0EFF               	movlw	255
 28217  019F40  22DD               	addwfc	postdec2,f,c
 28218  019F42                     l16289:
 28219                           
 28220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 28221                           ;stkvar	_d @ sp[(-20)+-10]
 28222  019F42  0EE2               	movlw	226
 28223  019F44  24E1               	addwf	fsr1l,w,c
 28224  019F46  6ED9               	movwf	fsr2l,c
 28225  019F48  0EFF               	movlw	255
 28226  019F4A  20E2               	addwfc	fsr1h,w,c
 28227  019F4C  6EDA               	movwf	fsr2h,c
 28228                           
 28229                           ;stkvar	_n @ sp[(-20)+4]
 28230  019F4E  0E08               	movlw	8
 28231  019F50  6E2A               	movwf	btemp^0,c
 28232  019F52  0EF0               	movlw	-16
 28233  019F54                     us1582999:
 28234  019F54  006F FF7B FFE3     	movff	postinc2,plusw1
 28235  019F5A  28E8               	incf	wreg,w,c
 28236  019F5C  2E2A               	decfsz	btemp^0,f,c
 28237  019F5E  D7FA               	bra	us1582999
 28238                           
 28239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 28240  019F60  0E4F               	movlw	79
 28241  019F62  6E34               	movwf	(btemp+10)^0,c
 28242  019F64  0E00               	movlw	0
 28243  019F66  6E35               	movwf	(btemp+11)^0,c
 28244                           
 28245                           ;stkvar	_i @ sp[(-20)+14]
 28246  019F68  0EFA               	movlw	-6
 28247  019F6A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28248  019F70  0EFB               	movlw	-5
 28249  019F72  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28250                           
 28251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 28252  019F78  0103               	movlb	3	; () banked
 28253  019F7A  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28254                           
 28255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28256  019F7C  D0EE               	goto	l16327
 28257  019F7E                     l16295:
 28258                           
 28259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 28260                           ;stkvar	_i @ sp[(-20)+14]
 28261  019F7E  50E1               	movf	fsr1l,w,c
 28262  019F80  0FFA               	addlw	-6
 28263  019F82  6ED9               	movwf	fsr2l,c
 28264  019F84  50E2               	movf	fsr1h,w,c
 28265  019F86  6EDA               	movwf	fsr2h,c
 28266  019F88  0EFF               	movlw	255
 28267  019F8A  22DA               	addwfc	fsr2h,f,c
 28268  019F8C  06DE               	decf	postinc2,f,c
 28269  019F8E  0E00               	movlw	0
 28270  019F90  5ADD               	subwfb	postdec2,f,c
 28271                           
 28272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 28273                           ;stkvar	_n @ sp[(-20)+4]
 28274  019F92  0EF0               	movlw	-16
 28275  019F94  006F FF8C  F034    	movff	plusw1,btemp+10
 28276  019F9A  0EF1               	movlw	-15
 28277  019F9C  006F FF8C  F035    	movff	plusw1,btemp+11
 28278  019FA2  0E0F               	movlw	15
 28279  019FA4  1634               	andwf	(btemp+10)^0,f,c
 28280  019FA6  0E00               	movlw	0
 28281  019FA8  1635               	andwf	(btemp+11)^0,f,c
 28282                           
 28283                           ;stkvar	_c @ sp[(-20)+12]
 28284  019FAA  0EF8               	movlw	-8
 28285  019FAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28286  019FB2  0EF9               	movlw	-7
 28287  019FB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28288                           
 28289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 28290                           ;stkvar	_c @ sp[(-20)+12]
 28291  019FBA  0EF9               	movlw	-7
 28292  019FBC  BEE3               	btfsc	plusw1,7,c
 28293  019FBE  D00F               	goto	l16303
 28294  019FC0  0EF9               	movlw	-7
 28295  019FC2  50E3               	movf	plusw1,w,c
 28296  019FC4  E108               	bnz	u15830
 28297  019FC6  0EF8               	movlw	-8
 28298  019FC8  006F FF8C  F02A    	movff	plusw1,btemp
 28299  019FCE  0E0A               	movlw	10
 28300  019FD0  5E2A               	subwf	btemp^0,f,c
 28301  019FD2  A0D8               	btfss	status,0,c
 28302  019FD4  D004               	goto	l16303
 28303  019FD6                     u15830:
 28304                           
 28305                           ;stkvar	_c @ sp[(-20)+12]
 28306  019FD6  0EF8               	movlw	-8
 28307  019FD8  50E3               	movf	plusw1,w,c
 28308  019FDA  0F57               	addlw	87
 28309  019FDC  D003               	goto	L28
 28310  019FDE                     l16303:
 28311                           
 28312                           ;stkvar	_c @ sp[(-20)+12]
 28313  019FDE  0EF8               	movlw	-8
 28314  019FE0  50E3               	movf	plusw1,w,c
 28315  019FE2  0F30               	addlw	48
 28316  019FE4                     L28:
 28317  019FE4  6E34               	movwf	(btemp+10)^0,c
 28318  019FE6  0EF9               	movlw	-7
 28319  019FE8  006F FF8C  F035    	movff	plusw1,btemp+11
 28320  019FEE  0E00               	movlw	0
 28321  019FF0  2235               	addwfc	(btemp+11)^0,f,c
 28322                           
 28323                           ;stkvar	_c @ sp[(-20)+12]
 28324  019FF2  0EF8               	movlw	-8
 28325  019FF4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28326  019FFA  0EF9               	movlw	-7
 28327  019FFC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28328  01A002  0EBF               	movlw	191
 28329  01A004  6E34               	movwf	(btemp+10)^0,c
 28330  01A006  0EFF               	movlw	255
 28331  01A008  6E35               	movwf	(btemp+11)^0,c
 28332                           
 28333                           ;stkvar	_x @ sp[(-20)+-11]
 28334  01A00A  0EE1               	movlw	-31
 28335  01A00C  50E3               	movf	plusw1,w,c
 28336  01A00E  6E32               	movwf	(btemp+8)^0,c
 28337  01A010  6A33               	clrf	(btemp+9)^0,c
 28338  01A012  5034               	movf	(btemp+10)^0,w,c
 28339  01A014  2632               	addwf	(btemp+8)^0,f,c
 28340  01A016  5035               	movf	(btemp+11)^0,w,c
 28341  01A018  2233               	addwfc	(btemp+9)^0,f,c
 28342  01A01A  5033               	movf	(btemp+9)^0,w,c
 28343  01A01C  E106               	bnz	u15840
 28344  01A01E  0E1A               	movlw	26
 28345  01A020  5C32               	subwf	(btemp+8)^0,w,c
 28346  01A022  B0D8               	btfsc	status,0,c
 28347  01A024  D002               	goto	u15840
 28348  01A026  0E01               	movlw	1
 28349  01A028  D001               	goto	u15850
 28350  01A02A                     u15840:
 28351  01A02A  0E00               	movlw	0
 28352  01A02C                     u15850:
 28353  01A02C  6E34               	movwf	(btemp+10)^0,c
 28354  01A02E  6A35               	clrf	(btemp+11)^0,c
 28355                           
 28356                           ;stkvar	_xtoa$6900 @ sp[(-20)+2]
 28357  01A030  0EEE               	movlw	-18
 28358  01A032  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28359  01A038  0EEF               	movlw	-17
 28360  01A03A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28361                           
 28362                           ;stkvar	_xtoa$6900 @ sp[(-20)+2]
 28363  01A040  0EEE               	movlw	-18
 28364  01A042  006F FF8C  F02A    	movff	plusw1,btemp
 28365  01A048  0EEF               	movlw	-17
 28366  01A04A  50E3               	movf	plusw1,w,c
 28367  01A04C  102A               	iorwf	btemp^0,w,c
 28368  01A04E  B4D8               	btfsc	status,2,c
 28369  01A050  D041               	goto	l16319
 28370  01A052  0E9F               	movlw	159
 28371  01A054  6E34               	movwf	(btemp+10)^0,c
 28372  01A056  0EFF               	movlw	255
 28373  01A058  6E35               	movwf	(btemp+11)^0,c
 28374                           
 28375                           ;stkvar	_c @ sp[(-20)+12]
 28376  01A05A  0EF8               	movlw	-8
 28377  01A05C  006F FF8C  F032    	movff	plusw1,btemp+8
 28378  01A062  0EF9               	movlw	-7
 28379  01A064  006F FF8C  F033    	movff	plusw1,btemp+9
 28380  01A06A  0E20               	movlw	32
 28381  01A06C  1232               	iorwf	(btemp+8)^0,f,c
 28382  01A06E  0E00               	movlw	0
 28383  01A070  1233               	iorwf	(btemp+9)^0,f,c
 28384  01A072  5034               	movf	(btemp+10)^0,w,c
 28385  01A074  2632               	addwf	(btemp+8)^0,f,c
 28386  01A076  5035               	movf	(btemp+11)^0,w,c
 28387  01A078  2233               	addwfc	(btemp+9)^0,f,c
 28388  01A07A  5033               	movf	(btemp+9)^0,w,c
 28389  01A07C  E106               	bnz	u15870
 28390  01A07E  0E1A               	movlw	26
 28391  01A080  5C32               	subwf	(btemp+8)^0,w,c
 28392  01A082  B0D8               	btfsc	status,0,c
 28393  01A084  D002               	goto	u15870
 28394  01A086  0E01               	movlw	1
 28395  01A088  D001               	goto	u15880
 28396  01A08A                     u15870:
 28397  01A08A  0E00               	movlw	0
 28398  01A08C                     u15880:
 28399  01A08C  6E34               	movwf	(btemp+10)^0,c
 28400  01A08E  6A35               	clrf	(btemp+11)^0,c
 28401                           
 28402                           ;stkvar	_xtoa$6901 @ sp[(-20)+0]
 28403  01A090  0EEC               	movlw	-20
 28404  01A092  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28405  01A098  0EED               	movlw	-19
 28406  01A09A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28407                           
 28408                           ;stkvar	_xtoa$6901 @ sp[(-20)+0]
 28409  01A0A0  0EEC               	movlw	-20
 28410  01A0A2  006F FF8C  F02A    	movff	plusw1,btemp
 28411  01A0A8  0EED               	movlw	-19
 28412  01A0AA  50E3               	movf	plusw1,w,c
 28413  01A0AC  102A               	iorwf	btemp^0,w,c
 28414  01A0AE  B4D8               	btfsc	status,2,c
 28415  01A0B0  D011               	goto	l16319
 28416                           
 28417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 28418                           ;stkvar	_c @ sp[(-20)+12]
 28419  01A0B2  0EF8               	movlw	-8
 28420  01A0B4  006F FF8F FFE6     	movff	plusw1,postinc1
 28421  01A0BA  006F FF8F FFE6     	movff	plusw1,postinc1
 28422  01A0C0  EC71  F00A         	call	_toupper	;wreg free
 28423                           
 28424                           ;stkvar	_c @ sp[(-20)+12]
 28425  01A0C4  0EF8               	movlw	-8
 28426  01A0C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 28427  01A0CC  0EF9               	movlw	-7
 28428  01A0CE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 28429  01A0D4                     l16319:
 28430                           
 28431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 28432                           ;stkvar	_c @ sp[(-20)+12]
 28433                           ;stkvar	_i @ sp[(-20)+14]
 28434  01A0D4  0EFA               	movlw	-6
 28435  01A0D6  006F FF8C  F034    	movff	plusw1,btemp+10
 28436  01A0DC  0EFB               	movlw	-5
 28437  01A0DE  006F FF8C  F035    	movff	plusw1,btemp+11
 28438  01A0E4  0E54               	movlw	low _dbuf
 28439  01A0E6  2434               	addwf	(btemp+10)^0,w,c
 28440  01A0E8  6ED9               	movwf	fsr2l,c
 28441  01A0EA  0E03               	movlw	high _dbuf
 28442  01A0EC  2035               	addwfc	(btemp+11)^0,w,c
 28443  01A0EE  6EDA               	movwf	fsr2h,c
 28444  01A0F0  0EF8               	movlw	-8
 28445  01A0F2  006F FF8F FFDF     	movff	plusw1,indf2
 28446                           
 28447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 28448                           ;stkvar	_p @ sp[(-20)+18]
 28449  01A0F8  50E1               	movf	fsr1l,w,c
 28450  01A0FA  0FFE               	addlw	-2
 28451  01A0FC  6ED9               	movwf	fsr2l,c
 28452  01A0FE  50E2               	movf	fsr1h,w,c
 28453  01A100  6EDA               	movwf	fsr2h,c
 28454  01A102  0EFF               	movlw	255
 28455  01A104  22DA               	addwfc	fsr2h,f,c
 28456  01A106  06DE               	decf	postinc2,f,c
 28457  01A108  0E00               	movlw	0
 28458  01A10A  5ADD               	subwfb	postdec2,f,c
 28459                           
 28460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 28461                           ;stkvar	_w @ sp[(-20)+16]
 28462  01A10C  50E1               	movf	fsr1l,w,c
 28463  01A10E  0FFC               	addlw	-4
 28464  01A110  6ED9               	movwf	fsr2l,c
 28465  01A112  50E2               	movf	fsr1h,w,c
 28466  01A114  6EDA               	movwf	fsr2h,c
 28467  01A116  0EFF               	movlw	255
 28468  01A118  22DA               	addwfc	fsr2h,f,c
 28469  01A11A  06DE               	decf	postinc2,f,c
 28470  01A11C  0E00               	movlw	0
 28471  01A11E  5ADD               	subwfb	postdec2,f,c
 28472                           
 28473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 28474  01A120  0E04               	movlw	4
 28475  01A122  6E35               	movwf	(btemp+11)^0,c
 28476                           
 28477                           ;stkvar	_n @ sp[(-20)+4]
 28478  01A124  50E1               	movf	fsr1l,w,c
 28479  01A126  0FF0               	addlw	-16
 28480  01A128  6ED9               	movwf	fsr2l,c
 28481  01A12A  50E2               	movf	fsr1h,w,c
 28482  01A12C  6EDA               	movwf	fsr2h,c
 28483  01A12E  0EFF               	movlw	255
 28484  01A130  22DA               	addwfc	fsr2h,f,c
 28485  01A132  2835               	incf	(btemp+11)^0,w,c
 28486  01A134  52DE               	movf	postinc2,f,c
 28487  01A136  D00F               	goto	u15900
 28488  01A138                     u15905:
 28489  01A138  52DE               	movf	postinc2,f,c
 28490  01A13A  52DE               	movf	postinc2,f,c
 28491  01A13C  52DE               	movf	postinc2,f,c
 28492  01A13E  52DE               	movf	postinc2,f,c
 28493  01A140  52DE               	movf	postinc2,f,c
 28494  01A142  52DE               	movf	postinc2,f,c
 28495  01A144  90D8               	bcf	status,0,c
 28496  01A146  32DD               	rrcf	postdec2,f,c
 28497  01A148  32DD               	rrcf	postdec2,f,c
 28498  01A14A  32DD               	rrcf	postdec2,f,c
 28499  01A14C  32DD               	rrcf	postdec2,f,c
 28500  01A14E  32DD               	rrcf	postdec2,f,c
 28501  01A150  32DD               	rrcf	postdec2,f,c
 28502  01A152  32DD               	rrcf	postdec2,f,c
 28503  01A154  32DE               	rrcf	postinc2,f,c
 28504  01A156                     u15900:
 28505  01A156  2EE8               	decfsz	wreg,f,c
 28506  01A158  D7EF               	goto	u15905
 28507  01A15A                     l16327:
 28508                           
 28509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28510                           ;stkvar	_i @ sp[(-20)+14]
 28511  01A15A  0EFB               	movlw	-5
 28512  01A15C  BEE3               	btfsc	plusw1,7,c
 28513  01A15E  D03A               	goto	u15950
 28514  01A160  0EFB               	movlw	-5
 28515  01A162  50E3               	movf	plusw1,w,c
 28516  01A164  E108               	bnz	u15910
 28517  01A166  0EFA               	movlw	-6
 28518  01A168  006F FF8C  F02A    	movff	plusw1,btemp
 28519  01A16E  0E02               	movlw	2
 28520  01A170  5E2A               	subwf	btemp^0,f,c
 28521  01A172  A0D8               	btfss	status,0,c
 28522  01A174  D02F               	goto	u15950
 28523  01A176                     u15910:
 28524                           
 28525                           ;stkvar	_n @ sp[(-20)+4]
 28526  01A176  0EF0               	movlw	-16
 28527  01A178  50E3               	movf	plusw1,w,c
 28528  01A17A  E115               	bnz	u15921
 28529  01A17C  0EF1               	movlw	-15
 28530  01A17E  50E3               	movf	plusw1,w,c
 28531  01A180  E112               	bnz	u15921
 28532  01A182  0EF2               	movlw	-14
 28533  01A184  50E3               	movf	plusw1,w,c
 28534  01A186  E10F               	bnz	u15921
 28535  01A188  0EF3               	movlw	-13
 28536  01A18A  50E3               	movf	plusw1,w,c
 28537  01A18C  E10C               	bnz	u15921
 28538  01A18E  0EF4               	movlw	-12
 28539  01A190  50E3               	movf	plusw1,w,c
 28540  01A192  E109               	bnz	u15921
 28541  01A194  0EF5               	movlw	-11
 28542  01A196  50E3               	movf	plusw1,w,c
 28543  01A198  E106               	bnz	u15921
 28544  01A19A  0EF6               	movlw	-10
 28545  01A19C  50E3               	movf	plusw1,w,c
 28546  01A19E  E103               	bnz	u15921
 28547  01A1A0  0EF7               	movlw	-9
 28548  01A1A2  50E3               	movf	plusw1,w,c
 28549  01A1A4  A4D8               	btfss	status,2,c
 28550  01A1A6                     u15921:
 28551  01A1A6  D6EB               	goto	l16295
 28552                           
 28553                           ;stkvar	_p @ sp[(-20)+18]
 28554  01A1A8  0EFF               	movlw	-1
 28555  01A1AA  BEE3               	btfsc	plusw1,7,c
 28556  01A1AC  D007               	goto	u15930
 28557  01A1AE  0EFF               	movlw	-1
 28558  01A1B0  50E3               	movf	plusw1,w,c
 28559  01A1B2  E103               	bnz	u15931
 28560  01A1B4  0EFE               	movlw	-2
 28561  01A1B6  04E3               	decf	plusw1,w,c
 28562  01A1B8  B0D8               	btfsc	status,0,c
 28563  01A1BA                     u15931:
 28564  01A1BA  D6E1               	goto	l16295
 28565  01A1BC                     u15930:
 28566                           
 28567                           ;stkvar	_w @ sp[(-20)+16]
 28568  01A1BC  0EFD               	movlw	-3
 28569  01A1BE  BEE3               	btfsc	plusw1,7,c
 28570  01A1C0  D009               	goto	u15950
 28571  01A1C2  0EFD               	movlw	-3
 28572  01A1C4  50E3               	movf	plusw1,w,c
 28573  01A1C6  E104               	bnz	u15940
 28574  01A1C8  0EFC               	movlw	-4
 28575  01A1CA  04E3               	decf	plusw1,w,c
 28576  01A1CC  A0D8               	btfss	status,0,c
 28577  01A1CE  D002               	goto	u15950
 28578  01A1D0                     u15940:
 28579  01A1D0  B24E               	btfsc	_flags^0,1,c
 28580  01A1D2  D6D5               	goto	l16295
 28581  01A1D4                     u15950:
 28582                           
 28583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 28584  01A1D4  A84E               	btfss	_flags^0,4,c
 28585  01A1D6  D036               	goto	l16343
 28586                           
 28587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 28588                           ;stkvar	_i @ sp[(-20)+14]
 28589  01A1D8  50E1               	movf	fsr1l,w,c
 28590  01A1DA  0FFA               	addlw	-6
 28591  01A1DC  6ED9               	movwf	fsr2l,c
 28592  01A1DE  50E2               	movf	fsr1h,w,c
 28593  01A1E0  6EDA               	movwf	fsr2h,c
 28594  01A1E2  0EFF               	movlw	255
 28595  01A1E4  22DA               	addwfc	fsr2h,f,c
 28596  01A1E6  06DE               	decf	postinc2,f,c
 28597  01A1E8  0E00               	movlw	0
 28598  01A1EA  5ADD               	subwfb	postdec2,f,c
 28599                           
 28600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 28601                           ;stkvar	_x @ sp[(-20)+-11]
 28602                           ;stkvar	_i @ sp[(-20)+14]
 28603  01A1EC  0EFA               	movlw	-6
 28604  01A1EE  006F FF8C  F034    	movff	plusw1,btemp+10
 28605  01A1F4  0EFB               	movlw	-5
 28606  01A1F6  006F FF8C  F035    	movff	plusw1,btemp+11
 28607  01A1FC  0E54               	movlw	low _dbuf
 28608  01A1FE  2434               	addwf	(btemp+10)^0,w,c
 28609  01A200  6ED9               	movwf	fsr2l,c
 28610  01A202  0E03               	movlw	high _dbuf
 28611  01A204  2035               	addwfc	(btemp+11)^0,w,c
 28612  01A206  6EDA               	movwf	fsr2h,c
 28613  01A208  0EE1               	movlw	-31
 28614  01A20A  006F FF8F FFDF     	movff	plusw1,indf2
 28615                           
 28616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 28617                           ;stkvar	_i @ sp[(-20)+14]
 28618  01A210  50E1               	movf	fsr1l,w,c
 28619  01A212  0FFA               	addlw	-6
 28620  01A214  6ED9               	movwf	fsr2l,c
 28621  01A216  50E2               	movf	fsr1h,w,c
 28622  01A218  6EDA               	movwf	fsr2h,c
 28623  01A21A  0EFF               	movlw	255
 28624  01A21C  22DA               	addwfc	fsr2h,f,c
 28625  01A21E  06DE               	decf	postinc2,f,c
 28626  01A220  0E00               	movlw	0
 28627  01A222  5ADD               	subwfb	postdec2,f,c
 28628                           
 28629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 28630                           ;stkvar	_i @ sp[(-20)+14]
 28631  01A224  0EFA               	movlw	-6
 28632  01A226  006F FF8C  F034    	movff	plusw1,btemp+10
 28633  01A22C  0EFB               	movlw	-5
 28634  01A22E  006F FF8C  F035    	movff	plusw1,btemp+11
 28635  01A234  0E54               	movlw	low _dbuf
 28636  01A236  2434               	addwf	(btemp+10)^0,w,c
 28637  01A238  6ED9               	movwf	fsr2l,c
 28638  01A23A  0E03               	movlw	high _dbuf
 28639  01A23C  2035               	addwfc	(btemp+11)^0,w,c
 28640  01A23E  6EDA               	movwf	fsr2h,c
 28641  01A240  0E30               	movlw	48
 28642  01A242  6EDF               	movwf	indf2,c
 28643  01A244                     l16343:
 28644                           
 28645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 28646                           ;stkvar	_w @ sp[(-20)+16]
 28647  01A244  0EFC               	movlw	-4
 28648  01A246  006F FF8F FFE6     	movff	plusw1,postinc1
 28649  01A24C  006F FF8F FFE6     	movff	plusw1,postinc1
 28650                           
 28651                           ;stkvar	_i @ sp[(-22)+14]
 28652  01A252  0E54               	movlw	low _dbuf
 28653  01A254  6E34               	movwf	(btemp+10)^0,c
 28654  01A256  0E03               	movlw	high _dbuf
 28655  01A258  6E35               	movwf	(btemp+11)^0,c
 28656  01A25A  0EF8               	movlw	-8
 28657  01A25C  50E3               	movf	plusw1,w,c
 28658  01A25E  2634               	addwf	(btemp+10)^0,f,c
 28659  01A260  0EF9               	movlw	-7
 28660  01A262  50E3               	movf	plusw1,w,c
 28661  01A264  2235               	addwfc	(btemp+11)^0,f,c
 28662  01A266  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28663  01A26C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28664                           
 28665                           ;stkvar	_fp @ sp[(-24)+-2]
 28666  01A272  0EE6               	movlw	-26
 28667  01A274  006F FF8F FFE6     	movff	plusw1,postinc1
 28668  01A27A  006F FF8F FFE6     	movff	plusw1,postinc1
 28669  01A280  EC77  F0FE         	call	_pad	;wreg free
 28670                           
 28671                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 28672  01A284  0EE1               	movlw	225
 28673  01A286  26E1               	addwf	fsr1l,f,c
 28674  01A288  0EFF               	movlw	255
 28675  01A28A  22E2               	addwfc	fsr1h,f,c
 28676  01A28C  0012               	return		;funcret
 28677  01A28E                     __end_of_xtoa:
 28678                           	opt callstack 0
 28679                           
 28680 ;; *************** function _toupper *****************
 28681 ;; Defined at:
 28682 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 28683 ;; Parameters:    Size  Location     Type
 28684 ;;  c               2  [STACK] int 
 28685 ;; Auto vars:     Size  Location     Type
 28686 ;;		None
 28687 ;; Return value:  Size  Location     Type
 28688 ;;                  2  [STACK] int 
 28689 ;; Registers used:
 28690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 28691 ;; Tracked objects:
 28692 ;;		On entry : 0/3
 28693 ;;		On exit  : 0/0
 28694 ;;		Unchanged: 0/0
 28695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28700 ;;Total ram usage:        0 bytes
 28701 ;; Hardware stack levels used:    1
 28702 ;; Hardware stack levels required when called:   16
 28703 ;; This function calls:
 28704 ;;		_islower
 28705 ;; This function is called by:
 28706 ;;		_xtoa
 28707 ;; This function uses a reentrant model
 28708 ;;
 28709                           
 28710                           	psect	text95
 28711  0014E2                     __ptext95:
 28712                           	opt callstack 0
 28713  0014E2                     _toupper:
 28714                           	opt callstack 0
 28715                           
 28716                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28717  0014E2  52E6               	movf	postinc1,f,c
 28718  0014E4  52E6               	movf	postinc1,f,c
 28719                           
 28720                           ;stkvar	_c @ sp[(-2)+-2]
 28721                           
 28722                           ;incstack = 0
 28723 ;; hardware stack exceeded
 28724  0014E6  0EFC               	movlw	-4
 28725  0014E8  50E3               	movf	plusw1,w,c
 28726  0014EA  0F9F               	addlw	159
 28727  0014EC  6E34               	movwf	(btemp+10)^0,c
 28728  0014EE  0EFD               	movlw	-3
 28729  0014F0  006F FF8C  F035    	movff	plusw1,btemp+11
 28730  0014F6  0EFF               	movlw	255
 28731  0014F8  2235               	addwfc	(btemp+11)^0,f,c
 28732  0014FA  5035               	movf	(btemp+11)^0,w,c
 28733  0014FC  E106               	bnz	u8050
 28734  0014FE  0E1A               	movlw	26
 28735  001500  5C34               	subwf	(btemp+10)^0,w,c
 28736  001502  B0D8               	btfsc	status,0,c
 28737  001504  D002               	goto	u8050
 28738  001506  0E01               	movlw	1
 28739  001508  D001               	goto	u8060
 28740  00150A                     u8050:
 28741  00150A  0E00               	movlw	0
 28742  00150C                     u8060:
 28743  00150C  6E34               	movwf	(btemp+10)^0,c
 28744  00150E  6A35               	clrf	(btemp+11)^0,c
 28745                           
 28746                           ;stkvar	_toupper$7842 @ sp[(-2)+0]
 28747  001510  0EFE               	movlw	-2
 28748  001512  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28749  001518  0EFF               	movlw	-1
 28750  00151A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28751                           
 28752                           ;stkvar	_toupper$7842 @ sp[(-2)+0]
 28753  001520  0EFE               	movlw	-2
 28754  001522  006F FF8C  F02A    	movff	plusw1,btemp
 28755  001528  0EFF               	movlw	-1
 28756  00152A  50E3               	movf	plusw1,w,c
 28757  00152C  102A               	iorwf	btemp^0,w,c
 28758  00152E  B4D8               	btfsc	status,2,c
 28759  001530  D00D               	goto	l10269
 28760                           
 28761                           ;stkvar	_c @ sp[(-2)+-2]
 28762  001532  0EFC               	movlw	-4
 28763  001534  006F FF8C  F02A    	movff	plusw1,btemp
 28764  00153A  0EFD               	movlw	-3
 28765  00153C  006F FF8C  F02B    	movff	plusw1,btemp+1
 28766  001542  0E5F               	movlw	95
 28767  001544  162A               	andwf	btemp^0,f,c
 28768  001546  0E00               	movlw	0
 28769  001548  162B               	andwf	(btemp+1)^0,f,c
 28770  00154A  D008               	goto	l3835
 28771  00154C                     l10269:
 28772                           
 28773                           ;stkvar	_c @ sp[(-2)+-2]
 28774  00154C  0EFC               	movlw	-4
 28775  00154E  006F FF8C  F02A    	movff	plusw1,btemp
 28776  001554  0EFD               	movlw	-3
 28777  001556  006F FF8C  F02B    	movff	plusw1,btemp+1
 28778  00155C                     l3835:
 28779                           
 28780                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28781  00155C  52E5               	movf	postdec1,f,c
 28782  00155E  52E5               	movf	postdec1,f,c
 28783  001560  52E5               	movf	postdec1,f,c
 28784  001562  52E5               	movf	postdec1,f,c
 28785  001564  0012               	return		;funcret
 28786  001566                     __end_of_toupper:
 28787                           	opt callstack 0
 28788                           
 28789 ;; *************** function _islower *****************
 28790 ;; Defined at:
 28791 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 28792 ;; Parameters:    Size  Location     Type
 28793 ;;  c               2  [STACK] int 
 28794 ;; Auto vars:     Size  Location     Type
 28795 ;;		None
 28796 ;; Return value:  Size  Location     Type
 28797 ;;                  2  [STACK] int 
 28798 ;; Registers used:
 28799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 28800 ;; Tracked objects:
 28801 ;;		On entry : 0/0
 28802 ;;		On exit  : 0/0
 28803 ;;		Unchanged: 0/0
 28804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28809 ;;Total ram usage:        0 bytes
 28810 ;; Hardware stack levels used:    1
 28811 ;; Hardware stack levels required when called:   15
 28812 ;; This function calls:
 28813 ;;		Nothing
 28814 ;; This function is called by:
 28815 ;;		_toupper
 28816 ;; This function uses a reentrant model
 28817 ;;
 28818                           
 28819                           	psect	text96
 28820  0026B4                     __ptext96:
 28821                           	opt callstack 0
 28822  0026B4                     _islower:
 28823                           	opt callstack 0
 28824                           
 28825                           ;stkvar	_c @ sp[(0)+-2]
 28826                           
 28827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28828                           ;incstack = 0
 28829 ;; hardware stack exceeded
 28830  0026B4  0EFE               	movlw	-2
 28831  0026B6  50E3               	movf	plusw1,w,c
 28832  0026B8  0F9F               	addlw	159
 28833  0026BA  6E34               	movwf	(btemp+10)^0,c
 28834  0026BC  0EFF               	movlw	-1
 28835  0026BE  006F FF8C  F035    	movff	plusw1,btemp+11
 28836  0026C4  0EFF               	movlw	255
 28837  0026C6  2235               	addwfc	(btemp+11)^0,f,c
 28838  0026C8  5035               	movf	(btemp+11)^0,w,c
 28839  0026CA  E106               	bnz	u7680
 28840  0026CC  0E1A               	movlw	26
 28841  0026CE  5C34               	subwf	(btemp+10)^0,w,c
 28842  0026D0  B0D8               	btfsc	status,0,c
 28843  0026D2  D002               	goto	u7680
 28844  0026D4  0E01               	movlw	1
 28845  0026D6  D001               	goto	u7690
 28846  0026D8                     u7680:
 28847  0026D8  0E00               	movlw	0
 28848  0026DA                     u7690:
 28849  0026DA  6E2A               	movwf	btemp^0,c
 28850  0026DC  6A2B               	clrf	(btemp+1)^0,c
 28851                           
 28852                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28853  0026DE  52E5               	movf	postdec1,f,c
 28854  0026E0  52E5               	movf	postdec1,f,c
 28855  0026E2  0012               	return		;funcret
 28856  0026E4                     __end_of_islower:
 28857                           	opt callstack 0
 28858                           
 28859 ;; *************** function _isalpha *****************
 28860 ;; Defined at:
 28861 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 28862 ;; Parameters:    Size  Location     Type
 28863 ;;  c               2  [STACK] int 
 28864 ;; Auto vars:     Size  Location     Type
 28865 ;;		None
 28866 ;; Return value:  Size  Location     Type
 28867 ;;                  2  [STACK] int 
 28868 ;; Registers used:
 28869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 28870 ;; Tracked objects:
 28871 ;;		On entry : 0/0
 28872 ;;		On exit  : 0/0
 28873 ;;		Unchanged: 0/0
 28874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28879 ;;Total ram usage:        0 bytes
 28880 ;; Hardware stack levels used:    1
 28881 ;; Hardware stack levels required when called:   15
 28882 ;; This function calls:
 28883 ;;		Nothing
 28884 ;; This function is called by:
 28885 ;;		_xtoa
 28886 ;; This function uses a reentrant model
 28887 ;;
 28888                           
 28889                           	psect	text97
 28890  002260                     __ptext97:
 28891                           	opt callstack 0
 28892  002260                     _isalpha:
 28893                           	opt callstack 0
 28894                           
 28895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28896                           ;incstack = 0
 28897 ;; hardware stack exceeded
 28898  002260  0E9F               	movlw	159
 28899  002262  6E34               	movwf	(btemp+10)^0,c
 28900  002264  0EFF               	movlw	255
 28901  002266  6E35               	movwf	(btemp+11)^0,c
 28902                           
 28903                           ;stkvar	_c @ sp[(0)+-2]
 28904  002268  0EFE               	movlw	-2
 28905  00226A  006F FF8C  F032    	movff	plusw1,btemp+8
 28906  002270  0EFF               	movlw	-1
 28907  002272  006F FF8C  F033    	movff	plusw1,btemp+9
 28908  002278  0E20               	movlw	32
 28909  00227A  1232               	iorwf	(btemp+8)^0,f,c
 28910  00227C  0E00               	movlw	0
 28911  00227E  1233               	iorwf	(btemp+9)^0,f,c
 28912  002280  5034               	movf	(btemp+10)^0,w,c
 28913  002282  2632               	addwf	(btemp+8)^0,f,c
 28914  002284  5035               	movf	(btemp+11)^0,w,c
 28915  002286  2233               	addwfc	(btemp+9)^0,f,c
 28916  002288  5033               	movf	(btemp+9)^0,w,c
 28917  00228A  E106               	bnz	u8030
 28918  00228C  0E1A               	movlw	26
 28919  00228E  5C32               	subwf	(btemp+8)^0,w,c
 28920  002290  B0D8               	btfsc	status,0,c
 28921  002292  D002               	goto	u8030
 28922  002294  0E01               	movlw	1
 28923  002296  D001               	goto	u8040
 28924  002298                     u8030:
 28925  002298  0E00               	movlw	0
 28926  00229A                     u8040:
 28927  00229A  6E2A               	movwf	btemp^0,c
 28928  00229C  6A2B               	clrf	(btemp+1)^0,c
 28929                           
 28930                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28931  00229E  52E5               	movf	postdec1,f,c
 28932  0022A0  52E5               	movf	postdec1,f,c
 28933  0022A2  0012               	return		;funcret
 28934  0022A4                     __end_of_isalpha:
 28935                           	opt callstack 0
 28936                           
 28937 ;; *************** function _utoa *****************
 28938 ;; Defined at:
 28939 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28940 ;; Parameters:    Size  Location     Type
 28941 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28942 ;;		 -> f(6), NULL(0), 
 28943 ;;  d               8  [STACK] unsigned long long 
 28944 ;; Auto vars:     Size  Location     Type
 28945 ;;  n               8  [STACK] unsigned long long 
 28946 ;;  i               2  [STACK] int 
 28947 ;;  w               2  [STACK] int 
 28948 ;;  p               2  [STACK] int 
 28949 ;; Return value:  Size  Location     Type
 28950 ;;                  2  [STACK] int 
 28951 ;; Registers used:
 28952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 28953 ;; Tracked objects:
 28954 ;;		On entry : 0/0
 28955 ;;		On exit  : 0/0
 28956 ;;		Unchanged: 0/0
 28957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28962 ;;Total ram usage:        0 bytes
 28963 ;; Hardware stack levels used:    1
 28964 ;; Hardware stack levels required when called:   20
 28965 ;; This function calls:
 28966 ;;		___lodiv
 28967 ;;		___lomod
 28968 ;;		_pad
 28969 ;; This function is called by:
 28970 ;;		_vfpfcnvrt
 28971 ;; This function uses a reentrant model
 28972 ;;
 28973                           
 28974                           	psect	text98
 28975  01ACBE                     __ptext98:
 28976                           	opt callstack 0
 28977  01ACBE                     _utoa:
 28978                           	opt callstack 0
 28979                           
 28980                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28981  01ACBE  0E0E               	movlw	14
 28982  01ACC0  26E1               	addwf	fsr1l,f,c
 28983  01ACC2  0E00               	movlw	0
 28984  01ACC4  22E2               	addwfc	fsr1h,f,c
 28985                           
 28986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 28987                           
 28988                           ;incstack = 0
 28989 ;; hardware stack exceeded
 28990  01ACC6  AE4D               	btfss	(_prec+1)^0,7,c
 28991                           
 28992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 28993  01ACC8  924E               	bcf	_flags^0,1,c
 28994                           
 28995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 28996  01ACCA  BE4D               	btfsc	(_prec+1)^0,7,c
 28997  01ACCC  D005               	goto	u15720
 28998  01ACCE  504D               	movf	(_prec+1)^0,w,c
 28999  01ACD0  E110               	bnz	l16243
 29000  01ACD2  044C               	decf	_prec^0,w,c
 29001  01ACD4  B0D8               	btfsc	status,0,c
 29002  01ACD6  D00D               	goto	l16243
 29003  01ACD8                     u15720:
 29004  01ACD8  0E01               	movlw	1
 29005  01ACDA  6E34               	movwf	(btemp+10)^0,c
 29006  01ACDC  0E00               	movlw	0
 29007  01ACDE  6E35               	movwf	(btemp+11)^0,c
 29008                           
 29009                           ;stkvar	_p @ sp[(-14)+12]
 29010  01ACE0  0EFE               	movlw	-2
 29011  01ACE2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29012  01ACE8  0EFF               	movlw	-1
 29013  01ACEA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29014  01ACF0  D008               	goto	l2623
 29015  01ACF2                     l16243:
 29016                           
 29017                           ;stkvar	_p @ sp[(-14)+12]
 29018  01ACF2  0EFE               	movlw	-2
 29019  01ACF4  0060  F133  FFE3   	movff	_prec,plusw1
 29020  01ACFA  0EFF               	movlw	-1
 29021  01ACFC  0060  F137  FFE3   	movff	_prec+1,plusw1
 29022  01AD02                     l2623:
 29023                           
 29024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 29025                           ;stkvar	_w @ sp[(-14)+10]
 29026  01AD02  0EFC               	movlw	-4
 29027  01AD04  0060  F12B  FFE3   	movff	_width,plusw1
 29028  01AD0A  0EFD               	movlw	-3
 29029  01AD0C  0060  F12F  FFE3   	movff	_width+1,plusw1
 29030                           
 29031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 29032                           ;stkvar	_d @ sp[(-14)+-10]
 29033  01AD12  0EE8               	movlw	232
 29034  01AD14  24E1               	addwf	fsr1l,w,c
 29035  01AD16  6ED9               	movwf	fsr2l,c
 29036  01AD18  0EFF               	movlw	255
 29037  01AD1A  20E2               	addwfc	fsr1h,w,c
 29038  01AD1C  6EDA               	movwf	fsr2h,c
 29039                           
 29040                           ;stkvar	_n @ sp[(-14)+0]
 29041  01AD1E  0E08               	movlw	8
 29042  01AD20  6E2A               	movwf	btemp^0,c
 29043  01AD22  0EF2               	movlw	-14
 29044  01AD24                     us1573999:
 29045  01AD24  006F FF7B FFE3     	movff	postinc2,plusw1
 29046  01AD2A  28E8               	incf	wreg,w,c
 29047  01AD2C  2E2A               	decfsz	btemp^0,f,c
 29048  01AD2E  D7FA               	bra	us1573999
 29049                           
 29050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 29051  01AD30  0E4F               	movlw	79
 29052  01AD32  6E34               	movwf	(btemp+10)^0,c
 29053  01AD34  0E00               	movlw	0
 29054  01AD36  6E35               	movwf	(btemp+11)^0,c
 29055                           
 29056                           ;stkvar	_i @ sp[(-14)+8]
 29057  01AD38  0EFA               	movlw	-6
 29058  01AD3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29059  01AD40  0EFB               	movlw	-5
 29060  01AD42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29061                           
 29062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 29063  01AD48  0103               	movlb	3	; () banked
 29064  01AD4A  6BA3               	clrf	(_dbuf+79)& (0+255),b
 29065                           
 29066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29067  01AD4C  D0FB               	goto	l16261
 29068  01AD4E                     l16251:
 29069                           
 29070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 29071                           ;stkvar	_i @ sp[(-14)+8]
 29072  01AD4E  50E1               	movf	fsr1l,w,c
 29073  01AD50  0FFA               	addlw	-6
 29074  01AD52  6ED9               	movwf	fsr2l,c
 29075  01AD54  50E2               	movf	fsr1h,w,c
 29076  01AD56  6EDA               	movwf	fsr2h,c
 29077  01AD58  0EFF               	movlw	255
 29078  01AD5A  22DA               	addwfc	fsr2h,f,c
 29079  01AD5C  06DE               	decf	postinc2,f,c
 29080  01AD5E  0E00               	movlw	0
 29081  01AD60  5ADD               	subwfb	postdec2,f,c
 29082                           
 29083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 29084  01AD62  0E0A               	movlw	10
 29085  01AD64  6EE6               	movwf	postinc1,c
 29086  01AD66  0E00               	movlw	0
 29087  01AD68  6EE6               	movwf	postinc1,c
 29088  01AD6A  0E00               	movlw	0
 29089  01AD6C  6EE6               	movwf	postinc1,c
 29090  01AD6E  0E00               	movlw	0
 29091  01AD70  6EE6               	movwf	postinc1,c
 29092  01AD72  0E00               	movlw	0
 29093  01AD74  6EE6               	movwf	postinc1,c
 29094  01AD76  0E00               	movlw	0
 29095  01AD78  6EE6               	movwf	postinc1,c
 29096  01AD7A  0E00               	movlw	0
 29097  01AD7C  6EE6               	movwf	postinc1,c
 29098  01AD7E  0E00               	movlw	0
 29099  01AD80  6EE6               	movwf	postinc1,c
 29100                           
 29101                           ;stkvar	_n @ sp[(-22)+0]
 29102  01AD82  50E1               	movf	fsr1l,w,c
 29103  01AD84  0FEA               	addlw	-22
 29104  01AD86  6ED9               	movwf	fsr2l,c
 29105  01AD88  50E2               	movf	fsr1h,w,c
 29106  01AD8A  6EDA               	movwf	fsr2h,c
 29107  01AD8C  0EFF               	movlw	255
 29108  01AD8E  22DA               	addwfc	fsr2h,f,c
 29109  01AD90  006F FF7B FFE6     	movff	postinc2,postinc1
 29110  01AD96  006F FF7B FFE6     	movff	postinc2,postinc1
 29111  01AD9C  006F FF7B FFE6     	movff	postinc2,postinc1
 29112  01ADA2  006F FF7B FFE6     	movff	postinc2,postinc1
 29113  01ADA8  006F FF7B FFE6     	movff	postinc2,postinc1
 29114  01ADAE  006F FF7B FFE6     	movff	postinc2,postinc1
 29115  01ADB4  006F FF7B FFE6     	movff	postinc2,postinc1
 29116  01ADBA  006F FF7B FFE6     	movff	postinc2,postinc1
 29117  01ADC0  EC04  F0FB         	call	___lomod	;wreg free
 29118  01ADC4  52E5               	movf	postdec1,f,c
 29119  01ADC6  006F FF9C  F041    	movff	indf1,btemp+23
 29120  01ADCC  52E5               	movf	postdec1,f,c
 29121  01ADCE  006F FF9C  F040    	movff	indf1,btemp+22
 29122  01ADD4  52E5               	movf	postdec1,f,c
 29123  01ADD6  006F FF9C  F03F    	movff	indf1,btemp+21
 29124  01ADDC  52E5               	movf	postdec1,f,c
 29125  01ADDE  006F FF9C  F03E    	movff	indf1,btemp+20
 29126  01ADE4  52E5               	movf	postdec1,f,c
 29127  01ADE6  006F FF9C  F03D    	movff	indf1,btemp+19
 29128  01ADEC  52E5               	movf	postdec1,f,c
 29129  01ADEE  006F FF9C  F03C    	movff	indf1,btemp+18
 29130  01ADF4  52E5               	movf	postdec1,f,c
 29131  01ADF6  006F FF9C  F03B    	movff	indf1,btemp+17
 29132  01ADFC  52E5               	movf	postdec1,f,c
 29133  01ADFE  006F FF9C  F03A    	movff	indf1,btemp+16
 29134  01AE04  0EF8               	movlw	248
 29135  01AE06  26E1               	addwf	fsr1l,f,c
 29136  01AE08  0EFF               	movlw	255
 29137  01AE0A  22E2               	addwfc	fsr1h,f,c
 29138  01AE0C  0E30               	movlw	48
 29139  01AE0E  263A               	addwf	(btemp+16)^0,f,c
 29140                           
 29141                           ;stkvar	_i @ sp[(-14)+8]
 29142  01AE10  0EFA               	movlw	-6
 29143  01AE12  006F FF8C  F034    	movff	plusw1,btemp+10
 29144  01AE18  0EFB               	movlw	-5
 29145  01AE1A  006F FF8C  F035    	movff	plusw1,btemp+11
 29146  01AE20  0E54               	movlw	low _dbuf
 29147  01AE22  2434               	addwf	(btemp+10)^0,w,c
 29148  01AE24  6ED9               	movwf	fsr2l,c
 29149  01AE26  0E03               	movlw	high _dbuf
 29150  01AE28  2035               	addwfc	(btemp+11)^0,w,c
 29151  01AE2A  6EDA               	movwf	fsr2h,c
 29152  01AE2C  0060  F0EB  FFDF   	movff	btemp+16,indf2
 29153                           
 29154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 29155                           ;stkvar	_p @ sp[(-14)+12]
 29156  01AE32  50E1               	movf	fsr1l,w,c
 29157  01AE34  0FFE               	addlw	-2
 29158  01AE36  6ED9               	movwf	fsr2l,c
 29159  01AE38  50E2               	movf	fsr1h,w,c
 29160  01AE3A  6EDA               	movwf	fsr2h,c
 29161  01AE3C  0EFF               	movlw	255
 29162  01AE3E  22DA               	addwfc	fsr2h,f,c
 29163  01AE40  06DE               	decf	postinc2,f,c
 29164  01AE42  0E00               	movlw	0
 29165  01AE44  5ADD               	subwfb	postdec2,f,c
 29166                           
 29167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 29168                           ;stkvar	_w @ sp[(-14)+10]
 29169  01AE46  50E1               	movf	fsr1l,w,c
 29170  01AE48  0FFC               	addlw	-4
 29171  01AE4A  6ED9               	movwf	fsr2l,c
 29172  01AE4C  50E2               	movf	fsr1h,w,c
 29173  01AE4E  6EDA               	movwf	fsr2h,c
 29174  01AE50  0EFF               	movlw	255
 29175  01AE52  22DA               	addwfc	fsr2h,f,c
 29176  01AE54  06DE               	decf	postinc2,f,c
 29177  01AE56  0E00               	movlw	0
 29178  01AE58  5ADD               	subwfb	postdec2,f,c
 29179                           
 29180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 29181  01AE5A  0E0A               	movlw	10
 29182  01AE5C  6EE6               	movwf	postinc1,c
 29183  01AE5E  0E00               	movlw	0
 29184  01AE60  6EE6               	movwf	postinc1,c
 29185  01AE62  0E00               	movlw	0
 29186  01AE64  6EE6               	movwf	postinc1,c
 29187  01AE66  0E00               	movlw	0
 29188  01AE68  6EE6               	movwf	postinc1,c
 29189  01AE6A  0E00               	movlw	0
 29190  01AE6C  6EE6               	movwf	postinc1,c
 29191  01AE6E  0E00               	movlw	0
 29192  01AE70  6EE6               	movwf	postinc1,c
 29193  01AE72  0E00               	movlw	0
 29194  01AE74  6EE6               	movwf	postinc1,c
 29195  01AE76  0E00               	movlw	0
 29196  01AE78  6EE6               	movwf	postinc1,c
 29197                           
 29198                           ;stkvar	_n @ sp[(-22)+0]
 29199  01AE7A  50E1               	movf	fsr1l,w,c
 29200  01AE7C  0FEA               	addlw	-22
 29201  01AE7E  6ED9               	movwf	fsr2l,c
 29202  01AE80  50E2               	movf	fsr1h,w,c
 29203  01AE82  6EDA               	movwf	fsr2h,c
 29204  01AE84  0EFF               	movlw	255
 29205  01AE86  22DA               	addwfc	fsr2h,f,c
 29206  01AE88  006F FF7B FFE6     	movff	postinc2,postinc1
 29207  01AE8E  006F FF7B FFE6     	movff	postinc2,postinc1
 29208  01AE94  006F FF7B FFE6     	movff	postinc2,postinc1
 29209  01AE9A  006F FF7B FFE6     	movff	postinc2,postinc1
 29210  01AEA0  006F FF7B FFE6     	movff	postinc2,postinc1
 29211  01AEA6  006F FF7B FFE6     	movff	postinc2,postinc1
 29212  01AEAC  006F FF7B FFE6     	movff	postinc2,postinc1
 29213  01AEB2  006F FF7B FFE6     	movff	postinc2,postinc1
 29214  01AEB8  EC6C  F0F3         	call	___lodiv	;wreg free
 29215  01AEBC  52E5               	movf	postdec1,f,c
 29216  01AEBE  006F FF9C  F041    	movff	indf1,btemp+23
 29217  01AEC4  52E5               	movf	postdec1,f,c
 29218  01AEC6  006F FF9C  F040    	movff	indf1,btemp+22
 29219  01AECC  52E5               	movf	postdec1,f,c
 29220  01AECE  006F FF9C  F03F    	movff	indf1,btemp+21
 29221  01AED4  52E5               	movf	postdec1,f,c
 29222  01AED6  006F FF9C  F03E    	movff	indf1,btemp+20
 29223  01AEDC  52E5               	movf	postdec1,f,c
 29224  01AEDE  006F FF9C  F03D    	movff	indf1,btemp+19
 29225  01AEE4  52E5               	movf	postdec1,f,c
 29226  01AEE6  006F FF9C  F03C    	movff	indf1,btemp+18
 29227  01AEEC  52E5               	movf	postdec1,f,c
 29228  01AEEE  006F FF9C  F03B    	movff	indf1,btemp+17
 29229  01AEF4  52E5               	movf	postdec1,f,c
 29230  01AEF6  006F FF9C  F03A    	movff	indf1,btemp+16
 29231  01AEFC  0EF8               	movlw	248
 29232  01AEFE  26E1               	addwf	fsr1l,f,c
 29233  01AF00  0EFF               	movlw	255
 29234  01AF02  22E2               	addwfc	fsr1h,f,c
 29235                           
 29236                           ;stkvar	_n @ sp[(-14)+0]
 29237  01AF04  0EF2               	movlw	-14
 29238  01AF06  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 29239  01AF0C  0EF3               	movlw	-13
 29240  01AF0E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 29241  01AF14  0EF4               	movlw	-12
 29242  01AF16  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 29243  01AF1C  0EF5               	movlw	-11
 29244  01AF1E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 29245  01AF24  0EF6               	movlw	-10
 29246  01AF26  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 29247  01AF2C  0EF7               	movlw	-9
 29248  01AF2E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 29249  01AF34  0EF8               	movlw	-8
 29250  01AF36  0060  F103  FFE3   	movff	btemp+22,plusw1
 29251  01AF3C  0EF9               	movlw	-7
 29252  01AF3E  0060  F107  FFE3   	movff	btemp+23,plusw1
 29253  01AF44                     l16261:
 29254                           
 29255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29256                           ;stkvar	_i @ sp[(-14)+8]
 29257  01AF44  0EFA               	movlw	-6
 29258  01AF46  006F FF8C  F02A    	movff	plusw1,btemp
 29259  01AF4C  0EFB               	movlw	-5
 29260  01AF4E  50E3               	movf	plusw1,w,c
 29261  01AF50  102A               	iorwf	btemp^0,w,c
 29262  01AF52  B4D8               	btfsc	status,2,c
 29263  01AF54  D02F               	goto	u15780
 29264                           
 29265                           ;stkvar	_n @ sp[(-14)+0]
 29266  01AF56  0EF2               	movlw	-14
 29267  01AF58  50E3               	movf	plusw1,w,c
 29268  01AF5A  E115               	bnz	u15751
 29269  01AF5C  0EF3               	movlw	-13
 29270  01AF5E  50E3               	movf	plusw1,w,c
 29271  01AF60  E112               	bnz	u15751
 29272  01AF62  0EF4               	movlw	-12
 29273  01AF64  50E3               	movf	plusw1,w,c
 29274  01AF66  E10F               	bnz	u15751
 29275  01AF68  0EF5               	movlw	-11
 29276  01AF6A  50E3               	movf	plusw1,w,c
 29277  01AF6C  E10C               	bnz	u15751
 29278  01AF6E  0EF6               	movlw	-10
 29279  01AF70  50E3               	movf	plusw1,w,c
 29280  01AF72  E109               	bnz	u15751
 29281  01AF74  0EF7               	movlw	-9
 29282  01AF76  50E3               	movf	plusw1,w,c
 29283  01AF78  E106               	bnz	u15751
 29284  01AF7A  0EF8               	movlw	-8
 29285  01AF7C  50E3               	movf	plusw1,w,c
 29286  01AF7E  E103               	bnz	u15751
 29287  01AF80  0EF9               	movlw	-7
 29288  01AF82  50E3               	movf	plusw1,w,c
 29289  01AF84  A4D8               	btfss	status,2,c
 29290  01AF86                     u15751:
 29291  01AF86  D6E3               	goto	l16251
 29292                           
 29293                           ;stkvar	_p @ sp[(-14)+12]
 29294  01AF88  0EFF               	movlw	-1
 29295  01AF8A  BEE3               	btfsc	plusw1,7,c
 29296  01AF8C  D007               	goto	u15760
 29297  01AF8E  0EFF               	movlw	-1
 29298  01AF90  50E3               	movf	plusw1,w,c
 29299  01AF92  E103               	bnz	u15761
 29300  01AF94  0EFE               	movlw	-2
 29301  01AF96  04E3               	decf	plusw1,w,c
 29302  01AF98  B0D8               	btfsc	status,0,c
 29303  01AF9A                     u15761:
 29304  01AF9A  D6D9               	goto	l16251
 29305  01AF9C                     u15760:
 29306                           
 29307                           ;stkvar	_w @ sp[(-14)+10]
 29308  01AF9C  0EFD               	movlw	-3
 29309  01AF9E  BEE3               	btfsc	plusw1,7,c
 29310  01AFA0  D009               	goto	u15780
 29311  01AFA2  0EFD               	movlw	-3
 29312  01AFA4  50E3               	movf	plusw1,w,c
 29313  01AFA6  E104               	bnz	u15770
 29314  01AFA8  0EFC               	movlw	-4
 29315  01AFAA  04E3               	decf	plusw1,w,c
 29316  01AFAC  A0D8               	btfss	status,0,c
 29317  01AFAE  D002               	goto	u15780
 29318  01AFB0                     u15770:
 29319  01AFB0  B24E               	btfsc	_flags^0,1,c
 29320  01AFB2  D6CD               	goto	l16251
 29321  01AFB4                     u15780:
 29322                           
 29323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 29324                           ;stkvar	_w @ sp[(-14)+10]
 29325  01AFB4  0EFC               	movlw	-4
 29326  01AFB6  006F FF8F FFE6     	movff	plusw1,postinc1
 29327  01AFBC  006F FF8F FFE6     	movff	plusw1,postinc1
 29328                           
 29329                           ;stkvar	_i @ sp[(-16)+8]
 29330  01AFC2  0E54               	movlw	low _dbuf
 29331  01AFC4  6E34               	movwf	(btemp+10)^0,c
 29332  01AFC6  0E03               	movlw	high _dbuf
 29333  01AFC8  6E35               	movwf	(btemp+11)^0,c
 29334  01AFCA  0EF8               	movlw	-8
 29335  01AFCC  50E3               	movf	plusw1,w,c
 29336  01AFCE  2634               	addwf	(btemp+10)^0,f,c
 29337  01AFD0  0EF9               	movlw	-7
 29338  01AFD2  50E3               	movf	plusw1,w,c
 29339  01AFD4  2235               	addwfc	(btemp+11)^0,f,c
 29340  01AFD6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29341  01AFDC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29342                           
 29343                           ;stkvar	_fp @ sp[(-18)+-2]
 29344  01AFE2  0EEC               	movlw	-20
 29345  01AFE4  006F FF8F FFE6     	movff	plusw1,postinc1
 29346  01AFEA  006F FF8F FFE6     	movff	plusw1,postinc1
 29347  01AFF0  EC77  F0FE         	call	_pad	;wreg free
 29348                           
 29349                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 29350  01AFF4  0EE8               	movlw	232
 29351  01AFF6  26E1               	addwf	fsr1l,f,c
 29352  01AFF8  0EFF               	movlw	255
 29353  01AFFA  22E2               	addwfc	fsr1h,f,c
 29354  01AFFC  0012               	return		;funcret
 29355  01AFFE                     __end_of_utoa:
 29356                           	opt callstack 0
 29357                           
 29358 ;; *************** function ___lomod *****************
 29359 ;; Defined at:
 29360 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 29361 ;; Parameters:    Size  Location     Type
 29362 ;;  dividend        8  [STACK] unsigned long long 
 29363 ;;  divisor         8  [STACK] unsigned long long 
 29364 ;; Auto vars:     Size  Location     Type
 29365 ;;  counter         1  [STACK] unsigned char 
 29366 ;; Return value:  Size  Location     Type
 29367 ;;                  8  [STACK] unsigned long long 
 29368 ;; Registers used:
 29369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29370 ;; Tracked objects:
 29371 ;;		On entry : 0/3
 29372 ;;		On exit  : 0/0
 29373 ;;		Unchanged: 0/0
 29374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29379 ;;Total ram usage:        0 bytes
 29380 ;; Hardware stack levels used:    1
 29381 ;; Hardware stack levels required when called:   15
 29382 ;; This function calls:
 29383 ;;		Nothing
 29384 ;; This function is called by:
 29385 ;;		_utoa
 29386 ;; This function uses a reentrant model
 29387 ;;
 29388                           
 29389                           	psect	text99
 29390  01F608                     __ptext99:
 29391                           	opt callstack 0
 29392  01F608                     ___lomod:
 29393                           	opt callstack 0
 29394                           
 29395                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29396  01F608  52E6               	movf	postinc1,f,c
 29397                           
 29398                           ;stkvar	_divisor @ sp[(-1)+-16]
 29399                           
 29400                           ;incstack = 0
 29401 ;; hardware stack exceeded
 29402  01F60A  0EEF               	movlw	-17
 29403  01F60C  50E3               	movf	plusw1,w,c
 29404  01F60E  E116               	bnz	u9240
 29405  01F610  0EF0               	movlw	-16
 29406  01F612  50E3               	movf	plusw1,w,c
 29407  01F614  E113               	bnz	u9240
 29408  01F616  0EF1               	movlw	-15
 29409  01F618  50E3               	movf	plusw1,w,c
 29410  01F61A  E110               	bnz	u9240
 29411  01F61C  0EF2               	movlw	-14
 29412  01F61E  50E3               	movf	plusw1,w,c
 29413  01F620  E10D               	bnz	u9240
 29414  01F622  0EF3               	movlw	-13
 29415  01F624  50E3               	movf	plusw1,w,c
 29416  01F626  E10A               	bnz	u9240
 29417  01F628  0EF4               	movlw	-12
 29418  01F62A  50E3               	movf	plusw1,w,c
 29419  01F62C  E107               	bnz	u9240
 29420  01F62E  0EF5               	movlw	-11
 29421  01F630  50E3               	movf	plusw1,w,c
 29422  01F632  E104               	bnz	u9240
 29423  01F634  0EF6               	movlw	-10
 29424  01F636  50E3               	movf	plusw1,w,c
 29425  01F638  B4D8               	btfsc	status,2,c
 29426  01F63A  D075               	goto	u9270
 29427  01F63C                     u9240:
 29428                           
 29429                           ;stkvar	_counter @ sp[(-1)+0]
 29430  01F63C  0EFF               	movlw	-1
 29431  01F63E  6AE3               	clrf	plusw1,c
 29432  01F640  D012               	goto	L29
 29433  01F642                     l10905:
 29434                           
 29435                           ;stkvar	_divisor @ sp[(-1)+-16]
 29436  01F642  90D8               	bcf	status,0,c
 29437  01F644  0EEF               	movlw	-17
 29438  01F646  36E3               	rlcf	plusw1,f,c
 29439  01F648  0EF0               	movlw	-16
 29440  01F64A  36E3               	rlcf	plusw1,f,c
 29441  01F64C  0EF1               	movlw	-15
 29442  01F64E  36E3               	rlcf	plusw1,f,c
 29443  01F650  0EF2               	movlw	-14
 29444  01F652  36E3               	rlcf	plusw1,f,c
 29445  01F654  0EF3               	movlw	-13
 29446  01F656  36E3               	rlcf	plusw1,f,c
 29447  01F658  0EF4               	movlw	-12
 29448  01F65A  36E3               	rlcf	plusw1,f,c
 29449  01F65C  0EF5               	movlw	-11
 29450  01F65E  36E3               	rlcf	plusw1,f,c
 29451  01F660  0EF6               	movlw	-10
 29452  01F662  36E3               	rlcf	plusw1,f,c
 29453                           
 29454                           ;stkvar	_counter @ sp[(-1)+0]
 29455  01F664  0EFF               	movlw	-1
 29456  01F666                     L29:
 29457  01F666  2AE3               	incf	plusw1,f,c
 29458                           
 29459                           ;stkvar	_divisor @ sp[(-1)+-16]
 29460  01F668  0EF6               	movlw	-10
 29461  01F66A  AEE3               	btfss	plusw1,7,c
 29462  01F66C  D7EA               	goto	l10905
 29463  01F66E                     u9250:
 29464                           
 29465                           ;stkvar	_divisor @ sp[(-1)+-16]
 29466                           ;stkvar	_dividend @ sp[(-1)+-8]
 29467  01F66E  50E1               	movf	fsr1l,w,c
 29468  01F670  0FF7               	addlw	-9
 29469  01F672  6ED9               	movwf	fsr2l,c
 29470  01F674  50E2               	movf	fsr1h,w,c
 29471  01F676  6EDA               	movwf	fsr2h,c
 29472  01F678  0EFF               	movlw	255
 29473  01F67A  22DA               	addwfc	fsr2h,f,c
 29474  01F67C  0EEF               	movlw	-17
 29475  01F67E  50E3               	movf	plusw1,w,c
 29476  01F680  5CDE               	subwf	postinc2,w,c
 29477  01F682  0EF0               	movlw	-16
 29478  01F684  50E3               	movf	plusw1,w,c
 29479  01F686  58DE               	subwfb	postinc2,w,c
 29480  01F688  0EF1               	movlw	-15
 29481  01F68A  50E3               	movf	plusw1,w,c
 29482  01F68C  58DE               	subwfb	postinc2,w,c
 29483  01F68E  0EF2               	movlw	-14
 29484  01F690  50E3               	movf	plusw1,w,c
 29485  01F692  58DE               	subwfb	postinc2,w,c
 29486  01F694  0EF3               	movlw	-13
 29487  01F696  50E3               	movf	plusw1,w,c
 29488  01F698  58DE               	subwfb	postinc2,w,c
 29489  01F69A  0EF4               	movlw	-12
 29490  01F69C  50E3               	movf	plusw1,w,c
 29491  01F69E  58DE               	subwfb	postinc2,w,c
 29492  01F6A0  0EF5               	movlw	-11
 29493  01F6A2  50E3               	movf	plusw1,w,c
 29494  01F6A4  58DE               	subwfb	postinc2,w,c
 29495  01F6A6  0EF6               	movlw	-10
 29496  01F6A8  50E3               	movf	plusw1,w,c
 29497  01F6AA  58DE               	subwfb	postinc2,w,c
 29498  01F6AC  A0D8               	btfss	status,0,c
 29499  01F6AE  D01F               	goto	l10913
 29500                           
 29501                           ;stkvar	_divisor @ sp[(-1)+-16]
 29502                           ;stkvar	_dividend @ sp[(-1)+-8]
 29503  01F6B0  50E1               	movf	fsr1l,w,c
 29504  01F6B2  0FF7               	addlw	-9
 29505  01F6B4  6ED9               	movwf	fsr2l,c
 29506  01F6B6  50E2               	movf	fsr1h,w,c
 29507  01F6B8  6EDA               	movwf	fsr2h,c
 29508  01F6BA  0EFF               	movlw	255
 29509  01F6BC  22DA               	addwfc	fsr2h,f,c
 29510  01F6BE  0EEF               	movlw	-17
 29511  01F6C0  50E3               	movf	plusw1,w,c
 29512  01F6C2  5EDE               	subwf	postinc2,f,c
 29513  01F6C4  0EF0               	movlw	-16
 29514  01F6C6  50E3               	movf	plusw1,w,c
 29515  01F6C8  5ADE               	subwfb	postinc2,f,c
 29516  01F6CA  0EF1               	movlw	-15
 29517  01F6CC  50E3               	movf	plusw1,w,c
 29518  01F6CE  5ADE               	subwfb	postinc2,f,c
 29519  01F6D0  0EF2               	movlw	-14
 29520  01F6D2  50E3               	movf	plusw1,w,c
 29521  01F6D4  5ADE               	subwfb	postinc2,f,c
 29522  01F6D6  0EF3               	movlw	-13
 29523  01F6D8  50E3               	movf	plusw1,w,c
 29524  01F6DA  5ADE               	subwfb	postinc2,f,c
 29525  01F6DC  0EF4               	movlw	-12
 29526  01F6DE  50E3               	movf	plusw1,w,c
 29527  01F6E0  5ADE               	subwfb	postinc2,f,c
 29528  01F6E2  0EF5               	movlw	-11
 29529  01F6E4  50E3               	movf	plusw1,w,c
 29530  01F6E6  5ADE               	subwfb	postinc2,f,c
 29531  01F6E8  0EF6               	movlw	-10
 29532  01F6EA  50E3               	movf	plusw1,w,c
 29533  01F6EC  5ADE               	subwfb	postinc2,f,c
 29534  01F6EE                     l10913:
 29535                           
 29536                           ;stkvar	_divisor @ sp[(-1)+-16]
 29537  01F6EE  90D8               	bcf	status,0,c
 29538  01F6F0  0EF6               	movlw	-10
 29539  01F6F2  32E3               	rrcf	plusw1,f,c
 29540  01F6F4  0EF5               	movlw	-11
 29541  01F6F6  32E3               	rrcf	plusw1,f,c
 29542  01F6F8  0EF4               	movlw	-12
 29543  01F6FA  32E3               	rrcf	plusw1,f,c
 29544  01F6FC  0EF3               	movlw	-13
 29545  01F6FE  32E3               	rrcf	plusw1,f,c
 29546  01F700  0EF2               	movlw	-14
 29547  01F702  32E3               	rrcf	plusw1,f,c
 29548  01F704  0EF1               	movlw	-15
 29549  01F706  32E3               	rrcf	plusw1,f,c
 29550  01F708  0EF0               	movlw	-16
 29551  01F70A  32E3               	rrcf	plusw1,f,c
 29552  01F70C  0EEF               	movlw	-17
 29553  01F70E  32E3               	rrcf	plusw1,f,c
 29554                           
 29555                           ;stkvar	_counter @ sp[(-1)+0]
 29556  01F710  0EFF               	movlw	-1
 29557  01F712  50E3               	movf	plusw1,w,c
 29558  01F714  6E2A               	movwf	btemp^0,c
 29559  01F716  0E01               	movlw	1
 29560  01F718  5E2A               	subwf	btemp^0,f,c
 29561  01F71A  0EFF               	movlw	-1
 29562  01F71C  0060  F0AB  FFE3   	movff	btemp,plusw1
 29563  01F722  A4D8               	btfss	status,2,c
 29564  01F724  D7A4               	goto	u9250
 29565  01F726                     u9270:
 29566                           
 29567                           ;stkvar	_dividend @ sp[(-1)+-8]
 29568  01F726  0EF7               	movlw	247
 29569  01F728  24E1               	addwf	fsr1l,w,c
 29570  01F72A  6ED9               	movwf	fsr2l,c
 29571  01F72C  0EFF               	movlw	255
 29572  01F72E  20E2               	addwfc	fsr1h,w,c
 29573  01F730  6EDA               	movwf	fsr2h,c
 29574                           
 29575                           ;stkvar	?___lomod @ sp[(-1)+-8]
 29576  01F732  0E08               	movlw	8
 29577  01F734  6E2A               	movwf	btemp^0,c
 29578  01F736  0EF7               	movlw	-9
 29579  01F738                     us928999:
 29580  01F738  006F FF7B FFE3     	movff	postinc2,plusw1
 29581  01F73E  28E8               	incf	wreg,w,c
 29582  01F740  2E2A               	decfsz	btemp^0,f,c
 29583  01F742  D7FA               	bra	us928999
 29584                           
 29585                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29586  01F744  52E5               	movf	postdec1,f,c
 29587  01F746  0012               	return		;funcret
 29588  01F748                     __end_of___lomod:
 29589                           	opt callstack 0
 29590                           
 29591 ;; *************** function ___lodiv *****************
 29592 ;; Defined at:
 29593 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 29594 ;; Parameters:    Size  Location     Type
 29595 ;;  dividend        8  [STACK] unsigned long long 
 29596 ;;  divisor         8  [STACK] unsigned long long 
 29597 ;; Auto vars:     Size  Location     Type
 29598 ;;  quotient        8  [STACK] unsigned long long 
 29599 ;;  counter         1  [STACK] unsigned char 
 29600 ;; Return value:  Size  Location     Type
 29601 ;;                  8  [STACK] unsigned long long 
 29602 ;; Registers used:
 29603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29604 ;; Tracked objects:
 29605 ;;		On entry : 0/3
 29606 ;;		On exit  : 0/0
 29607 ;;		Unchanged: 0/0
 29608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29613 ;;Total ram usage:        0 bytes
 29614 ;; Hardware stack levels used:    1
 29615 ;; Hardware stack levels required when called:   15
 29616 ;; This function calls:
 29617 ;;		Nothing
 29618 ;; This function is called by:
 29619 ;;		_utoa
 29620 ;; This function uses a reentrant model
 29621 ;;
 29622                           
 29623                           	psect	text100
 29624  01E6D8                     __ptext100:
 29625                           	opt callstack 0
 29626  01E6D8                     ___lodiv:
 29627                           	opt callstack 0
 29628                           
 29629                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29630  01E6D8  0E09               	movlw	9
 29631  01E6DA  26E1               	addwf	fsr1l,f,c
 29632  01E6DC  0E00               	movlw	0
 29633  01E6DE  22E2               	addwfc	fsr1h,f,c
 29634                           
 29635                           ;stkvar	_quotient @ sp[(-9)+0]
 29636                           
 29637                           ;incstack = 0
 29638 ;; hardware stack exceeded
 29639  01E6E0  0E07               	movlw	7
 29640  01E6E2  6E2A               	movwf	btemp^0,c
 29641  01E6E4  0EF7               	movlw	-9
 29642  01E6E6                     u9181:
 29643  01E6E6  6AE3               	clrf	plusw1,c
 29644  01E6E8  2AE8               	incf	wreg,f,c
 29645  01E6EA  062A               	decf	btemp^0,f,c
 29646  01E6EC  E2FC               	bc	u9181
 29647                           
 29648                           ;stkvar	_divisor @ sp[(-9)+-16]
 29649  01E6EE  0EE7               	movlw	-25
 29650  01E6F0  50E3               	movf	plusw1,w,c
 29651  01E6F2  E116               	bnz	u9190
 29652  01E6F4  0EE8               	movlw	-24
 29653  01E6F6  50E3               	movf	plusw1,w,c
 29654  01E6F8  E113               	bnz	u9190
 29655  01E6FA  0EE9               	movlw	-23
 29656  01E6FC  50E3               	movf	plusw1,w,c
 29657  01E6FE  E110               	bnz	u9190
 29658  01E700  0EEA               	movlw	-22
 29659  01E702  50E3               	movf	plusw1,w,c
 29660  01E704  E10D               	bnz	u9190
 29661  01E706  0EEB               	movlw	-21
 29662  01E708  50E3               	movf	plusw1,w,c
 29663  01E70A  E10A               	bnz	u9190
 29664  01E70C  0EEC               	movlw	-20
 29665  01E70E  50E3               	movf	plusw1,w,c
 29666  01E710  E107               	bnz	u9190
 29667  01E712  0EED               	movlw	-19
 29668  01E714  50E3               	movf	plusw1,w,c
 29669  01E716  E104               	bnz	u9190
 29670  01E718  0EEE               	movlw	-18
 29671  01E71A  50E3               	movf	plusw1,w,c
 29672  01E71C  B4D8               	btfsc	status,2,c
 29673  01E71E  D088               	goto	u9220
 29674  01E720                     u9190:
 29675                           
 29676                           ;stkvar	_counter @ sp[(-9)+8]
 29677  01E720  0EFF               	movlw	-1
 29678  01E722  6AE3               	clrf	plusw1,c
 29679  01E724  D012               	goto	L30
 29680  01E726                     l10881:
 29681                           
 29682                           ;stkvar	_divisor @ sp[(-9)+-16]
 29683  01E726  90D8               	bcf	status,0,c
 29684  01E728  0EE7               	movlw	-25
 29685  01E72A  36E3               	rlcf	plusw1,f,c
 29686  01E72C  0EE8               	movlw	-24
 29687  01E72E  36E3               	rlcf	plusw1,f,c
 29688  01E730  0EE9               	movlw	-23
 29689  01E732  36E3               	rlcf	plusw1,f,c
 29690  01E734  0EEA               	movlw	-22
 29691  01E736  36E3               	rlcf	plusw1,f,c
 29692  01E738  0EEB               	movlw	-21
 29693  01E73A  36E3               	rlcf	plusw1,f,c
 29694  01E73C  0EEC               	movlw	-20
 29695  01E73E  36E3               	rlcf	plusw1,f,c
 29696  01E740  0EED               	movlw	-19
 29697  01E742  36E3               	rlcf	plusw1,f,c
 29698  01E744  0EEE               	movlw	-18
 29699  01E746  36E3               	rlcf	plusw1,f,c
 29700                           
 29701                           ;stkvar	_counter @ sp[(-9)+8]
 29702  01E748  0EFF               	movlw	-1
 29703  01E74A                     L30:
 29704  01E74A  2AE3               	incf	plusw1,f,c
 29705                           
 29706                           ;stkvar	_divisor @ sp[(-9)+-16]
 29707  01E74C  0EEE               	movlw	-18
 29708  01E74E  AEE3               	btfss	plusw1,7,c
 29709  01E750  D7EA               	goto	l10881
 29710  01E752                     u9200:
 29711                           
 29712                           ;stkvar	_quotient @ sp[(-9)+0]
 29713  01E752  90D8               	bcf	status,0,c
 29714  01E754  0EF7               	movlw	-9
 29715  01E756  36E3               	rlcf	plusw1,f,c
 29716  01E758  0EF8               	movlw	-8
 29717  01E75A  36E3               	rlcf	plusw1,f,c
 29718  01E75C  0EF9               	movlw	-7
 29719  01E75E  36E3               	rlcf	plusw1,f,c
 29720  01E760  0EFA               	movlw	-6
 29721  01E762  36E3               	rlcf	plusw1,f,c
 29722  01E764  0EFB               	movlw	-5
 29723  01E766  36E3               	rlcf	plusw1,f,c
 29724  01E768  0EFC               	movlw	-4
 29725  01E76A  36E3               	rlcf	plusw1,f,c
 29726  01E76C  0EFD               	movlw	-3
 29727  01E76E  36E3               	rlcf	plusw1,f,c
 29728  01E770  0EFE               	movlw	-2
 29729  01E772  36E3               	rlcf	plusw1,f,c
 29730                           
 29731                           ;stkvar	_divisor @ sp[(-9)+-16]
 29732                           ;stkvar	_dividend @ sp[(-9)+-8]
 29733  01E774  50E1               	movf	fsr1l,w,c
 29734  01E776  0FEF               	addlw	-17
 29735  01E778  6ED9               	movwf	fsr2l,c
 29736  01E77A  50E2               	movf	fsr1h,w,c
 29737  01E77C  6EDA               	movwf	fsr2h,c
 29738  01E77E  0EFF               	movlw	255
 29739  01E780  22DA               	addwfc	fsr2h,f,c
 29740  01E782  0EE7               	movlw	-25
 29741  01E784  50E3               	movf	plusw1,w,c
 29742  01E786  5CDE               	subwf	postinc2,w,c
 29743  01E788  0EE8               	movlw	-24
 29744  01E78A  50E3               	movf	plusw1,w,c
 29745  01E78C  58DE               	subwfb	postinc2,w,c
 29746  01E78E  0EE9               	movlw	-23
 29747  01E790  50E3               	movf	plusw1,w,c
 29748  01E792  58DE               	subwfb	postinc2,w,c
 29749  01E794  0EEA               	movlw	-22
 29750  01E796  50E3               	movf	plusw1,w,c
 29751  01E798  58DE               	subwfb	postinc2,w,c
 29752  01E79A  0EEB               	movlw	-21
 29753  01E79C  50E3               	movf	plusw1,w,c
 29754  01E79E  58DE               	subwfb	postinc2,w,c
 29755  01E7A0  0EEC               	movlw	-20
 29756  01E7A2  50E3               	movf	plusw1,w,c
 29757  01E7A4  58DE               	subwfb	postinc2,w,c
 29758  01E7A6  0EED               	movlw	-19
 29759  01E7A8  50E3               	movf	plusw1,w,c
 29760  01E7AA  58DE               	subwfb	postinc2,w,c
 29761  01E7AC  0EEE               	movlw	-18
 29762  01E7AE  50E3               	movf	plusw1,w,c
 29763  01E7B0  58DE               	subwfb	postinc2,w,c
 29764  01E7B2  A0D8               	btfss	status,0,c
 29765  01E7B4  D021               	goto	l10893
 29766                           
 29767                           ;stkvar	_divisor @ sp[(-9)+-16]
 29768                           ;stkvar	_dividend @ sp[(-9)+-8]
 29769  01E7B6  50E1               	movf	fsr1l,w,c
 29770  01E7B8  0FEF               	addlw	-17
 29771  01E7BA  6ED9               	movwf	fsr2l,c
 29772  01E7BC  50E2               	movf	fsr1h,w,c
 29773  01E7BE  6EDA               	movwf	fsr2h,c
 29774  01E7C0  0EFF               	movlw	255
 29775  01E7C2  22DA               	addwfc	fsr2h,f,c
 29776  01E7C4  0EE7               	movlw	-25
 29777  01E7C6  50E3               	movf	plusw1,w,c
 29778  01E7C8  5EDE               	subwf	postinc2,f,c
 29779  01E7CA  0EE8               	movlw	-24
 29780  01E7CC  50E3               	movf	plusw1,w,c
 29781  01E7CE  5ADE               	subwfb	postinc2,f,c
 29782  01E7D0  0EE9               	movlw	-23
 29783  01E7D2  50E3               	movf	plusw1,w,c
 29784  01E7D4  5ADE               	subwfb	postinc2,f,c
 29785  01E7D6  0EEA               	movlw	-22
 29786  01E7D8  50E3               	movf	plusw1,w,c
 29787  01E7DA  5ADE               	subwfb	postinc2,f,c
 29788  01E7DC  0EEB               	movlw	-21
 29789  01E7DE  50E3               	movf	plusw1,w,c
 29790  01E7E0  5ADE               	subwfb	postinc2,f,c
 29791  01E7E2  0EEC               	movlw	-20
 29792  01E7E4  50E3               	movf	plusw1,w,c
 29793  01E7E6  5ADE               	subwfb	postinc2,f,c
 29794  01E7E8  0EED               	movlw	-19
 29795  01E7EA  50E3               	movf	plusw1,w,c
 29796  01E7EC  5ADE               	subwfb	postinc2,f,c
 29797  01E7EE  0EEE               	movlw	-18
 29798  01E7F0  50E3               	movf	plusw1,w,c
 29799  01E7F2  5ADE               	subwfb	postinc2,f,c
 29800                           
 29801                           ;stkvar	_quotient @ sp[(-9)+0]
 29802  01E7F4  0EF7               	movlw	-9
 29803  01E7F6  80E3               	bsf	plusw1,0,c
 29804  01E7F8                     l10893:
 29805                           
 29806                           ;stkvar	_divisor @ sp[(-9)+-16]
 29807  01E7F8  90D8               	bcf	status,0,c
 29808  01E7FA  0EEE               	movlw	-18
 29809  01E7FC  32E3               	rrcf	plusw1,f,c
 29810  01E7FE  0EED               	movlw	-19
 29811  01E800  32E3               	rrcf	plusw1,f,c
 29812  01E802  0EEC               	movlw	-20
 29813  01E804  32E3               	rrcf	plusw1,f,c
 29814  01E806  0EEB               	movlw	-21
 29815  01E808  32E3               	rrcf	plusw1,f,c
 29816  01E80A  0EEA               	movlw	-22
 29817  01E80C  32E3               	rrcf	plusw1,f,c
 29818  01E80E  0EE9               	movlw	-23
 29819  01E810  32E3               	rrcf	plusw1,f,c
 29820  01E812  0EE8               	movlw	-24
 29821  01E814  32E3               	rrcf	plusw1,f,c
 29822  01E816  0EE7               	movlw	-25
 29823  01E818  32E3               	rrcf	plusw1,f,c
 29824                           
 29825                           ;stkvar	_counter @ sp[(-9)+8]
 29826  01E81A  0EFF               	movlw	-1
 29827  01E81C  50E3               	movf	plusw1,w,c
 29828  01E81E  6E2A               	movwf	btemp^0,c
 29829  01E820  0E01               	movlw	1
 29830  01E822  5E2A               	subwf	btemp^0,f,c
 29831  01E824  0EFF               	movlw	-1
 29832  01E826  0060  F0AB  FFE3   	movff	btemp,plusw1
 29833  01E82C  A4D8               	btfss	status,2,c
 29834  01E82E  D791               	goto	u9200
 29835  01E830                     u9220:
 29836                           
 29837                           ;stkvar	_quotient @ sp[(-9)+0]
 29838  01E830  0EF7               	movlw	247
 29839  01E832  24E1               	addwf	fsr1l,w,c
 29840  01E834  6ED9               	movwf	fsr2l,c
 29841  01E836  0EFF               	movlw	255
 29842  01E838  20E2               	addwfc	fsr1h,w,c
 29843  01E83A  6EDA               	movwf	fsr2h,c
 29844                           
 29845                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 29846  01E83C  0E08               	movlw	8
 29847  01E83E  6E2A               	movwf	btemp^0,c
 29848  01E840  0EEF               	movlw	-17
 29849  01E842                     us923999:
 29850  01E842  006F FF7B FFE3     	movff	postinc2,plusw1
 29851  01E848  28E8               	incf	wreg,w,c
 29852  01E84A  2E2A               	decfsz	btemp^0,f,c
 29853  01E84C  D7FA               	bra	us923999
 29854                           
 29855                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29856  01E84E  0EF7               	movlw	247
 29857  01E850  26E1               	addwf	fsr1l,f,c
 29858  01E852  0EFF               	movlw	255
 29859  01E854  22E2               	addwfc	fsr1h,f,c
 29860  01E856  0012               	return		;funcret
 29861  01E858                     __end_of___lodiv:
 29862                           	opt callstack 0
 29863                           
 29864 ;; *************** function _strncmp *****************
 29865 ;; Defined at:
 29866 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 29867 ;; Parameters:    Size  Location     Type
 29868 ;;  _l              2  [STACK] PTR const unsigned char 
 29869 ;;		 -> ct(3), STR_103(127), STR_101(3), STR_100(3), 
 29870 ;;		 -> STR_99(21), STR_98(21), STR_97(21), STR_96(21), 
 29871 ;;		 -> STR_95(21), STR_94(21), STR_93(26), STR_92(15), 
 29872 ;;		 -> STR_91(15), STR_90(15), STR_89(15), STR_88(10), 
 29873 ;;		 -> STR_87(10), STR_86(19), STR_85(19), STR_82(3), 
 29874 ;;		 -> STR_81(14), STR_80(28), STR_79(28), STR_78(28), 
 29875 ;;		 -> STR_77(21), STR_76(21), STR_75(21), STR_74(21), 
 29876 ;;		 -> STR_73(21), STR_72(21), STR_71(21), STR_70(21), 
 29877 ;;		 -> STR_69(21), STR_68(18), STR_67(21), STR_66(21), 
 29878 ;;		 -> STR_65(21), STR_64(21), STR_63(21), STR_62(21), 
 29879 ;;		 -> STR_61(21), STR_60(21), STR_59(21), STR_58(21), 
 29880 ;;		 -> STR_57(21), STR_56(21), STR_55(20), STR_54(21), 
 29881 ;;		 -> STR_53(21), STR_52(21), STR_51(22), STR_50(22), 
 29882 ;;		 -> STR_49(22), STR_48(23), STR_47(23), STR_46(23), 
 29883 ;;		 -> STR_45(29), STR_44(23), STR_43(23), STR_42(22), 
 29884 ;;		 -> STR_41(22), STR_40(22), STR_39(22), STR_38(22), 
 29885 ;;		 -> STR_37(22), STR_36(22), STR_35(22), STR_34(22), 
 29886 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(17), 
 29887 ;;		 -> STR_29(16), STR_28(16), STR_27(21), STR_26(21), 
 29888 ;;		 -> STR_25(21), STR_24(14), STR_23(26), STR_22(26), 
 29889 ;;		 -> STR_21(22), STR_20(21), STR_19(21), STR_18(21), 
 29890 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(22), 
 29891 ;;		 -> STR_13(26), STR_12(21), STR_11(21), STR_10(21), 
 29892 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29893 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29894 ;;  _r              2  [STACK] PTR const unsigned char 
 29895 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_123(3), 
 29896 ;;		 -> STR_118(3), STR_114(3), 
 29897 ;;  n               2  [STACK] unsigned int 
 29898 ;; Auto vars:     Size  Location     Type
 29899 ;;  r               2  [STACK] PTR const unsigned char 
 29900 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_123(3), 
 29901 ;;		 -> STR_118(3), STR_114(3), 
 29902 ;;  l               2  [STACK] PTR const unsigned char 
 29903 ;;		 -> ct(3), STR_103(127), STR_101(3), STR_100(3), 
 29904 ;;		 -> STR_99(21), STR_98(21), STR_97(21), STR_96(21), 
 29905 ;;		 -> STR_95(21), STR_94(21), STR_93(26), STR_92(15), 
 29906 ;;		 -> STR_91(15), STR_90(15), STR_89(15), STR_88(10), 
 29907 ;;		 -> STR_87(10), STR_86(19), STR_85(19), STR_82(3), 
 29908 ;;		 -> STR_81(14), STR_80(28), STR_79(28), STR_78(28), 
 29909 ;;		 -> STR_77(21), STR_76(21), STR_75(21), STR_74(21), 
 29910 ;;		 -> STR_73(21), STR_72(21), STR_71(21), STR_70(21), 
 29911 ;;		 -> STR_69(21), STR_68(18), STR_67(21), STR_66(21), 
 29912 ;;		 -> STR_65(21), STR_64(21), STR_63(21), STR_62(21), 
 29913 ;;		 -> STR_61(21), STR_60(21), STR_59(21), STR_58(21), 
 29914 ;;		 -> STR_57(21), STR_56(21), STR_55(20), STR_54(21), 
 29915 ;;		 -> STR_53(21), STR_52(21), STR_51(22), STR_50(22), 
 29916 ;;		 -> STR_49(22), STR_48(23), STR_47(23), STR_46(23), 
 29917 ;;		 -> STR_45(29), STR_44(23), STR_43(23), STR_42(22), 
 29918 ;;		 -> STR_41(22), STR_40(22), STR_39(22), STR_38(22), 
 29919 ;;		 -> STR_37(22), STR_36(22), STR_35(22), STR_34(22), 
 29920 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(17), 
 29921 ;;		 -> STR_29(16), STR_28(16), STR_27(21), STR_26(21), 
 29922 ;;		 -> STR_25(21), STR_24(14), STR_23(26), STR_22(26), 
 29923 ;;		 -> STR_21(22), STR_20(21), STR_19(21), STR_18(21), 
 29924 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(22), 
 29925 ;;		 -> STR_13(26), STR_12(21), STR_11(21), STR_10(21), 
 29926 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29927 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29928 ;; Return value:  Size  Location     Type
 29929 ;;                  2  [STACK] int 
 29930 ;; Registers used:
 29931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 29932 ;; Tracked objects:
 29933 ;;		On entry : 0/0
 29934 ;;		On exit  : 0/0
 29935 ;;		Unchanged: 0/0
 29936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29941 ;;Total ram usage:        0 bytes
 29942 ;; Hardware stack levels used:    1
 29943 ;; Hardware stack levels required when called:   15
 29944 ;; This function calls:
 29945 ;;		Nothing
 29946 ;; This function is called by:
 29947 ;;		_vfpfcnvrt
 29948 ;; This function uses a reentrant model
 29949 ;;
 29950                           
 29951                           	psect	text101
 29952  01D144                     __ptext101:
 29953                           	opt callstack 0
 29954  01D144                     _strncmp:
 29955                           	opt callstack 0
 29956                           
 29957                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29958  01D144  52E6               	movf	postinc1,f,c
 29959  01D146  52E6               	movf	postinc1,f,c
 29960  01D148  52E6               	movf	postinc1,f,c
 29961  01D14A  52E6               	movf	postinc1,f,c
 29962                           
 29963                           ;stkvar	__l @ sp[(-4)+-2]
 29964                           
 29965                           ;incstack = 0
 29966 ;; hardware stack exceeded
 29967  01D14C  0EFA               	movlw	-6
 29968  01D14E  006F FF8C  F034    	movff	plusw1,btemp+10
 29969  01D154  0EFB               	movlw	-5
 29970  01D156  006F FF8C  F035    	movff	plusw1,btemp+11
 29971                           
 29972                           ;stkvar	_l @ sp[(-4)+2]
 29973  01D15C  0EFF               	movlw	-1
 29974  01D15E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29975  01D164  0EFE               	movlw	-2
 29976  01D166  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29977                           
 29978                           ;stkvar	__r @ sp[(-4)+-4]
 29979  01D16C  0EF8               	movlw	-8
 29980  01D16E  006F FF8C  F034    	movff	plusw1,btemp+10
 29981  01D174  0EF9               	movlw	-7
 29982  01D176  006F FF8C  F035    	movff	plusw1,btemp+11
 29983                           
 29984                           ;stkvar	_r @ sp[(-4)+0]
 29985  01D17C  0EFD               	movlw	-3
 29986  01D17E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29987  01D184  0EFC               	movlw	-4
 29988  01D186  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29989                           
 29990                           ;stkvar	_n @ sp[(-4)+-6]
 29991  01D18C  0EF6               	movlw	-10
 29992  01D18E  006F FF8C  F02A    	movff	plusw1,btemp
 29993  01D194  0E01               	movlw	1
 29994  01D196  5E2A               	subwf	btemp^0,f,c
 29995  01D198  0EF6               	movlw	-10
 29996  01D19A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29997  01D1A0  0EF7               	movlw	-9
 29998  01D1A2  006F FF8C  F02A    	movff	plusw1,btemp
 29999  01D1A8  0E00               	movlw	0
 30000  01D1AA  5A2A               	subwfb	btemp^0,f,c
 30001  01D1AC  0EF7               	movlw	-9
 30002  01D1AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30003  01D1B4  0EF6               	movlw	-10
 30004  01D1B6  28E3               	incf	plusw1,w,c
 30005  01D1B8  E13F               	bnz	l11591
 30006  01D1BA  0EF7               	movlw	-9
 30007  01D1BC  28E3               	incf	plusw1,w,c
 30008  01D1BE  A4D8               	btfss	status,2,c
 30009  01D1C0  D03B               	goto	l11591
 30010  01D1C2  0E00               	movlw	0
 30011  01D1C4  6E2A               	movwf	btemp^0,c
 30012  01D1C6  0E00               	movlw	0
 30013  01D1C8  6E2B               	movwf	(btemp+1)^0,c
 30014  01D1CA  D0C7               	goto	l3807
 30015  01D1CC                     l11589:
 30016                           
 30017                           ;stkvar	_l @ sp[(-4)+2]
 30018  01D1CC  0EFE               	movlw	-2
 30019  01D1CE  50E3               	movf	plusw1,w,c
 30020  01D1D0  0F01               	addlw	1
 30021  01D1D2  6E2A               	movwf	btemp^0,c
 30022  01D1D4  0EFE               	movlw	-2
 30023  01D1D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30024  01D1DC  6A2A               	clrf	btemp^0,c
 30025  01D1DE  0EFF               	movlw	-1
 30026  01D1E0  50E3               	movf	plusw1,w,c
 30027  01D1E2  202A               	addwfc	btemp^0,w,c
 30028  01D1E4  6E2A               	movwf	btemp^0,c
 30029  01D1E6  0EFF               	movlw	-1
 30030  01D1E8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30031                           
 30032                           ;stkvar	_r @ sp[(-4)+0]
 30033  01D1EE  0EFC               	movlw	-4
 30034  01D1F0  50E3               	movf	plusw1,w,c
 30035  01D1F2  0F01               	addlw	1
 30036  01D1F4  6E2A               	movwf	btemp^0,c
 30037  01D1F6  0EFC               	movlw	-4
 30038  01D1F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30039  01D1FE  6A2A               	clrf	btemp^0,c
 30040  01D200  0EFD               	movlw	-3
 30041  01D202  50E3               	movf	plusw1,w,c
 30042  01D204  202A               	addwfc	btemp^0,w,c
 30043  01D206  6E2A               	movwf	btemp^0,c
 30044  01D208  0EFD               	movlw	-3
 30045  01D20A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30046                           
 30047                           ;stkvar	_n @ sp[(-4)+-6]
 30048  01D210  0EF6               	movlw	-10
 30049  01D212  006F FF8C  F02A    	movff	plusw1,btemp
 30050  01D218  0E01               	movlw	1
 30051  01D21A  5E2A               	subwf	btemp^0,f,c
 30052  01D21C  0EF6               	movlw	-10
 30053  01D21E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30054  01D224  0EF7               	movlw	-9
 30055  01D226  006F FF8C  F02A    	movff	plusw1,btemp
 30056  01D22C  0E00               	movlw	0
 30057  01D22E  5A2A               	subwfb	btemp^0,f,c
 30058  01D230  0EF7               	movlw	-9
 30059  01D232  0060  F0AB  FFE3   	movff	btemp,plusw1
 30060  01D238                     l11591:
 30061                           
 30062                           ;stkvar	_l @ sp[(-4)+2]
 30063  01D238  0EFE               	movlw	-2
 30064  01D23A  006F FF8F FFF6     	movff	plusw1,tblptrl
 30065  01D240  0EFF               	movlw	-1
 30066  01D242  006F FF8F FFF7     	movff	plusw1,tblptrh
 30067  01D248  0E00               	movlw	low (__mediumconst shr (0+16))
 30068  01D24A  6EF8               	movwf	tblptru,c
 30069  01D24C  0E1F               	movlw	(high __ramtop+-1)
 30070  01D24E  64F7               	cpfsgt	tblptrh,c
 30071  01D250  D003               	bra	u10527
 30072  01D252  0008               	tblrd		*
 30073  01D254  50F5               	movf	tablat,w,c
 30074  01D256  D007               	bra	u10520
 30075  01D258                     u10527:
 30076  01D258  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30077  01D25E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30078  01D264  50EF               	movf	indf0,w,c
 30079  01D266                     u10520:
 30080  01D266  0900               	iorlw	0
 30081  01D268  B4D8               	btfsc	status,2,c
 30082  01D26A  D04A               	goto	u10560
 30083                           
 30084                           ;stkvar	_r @ sp[(-4)+0]
 30085  01D26C  50E1               	movf	fsr1l,w,c
 30086  01D26E  0FFC               	addlw	-4
 30087  01D270  6ED9               	movwf	fsr2l,c
 30088  01D272  50E2               	movf	fsr1h,w,c
 30089  01D274  6EDA               	movwf	fsr2h,c
 30090  01D276  0EFF               	movlw	255
 30091  01D278  22DA               	addwfc	fsr2h,f,c
 30092  01D27A  006F FF7B FFF6     	movff	postinc2,tblptrl
 30093  01D280  006F FF77 FFF7     	movff	postdec2,tblptrh
 30094  01D286                     	if	0	;tblptru may be non-zero
 30095  01D286                     	endif
 30096  01D286                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30097  01D286  0E00               	movlw	low (__mediumconst shr (0+16))
 30098  01D288  6EF8               	movwf	tblptru,c
 30099  01D28A                     	endif
 30100  01D28A  0008               	tblrd		*
 30101  01D28C  50F5               	movf	tablat,w,c
 30102  01D28E  0900               	iorlw	0
 30103  01D290  B4D8               	btfsc	status,2,c
 30104  01D292  D036               	goto	u10560
 30105                           
 30106                           ;stkvar	_n @ sp[(-4)+-6]
 30107  01D294  0EF6               	movlw	-10
 30108  01D296  006F FF8C  F02A    	movff	plusw1,btemp
 30109  01D29C  0EF7               	movlw	-9
 30110  01D29E  50E3               	movf	plusw1,w,c
 30111  01D2A0  102A               	iorwf	btemp^0,w,c
 30112  01D2A2  B4D8               	btfsc	status,2,c
 30113  01D2A4  D02D               	goto	u10560
 30114                           
 30115                           ;stkvar	_r @ sp[(-4)+0]
 30116  01D2A6  50E1               	movf	fsr1l,w,c
 30117  01D2A8  0FFC               	addlw	-4
 30118  01D2AA  6ED9               	movwf	fsr2l,c
 30119  01D2AC  50E2               	movf	fsr1h,w,c
 30120  01D2AE  6EDA               	movwf	fsr2h,c
 30121  01D2B0  0EFF               	movlw	255
 30122  01D2B2  22DA               	addwfc	fsr2h,f,c
 30123  01D2B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 30124  01D2BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 30125  01D2C0                     	if	0	;tblptru may be non-zero
 30126  01D2C0                     	endif
 30127  01D2C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30128  01D2C0  0E00               	movlw	low (__mediumconst shr (0+16))
 30129  01D2C2  6EF8               	movwf	tblptru,c
 30130  01D2C4                     	endif
 30131  01D2C4  0008               	tblrd		*
 30132  01D2C6  006F FFD4  F035    	movff	tablat,btemp+11
 30133                           
 30134                           ;stkvar	_l @ sp[(-4)+2]
 30135  01D2CC  0EFE               	movlw	-2
 30136  01D2CE  006F FF8F FFF6     	movff	plusw1,tblptrl
 30137  01D2D4  0EFF               	movlw	-1
 30138  01D2D6  006F FF8F FFF7     	movff	plusw1,tblptrh
 30139  01D2DC  0E00               	movlw	low (__mediumconst shr (0+16))
 30140  01D2DE  6EF8               	movwf	tblptru,c
 30141  01D2E0  0E1F               	movlw	(high __ramtop+-1)
 30142  01D2E2  64F7               	cpfsgt	tblptrh,c
 30143  01D2E4  D003               	bra	u10567
 30144  01D2E6  0008               	tblrd		*
 30145  01D2E8  50F5               	movf	tablat,w,c
 30146  01D2EA  D007               	bra	u10565
 30147  01D2EC                     u10567:
 30148  01D2EC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30149  01D2F2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30150  01D2F8  50EF               	movf	indf0,w,c
 30151  01D2FA                     u10565:
 30152  01D2FA  1835               	xorwf	(btemp+11)^0,w,c
 30153  01D2FC  B4D8               	btfsc	status,2,c
 30154  01D2FE  D766               	goto	l11589
 30155  01D300                     u10560:
 30156                           
 30157                           ;stkvar	_l @ sp[(-4)+2]
 30158  01D300  0EFE               	movlw	-2
 30159  01D302  006F FF8F FFF6     	movff	plusw1,tblptrl
 30160  01D308  0EFF               	movlw	-1
 30161  01D30A  006F FF8F FFF7     	movff	plusw1,tblptrh
 30162  01D310  0E00               	movlw	low (__mediumconst shr (0+16))
 30163  01D312  6EF8               	movwf	tblptru,c
 30164  01D314  0E1F               	movlw	(high __ramtop+-1)
 30165  01D316  64F7               	cpfsgt	tblptrh,c
 30166  01D318  D003               	bra	u10577
 30167  01D31A  0008               	tblrd		*
 30168  01D31C  50F5               	movf	tablat,w,c
 30169  01D31E  D007               	bra	u10570
 30170  01D320                     u10577:
 30171  01D320  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30172  01D326  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30173  01D32C  50EF               	movf	indf0,w,c
 30174  01D32E                     u10570:
 30175  01D32E  6E2A               	movwf	btemp^0,c
 30176  01D330  6A2B               	clrf	(btemp+1)^0,c
 30177                           
 30178                           ;stkvar	_r @ sp[(-4)+0]
 30179  01D332  50E1               	movf	fsr1l,w,c
 30180  01D334  0FFC               	addlw	-4
 30181  01D336  6ED9               	movwf	fsr2l,c
 30182  01D338  50E2               	movf	fsr1h,w,c
 30183  01D33A  6EDA               	movwf	fsr2h,c
 30184  01D33C  0EFF               	movlw	255
 30185  01D33E  22DA               	addwfc	fsr2h,f,c
 30186  01D340  006F FF7B FFF6     	movff	postinc2,tblptrl
 30187  01D346  006F FF77 FFF7     	movff	postdec2,tblptrh
 30188  01D34C                     	if	0	;tblptru may be non-zero
 30189  01D34C                     	endif
 30190  01D34C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30191  01D34C  0E00               	movlw	low (__mediumconst shr (0+16))
 30192  01D34E  6EF8               	movwf	tblptru,c
 30193  01D350                     	endif
 30194  01D350  0008               	tblrd		*
 30195  01D352  50F5               	movf	tablat,w,c
 30196  01D354  5E2A               	subwf	btemp^0,f,c
 30197  01D356  0E00               	movlw	0
 30198  01D358  5A2B               	subwfb	(btemp+1)^0,f,c
 30199  01D35A                     l3807:
 30200                           
 30201                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 30202  01D35A  0EF6               	movlw	246
 30203  01D35C  26E1               	addwf	fsr1l,f,c
 30204  01D35E  0EFF               	movlw	255
 30205  01D360  22E2               	addwfc	fsr1h,f,c
 30206  01D362  0012               	return		;funcret
 30207  01D364                     __end_of_strncmp:
 30208                           	opt callstack 0
 30209                           
 30210 ;; *************** function _stoa *****************
 30211 ;; Defined at:
 30212 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30213 ;; Parameters:    Size  Location     Type
 30214 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30215 ;;		 -> f(6), NULL(0), 
 30216 ;;  s               2  [STACK] PTR unsigned char 
 30217 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_84(9), 
 30218 ;;		 -> STR_83(12), D.lcd(640), D(642), T(176), 
 30219 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 30220 ;; Auto vars:     Size  Location     Type
 30221 ;;  nuls            7  [STACK] unsigned char [7]
 30222 ;;  l               2  [STACK] int 
 30223 ;;  p               2  [STACK] int 
 30224 ;;  cp              2  [STACK] PTR unsigned char 
 30225 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 30226 ;;		 -> STR_84(9), STR_83(12), D.lcd(640), D(642), 
 30227 ;;		 -> T(176), cp(4), cb(4), STR_3(5), 
 30228 ;;		 -> V(181), 
 30229 ;;  w               2  [STACK] int 
 30230 ;;  i               2  [STACK] int 
 30231 ;; Return value:  Size  Location     Type
 30232 ;;                  2  [STACK] int 
 30233 ;; Registers used:
 30234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 30235 ;; Tracked objects:
 30236 ;;		On entry : 0/0
 30237 ;;		On exit  : 0/0
 30238 ;;		Unchanged: 0/0
 30239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30244 ;;Total ram usage:        0 bytes
 30245 ;; Hardware stack levels used:    1
 30246 ;; Hardware stack levels required when called:   18
 30247 ;; This function calls:
 30248 ;;		_fputc
 30249 ;;		_strlen
 30250 ;; This function is called by:
 30251 ;;		_vfpfcnvrt
 30252 ;; This function uses a reentrant model
 30253 ;;
 30254                           
 30255                           	psect	text102
 30256  01BB98                     __ptext102:
 30257                           	opt callstack 0
 30258  01BB98                     _stoa:
 30259                           	opt callstack 0
 30260                           
 30261                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30262  01BB98  0E11               	movlw	17
 30263  01BB9A  26E1               	addwf	fsr1l,f,c
 30264  01BB9C  0E00               	movlw	0
 30265  01BB9E  22E2               	addwfc	fsr1h,f,c
 30266                           
 30267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 30268                           
 30269                           ;incstack = 0
 30270 ;; hardware stack exceeded
 30271  01BBA0  EE20  F200         	lfsr	2,stoa@F1166
 30272                           
 30273                           ;stkvar	_nuls @ sp[(-17)+0]
 30274  01BBA4  0E07               	movlw	7
 30275  01BBA6  6E2A               	movwf	btemp^0,c
 30276  01BBA8  0EEF               	movlw	-17
 30277  01BBAA                     us1561999:
 30278  01BBAA  006F FF7B FFE3     	movff	postinc2,plusw1
 30279  01BBB0  28E8               	incf	wreg,w,c
 30280  01BBB2  2E2A               	decfsz	btemp^0,f,c
 30281  01BBB4  D7FA               	bra	us1561999
 30282                           
 30283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 30284                           ;stkvar	_s @ sp[(-17)+-4]
 30285  01BBB6  0EEB               	movlw	-21
 30286  01BBB8  006F FF8C  F034    	movff	plusw1,btemp+10
 30287  01BBBE  0EEC               	movlw	-20
 30288  01BBC0  006F FF8C  F035    	movff	plusw1,btemp+11
 30289                           
 30290                           ;stkvar	_cp @ sp[(-17)+11]
 30291  01BBC6  0EFB               	movlw	-5
 30292  01BBC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30293  01BBCE  0EFA               	movlw	-6
 30294  01BBD0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30295                           
 30296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 30297                           ;stkvar	_cp @ sp[(-17)+11]
 30298  01BBD6  0EFA               	movlw	-6
 30299  01BBD8  006F FF8C  F02A    	movff	plusw1,btemp
 30300  01BBDE  0EFB               	movlw	-5
 30301  01BBE0  50E3               	movf	plusw1,w,c
 30302  01BBE2  102A               	iorwf	btemp^0,w,c
 30303  01BBE4  A4D8               	btfss	status,2,c
 30304  01BBE6  D00E               	goto	l16191
 30305                           
 30306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 30307                           ;stkvar	_nuls @ sp[(-17)+0]
 30308  01BBE8  0EEF               	movlw	239
 30309  01BBEA  24E1               	addwf	fsr1l,w,c
 30310  01BBEC  6E34               	movwf	(btemp+10)^0,c
 30311  01BBEE  0EFF               	movlw	255
 30312  01BBF0  20E2               	addwfc	fsr1h,w,c
 30313  01BBF2  6E35               	movwf	(btemp+11)^0,c
 30314                           
 30315                           ;stkvar	_cp @ sp[(-17)+11]
 30316  01BBF4  0EFB               	movlw	-5
 30317  01BBF6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30318  01BBFC  0EFA               	movlw	-6
 30319  01BBFE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30320  01BC04                     l16191:
 30321                           
 30322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 30323                           ;stkvar	_cp @ sp[(-17)+11]
 30324  01BC04  0EFA               	movlw	-6
 30325  01BC06  006F FF8F FFE6     	movff	plusw1,postinc1
 30326  01BC0C  006F FF8F FFE6     	movff	plusw1,postinc1
 30327  01BC12  ECD6  F007         	call	_strlen	;wreg free
 30328                           
 30329                           ;stkvar	_l @ sp[(-17)+7]
 30330  01BC16  0EF6               	movlw	-10
 30331  01BC18  0060  F0AB  FFE3   	movff	btemp,plusw1
 30332  01BC1E  0EF7               	movlw	-9
 30333  01BC20  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30334                           
 30335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 30336                           ;stkvar	_p @ sp[(-17)+9]
 30337  01BC26  0EF8               	movlw	-8
 30338  01BC28  0060  F133  FFE3   	movff	_prec,plusw1
 30339  01BC2E  0EF9               	movlw	-7
 30340  01BC30  0060  F137  FFE3   	movff	_prec+1,plusw1
 30341                           
 30342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 30343                           ;stkvar	_p @ sp[(-17)+9]
 30344  01BC36  0EF9               	movlw	-7
 30345  01BC38  BEE3               	btfsc	plusw1,7,c
 30346  01BC3A  D023               	goto	l2602
 30347                           
 30348                           ;stkvar	_l @ sp[(-17)+7]
 30349                           ;stkvar	_p @ sp[(-17)+9]
 30350  01BC3C  50E1               	movf	fsr1l,w,c
 30351  01BC3E  0FF8               	addlw	-8
 30352  01BC40  6ED9               	movwf	fsr2l,c
 30353  01BC42  50E2               	movf	fsr1h,w,c
 30354  01BC44  6EDA               	movwf	fsr2h,c
 30355  01BC46  0EFF               	movlw	255
 30356  01BC48  22DA               	addwfc	fsr2h,f,c
 30357  01BC4A  0EF6               	movlw	-10
 30358  01BC4C  50E3               	movf	plusw1,w,c
 30359  01BC4E  5CDE               	subwf	postinc2,w,c
 30360  01BC50  50DE               	movf	postinc2,w,c
 30361  01BC52  0A80               	xorlw	128
 30362  01BC54  6E2A               	movwf	btemp^0,c
 30363  01BC56  0EF7               	movlw	-9
 30364  01BC58  50E3               	movf	plusw1,w,c
 30365  01BC5A  0A80               	xorlw	128
 30366  01BC5C  582A               	subwfb	btemp^0,w,c
 30367  01BC5E  B0D8               	btfsc	status,0,c
 30368  01BC60  D010               	goto	l2602
 30369                           
 30370                           ;stkvar	_p @ sp[(-17)+9]
 30371                           ;stkvar	_l @ sp[(-17)+7]
 30372  01BC62  0EF8               	movlw	-8
 30373  01BC64  006F FF8C  F02A    	movff	plusw1,btemp
 30374  01BC6A  0EF6               	movlw	-10
 30375  01BC6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30376  01BC72  0EF9               	movlw	-7
 30377  01BC74  006F FF8C  F02A    	movff	plusw1,btemp
 30378  01BC7A  0EF7               	movlw	-9
 30379  01BC7C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30380  01BC82                     l2602:
 30381                           
 30382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 30383                           ;stkvar	_l @ sp[(-17)+7]
 30384                           ;stkvar	_p @ sp[(-17)+9]
 30385  01BC82  0EF6               	movlw	-10
 30386  01BC84  006F FF8C  F02A    	movff	plusw1,btemp
 30387  01BC8A  0EF8               	movlw	-8
 30388  01BC8C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30389  01BC92  0EF7               	movlw	-9
 30390  01BC94  006F FF8C  F02A    	movff	plusw1,btemp
 30391  01BC9A  0EF9               	movlw	-7
 30392  01BC9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30393                           
 30394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 30395                           ;stkvar	_w @ sp[(-17)+13]
 30396  01BCA2  0EFC               	movlw	-4
 30397  01BCA4  0060  F12B  FFE3   	movff	_width,plusw1
 30398  01BCAA  0EFD               	movlw	-3
 30399  01BCAC  0060  F12F  FFE3   	movff	_width+1,plusw1
 30400                           
 30401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 30402  01BCB2  A04E               	btfss	_flags^0,0,c
 30403  01BCB4  D01F               	goto	l16211
 30404  01BCB6  D031               	goto	u15660
 30405  01BCB8                     l16207:
 30406                           
 30407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 30408                           ;stkvar	_fp @ sp[(-17)+-2]
 30409  01BCB8  0EED               	movlw	-19
 30410  01BCBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30411  01BCC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30412  01BCC6  0E20               	movlw	32
 30413  01BCC8  6EE6               	movwf	postinc1,c
 30414  01BCCA  0E00               	movlw	0
 30415  01BCCC  6EE6               	movwf	postinc1,c
 30416  01BCCE  EC40  F0FC         	call	_fputc	;wreg free
 30417                           
 30418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 30419                           ;stkvar	_l @ sp[(-17)+7]
 30420  01BCD2  0EF6               	movlw	-10
 30421  01BCD4  50E3               	movf	plusw1,w,c
 30422  01BCD6  0F01               	addlw	1
 30423  01BCD8  6E2A               	movwf	btemp^0,c
 30424  01BCDA  0EF6               	movlw	-10
 30425  01BCDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 30426  01BCE2  6A2A               	clrf	btemp^0,c
 30427  01BCE4  0EF7               	movlw	-9
 30428  01BCE6  50E3               	movf	plusw1,w,c
 30429  01BCE8  202A               	addwfc	btemp^0,w,c
 30430  01BCEA  6E2A               	movwf	btemp^0,c
 30431  01BCEC  0EF7               	movlw	-9
 30432  01BCEE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30433  01BCF4                     l16211:
 30434                           
 30435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 30436                           ;stkvar	_w @ sp[(-17)+13]
 30437                           ;stkvar	_l @ sp[(-17)+7]
 30438  01BCF4  50E1               	movf	fsr1l,w,c
 30439  01BCF6  0FF6               	addlw	-10
 30440  01BCF8  6ED9               	movwf	fsr2l,c
 30441  01BCFA  50E2               	movf	fsr1h,w,c
 30442  01BCFC  6EDA               	movwf	fsr2h,c
 30443  01BCFE  0EFF               	movlw	255
 30444  01BD00  22DA               	addwfc	fsr2h,f,c
 30445  01BD02  0EFC               	movlw	-4
 30446  01BD04  50E3               	movf	plusw1,w,c
 30447  01BD06  5CDE               	subwf	postinc2,w,c
 30448  01BD08  50DE               	movf	postinc2,w,c
 30449  01BD0A  0A80               	xorlw	128
 30450  01BD0C  6E2A               	movwf	btemp^0,c
 30451  01BD0E  0EFD               	movlw	-3
 30452  01BD10  50E3               	movf	plusw1,w,c
 30453  01BD12  0A80               	xorlw	128
 30454  01BD14  582A               	subwfb	btemp^0,w,c
 30455  01BD16  A0D8               	btfss	status,0,c
 30456  01BD18  D7CF               	goto	l16207
 30457  01BD1A                     u15660:
 30458                           
 30459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 30460                           ;stkvar	_i @ sp[(-17)+15]
 30461  01BD1A  0EFE               	movlw	-2
 30462  01BD1C  6AE3               	clrf	plusw1,c
 30463  01BD1E  0EFF               	movlw	-1
 30464  01BD20  6AE3               	clrf	plusw1,c
 30465                           
 30466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30467  01BD22  D045               	goto	l16221
 30468  01BD24                     l16215:
 30469                           
 30470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 30471                           ;stkvar	_fp @ sp[(-17)+-2]
 30472  01BD24  0EED               	movlw	-19
 30473  01BD26  006F FF8F FFE6     	movff	plusw1,postinc1
 30474  01BD2C  006F FF8F FFE6     	movff	plusw1,postinc1
 30475                           
 30476                           ;stkvar	_cp @ sp[(-19)+11]
 30477  01BD32  0EF8               	movlw	-8
 30478  01BD34  006F FF8F FFF6     	movff	plusw1,tblptrl
 30479  01BD3A  0EF9               	movlw	-7
 30480  01BD3C  006F FF8F FFF7     	movff	plusw1,tblptrh
 30481  01BD42  0E00               	movlw	low (__mediumconst shr (0+16))
 30482  01BD44  6EF8               	movwf	tblptru,c
 30483  01BD46  0E1F               	movlw	(high __ramtop+-1)
 30484  01BD48  64F7               	cpfsgt	tblptrh,c
 30485  01BD4A  D003               	bra	u15677
 30486  01BD4C  0008               	tblrd		*
 30487  01BD4E  50F5               	movf	tablat,w,c
 30488  01BD50  D007               	bra	u15670
 30489  01BD52                     u15677:
 30490  01BD52  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30491  01BD58  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30492  01BD5E  50EF               	movf	indf0,w,c
 30493  01BD60                     u15670:
 30494  01BD60  6EE6               	movwf	postinc1,c
 30495  01BD62  0E00               	movlw	0
 30496  01BD64  6EE6               	movwf	postinc1,c
 30497  01BD66  EC40  F0FC         	call	_fputc	;wreg free
 30498                           
 30499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 30500                           ;stkvar	_cp @ sp[(-17)+11]
 30501  01BD6A  0EFA               	movlw	-6
 30502  01BD6C  50E3               	movf	plusw1,w,c
 30503  01BD6E  0F01               	addlw	1
 30504  01BD70  6E2A               	movwf	btemp^0,c
 30505  01BD72  0EFA               	movlw	-6
 30506  01BD74  0060  F0AB  FFE3   	movff	btemp,plusw1
 30507  01BD7A  6A2A               	clrf	btemp^0,c
 30508  01BD7C  0EFB               	movlw	-5
 30509  01BD7E  50E3               	movf	plusw1,w,c
 30510  01BD80  202A               	addwfc	btemp^0,w,c
 30511  01BD82  6E2A               	movwf	btemp^0,c
 30512  01BD84  0EFB               	movlw	-5
 30513  01BD86  0060  F0AB  FFE3   	movff	btemp,plusw1
 30514                           
 30515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 30516                           ;stkvar	_i @ sp[(-17)+15]
 30517  01BD8C  0EFE               	movlw	-2
 30518  01BD8E  50E3               	movf	plusw1,w,c
 30519  01BD90  0F01               	addlw	1
 30520  01BD92  6E2A               	movwf	btemp^0,c
 30521  01BD94  0EFE               	movlw	-2
 30522  01BD96  0060  F0AB  FFE3   	movff	btemp,plusw1
 30523  01BD9C  6A2A               	clrf	btemp^0,c
 30524  01BD9E  0EFF               	movlw	-1
 30525  01BDA0  50E3               	movf	plusw1,w,c
 30526  01BDA2  202A               	addwfc	btemp^0,w,c
 30527  01BDA4  6E2A               	movwf	btemp^0,c
 30528  01BDA6  0EFF               	movlw	-1
 30529  01BDA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30530  01BDAE                     l16221:
 30531                           
 30532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30533                           ;stkvar	_p @ sp[(-17)+9]
 30534                           ;stkvar	_i @ sp[(-17)+15]
 30535  01BDAE  50E1               	movf	fsr1l,w,c
 30536  01BDB0  0FFE               	addlw	-2
 30537  01BDB2  6ED9               	movwf	fsr2l,c
 30538  01BDB4  50E2               	movf	fsr1h,w,c
 30539  01BDB6  6EDA               	movwf	fsr2h,c
 30540  01BDB8  0EFF               	movlw	255
 30541  01BDBA  22DA               	addwfc	fsr2h,f,c
 30542  01BDBC  0EF8               	movlw	-8
 30543  01BDBE  50E3               	movf	plusw1,w,c
 30544  01BDC0  5CDE               	subwf	postinc2,w,c
 30545  01BDC2  50DE               	movf	postinc2,w,c
 30546  01BDC4  0A80               	xorlw	128
 30547  01BDC6  6E2A               	movwf	btemp^0,c
 30548  01BDC8  0EF9               	movlw	-7
 30549  01BDCA  50E3               	movf	plusw1,w,c
 30550  01BDCC  0A80               	xorlw	128
 30551  01BDCE  582A               	subwfb	btemp^0,w,c
 30552  01BDD0  A0D8               	btfss	status,0,c
 30553  01BDD2  D7A8               	goto	l16215
 30554                           
 30555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 30556  01BDD4  B04E               	btfsc	_flags^0,0,c
 30557  01BDD6  D01F               	goto	l16229
 30558  01BDD8  D031               	goto	u15700
 30559  01BDDA                     l16225:
 30560                           
 30561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 30562                           ;stkvar	_fp @ sp[(-17)+-2]
 30563  01BDDA  0EED               	movlw	-19
 30564  01BDDC  006F FF8F FFE6     	movff	plusw1,postinc1
 30565  01BDE2  006F FF8F FFE6     	movff	plusw1,postinc1
 30566  01BDE8  0E20               	movlw	32
 30567  01BDEA  6EE6               	movwf	postinc1,c
 30568  01BDEC  0E00               	movlw	0
 30569  01BDEE  6EE6               	movwf	postinc1,c
 30570  01BDF0  EC40  F0FC         	call	_fputc	;wreg free
 30571                           
 30572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 30573                           ;stkvar	_l @ sp[(-17)+7]
 30574  01BDF4  0EF6               	movlw	-10
 30575  01BDF6  50E3               	movf	plusw1,w,c
 30576  01BDF8  0F01               	addlw	1
 30577  01BDFA  6E2A               	movwf	btemp^0,c
 30578  01BDFC  0EF6               	movlw	-10
 30579  01BDFE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30580  01BE04  6A2A               	clrf	btemp^0,c
 30581  01BE06  0EF7               	movlw	-9
 30582  01BE08  50E3               	movf	plusw1,w,c
 30583  01BE0A  202A               	addwfc	btemp^0,w,c
 30584  01BE0C  6E2A               	movwf	btemp^0,c
 30585  01BE0E  0EF7               	movlw	-9
 30586  01BE10  0060  F0AB  FFE3   	movff	btemp,plusw1
 30587  01BE16                     l16229:
 30588                           
 30589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 30590                           ;stkvar	_w @ sp[(-17)+13]
 30591                           ;stkvar	_l @ sp[(-17)+7]
 30592  01BE16  50E1               	movf	fsr1l,w,c
 30593  01BE18  0FF6               	addlw	-10
 30594  01BE1A  6ED9               	movwf	fsr2l,c
 30595  01BE1C  50E2               	movf	fsr1h,w,c
 30596  01BE1E  6EDA               	movwf	fsr2h,c
 30597  01BE20  0EFF               	movlw	255
 30598  01BE22  22DA               	addwfc	fsr2h,f,c
 30599  01BE24  0EFC               	movlw	-4
 30600  01BE26  50E3               	movf	plusw1,w,c
 30601  01BE28  5CDE               	subwf	postinc2,w,c
 30602  01BE2A  50DE               	movf	postinc2,w,c
 30603  01BE2C  0A80               	xorlw	128
 30604  01BE2E  6E2A               	movwf	btemp^0,c
 30605  01BE30  0EFD               	movlw	-3
 30606  01BE32  50E3               	movf	plusw1,w,c
 30607  01BE34  0A80               	xorlw	128
 30608  01BE36  582A               	subwfb	btemp^0,w,c
 30609  01BE38  A0D8               	btfss	status,0,c
 30610  01BE3A  D7CF               	goto	l16225
 30611  01BE3C                     u15700:
 30612                           
 30613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 30614                           ;stkvar	_l @ sp[(-17)+7]
 30615  01BE3C  0EF6               	movlw	-10
 30616  01BE3E  006F FF8C  F02A    	movff	plusw1,btemp
 30617  01BE44  0EF7               	movlw	-9
 30618  01BE46  006F FF8C  F02B    	movff	plusw1,btemp+1
 30619                           
 30620                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 30621  01BE4C  0EEB               	movlw	235
 30622  01BE4E  26E1               	addwf	fsr1l,f,c
 30623  01BE50  0EFF               	movlw	255
 30624  01BE52  22E2               	addwfc	fsr1h,f,c
 30625  01BE54  0012               	return		;funcret
 30626  01BE56                     __end_of_stoa:
 30627                           	opt callstack 0
 30628                           
 30629 ;; *************** function _efgtoa *****************
 30630 ;; Defined at:
 30631 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30632 ;; Parameters:    Size  Location     Type
 30633 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30634 ;;		 -> f(6), NULL(0), 
 30635 ;;  f               4  [STACK] PTR struct _IO_FILE
 30636 ;;  c               1  [STACK] unsigned char 
 30637 ;; Auto vars:     Size  Location     Type
 30638 ;;  u               4  [STACK] unsigned char 
 30639 ;;  g               4  [STACK] unsigned char 
 30640 ;;  l               4  [STACK] unsigned char 
 30641 ;;  h               4  [STACK] unsigned char 
 30642 ;;  ou              4  [STACK] unsigned char 
 30643 ;;  n               2  [STACK] int 
 30644 ;;  e               2  [STACK] int 
 30645 ;;  i               2  [STACK] int 
 30646 ;;  w               2  [STACK] int 
 30647 ;;  p               2  [STACK] int 
 30648 ;;  sign            2  [STACK] int 
 30649 ;;  d               2  [STACK] int 
 30650 ;;  ne              2  [STACK] int 
 30651 ;;  m               2  [STACK] int 
 30652 ;;  pp              2  [STACK] int 
 30653 ;;  t               2  [STACK] int 
 30654 ;;  mode            1  [STACK] unsigned char 
 30655 ;;  nmode           1  [STACK] unsigned char 
 30656 ;; Return value:  Size  Location     Type
 30657 ;;                  2  [STACK] int 
 30658 ;; Registers used:
 30659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 30660 ;; Tracked objects:
 30661 ;;		On entry : 0/0
 30662 ;;		On exit  : 0/0
 30663 ;;		Unchanged: 0/0
 30664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30669 ;;Total ram usage:        0 bytes
 30670 ;; Hardware stack levels used:    1
 30671 ;; Hardware stack levels required when called:   20
 30672 ;; This function calls:
 30673 ;;		___awdiv
 30674 ;;		___awmod
 30675 ;;		___fladd
 30676 ;;		___fldiv
 30677 ;;		___fleq
 30678 ;;		___flge
 30679 ;;		___flmul
 30680 ;;		___flneg
 30681 ;;		___flsub
 30682 ;;		___fltol
 30683 ;;		___fpclassifyf
 30684 ;;		_floorf
 30685 ;;		_isupper
 30686 ;;		_pad
 30687 ;;		_strcpy
 30688 ;;		_tolower
 30689 ;; This function is called by:
 30690 ;;		_vfpfcnvrt
 30691 ;; This function uses a reentrant model
 30692 ;;
 30693                           
 30694                           	psect	text103
 30695  011514                     __ptext103:
 30696                           	opt callstack 0
 30697  011514                     _efgtoa:
 30698                           	opt callstack 0
 30699                           
 30700                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30701  011514  0E38               	movlw	56
 30702  011516  26E1               	addwf	fsr1l,f,c
 30703  011518  0E00               	movlw	0
 30704  01151A  22E2               	addwfc	fsr1h,f,c
 30705                           
 30706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 30707                           ;stkvar	_sign @ sp[(-56)+42]
 30708                           
 30709                           ;incstack = 0
 30710 ;; hardware stack exceeded
 30711  01151C  0EF2               	movlw	-14
 30712  01151E  6AE3               	clrf	plusw1,c
 30713  011520  0EF3               	movlw	-13
 30714  011522  6AE3               	clrf	plusw1,c
 30715                           
 30716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 30717                           ;stkvar	_f @ sp[(-56)+-6]
 30718  011524  0EC2               	movlw	-62
 30719  011526  006F FF8C  F032    	movff	plusw1,btemp+8
 30720  01152C  0EC3               	movlw	-61
 30721  01152E  006F FF8C  F033    	movff	plusw1,btemp+9
 30722  011534  0EC4               	movlw	-60
 30723  011536  006F FF8C  F034    	movff	plusw1,btemp+10
 30724  01153C  0EC5               	movlw	-59
 30725  01153E  006F FF8C  F035    	movff	plusw1,btemp+11
 30726                           
 30727                           ;stkvar	_g @ sp[(-56)+16]
 30728  011544  0ED8               	movlw	-40
 30729  011546  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30730  01154C  0ED9               	movlw	-39
 30731  01154E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30732  011554  0EDA               	movlw	-38
 30733  011556  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30734  01155C  0EDB               	movlw	-37
 30735  01155E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30736                           
 30737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 30738                           ;stkvar	_g @ sp[(-56)+16]
 30739  011564  0EDB               	movlw	-37
 30740  011566  AEE3               	btfss	plusw1,7,c
 30741  011568  D02B               	goto	l15889
 30742                           
 30743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 30744  01156A  0E01               	movlw	1
 30745  01156C  6E34               	movwf	(btemp+10)^0,c
 30746  01156E  0E00               	movlw	0
 30747  011570  6E35               	movwf	(btemp+11)^0,c
 30748                           
 30749                           ;stkvar	_sign @ sp[(-56)+42]
 30750  011572  0EF2               	movlw	-14
 30751  011574  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30752  01157A  0EF3               	movlw	-13
 30753  01157C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30754                           
 30755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 30756                           ;stkvar	_g @ sp[(-56)+16]
 30757  011582  0ED8               	movlw	-40
 30758  011584  006F FF8F FFE6     	movff	plusw1,postinc1
 30759  01158A  006F FF8F FFE6     	movff	plusw1,postinc1
 30760  011590  006F FF8F FFE6     	movff	plusw1,postinc1
 30761  011596  006F FF8F FFE6     	movff	plusw1,postinc1
 30762  01159C  EC37  F010         	call	___flneg	;wreg free
 30763                           
 30764                           ;stkvar	_g @ sp[(-56)+16]
 30765  0115A0  0ED8               	movlw	-40
 30766  0115A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30767  0115A8  0ED9               	movlw	-39
 30768  0115AA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30769  0115B0  0EDA               	movlw	-38
 30770  0115B2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30771  0115B8  0EDB               	movlw	-37
 30772  0115BA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30773  0115C0                     l15889:
 30774                           
 30775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 30776                           ;stkvar	_n @ sp[(-56)+32]
 30777  0115C0  0EE8               	movlw	-24
 30778  0115C2  6AE3               	clrf	plusw1,c
 30779  0115C4  0EE9               	movlw	-23
 30780  0115C6  6AE3               	clrf	plusw1,c
 30781                           
 30782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 30783                           ;stkvar	_w @ sp[(-56)+38]
 30784  0115C8  0EEE               	movlw	-18
 30785  0115CA  0060  F12B  FFE3   	movff	_width,plusw1
 30786  0115D0  0EEF               	movlw	-17
 30787  0115D2  0060  F12F  FFE3   	movff	_width+1,plusw1
 30788                           
 30789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 30790                           ;stkvar	_sign @ sp[(-56)+42]
 30791  0115D8  0EF2               	movlw	-14
 30792  0115DA  006F FF8C  F02A    	movff	plusw1,btemp
 30793  0115E0  0EF3               	movlw	-13
 30794  0115E2  50E3               	movf	plusw1,w,c
 30795  0115E4  102A               	iorwf	btemp^0,w,c
 30796  0115E6  A4D8               	btfss	status,2,c
 30797  0115E8  D002               	goto	u15110
 30798  0115EA  A44E               	btfss	_flags^0,2,c
 30799  0115EC  D036               	goto	l15909
 30800  0115EE                     u15110:
 30801                           
 30802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 30803                           ;stkvar	_sign @ sp[(-56)+42]
 30804  0115EE  0EF2               	movlw	-14
 30805  0115F0  006F FF8C  F02A    	movff	plusw1,btemp
 30806  0115F6  0EF3               	movlw	-13
 30807  0115F8  50E3               	movf	plusw1,w,c
 30808  0115FA  102A               	iorwf	btemp^0,w,c
 30809  0115FC  A4D8               	btfss	status,2,c
 30810  0115FE  D002               	goto	l15901
 30811  011600  0E2B               	movlw	43
 30812  011602  D001               	goto	L31
 30813  011604                     l15901:
 30814  011604  0E2D               	movlw	45
 30815  011606                     L31:
 30816  011606  6E34               	movwf	(btemp+10)^0,c
 30817  011608  0E00               	movlw	0
 30818  01160A  6E35               	movwf	(btemp+11)^0,c
 30819                           
 30820                           ;stkvar	_efgtoa$6862 @ sp[(-56)+10]
 30821  01160C  0ED2               	movlw	-46
 30822  01160E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30823  011614  0ED3               	movlw	-45
 30824  011616  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30825                           
 30826                           ;stkvar	_efgtoa$6862 @ sp[(-56)+10]
 30827  01161C  0ED2               	movlw	-46
 30828  01161E  006F FF8C  F354    	movff	plusw1,_dbuf
 30829                           
 30830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 30831                           ;stkvar	_n @ sp[(-56)+32]
 30832  011624  0EE8               	movlw	-24
 30833  011626  50E3               	movf	plusw1,w,c
 30834  011628  0F01               	addlw	1
 30835  01162A  6E2A               	movwf	btemp^0,c
 30836  01162C  0EE8               	movlw	-24
 30837  01162E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30838  011634  6A2A               	clrf	btemp^0,c
 30839  011636  0EE9               	movlw	-23
 30840  011638  50E3               	movf	plusw1,w,c
 30841  01163A  202A               	addwfc	btemp^0,w,c
 30842  01163C  6E2A               	movwf	btemp^0,c
 30843  01163E  0EE9               	movlw	-23
 30844  011640  0060  F0AB  FFE3   	movff	btemp,plusw1
 30845                           
 30846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 30847                           ;stkvar	_w @ sp[(-56)+38]
 30848  011646  50E1               	movf	fsr1l,w,c
 30849  011648  0FEE               	addlw	-18
 30850  01164A  6ED9               	movwf	fsr2l,c
 30851  01164C  50E2               	movf	fsr1h,w,c
 30852  01164E  6EDA               	movwf	fsr2h,c
 30853  011650  0EFF               	movlw	255
 30854  011652  22DA               	addwfc	fsr2h,f,c
 30855  011654  06DE               	decf	postinc2,f,c
 30856  011656  0E00               	movlw	0
 30857  011658  5ADD               	subwfb	postdec2,f,c
 30858  01165A                     l15909:
 30859                           
 30860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30861                           ;stkvar	_g @ sp[(-56)+16]
 30862  01165A  0ED8               	movlw	-40
 30863  01165C  006F FF8F FFE6     	movff	plusw1,postinc1
 30864  011662  006F FF8F FFE6     	movff	plusw1,postinc1
 30865  011668  006F FF8F FFE6     	movff	plusw1,postinc1
 30866  01166E  006F FF8F FFE6     	movff	plusw1,postinc1
 30867  011674  EC4D  F0F0         	call	___fpclassifyf	;wreg free
 30868  011678  042A               	decf	btemp^0,w,c
 30869  01167A  102B               	iorwf	(btemp+1)^0,w,c
 30870  01167C  A4D8               	btfss	status,2,c
 30871  01167E  D076               	goto	l15927
 30872  011680  0EBF               	movlw	191
 30873  011682  6E34               	movwf	(btemp+10)^0,c
 30874  011684  0EFF               	movlw	255
 30875  011686  6E35               	movwf	(btemp+11)^0,c
 30876                           
 30877                           ;stkvar	_c @ sp[(-56)+-7]
 30878  011688  0EC1               	movlw	-63
 30879  01168A  50E3               	movf	plusw1,w,c
 30880  01168C  6E32               	movwf	(btemp+8)^0,c
 30881  01168E  6A33               	clrf	(btemp+9)^0,c
 30882  011690  5034               	movf	(btemp+10)^0,w,c
 30883  011692  2632               	addwf	(btemp+8)^0,f,c
 30884  011694  5035               	movf	(btemp+11)^0,w,c
 30885  011696  2233               	addwfc	(btemp+9)^0,f,c
 30886  011698  5033               	movf	(btemp+9)^0,w,c
 30887  01169A  E106               	bnz	u15140
 30888  01169C  0E1A               	movlw	26
 30889  01169E  5C32               	subwf	(btemp+8)^0,w,c
 30890  0116A0  B0D8               	btfsc	status,0,c
 30891  0116A2  D002               	goto	u15140
 30892  0116A4  0E01               	movlw	1
 30893  0116A6  D001               	goto	u15150
 30894  0116A8                     u15140:
 30895  0116A8  0E00               	movlw	0
 30896  0116AA                     u15150:
 30897  0116AA  6E34               	movwf	(btemp+10)^0,c
 30898  0116AC  6A35               	clrf	(btemp+11)^0,c
 30899                           
 30900                           ;stkvar	_efgtoa$6863 @ sp[(-56)+8]
 30901  0116AE  0ED0               	movlw	-48
 30902  0116B0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30903  0116B6  0ED1               	movlw	-47
 30904  0116B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30905                           
 30906                           ;stkvar	_efgtoa$6863 @ sp[(-56)+8]
 30907  0116BE  0ED0               	movlw	-48
 30908  0116C0  006F FF8C  F02A    	movff	plusw1,btemp
 30909  0116C6  0ED1               	movlw	-47
 30910  0116C8  50E3               	movf	plusw1,w,c
 30911  0116CA  102A               	iorwf	btemp^0,w,c
 30912  0116CC  B4D8               	btfsc	status,2,c
 30913  0116CE  D017               	goto	l15919
 30914                           
 30915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 30916  0116D0  0EDA               	movlw	low STR_104
 30917  0116D2  6EE6               	movwf	postinc1,c
 30918  0116D4  0EFF               	movlw	high STR_104
 30919  0116D6  6EE6               	movwf	postinc1,c
 30920                           
 30921                           ;stkvar	_n @ sp[(-58)+32]
 30922  0116D8  0E54               	movlw	low _dbuf
 30923  0116DA  6E34               	movwf	(btemp+10)^0,c
 30924  0116DC  0E03               	movlw	high _dbuf
 30925  0116DE  6E35               	movwf	(btemp+11)^0,c
 30926  0116E0  0EE6               	movlw	-26
 30927  0116E2  50E3               	movf	plusw1,w,c
 30928  0116E4  2634               	addwf	(btemp+10)^0,f,c
 30929  0116E6  0EE7               	movlw	-25
 30930  0116E8  50E3               	movf	plusw1,w,c
 30931  0116EA  2235               	addwfc	(btemp+11)^0,f,c
 30932  0116EC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30933  0116F2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30934  0116F8  EC23  F003         	call	_strcpy	;wreg free
 30935                           
 30936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 30937  0116FC  D016               	goto	l15921
 30938  0116FE                     l15919:
 30939                           
 30940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 30941  0116FE  0EE2               	movlw	low STR_105
 30942  011700  6EE6               	movwf	postinc1,c
 30943  011702  0EFF               	movlw	high STR_105
 30944  011704  6EE6               	movwf	postinc1,c
 30945                           
 30946                           ;stkvar	_n @ sp[(-58)+32]
 30947  011706  0E54               	movlw	low _dbuf
 30948  011708  6E34               	movwf	(btemp+10)^0,c
 30949  01170A  0E03               	movlw	high _dbuf
 30950  01170C  6E35               	movwf	(btemp+11)^0,c
 30951  01170E  0EE6               	movlw	-26
 30952  011710  50E3               	movf	plusw1,w,c
 30953  011712  2634               	addwf	(btemp+10)^0,f,c
 30954  011714  0EE7               	movlw	-25
 30955  011716  50E3               	movf	plusw1,w,c
 30956  011718  2235               	addwfc	(btemp+11)^0,f,c
 30957  01171A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30958  011720  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30959  011726  EC23  F003         	call	_strcpy	;wreg free
 30960  01172A                     l15921:
 30961                           
 30962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 30963                           ;stkvar	_w @ sp[(-56)+38]
 30964  01172A  50E1               	movf	fsr1l,w,c
 30965  01172C  0FEE               	addlw	-18
 30966  01172E  6ED9               	movwf	fsr2l,c
 30967  011730  50E2               	movf	fsr1h,w,c
 30968  011732  6EDA               	movwf	fsr2h,c
 30969  011734  0EFF               	movlw	255
 30970  011736  22DA               	addwfc	fsr2h,f,c
 30971  011738  0EFD               	movlw	253
 30972  01173A  26DE               	addwf	postinc2,f,c
 30973  01173C  0EFF               	movlw	255
 30974  01173E  22DD               	addwfc	postdec2,f,c
 30975  011740                     l15923:
 30976                           
 30977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 30978                           ;stkvar	_w @ sp[(-56)+38]
 30979  011740  0EEE               	movlw	-18
 30980  011742  006F FF8F FFE6     	movff	plusw1,postinc1
 30981  011748  006F FF8F FFE6     	movff	plusw1,postinc1
 30982  01174E  0E54               	movlw	low _dbuf
 30983  011750  6EE6               	movwf	postinc1,c
 30984  011752  0E03               	movlw	high _dbuf
 30985  011754  6EE6               	movwf	postinc1,c
 30986                           
 30987                           ;stkvar	_fp @ sp[(-60)+-2]
 30988  011756  0EC2               	movlw	-62
 30989  011758  006F FF8F FFE6     	movff	plusw1,postinc1
 30990  01175E  006F FF8F FFE6     	movff	plusw1,postinc1
 30991  011764  EC77  F0FE         	call	_pad	;wreg free
 30992  011768  EFA7  F093         	goto	l2520
 30993  01176C                     l15927:
 30994                           
 30995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30996                           ;stkvar	_g @ sp[(-56)+16]
 30997  01176C  0ED8               	movlw	-40
 30998  01176E  006F FF8F FFE6     	movff	plusw1,postinc1
 30999  011774  006F FF8F FFE6     	movff	plusw1,postinc1
 31000  01177A  006F FF8F FFE6     	movff	plusw1,postinc1
 31001  011780  006F FF8F FFE6     	movff	plusw1,postinc1
 31002  011786  EC4D  F0F0         	call	___fpclassifyf	;wreg free
 31003  01178A  502A               	movf	btemp^0,w,c
 31004  01178C  102B               	iorwf	(btemp+1)^0,w,c
 31005  01178E  A4D8               	btfss	status,2,c
 31006  011790  D056               	goto	l15945
 31007  011792  0EBF               	movlw	191
 31008  011794  6E34               	movwf	(btemp+10)^0,c
 31009  011796  0EFF               	movlw	255
 31010  011798  6E35               	movwf	(btemp+11)^0,c
 31011                           
 31012                           ;stkvar	_c @ sp[(-56)+-7]
 31013  01179A  0EC1               	movlw	-63
 31014  01179C  50E3               	movf	plusw1,w,c
 31015  01179E  6E32               	movwf	(btemp+8)^0,c
 31016  0117A0  6A33               	clrf	(btemp+9)^0,c
 31017  0117A2  5034               	movf	(btemp+10)^0,w,c
 31018  0117A4  2632               	addwf	(btemp+8)^0,f,c
 31019  0117A6  5035               	movf	(btemp+11)^0,w,c
 31020  0117A8  2233               	addwfc	(btemp+9)^0,f,c
 31021  0117AA  5033               	movf	(btemp+9)^0,w,c
 31022  0117AC  E106               	bnz	u15180
 31023  0117AE  0E1A               	movlw	26
 31024  0117B0  5C32               	subwf	(btemp+8)^0,w,c
 31025  0117B2  B0D8               	btfsc	status,0,c
 31026  0117B4  D002               	goto	u15180
 31027  0117B6  0E01               	movlw	1
 31028  0117B8  D001               	goto	u15190
 31029  0117BA                     u15180:
 31030  0117BA  0E00               	movlw	0
 31031  0117BC                     u15190:
 31032  0117BC  6E34               	movwf	(btemp+10)^0,c
 31033  0117BE  6A35               	clrf	(btemp+11)^0,c
 31034                           
 31035                           ;stkvar	_efgtoa$6867 @ sp[(-56)+6]
 31036  0117C0  0ECE               	movlw	-50
 31037  0117C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31038  0117C8  0ECF               	movlw	-49
 31039  0117CA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31040                           
 31041                           ;stkvar	_efgtoa$6867 @ sp[(-56)+6]
 31042  0117D0  0ECE               	movlw	-50
 31043  0117D2  006F FF8C  F02A    	movff	plusw1,btemp
 31044  0117D8  0ECF               	movlw	-49
 31045  0117DA  50E3               	movf	plusw1,w,c
 31046  0117DC  102A               	iorwf	btemp^0,w,c
 31047  0117DE  B4D8               	btfsc	status,2,c
 31048  0117E0  D017               	goto	l15937
 31049                           
 31050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 31051  0117E2  0EDE               	movlw	low STR_108
 31052  0117E4  6EE6               	movwf	postinc1,c
 31053  0117E6  0EFF               	movlw	high STR_108
 31054  0117E8  6EE6               	movwf	postinc1,c
 31055                           
 31056                           ;stkvar	_n @ sp[(-58)+32]
 31057  0117EA  0E54               	movlw	low _dbuf
 31058  0117EC  6E34               	movwf	(btemp+10)^0,c
 31059  0117EE  0E03               	movlw	high _dbuf
 31060  0117F0  6E35               	movwf	(btemp+11)^0,c
 31061  0117F2  0EE6               	movlw	-26
 31062  0117F4  50E3               	movf	plusw1,w,c
 31063  0117F6  2634               	addwf	(btemp+10)^0,f,c
 31064  0117F8  0EE7               	movlw	-25
 31065  0117FA  50E3               	movf	plusw1,w,c
 31066  0117FC  2235               	addwfc	(btemp+11)^0,f,c
 31067  0117FE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31068  011804  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31069  01180A  EC23  F003         	call	_strcpy	;wreg free
 31070                           
 31071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 31072  01180E  D78D               	goto	l15921
 31073  011810                     l15937:
 31074                           
 31075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 31076  011810  0EE6               	movlw	low STR_109
 31077  011812  6EE6               	movwf	postinc1,c
 31078  011814  0EFF               	movlw	high STR_109
 31079  011816  6EE6               	movwf	postinc1,c
 31080                           
 31081                           ;stkvar	_n @ sp[(-58)+32]
 31082  011818  0E54               	movlw	low _dbuf
 31083  01181A  6E34               	movwf	(btemp+10)^0,c
 31084  01181C  0E03               	movlw	high _dbuf
 31085  01181E  6E35               	movwf	(btemp+11)^0,c
 31086  011820  0EE6               	movlw	-26
 31087  011822  50E3               	movf	plusw1,w,c
 31088  011824  2634               	addwf	(btemp+10)^0,f,c
 31089  011826  0EE7               	movlw	-25
 31090  011828  50E3               	movf	plusw1,w,c
 31091  01182A  2235               	addwfc	(btemp+11)^0,f,c
 31092  01182C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31093  011832  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31094  011838  EC23  F003         	call	_strcpy	;wreg free
 31095  01183C  D776               	goto	l15921
 31096  01183E                     l15945:
 31097                           
 31098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 31099  01183E  0E00               	movlw	0
 31100  011840  6E32               	movwf	(btemp+8)^0,c
 31101  011842  0E00               	movlw	0
 31102  011844  6E33               	movwf	(btemp+9)^0,c
 31103  011846  0E80               	movlw	128
 31104  011848  6E34               	movwf	(btemp+10)^0,c
 31105  01184A  0E3F               	movlw	63
 31106  01184C  6E35               	movwf	(btemp+11)^0,c
 31107                           
 31108                           ;stkvar	_u @ sp[(-56)+12]
 31109  01184E  0ED4               	movlw	-44
 31110  011850  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31111  011856  0ED5               	movlw	-43
 31112  011858  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31113  01185E  0ED6               	movlw	-42
 31114  011860  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31115  011866  0ED7               	movlw	-41
 31116  011868  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31117                           
 31118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 31119                           ;stkvar	_e @ sp[(-56)+34]
 31120  01186E  0EEA               	movlw	-22
 31121  011870  6AE3               	clrf	plusw1,c
 31122  011872  0EEB               	movlw	-21
 31123  011874  6AE3               	clrf	plusw1,c
 31124                           
 31125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 31126  011876  0E00               	movlw	0
 31127  011878  6EE6               	movwf	postinc1,c
 31128  01187A  0E00               	movlw	0
 31129  01187C  6EE6               	movwf	postinc1,c
 31130  01187E  0E00               	movlw	0
 31131  011880  6EE6               	movwf	postinc1,c
 31132  011882  0E00               	movlw	0
 31133  011884  6EE6               	movwf	postinc1,c
 31134                           
 31135                           ;stkvar	_g @ sp[(-60)+16]
 31136  011886  0ED4               	movlw	-44
 31137  011888  006F FF8F FFE6     	movff	plusw1,postinc1
 31138  01188E  006F FF8F FFE6     	movff	plusw1,postinc1
 31139  011894  006F FF8F FFE6     	movff	plusw1,postinc1
 31140  01189A  006F FF8F FFE6     	movff	plusw1,postinc1
 31141  0118A0  ECF4  F003         	call	___fleq	;wreg free
 31142  0118A4  A02A               	btfss	btemp& (0+255),0,c
 31143  0118A6  D039               	goto	l15957
 31144  0118A8  D0BC               	goto	u15230
 31145  0118AA                     l15953:
 31146                           
 31147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 31148  0118AA  0E00               	movlw	0
 31149  0118AC  6EE6               	movwf	postinc1,c
 31150  0118AE  0E00               	movlw	0
 31151  0118B0  6EE6               	movwf	postinc1,c
 31152  0118B2  0E20               	movlw	32
 31153  0118B4  6EE6               	movwf	postinc1,c
 31154  0118B6  0E41               	movlw	65
 31155  0118B8  6EE6               	movwf	postinc1,c
 31156                           
 31157                           ;stkvar	_u @ sp[(-60)+12]
 31158  0118BA  0ED0               	movlw	-48
 31159  0118BC  006F FF8F FFE6     	movff	plusw1,postinc1
 31160  0118C2  006F FF8F FFE6     	movff	plusw1,postinc1
 31161  0118C8  006F FF8F FFE6     	movff	plusw1,postinc1
 31162  0118CE  006F FF8F FFE6     	movff	plusw1,postinc1
 31163  0118D4  EC06  F0B8         	call	___flmul	;wreg free
 31164                           
 31165                           ;stkvar	_u @ sp[(-56)+12]
 31166  0118D8  0ED4               	movlw	-44
 31167  0118DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31168  0118E0  0ED5               	movlw	-43
 31169  0118E2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31170  0118E8  0ED6               	movlw	-42
 31171  0118EA  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31172  0118F0  0ED7               	movlw	-41
 31173  0118F2  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31174                           
 31175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 31176                           ;stkvar	_e @ sp[(-56)+34]
 31177  0118F8  0EEA               	movlw	-22
 31178  0118FA  50E3               	movf	plusw1,w,c
 31179  0118FC  0F01               	addlw	1
 31180  0118FE  6E2A               	movwf	btemp^0,c
 31181  011900  0EEA               	movlw	-22
 31182  011902  0060  F0AB  FFE3   	movff	btemp,plusw1
 31183  011908  6A2A               	clrf	btemp^0,c
 31184  01190A  0EEB               	movlw	-21
 31185  01190C  50E3               	movf	plusw1,w,c
 31186  01190E  202A               	addwfc	btemp^0,w,c
 31187  011910  6E2A               	movwf	btemp^0,c
 31188  011912  0EEB               	movlw	-21
 31189  011914  0060  F0AB  FFE3   	movff	btemp,plusw1
 31190  01191A                     l15957:
 31191                           
 31192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 31193  01191A  0E00               	movlw	0
 31194  01191C  6EE6               	movwf	postinc1,c
 31195  01191E  0E00               	movlw	0
 31196  011920  6EE6               	movwf	postinc1,c
 31197  011922  0E20               	movlw	32
 31198  011924  6EE6               	movwf	postinc1,c
 31199  011926  0E41               	movlw	65
 31200  011928  6EE6               	movwf	postinc1,c
 31201                           
 31202                           ;stkvar	_u @ sp[(-60)+12]
 31203  01192A  0ED0               	movlw	-48
 31204  01192C  006F FF8F FFE6     	movff	plusw1,postinc1
 31205  011932  006F FF8F FFE6     	movff	plusw1,postinc1
 31206  011938  006F FF8F FFE6     	movff	plusw1,postinc1
 31207  01193E  006F FF8F FFE6     	movff	plusw1,postinc1
 31208  011944  EC06  F0B8         	call	___flmul	;wreg free
 31209  011948  0060  F0AB  FFE6   	movff	btemp,postinc1
 31210  01194E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31211  011954  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31212  01195A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31213                           
 31214                           ;stkvar	_g @ sp[(-60)+16]
 31215  011960  0ED4               	movlw	-44
 31216  011962  006F FF8F FFE6     	movff	plusw1,postinc1
 31217  011968  006F FF8F FFE6     	movff	plusw1,postinc1
 31218  01196E  006F FF8F FFE6     	movff	plusw1,postinc1
 31219  011974  006F FF8F FFE6     	movff	plusw1,postinc1
 31220  01197A  EC51  F0F6         	call	___flge	;wreg free
 31221  01197E  A02A               	btfss	btemp& (0+255),0,c
 31222  011980  D032               	goto	l15963
 31223  011982  D793               	goto	l15953
 31224  011984                     l15959:
 31225                           
 31226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 31227  011984  0E00               	movlw	0
 31228  011986  6EE6               	movwf	postinc1,c
 31229  011988  0E00               	movlw	0
 31230  01198A  6EE6               	movwf	postinc1,c
 31231  01198C  0E20               	movlw	32
 31232  01198E  6EE6               	movwf	postinc1,c
 31233  011990  0E41               	movlw	65
 31234  011992  6EE6               	movwf	postinc1,c
 31235                           
 31236                           ;stkvar	_u @ sp[(-60)+12]
 31237  011994  0ED0               	movlw	-48
 31238  011996  006F FF8F FFE6     	movff	plusw1,postinc1
 31239  01199C  006F FF8F FFE6     	movff	plusw1,postinc1
 31240  0119A2  006F FF8F FFE6     	movff	plusw1,postinc1
 31241  0119A8  006F FF8F FFE6     	movff	plusw1,postinc1
 31242  0119AE  EC57  F0C3         	call	___fldiv	;wreg free
 31243                           
 31244                           ;stkvar	_u @ sp[(-56)+12]
 31245  0119B2  0ED4               	movlw	-44
 31246  0119B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31247  0119BA  0ED5               	movlw	-43
 31248  0119BC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31249  0119C2  0ED6               	movlw	-42
 31250  0119C4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31251  0119CA  0ED7               	movlw	-41
 31252  0119CC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31253                           
 31254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 31255                           ;stkvar	_e @ sp[(-56)+34]
 31256  0119D2  50E1               	movf	fsr1l,w,c
 31257  0119D4  0FEA               	addlw	-22
 31258  0119D6  6ED9               	movwf	fsr2l,c
 31259  0119D8  50E2               	movf	fsr1h,w,c
 31260  0119DA  6EDA               	movwf	fsr2h,c
 31261  0119DC  0EFF               	movlw	255
 31262  0119DE  22DA               	addwfc	fsr2h,f,c
 31263  0119E0  06DE               	decf	postinc2,f,c
 31264  0119E2  0E00               	movlw	0
 31265  0119E4  5ADD               	subwfb	postdec2,f,c
 31266  0119E6                     l15963:
 31267                           
 31268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 31269                           ;stkvar	_u @ sp[(-56)+12]
 31270  0119E6  0ED4               	movlw	-44
 31271  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
 31272  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
 31273  0119F4  006F FF8F FFE6     	movff	plusw1,postinc1
 31274  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
 31275                           
 31276                           ;stkvar	_g @ sp[(-60)+16]
 31277  011A00  0ED4               	movlw	-44
 31278  011A02  006F FF8F FFE6     	movff	plusw1,postinc1
 31279  011A08  006F FF8F FFE6     	movff	plusw1,postinc1
 31280  011A0E  006F FF8F FFE6     	movff	plusw1,postinc1
 31281  011A14  006F FF8F FFE6     	movff	plusw1,postinc1
 31282  011A1A  EC51  F0F6         	call	___flge	;wreg free
 31283  011A1E  A02A               	btfss	btemp& (0+255),0,c
 31284  011A20  D7B1               	goto	l15959
 31285  011A22                     u15230:
 31286                           
 31287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 31288                           ;stkvar	_c @ sp[(-56)+-7]
 31289  011A22  0EC1               	movlw	-63
 31290  011A24  50E3               	movf	plusw1,w,c
 31291  011A26  6EE6               	movwf	postinc1,c
 31292  011A28  0E00               	movlw	0
 31293  011A2A  6EE6               	movwf	postinc1,c
 31294  011A2C  ECB3  F00A         	call	_tolower	;wreg free
 31295                           
 31296                           ;stkvar	_mode @ sp[(-56)+54]
 31297  011A30  0EFE               	movlw	-2
 31298  011A32  0060  F0AB  FFE3   	movff	btemp,plusw1
 31299                           
 31300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 31301                           ;stkvar	_mode @ sp[(-56)+54]
 31302                           ;stkvar	_nmode @ sp[(-56)+55]
 31303  011A38  0EFE               	movlw	-2
 31304  011A3A  006F FF8C  F02A    	movff	plusw1,btemp
 31305  011A40  0EFF               	movlw	-1
 31306  011A42  0060  F0AB  FFE3   	movff	btemp,plusw1
 31307                           
 31308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 31309                           ;stkvar	_mode @ sp[(-56)+54]
 31310  011A48  0EFE               	movlw	-2
 31311  011A4A  006F FF8C  F02A    	movff	plusw1,btemp
 31312  011A50  0E67               	movlw	103
 31313  011A52  182A               	xorwf	btemp^0,w,c
 31314  011A54  A4D8               	btfss	status,2,c
 31315  011A56  D025               	goto	l15981
 31316                           
 31317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 31318  011A58  504C               	movf	_prec^0,w,c
 31319  011A5A  104D               	iorwf	(_prec+1)^0,w,c
 31320  011A5C  A4D8               	btfss	status,2,c
 31321  011A5E  D004               	goto	l15975
 31322                           
 31323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 31324  011A60  0E00               	movlw	0
 31325  011A62  6E4D               	movwf	(_prec+1)^0,c
 31326  011A64  0E01               	movlw	1
 31327  011A66  6E4C               	movwf	_prec^0,c
 31328  011A68                     l15975:
 31329                           
 31330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 31331  011A68  BE4D               	btfsc	(_prec+1)^0,7,c
 31332  011A6A  D005               	goto	u15260
 31333  011A6C  504D               	movf	(_prec+1)^0,w,c
 31334  011A6E  E110               	bnz	l15979
 31335  011A70  044C               	decf	_prec^0,w,c
 31336  011A72  B0D8               	btfsc	status,0,c
 31337  011A74  D00D               	goto	l15979
 31338  011A76                     u15260:
 31339  011A76  0E06               	movlw	6
 31340  011A78  6E34               	movwf	(btemp+10)^0,c
 31341  011A7A  0E00               	movlw	0
 31342  011A7C  6E35               	movwf	(btemp+11)^0,c
 31343                           
 31344                           ;stkvar	_p @ sp[(-56)+40]
 31345  011A7E  0EF0               	movlw	-16
 31346  011A80  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31347  011A86  0EF1               	movlw	-15
 31348  011A88  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31349  011A8E  D00C               	goto	l15987
 31350  011A90                     l15979:
 31351                           
 31352                           ;stkvar	_p @ sp[(-56)+40]
 31353  011A90  0EF0               	movlw	-16
 31354  011A92  0060  F133  FFE3   	movff	_prec,plusw1
 31355  011A98  0EF1               	movlw	-15
 31356  011A9A  0060  F137  FFE3   	movff	_prec+1,plusw1
 31357  011AA0  D003               	goto	l15987
 31358  011AA2                     l15981:
 31359                           
 31360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 31361  011AA2  AE4D               	btfss	(_prec+1)^0,7,c
 31362  011AA4  D7F5               	goto	l15979
 31363  011AA6  D7E7               	goto	u15260
 31364  011AA8                     l15987:
 31365                           
 31366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 31367                           ;stkvar	_mode @ sp[(-56)+54]
 31368  011AA8  0EFE               	movlw	-2
 31369  011AAA  006F FF8C  F02A    	movff	plusw1,btemp
 31370  011AB0  0E67               	movlw	103
 31371  011AB2  182A               	xorwf	btemp^0,w,c
 31372  011AB4  A4D8               	btfss	status,2,c
 31373  011AB6  D02F               	goto	l15997
 31374                           
 31375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 31376                           ;stkvar	_e @ sp[(-56)+34]
 31377  011AB8  0EEB               	movlw	-21
 31378  011ABA  AEE3               	btfss	plusw1,7,c
 31379  011ABC  D00E               	goto	u15290
 31380  011ABE  0EEA               	movlw	-22
 31381  011AC0  006F FF8C  F02A    	movff	plusw1,btemp
 31382  011AC6  0EFC               	movlw	252
 31383  011AC8  5E2A               	subwf	btemp^0,f,c
 31384  011ACA  0EEB               	movlw	-21
 31385  011ACC  006F FF8C  F02A    	movff	plusw1,btemp
 31386  011AD2  0EFF               	movlw	255
 31387  011AD4  5A2A               	subwfb	btemp^0,f,c
 31388  011AD6  A0D8               	btfss	status,0,c
 31389  011AD8  D018               	goto	l15995
 31390  011ADA                     u15290:
 31391                           
 31392                           ;stkvar	_e @ sp[(-56)+34]
 31393                           ;stkvar	_p @ sp[(-56)+40]
 31394  011ADA  0EF0               	movlw	-16
 31395  011ADC  50E3               	movf	plusw1,w,c
 31396  011ADE  0FFF               	addlw	255
 31397  011AE0  6E34               	movwf	(btemp+10)^0,c
 31398  011AE2  0EF1               	movlw	-15
 31399  011AE4  006F FF8C  F035    	movff	plusw1,btemp+11
 31400  011AEA  0EFF               	movlw	255
 31401  011AEC  2235               	addwfc	(btemp+11)^0,f,c
 31402  011AEE  0EEA               	movlw	-22
 31403  011AF0  50E3               	movf	plusw1,w,c
 31404  011AF2  5C34               	subwf	(btemp+10)^0,w,c
 31405  011AF4  5035               	movf	(btemp+11)^0,w,c
 31406  011AF6  0A80               	xorlw	128
 31407  011AF8  6E2A               	movwf	btemp^0,c
 31408  011AFA  0EEB               	movlw	-21
 31409  011AFC  50E3               	movf	plusw1,w,c
 31410  011AFE  0A80               	xorlw	128
 31411  011B00  582A               	subwfb	btemp^0,w,c
 31412  011B02  A0D8               	btfss	status,0,c
 31413  011B04  D002               	goto	l15995
 31414                           
 31415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 31416  011B06  0E66               	movlw	102
 31417  011B08  D001               	goto	L32
 31418  011B0A                     l15995:
 31419                           
 31420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 31421  011B0A  0E65               	movlw	101
 31422  011B0C                     L32:
 31423  011B0C  6E35               	movwf	(btemp+11)^0,c
 31424                           
 31425                           ;stkvar	_nmode @ sp[(-56)+55]
 31426  011B0E  0EFF               	movlw	-1
 31427  011B10  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31428  011B16                     l15997:
 31429                           
 31430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 31431                           ;stkvar	_p @ sp[(-56)+40]
 31432                           ;stkvar	_m @ sp[(-56)+48]
 31433  011B16  0EF0               	movlw	-16
 31434  011B18  006F FF8C  F02A    	movff	plusw1,btemp
 31435  011B1E  0EF8               	movlw	-8
 31436  011B20  0060  F0AB  FFE3   	movff	btemp,plusw1
 31437  011B26  0EF1               	movlw	-15
 31438  011B28  006F FF8C  F02A    	movff	plusw1,btemp
 31439  011B2E  0EF9               	movlw	-7
 31440  011B30  0060  F0AB  FFE3   	movff	btemp,plusw1
 31441                           
 31442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 31443                           ;stkvar	_mode @ sp[(-56)+54]
 31444  011B36  0EFE               	movlw	-2
 31445  011B38  006F FF8C  F02A    	movff	plusw1,btemp
 31446  011B3E  0E67               	movlw	103
 31447  011B40  182A               	xorwf	btemp^0,w,c
 31448  011B42  A4D8               	btfss	status,2,c
 31449  011B44  D00B               	goto	u15330
 31450                           
 31451                           ;stkvar	_nmode @ sp[(-56)+55]
 31452  011B46  0EFF               	movlw	-1
 31453  011B48  006F FF8C  F02A    	movff	plusw1,btemp
 31454  011B4E  0E66               	movlw	102
 31455  011B50  182A               	xorwf	btemp^0,w,c
 31456  011B52  A4D8               	btfss	status,2,c
 31457  011B54  D014               	goto	l2549
 31458                           
 31459                           ;stkvar	_e @ sp[(-56)+34]
 31460  011B56  0EEB               	movlw	-21
 31461  011B58  AEE3               	btfss	plusw1,7,c
 31462  011B5A  D011               	goto	l2549
 31463  011B5C                     u15330:
 31464                           
 31465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 31466                           ;stkvar	_m @ sp[(-56)+48]
 31467  011B5C  0EF8               	movlw	-8
 31468  011B5E  50E3               	movf	plusw1,w,c
 31469  011B60  0F01               	addlw	1
 31470  011B62  6E2A               	movwf	btemp^0,c
 31471  011B64  0EF8               	movlw	-8
 31472  011B66  0060  F0AB  FFE3   	movff	btemp,plusw1
 31473  011B6C  6A2A               	clrf	btemp^0,c
 31474  011B6E  0EF9               	movlw	-7
 31475  011B70  50E3               	movf	plusw1,w,c
 31476  011B72  202A               	addwfc	btemp^0,w,c
 31477  011B74  6E2A               	movwf	btemp^0,c
 31478  011B76  0EF9               	movlw	-7
 31479  011B78  0060  F0AB  FFE3   	movff	btemp,plusw1
 31480  011B7E                     l2549:
 31481                           
 31482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 31483                           ;stkvar	_nmode @ sp[(-56)+55]
 31484  011B7E  0EFF               	movlw	-1
 31485  011B80  006F FF8C  F02A    	movff	plusw1,btemp
 31486  011B86  0E66               	movlw	102
 31487  011B88  182A               	xorwf	btemp^0,w,c
 31488  011B8A  A4D8               	btfss	status,2,c
 31489  011B8C  D03B               	goto	l16017
 31490                           
 31491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 31492                           ;stkvar	_e @ sp[(-56)+34]
 31493  011B8E  0EEB               	movlw	-21
 31494  011B90  AEE3               	btfss	plusw1,7,c
 31495  011B92  D01C               	goto	l16013
 31496                           
 31497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 31498  011B94  0E00               	movlw	0
 31499  011B96  6E32               	movwf	(btemp+8)^0,c
 31500  011B98  0E00               	movlw	0
 31501  011B9A  6E33               	movwf	(btemp+9)^0,c
 31502  011B9C  0E80               	movlw	128
 31503  011B9E  6E34               	movwf	(btemp+10)^0,c
 31504  011BA0  0E3F               	movlw	63
 31505  011BA2  6E35               	movwf	(btemp+11)^0,c
 31506                           
 31507                           ;stkvar	_u @ sp[(-56)+12]
 31508  011BA4  0ED4               	movlw	-44
 31509  011BA6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31510  011BAC  0ED5               	movlw	-43
 31511  011BAE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31512  011BB4  0ED6               	movlw	-42
 31513  011BB6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31514  011BBC  0ED7               	movlw	-41
 31515  011BBE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31516                           
 31517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 31518                           ;stkvar	_e @ sp[(-56)+34]
 31519  011BC4  0EEA               	movlw	-22
 31520  011BC6  6AE3               	clrf	plusw1,c
 31521  011BC8  0EEB               	movlw	-21
 31522  011BCA  6AE3               	clrf	plusw1,c
 31523  011BCC                     l16013:
 31524                           
 31525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 31526                           ;stkvar	_mode @ sp[(-56)+54]
 31527  011BCC  0EFE               	movlw	-2
 31528  011BCE  006F FF8C  F02A    	movff	plusw1,btemp
 31529  011BD4  0E67               	movlw	103
 31530  011BD6  182A               	xorwf	btemp^0,w,c
 31531  011BD8  B4D8               	btfsc	status,2,c
 31532  011BDA  D014               	goto	l16017
 31533                           
 31534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 31535                           ;stkvar	_e @ sp[(-56)+34]
 31536                           ;stkvar	_m @ sp[(-56)+48]
 31537  011BDC  0EF8               	movlw	-8
 31538  011BDE  50E3               	movf	plusw1,w,c
 31539  011BE0  6E2A               	movwf	btemp^0,c
 31540  011BE2  0EEA               	movlw	-22
 31541  011BE4  50E3               	movf	plusw1,w,c
 31542  011BE6  262A               	addwf	btemp^0,f,c
 31543  011BE8  0EF8               	movlw	-8
 31544  011BEA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31545  011BF0  0EF9               	movlw	-7
 31546  011BF2  50E3               	movf	plusw1,w,c
 31547  011BF4  6E2A               	movwf	btemp^0,c
 31548  011BF6  0EEB               	movlw	-21
 31549  011BF8  50E3               	movf	plusw1,w,c
 31550  011BFA  222A               	addwfc	btemp^0,f,c
 31551  011BFC  0EF9               	movlw	-7
 31552  011BFE  0060  F0AB  FFE3   	movff	btemp,plusw1
 31553  011C04                     l16017:
 31554                           
 31555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 31556                           ;stkvar	_i @ sp[(-56)+36]
 31557  011C04  0EEC               	movlw	-20
 31558  011C06  6AE3               	clrf	plusw1,c
 31559  011C08  0EED               	movlw	-19
 31560  011C0A  6AE3               	clrf	plusw1,c
 31561                           
 31562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 31563                           ;stkvar	_g @ sp[(-56)+16]
 31564  011C0C  0ED8               	movlw	-40
 31565  011C0E  006F FF8C  F032    	movff	plusw1,btemp+8
 31566  011C14  0ED9               	movlw	-39
 31567  011C16  006F FF8C  F033    	movff	plusw1,btemp+9
 31568  011C1C  0EDA               	movlw	-38
 31569  011C1E  006F FF8C  F034    	movff	plusw1,btemp+10
 31570  011C24  0EDB               	movlw	-37
 31571  011C26  006F FF8C  F035    	movff	plusw1,btemp+11
 31572                           
 31573                           ;stkvar	_h @ sp[(-56)+24]
 31574  011C2C  0EE0               	movlw	-32
 31575  011C2E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31576  011C34  0EE1               	movlw	-31
 31577  011C36  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31578  011C3C  0EE2               	movlw	-30
 31579  011C3E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31580  011C44  0EE3               	movlw	-29
 31581  011C46  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31582                           
 31583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 31584                           ;stkvar	_u @ sp[(-56)+12]
 31585  011C4C  0ED4               	movlw	-44
 31586  011C4E  006F FF8C  F032    	movff	plusw1,btemp+8
 31587  011C54  0ED5               	movlw	-43
 31588  011C56  006F FF8C  F033    	movff	plusw1,btemp+9
 31589  011C5C  0ED6               	movlw	-42
 31590  011C5E  006F FF8C  F034    	movff	plusw1,btemp+10
 31591  011C64  0ED7               	movlw	-41
 31592  011C66  006F FF8C  F035    	movff	plusw1,btemp+11
 31593                           
 31594                           ;stkvar	_ou @ sp[(-56)+28]
 31595  011C6C  0EE4               	movlw	-28
 31596  011C6E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31597  011C74  0EE5               	movlw	-27
 31598  011C76  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31599  011C7C  0EE6               	movlw	-26
 31600  011C7E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31601  011C84  0EE7               	movlw	-25
 31602  011C86  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31603                           
 31604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31605  011C8C  D0D6               	goto	l16033
 31606  011C8E                     l16023:
 31607                           
 31608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 31609                           ;stkvar	_u @ sp[(-56)+12]
 31610  011C8E  0ED4               	movlw	-44
 31611  011C90  006F FF8F FFE6     	movff	plusw1,postinc1
 31612  011C96  006F FF8F FFE6     	movff	plusw1,postinc1
 31613  011C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 31614  011CA2  006F FF8F FFE6     	movff	plusw1,postinc1
 31615                           
 31616                           ;stkvar	_h @ sp[(-60)+24]
 31617  011CA8  0EDC               	movlw	-36
 31618  011CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 31619  011CB0  006F FF8F FFE6     	movff	plusw1,postinc1
 31620  011CB6  006F FF8F FFE6     	movff	plusw1,postinc1
 31621  011CBC  006F FF8F FFE6     	movff	plusw1,postinc1
 31622  011CC2  EC57  F0C3         	call	___fldiv	;wreg free
 31623  011CC6  0060  F0AB  FFE6   	movff	btemp,postinc1
 31624  011CCC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31625  011CD2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31626  011CD8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31627  011CDE  EC01  F0D3         	call	_floorf	;wreg free
 31628                           
 31629                           ;stkvar	_l @ sp[(-56)+20]
 31630  011CE2  0EDC               	movlw	-36
 31631  011CE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31632  011CEA  0EDD               	movlw	-35
 31633  011CEC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31634  011CF2  0EDE               	movlw	-34
 31635  011CF4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31636  011CFA  0EDF               	movlw	-33
 31637  011CFC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31638                           
 31639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 31640                           ;stkvar	_l @ sp[(-56)+20]
 31641  011D02  0EDC               	movlw	-36
 31642  011D04  006F FF8F FFE6     	movff	plusw1,postinc1
 31643  011D0A  006F FF8F FFE6     	movff	plusw1,postinc1
 31644  011D10  006F FF8F FFE6     	movff	plusw1,postinc1
 31645  011D16  006F FF8F FFE6     	movff	plusw1,postinc1
 31646  011D1C  ECE5  F0F4         	call	___fltol	;wreg free
 31647  011D20  0060  F0A8  F034   	movff	btemp,btemp+10
 31648  011D26  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31649                           
 31650                           ;stkvar	_d @ sp[(-56)+44]
 31651  011D2C  0EF4               	movlw	-12
 31652  011D2E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31653  011D34  0EF5               	movlw	-11
 31654  011D36  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31655                           
 31656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 31657                           ;stkvar	_u @ sp[(-56)+12]
 31658  011D3C  0ED4               	movlw	-44
 31659  011D3E  006F FF8F FFE6     	movff	plusw1,postinc1
 31660  011D44  006F FF8F FFE6     	movff	plusw1,postinc1
 31661  011D4A  006F FF8F FFE6     	movff	plusw1,postinc1
 31662  011D50  006F FF8F FFE6     	movff	plusw1,postinc1
 31663                           
 31664                           ;stkvar	_l @ sp[(-60)+20]
 31665  011D56  0ED8               	movlw	-40
 31666  011D58  006F FF8F FFE6     	movff	plusw1,postinc1
 31667  011D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 31668  011D64  006F FF8F FFE6     	movff	plusw1,postinc1
 31669  011D6A  006F FF8F FFE6     	movff	plusw1,postinc1
 31670  011D70  EC06  F0B8         	call	___flmul	;wreg free
 31671  011D74  0060  F0AB  FFE6   	movff	btemp,postinc1
 31672  011D7A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31673  011D80  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31674  011D86  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31675                           
 31676                           ;stkvar	_h @ sp[(-60)+24]
 31677  011D8C  0EDC               	movlw	-36
 31678  011D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 31679  011D94  006F FF8F FFE6     	movff	plusw1,postinc1
 31680  011D9A  006F FF8F FFE6     	movff	plusw1,postinc1
 31681  011DA0  006F FF8F FFE6     	movff	plusw1,postinc1
 31682  011DA6  EC0D  F011         	call	___flsub	;wreg free
 31683                           
 31684                           ;stkvar	_h @ sp[(-56)+24]
 31685  011DAA  0EE0               	movlw	-32
 31686  011DAC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31687  011DB2  0EE1               	movlw	-31
 31688  011DB4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31689  011DBA  0EE2               	movlw	-30
 31690  011DBC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31691  011DC2  0EE3               	movlw	-29
 31692  011DC4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31693                           
 31694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 31695  011DCA  0E00               	movlw	0
 31696  011DCC  6EE6               	movwf	postinc1,c
 31697  011DCE  0E00               	movlw	0
 31698  011DD0  6EE6               	movwf	postinc1,c
 31699  011DD2  0E20               	movlw	32
 31700  011DD4  6EE6               	movwf	postinc1,c
 31701  011DD6  0E41               	movlw	65
 31702  011DD8  6EE6               	movwf	postinc1,c
 31703                           
 31704                           ;stkvar	_u @ sp[(-60)+12]
 31705  011DDA  0ED0               	movlw	-48
 31706  011DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 31707  011DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 31708  011DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 31709  011DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 31710  011DF4  EC57  F0C3         	call	___fldiv	;wreg free
 31711                           
 31712                           ;stkvar	_u @ sp[(-56)+12]
 31713  011DF8  0ED4               	movlw	-44
 31714  011DFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31715  011E00  0ED5               	movlw	-43
 31716  011E02  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31717  011E08  0ED6               	movlw	-42
 31718  011E0A  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31719  011E10  0ED7               	movlw	-41
 31720  011E12  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31721                           
 31722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 31723                           ;stkvar	_i @ sp[(-56)+36]
 31724  011E18  0EEC               	movlw	-20
 31725  011E1A  50E3               	movf	plusw1,w,c
 31726  011E1C  0F01               	addlw	1
 31727  011E1E  6E2A               	movwf	btemp^0,c
 31728  011E20  0EEC               	movlw	-20
 31729  011E22  0060  F0AB  FFE3   	movff	btemp,plusw1
 31730  011E28  6A2A               	clrf	btemp^0,c
 31731  011E2A  0EED               	movlw	-19
 31732  011E2C  50E3               	movf	plusw1,w,c
 31733  011E2E  202A               	addwfc	btemp^0,w,c
 31734  011E30  6E2A               	movwf	btemp^0,c
 31735  011E32  0EED               	movlw	-19
 31736  011E34  0060  F0AB  FFE3   	movff	btemp,plusw1
 31737  011E3A                     l16033:
 31738                           
 31739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31740                           ;stkvar	_m @ sp[(-56)+48]
 31741                           ;stkvar	_i @ sp[(-56)+36]
 31742  011E3A  50E1               	movf	fsr1l,w,c
 31743  011E3C  0FEC               	addlw	-20
 31744  011E3E  6ED9               	movwf	fsr2l,c
 31745  011E40  50E2               	movf	fsr1h,w,c
 31746  011E42  6EDA               	movwf	fsr2h,c
 31747  011E44  0EFF               	movlw	255
 31748  011E46  22DA               	addwfc	fsr2h,f,c
 31749  011E48  0EF8               	movlw	-8
 31750  011E4A  50E3               	movf	plusw1,w,c
 31751  011E4C  5CDE               	subwf	postinc2,w,c
 31752  011E4E  50DE               	movf	postinc2,w,c
 31753  011E50  0A80               	xorlw	128
 31754  011E52  6E2A               	movwf	btemp^0,c
 31755  011E54  0EF9               	movlw	-7
 31756  011E56  50E3               	movf	plusw1,w,c
 31757  011E58  0A80               	xorlw	128
 31758  011E5A  582A               	subwfb	btemp^0,w,c
 31759  011E5C  A0D8               	btfss	status,0,c
 31760  011E5E  D717               	goto	l16023
 31761                           
 31762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 31763  011E60  0E00               	movlw	0
 31764  011E62  6EE6               	movwf	postinc1,c
 31765  011E64  0E00               	movlw	0
 31766  011E66  6EE6               	movwf	postinc1,c
 31767  011E68  0EA0               	movlw	160
 31768  011E6A  6EE6               	movwf	postinc1,c
 31769  011E6C  0E40               	movlw	64
 31770  011E6E  6EE6               	movwf	postinc1,c
 31771                           
 31772                           ;stkvar	_u @ sp[(-60)+12]
 31773  011E70  0ED0               	movlw	-48
 31774  011E72  006F FF8F FFE6     	movff	plusw1,postinc1
 31775  011E78  006F FF8F FFE6     	movff	plusw1,postinc1
 31776  011E7E  006F FF8F FFE6     	movff	plusw1,postinc1
 31777  011E84  006F FF8F FFE6     	movff	plusw1,postinc1
 31778  011E8A  EC06  F0B8         	call	___flmul	;wreg free
 31779                           
 31780                           ;stkvar	_l @ sp[(-56)+20]
 31781  011E8E  0EDC               	movlw	-36
 31782  011E90  0060  F0AB  FFE3   	movff	btemp,plusw1
 31783  011E96  0EDD               	movlw	-35
 31784  011E98  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31785  011E9E  0EDE               	movlw	-34
 31786  011EA0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31787  011EA6  0EDF               	movlw	-33
 31788  011EA8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31789                           
 31790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 31791                           ;stkvar	_l @ sp[(-56)+20]
 31792  011EAE  0EDC               	movlw	-36
 31793  011EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 31794  011EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 31795  011EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 31796  011EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 31797                           
 31798                           ;stkvar	_h @ sp[(-60)+24]
 31799  011EC8  0EDC               	movlw	-36
 31800  011ECA  006F FF8F FFE6     	movff	plusw1,postinc1
 31801  011ED0  006F FF8F FFE6     	movff	plusw1,postinc1
 31802  011ED6  006F FF8F FFE6     	movff	plusw1,postinc1
 31803  011EDC  006F FF8F FFE6     	movff	plusw1,postinc1
 31804  011EE2  EC51  F0F6         	call	___flge	;wreg free
 31805  011EE6  A02A               	btfss	btemp& (0+255),0,c
 31806  011EE8  D021               	goto	u15400
 31807                           
 31808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 31809                           ;stkvar	_l @ sp[(-56)+20]
 31810                           
 31811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 31812                           
 31813                           ;stkvar	_l @ sp[(-56)+20]
 31814                           
 31815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 31816  011EEA  0EDC               	movlw	-36
 31817  011EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 31818  011EF2  006F FF8F FFE6     	movff	plusw1,postinc1
 31819  011EF8  006F FF8F FFE6     	movff	plusw1,postinc1
 31820  011EFE  006F FF8F FFE6     	movff	plusw1,postinc1
 31821                           
 31822                           ;stkvar	_h @ sp[(-60)+24]
 31823  011F04  0EDC               	movlw	-36
 31824  011F06  006F FF8F FFE6     	movff	plusw1,postinc1
 31825  011F0C  006F FF8F FFE6     	movff	plusw1,postinc1
 31826  011F12  006F FF8F FFE6     	movff	plusw1,postinc1
 31827  011F18  006F FF8F FFE6     	movff	plusw1,postinc1
 31828  011F1E  ECF4  F003         	call	___fleq	;wreg free
 31829  011F22  A02A               	btfss	btemp& (0+255),0,c
 31830  011F24  D01B               	goto	l16047
 31831                           
 31832                           ;stkvar	_d @ sp[(-56)+44]
 31833  011F26  0EF4               	movlw	-12
 31834  011F28  B0E3               	btfsc	plusw1,0,c
 31835  011F2A  D018               	goto	l16047
 31836  011F2C                     u15400:
 31837                           
 31838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 31839  011F2C  0E00               	movlw	0
 31840  011F2E  6E32               	movwf	(btemp+8)^0,c
 31841  011F30  0E00               	movlw	0
 31842  011F32  6E33               	movwf	(btemp+9)^0,c
 31843  011F34  0E00               	movlw	0
 31844  011F36  6E34               	movwf	(btemp+10)^0,c
 31845  011F38  0E00               	movlw	0
 31846  011F3A  6E35               	movwf	(btemp+11)^0,c
 31847                           
 31848                           ;stkvar	_l @ sp[(-56)+20]
 31849  011F3C  0EDC               	movlw	-36
 31850  011F3E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31851  011F44  0EDD               	movlw	-35
 31852  011F46  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31853  011F4C  0EDE               	movlw	-34
 31854  011F4E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31855  011F54  0EDF               	movlw	-33
 31856  011F56  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31857  011F5C                     l16047:
 31858                           
 31859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 31860                           ;stkvar	_l @ sp[(-56)+20]
 31861  011F5C  0EDC               	movlw	-36
 31862  011F5E  006F FF8F FFE6     	movff	plusw1,postinc1
 31863  011F64  006F FF8F FFE6     	movff	plusw1,postinc1
 31864  011F6A  006F FF8F FFE6     	movff	plusw1,postinc1
 31865  011F70  006F FF8F FFE6     	movff	plusw1,postinc1
 31866                           
 31867                           ;stkvar	_g @ sp[(-60)+16]
 31868  011F76  0ED4               	movlw	-44
 31869  011F78  006F FF8F FFE6     	movff	plusw1,postinc1
 31870  011F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 31871  011F84  006F FF8F FFE6     	movff	plusw1,postinc1
 31872  011F8A  006F FF8F FFE6     	movff	plusw1,postinc1
 31873  011F90  EC1B  F0BC         	call	___fladd	;wreg free
 31874                           
 31875                           ;stkvar	_h @ sp[(-56)+24]
 31876  011F94  0EE0               	movlw	-32
 31877  011F96  0060  F0AB  FFE3   	movff	btemp,plusw1
 31878  011F9C  0EE1               	movlw	-31
 31879  011F9E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31880  011FA4  0EE2               	movlw	-30
 31881  011FA6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31882  011FAC  0EE3               	movlw	-29
 31883  011FAE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31884                           
 31885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 31886                           ;stkvar	_ou @ sp[(-56)+28]
 31887  011FB4  0EE4               	movlw	-28
 31888  011FB6  006F FF8C  F032    	movff	plusw1,btemp+8
 31889  011FBC  0EE5               	movlw	-27
 31890  011FBE  006F FF8C  F033    	movff	plusw1,btemp+9
 31891  011FC4  0EE6               	movlw	-26
 31892  011FC6  006F FF8C  F034    	movff	plusw1,btemp+10
 31893  011FCC  0EE7               	movlw	-25
 31894  011FCE  006F FF8C  F035    	movff	plusw1,btemp+11
 31895                           
 31896                           ;stkvar	_u @ sp[(-56)+12]
 31897  011FD4  0ED4               	movlw	-44
 31898  011FD6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31899  011FDC  0ED5               	movlw	-43
 31900  011FDE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31901  011FE4  0ED6               	movlw	-42
 31902  011FE6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31903  011FEC  0ED7               	movlw	-41
 31904  011FEE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31905                           
 31906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 31907                           ;stkvar	_nmode @ sp[(-56)+55]
 31908  011FF4  0EFF               	movlw	-1
 31909  011FF6  006F FF8C  F02A    	movff	plusw1,btemp
 31910  011FFC  0E65               	movlw	101
 31911  011FFE  182A               	xorwf	btemp^0,w,c
 31912  012000  B4D8               	btfsc	status,2,c
 31913  012002  D011               	goto	l16055
 31914                           
 31915                           ;stkvar	_e @ sp[(-56)+34]
 31916                           ;stkvar	_ne @ sp[(-56)+46]
 31917  012004  0EEA               	movlw	-22
 31918  012006  006F FF8C  F02A    	movff	plusw1,btemp
 31919  01200C  0EF6               	movlw	-10
 31920  01200E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31921  012014  0EEB               	movlw	-21
 31922  012016  006F FF8C  F02A    	movff	plusw1,btemp
 31923  01201C  0EF7               	movlw	-9
 31924  01201E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31925  012024  D004               	goto	l2564
 31926  012026                     l16055:
 31927                           
 31928                           ;stkvar	_ne @ sp[(-56)+46]
 31929  012026  0EF6               	movlw	-10
 31930  012028  6AE3               	clrf	plusw1,c
 31931  01202A  0EF7               	movlw	-9
 31932  01202C  6AE3               	clrf	plusw1,c
 31933  01202E                     l2564:
 31934                           
 31935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 31936                           ;stkvar	_pp @ sp[(-56)+50]
 31937  01202E  0EFA               	movlw	-6
 31938  012030  6AE3               	clrf	plusw1,c
 31939  012032  0EFB               	movlw	-5
 31940  012034  6AE3               	clrf	plusw1,c
 31941                           
 31942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 31943                           ;stkvar	_t @ sp[(-56)+52]
 31944  012036  0EFC               	movlw	-4
 31945  012038  6AE3               	clrf	plusw1,c
 31946  01203A  0EFD               	movlw	-3
 31947  01203C  6AE3               	clrf	plusw1,c
 31948                           
 31949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 31950                           ;stkvar	_i @ sp[(-56)+36]
 31951  01203E  0EEC               	movlw	-20
 31952  012040  6AE3               	clrf	plusw1,c
 31953  012042  0EED               	movlw	-19
 31954  012044  6AE3               	clrf	plusw1,c
 31955                           
 31956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31957  012046  D1B7               	goto	l16107
 31958  012048                     l16057:
 31959                           
 31960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 31961                           ;stkvar	_u @ sp[(-56)+12]
 31962  012048  0ED4               	movlw	-44
 31963  01204A  006F FF8F FFE6     	movff	plusw1,postinc1
 31964  012050  006F FF8F FFE6     	movff	plusw1,postinc1
 31965  012056  006F FF8F FFE6     	movff	plusw1,postinc1
 31966  01205C  006F FF8F FFE6     	movff	plusw1,postinc1
 31967                           
 31968                           ;stkvar	_h @ sp[(-60)+24]
 31969  012062  0EDC               	movlw	-36
 31970  012064  006F FF8F FFE6     	movff	plusw1,postinc1
 31971  01206A  006F FF8F FFE6     	movff	plusw1,postinc1
 31972  012070  006F FF8F FFE6     	movff	plusw1,postinc1
 31973  012076  006F FF8F FFE6     	movff	plusw1,postinc1
 31974  01207C  EC57  F0C3         	call	___fldiv	;wreg free
 31975  012080  0060  F0AB  FFE6   	movff	btemp,postinc1
 31976  012086  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31977  01208C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31978  012092  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31979  012098  EC01  F0D3         	call	_floorf	;wreg free
 31980                           
 31981                           ;stkvar	_l @ sp[(-56)+20]
 31982  01209C  0EDC               	movlw	-36
 31983  01209E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31984  0120A4  0EDD               	movlw	-35
 31985  0120A6  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31986  0120AC  0EDE               	movlw	-34
 31987  0120AE  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31988  0120B4  0EDF               	movlw	-33
 31989  0120B6  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31990                           
 31991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 31992                           ;stkvar	_l @ sp[(-56)+20]
 31993  0120BC  0EDC               	movlw	-36
 31994  0120BE  006F FF8F FFE6     	movff	plusw1,postinc1
 31995  0120C4  006F FF8F FFE6     	movff	plusw1,postinc1
 31996  0120CA  006F FF8F FFE6     	movff	plusw1,postinc1
 31997  0120D0  006F FF8F FFE6     	movff	plusw1,postinc1
 31998  0120D6  ECE5  F0F4         	call	___fltol	;wreg free
 31999  0120DA  0060  F0A8  F034   	movff	btemp,btemp+10
 32000  0120E0  0060  F0AC  F035   	movff	btemp+1,btemp+11
 32001                           
 32002                           ;stkvar	_d @ sp[(-56)+44]
 32003  0120E6  0EF4               	movlw	-12
 32004  0120E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32005  0120EE  0EF5               	movlw	-11
 32006  0120F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32007                           
 32008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 32009  0120F6  B84E               	btfsc	_flags^0,4,c
 32010  0120F8  D026               	goto	l16071
 32011                           
 32012                           ;stkvar	_d @ sp[(-56)+44]
 32013  0120FA  0EF4               	movlw	-12
 32014  0120FC  006F FF8C  F02A    	movff	plusw1,btemp
 32015  012102  0EF5               	movlw	-11
 32016  012104  50E3               	movf	plusw1,w,c
 32017  012106  102A               	iorwf	btemp^0,w,c
 32018  012108  A4D8               	btfss	status,2,c
 32019  01210A  D01D               	goto	l16071
 32020                           
 32021                           ;stkvar	_mode @ sp[(-56)+54]
 32022  01210C  0EFE               	movlw	-2
 32023  01210E  006F FF8C  F02A    	movff	plusw1,btemp
 32024  012114  0E67               	movlw	103
 32025  012116  182A               	xorwf	btemp^0,w,c
 32026  012118  A4D8               	btfss	status,2,c
 32027  01211A  D015               	goto	l16071
 32028                           
 32029                           ;stkvar	_ne @ sp[(-56)+46]
 32030  01211C  0EF7               	movlw	-9
 32031  01211E  AEE3               	btfss	plusw1,7,c
 32032  012120  D012               	goto	l16071
 32033                           
 32034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 32035                           ;stkvar	_t @ sp[(-56)+52]
 32036  012122  0EFC               	movlw	-4
 32037  012124  50E3               	movf	plusw1,w,c
 32038  012126  0F01               	addlw	1
 32039  012128  6E2A               	movwf	btemp^0,c
 32040  01212A  0EFC               	movlw	-4
 32041  01212C  0060  F0AB  FFE3   	movff	btemp,plusw1
 32042  012132  6A2A               	clrf	btemp^0,c
 32043  012134  0EFD               	movlw	-3
 32044  012136  50E3               	movf	plusw1,w,c
 32045  012138  202A               	addwfc	btemp^0,w,c
 32046  01213A  6E2A               	movwf	btemp^0,c
 32047  01213C  0EFD               	movlw	-3
 32048  01213E  0060  F0AB  FFE3   	movff	btemp,plusw1
 32049                           
 32050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 32051  012144  D0AF               	goto	l16099
 32052  012146                     l16071:
 32053                           
 32054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 32055                           ;stkvar	_pp @ sp[(-56)+50]
 32056  012146  0EFA               	movlw	-6
 32057  012148  006F FF8C  F02A    	movff	plusw1,btemp
 32058  01214E  0EFB               	movlw	-5
 32059  012150  50E3               	movf	plusw1,w,c
 32060  012152  102A               	iorwf	btemp^0,w,c
 32061  012154  A4D8               	btfss	status,2,c
 32062  012156  D070               	goto	l16091
 32063                           
 32064                           ;stkvar	_ne @ sp[(-56)+46]
 32065  012158  0EF7               	movlw	-9
 32066  01215A  AEE3               	btfss	plusw1,7,c
 32067  01215C  D06D               	goto	l16091
 32068                           
 32069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 32070                           ;stkvar	_n @ sp[(-56)+32]
 32071  01215E  0EE8               	movlw	-24
 32072  012160  006F FF8C  F034    	movff	plusw1,btemp+10
 32073  012166  0EE9               	movlw	-23
 32074  012168  006F FF8C  F035    	movff	plusw1,btemp+11
 32075  01216E  0E54               	movlw	low _dbuf
 32076  012170  2434               	addwf	(btemp+10)^0,w,c
 32077  012172  6ED9               	movwf	fsr2l,c
 32078  012174  0E03               	movlw	high _dbuf
 32079  012176  2035               	addwfc	(btemp+11)^0,w,c
 32080  012178  6EDA               	movwf	fsr2h,c
 32081  01217A  0E2E               	movlw	46
 32082  01217C  6EDF               	movwf	indf2,c
 32083                           
 32084                           ;stkvar	_n @ sp[(-56)+32]
 32085  01217E  0EE8               	movlw	-24
 32086  012180  50E3               	movf	plusw1,w,c
 32087  012182  0F01               	addlw	1
 32088  012184  6E2A               	movwf	btemp^0,c
 32089  012186  0EE8               	movlw	-24
 32090  012188  0060  F0AB  FFE3   	movff	btemp,plusw1
 32091  01218E  6A2A               	clrf	btemp^0,c
 32092  012190  0EE9               	movlw	-23
 32093  012192  50E3               	movf	plusw1,w,c
 32094  012194  202A               	addwfc	btemp^0,w,c
 32095  012196  6E2A               	movwf	btemp^0,c
 32096  012198  0EE9               	movlw	-23
 32097  01219A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32098                           
 32099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 32100                           ;stkvar	_w @ sp[(-56)+38]
 32101  0121A0  50E1               	movf	fsr1l,w,c
 32102  0121A2  0FEE               	addlw	-18
 32103  0121A4  6ED9               	movwf	fsr2l,c
 32104  0121A6  50E2               	movf	fsr1h,w,c
 32105  0121A8  6EDA               	movwf	fsr2h,c
 32106  0121AA  0EFF               	movlw	255
 32107  0121AC  22DA               	addwfc	fsr2h,f,c
 32108  0121AE  06DE               	decf	postinc2,f,c
 32109  0121B0  0E00               	movlw	0
 32110  0121B2  5ADD               	subwfb	postdec2,f,c
 32111                           
 32112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 32113  0121B4  0E01               	movlw	1
 32114  0121B6  6E34               	movwf	(btemp+10)^0,c
 32115  0121B8  0E00               	movlw	0
 32116  0121BA  6E35               	movwf	(btemp+11)^0,c
 32117                           
 32118                           ;stkvar	_pp @ sp[(-56)+50]
 32119  0121BC  0EFA               	movlw	-6
 32120  0121BE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32121  0121C4  0EFB               	movlw	-5
 32122  0121C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32123  0121CC  D035               	goto	l16091
 32124  0121CE                     l16083:
 32125                           
 32126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 32127                           ;stkvar	_n @ sp[(-56)+32]
 32128  0121CE  0EE8               	movlw	-24
 32129  0121D0  006F FF8C  F034    	movff	plusw1,btemp+10
 32130  0121D6  0EE9               	movlw	-23
 32131  0121D8  006F FF8C  F035    	movff	plusw1,btemp+11
 32132  0121DE  0E54               	movlw	low _dbuf
 32133  0121E0  2434               	addwf	(btemp+10)^0,w,c
 32134  0121E2  6ED9               	movwf	fsr2l,c
 32135  0121E4  0E03               	movlw	high _dbuf
 32136  0121E6  2035               	addwfc	(btemp+11)^0,w,c
 32137  0121E8  6EDA               	movwf	fsr2h,c
 32138  0121EA  0E30               	movlw	48
 32139  0121EC  6EDF               	movwf	indf2,c
 32140                           
 32141                           ;stkvar	_n @ sp[(-56)+32]
 32142  0121EE  0EE8               	movlw	-24
 32143  0121F0  50E3               	movf	plusw1,w,c
 32144  0121F2  0F01               	addlw	1
 32145  0121F4  6E2A               	movwf	btemp^0,c
 32146  0121F6  0EE8               	movlw	-24
 32147  0121F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 32148  0121FE  6A2A               	clrf	btemp^0,c
 32149  012200  0EE9               	movlw	-23
 32150  012202  50E3               	movf	plusw1,w,c
 32151  012204  202A               	addwfc	btemp^0,w,c
 32152  012206  6E2A               	movwf	btemp^0,c
 32153  012208  0EE9               	movlw	-23
 32154  01220A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32155                           
 32156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 32157                           ;stkvar	_w @ sp[(-56)+38]
 32158  012210  50E1               	movf	fsr1l,w,c
 32159  012212  0FEE               	addlw	-18
 32160  012214  6ED9               	movwf	fsr2l,c
 32161  012216  50E2               	movf	fsr1h,w,c
 32162  012218  6EDA               	movwf	fsr2h,c
 32163  01221A  0EFF               	movlw	255
 32164  01221C  22DA               	addwfc	fsr2h,f,c
 32165  01221E  06DE               	decf	postinc2,f,c
 32166  012220  0E00               	movlw	0
 32167  012222  5ADD               	subwfb	postdec2,f,c
 32168                           
 32169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 32170                           ;stkvar	_t @ sp[(-56)+52]
 32171  012224  50E1               	movf	fsr1l,w,c
 32172  012226  0FFC               	addlw	-4
 32173  012228  6ED9               	movwf	fsr2l,c
 32174  01222A  50E2               	movf	fsr1h,w,c
 32175  01222C  6EDA               	movwf	fsr2h,c
 32176  01222E  0EFF               	movlw	255
 32177  012230  22DA               	addwfc	fsr2h,f,c
 32178  012232  06DE               	decf	postinc2,f,c
 32179  012234  0E00               	movlw	0
 32180  012236  5ADD               	subwfb	postdec2,f,c
 32181  012238                     l16091:
 32182                           
 32183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 32184                           ;stkvar	_t @ sp[(-56)+52]
 32185  012238  0EFC               	movlw	-4
 32186  01223A  006F FF8C  F02A    	movff	plusw1,btemp
 32187  012240  0EFD               	movlw	-3
 32188  012242  50E3               	movf	plusw1,w,c
 32189  012244  102A               	iorwf	btemp^0,w,c
 32190  012246  A4D8               	btfss	status,2,c
 32191  012248  D7C2               	goto	l16083
 32192                           
 32193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 32194                           ;stkvar	_n @ sp[(-56)+32]
 32195  01224A  0EE8               	movlw	-24
 32196  01224C  006F FF8C  F034    	movff	plusw1,btemp+10
 32197  012252  0EE9               	movlw	-23
 32198  012254  006F FF8C  F035    	movff	plusw1,btemp+11
 32199  01225A  0E54               	movlw	low _dbuf
 32200  01225C  2434               	addwf	(btemp+10)^0,w,c
 32201  01225E  6ED9               	movwf	fsr2l,c
 32202  012260  0E03               	movlw	high _dbuf
 32203  012262  2035               	addwfc	(btemp+11)^0,w,c
 32204  012264  6EDA               	movwf	fsr2h,c
 32205                           
 32206                           ;stkvar	_d @ sp[(-56)+44]
 32207  012266  0EF4               	movlw	-12
 32208  012268  50E3               	movf	plusw1,w,c
 32209  01226A  0F30               	addlw	48
 32210  01226C  6EDF               	movwf	indf2,c
 32211                           
 32212                           ;stkvar	_n @ sp[(-56)+32]
 32213  01226E  0EE8               	movlw	-24
 32214  012270  50E3               	movf	plusw1,w,c
 32215  012272  0F01               	addlw	1
 32216  012274  6E2A               	movwf	btemp^0,c
 32217  012276  0EE8               	movlw	-24
 32218  012278  0060  F0AB  FFE3   	movff	btemp,plusw1
 32219  01227E  6A2A               	clrf	btemp^0,c
 32220  012280  0EE9               	movlw	-23
 32221  012282  50E3               	movf	plusw1,w,c
 32222  012284  202A               	addwfc	btemp^0,w,c
 32223  012286  6E2A               	movwf	btemp^0,c
 32224  012288  0EE9               	movlw	-23
 32225  01228A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32226                           
 32227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 32228                           ;stkvar	_w @ sp[(-56)+38]
 32229  012290  50E1               	movf	fsr1l,w,c
 32230  012292  0FEE               	addlw	-18
 32231  012294  6ED9               	movwf	fsr2l,c
 32232  012296  50E2               	movf	fsr1h,w,c
 32233  012298  6EDA               	movwf	fsr2h,c
 32234  01229A  0EFF               	movlw	255
 32235  01229C  22DA               	addwfc	fsr2h,f,c
 32236  01229E  06DE               	decf	postinc2,f,c
 32237  0122A0  0E00               	movlw	0
 32238  0122A2  5ADD               	subwfb	postdec2,f,c
 32239  0122A4                     l16099:
 32240                           
 32241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 32242                           ;stkvar	_u @ sp[(-56)+12]
 32243  0122A4  0ED4               	movlw	-44
 32244  0122A6  006F FF8F FFE6     	movff	plusw1,postinc1
 32245  0122AC  006F FF8F FFE6     	movff	plusw1,postinc1
 32246  0122B2  006F FF8F FFE6     	movff	plusw1,postinc1
 32247  0122B8  006F FF8F FFE6     	movff	plusw1,postinc1
 32248                           
 32249                           ;stkvar	_l @ sp[(-60)+20]
 32250  0122BE  0ED8               	movlw	-40
 32251  0122C0  006F FF8F FFE6     	movff	plusw1,postinc1
 32252  0122C6  006F FF8F FFE6     	movff	plusw1,postinc1
 32253  0122CC  006F FF8F FFE6     	movff	plusw1,postinc1
 32254  0122D2  006F FF8F FFE6     	movff	plusw1,postinc1
 32255  0122D8  EC06  F0B8         	call	___flmul	;wreg free
 32256  0122DC  0060  F0AB  FFE6   	movff	btemp,postinc1
 32257  0122E2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 32258  0122E8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 32259  0122EE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32260                           
 32261                           ;stkvar	_h @ sp[(-60)+24]
 32262  0122F4  0EDC               	movlw	-36
 32263  0122F6  006F FF8F FFE6     	movff	plusw1,postinc1
 32264  0122FC  006F FF8F FFE6     	movff	plusw1,postinc1
 32265  012302  006F FF8F FFE6     	movff	plusw1,postinc1
 32266  012308  006F FF8F FFE6     	movff	plusw1,postinc1
 32267  01230E  EC0D  F011         	call	___flsub	;wreg free
 32268                           
 32269                           ;stkvar	_h @ sp[(-56)+24]
 32270  012312  0EE0               	movlw	-32
 32271  012314  0060  F0AB  FFE3   	movff	btemp,plusw1
 32272  01231A  0EE1               	movlw	-31
 32273  01231C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32274  012322  0EE2               	movlw	-30
 32275  012324  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32276  01232A  0EE3               	movlw	-29
 32277  01232C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32278                           
 32279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 32280  012332  0E00               	movlw	0
 32281  012334  6EE6               	movwf	postinc1,c
 32282  012336  0E00               	movlw	0
 32283  012338  6EE6               	movwf	postinc1,c
 32284  01233A  0E20               	movlw	32
 32285  01233C  6EE6               	movwf	postinc1,c
 32286  01233E  0E41               	movlw	65
 32287  012340  6EE6               	movwf	postinc1,c
 32288                           
 32289                           ;stkvar	_u @ sp[(-60)+12]
 32290  012342  0ED0               	movlw	-48
 32291  012344  006F FF8F FFE6     	movff	plusw1,postinc1
 32292  01234A  006F FF8F FFE6     	movff	plusw1,postinc1
 32293  012350  006F FF8F FFE6     	movff	plusw1,postinc1
 32294  012356  006F FF8F FFE6     	movff	plusw1,postinc1
 32295  01235C  EC57  F0C3         	call	___fldiv	;wreg free
 32296                           
 32297                           ;stkvar	_u @ sp[(-56)+12]
 32298  012360  0ED4               	movlw	-44
 32299  012362  0060  F0AB  FFE3   	movff	btemp,plusw1
 32300  012368  0ED5               	movlw	-43
 32301  01236A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32302  012370  0ED6               	movlw	-42
 32303  012372  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32304  012378  0ED7               	movlw	-41
 32305  01237A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32306                           
 32307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 32308                           ;stkvar	_ne @ sp[(-56)+46]
 32309  012380  50E1               	movf	fsr1l,w,c
 32310  012382  0FF6               	addlw	-10
 32311  012384  6ED9               	movwf	fsr2l,c
 32312  012386  50E2               	movf	fsr1h,w,c
 32313  012388  6EDA               	movwf	fsr2h,c
 32314  01238A  0EFF               	movlw	255
 32315  01238C  22DA               	addwfc	fsr2h,f,c
 32316  01238E  06DE               	decf	postinc2,f,c
 32317  012390  0E00               	movlw	0
 32318  012392  5ADD               	subwfb	postdec2,f,c
 32319                           
 32320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 32321                           ;stkvar	_i @ sp[(-56)+36]
 32322  012394  0EEC               	movlw	-20
 32323  012396  50E3               	movf	plusw1,w,c
 32324  012398  0F01               	addlw	1
 32325  01239A  6E2A               	movwf	btemp^0,c
 32326  01239C  0EEC               	movlw	-20
 32327  01239E  0060  F0AB  FFE3   	movff	btemp,plusw1
 32328  0123A4  6A2A               	clrf	btemp^0,c
 32329  0123A6  0EED               	movlw	-19
 32330  0123A8  50E3               	movf	plusw1,w,c
 32331  0123AA  202A               	addwfc	btemp^0,w,c
 32332  0123AC  6E2A               	movwf	btemp^0,c
 32333  0123AE  0EED               	movlw	-19
 32334  0123B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 32335  0123B6                     l16107:
 32336                           
 32337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 32338                           ;stkvar	_m @ sp[(-56)+48]
 32339                           ;stkvar	_i @ sp[(-56)+36]
 32340  0123B6  50E1               	movf	fsr1l,w,c
 32341  0123B8  0FEC               	addlw	-20
 32342  0123BA  6ED9               	movwf	fsr2l,c
 32343  0123BC  50E2               	movf	fsr1h,w,c
 32344  0123BE  6EDA               	movwf	fsr2h,c
 32345  0123C0  0EFF               	movlw	255
 32346  0123C2  22DA               	addwfc	fsr2h,f,c
 32347  0123C4  0EF8               	movlw	-8
 32348  0123C6  50E3               	movf	plusw1,w,c
 32349  0123C8  5CDE               	subwf	postinc2,w,c
 32350  0123CA  50DE               	movf	postinc2,w,c
 32351  0123CC  0A80               	xorlw	128
 32352  0123CE  6E2A               	movwf	btemp^0,c
 32353  0123D0  0EF9               	movlw	-7
 32354  0123D2  50E3               	movf	plusw1,w,c
 32355  0123D4  0A80               	xorlw	128
 32356  0123D6  582A               	subwfb	btemp^0,w,c
 32357  0123D8  B0D8               	btfsc	status,0,c
 32358  0123DA  D00E               	goto	u15500
 32359                           
 32360                           ;stkvar	_n @ sp[(-56)+32]
 32361  0123DC  0EE9               	movlw	-23
 32362  0123DE  BEE3               	btfsc	plusw1,7,c
 32363  0123E0  D633               	goto	l16057
 32364  0123E2  0EE9               	movlw	-23
 32365  0123E4  50E3               	movf	plusw1,w,c
 32366  0123E6  E108               	bnz	u15500
 32367  0123E8  0EE8               	movlw	-24
 32368  0123EA  006F FF8C  F02A    	movff	plusw1,btemp
 32369  0123F0  0E4B               	movlw	75
 32370  0123F2  5E2A               	subwf	btemp^0,f,c
 32371  0123F4  A0D8               	btfss	status,0,c
 32372  0123F6  D628               	goto	l16057
 32373  0123F8                     u15500:
 32374                           
 32375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 32376                           ;stkvar	_pp @ sp[(-56)+50]
 32377  0123F8  0EFA               	movlw	-6
 32378  0123FA  006F FF8C  F02A    	movff	plusw1,btemp
 32379  012400  0EFB               	movlw	-5
 32380  012402  50E3               	movf	plusw1,w,c
 32381  012404  102A               	iorwf	btemp^0,w,c
 32382  012406  B4D8               	btfsc	status,2,c
 32383  012408  A84E               	btfss	_flags^0,4,c
 32384  01240A  D021               	goto	l16119
 32385                           
 32386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 32387                           ;stkvar	_n @ sp[(-56)+32]
 32388  01240C  0EE8               	movlw	-24
 32389  01240E  006F FF8C  F034    	movff	plusw1,btemp+10
 32390  012414  0EE9               	movlw	-23
 32391  012416  006F FF8C  F035    	movff	plusw1,btemp+11
 32392  01241C  0E54               	movlw	low _dbuf
 32393  01241E  2434               	addwf	(btemp+10)^0,w,c
 32394  012420  6ED9               	movwf	fsr2l,c
 32395  012422  0E03               	movlw	high _dbuf
 32396  012424  2035               	addwfc	(btemp+11)^0,w,c
 32397  012426  6EDA               	movwf	fsr2h,c
 32398  012428  0E2E               	movlw	46
 32399  01242A  6EDF               	movwf	indf2,c
 32400                           
 32401                           ;stkvar	_n @ sp[(-56)+32]
 32402  01242C  0EE8               	movlw	-24
 32403  01242E  50E3               	movf	plusw1,w,c
 32404  012430  0F01               	addlw	1
 32405  012432  6E2A               	movwf	btemp^0,c
 32406  012434  0EE8               	movlw	-24
 32407  012436  0060  F0AB  FFE3   	movff	btemp,plusw1
 32408  01243C  6A2A               	clrf	btemp^0,c
 32409  01243E  0EE9               	movlw	-23
 32410  012440  50E3               	movf	plusw1,w,c
 32411  012442  202A               	addwfc	btemp^0,w,c
 32412  012444  6E2A               	movwf	btemp^0,c
 32413  012446  0EE9               	movlw	-23
 32414  012448  0060  F0AB  FFE3   	movff	btemp,plusw1
 32415  01244E                     l16119:
 32416                           
 32417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 32418                           ;stkvar	_n @ sp[(-56)+32]
 32419  01244E  0EE8               	movlw	-24
 32420  012450  006F FF8C  F034    	movff	plusw1,btemp+10
 32421  012456  0EE9               	movlw	-23
 32422  012458  006F FF8C  F035    	movff	plusw1,btemp+11
 32423  01245E  0E54               	movlw	low _dbuf
 32424  012460  2434               	addwf	(btemp+10)^0,w,c
 32425  012462  6ED9               	movwf	fsr2l,c
 32426  012464  0E03               	movlw	high _dbuf
 32427  012466  2035               	addwfc	(btemp+11)^0,w,c
 32428  012468  6EDA               	movwf	fsr2h,c
 32429  01246A  0E00               	movlw	0
 32430  01246C  6EDF               	movwf	indf2,c
 32431                           
 32432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 32433                           ;stkvar	_nmode @ sp[(-56)+55]
 32434  01246E  0EFF               	movlw	-1
 32435  012470  006F FF8C  F02A    	movff	plusw1,btemp
 32436  012476  0E65               	movlw	101
 32437  012478  182A               	xorwf	btemp^0,w,c
 32438  01247A  A4D8               	btfss	status,2,c
 32439  01247C  EFA0  F08B         	goto	l15923
 32440                           
 32441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 32442  012480  0E4F               	movlw	79
 32443  012482  6E34               	movwf	(btemp+10)^0,c
 32444  012484  0E00               	movlw	0
 32445  012486  6E35               	movwf	(btemp+11)^0,c
 32446                           
 32447                           ;stkvar	_i @ sp[(-56)+36]
 32448  012488  0EEC               	movlw	-20
 32449  01248A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32450  012490  0EED               	movlw	-19
 32451  012492  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32452                           
 32453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 32454                           ;stkvar	_i @ sp[(-56)+36]
 32455  012498  0EEC               	movlw	-20
 32456  01249A  006F FF8C  F034    	movff	plusw1,btemp+10
 32457  0124A0  0EED               	movlw	-19
 32458  0124A2  006F FF8C  F035    	movff	plusw1,btemp+11
 32459  0124A8  0E54               	movlw	low _dbuf
 32460  0124AA  2434               	addwf	(btemp+10)^0,w,c
 32461  0124AC  6ED9               	movwf	fsr2l,c
 32462  0124AE  0E03               	movlw	high _dbuf
 32463  0124B0  2035               	addwfc	(btemp+11)^0,w,c
 32464  0124B2  6EDA               	movwf	fsr2h,c
 32465  0124B4  0E00               	movlw	0
 32466  0124B6  6EDF               	movwf	indf2,c
 32467                           
 32468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 32469                           ;stkvar	_sign @ sp[(-56)+42]
 32470  0124B8  0EF2               	movlw	-14
 32471  0124BA  6AE3               	clrf	plusw1,c
 32472  0124BC  0EF3               	movlw	-13
 32473  0124BE  6AE3               	clrf	plusw1,c
 32474                           
 32475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 32476                           ;stkvar	_e @ sp[(-56)+34]
 32477  0124C0  0EEB               	movlw	-21
 32478  0124C2  AEE3               	btfss	plusw1,7,c
 32479  0124C4  D012               	goto	l16133
 32480                           
 32481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 32482  0124C6  0E01               	movlw	1
 32483  0124C8  6E34               	movwf	(btemp+10)^0,c
 32484  0124CA  0E00               	movlw	0
 32485  0124CC  6E35               	movwf	(btemp+11)^0,c
 32486                           
 32487                           ;stkvar	_sign @ sp[(-56)+42]
 32488  0124CE  0EF2               	movlw	-14
 32489  0124D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32490  0124D6  0EF3               	movlw	-13
 32491  0124D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32492                           
 32493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 32494                           ;stkvar	_e @ sp[(-56)+34]
 32495                           ;stkvar	_e @ sp[(-56)+34]
 32496  0124DE  0EEA               	movlw	-22
 32497  0124E0  6CE3               	negf	plusw1,c
 32498  0124E2  0EEB               	movlw	-21
 32499  0124E4  1EE3               	comf	plusw1,f,c
 32500  0124E6  B0D8               	btfsc	status,0,c
 32501  0124E8  2AE3               	incf	plusw1,f,c
 32502  0124EA                     l16133:
 32503                           
 32504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 32505  0124EA  0E02               	movlw	2
 32506  0124EC  6E34               	movwf	(btemp+10)^0,c
 32507  0124EE  0E00               	movlw	0
 32508  0124F0  6E35               	movwf	(btemp+11)^0,c
 32509                           
 32510                           ;stkvar	_p @ sp[(-56)+40]
 32511  0124F2  0EF0               	movlw	-16
 32512  0124F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32513  0124FA  0EF1               	movlw	-15
 32514  0124FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32515                           
 32516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32517  012502  D051               	goto	l16145
 32518  012504                     l16135:
 32519                           
 32520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 32521                           ;stkvar	_i @ sp[(-56)+36]
 32522  012504  50E1               	movf	fsr1l,w,c
 32523  012506  0FEC               	addlw	-20
 32524  012508  6ED9               	movwf	fsr2l,c
 32525  01250A  50E2               	movf	fsr1h,w,c
 32526  01250C  6EDA               	movwf	fsr2h,c
 32527  01250E  0EFF               	movlw	255
 32528  012510  22DA               	addwfc	fsr2h,f,c
 32529  012512  06DE               	decf	postinc2,f,c
 32530  012514  0E00               	movlw	0
 32531  012516  5ADD               	subwfb	postdec2,f,c
 32532                           
 32533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 32534                           ;stkvar	_i @ sp[(-56)+36]
 32535  012518  0EEC               	movlw	-20
 32536  01251A  006F FF8C  F034    	movff	plusw1,btemp+10
 32537  012520  0EED               	movlw	-19
 32538  012522  006F FF8C  F035    	movff	plusw1,btemp+11
 32539  012528  0E54               	movlw	low _dbuf
 32540  01252A  2434               	addwf	(btemp+10)^0,w,c
 32541  01252C  6ED9               	movwf	fsr2l,c
 32542  01252E  0E03               	movlw	high _dbuf
 32543  012530  2035               	addwfc	(btemp+11)^0,w,c
 32544  012532  6EDA               	movwf	fsr2h,c
 32545  012534  0E0A               	movlw	10
 32546  012536  6EE6               	movwf	postinc1,c
 32547  012538  0E00               	movlw	0
 32548  01253A  6EE6               	movwf	postinc1,c
 32549                           
 32550                           ;stkvar	_e @ sp[(-58)+34]
 32551  01253C  0EE8               	movlw	-24
 32552  01253E  006F FF8F FFE6     	movff	plusw1,postinc1
 32553  012544  006F FF8F FFE6     	movff	plusw1,postinc1
 32554  01254A  ECEB  F0FD         	call	___awmod	;wreg free
 32555  01254E  502A               	movf	btemp^0,w,c
 32556  012550  0F30               	addlw	48
 32557  012552  6EDF               	movwf	indf2,c
 32558                           
 32559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 32560  012554  0E0A               	movlw	10
 32561  012556  6EE6               	movwf	postinc1,c
 32562  012558  0E00               	movlw	0
 32563  01255A  6EE6               	movwf	postinc1,c
 32564                           
 32565                           ;stkvar	_e @ sp[(-58)+34]
 32566  01255C  0EE8               	movlw	-24
 32567  01255E  006F FF8F FFE6     	movff	plusw1,postinc1
 32568  012564  006F FF8F FFE6     	movff	plusw1,postinc1
 32569  01256A  ECBC  F0F9         	call	___awdiv	;wreg free
 32570                           
 32571                           ;stkvar	_e @ sp[(-56)+34]
 32572  01256E  0EEA               	movlw	-22
 32573  012570  0060  F0AB  FFE3   	movff	btemp,plusw1
 32574  012576  0EEB               	movlw	-21
 32575  012578  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32576                           
 32577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 32578                           ;stkvar	_p @ sp[(-56)+40]
 32579  01257E  50E1               	movf	fsr1l,w,c
 32580  012580  0FF0               	addlw	-16
 32581  012582  6ED9               	movwf	fsr2l,c
 32582  012584  50E2               	movf	fsr1h,w,c
 32583  012586  6EDA               	movwf	fsr2h,c
 32584  012588  0EFF               	movlw	255
 32585  01258A  22DA               	addwfc	fsr2h,f,c
 32586  01258C  06DE               	decf	postinc2,f,c
 32587  01258E  0E00               	movlw	0
 32588  012590  5ADD               	subwfb	postdec2,f,c
 32589                           
 32590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 32591                           ;stkvar	_w @ sp[(-56)+38]
 32592  012592  50E1               	movf	fsr1l,w,c
 32593  012594  0FEE               	addlw	-18
 32594  012596  6ED9               	movwf	fsr2l,c
 32595  012598  50E2               	movf	fsr1h,w,c
 32596  01259A  6EDA               	movwf	fsr2h,c
 32597  01259C  0EFF               	movlw	255
 32598  01259E  22DA               	addwfc	fsr2h,f,c
 32599  0125A0  06DE               	decf	postinc2,f,c
 32600  0125A2  0E00               	movlw	0
 32601  0125A4  5ADD               	subwfb	postdec2,f,c
 32602  0125A6                     l16145:
 32603                           
 32604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32605                           ;stkvar	_e @ sp[(-56)+34]
 32606  0125A6  0EEA               	movlw	-22
 32607  0125A8  006F FF8C  F02A    	movff	plusw1,btemp
 32608  0125AE  0EEB               	movlw	-21
 32609  0125B0  50E3               	movf	plusw1,w,c
 32610  0125B2  102A               	iorwf	btemp^0,w,c
 32611  0125B4  A4D8               	btfss	status,2,c
 32612  0125B6  D7A6               	goto	l16135
 32613                           
 32614                           ;stkvar	_p @ sp[(-56)+40]
 32615  0125B8  0EF1               	movlw	-15
 32616  0125BA  BEE3               	btfsc	plusw1,7,c
 32617  0125BC  D007               	goto	u15560
 32618  0125BE  0EF1               	movlw	-15
 32619  0125C0  50E3               	movf	plusw1,w,c
 32620  0125C2  E1A0               	bnz	l16135
 32621  0125C4  0EF0               	movlw	-16
 32622  0125C6  04E3               	decf	plusw1,w,c
 32623  0125C8  B0D8               	btfsc	status,0,c
 32624  0125CA  D79C               	goto	l16135
 32625  0125CC                     u15560:
 32626                           
 32627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 32628                           ;stkvar	_i @ sp[(-56)+36]
 32629  0125CC  50E1               	movf	fsr1l,w,c
 32630  0125CE  0FEC               	addlw	-20
 32631  0125D0  6ED9               	movwf	fsr2l,c
 32632  0125D2  50E2               	movf	fsr1h,w,c
 32633  0125D4  6EDA               	movwf	fsr2h,c
 32634  0125D6  0EFF               	movlw	255
 32635  0125D8  22DA               	addwfc	fsr2h,f,c
 32636  0125DA  06DE               	decf	postinc2,f,c
 32637  0125DC  0E00               	movlw	0
 32638  0125DE  5ADD               	subwfb	postdec2,f,c
 32639                           
 32640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 32641                           ;stkvar	_sign @ sp[(-56)+42]
 32642  0125E0  0EF2               	movlw	-14
 32643  0125E2  006F FF8C  F02A    	movff	plusw1,btemp
 32644  0125E8  0EF3               	movlw	-13
 32645  0125EA  50E3               	movf	plusw1,w,c
 32646  0125EC  102A               	iorwf	btemp^0,w,c
 32647  0125EE  A4D8               	btfss	status,2,c
 32648  0125F0  D002               	goto	l16155
 32649  0125F2  0E2B               	movlw	43
 32650  0125F4  D001               	goto	L33
 32651  0125F6                     l16155:
 32652  0125F6  0E2D               	movlw	45
 32653  0125F8                     L33:
 32654  0125F8  6E34               	movwf	(btemp+10)^0,c
 32655  0125FA  0E00               	movlw	0
 32656  0125FC  6E35               	movwf	(btemp+11)^0,c
 32657                           
 32658                           ;stkvar	_efgtoa$6871 @ sp[(-56)+4]
 32659  0125FE  0ECC               	movlw	-52
 32660  012600  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32661  012606  0ECD               	movlw	-51
 32662  012608  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32663                           
 32664                           ;stkvar	_efgtoa$6871 @ sp[(-56)+4]
 32665                           ;stkvar	_i @ sp[(-56)+36]
 32666  01260E  0EEC               	movlw	-20
 32667  012610  006F FF8C  F034    	movff	plusw1,btemp+10
 32668  012616  0EED               	movlw	-19
 32669  012618  006F FF8C  F035    	movff	plusw1,btemp+11
 32670  01261E  0E54               	movlw	low _dbuf
 32671  012620  2434               	addwf	(btemp+10)^0,w,c
 32672  012622  6ED9               	movwf	fsr2l,c
 32673  012624  0E03               	movlw	high _dbuf
 32674  012626  2035               	addwfc	(btemp+11)^0,w,c
 32675  012628  6EDA               	movwf	fsr2h,c
 32676  01262A  0ECC               	movlw	-52
 32677  01262C  006F FF8F FFDF     	movff	plusw1,indf2
 32678                           
 32679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 32680                           ;stkvar	_w @ sp[(-56)+38]
 32681  012632  50E1               	movf	fsr1l,w,c
 32682  012634  0FEE               	addlw	-18
 32683  012636  6ED9               	movwf	fsr2l,c
 32684  012638  50E2               	movf	fsr1h,w,c
 32685  01263A  6EDA               	movwf	fsr2h,c
 32686  01263C  0EFF               	movlw	255
 32687  01263E  22DA               	addwfc	fsr2h,f,c
 32688  012640  06DE               	decf	postinc2,f,c
 32689  012642  0E00               	movlw	0
 32690  012644  5ADD               	subwfb	postdec2,f,c
 32691                           
 32692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 32693                           ;stkvar	_i @ sp[(-56)+36]
 32694  012646  50E1               	movf	fsr1l,w,c
 32695  012648  0FEC               	addlw	-20
 32696  01264A  6ED9               	movwf	fsr2l,c
 32697  01264C  50E2               	movf	fsr1h,w,c
 32698  01264E  6EDA               	movwf	fsr2h,c
 32699  012650  0EFF               	movlw	255
 32700  012652  22DA               	addwfc	fsr2h,f,c
 32701  012654  06DE               	decf	postinc2,f,c
 32702  012656  0E00               	movlw	0
 32703  012658  5ADD               	subwfb	postdec2,f,c
 32704  01265A  0EBF               	movlw	191
 32705  01265C  6E34               	movwf	(btemp+10)^0,c
 32706  01265E  0EFF               	movlw	255
 32707  012660  6E35               	movwf	(btemp+11)^0,c
 32708                           
 32709                           ;stkvar	_c @ sp[(-56)+-7]
 32710  012662  0EC1               	movlw	-63
 32711  012664  50E3               	movf	plusw1,w,c
 32712  012666  6E32               	movwf	(btemp+8)^0,c
 32713  012668  6A33               	clrf	(btemp+9)^0,c
 32714  01266A  5034               	movf	(btemp+10)^0,w,c
 32715  01266C  2632               	addwf	(btemp+8)^0,f,c
 32716  01266E  5035               	movf	(btemp+11)^0,w,c
 32717  012670  2233               	addwfc	(btemp+9)^0,f,c
 32718  012672  5033               	movf	(btemp+9)^0,w,c
 32719  012674  E106               	bnz	u15580
 32720  012676  0E1A               	movlw	26
 32721  012678  5C32               	subwf	(btemp+8)^0,w,c
 32722  01267A  B0D8               	btfsc	status,0,c
 32723  01267C  D002               	goto	u15580
 32724  01267E  0E01               	movlw	1
 32725  012680  D001               	goto	u15590
 32726  012682                     u15580:
 32727  012682  0E00               	movlw	0
 32728  012684                     u15590:
 32729  012684  6E34               	movwf	(btemp+10)^0,c
 32730  012686  6A35               	clrf	(btemp+11)^0,c
 32731                           
 32732                           ;stkvar	_efgtoa$6873 @ sp[(-56)+0]
 32733  012688  0EC8               	movlw	-56
 32734  01268A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32735  012690  0EC9               	movlw	-55
 32736  012692  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32737                           
 32738                           ;stkvar	_efgtoa$6873 @ sp[(-56)+0]
 32739  012698  0EC8               	movlw	-56
 32740  01269A  006F FF8C  F02A    	movff	plusw1,btemp
 32741  0126A0  0EC9               	movlw	-55
 32742  0126A2  50E3               	movf	plusw1,w,c
 32743  0126A4  102A               	iorwf	btemp^0,w,c
 32744  0126A6  A4D8               	btfss	status,2,c
 32745  0126A8  D002               	goto	l16171
 32746  0126AA  0E65               	movlw	101
 32747  0126AC  D001               	goto	L34
 32748  0126AE                     l16171:
 32749  0126AE  0E45               	movlw	69
 32750  0126B0                     L34:
 32751  0126B0  6E34               	movwf	(btemp+10)^0,c
 32752  0126B2  0E00               	movlw	0
 32753  0126B4  6E35               	movwf	(btemp+11)^0,c
 32754                           
 32755                           ;stkvar	_efgtoa$6872 @ sp[(-56)+2]
 32756  0126B6  0ECA               	movlw	-54
 32757  0126B8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32758  0126BE  0ECB               	movlw	-53
 32759  0126C0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32760                           
 32761                           ;stkvar	_efgtoa$6872 @ sp[(-56)+2]
 32762                           ;stkvar	_i @ sp[(-56)+36]
 32763  0126C6  0EEC               	movlw	-20
 32764  0126C8  006F FF8C  F034    	movff	plusw1,btemp+10
 32765  0126CE  0EED               	movlw	-19
 32766  0126D0  006F FF8C  F035    	movff	plusw1,btemp+11
 32767  0126D6  0E54               	movlw	low _dbuf
 32768  0126D8  2434               	addwf	(btemp+10)^0,w,c
 32769  0126DA  6ED9               	movwf	fsr2l,c
 32770  0126DC  0E03               	movlw	high _dbuf
 32771  0126DE  2035               	addwfc	(btemp+11)^0,w,c
 32772  0126E0  6EDA               	movwf	fsr2h,c
 32773  0126E2  0ECA               	movlw	-54
 32774  0126E4  006F FF8F FFDF     	movff	plusw1,indf2
 32775                           
 32776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 32777                           ;stkvar	_w @ sp[(-56)+38]
 32778  0126EA  50E1               	movf	fsr1l,w,c
 32779  0126EC  0FEE               	addlw	-18
 32780  0126EE  6ED9               	movwf	fsr2l,c
 32781  0126F0  50E2               	movf	fsr1h,w,c
 32782  0126F2  6EDA               	movwf	fsr2h,c
 32783  0126F4  0EFF               	movlw	255
 32784  0126F6  22DA               	addwfc	fsr2h,f,c
 32785  0126F8  06DE               	decf	postinc2,f,c
 32786  0126FA  0E00               	movlw	0
 32787  0126FC  5ADD               	subwfb	postdec2,f,c
 32788                           
 32789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 32790                           ;stkvar	_i @ sp[(-56)+36]
 32791  0126FE  0EEC               	movlw	-20
 32792  012700  006F FF8C  F034    	movff	plusw1,btemp+10
 32793  012706  0EED               	movlw	-19
 32794  012708  006F FF8C  F035    	movff	plusw1,btemp+11
 32795  01270E  0E54               	movlw	low _dbuf
 32796  012710  2434               	addwf	(btemp+10)^0,w,c
 32797  012712  6E32               	movwf	(btemp+8)^0,c
 32798  012714  0E03               	movlw	high _dbuf
 32799  012716  2035               	addwfc	(btemp+11)^0,w,c
 32800  012718  6E33               	movwf	(btemp+9)^0,c
 32801  01271A  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 32802  012720  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 32803                           
 32804                           ;stkvar	_n @ sp[(-58)+32]
 32805  012726  0E54               	movlw	low _dbuf
 32806  012728  6E34               	movwf	(btemp+10)^0,c
 32807  01272A  0E03               	movlw	high _dbuf
 32808  01272C  6E35               	movwf	(btemp+11)^0,c
 32809  01272E  0EE6               	movlw	-26
 32810  012730  50E3               	movf	plusw1,w,c
 32811  012732  2634               	addwf	(btemp+10)^0,f,c
 32812  012734  0EE7               	movlw	-25
 32813  012736  50E3               	movf	plusw1,w,c
 32814  012738  2235               	addwfc	(btemp+11)^0,f,c
 32815  01273A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 32816  012740  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 32817  012746  EC23  F003         	call	_strcpy	;wreg free
 32818  01274A  EFA0  F08B         	goto	l15923
 32819  01274E                     l2520:
 32820                           
 32821                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 32822  01274E  0EC1               	movlw	193
 32823  012750  26E1               	addwf	fsr1l,f,c
 32824  012752  0EFF               	movlw	255
 32825  012754  22E2               	addwfc	fsr1h,f,c
 32826  012756  0012               	return		;funcret
 32827  012758                     __end_of_efgtoa:
 32828                           	opt callstack 0
 32829                           
 32830 ;; *************** function _tolower *****************
 32831 ;; Defined at:
 32832 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 32833 ;; Parameters:    Size  Location     Type
 32834 ;;  c               2  [STACK] int 
 32835 ;; Auto vars:     Size  Location     Type
 32836 ;;		None
 32837 ;; Return value:  Size  Location     Type
 32838 ;;                  2  [STACK] int 
 32839 ;; Registers used:
 32840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 32841 ;; Tracked objects:
 32842 ;;		On entry : 0/0
 32843 ;;		On exit  : 0/0
 32844 ;;		Unchanged: 0/0
 32845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32850 ;;Total ram usage:        0 bytes
 32851 ;; Hardware stack levels used:    1
 32852 ;; Hardware stack levels required when called:   16
 32853 ;; This function calls:
 32854 ;;		_isupper
 32855 ;; This function is called by:
 32856 ;;		_efgtoa
 32857 ;;		_vfpfcnvrt
 32858 ;; This function uses a reentrant model
 32859 ;;
 32860                           
 32861                           	psect	text104
 32862  001566                     __ptext104:
 32863                           	opt callstack 0
 32864  001566                     _tolower:
 32865                           	opt callstack 0
 32866                           
 32867                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32868  001566  52E6               	movf	postinc1,f,c
 32869  001568  52E6               	movf	postinc1,f,c
 32870                           
 32871                           ;stkvar	_c @ sp[(-2)+-2]
 32872                           
 32873                           ;incstack = 0
 32874 ;; hardware stack exceeded
 32875  00156A  0EFC               	movlw	-4
 32876  00156C  50E3               	movf	plusw1,w,c
 32877  00156E  0FBF               	addlw	191
 32878  001570  6E34               	movwf	(btemp+10)^0,c
 32879  001572  0EFD               	movlw	-3
 32880  001574  006F FF8C  F035    	movff	plusw1,btemp+11
 32881  00157A  0EFF               	movlw	255
 32882  00157C  2235               	addwfc	(btemp+11)^0,f,c
 32883  00157E  5035               	movf	(btemp+11)^0,w,c
 32884  001580  E106               	bnz	u7900
 32885  001582  0E1A               	movlw	26
 32886  001584  5C34               	subwf	(btemp+10)^0,w,c
 32887  001586  B0D8               	btfsc	status,0,c
 32888  001588  D002               	goto	u7900
 32889  00158A  0E01               	movlw	1
 32890  00158C  D001               	goto	u7910
 32891  00158E                     u7900:
 32892  00158E  0E00               	movlw	0
 32893  001590                     u7910:
 32894  001590  6E34               	movwf	(btemp+10)^0,c
 32895  001592  6A35               	clrf	(btemp+11)^0,c
 32896                           
 32897                           ;stkvar	_tolower$7827 @ sp[(-2)+0]
 32898  001594  0EFE               	movlw	-2
 32899  001596  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32900  00159C  0EFF               	movlw	-1
 32901  00159E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32902                           
 32903                           ;stkvar	_tolower$7827 @ sp[(-2)+0]
 32904  0015A4  0EFE               	movlw	-2
 32905  0015A6  006F FF8C  F02A    	movff	plusw1,btemp
 32906  0015AC  0EFF               	movlw	-1
 32907  0015AE  50E3               	movf	plusw1,w,c
 32908  0015B0  102A               	iorwf	btemp^0,w,c
 32909  0015B2  B4D8               	btfsc	status,2,c
 32910  0015B4  D00D               	goto	l10213
 32911                           
 32912                           ;stkvar	_c @ sp[(-2)+-2]
 32913  0015B6  0EFC               	movlw	-4
 32914  0015B8  006F FF8C  F02A    	movff	plusw1,btemp
 32915  0015BE  0EFD               	movlw	-3
 32916  0015C0  006F FF8C  F02B    	movff	plusw1,btemp+1
 32917  0015C6  0E20               	movlw	32
 32918  0015C8  122A               	iorwf	btemp^0,f,c
 32919  0015CA  0E00               	movlw	0
 32920  0015CC  122B               	iorwf	(btemp+1)^0,f,c
 32921  0015CE  D008               	goto	l3822
 32922  0015D0                     l10213:
 32923                           
 32924                           ;stkvar	_c @ sp[(-2)+-2]
 32925  0015D0  0EFC               	movlw	-4
 32926  0015D2  006F FF8C  F02A    	movff	plusw1,btemp
 32927  0015D8  0EFD               	movlw	-3
 32928  0015DA  006F FF8C  F02B    	movff	plusw1,btemp+1
 32929  0015E0                     l3822:
 32930                           
 32931                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32932  0015E0  52E5               	movf	postdec1,f,c
 32933  0015E2  52E5               	movf	postdec1,f,c
 32934  0015E4  52E5               	movf	postdec1,f,c
 32935  0015E6  52E5               	movf	postdec1,f,c
 32936  0015E8  0012               	return		;funcret
 32937  0015EA                     __end_of_tolower:
 32938                           	opt callstack 0
 32939                           
 32940 ;; *************** function _isupper *****************
 32941 ;; Defined at:
 32942 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 32943 ;; Parameters:    Size  Location     Type
 32944 ;;  c               2  [STACK] int 
 32945 ;; Auto vars:     Size  Location     Type
 32946 ;;		None
 32947 ;; Return value:  Size  Location     Type
 32948 ;;                  2  [STACK] int 
 32949 ;; Registers used:
 32950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32951 ;; Tracked objects:
 32952 ;;		On entry : 0/0
 32953 ;;		On exit  : 0/0
 32954 ;;		Unchanged: 0/0
 32955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32960 ;;Total ram usage:        0 bytes
 32961 ;; Hardware stack levels used:    1
 32962 ;; Hardware stack levels required when called:   15
 32963 ;; This function calls:
 32964 ;;		Nothing
 32965 ;; This function is called by:
 32966 ;;		_efgtoa
 32967 ;;		_xtoa
 32968 ;;		_vfpfcnvrt
 32969 ;;		_tolower
 32970 ;; This function uses a reentrant model
 32971 ;;
 32972                           
 32973                           	psect	text105
 32974  0026E4                     __ptext105:
 32975                           	opt callstack 0
 32976  0026E4                     _isupper:
 32977                           	opt callstack 0
 32978                           
 32979                           ;stkvar	_c @ sp[(0)+-2]
 32980                           
 32981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32982                           ;incstack = 0
 32983 ;; hardware stack exceeded
 32984  0026E4  0EFE               	movlw	-2
 32985  0026E6  50E3               	movf	plusw1,w,c
 32986  0026E8  0FBF               	addlw	191
 32987  0026EA  6E34               	movwf	(btemp+10)^0,c
 32988  0026EC  0EFF               	movlw	-1
 32989  0026EE  006F FF8C  F035    	movff	plusw1,btemp+11
 32990  0026F4  0EFF               	movlw	255
 32991  0026F6  2235               	addwfc	(btemp+11)^0,f,c
 32992  0026F8  5035               	movf	(btemp+11)^0,w,c
 32993  0026FA  E106               	bnz	u7240
 32994  0026FC  0E1A               	movlw	26
 32995  0026FE  5C34               	subwf	(btemp+10)^0,w,c
 32996  002700  B0D8               	btfsc	status,0,c
 32997  002702  D002               	goto	u7240
 32998  002704  0E01               	movlw	1
 32999  002706  D001               	goto	u7250
 33000  002708                     u7240:
 33001  002708  0E00               	movlw	0
 33002  00270A                     u7250:
 33003  00270A  6E2A               	movwf	btemp^0,c
 33004  00270C  6A2B               	clrf	(btemp+1)^0,c
 33005                           
 33006                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 33007  00270E  52E5               	movf	postdec1,f,c
 33008  002710  52E5               	movf	postdec1,f,c
 33009  002712  0012               	return		;funcret
 33010  002714                     __end_of_isupper:
 33011                           	opt callstack 0
 33012                           
 33013 ;; *************** function _strcpy *****************
 33014 ;; Defined at:
 33015 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 33016 ;; Parameters:    Size  Location     Type
 33017 ;;  dest            2  [STACK] PTR unsigned char 
 33018 ;;		 -> dbuf(80), 
 33019 ;;  src             2  [STACK] PTR const unsigned char 
 33020 ;;		 -> STR_109(4), STR_108(4), STR_105(4), STR_104(4), 
 33021 ;;		 -> dbuf(80), 
 33022 ;; Auto vars:     Size  Location     Type
 33023 ;;  d               2  [STACK] PTR unsigned char 
 33024 ;;		 -> dbuf(80), 
 33025 ;;  s               2  [STACK] PTR const unsigned char 
 33026 ;;		 -> STR_109(4), STR_108(4), STR_105(4), STR_104(4), 
 33027 ;;		 -> dbuf(80), 
 33028 ;; Return value:  Size  Location     Type
 33029 ;;                  2  [STACK] PTR unsigned char 
 33030 ;; Registers used:
 33031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 33032 ;; Tracked objects:
 33033 ;;		On entry : 0/0
 33034 ;;		On exit  : 0/0
 33035 ;;		Unchanged: 0/0
 33036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33041 ;;Total ram usage:        0 bytes
 33042 ;; Hardware stack levels used:    1
 33043 ;; Hardware stack levels required when called:   15
 33044 ;; This function calls:
 33045 ;;		Nothing
 33046 ;; This function is called by:
 33047 ;;		_efgtoa
 33048 ;; This function uses a reentrant model
 33049 ;;
 33050                           
 33051                           	psect	text106
 33052  000646                     __ptext106:
 33053                           	opt callstack 0
 33054  000646                     _strcpy:
 33055                           	opt callstack 0
 33056                           
 33057                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33058  000646  52E6               	movf	postinc1,f,c
 33059  000648  52E6               	movf	postinc1,f,c
 33060  00064A  52E6               	movf	postinc1,f,c
 33061  00064C  52E6               	movf	postinc1,f,c
 33062                           
 33063                           ;stkvar	_src @ sp[(-4)+-4]
 33064                           
 33065                           ;incstack = 0
 33066 ;; hardware stack exceeded
 33067  00064E  0EF8               	movlw	-8
 33068  000650  006F FF8C  F034    	movff	plusw1,btemp+10
 33069  000656  0EF9               	movlw	-7
 33070  000658  006F FF8C  F035    	movff	plusw1,btemp+11
 33071                           
 33072                           ;stkvar	_s @ sp[(-4)+2]
 33073  00065E  0EFF               	movlw	-1
 33074  000660  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33075  000666  0EFE               	movlw	-2
 33076  000668  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33077                           
 33078                           ;stkvar	_dest @ sp[(-4)+-2]
 33079  00066E  0EFA               	movlw	-6
 33080  000670  006F FF8C  F034    	movff	plusw1,btemp+10
 33081  000676  0EFB               	movlw	-5
 33082  000678  006F FF8C  F035    	movff	plusw1,btemp+11
 33083                           
 33084                           ;stkvar	_d @ sp[(-4)+0]
 33085  00067E  0EFD               	movlw	-3
 33086  000680  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33087  000686  0EFC               	movlw	-4
 33088  000688  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33089  00068E                     l15605:
 33090                           
 33091                           ;stkvar	_s @ sp[(-4)+2]
 33092  00068E  50E1               	movf	fsr1l,w,c
 33093  000690  0FFE               	addlw	-2
 33094  000692  6ED9               	movwf	fsr2l,c
 33095  000694  50E2               	movf	fsr1h,w,c
 33096  000696  6EDA               	movwf	fsr2h,c
 33097  000698  0EFF               	movlw	255
 33098  00069A  22DA               	addwfc	fsr2h,f,c
 33099  00069C  006F FF7C  F034    	movff	indf2,btemp+10
 33100  0006A2  0E01               	movlw	1
 33101  0006A4  26DE               	addwf	postinc2,f,c
 33102  0006A6  006F FF7C  F035    	movff	indf2,btemp+11
 33103  0006AC  0E00               	movlw	0
 33104  0006AE  22DD               	addwfc	postdec2,f,c
 33105  0006B0  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 33106  0006B6  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 33107  0006BC  0E00               	movlw	low (__mediumconst shr (0+16))
 33108  0006BE  6EF8               	movwf	tblptru,c
 33109                           
 33110                           ;stkvar	_d @ sp[(-4)+0]
 33111  0006C0  50E1               	movf	fsr1l,w,c
 33112  0006C2  0FFC               	addlw	-4
 33113  0006C4  6ED9               	movwf	fsr2l,c
 33114  0006C6  50E2               	movf	fsr1h,w,c
 33115  0006C8  6EDA               	movwf	fsr2h,c
 33116  0006CA  0EFF               	movlw	255
 33117  0006CC  22DA               	addwfc	fsr2h,f,c
 33118  0006CE  006F FF7C  F034    	movff	indf2,btemp+10
 33119  0006D4  0E01               	movlw	1
 33120  0006D6  26DE               	addwf	postinc2,f,c
 33121  0006D8  006F FF7C  F035    	movff	indf2,btemp+11
 33122  0006DE  0E00               	movlw	0
 33123  0006E0  22DD               	addwfc	postdec2,f,c
 33124  0006E2  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 33125  0006E8  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 33126  0006EE  0E1F               	movlw	(high __ramtop+-1)
 33127  0006F0  64F7               	cpfsgt	tblptrh,c
 33128  0006F2  D003               	bra	u14477
 33129  0006F4  0008               	tblrd		*
 33130  0006F6  50F5               	movf	tablat,w,c
 33131  0006F8  D007               	bra	u14470
 33132  0006FA                     u14477:
 33133  0006FA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 33134  000700  006F FFDF FFEA     	movff	tblptrh,fsr0h
 33135  000706  50EF               	movf	indf0,w,c
 33136  000708                     u14470:
 33137  000708  6EDF               	movwf	indf2,c
 33138  00070A  50DF               	movf	indf2,w,c
 33139  00070C  A4D8               	btfss	status,2,c
 33140  00070E  D7BF               	goto	l15605
 33141                           
 33142                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 33143  000710  0EF8               	movlw	248
 33144  000712  26E1               	addwf	fsr1l,f,c
 33145  000714  0EFF               	movlw	255
 33146  000716  22E2               	addwfc	fsr1h,f,c
 33147  000718  0012               	return		;funcret
 33148  00071A                     __end_of_strcpy:
 33149                           	opt callstack 0
 33150                           
 33151 ;; *************** function _floorf *****************
 33152 ;; Defined at:
 33153 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 33154 ;; Parameters:    Size  Location     Type
 33155 ;;  x               4  [STACK] float 
 33156 ;; Auto vars:     Size  Location     Type
 33157 ;;  u               4  [STACK] struct .
 33158 ;;  m               4  [STACK] unsigned long 
 33159 ;;  e               2  [STACK] int 
 33160 ;; Return value:  Size  Location     Type
 33161 ;;                  4  [STACK] float 
 33162 ;; Registers used:
 33163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33164 ;; Tracked objects:
 33165 ;;		On entry : 0/0
 33166 ;;		On exit  : 0/0
 33167 ;;		Unchanged: 0/0
 33168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33173 ;;Total ram usage:        0 bytes
 33174 ;; Hardware stack levels used:    1
 33175 ;; Hardware stack levels required when called:   15
 33176 ;; This function calls:
 33177 ;;		Nothing
 33178 ;; This function is called by:
 33179 ;;		_efgtoa
 33180 ;; This function uses a reentrant model
 33181 ;;
 33182                           
 33183                           	psect	text107
 33184  01A602                     __ptext107:
 33185                           	opt callstack 0
 33186  01A602                     _floorf:
 33187                           	opt callstack 0
 33188                           
 33189                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 33190  01A602  0E0A               	movlw	10
 33191  01A604  26E1               	addwf	fsr1l,f,c
 33192  01A606  0E00               	movlw	0
 33193  01A608  22E2               	addwfc	fsr1h,f,c
 33194                           
 33195                           ;incstack = 0
 33196 ;; hardware stack exceeded
 33197  01A60A  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 33198  01A610  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 33199  01A616  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 33200  01A61C  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 33201                           
 33202                           ;stkvar	_u @ sp[(-10)+0]
 33203  01A622  0EF6               	movlw	-10
 33204  01A624  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33205  01A62A  0EF7               	movlw	-9
 33206  01A62C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33207  01A632  0EF8               	movlw	-8
 33208  01A634  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33209  01A63A  0EF9               	movlw	-7
 33210  01A63C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33211                           
 33212                           ;stkvar	_x @ sp[(-10)+-4]
 33213  01A642  0EF2               	movlw	-14
 33214  01A644  006F FF8C  F032    	movff	plusw1,btemp+8
 33215  01A64A  0EF3               	movlw	-13
 33216  01A64C  006F FF8C  F033    	movff	plusw1,btemp+9
 33217  01A652  0EF4               	movlw	-12
 33218  01A654  006F FF8C  F034    	movff	plusw1,btemp+10
 33219  01A65A  0EF5               	movlw	-11
 33220  01A65C  006F FF8C  F035    	movff	plusw1,btemp+11
 33221                           
 33222                           ;stkvar	_u @ sp[(-10)+0]
 33223  01A662  0EF6               	movlw	-10
 33224  01A664  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33225  01A66A  0EF7               	movlw	-9
 33226  01A66C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33227  01A672  0EF8               	movlw	-8
 33228  01A674  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33229  01A67A  0EF9               	movlw	-7
 33230  01A67C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33231  01A682  0E81               	movlw	129
 33232  01A684  6E34               	movwf	(btemp+10)^0,c
 33233  01A686  0EFF               	movlw	255
 33234  01A688  6E35               	movwf	(btemp+11)^0,c
 33235                           
 33236                           ;stkvar	_u @ sp[(-10)+0]
 33237  01A68A  0EF6               	movlw	-10
 33238  01A68C  006F FF8C  F02E    	movff	plusw1,btemp+4
 33239  01A692  0EF7               	movlw	-9
 33240  01A694  006F FF8C  F02F    	movff	plusw1,btemp+5
 33241  01A69A  0EF8               	movlw	-8
 33242  01A69C  006F FF8C  F030    	movff	plusw1,btemp+6
 33243  01A6A2  0EF9               	movlw	-7
 33244  01A6A4  006F FF8C  F031    	movff	plusw1,btemp+7
 33245  01A6AA  0E18               	movlw	24
 33246  01A6AC  D005               	goto	u7930
 33247  01A6AE                     u7935:
 33248  01A6AE  90D8               	bcf	status,0,c
 33249  01A6B0  3231               	rrcf	(btemp+7)^0,f,c
 33250  01A6B2  3230               	rrcf	(btemp+6)^0,f,c
 33251  01A6B4  322F               	rrcf	(btemp+5)^0,f,c
 33252  01A6B6  322E               	rrcf	(btemp+4)^0,f,c
 33253  01A6B8                     u7930:
 33254  01A6B8  2EE8               	decfsz	wreg,f,c
 33255  01A6BA  D7F9               	goto	u7935
 33256  01A6BC  0060  F0B8  F032   	movff	btemp+4,btemp+8
 33257  01A6C2  0060  F0BC  F033   	movff	btemp+5,btemp+9
 33258  01A6C8  0EFF               	movlw	255
 33259  01A6CA  1632               	andwf	(btemp+8)^0,f,c
 33260  01A6CC  0E00               	movlw	0
 33261  01A6CE  1633               	andwf	(btemp+9)^0,f,c
 33262  01A6D0  5034               	movf	(btemp+10)^0,w,c
 33263  01A6D2  2632               	addwf	(btemp+8)^0,f,c
 33264  01A6D4  5035               	movf	(btemp+11)^0,w,c
 33265  01A6D6  2233               	addwfc	(btemp+9)^0,f,c
 33266                           
 33267                           ;stkvar	_e @ sp[(-10)+8]
 33268  01A6D8  0EFE               	movlw	-2
 33269  01A6DA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33270  01A6E0  0EFF               	movlw	-1
 33271  01A6E2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33272                           
 33273                           ;stkvar	_e @ sp[(-10)+8]
 33274  01A6E8  0EFF               	movlw	-1
 33275  01A6EA  BEE3               	btfsc	plusw1,7,c
 33276  01A6EC  D019               	goto	l10227
 33277  01A6EE  0EFF               	movlw	-1
 33278  01A6F0  50E3               	movf	plusw1,w,c
 33279  01A6F2  E108               	bnz	u7940
 33280  01A6F4  0EFE               	movlw	-2
 33281  01A6F6  006F FF8C  F02A    	movff	plusw1,btemp
 33282  01A6FC  0E17               	movlw	23
 33283  01A6FE  5E2A               	subwf	btemp^0,f,c
 33284  01A700  A0D8               	btfss	status,0,c
 33285  01A702  D00E               	goto	l10227
 33286  01A704                     u7940:
 33287                           
 33288                           ;stkvar	_x @ sp[(-10)+-4]
 33289  01A704  0EF2               	movlw	-14
 33290  01A706  006F FF8C  F02A    	movff	plusw1,btemp
 33291  01A70C  0EF3               	movlw	-13
 33292  01A70E  006F FF8C  F02B    	movff	plusw1,btemp+1
 33293  01A714  0EF4               	movlw	-12
 33294  01A716  006F FF8C  F02C    	movff	plusw1,btemp+2
 33295  01A71C  0EF5               	movlw	-11
 33296  01A71E  D11F               	goto	L35
 33297  01A720                     l10227:
 33298                           
 33299                           ;stkvar	_e @ sp[(-10)+8]
 33300  01A720  0EFF               	movlw	-1
 33301  01A722  BEE3               	btfsc	plusw1,7,c
 33302  01A724  D0B4               	goto	l10243
 33303                           
 33304                           ;stkvar	_e @ sp[(-10)+8]
 33305  01A726  0EFE               	movlw	-2
 33306  01A728  006F FF8C  F035    	movff	plusw1,btemp+11
 33307  01A72E  0EFF               	movlw	255
 33308  01A730  6E2E               	movwf	(btemp+4)^0,c
 33309  01A732  0EFF               	movlw	255
 33310  01A734  6E2F               	movwf	(btemp+5)^0,c
 33311  01A736  0E7F               	movlw	127
 33312  01A738  6E30               	movwf	(btemp+6)^0,c
 33313  01A73A  0E00               	movlw	0
 33314  01A73C  6E31               	movwf	(btemp+7)^0,c
 33315  01A73E                     u7965:
 33316  01A73E  6635               	tstfsz	(btemp+11)^0,c
 33317  01A740  D001               	goto	u7966
 33318  01A742  D007               	goto	u7967
 33319  01A744                     u7966:
 33320  01A744  3431               	rlcf	(btemp+7)^0,w,c
 33321  01A746  3231               	rrcf	(btemp+7)^0,f,c
 33322  01A748  3230               	rrcf	(btemp+6)^0,f,c
 33323  01A74A  322F               	rrcf	(btemp+5)^0,f,c
 33324  01A74C  322E               	rrcf	(btemp+4)^0,f,c
 33325  01A74E  2E35               	decfsz	(btemp+11)^0,f,c
 33326  01A750  D7F6               	goto	u7965
 33327  01A752                     u7967:
 33328                           
 33329                           ;stkvar	_m @ sp[(-10)+4]
 33330  01A752  0EFA               	movlw	-6
 33331  01A754  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 33332  01A75A  0EFB               	movlw	-5
 33333  01A75C  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 33334  01A762  0EFC               	movlw	-4
 33335  01A764  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33336  01A76A  0EFD               	movlw	-3
 33337  01A76C  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33338                           
 33339                           ;stkvar	_m @ sp[(-10)+4]
 33340                           ;stkvar	_u @ sp[(-10)+0]
 33341  01A772  0EF6               	movlw	-10
 33342  01A774  006F FF8C  F032    	movff	plusw1,btemp+8
 33343  01A77A  0EF7               	movlw	-9
 33344  01A77C  006F FF8C  F033    	movff	plusw1,btemp+9
 33345  01A782  0EF8               	movlw	-8
 33346  01A784  006F FF8C  F034    	movff	plusw1,btemp+10
 33347  01A78A  0EF9               	movlw	-7
 33348  01A78C  006F FF8C  F035    	movff	plusw1,btemp+11
 33349  01A792  0EFA               	movlw	-6
 33350  01A794  50E3               	movf	plusw1,w,c
 33351  01A796  1632               	andwf	(btemp+8)^0,f,c
 33352  01A798  0EFB               	movlw	-5
 33353  01A79A  50E3               	movf	plusw1,w,c
 33354  01A79C  1633               	andwf	(btemp+9)^0,f,c
 33355  01A79E  0EFC               	movlw	-4
 33356  01A7A0  50E3               	movf	plusw1,w,c
 33357  01A7A2  1634               	andwf	(btemp+10)^0,f,c
 33358  01A7A4  0EFD               	movlw	-3
 33359  01A7A6  50E3               	movf	plusw1,w,c
 33360  01A7A8  1635               	andwf	(btemp+11)^0,f,c
 33361  01A7AA  5032               	movf	(btemp+8)^0,w,c
 33362  01A7AC  1033               	iorwf	(btemp+9)^0,w,c
 33363  01A7AE  1034               	iorwf	(btemp+10)^0,w,c
 33364  01A7B0  1035               	iorwf	(btemp+11)^0,w,c
 33365  01A7B2  B4D8               	btfsc	status,2,c
 33366  01A7B4  D7A7               	goto	u7940
 33367                           
 33368                           ;stkvar	_u @ sp[(-10)+0]
 33369  01A7B6  0EF6               	movlw	-10
 33370  01A7B8  006F FF8C  F032    	movff	plusw1,btemp+8
 33371  01A7BE  0EF7               	movlw	-9
 33372  01A7C0  006F FF8C  F033    	movff	plusw1,btemp+9
 33373  01A7C6  0EF8               	movlw	-8
 33374  01A7C8  006F FF8C  F034    	movff	plusw1,btemp+10
 33375  01A7CE  0EF9               	movlw	-7
 33376  01A7D0  006F FF8C  F035    	movff	plusw1,btemp+11
 33377  01A7D6  0E20               	movlw	32
 33378  01A7D8  D005               	goto	u7980
 33379  01A7DA                     u7985:
 33380  01A7DA  90D8               	bcf	status,0,c
 33381  01A7DC  3235               	rrcf	(btemp+11)^0,f,c
 33382  01A7DE  3234               	rrcf	(btemp+10)^0,f,c
 33383  01A7E0  3233               	rrcf	(btemp+9)^0,f,c
 33384  01A7E2  3232               	rrcf	(btemp+8)^0,f,c
 33385  01A7E4                     u7980:
 33386  01A7E4  2EE8               	decfsz	wreg,f,c
 33387  01A7E6  D7F9               	goto	u7985
 33388  01A7E8  5032               	movf	(btemp+8)^0,w,c
 33389  01A7EA  B4D8               	btfsc	status,2,c
 33390  01A7EC  D028               	goto	l10241
 33391                           
 33392                           ;stkvar	_m @ sp[(-10)+4]
 33393                           ;stkvar	_u @ sp[(-10)+0]
 33394  01A7EE  0EF6               	movlw	-10
 33395  01A7F0  50E3               	movf	plusw1,w,c
 33396  01A7F2  6E2A               	movwf	btemp^0,c
 33397  01A7F4  0EFA               	movlw	-6
 33398  01A7F6  50E3               	movf	plusw1,w,c
 33399  01A7F8  262A               	addwf	btemp^0,f,c
 33400  01A7FA  0EF6               	movlw	-10
 33401  01A7FC  0060  F0AB  FFE3   	movff	btemp,plusw1
 33402  01A802  0EF7               	movlw	-9
 33403  01A804  50E3               	movf	plusw1,w,c
 33404  01A806  6E2A               	movwf	btemp^0,c
 33405  01A808  0EFB               	movlw	-5
 33406  01A80A  50E3               	movf	plusw1,w,c
 33407  01A80C  222A               	addwfc	btemp^0,f,c
 33408  01A80E  0EF7               	movlw	-9
 33409  01A810  0060  F0AB  FFE3   	movff	btemp,plusw1
 33410  01A816  0EF8               	movlw	-8
 33411  01A818  50E3               	movf	plusw1,w,c
 33412  01A81A  6E2A               	movwf	btemp^0,c
 33413  01A81C  0EFC               	movlw	-4
 33414  01A81E  50E3               	movf	plusw1,w,c
 33415  01A820  222A               	addwfc	btemp^0,f,c
 33416  01A822  0EF8               	movlw	-8
 33417  01A824  0060  F0AB  FFE3   	movff	btemp,plusw1
 33418  01A82A  0EF9               	movlw	-7
 33419  01A82C  50E3               	movf	plusw1,w,c
 33420  01A82E  6E2A               	movwf	btemp^0,c
 33421  01A830  0EFD               	movlw	-3
 33422  01A832  50E3               	movf	plusw1,w,c
 33423  01A834  222A               	addwfc	btemp^0,f,c
 33424  01A836  0EF9               	movlw	-7
 33425  01A838  0060  F0AB  FFE3   	movff	btemp,plusw1
 33426  01A83E                     l10241:
 33427                           
 33428                           ;stkvar	_m @ sp[(-10)+4]
 33429  01A83E  0EFA               	movlw	-6
 33430  01A840  006F FF8C  F032    	movff	plusw1,btemp+8
 33431  01A846  0EFB               	movlw	-5
 33432  01A848  006F FF8C  F033    	movff	plusw1,btemp+9
 33433  01A84E  0EFC               	movlw	-4
 33434  01A850  006F FF8C  F034    	movff	plusw1,btemp+10
 33435  01A856  0EFD               	movlw	-3
 33436  01A858  006F FF8C  F035    	movff	plusw1,btemp+11
 33437  01A85E  1C32               	comf	(btemp+8)^0,w,c
 33438  01A860  6E2E               	movwf	(btemp+4)^0,c
 33439  01A862  1C33               	comf	(btemp+9)^0,w,c
 33440  01A864  6E2F               	movwf	(btemp+5)^0,c
 33441  01A866  1C34               	comf	(btemp+10)^0,w,c
 33442  01A868  6E30               	movwf	(btemp+6)^0,c
 33443  01A86A  1C35               	comf	(btemp+11)^0,w,c
 33444  01A86C  6E31               	movwf	(btemp+7)^0,c
 33445                           
 33446                           ;stkvar	_u @ sp[(-10)+0]
 33447  01A86E  50E1               	movf	fsr1l,w,c
 33448  01A870  0FF6               	addlw	-10
 33449  01A872  6ED9               	movwf	fsr2l,c
 33450  01A874  50E2               	movf	fsr1h,w,c
 33451  01A876  6EDA               	movwf	fsr2h,c
 33452  01A878  0EFF               	movlw	255
 33453  01A87A  22DA               	addwfc	fsr2h,f,c
 33454  01A87C  502E               	movf	(btemp+4)^0,w,c
 33455  01A87E  16DE               	andwf	postinc2,f,c
 33456  01A880  502F               	movf	(btemp+5)^0,w,c
 33457  01A882  16DE               	andwf	postinc2,f,c
 33458  01A884  5030               	movf	(btemp+6)^0,w,c
 33459  01A886  16DE               	andwf	postinc2,f,c
 33460  01A888  5031               	movf	(btemp+7)^0,w,c
 33461  01A88A  16DE               	andwf	postinc2,f,c
 33462  01A88C  D05B               	goto	l10251
 33463  01A88E                     l10243:
 33464                           
 33465                           ;stkvar	_u @ sp[(-10)+0]
 33466  01A88E  0EF6               	movlw	-10
 33467  01A890  006F FF8C  F032    	movff	plusw1,btemp+8
 33468  01A896  0EF7               	movlw	-9
 33469  01A898  006F FF8C  F033    	movff	plusw1,btemp+9
 33470  01A89E  0EF8               	movlw	-8
 33471  01A8A0  006F FF8C  F034    	movff	plusw1,btemp+10
 33472  01A8A6  0EF9               	movlw	-7
 33473  01A8A8  006F FF8C  F035    	movff	plusw1,btemp+11
 33474  01A8AE  0E20               	movlw	32
 33475  01A8B0  D005               	goto	u8000
 33476  01A8B2                     u8005:
 33477  01A8B2  90D8               	bcf	status,0,c
 33478  01A8B4  3235               	rrcf	(btemp+11)^0,f,c
 33479  01A8B6  3234               	rrcf	(btemp+10)^0,f,c
 33480  01A8B8  3233               	rrcf	(btemp+9)^0,f,c
 33481  01A8BA  3232               	rrcf	(btemp+8)^0,f,c
 33482  01A8BC                     u8000:
 33483  01A8BC  2EE8               	decfsz	wreg,f,c
 33484  01A8BE  D7F9               	goto	u8005
 33485  01A8C0  6632               	tstfsz	(btemp+8)^0,c
 33486  01A8C2  D009               	goto	l10247
 33487                           
 33488                           ;stkvar	_u @ sp[(-10)+0]
 33489  01A8C4  0EF6               	movlw	-10
 33490  01A8C6  6AE3               	clrf	plusw1,c
 33491  01A8C8  0EF7               	movlw	-9
 33492  01A8CA  6AE3               	clrf	plusw1,c
 33493  01A8CC  0EF8               	movlw	-8
 33494  01A8CE  6AE3               	clrf	plusw1,c
 33495  01A8D0  0EF9               	movlw	-7
 33496  01A8D2  6AE3               	clrf	plusw1,c
 33497  01A8D4  D037               	goto	l10251
 33498  01A8D6                     l10247:
 33499                           
 33500                           ;stkvar	_u @ sp[(-10)+0]
 33501  01A8D6  0EF6               	movlw	-10
 33502  01A8D8  006F FF8C  F032    	movff	plusw1,btemp+8
 33503  01A8DE  0EF7               	movlw	-9
 33504  01A8E0  006F FF8C  F033    	movff	plusw1,btemp+9
 33505  01A8E6  0EF8               	movlw	-8
 33506  01A8E8  006F FF8C  F034    	movff	plusw1,btemp+10
 33507  01A8EE  0EF9               	movlw	-7
 33508  01A8F0  006F FF8C  F035    	movff	plusw1,btemp+11
 33509  01A8F6  90D8               	bcf	status,0,c
 33510  01A8F8  3432               	rlcf	(btemp+8)^0,w,c
 33511  01A8FA  6E2E               	movwf	(btemp+4)^0,c
 33512  01A8FC  3433               	rlcf	(btemp+9)^0,w,c
 33513  01A8FE  6E2F               	movwf	(btemp+5)^0,c
 33514  01A900  3434               	rlcf	(btemp+10)^0,w,c
 33515  01A902  6E30               	movwf	(btemp+6)^0,c
 33516  01A904  3435               	rlcf	(btemp+11)^0,w,c
 33517  01A906  6E31               	movwf	(btemp+7)^0,c
 33518  01A908  502E               	movf	(btemp+4)^0,w,c
 33519  01A90A  102F               	iorwf	(btemp+5)^0,w,c
 33520  01A90C  1030               	iorwf	(btemp+6)^0,w,c
 33521  01A90E  1031               	iorwf	(btemp+7)^0,w,c
 33522  01A910  B4D8               	btfsc	status,2,c
 33523  01A912  D018               	goto	l10251
 33524  01A914  0E00               	movlw	0
 33525  01A916  6E32               	movwf	(btemp+8)^0,c
 33526  01A918  0E00               	movlw	0
 33527  01A91A  6E33               	movwf	(btemp+9)^0,c
 33528  01A91C  0E80               	movlw	128
 33529  01A91E  6E34               	movwf	(btemp+10)^0,c
 33530  01A920  0EBF               	movlw	191
 33531  01A922  6E35               	movwf	(btemp+11)^0,c
 33532                           
 33533                           ;stkvar	_u @ sp[(-10)+0]
 33534  01A924  0EF6               	movlw	-10
 33535  01A926  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33536  01A92C  0EF7               	movlw	-9
 33537  01A92E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33538  01A934  0EF8               	movlw	-8
 33539  01A936  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33540  01A93C  0EF9               	movlw	-7
 33541  01A93E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33542  01A944                     l10251:
 33543                           
 33544                           ;stkvar	_u @ sp[(-10)+0]
 33545  01A944  0EF6               	movlw	-10
 33546  01A946  006F FF8C  F02A    	movff	plusw1,btemp
 33547  01A94C  0EF7               	movlw	-9
 33548  01A94E  006F FF8C  F02B    	movff	plusw1,btemp+1
 33549  01A954  0EF8               	movlw	-8
 33550  01A956  006F FF8C  F02C    	movff	plusw1,btemp+2
 33551  01A95C  0EF9               	movlw	-7
 33552  01A95E                     L35:
 33553  01A95E  006F FF8C  F02D    	movff	plusw1,btemp+3
 33554                           
 33555                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33556  01A964  0EF2               	movlw	242
 33557  01A966  26E1               	addwf	fsr1l,f,c
 33558  01A968  0EFF               	movlw	255
 33559  01A96A  22E2               	addwfc	fsr1h,f,c
 33560  01A96C  0012               	return		;funcret
 33561  01A96E                     __end_of_floorf:
 33562                           	opt callstack 0
 33563                           
 33564 ;; *************** function ___fpclassifyf *****************
 33565 ;; Defined at:
 33566 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 33567 ;; Parameters:    Size  Location     Type
 33568 ;;  x               4  [STACK] float 
 33569 ;; Auto vars:     Size  Location     Type
 33570 ;;  u               4  [STACK] struct .
 33571 ;;  e               2  [STACK] int 
 33572 ;; Return value:  Size  Location     Type
 33573 ;;                  2  [STACK] int 
 33574 ;; Registers used:
 33575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 33576 ;; Tracked objects:
 33577 ;;		On entry : 0/0
 33578 ;;		On exit  : 0/0
 33579 ;;		Unchanged: 0/0
 33580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33585 ;;Total ram usage:        0 bytes
 33586 ;; Hardware stack levels used:    1
 33587 ;; Hardware stack levels required when called:   15
 33588 ;; This function calls:
 33589 ;;		Nothing
 33590 ;; This function is called by:
 33591 ;;		_efgtoa
 33592 ;; This function uses a reentrant model
 33593 ;;
 33594                           
 33595                           	psect	text108
 33596  01E09A                     __ptext108:
 33597                           	opt callstack 0
 33598  01E09A                     ___fpclassifyf:
 33599                           	opt callstack 0
 33600                           
 33601                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33602  01E09A  0E06               	movlw	6
 33603  01E09C  26E1               	addwf	fsr1l,f,c
 33604  01E09E  0E00               	movlw	0
 33605  01E0A0  22E2               	addwfc	fsr1h,f,c
 33606                           
 33607                           ;incstack = 0
 33608 ;; hardware stack exceeded
 33609  01E0A2  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 33610  01E0A8  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 33611  01E0AE  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 33612  01E0B4  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 33613                           
 33614                           ;stkvar	_u @ sp[(-6)+0]
 33615  01E0BA  0EFA               	movlw	-6
 33616  01E0BC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33617  01E0C2  0EFB               	movlw	-5
 33618  01E0C4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33619  01E0CA  0EFC               	movlw	-4
 33620  01E0CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33621  01E0D2  0EFD               	movlw	-3
 33622  01E0D4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33623                           
 33624                           ;stkvar	_x @ sp[(-6)+-4]
 33625  01E0DA  0EF6               	movlw	-10
 33626  01E0DC  006F FF8C  F032    	movff	plusw1,btemp+8
 33627  01E0E2  0EF7               	movlw	-9
 33628  01E0E4  006F FF8C  F033    	movff	plusw1,btemp+9
 33629  01E0EA  0EF8               	movlw	-8
 33630  01E0EC  006F FF8C  F034    	movff	plusw1,btemp+10
 33631  01E0F2  0EF9               	movlw	-7
 33632  01E0F4  006F FF8C  F035    	movff	plusw1,btemp+11
 33633                           
 33634                           ;stkvar	_u @ sp[(-6)+0]
 33635  01E0FA  0EFA               	movlw	-6
 33636  01E0FC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33637  01E102  0EFB               	movlw	-5
 33638  01E104  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33639  01E10A  0EFC               	movlw	-4
 33640  01E10C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33641  01E112  0EFD               	movlw	-3
 33642  01E114  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33643                           
 33644                           ;stkvar	_u @ sp[(-6)+0]
 33645  01E11A  0EFA               	movlw	-6
 33646  01E11C  006F FF8C  F032    	movff	plusw1,btemp+8
 33647  01E122  0EFB               	movlw	-5
 33648  01E124  006F FF8C  F033    	movff	plusw1,btemp+9
 33649  01E12A  0EFC               	movlw	-4
 33650  01E12C  006F FF8C  F034    	movff	plusw1,btemp+10
 33651  01E132  0EFD               	movlw	-3
 33652  01E134  006F FF8C  F035    	movff	plusw1,btemp+11
 33653  01E13A  0E18               	movlw	24
 33654  01E13C  D005               	goto	u7810
 33655  01E13E                     u7815:
 33656  01E13E  90D8               	bcf	status,0,c
 33657  01E140  3235               	rrcf	(btemp+11)^0,f,c
 33658  01E142  3234               	rrcf	(btemp+10)^0,f,c
 33659  01E144  3233               	rrcf	(btemp+9)^0,f,c
 33660  01E146  3232               	rrcf	(btemp+8)^0,f,c
 33661  01E148                     u7810:
 33662  01E148  2EE8               	decfsz	wreg,f,c
 33663  01E14A  D7F9               	goto	u7815
 33664  01E14C  0060  F0C8  F030   	movff	btemp+8,btemp+6
 33665  01E152  0060  F0CC  F031   	movff	btemp+9,btemp+7
 33666  01E158  0EFF               	movlw	255
 33667  01E15A  1630               	andwf	(btemp+6)^0,f,c
 33668  01E15C  0E00               	movlw	0
 33669  01E15E  1631               	andwf	(btemp+7)^0,f,c
 33670                           
 33671                           ;stkvar	_e @ sp[(-6)+4]
 33672  01E160  0EFE               	movlw	-2
 33673  01E162  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33674  01E168  0EFF               	movlw	-1
 33675  01E16A  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33676                           
 33677                           ;stkvar	_e @ sp[(-6)+4]
 33678  01E170  0EFE               	movlw	-2
 33679  01E172  006F FF8C  F02A    	movff	plusw1,btemp
 33680  01E178  0EFF               	movlw	-1
 33681  01E17A  50E3               	movf	plusw1,w,c
 33682  01E17C  102A               	iorwf	btemp^0,w,c
 33683  01E17E  A4D8               	btfss	status,2,c
 33684  01E180  D023               	goto	l10189
 33685                           
 33686                           ;stkvar	_u @ sp[(-6)+0]
 33687  01E182  0EFA               	movlw	-6
 33688  01E184  006F FF8C  F032    	movff	plusw1,btemp+8
 33689  01E18A  0EFB               	movlw	-5
 33690  01E18C  006F FF8C  F033    	movff	plusw1,btemp+9
 33691  01E192  0EFC               	movlw	-4
 33692  01E194  006F FF8C  F034    	movff	plusw1,btemp+10
 33693  01E19A  0EFD               	movlw	-3
 33694  01E19C  006F FF8C  F035    	movff	plusw1,btemp+11
 33695  01E1A2  90D8               	bcf	status,0,c
 33696  01E1A4  3432               	rlcf	(btemp+8)^0,w,c
 33697  01E1A6  6E2E               	movwf	(btemp+4)^0,c
 33698  01E1A8  3433               	rlcf	(btemp+9)^0,w,c
 33699  01E1AA  6E2F               	movwf	(btemp+5)^0,c
 33700  01E1AC  3434               	rlcf	(btemp+10)^0,w,c
 33701  01E1AE  6E30               	movwf	(btemp+6)^0,c
 33702  01E1B0  3435               	rlcf	(btemp+11)^0,w,c
 33703  01E1B2  6E31               	movwf	(btemp+7)^0,c
 33704  01E1B4  502E               	movf	(btemp+4)^0,w,c
 33705  01E1B6  102F               	iorwf	(btemp+5)^0,w,c
 33706  01E1B8  1030               	iorwf	(btemp+6)^0,w,c
 33707  01E1BA  1031               	iorwf	(btemp+7)^0,w,c
 33708  01E1BC  A4D8               	btfss	status,2,c
 33709  01E1BE  D002               	goto	l10185
 33710  01E1C0  0E02               	movlw	2
 33711  01E1C2  D02E               	goto	L36
 33712  01E1C4                     l10185:
 33713  01E1C4  0E03               	movlw	3
 33714  01E1C6  D02C               	goto	L36
 33715  01E1C8                     l10189:
 33716                           
 33717                           ;stkvar	_e @ sp[(-6)+4]
 33718  01E1C8  0EFE               	movlw	-2
 33719  01E1CA  28E3               	incf	plusw1,w,c
 33720  01E1CC  E128               	bnz	l10195
 33721  01E1CE  0EFF               	movlw	-1
 33722  01E1D0  50E3               	movf	plusw1,w,c
 33723  01E1D2  A4D8               	btfss	status,2,c
 33724  01E1D4  D024               	goto	l10195
 33725                           
 33726                           ;stkvar	_u @ sp[(-6)+0]
 33727  01E1D6  0EFA               	movlw	-6
 33728  01E1D8  006F FF8C  F032    	movff	plusw1,btemp+8
 33729  01E1DE  0EFB               	movlw	-5
 33730  01E1E0  006F FF8C  F033    	movff	plusw1,btemp+9
 33731  01E1E6  0EFC               	movlw	-4
 33732  01E1E8  006F FF8C  F034    	movff	plusw1,btemp+10
 33733  01E1EE  0EFD               	movlw	-3
 33734  01E1F0  006F FF8C  F035    	movff	plusw1,btemp+11
 33735  01E1F6  0E09               	movlw	9
 33736  01E1F8                     u7855:
 33737  01E1F8  90D8               	bcf	status,0,c
 33738  01E1FA  3632               	rlcf	(btemp+8)^0,f,c
 33739  01E1FC  3633               	rlcf	(btemp+9)^0,f,c
 33740  01E1FE  3634               	rlcf	(btemp+10)^0,f,c
 33741  01E200  3635               	rlcf	(btemp+11)^0,f,c
 33742  01E202  2EE8               	decfsz	wreg,f,c
 33743  01E204  D7F9               	goto	u7855
 33744  01E206  5032               	movf	(btemp+8)^0,w,c
 33745  01E208  1033               	iorwf	(btemp+9)^0,w,c
 33746  01E20A  1034               	iorwf	(btemp+10)^0,w,c
 33747  01E20C  1035               	iorwf	(btemp+11)^0,w,c
 33748  01E20E  A4D8               	btfss	status,2,c
 33749  01E210  D002               	goto	u7860
 33750  01E212  0E01               	movlw	1
 33751  01E214  D001               	goto	u7870
 33752  01E216                     u7860:
 33753  01E216  0E00               	movlw	0
 33754  01E218                     u7870:
 33755  01E218  6E2A               	movwf	btemp^0,c
 33756  01E21A  6A2B               	clrf	(btemp+1)^0,c
 33757  01E21C  D004               	goto	l3402
 33758  01E21E                     l10195:
 33759  01E21E  0E04               	movlw	4
 33760  01E220                     L36:
 33761  01E220  6E2A               	movwf	btemp^0,c
 33762  01E222  0E00               	movlw	0
 33763  01E224  6E2B               	movwf	(btemp+1)^0,c
 33764  01E226                     l3402:
 33765                           
 33766                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 33767  01E226  0EF6               	movlw	246
 33768  01E228  26E1               	addwf	fsr1l,f,c
 33769  01E22A  0EFF               	movlw	255
 33770  01E22C  22E2               	addwfc	fsr1h,f,c
 33771  01E22E  0012               	return		;funcret
 33772  01E230                     __end_of___fpclassifyf:
 33773                           	opt callstack 0
 33774                           
 33775 ;; *************** function ___fltol *****************
 33776 ;; Defined at:
 33777 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 33778 ;; Parameters:    Size  Location     Type
 33779 ;;  f1              4  [STACK] int 
 33780 ;; Auto vars:     Size  Location     Type
 33781 ;;  exp1            1  [STACK] unsigned char 
 33782 ;;  sign1           1  [STACK] unsigned char 
 33783 ;; Return value:  Size  Location     Type
 33784 ;;                  4  [STACK] long 
 33785 ;; Registers used:
 33786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 33787 ;; Tracked objects:
 33788 ;;		On entry : 0/0
 33789 ;;		On exit  : 0/0
 33790 ;;		Unchanged: 0/0
 33791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33796 ;;Total ram usage:        0 bytes
 33797 ;; Hardware stack levels used:    1
 33798 ;; Hardware stack levels required when called:   15
 33799 ;; This function calls:
 33800 ;;		Nothing
 33801 ;; This function is called by:
 33802 ;;		_main
 33803 ;;		_convert_dac_raw
 33804 ;;		_load_hist_data
 33805 ;;		_calc_bsoc
 33806 ;;		_init_bsoc
 33807 ;;		_efgtoa
 33808 ;; This function uses a reentrant model
 33809 ;;
 33810                           
 33811                           	psect	text109
 33812  01E9CA                     __ptext109:
 33813                           	opt callstack 0
 33814  01E9CA                     ___fltol:
 33815                           	opt callstack 0
 33816                           
 33817                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33818  01E9CA  52E6               	movf	postinc1,f,c
 33819  01E9CC  52E6               	movf	postinc1,f,c
 33820                           
 33821                           ;stkvar	_f1 @ sp[(-2)+-4]
 33822                           
 33823                           ;incstack = 0
 33824 ;; hardware stack exceeded
 33825  01E9CE  0EFA               	movlw	-6
 33826  01E9D0  006F FF8C  F032    	movff	plusw1,btemp+8
 33827  01E9D6  0EFB               	movlw	-5
 33828  01E9D8  006F FF8C  F033    	movff	plusw1,btemp+9
 33829  01E9DE  0EFC               	movlw	-4
 33830  01E9E0  006F FF8C  F034    	movff	plusw1,btemp+10
 33831  01E9E6  0EFD               	movlw	-3
 33832  01E9E8  006F FF8C  F035    	movff	plusw1,btemp+11
 33833  01E9EE  0E18               	movlw	24
 33834  01E9F0  D005               	goto	u9080
 33835  01E9F2                     u9085:
 33836  01E9F2  90D8               	bcf	status,0,c
 33837  01E9F4  3235               	rrcf	(btemp+11)^0,f,c
 33838  01E9F6  3234               	rrcf	(btemp+10)^0,f,c
 33839  01E9F8  3233               	rrcf	(btemp+9)^0,f,c
 33840  01E9FA  3232               	rrcf	(btemp+8)^0,f,c
 33841  01E9FC                     u9080:
 33842  01E9FC  2EE8               	decfsz	wreg,f,c
 33843  01E9FE  D7F9               	goto	u9085
 33844                           
 33845                           ;stkvar	_exp1 @ sp[(-2)+0]
 33846  01EA00  0EFE               	movlw	-2
 33847  01EA02  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33848  01EA08  0EFE               	movlw	-2
 33849  01EA0A  50E3               	movf	plusw1,w,c
 33850  01EA0C  A4D8               	btfss	status,2,c
 33851  01EA0E  D006               	goto	l10841
 33852  01EA10                     u9090:
 33853  01EA10  0E00               	movlw	0
 33854  01EA12  6E2A               	movwf	btemp^0,c
 33855  01EA14  6A2B               	clrf	(btemp+1)^0,c
 33856  01EA16  6A2C               	clrf	(btemp+2)^0,c
 33857  01EA18  6A2D               	clrf	(btemp+3)^0,c
 33858  01EA1A  D08B               	goto	l3018
 33859  01EA1C                     l10841:
 33860                           
 33861                           ;stkvar	_f1 @ sp[(-2)+-4]
 33862  01EA1C  0EFA               	movlw	-6
 33863  01EA1E  006F FF8C  F032    	movff	plusw1,btemp+8
 33864  01EA24  0EFB               	movlw	-5
 33865  01EA26  006F FF8C  F033    	movff	plusw1,btemp+9
 33866  01EA2C  0EFC               	movlw	-4
 33867  01EA2E  006F FF8C  F034    	movff	plusw1,btemp+10
 33868  01EA34  0EFD               	movlw	-3
 33869  01EA36  006F FF8C  F035    	movff	plusw1,btemp+11
 33870  01EA3C  0E20               	movlw	32
 33871  01EA3E  D005               	goto	u9100
 33872  01EA40                     u9105:
 33873  01EA40  90D8               	bcf	status,0,c
 33874  01EA42  3235               	rrcf	(btemp+11)^0,f,c
 33875  01EA44  3234               	rrcf	(btemp+10)^0,f,c
 33876  01EA46  3233               	rrcf	(btemp+9)^0,f,c
 33877  01EA48  3232               	rrcf	(btemp+8)^0,f,c
 33878  01EA4A                     u9100:
 33879  01EA4A  2EE8               	decfsz	wreg,f,c
 33880  01EA4C  D7F9               	goto	u9105
 33881                           
 33882                           ;stkvar	_sign1 @ sp[(-2)+1]
 33883  01EA4E  0EFF               	movlw	-1
 33884  01EA50  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33885                           
 33886                           ;stkvar	_f1 @ sp[(-2)+-4]
 33887  01EA56  0EFC               	movlw	-4
 33888  01EA58  8EE3               	bsf	plusw1,7,c
 33889                           
 33890                           ;stkvar	_f1 @ sp[(-2)+-4]
 33891  01EA5A  50E1               	movf	fsr1l,w,c
 33892  01EA5C  0FFA               	addlw	-6
 33893  01EA5E  6ED9               	movwf	fsr2l,c
 33894  01EA60  50E2               	movf	fsr1h,w,c
 33895  01EA62  6EDA               	movwf	fsr2h,c
 33896  01EA64  0EFF               	movlw	255
 33897  01EA66  22DA               	addwfc	fsr2h,f,c
 33898  01EA68  0EFF               	movlw	255
 33899  01EA6A  16DE               	andwf	postinc2,f,c
 33900  01EA6C  0EFF               	movlw	255
 33901  01EA6E  16DE               	andwf	postinc2,f,c
 33902  01EA70  0EFF               	movlw	255
 33903  01EA72  16DE               	andwf	postinc2,f,c
 33904  01EA74  0E00               	movlw	0
 33905  01EA76  16DE               	andwf	postinc2,f,c
 33906                           
 33907                           ;stkvar	_exp1 @ sp[(-2)+0]
 33908  01EA78  0EFE               	movlw	-2
 33909  01EA7A  006F FF8C  F02A    	movff	plusw1,btemp
 33910  01EA80  0E96               	movlw	150
 33911  01EA82  5E2A               	subwf	btemp^0,f,c
 33912  01EA84  0EFE               	movlw	-2
 33913  01EA86  0060  F0AB  FFE3   	movff	btemp,plusw1
 33914                           
 33915                           ;stkvar	_exp1 @ sp[(-2)+0]
 33916  01EA8C  0EFE               	movlw	-2
 33917  01EA8E  AEE3               	btfss	plusw1,7,c
 33918  01EA90  D014               	goto	l10859
 33919                           
 33920                           ;stkvar	_exp1 @ sp[(-2)+0]
 33921  01EA92  0EFE               	movlw	-2
 33922  01EA94  50E3               	movf	plusw1,w,c
 33923  01EA96  0A80               	xorlw	128
 33924  01EA98  0F97               	addlw	151
 33925  01EA9A  A0D8               	btfss	status,0,c
 33926  01EA9C  D7B9               	goto	u9090
 33927  01EA9E                     l10857:
 33928                           
 33929                           ;stkvar	_f1 @ sp[(-2)+-4]
 33930  01EA9E  90D8               	bcf	status,0,c
 33931  01EAA0  0EFD               	movlw	-3
 33932  01EAA2  32E3               	rrcf	plusw1,f,c
 33933  01EAA4  0EFC               	movlw	-4
 33934  01EAA6  32E3               	rrcf	plusw1,f,c
 33935  01EAA8  0EFB               	movlw	-5
 33936  01EAAA  32E3               	rrcf	plusw1,f,c
 33937  01EAAC  0EFA               	movlw	-6
 33938  01EAAE  32E3               	rrcf	plusw1,f,c
 33939                           
 33940                           ;stkvar	_exp1 @ sp[(-2)+0]
 33941  01EAB0  0EFE               	movlw	-2
 33942  01EAB2  2AE3               	incf	plusw1,f,c
 33943  01EAB4  B4D8               	btfsc	status,2,c
 33944  01EAB6  D018               	goto	u9150
 33945  01EAB8  D7F2               	goto	l10857
 33946  01EABA                     l10859:
 33947                           
 33948                           ;stkvar	_exp1 @ sp[(-2)+0]
 33949  01EABA  0EFE               	movlw	-2
 33950  01EABC  006F FF8C  F02A    	movff	plusw1,btemp
 33951  01EAC2  0E1F               	movlw	31
 33952  01EAC4  642A               	cpfsgt	btemp^0,c
 33953  01EAC6  D00C               	goto	l10867
 33954  01EAC8  D7A3               	goto	u9090
 33955  01EACA                     l10865:
 33956                           
 33957                           ;stkvar	_f1 @ sp[(-2)+-4]
 33958  01EACA  90D8               	bcf	status,0,c
 33959  01EACC  0EFA               	movlw	-6
 33960  01EACE  36E3               	rlcf	plusw1,f,c
 33961  01EAD0  0EFB               	movlw	-5
 33962  01EAD2  36E3               	rlcf	plusw1,f,c
 33963  01EAD4  0EFC               	movlw	-4
 33964  01EAD6  36E3               	rlcf	plusw1,f,c
 33965  01EAD8  0EFD               	movlw	-3
 33966  01EADA  36E3               	rlcf	plusw1,f,c
 33967                           
 33968                           ;stkvar	_exp1 @ sp[(-2)+0]
 33969  01EADC  0EFE               	movlw	-2
 33970  01EADE  06E3               	decf	plusw1,f,c
 33971  01EAE0                     l10867:
 33972                           
 33973                           ;stkvar	_exp1 @ sp[(-2)+0]
 33974  01EAE0  0EFE               	movlw	-2
 33975  01EAE2  50E3               	movf	plusw1,w,c
 33976  01EAE4  A4D8               	btfss	status,2,c
 33977  01EAE6  D7F1               	goto	l10865
 33978  01EAE8                     u9150:
 33979                           
 33980                           ;stkvar	_sign1 @ sp[(-2)+1]
 33981  01EAE8  0EFF               	movlw	-1
 33982  01EAEA  50E3               	movf	plusw1,w,c
 33983  01EAEC  B4D8               	btfsc	status,2,c
 33984  01EAEE  D011               	goto	u9170
 33985                           
 33986                           ;stkvar	_f1 @ sp[(-2)+-4]
 33987                           ;stkvar	_f1 @ sp[(-2)+-4]
 33988  01EAF0  0EFA               	movlw	-6
 33989  01EAF2  6CE3               	negf	plusw1,c
 33990  01EAF4  0EFB               	movlw	-5
 33991  01EAF6  1EE3               	comf	plusw1,f,c
 33992  01EAF8  0EFC               	movlw	-4
 33993  01EAFA  1EE3               	comf	plusw1,f,c
 33994  01EAFC  0EFD               	movlw	-3
 33995  01EAFE  1EE3               	comf	plusw1,f,c
 33996  01EB00  E308               	bnc	u9170
 33997  01EB02  0EFB               	movlw	-5
 33998  01EB04  2AE3               	incf	plusw1,f,c
 33999  01EB06  E305               	bnc	u9170
 34000  01EB08  0EFC               	movlw	-4
 34001  01EB0A  2AE3               	incf	plusw1,f,c
 34002  01EB0C  E302               	bnc	u9170
 34003  01EB0E  0EFD               	movlw	-3
 34004  01EB10  2AE3               	incf	plusw1,f,c
 34005  01EB12                     u9170:
 34006                           
 34007                           ;stkvar	_f1 @ sp[(-2)+-4]
 34008  01EB12  0EFA               	movlw	-6
 34009  01EB14  006F FF8C  F02A    	movff	plusw1,btemp
 34010  01EB1A  0EFB               	movlw	-5
 34011  01EB1C  006F FF8C  F02B    	movff	plusw1,btemp+1
 34012  01EB22  0EFC               	movlw	-4
 34013  01EB24  006F FF8C  F02C    	movff	plusw1,btemp+2
 34014  01EB2A  0EFD               	movlw	-3
 34015  01EB2C  006F FF8C  F02D    	movff	plusw1,btemp+3
 34016  01EB32                     l3018:
 34017                           
 34018                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34019  01EB32  0EFA               	movlw	250
 34020  01EB34  26E1               	addwf	fsr1l,f,c
 34021  01EB36  0EFF               	movlw	255
 34022  01EB38  22E2               	addwfc	fsr1h,f,c
 34023  01EB3A  0012               	return		;funcret
 34024  01EB3C                     __end_of___fltol:
 34025                           	opt callstack 0
 34026                           
 34027 ;; *************** function ___flneg *****************
 34028 ;; Defined at:
 34029 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 34030 ;; Parameters:    Size  Location     Type
 34031 ;;  f1              4  [STACK] long 
 34032 ;; Auto vars:     Size  Location     Type
 34033 ;;		None
 34034 ;; Return value:  Size  Location     Type
 34035 ;;                  4  [STACK] long 
 34036 ;; Registers used:
 34037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 34038 ;; Tracked objects:
 34039 ;;		On entry : 0/0
 34040 ;;		On exit  : 0/0
 34041 ;;		Unchanged: 0/0
 34042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34047 ;;Total ram usage:        0 bytes
 34048 ;; Hardware stack levels used:    1
 34049 ;; Hardware stack levels required when called:   15
 34050 ;; This function calls:
 34051 ;;		Nothing
 34052 ;; This function is called by:
 34053 ;;		_calc_bsoc
 34054 ;;		_efgtoa
 34055 ;; This function uses a reentrant model
 34056 ;;
 34057                           
 34058                           	psect	text110
 34059  00206E                     __ptext110:
 34060                           	opt callstack 0
 34061  00206E                     ___flneg:
 34062                           	opt callstack 0
 34063                           
 34064                           ;stkvar	_f1 @ sp[(0)+-4]
 34065                           
 34066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34067                           ;incstack = 0
 34068 ;; hardware stack exceeded
 34069  00206E  0EFC               	movlw	-4
 34070  002070  50E3               	movf	plusw1,w,c
 34071  002072  E10A               	bnz	u9070
 34072  002074  0EFD               	movlw	-3
 34073  002076  50E3               	movf	plusw1,w,c
 34074  002078  E107               	bnz	u9070
 34075  00207A  0EFE               	movlw	-2
 34076  00207C  50E3               	movf	plusw1,w,c
 34077  00207E  E104               	bnz	u9070
 34078  002080  0EFF               	movlw	-1
 34079  002082  50E3               	movf	plusw1,w,c
 34080  002084  B4D8               	btfsc	status,2,c
 34081  002086  D002               	goto	l10831
 34082  002088                     u9070:
 34083                           
 34084                           ;stkvar	_f1 @ sp[(0)+-4]
 34085  002088  0EFF               	movlw	-1
 34086  00208A  7EE3               	btg	plusw1,7,c
 34087  00208C                     l10831:
 34088                           
 34089                           ;stkvar	_f1 @ sp[(0)+-4]
 34090  00208C  0EFC               	movlw	-4
 34091  00208E  006F FF8C  F02A    	movff	plusw1,btemp
 34092  002094  0EFD               	movlw	-3
 34093  002096  006F FF8C  F02B    	movff	plusw1,btemp+1
 34094  00209C  0EFE               	movlw	-2
 34095  00209E  006F FF8C  F02C    	movff	plusw1,btemp+2
 34096  0020A4  0EFF               	movlw	-1
 34097  0020A6  006F FF8C  F02D    	movff	plusw1,btemp+3
 34098                           
 34099                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34100  0020AC  52E5               	movf	postdec1,f,c
 34101  0020AE  52E5               	movf	postdec1,f,c
 34102  0020B0  52E5               	movf	postdec1,f,c
 34103  0020B2  52E5               	movf	postdec1,f,c
 34104  0020B4  0012               	return		;funcret
 34105  0020B6                     __end_of___flneg:
 34106                           	opt callstack 0
 34107                           
 34108 ;; *************** function ___fleq *****************
 34109 ;; Defined at:
 34110 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 34111 ;; Parameters:    Size  Location     Type
 34112 ;;  ff1             4  [STACK] long 
 34113 ;;  ff2             4  [STACK] long 
 34114 ;; Auto vars:     Size  Location     Type
 34115 ;;		None
 34116 ;; Return value:  Size  Location     Type
 34117 ;;		None               void
 34118 ;; Registers used:
 34119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 34120 ;; Tracked objects:
 34121 ;;		On entry : 0/0
 34122 ;;		On exit  : 0/0
 34123 ;;		Unchanged: 0/0
 34124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34129 ;;Total ram usage:        0 bytes
 34130 ;; Hardware stack levels used:    1
 34131 ;; Hardware stack levels required when called:   15
 34132 ;; This function calls:
 34133 ;;		Nothing
 34134 ;; This function is called by:
 34135 ;;		_efgtoa
 34136 ;; This function uses a reentrant model
 34137 ;;
 34138                           
 34139                           	psect	text111
 34140  0007E8                     __ptext111:
 34141                           	opt callstack 0
 34142  0007E8                     ___fleq:
 34143                           	opt callstack 0
 34144                           
 34145                           ;stkvar	_ff1 @ sp[(0)+-4]
 34146                           
 34147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34148                           ;incstack = 0
 34149 ;; hardware stack exceeded
 34150  0007E8  50E1               	movf	fsr1l,w,c
 34151  0007EA  0FFC               	addlw	-4
 34152  0007EC  6ED9               	movwf	fsr2l,c
 34153  0007EE  50E2               	movf	fsr1h,w,c
 34154  0007F0  6EDA               	movwf	fsr2h,c
 34155  0007F2  0EFF               	movlw	255
 34156  0007F4  22DA               	addwfc	fsr2h,f,c
 34157  0007F6  0E00               	movlw	0
 34158  0007F8  14DE               	andwf	postinc2,w,c
 34159  0007FA  6E32               	movwf	(btemp+8)^0,c
 34160  0007FC  0E00               	movlw	0
 34161  0007FE  14DE               	andwf	postinc2,w,c
 34162  000800  6E33               	movwf	(btemp+9)^0,c
 34163  000802  0E80               	movlw	128
 34164  000804  14DE               	andwf	postinc2,w,c
 34165  000806  6E34               	movwf	(btemp+10)^0,c
 34166  000808  0E7F               	movlw	127
 34167  00080A  14DE               	andwf	postinc2,w,c
 34168  00080C  6E35               	movwf	(btemp+11)^0,c
 34169  00080E  5032               	movf	(btemp+8)^0,w,c
 34170  000810  1033               	iorwf	(btemp+9)^0,w,c
 34171  000812  1034               	iorwf	(btemp+10)^0,w,c
 34172  000814  1035               	iorwf	(btemp+11)^0,w,c
 34173  000816  A4D8               	btfss	status,2,c
 34174  000818  D008               	goto	l10789
 34175                           
 34176                           ;stkvar	_ff1 @ sp[(0)+-4]
 34177  00081A  0EFC               	movlw	-4
 34178  00081C  6AE3               	clrf	plusw1,c
 34179  00081E  0EFD               	movlw	-3
 34180  000820  6AE3               	clrf	plusw1,c
 34181  000822  0EFE               	movlw	-2
 34182  000824  6AE3               	clrf	plusw1,c
 34183  000826  0EFF               	movlw	-1
 34184  000828  6AE3               	clrf	plusw1,c
 34185  00082A                     l10789:
 34186                           
 34187                           ;stkvar	_ff2 @ sp[(0)+-8]
 34188  00082A  50E1               	movf	fsr1l,w,c
 34189  00082C  0FF8               	addlw	-8
 34190  00082E  6ED9               	movwf	fsr2l,c
 34191  000830  50E2               	movf	fsr1h,w,c
 34192  000832  6EDA               	movwf	fsr2h,c
 34193  000834  0EFF               	movlw	255
 34194  000836  22DA               	addwfc	fsr2h,f,c
 34195  000838  0E00               	movlw	0
 34196  00083A  14DE               	andwf	postinc2,w,c
 34197  00083C  6E32               	movwf	(btemp+8)^0,c
 34198  00083E  0E00               	movlw	0
 34199  000840  14DE               	andwf	postinc2,w,c
 34200  000842  6E33               	movwf	(btemp+9)^0,c
 34201  000844  0E80               	movlw	128
 34202  000846  14DE               	andwf	postinc2,w,c
 34203  000848  6E34               	movwf	(btemp+10)^0,c
 34204  00084A  0E7F               	movlw	127
 34205  00084C  14DE               	andwf	postinc2,w,c
 34206  00084E  6E35               	movwf	(btemp+11)^0,c
 34207  000850  5032               	movf	(btemp+8)^0,w,c
 34208  000852  1033               	iorwf	(btemp+9)^0,w,c
 34209  000854  1034               	iorwf	(btemp+10)^0,w,c
 34210  000856  1035               	iorwf	(btemp+11)^0,w,c
 34211  000858  A4D8               	btfss	status,2,c
 34212  00085A  D008               	goto	l10793
 34213                           
 34214                           ;stkvar	_ff2 @ sp[(0)+-8]
 34215  00085C  0EF8               	movlw	-8
 34216  00085E  6AE3               	clrf	plusw1,c
 34217  000860  0EF9               	movlw	-7
 34218  000862  6AE3               	clrf	plusw1,c
 34219  000864  0EFA               	movlw	-6
 34220  000866  6AE3               	clrf	plusw1,c
 34221  000868  0EFB               	movlw	-5
 34222  00086A  6AE3               	clrf	plusw1,c
 34223  00086C                     l10793:
 34224                           
 34225                           ;stkvar	_ff2 @ sp[(0)+-8]
 34226                           ;stkvar	_ff1 @ sp[(0)+-4]
 34227  00086C  50E1               	movf	fsr1l,w,c
 34228  00086E  0FFC               	addlw	-4
 34229  000870  6ED9               	movwf	fsr2l,c
 34230  000872  50E2               	movf	fsr1h,w,c
 34231  000874  6EDA               	movwf	fsr2h,c
 34232  000876  0EFF               	movlw	255
 34233  000878  22DA               	addwfc	fsr2h,f,c
 34234  00087A  0EF8               	movlw	-8
 34235  00087C  50E3               	movf	plusw1,w,c
 34236  00087E  18DE               	xorwf	postinc2,w,c
 34237  000880  E10D               	bnz	u9010
 34238  000882  0EF9               	movlw	-7
 34239  000884  50E3               	movf	plusw1,w,c
 34240  000886  18DE               	xorwf	postinc2,w,c
 34241  000888  E109               	bnz	u9010
 34242  00088A  0EFA               	movlw	-6
 34243  00088C  50E3               	movf	plusw1,w,c
 34244  00088E  18DE               	xorwf	postinc2,w,c
 34245  000890  E105               	bnz	u9010
 34246  000892  0EFB               	movlw	-5
 34247  000894  50E3               	movf	plusw1,w,c
 34248  000896  18DE               	xorwf	postinc2,w,c
 34249  000898  B4D8               	btfsc	status,2,c
 34250  00089A  D002               	goto	l10797
 34251  00089C                     u9010:
 34252  00089C  902A               	bcf	btemp& (0+255),0,c
 34253  00089E  D001               	goto	l2980
 34254  0008A0                     l10797:
 34255  0008A0  802A               	bsf	btemp& (0+255),0,c
 34256  0008A2                     l2980:
 34257                           
 34258                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 34259  0008A2  0EF8               	movlw	248
 34260  0008A4  26E1               	addwf	fsr1l,f,c
 34261  0008A6  0EFF               	movlw	255
 34262  0008A8  22E2               	addwfc	fsr1h,f,c
 34263  0008AA  0012               	return		;funcret
 34264  0008AC                     __end_of___fleq:
 34265                           	opt callstack 0
 34266                           
 34267 ;; *************** function ___awmod *****************
 34268 ;; Defined at:
 34269 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 34270 ;; Parameters:    Size  Location     Type
 34271 ;;  dividend        2  [STACK] int 
 34272 ;;  divisor         2  [STACK] int 
 34273 ;; Auto vars:     Size  Location     Type
 34274 ;;  sign            1  [STACK] unsigned char 
 34275 ;;  counter         1  [STACK] unsigned char 
 34276 ;; Return value:  Size  Location     Type
 34277 ;;                  2  [STACK] int 
 34278 ;; Registers used:
 34279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34280 ;; Tracked objects:
 34281 ;;		On entry : 0/3
 34282 ;;		On exit  : 0/0
 34283 ;;		Unchanged: 0/0
 34284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34289 ;;Total ram usage:        0 bytes
 34290 ;; Hardware stack levels used:    1
 34291 ;; Hardware stack levels required when called:   15
 34292 ;; This function calls:
 34293 ;;		Nothing
 34294 ;; This function is called by:
 34295 ;;		_efgtoa
 34296 ;;		_asctime
 34297 ;; This function uses a reentrant model
 34298 ;;
 34299                           
 34300                           	psect	text112
 34301  01FBD6                     __ptext112:
 34302                           	opt callstack 0
 34303  01FBD6                     ___awmod:
 34304                           	opt callstack 0
 34305                           
 34306                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34307  01FBD6  52E6               	movf	postinc1,f,c
 34308  01FBD8  52E6               	movf	postinc1,f,c
 34309                           
 34310                           ;stkvar	_sign @ sp[(-2)+0]
 34311                           
 34312                           ;incstack = 0
 34313 ;; hardware stack exceeded
 34314  01FBDA  0EFE               	movlw	-2
 34315  01FBDC  6AE3               	clrf	plusw1,c
 34316                           
 34317                           ;stkvar	_dividend @ sp[(-2)+-2]
 34318  01FBDE  0EFD               	movlw	-3
 34319  01FBE0  AEE3               	btfss	plusw1,7,c
 34320  01FBE2  D009               	goto	l10755
 34321                           
 34322                           ;stkvar	_dividend @ sp[(-2)+-2]
 34323                           ;stkvar	_dividend @ sp[(-2)+-2]
 34324  01FBE4  0EFC               	movlw	-4
 34325  01FBE6  6CE3               	negf	plusw1,c
 34326  01FBE8  0EFD               	movlw	-3
 34327  01FBEA  1EE3               	comf	plusw1,f,c
 34328  01FBEC  B0D8               	btfsc	status,0,c
 34329  01FBEE  2AE3               	incf	plusw1,f,c
 34330                           
 34331                           ;stkvar	_sign @ sp[(-2)+0]
 34332  01FBF0  0EFE               	movlw	-2
 34333  01FBF2  6AE3               	clrf	plusw1,c
 34334  01FBF4  2AE3               	incf	plusw1,f,c
 34335  01FBF6                     l10755:
 34336                           
 34337                           ;stkvar	_divisor @ sp[(-2)+-4]
 34338  01FBF6  0EFB               	movlw	-5
 34339  01FBF8  AEE3               	btfss	plusw1,7,c
 34340  01FBFA  D006               	goto	l10759
 34341                           
 34342                           ;stkvar	_divisor @ sp[(-2)+-4]
 34343                           ;stkvar	_divisor @ sp[(-2)+-4]
 34344  01FBFC  0EFA               	movlw	-6
 34345  01FBFE  6CE3               	negf	plusw1,c
 34346  01FC00  0EFB               	movlw	-5
 34347  01FC02  1EE3               	comf	plusw1,f,c
 34348  01FC04  B0D8               	btfsc	status,0,c
 34349  01FC06  2AE3               	incf	plusw1,f,c
 34350  01FC08                     l10759:
 34351                           
 34352                           ;stkvar	_divisor @ sp[(-2)+-4]
 34353  01FC08  0EFA               	movlw	-6
 34354  01FC0A  006F FF8C  F02A    	movff	plusw1,btemp
 34355  01FC10  0EFB               	movlw	-5
 34356  01FC12  50E3               	movf	plusw1,w,c
 34357  01FC14  102A               	iorwf	btemp^0,w,c
 34358  01FC16  B4D8               	btfsc	status,2,c
 34359  01FC18  D053               	goto	u8970
 34360                           
 34361                           ;stkvar	_counter @ sp[(-2)+1]
 34362  01FC1A  0EFF               	movlw	-1
 34363  01FC1C  6AE3               	clrf	plusw1,c
 34364  01FC1E  D012               	goto	L37
 34365  01FC20                     l10763:
 34366                           
 34367                           ;stkvar	_divisor @ sp[(-2)+-4]
 34368  01FC20  0EFA               	movlw	-6
 34369  01FC22  50E3               	movf	plusw1,w,c
 34370  01FC24  90D8               	bcf	status,0,c
 34371  01FC26  34E8               	rlcf	wreg,w,c
 34372  01FC28  6E2A               	movwf	btemp^0,c
 34373  01FC2A  0EFA               	movlw	-6
 34374  01FC2C  0060  F0AB  FFE3   	movff	btemp,plusw1
 34375  01FC32  0EFB               	movlw	-5
 34376  01FC34  50E3               	movf	plusw1,w,c
 34377  01FC36  34E8               	rlcf	wreg,w,c
 34378  01FC38  6E2A               	movwf	btemp^0,c
 34379  01FC3A  0EFB               	movlw	-5
 34380  01FC3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 34381                           
 34382                           ;stkvar	_counter @ sp[(-2)+1]
 34383  01FC42  0EFF               	movlw	-1
 34384  01FC44                     L37:
 34385  01FC44  2AE3               	incf	plusw1,f,c
 34386                           
 34387                           ;stkvar	_divisor @ sp[(-2)+-4]
 34388  01FC46  0EFB               	movlw	-5
 34389  01FC48  AEE3               	btfss	plusw1,7,c
 34390  01FC4A  D7EA               	goto	l10763
 34391  01FC4C                     u8950:
 34392                           
 34393                           ;stkvar	_divisor @ sp[(-2)+-4]
 34394  01FC4C  0EFA               	movlw	-6
 34395  01FC4E  006F FF8C  F034    	movff	plusw1,btemp+10
 34396  01FC54  0EFB               	movlw	-5
 34397  01FC56  006F FF8C  F035    	movff	plusw1,btemp+11
 34398                           
 34399                           ;stkvar	_dividend @ sp[(-2)+-2]
 34400  01FC5C  0EFC               	movlw	-4
 34401  01FC5E  006F FF8C  F032    	movff	plusw1,btemp+8
 34402  01FC64  0EFD               	movlw	-3
 34403  01FC66  006F FF8C  F033    	movff	plusw1,btemp+9
 34404  01FC6C  5034               	movf	(btemp+10)^0,w,c
 34405  01FC6E  5C32               	subwf	(btemp+8)^0,w,c
 34406  01FC70  5035               	movf	(btemp+11)^0,w,c
 34407  01FC72  5833               	subwfb	(btemp+9)^0,w,c
 34408  01FC74  A0D8               	btfss	status,0,c
 34409  01FC76  D014               	goto	l10773
 34410                           
 34411                           ;stkvar	_divisor @ sp[(-2)+-4]
 34412                           ;stkvar	_dividend @ sp[(-2)+-2]
 34413  01FC78  0EFC               	movlw	-4
 34414  01FC7A  50E3               	movf	plusw1,w,c
 34415  01FC7C  6E2A               	movwf	btemp^0,c
 34416  01FC7E  0EFA               	movlw	-6
 34417  01FC80  50E3               	movf	plusw1,w,c
 34418  01FC82  5E2A               	subwf	btemp^0,f,c
 34419  01FC84  0EFC               	movlw	-4
 34420  01FC86  0060  F0AB  FFE3   	movff	btemp,plusw1
 34421  01FC8C  0EFD               	movlw	-3
 34422  01FC8E  50E3               	movf	plusw1,w,c
 34423  01FC90  6E2A               	movwf	btemp^0,c
 34424  01FC92  0EFB               	movlw	-5
 34425  01FC94  50E3               	movf	plusw1,w,c
 34426  01FC96  5A2A               	subwfb	btemp^0,f,c
 34427  01FC98  0EFD               	movlw	-3
 34428  01FC9A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34429  01FCA0                     l10773:
 34430                           
 34431                           ;stkvar	_divisor @ sp[(-2)+-4]
 34432  01FCA0  90D8               	bcf	status,0,c
 34433  01FCA2  0EFB               	movlw	-5
 34434  01FCA4  32E3               	rrcf	plusw1,f,c
 34435  01FCA6  0EFA               	movlw	-6
 34436  01FCA8  32E3               	rrcf	plusw1,f,c
 34437                           
 34438                           ;stkvar	_counter @ sp[(-2)+1]
 34439  01FCAA  0EFF               	movlw	-1
 34440  01FCAC  50E3               	movf	plusw1,w,c
 34441  01FCAE  6E2A               	movwf	btemp^0,c
 34442  01FCB0  0E01               	movlw	1
 34443  01FCB2  5E2A               	subwf	btemp^0,f,c
 34444  01FCB4  0EFF               	movlw	-1
 34445  01FCB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34446  01FCBC  A4D8               	btfss	status,2,c
 34447  01FCBE  D7C6               	goto	u8950
 34448  01FCC0                     u8970:
 34449                           
 34450                           ;stkvar	_sign @ sp[(-2)+0]
 34451  01FCC0  0EFE               	movlw	-2
 34452  01FCC2  50E3               	movf	plusw1,w,c
 34453  01FCC4  B4D8               	btfsc	status,2,c
 34454  01FCC6  D006               	goto	l10781
 34455                           
 34456                           ;stkvar	_dividend @ sp[(-2)+-2]
 34457                           ;stkvar	_dividend @ sp[(-2)+-2]
 34458  01FCC8  0EFC               	movlw	-4
 34459  01FCCA  6CE3               	negf	plusw1,c
 34460  01FCCC  0EFD               	movlw	-3
 34461  01FCCE  1EE3               	comf	plusw1,f,c
 34462  01FCD0  B0D8               	btfsc	status,0,c
 34463  01FCD2  2AE3               	incf	plusw1,f,c
 34464  01FCD4                     l10781:
 34465                           
 34466                           ;stkvar	_dividend @ sp[(-2)+-2]
 34467  01FCD4  0EFC               	movlw	-4
 34468  01FCD6  006F FF8C  F02A    	movff	plusw1,btemp
 34469  01FCDC  0EFD               	movlw	-3
 34470  01FCDE  006F FF8C  F02B    	movff	plusw1,btemp+1
 34471                           
 34472                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34473  01FCE4  0EFA               	movlw	250
 34474  01FCE6  26E1               	addwf	fsr1l,f,c
 34475  01FCE8  0EFF               	movlw	255
 34476  01FCEA  22E2               	addwfc	fsr1h,f,c
 34477  01FCEC  0012               	return		;funcret
 34478  01FCEE                     __end_of___awmod:
 34479                           	opt callstack 0
 34480                           
 34481 ;; *************** function ___awdiv *****************
 34482 ;; Defined at:
 34483 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 34484 ;; Parameters:    Size  Location     Type
 34485 ;;  dividend        2  [STACK] int 
 34486 ;;  divisor         2  [STACK] int 
 34487 ;; Auto vars:     Size  Location     Type
 34488 ;;  quotient        2  [STACK] int 
 34489 ;;  sign            1  [STACK] unsigned char 
 34490 ;;  counter         1  [STACK] unsigned char 
 34491 ;; Return value:  Size  Location     Type
 34492 ;;                  2  [STACK] int 
 34493 ;; Registers used:
 34494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34495 ;; Tracked objects:
 34496 ;;		On entry : 0/3
 34497 ;;		On exit  : 0/0
 34498 ;;		Unchanged: 0/0
 34499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34504 ;;Total ram usage:        0 bytes
 34505 ;; Hardware stack levels used:    1
 34506 ;; Hardware stack levels required when called:   15
 34507 ;; This function calls:
 34508 ;;		Nothing
 34509 ;; This function is called by:
 34510 ;;		_efgtoa
 34511 ;;		_put2d
 34512 ;;		_asctime
 34513 ;;		_scan_trans
 34514 ;; This function uses a reentrant model
 34515 ;;
 34516                           
 34517                           	psect	text113
 34518  01F378                     __ptext113:
 34519                           	opt callstack 0
 34520  01F378                     ___awdiv:
 34521                           	opt callstack 0
 34522                           
 34523                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34524  01F378  52E6               	movf	postinc1,f,c
 34525  01F37A  52E6               	movf	postinc1,f,c
 34526  01F37C  52E6               	movf	postinc1,f,c
 34527  01F37E  52E6               	movf	postinc1,f,c
 34528                           
 34529                           ;stkvar	_sign @ sp[(-4)+2]
 34530                           
 34531                           ;incstack = 0
 34532 ;; hardware stack exceeded
 34533  01F380  0EFE               	movlw	-2
 34534  01F382  6AE3               	clrf	plusw1,c
 34535                           
 34536                           ;stkvar	_divisor @ sp[(-4)+-4]
 34537  01F384  0EF9               	movlw	-7
 34538  01F386  AEE3               	btfss	plusw1,7,c
 34539  01F388  D009               	goto	l15721
 34540                           
 34541                           ;stkvar	_divisor @ sp[(-4)+-4]
 34542                           ;stkvar	_divisor @ sp[(-4)+-4]
 34543  01F38A  0EF8               	movlw	-8
 34544  01F38C  6CE3               	negf	plusw1,c
 34545  01F38E  0EF9               	movlw	-7
 34546  01F390  1EE3               	comf	plusw1,f,c
 34547  01F392  B0D8               	btfsc	status,0,c
 34548  01F394  2AE3               	incf	plusw1,f,c
 34549                           
 34550                           ;stkvar	_sign @ sp[(-4)+2]
 34551  01F396  0EFE               	movlw	-2
 34552  01F398  6AE3               	clrf	plusw1,c
 34553  01F39A  2AE3               	incf	plusw1,f,c
 34554  01F39C                     l15721:
 34555                           
 34556                           ;stkvar	_dividend @ sp[(-4)+-2]
 34557  01F39C  0EFB               	movlw	-5
 34558  01F39E  AEE3               	btfss	plusw1,7,c
 34559  01F3A0  D008               	goto	l15727
 34560                           
 34561                           ;stkvar	_dividend @ sp[(-4)+-2]
 34562                           ;stkvar	_dividend @ sp[(-4)+-2]
 34563  01F3A2  0EFA               	movlw	-6
 34564  01F3A4  6CE3               	negf	plusw1,c
 34565  01F3A6  0EFB               	movlw	-5
 34566  01F3A8  1EE3               	comf	plusw1,f,c
 34567  01F3AA  B0D8               	btfsc	status,0,c
 34568  01F3AC  2AE3               	incf	plusw1,f,c
 34569                           
 34570                           ;stkvar	_sign @ sp[(-4)+2]
 34571  01F3AE  0EFE               	movlw	-2
 34572  01F3B0  70E3               	btg	plusw1,0,c
 34573  01F3B2                     l15727:
 34574                           
 34575                           ;stkvar	_quotient @ sp[(-4)+0]
 34576  01F3B2  0EFC               	movlw	-4
 34577  01F3B4  6AE3               	clrf	plusw1,c
 34578  01F3B6  0EFD               	movlw	-3
 34579  01F3B8  6AE3               	clrf	plusw1,c
 34580                           
 34581                           ;stkvar	_divisor @ sp[(-4)+-4]
 34582  01F3BA  0EF8               	movlw	-8
 34583  01F3BC  006F FF8C  F02A    	movff	plusw1,btemp
 34584  01F3C2  0EF9               	movlw	-7
 34585  01F3C4  50E3               	movf	plusw1,w,c
 34586  01F3C6  102A               	iorwf	btemp^0,w,c
 34587  01F3C8  B4D8               	btfsc	status,2,c
 34588  01F3CA  D066               	goto	u14830
 34589                           
 34590                           ;stkvar	_counter @ sp[(-4)+3]
 34591  01F3CC  0EFF               	movlw	-1
 34592  01F3CE  6AE3               	clrf	plusw1,c
 34593  01F3D0  D012               	goto	L38
 34594  01F3D2                     l15733:
 34595                           
 34596                           ;stkvar	_divisor @ sp[(-4)+-4]
 34597  01F3D2  0EF8               	movlw	-8
 34598  01F3D4  50E3               	movf	plusw1,w,c
 34599  01F3D6  90D8               	bcf	status,0,c
 34600  01F3D8  34E8               	rlcf	wreg,w,c
 34601  01F3DA  6E2A               	movwf	btemp^0,c
 34602  01F3DC  0EF8               	movlw	-8
 34603  01F3DE  0060  F0AB  FFE3   	movff	btemp,plusw1
 34604  01F3E4  0EF9               	movlw	-7
 34605  01F3E6  50E3               	movf	plusw1,w,c
 34606  01F3E8  34E8               	rlcf	wreg,w,c
 34607  01F3EA  6E2A               	movwf	btemp^0,c
 34608  01F3EC  0EF9               	movlw	-7
 34609  01F3EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 34610                           
 34611                           ;stkvar	_counter @ sp[(-4)+3]
 34612  01F3F4  0EFF               	movlw	-1
 34613  01F3F6                     L38:
 34614  01F3F6  2AE3               	incf	plusw1,f,c
 34615                           
 34616                           ;stkvar	_divisor @ sp[(-4)+-4]
 34617  01F3F8  0EF9               	movlw	-7
 34618  01F3FA  AEE3               	btfss	plusw1,7,c
 34619  01F3FC  D7EA               	goto	l15733
 34620  01F3FE                     u14810:
 34621                           
 34622                           ;stkvar	_quotient @ sp[(-4)+0]
 34623  01F3FE  0EFC               	movlw	-4
 34624  01F400  50E3               	movf	plusw1,w,c
 34625  01F402  90D8               	bcf	status,0,c
 34626  01F404  34E8               	rlcf	wreg,w,c
 34627  01F406  6E2A               	movwf	btemp^0,c
 34628  01F408  0EFC               	movlw	-4
 34629  01F40A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34630  01F410  0EFD               	movlw	-3
 34631  01F412  50E3               	movf	plusw1,w,c
 34632  01F414  34E8               	rlcf	wreg,w,c
 34633  01F416  6E2A               	movwf	btemp^0,c
 34634  01F418  0EFD               	movlw	-3
 34635  01F41A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34636                           
 34637                           ;stkvar	_divisor @ sp[(-4)+-4]
 34638  01F420  0EF8               	movlw	-8
 34639  01F422  006F FF8C  F034    	movff	plusw1,btemp+10
 34640  01F428  0EF9               	movlw	-7
 34641  01F42A  006F FF8C  F035    	movff	plusw1,btemp+11
 34642                           
 34643                           ;stkvar	_dividend @ sp[(-4)+-2]
 34644  01F430  0EFA               	movlw	-6
 34645  01F432  006F FF8C  F032    	movff	plusw1,btemp+8
 34646  01F438  0EFB               	movlw	-5
 34647  01F43A  006F FF8C  F033    	movff	plusw1,btemp+9
 34648  01F440  5034               	movf	(btemp+10)^0,w,c
 34649  01F442  5C32               	subwf	(btemp+8)^0,w,c
 34650  01F444  5035               	movf	(btemp+11)^0,w,c
 34651  01F446  5833               	subwfb	(btemp+9)^0,w,c
 34652  01F448  A0D8               	btfss	status,0,c
 34653  01F44A  D016               	goto	l15747
 34654                           
 34655                           ;stkvar	_divisor @ sp[(-4)+-4]
 34656                           ;stkvar	_dividend @ sp[(-4)+-2]
 34657  01F44C  0EFA               	movlw	-6
 34658  01F44E  50E3               	movf	plusw1,w,c
 34659  01F450  6E2A               	movwf	btemp^0,c
 34660  01F452  0EF8               	movlw	-8
 34661  01F454  50E3               	movf	plusw1,w,c
 34662  01F456  5E2A               	subwf	btemp^0,f,c
 34663  01F458  0EFA               	movlw	-6
 34664  01F45A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34665  01F460  0EFB               	movlw	-5
 34666  01F462  50E3               	movf	plusw1,w,c
 34667  01F464  6E2A               	movwf	btemp^0,c
 34668  01F466  0EF9               	movlw	-7
 34669  01F468  50E3               	movf	plusw1,w,c
 34670  01F46A  5A2A               	subwfb	btemp^0,f,c
 34671  01F46C  0EFB               	movlw	-5
 34672  01F46E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34673                           
 34674                           ;stkvar	_quotient @ sp[(-4)+0]
 34675  01F474  0EFC               	movlw	-4
 34676  01F476  80E3               	bsf	plusw1,0,c
 34677  01F478                     l15747:
 34678                           
 34679                           ;stkvar	_divisor @ sp[(-4)+-4]
 34680  01F478  90D8               	bcf	status,0,c
 34681  01F47A  0EF9               	movlw	-7
 34682  01F47C  32E3               	rrcf	plusw1,f,c
 34683  01F47E  0EF8               	movlw	-8
 34684  01F480  32E3               	rrcf	plusw1,f,c
 34685                           
 34686                           ;stkvar	_counter @ sp[(-4)+3]
 34687  01F482  0EFF               	movlw	-1
 34688  01F484  50E3               	movf	plusw1,w,c
 34689  01F486  6E2A               	movwf	btemp^0,c
 34690  01F488  0E01               	movlw	1
 34691  01F48A  5E2A               	subwf	btemp^0,f,c
 34692  01F48C  0EFF               	movlw	-1
 34693  01F48E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34694  01F494  A4D8               	btfss	status,2,c
 34695  01F496  D7B3               	goto	u14810
 34696  01F498                     u14830:
 34697                           
 34698                           ;stkvar	_sign @ sp[(-4)+2]
 34699  01F498  0EFE               	movlw	-2
 34700  01F49A  50E3               	movf	plusw1,w,c
 34701  01F49C  B4D8               	btfsc	status,2,c
 34702  01F49E  D006               	goto	l15755
 34703                           
 34704                           ;stkvar	_quotient @ sp[(-4)+0]
 34705                           ;stkvar	_quotient @ sp[(-4)+0]
 34706  01F4A0  0EFC               	movlw	-4
 34707  01F4A2  6CE3               	negf	plusw1,c
 34708  01F4A4  0EFD               	movlw	-3
 34709  01F4A6  1EE3               	comf	plusw1,f,c
 34710  01F4A8  B0D8               	btfsc	status,0,c
 34711  01F4AA  2AE3               	incf	plusw1,f,c
 34712  01F4AC                     l15755:
 34713                           
 34714                           ;stkvar	_quotient @ sp[(-4)+0]
 34715  01F4AC  0EFC               	movlw	-4
 34716  01F4AE  006F FF8C  F02A    	movff	plusw1,btemp
 34717  01F4B4  0EFD               	movlw	-3
 34718  01F4B6  006F FF8C  F02B    	movff	plusw1,btemp+1
 34719                           
 34720                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34721  01F4BC  0EF8               	movlw	248
 34722  01F4BE  26E1               	addwf	fsr1l,f,c
 34723  01F4C0  0EFF               	movlw	255
 34724  01F4C2  22E2               	addwfc	fsr1h,f,c
 34725  01F4C4  0012               	return		;funcret
 34726  01F4C6                     __end_of___awdiv:
 34727                           	opt callstack 0
 34728                           
 34729 ;; *************** function _dtoa *****************
 34730 ;; Defined at:
 34731 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34732 ;; Parameters:    Size  Location     Type
 34733 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34734 ;;		 -> f(6), NULL(0), 
 34735 ;;  d               8  [STACK] long long 
 34736 ;; Auto vars:     Size  Location     Type
 34737 ;;  n               8  [STACK] long long 
 34738 ;;  i               2  [STACK] int 
 34739 ;;  s               2  [STACK] int 
 34740 ;;  w               2  [STACK] int 
 34741 ;;  p               2  [STACK] int 
 34742 ;; Return value:  Size  Location     Type
 34743 ;;                  2  [STACK] int 
 34744 ;; Registers used:
 34745 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 34746 ;; Tracked objects:
 34747 ;;		On entry : 0/0
 34748 ;;		On exit  : 0/0
 34749 ;;		Unchanged: 0/0
 34750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34755 ;;Total ram usage:        0 bytes
 34756 ;; Hardware stack levels used:    1
 34757 ;; Hardware stack levels required when called:   20
 34758 ;; This function calls:
 34759 ;;		___aodiv
 34760 ;;		___aomod
 34761 ;;		_abs
 34762 ;;		_pad
 34763 ;; This function is called by:
 34764 ;;		_vfpfcnvrt
 34765 ;; This function uses a reentrant model
 34766 ;;
 34767                           
 34768                           	psect	text114
 34769  0195FA                     __ptext114:
 34770                           	opt callstack 0
 34771  0195FA                     _dtoa:
 34772                           	opt callstack 0
 34773                           
 34774                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 34775  0195FA  0E12               	movlw	18
 34776  0195FC  26E1               	addwf	fsr1l,f,c
 34777  0195FE  0E00               	movlw	0
 34778  019600  22E2               	addwfc	fsr1h,f,c
 34779                           
 34780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 34781                           ;stkvar	_d @ sp[(-18)+-10]
 34782                           
 34783                           ;incstack = 0
 34784 ;; hardware stack exceeded
 34785  019602  0EE4               	movlw	228
 34786  019604  24E1               	addwf	fsr1l,w,c
 34787  019606  6ED9               	movwf	fsr2l,c
 34788  019608  0EFF               	movlw	255
 34789  01960A  20E2               	addwfc	fsr1h,w,c
 34790  01960C  6EDA               	movwf	fsr2h,c
 34791                           
 34792                           ;stkvar	_n @ sp[(-18)+2]
 34793  01960E  0E08               	movlw	8
 34794  019610  6E2A               	movwf	btemp^0,c
 34795  019612  0EF0               	movlw	-16
 34796  019614                     us1492999:
 34797  019614  006F FF7B FFE3     	movff	postinc2,plusw1
 34798  01961A  28E8               	incf	wreg,w,c
 34799  01961C  2E2A               	decfsz	btemp^0,f,c
 34800  01961E  D7FA               	bra	us1492999
 34801                           
 34802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 34803                           ;stkvar	_n @ sp[(-18)+2]
 34804  019620  0EF7               	movlw	-9
 34805  019622  AEE3               	btfss	plusw1,7,c
 34806  019624  D002               	goto	u14930
 34807  019626  0E01               	movlw	1
 34808  019628  D001               	goto	u14940
 34809  01962A                     u14930:
 34810  01962A  0E00               	movlw	0
 34811  01962C                     u14940:
 34812  01962C  6E34               	movwf	(btemp+10)^0,c
 34813  01962E  6A35               	clrf	(btemp+11)^0,c
 34814                           
 34815                           ;stkvar	_s @ sp[(-18)+12]
 34816  019630  0EFA               	movlw	-6
 34817  019632  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34818  019638  0EFB               	movlw	-5
 34819  01963A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34820                           
 34821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 34822                           ;stkvar	_s @ sp[(-18)+12]
 34823  019640  0EFA               	movlw	-6
 34824  019642  006F FF8C  F02A    	movff	plusw1,btemp
 34825  019648  0EFB               	movlw	-5
 34826  01964A  50E3               	movf	plusw1,w,c
 34827  01964C  102A               	iorwf	btemp^0,w,c
 34828  01964E  B4D8               	btfsc	status,2,c
 34829  019650  D025               	goto	u14960
 34830                           
 34831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 34832                           ;stkvar	_n @ sp[(-18)+2]
 34833                           ;stkvar	_n @ sp[(-18)+2]
 34834  019652  0EF0               	movlw	-16
 34835  019654  6CE3               	negf	plusw1,c
 34836  019656  0EF1               	movlw	-15
 34837  019658  1EE3               	comf	plusw1,f,c
 34838  01965A  0EF2               	movlw	-14
 34839  01965C  1EE3               	comf	plusw1,f,c
 34840  01965E  0EF3               	movlw	-13
 34841  019660  1EE3               	comf	plusw1,f,c
 34842  019662  0EF4               	movlw	-12
 34843  019664  1EE3               	comf	plusw1,f,c
 34844  019666  0EF5               	movlw	-11
 34845  019668  1EE3               	comf	plusw1,f,c
 34846  01966A  0EF6               	movlw	-10
 34847  01966C  1EE3               	comf	plusw1,f,c
 34848  01966E  0EF7               	movlw	-9
 34849  019670  1EE3               	comf	plusw1,f,c
 34850  019672  E314               	bnc	u14960
 34851  019674  0EF1               	movlw	-15
 34852  019676  2AE3               	incf	plusw1,f,c
 34853  019678  E311               	bnc	u14960
 34854  01967A  0EF2               	movlw	-14
 34855  01967C  2AE3               	incf	plusw1,f,c
 34856  01967E  E30E               	bnc	u14960
 34857  019680  0EF3               	movlw	-13
 34858  019682  2AE3               	incf	plusw1,f,c
 34859  019684  E30B               	bnc	u14960
 34860  019686  0EF4               	movlw	-12
 34861  019688  2AE3               	incf	plusw1,f,c
 34862  01968A  E308               	bnc	u14960
 34863  01968C  0EF5               	movlw	-11
 34864  01968E  2AE3               	incf	plusw1,f,c
 34865  019690  E305               	bnc	u14960
 34866  019692  0EF6               	movlw	-10
 34867  019694  2AE3               	incf	plusw1,f,c
 34868  019696  E302               	bnc	u14960
 34869  019698  0EF7               	movlw	-9
 34870  01969A  2AE3               	incf	plusw1,f,c
 34871  01969C                     u14960:
 34872                           
 34873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 34874  01969C  AE4D               	btfss	(_prec+1)^0,7,c
 34875                           
 34876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 34877  01969E  924E               	bcf	_flags^0,1,c
 34878                           
 34879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 34880  0196A0  BE4D               	btfsc	(_prec+1)^0,7,c
 34881  0196A2  D005               	goto	u14980
 34882  0196A4  504D               	movf	(_prec+1)^0,w,c
 34883  0196A6  E110               	bnz	l15829
 34884  0196A8  044C               	decf	_prec^0,w,c
 34885  0196AA  B0D8               	btfsc	status,0,c
 34886  0196AC  D00D               	goto	l15829
 34887  0196AE                     u14980:
 34888  0196AE  0E01               	movlw	1
 34889  0196B0  6E34               	movwf	(btemp+10)^0,c
 34890  0196B2  0E00               	movlw	0
 34891  0196B4  6E35               	movwf	(btemp+11)^0,c
 34892                           
 34893                           ;stkvar	_p @ sp[(-18)+16]
 34894  0196B6  0EFE               	movlw	-2
 34895  0196B8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34896  0196BE  0EFF               	movlw	-1
 34897  0196C0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34898  0196C6  D008               	goto	l2484
 34899  0196C8                     l15829:
 34900                           
 34901                           ;stkvar	_p @ sp[(-18)+16]
 34902  0196C8  0EFE               	movlw	-2
 34903  0196CA  0060  F133  FFE3   	movff	_prec,plusw1
 34904  0196D0  0EFF               	movlw	-1
 34905  0196D2  0060  F137  FFE3   	movff	_prec+1,plusw1
 34906  0196D8                     l2484:
 34907                           
 34908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 34909                           ;stkvar	_w @ sp[(-18)+14]
 34910  0196D8  0EFC               	movlw	-4
 34911  0196DA  0060  F12B  FFE3   	movff	_width,plusw1
 34912  0196E0  0EFD               	movlw	-3
 34913  0196E2  0060  F12F  FFE3   	movff	_width+1,plusw1
 34914                           
 34915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 34916                           ;stkvar	_s @ sp[(-18)+12]
 34917  0196E8  0EFA               	movlw	-6
 34918  0196EA  006F FF8C  F02A    	movff	plusw1,btemp
 34919  0196F0  0EFB               	movlw	-5
 34920  0196F2  50E3               	movf	plusw1,w,c
 34921  0196F4  102A               	iorwf	btemp^0,w,c
 34922  0196F6  A4D8               	btfss	status,2,c
 34923  0196F8  D002               	goto	u15000
 34924  0196FA  A44E               	btfss	_flags^0,2,c
 34925  0196FC  D00A               	goto	l15837
 34926  0196FE                     u15000:
 34927                           
 34928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 34929                           ;stkvar	_w @ sp[(-18)+14]
 34930  0196FE  50E1               	movf	fsr1l,w,c
 34931  019700  0FFC               	addlw	-4
 34932  019702  6ED9               	movwf	fsr2l,c
 34933  019704  50E2               	movf	fsr1h,w,c
 34934  019706  6EDA               	movwf	fsr2h,c
 34935  019708  0EFF               	movlw	255
 34936  01970A  22DA               	addwfc	fsr2h,f,c
 34937  01970C  06DE               	decf	postinc2,f,c
 34938  01970E  0E00               	movlw	0
 34939  019710  5ADD               	subwfb	postdec2,f,c
 34940  019712                     l15837:
 34941                           
 34942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 34943  019712  0E4F               	movlw	79
 34944  019714  6E34               	movwf	(btemp+10)^0,c
 34945  019716  0E00               	movlw	0
 34946  019718  6E35               	movwf	(btemp+11)^0,c
 34947                           
 34948                           ;stkvar	_i @ sp[(-18)+10]
 34949  01971A  0EF8               	movlw	-8
 34950  01971C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34951  019722  0EF9               	movlw	-7
 34952  019724  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34953                           
 34954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 34955  01972A  0103               	movlb	3	; () banked
 34956  01972C  6BA3               	clrf	(_dbuf+79)& (0+255),b
 34957                           
 34958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34959  01972E  D109               	goto	l15851
 34960  019730                     l15841:
 34961                           
 34962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 34963                           ;stkvar	_i @ sp[(-18)+10]
 34964  019730  50E1               	movf	fsr1l,w,c
 34965  019732  0FF8               	addlw	-8
 34966  019734  6ED9               	movwf	fsr2l,c
 34967  019736  50E2               	movf	fsr1h,w,c
 34968  019738  6EDA               	movwf	fsr2h,c
 34969  01973A  0EFF               	movlw	255
 34970  01973C  22DA               	addwfc	fsr2h,f,c
 34971  01973E  06DE               	decf	postinc2,f,c
 34972  019740  0E00               	movlw	0
 34973  019742  5ADD               	subwfb	postdec2,f,c
 34974                           
 34975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 34976  019744  0E0A               	movlw	10
 34977  019746  6EE6               	movwf	postinc1,c
 34978  019748  0E00               	movlw	0
 34979  01974A  6EE6               	movwf	postinc1,c
 34980  01974C  0E00               	movlw	0
 34981  01974E  6EE6               	movwf	postinc1,c
 34982  019750  0E00               	movlw	0
 34983  019752  6EE6               	movwf	postinc1,c
 34984  019754  0E00               	movlw	0
 34985  019756  6EE6               	movwf	postinc1,c
 34986  019758  0E00               	movlw	0
 34987  01975A  6EE6               	movwf	postinc1,c
 34988  01975C  0E00               	movlw	0
 34989  01975E  6EE6               	movwf	postinc1,c
 34990  019760  0E00               	movlw	0
 34991  019762  6EE6               	movwf	postinc1,c
 34992                           
 34993                           ;stkvar	_n @ sp[(-26)+2]
 34994  019764  50E1               	movf	fsr1l,w,c
 34995  019766  0FE8               	addlw	-24
 34996  019768  6ED9               	movwf	fsr2l,c
 34997  01976A  50E2               	movf	fsr1h,w,c
 34998  01976C  6EDA               	movwf	fsr2h,c
 34999  01976E  0EFF               	movlw	255
 35000  019770  22DA               	addwfc	fsr2h,f,c
 35001  019772  006F FF7B FFE6     	movff	postinc2,postinc1
 35002  019778  006F FF7B FFE6     	movff	postinc2,postinc1
 35003  01977E  006F FF7B FFE6     	movff	postinc2,postinc1
 35004  019784  006F FF7B FFE6     	movff	postinc2,postinc1
 35005  01978A  006F FF7B FFE6     	movff	postinc2,postinc1
 35006  019790  006F FF7B FFE6     	movff	postinc2,postinc1
 35007  019796  006F FF7B FFE6     	movff	postinc2,postinc1
 35008  01979C  006F FF7B FFE6     	movff	postinc2,postinc1
 35009  0197A2  EC6A  F0E6         	call	___aomod	;wreg free
 35010  0197A6  52E5               	movf	postdec1,f,c
 35011  0197A8  006F FF9C  F041    	movff	indf1,btemp+23
 35012  0197AE  52E5               	movf	postdec1,f,c
 35013  0197B0  006F FF9C  F040    	movff	indf1,btemp+22
 35014  0197B6  52E5               	movf	postdec1,f,c
 35015  0197B8  006F FF9C  F03F    	movff	indf1,btemp+21
 35016  0197BE  52E5               	movf	postdec1,f,c
 35017  0197C0  006F FF9C  F03E    	movff	indf1,btemp+20
 35018  0197C6  52E5               	movf	postdec1,f,c
 35019  0197C8  006F FF9C  F03D    	movff	indf1,btemp+19
 35020  0197CE  52E5               	movf	postdec1,f,c
 35021  0197D0  006F FF9C  F03C    	movff	indf1,btemp+18
 35022  0197D6  52E5               	movf	postdec1,f,c
 35023  0197D8  006F FF9C  F03B    	movff	indf1,btemp+17
 35024  0197DE  52E5               	movf	postdec1,f,c
 35025  0197E0  006F FF9C  F03A    	movff	indf1,btemp+16
 35026  0197E6  0EF8               	movlw	248
 35027  0197E8  26E1               	addwf	fsr1l,f,c
 35028  0197EA  0EFF               	movlw	255
 35029  0197EC  22E2               	addwfc	fsr1h,f,c
 35030  0197EE  0060  F0E8  F034   	movff	btemp+16,btemp+10
 35031  0197F4  0060  F0EC  F035   	movff	btemp+17,btemp+11
 35032  0197FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35033  019800  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35034  019806  ECEA  F010         	call	_abs	;wreg free
 35035  01980A  0E30               	movlw	48
 35036  01980C  262A               	addwf	btemp^0,f,c
 35037                           
 35038                           ;stkvar	_i @ sp[(-18)+10]
 35039  01980E  0EF8               	movlw	-8
 35040  019810  006F FF8C  F034    	movff	plusw1,btemp+10
 35041  019816  0EF9               	movlw	-7
 35042  019818  006F FF8C  F035    	movff	plusw1,btemp+11
 35043  01981E  0E54               	movlw	low _dbuf
 35044  019820  2434               	addwf	(btemp+10)^0,w,c
 35045  019822  6ED9               	movwf	fsr2l,c
 35046  019824  0E03               	movlw	high _dbuf
 35047  019826  2035               	addwfc	(btemp+11)^0,w,c
 35048  019828  6EDA               	movwf	fsr2h,c
 35049  01982A  0060  F0AB  FFDF   	movff	btemp,indf2
 35050                           
 35051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 35052                           ;stkvar	_p @ sp[(-18)+16]
 35053  019830  50E1               	movf	fsr1l,w,c
 35054  019832  0FFE               	addlw	-2
 35055  019834  6ED9               	movwf	fsr2l,c
 35056  019836  50E2               	movf	fsr1h,w,c
 35057  019838  6EDA               	movwf	fsr2h,c
 35058  01983A  0EFF               	movlw	255
 35059  01983C  22DA               	addwfc	fsr2h,f,c
 35060  01983E  06DE               	decf	postinc2,f,c
 35061  019840  0E00               	movlw	0
 35062  019842  5ADD               	subwfb	postdec2,f,c
 35063                           
 35064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 35065                           ;stkvar	_w @ sp[(-18)+14]
 35066  019844  50E1               	movf	fsr1l,w,c
 35067  019846  0FFC               	addlw	-4
 35068  019848  6ED9               	movwf	fsr2l,c
 35069  01984A  50E2               	movf	fsr1h,w,c
 35070  01984C  6EDA               	movwf	fsr2h,c
 35071  01984E  0EFF               	movlw	255
 35072  019850  22DA               	addwfc	fsr2h,f,c
 35073  019852  06DE               	decf	postinc2,f,c
 35074  019854  0E00               	movlw	0
 35075  019856  5ADD               	subwfb	postdec2,f,c
 35076                           
 35077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 35078  019858  0E0A               	movlw	10
 35079  01985A  6EE6               	movwf	postinc1,c
 35080  01985C  0E00               	movlw	0
 35081  01985E  6EE6               	movwf	postinc1,c
 35082  019860  0E00               	movlw	0
 35083  019862  6EE6               	movwf	postinc1,c
 35084  019864  0E00               	movlw	0
 35085  019866  6EE6               	movwf	postinc1,c
 35086  019868  0E00               	movlw	0
 35087  01986A  6EE6               	movwf	postinc1,c
 35088  01986C  0E00               	movlw	0
 35089  01986E  6EE6               	movwf	postinc1,c
 35090  019870  0E00               	movlw	0
 35091  019872  6EE6               	movwf	postinc1,c
 35092  019874  0E00               	movlw	0
 35093  019876  6EE6               	movwf	postinc1,c
 35094                           
 35095                           ;stkvar	_n @ sp[(-26)+2]
 35096  019878  50E1               	movf	fsr1l,w,c
 35097  01987A  0FE8               	addlw	-24
 35098  01987C  6ED9               	movwf	fsr2l,c
 35099  01987E  50E2               	movf	fsr1h,w,c
 35100  019880  6EDA               	movwf	fsr2h,c
 35101  019882  0EFF               	movlw	255
 35102  019884  22DA               	addwfc	fsr2h,f,c
 35103  019886  006F FF7B FFE6     	movff	postinc2,postinc1
 35104  01988C  006F FF7B FFE6     	movff	postinc2,postinc1
 35105  019892  006F FF7B FFE6     	movff	postinc2,postinc1
 35106  019898  006F FF7B FFE6     	movff	postinc2,postinc1
 35107  01989E  006F FF7B FFE6     	movff	postinc2,postinc1
 35108  0198A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35109  0198AA  006F FF7B FFE6     	movff	postinc2,postinc1
 35110  0198B0  006F FF7B FFE6     	movff	postinc2,postinc1
 35111  0198B6  ECAB  F0E1         	call	___aodiv	;wreg free
 35112  0198BA  52E5               	movf	postdec1,f,c
 35113  0198BC  006F FF9C  F041    	movff	indf1,btemp+23
 35114  0198C2  52E5               	movf	postdec1,f,c
 35115  0198C4  006F FF9C  F040    	movff	indf1,btemp+22
 35116  0198CA  52E5               	movf	postdec1,f,c
 35117  0198CC  006F FF9C  F03F    	movff	indf1,btemp+21
 35118  0198D2  52E5               	movf	postdec1,f,c
 35119  0198D4  006F FF9C  F03E    	movff	indf1,btemp+20
 35120  0198DA  52E5               	movf	postdec1,f,c
 35121  0198DC  006F FF9C  F03D    	movff	indf1,btemp+19
 35122  0198E2  52E5               	movf	postdec1,f,c
 35123  0198E4  006F FF9C  F03C    	movff	indf1,btemp+18
 35124  0198EA  52E5               	movf	postdec1,f,c
 35125  0198EC  006F FF9C  F03B    	movff	indf1,btemp+17
 35126  0198F2  52E5               	movf	postdec1,f,c
 35127  0198F4  006F FF9C  F03A    	movff	indf1,btemp+16
 35128  0198FA  0EF8               	movlw	248
 35129  0198FC  26E1               	addwf	fsr1l,f,c
 35130  0198FE  0EFF               	movlw	255
 35131  019900  22E2               	addwfc	fsr1h,f,c
 35132                           
 35133                           ;stkvar	_n @ sp[(-18)+2]
 35134  019902  0EF0               	movlw	-16
 35135  019904  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 35136  01990A  0EF1               	movlw	-15
 35137  01990C  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 35138  019912  0EF2               	movlw	-14
 35139  019914  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 35140  01991A  0EF3               	movlw	-13
 35141  01991C  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 35142  019922  0EF4               	movlw	-12
 35143  019924  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 35144  01992A  0EF5               	movlw	-11
 35145  01992C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 35146  019932  0EF6               	movlw	-10
 35147  019934  0060  F103  FFE3   	movff	btemp+22,plusw1
 35148  01993A  0EF7               	movlw	-9
 35149  01993C  0060  F107  FFE3   	movff	btemp+23,plusw1
 35150  019942                     l15851:
 35151                           
 35152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 35153                           ;stkvar	_i @ sp[(-18)+10]
 35154  019942  0EF9               	movlw	-7
 35155  019944  BEE3               	btfsc	plusw1,7,c
 35156  019946  D036               	goto	u15050
 35157  019948  0EF9               	movlw	-7
 35158  01994A  50E3               	movf	plusw1,w,c
 35159  01994C  E104               	bnz	u15010
 35160  01994E  0EF8               	movlw	-8
 35161  019950  04E3               	decf	plusw1,w,c
 35162  019952  A0D8               	btfss	status,0,c
 35163  019954  D02F               	goto	u15050
 35164  019956                     u15010:
 35165                           
 35166                           ;stkvar	_n @ sp[(-18)+2]
 35167  019956  0EF0               	movlw	-16
 35168  019958  50E3               	movf	plusw1,w,c
 35169  01995A  E115               	bnz	u15021
 35170  01995C  0EF1               	movlw	-15
 35171  01995E  50E3               	movf	plusw1,w,c
 35172  019960  E112               	bnz	u15021
 35173  019962  0EF2               	movlw	-14
 35174  019964  50E3               	movf	plusw1,w,c
 35175  019966  E10F               	bnz	u15021
 35176  019968  0EF3               	movlw	-13
 35177  01996A  50E3               	movf	plusw1,w,c
 35178  01996C  E10C               	bnz	u15021
 35179  01996E  0EF4               	movlw	-12
 35180  019970  50E3               	movf	plusw1,w,c
 35181  019972  E109               	bnz	u15021
 35182  019974  0EF5               	movlw	-11
 35183  019976  50E3               	movf	plusw1,w,c
 35184  019978  E106               	bnz	u15021
 35185  01997A  0EF6               	movlw	-10
 35186  01997C  50E3               	movf	plusw1,w,c
 35187  01997E  E103               	bnz	u15021
 35188  019980  0EF7               	movlw	-9
 35189  019982  50E3               	movf	plusw1,w,c
 35190  019984  A4D8               	btfss	status,2,c
 35191  019986                     u15021:
 35192  019986  D6D4               	goto	l15841
 35193                           
 35194                           ;stkvar	_p @ sp[(-18)+16]
 35195  019988  0EFF               	movlw	-1
 35196  01998A  BEE3               	btfsc	plusw1,7,c
 35197  01998C  D007               	goto	u15030
 35198  01998E  0EFF               	movlw	-1
 35199  019990  50E3               	movf	plusw1,w,c
 35200  019992  E103               	bnz	u15031
 35201  019994  0EFE               	movlw	-2
 35202  019996  04E3               	decf	plusw1,w,c
 35203  019998  B0D8               	btfsc	status,0,c
 35204  01999A                     u15031:
 35205  01999A  D6CA               	goto	l15841
 35206  01999C                     u15030:
 35207                           
 35208                           ;stkvar	_w @ sp[(-18)+14]
 35209  01999C  0EFD               	movlw	-3
 35210  01999E  BEE3               	btfsc	plusw1,7,c
 35211  0199A0  D009               	goto	u15050
 35212  0199A2  0EFD               	movlw	-3
 35213  0199A4  50E3               	movf	plusw1,w,c
 35214  0199A6  E104               	bnz	u15040
 35215  0199A8  0EFC               	movlw	-4
 35216  0199AA  04E3               	decf	plusw1,w,c
 35217  0199AC  A0D8               	btfss	status,0,c
 35218  0199AE  D002               	goto	u15050
 35219  0199B0                     u15040:
 35220  0199B0  B24E               	btfsc	_flags^0,1,c
 35221  0199B2  D6BE               	goto	l15841
 35222  0199B4                     u15050:
 35223                           
 35224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 35225                           ;stkvar	_s @ sp[(-18)+12]
 35226  0199B4  0EFA               	movlw	-6
 35227  0199B6  006F FF8C  F02A    	movff	plusw1,btemp
 35228  0199BC  0EFB               	movlw	-5
 35229  0199BE  50E3               	movf	plusw1,w,c
 35230  0199C0  102A               	iorwf	btemp^0,w,c
 35231  0199C2  A4D8               	btfss	status,2,c
 35232  0199C4  D002               	goto	u15070
 35233  0199C6  A44E               	btfss	_flags^0,2,c
 35234  0199C8  D033               	goto	l15875
 35235  0199CA                     u15070:
 35236                           
 35237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 35238                           ;stkvar	_i @ sp[(-18)+10]
 35239  0199CA  50E1               	movf	fsr1l,w,c
 35240  0199CC  0FF8               	addlw	-8
 35241  0199CE  6ED9               	movwf	fsr2l,c
 35242  0199D0  50E2               	movf	fsr1h,w,c
 35243  0199D2  6EDA               	movwf	fsr2h,c
 35244  0199D4  0EFF               	movlw	255
 35245  0199D6  22DA               	addwfc	fsr2h,f,c
 35246  0199D8  06DE               	decf	postinc2,f,c
 35247  0199DA  0E00               	movlw	0
 35248  0199DC  5ADD               	subwfb	postdec2,f,c
 35249                           
 35250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 35251                           ;stkvar	_s @ sp[(-18)+12]
 35252  0199DE  0EFA               	movlw	-6
 35253  0199E0  006F FF8C  F02A    	movff	plusw1,btemp
 35254  0199E6  0EFB               	movlw	-5
 35255  0199E8  50E3               	movf	plusw1,w,c
 35256  0199EA  102A               	iorwf	btemp^0,w,c
 35257  0199EC  A4D8               	btfss	status,2,c
 35258  0199EE  D002               	goto	l15871
 35259  0199F0  0E2B               	movlw	43
 35260  0199F2  D001               	goto	L39
 35261  0199F4                     l15871:
 35262  0199F4  0E2D               	movlw	45
 35263  0199F6                     L39:
 35264  0199F6  6E34               	movwf	(btemp+10)^0,c
 35265  0199F8  0E00               	movlw	0
 35266  0199FA  6E35               	movwf	(btemp+11)^0,c
 35267                           
 35268                           ;stkvar	_dtoa$6839 @ sp[(-18)+0]
 35269  0199FC  0EEE               	movlw	-18
 35270  0199FE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35271  019A04  0EEF               	movlw	-17
 35272  019A06  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35273                           
 35274                           ;stkvar	_dtoa$6839 @ sp[(-18)+0]
 35275                           ;stkvar	_i @ sp[(-18)+10]
 35276  019A0C  0EF8               	movlw	-8
 35277  019A0E  006F FF8C  F034    	movff	plusw1,btemp+10
 35278  019A14  0EF9               	movlw	-7
 35279  019A16  006F FF8C  F035    	movff	plusw1,btemp+11
 35280  019A1C  0E54               	movlw	low _dbuf
 35281  019A1E  2434               	addwf	(btemp+10)^0,w,c
 35282  019A20  6ED9               	movwf	fsr2l,c
 35283  019A22  0E03               	movlw	high _dbuf
 35284  019A24  2035               	addwfc	(btemp+11)^0,w,c
 35285  019A26  6EDA               	movwf	fsr2h,c
 35286  019A28  0EEE               	movlw	-18
 35287  019A2A  006F FF8F FFDF     	movff	plusw1,indf2
 35288  019A30                     l15875:
 35289                           
 35290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 35291                           ;stkvar	_w @ sp[(-18)+14]
 35292  019A30  0EFC               	movlw	-4
 35293  019A32  006F FF8F FFE6     	movff	plusw1,postinc1
 35294  019A38  006F FF8F FFE6     	movff	plusw1,postinc1
 35295                           
 35296                           ;stkvar	_i @ sp[(-20)+10]
 35297  019A3E  0E54               	movlw	low _dbuf
 35298  019A40  6E34               	movwf	(btemp+10)^0,c
 35299  019A42  0E03               	movlw	high _dbuf
 35300  019A44  6E35               	movwf	(btemp+11)^0,c
 35301  019A46  0EF6               	movlw	-10
 35302  019A48  50E3               	movf	plusw1,w,c
 35303  019A4A  2634               	addwf	(btemp+10)^0,f,c
 35304  019A4C  0EF7               	movlw	-9
 35305  019A4E  50E3               	movf	plusw1,w,c
 35306  019A50  2235               	addwfc	(btemp+11)^0,f,c
 35307  019A52  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35308  019A58  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35309                           
 35310                           ;stkvar	_fp @ sp[(-22)+-2]
 35311  019A5E  0EE8               	movlw	-24
 35312  019A60  006F FF8F FFE6     	movff	plusw1,postinc1
 35313  019A66  006F FF8F FFE6     	movff	plusw1,postinc1
 35314  019A6C  EC77  F0FE         	call	_pad	;wreg free
 35315                           
 35316                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 35317  019A70  0EE4               	movlw	228
 35318  019A72  26E1               	addwf	fsr1l,f,c
 35319  019A74  0EFF               	movlw	255
 35320  019A76  22E2               	addwfc	fsr1h,f,c
 35321  019A78  0012               	return		;funcret
 35322  019A7A                     __end_of_dtoa:
 35323                           	opt callstack 0
 35324                           
 35325 ;; *************** function _abs *****************
 35326 ;; Defined at:
 35327 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 35328 ;; Parameters:    Size  Location     Type
 35329 ;;  a               2  [STACK] int 
 35330 ;; Auto vars:     Size  Location     Type
 35331 ;;		None
 35332 ;; Return value:  Size  Location     Type
 35333 ;;                  2  [STACK] int 
 35334 ;; Registers used:
 35335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 35336 ;; Tracked objects:
 35337 ;;		On entry : 0/3
 35338 ;;		On exit  : 0/0
 35339 ;;		Unchanged: 0/0
 35340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35345 ;;Total ram usage:        0 bytes
 35346 ;; Hardware stack levels used:    1
 35347 ;; Hardware stack levels required when called:   15
 35348 ;; This function calls:
 35349 ;;		Nothing
 35350 ;; This function is called by:
 35351 ;;		_dtoa
 35352 ;; This function uses a reentrant model
 35353 ;;
 35354                           
 35355                           	psect	text115
 35356  0021D4                     __ptext115:
 35357                           	opt callstack 0
 35358  0021D4                     _abs:
 35359                           	opt callstack 0
 35360                           
 35361                           ;stkvar	_a @ sp[(0)+-2]
 35362                           
 35363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35364                           ;incstack = 0
 35365 ;; hardware stack exceeded
 35366  0021D4  0EFF               	movlw	-1
 35367  0021D6  BEE3               	btfsc	plusw1,7,c
 35368  0021D8  D007               	goto	u7800
 35369  0021DA  0EFF               	movlw	-1
 35370  0021DC  50E3               	movf	plusw1,w,c
 35371  0021DE  E112               	bnz	l10171
 35372  0021E0  0EFE               	movlw	-2
 35373  0021E2  04E3               	decf	plusw1,w,c
 35374  0021E4  B0D8               	btfsc	status,0,c
 35375  0021E6  D00E               	goto	l10171
 35376  0021E8                     u7800:
 35377                           
 35378                           ;stkvar	_a @ sp[(0)+-2]
 35379  0021E8  0EFE               	movlw	-2
 35380  0021EA  006F FF8C  F02A    	movff	plusw1,btemp
 35381  0021F0  1E2A               	comf	btemp^0,f,c
 35382  0021F2  0EFF               	movlw	-1
 35383  0021F4  006F FF8C  F02B    	movff	plusw1,btemp+1
 35384  0021FA  1E2B               	comf	(btemp+1)^0,f,c
 35385  0021FC  2A2A               	incf	btemp^0,f,c
 35386  0021FE  B4D8               	btfsc	status,2,c
 35387  002200  2A2B               	incf	(btemp+1)^0,f,c
 35388  002202  D008               	goto	l3410
 35389  002204                     l10171:
 35390                           
 35391                           ;stkvar	_a @ sp[(0)+-2]
 35392  002204  0EFE               	movlw	-2
 35393  002206  006F FF8C  F02A    	movff	plusw1,btemp
 35394  00220C  0EFF               	movlw	-1
 35395  00220E  006F FF8C  F02B    	movff	plusw1,btemp+1
 35396  002214                     l3410:
 35397                           
 35398                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 35399  002214  52E5               	movf	postdec1,f,c
 35400  002216  52E5               	movf	postdec1,f,c
 35401  002218  0012               	return		;funcret
 35402  00221A                     __end_of_abs:
 35403                           	opt callstack 0
 35404                           
 35405 ;; *************** function ___aomod *****************
 35406 ;; Defined at:
 35407 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 35408 ;; Parameters:    Size  Location     Type
 35409 ;;  dividend        8  [STACK] long long 
 35410 ;;  divisor         8  [STACK] long long 
 35411 ;; Auto vars:     Size  Location     Type
 35412 ;;  sign            1  [STACK] unsigned char 
 35413 ;;  counter         1  [STACK] unsigned char 
 35414 ;; Return value:  Size  Location     Type
 35415 ;;                  8  [STACK] long long 
 35416 ;; Registers used:
 35417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35418 ;; Tracked objects:
 35419 ;;		On entry : 0/0
 35420 ;;		On exit  : 0/0
 35421 ;;		Unchanged: 0/0
 35422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35427 ;;Total ram usage:        0 bytes
 35428 ;; Hardware stack levels used:    1
 35429 ;; Hardware stack levels required when called:   15
 35430 ;; This function calls:
 35431 ;;		Nothing
 35432 ;; This function is called by:
 35433 ;;		_dtoa
 35434 ;;		___secs_to_tm
 35435 ;;		_rule_to_secs
 35436 ;;		___year_to_secs
 35437 ;; This function uses a reentrant model
 35438 ;;
 35439                           
 35440                           	psect	text116
 35441  01CCD4                     __ptext116:
 35442                           	opt callstack 0
 35443  01CCD4                     ___aomod:
 35444                           	opt callstack 0
 35445                           
 35446                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 35447  01CCD4  52E6               	movf	postinc1,f,c
 35448  01CCD6  52E6               	movf	postinc1,f,c
 35449                           
 35450                           ;stkvar	_sign @ sp[(-2)+0]
 35451                           
 35452                           ;incstack = 0
 35453 ;; hardware stack exceeded
 35454  01CCD8  0EFE               	movlw	-2
 35455  01CCDA  6AE3               	clrf	plusw1,c
 35456                           
 35457                           ;stkvar	_dividend @ sp[(-2)+-8]
 35458  01CCDC  0EFD               	movlw	-3
 35459  01CCDE  AEE3               	btfss	plusw1,7,c
 35460  01CCE0  D028               	goto	l15685
 35461                           
 35462                           ;stkvar	_dividend @ sp[(-2)+-8]
 35463                           ;stkvar	_dividend @ sp[(-2)+-8]
 35464  01CCE2  0EF6               	movlw	-10
 35465  01CCE4  6CE3               	negf	plusw1,c
 35466  01CCE6  0EF7               	movlw	-9
 35467  01CCE8  1EE3               	comf	plusw1,f,c
 35468  01CCEA  0EF8               	movlw	-8
 35469  01CCEC  1EE3               	comf	plusw1,f,c
 35470  01CCEE  0EF9               	movlw	-7
 35471  01CCF0  1EE3               	comf	plusw1,f,c
 35472  01CCF2  0EFA               	movlw	-6
 35473  01CCF4  1EE3               	comf	plusw1,f,c
 35474  01CCF6  0EFB               	movlw	-5
 35475  01CCF8  1EE3               	comf	plusw1,f,c
 35476  01CCFA  0EFC               	movlw	-4
 35477  01CCFC  1EE3               	comf	plusw1,f,c
 35478  01CCFE  0EFD               	movlw	-3
 35479  01CD00  1EE3               	comf	plusw1,f,c
 35480  01CD02  E314               	bnc	u14680
 35481  01CD04  0EF7               	movlw	-9
 35482  01CD06  2AE3               	incf	plusw1,f,c
 35483  01CD08  E311               	bnc	u14680
 35484  01CD0A  0EF8               	movlw	-8
 35485  01CD0C  2AE3               	incf	plusw1,f,c
 35486  01CD0E  E30E               	bnc	u14680
 35487  01CD10  0EF9               	movlw	-7
 35488  01CD12  2AE3               	incf	plusw1,f,c
 35489  01CD14  E30B               	bnc	u14680
 35490  01CD16  0EFA               	movlw	-6
 35491  01CD18  2AE3               	incf	plusw1,f,c
 35492  01CD1A  E308               	bnc	u14680
 35493  01CD1C  0EFB               	movlw	-5
 35494  01CD1E  2AE3               	incf	plusw1,f,c
 35495  01CD20  E305               	bnc	u14680
 35496  01CD22  0EFC               	movlw	-4
 35497  01CD24  2AE3               	incf	plusw1,f,c
 35498  01CD26  E302               	bnc	u14680
 35499  01CD28  0EFD               	movlw	-3
 35500  01CD2A  2AE3               	incf	plusw1,f,c
 35501  01CD2C                     u14680:
 35502                           
 35503                           ;stkvar	_sign @ sp[(-2)+0]
 35504  01CD2C  0EFE               	movlw	-2
 35505  01CD2E  6AE3               	clrf	plusw1,c
 35506  01CD30  2AE3               	incf	plusw1,f,c
 35507  01CD32                     l15685:
 35508                           
 35509                           ;stkvar	_divisor @ sp[(-2)+-16]
 35510  01CD32  0EF5               	movlw	-11
 35511  01CD34  AEE3               	btfss	plusw1,7,c
 35512  01CD36  D025               	goto	u14700
 35513                           
 35514                           ;stkvar	_divisor @ sp[(-2)+-16]
 35515                           ;stkvar	_divisor @ sp[(-2)+-16]
 35516  01CD38  0EEE               	movlw	-18
 35517  01CD3A  6CE3               	negf	plusw1,c
 35518  01CD3C  0EEF               	movlw	-17
 35519  01CD3E  1EE3               	comf	plusw1,f,c
 35520  01CD40  0EF0               	movlw	-16
 35521  01CD42  1EE3               	comf	plusw1,f,c
 35522  01CD44  0EF1               	movlw	-15
 35523  01CD46  1EE3               	comf	plusw1,f,c
 35524  01CD48  0EF2               	movlw	-14
 35525  01CD4A  1EE3               	comf	plusw1,f,c
 35526  01CD4C  0EF3               	movlw	-13
 35527  01CD4E  1EE3               	comf	plusw1,f,c
 35528  01CD50  0EF4               	movlw	-12
 35529  01CD52  1EE3               	comf	plusw1,f,c
 35530  01CD54  0EF5               	movlw	-11
 35531  01CD56  1EE3               	comf	plusw1,f,c
 35532  01CD58  E314               	bnc	u14700
 35533  01CD5A  0EEF               	movlw	-17
 35534  01CD5C  2AE3               	incf	plusw1,f,c
 35535  01CD5E  E311               	bnc	u14700
 35536  01CD60  0EF0               	movlw	-16
 35537  01CD62  2AE3               	incf	plusw1,f,c
 35538  01CD64  E30E               	bnc	u14700
 35539  01CD66  0EF1               	movlw	-15
 35540  01CD68  2AE3               	incf	plusw1,f,c
 35541  01CD6A  E30B               	bnc	u14700
 35542  01CD6C  0EF2               	movlw	-14
 35543  01CD6E  2AE3               	incf	plusw1,f,c
 35544  01CD70  E308               	bnc	u14700
 35545  01CD72  0EF3               	movlw	-13
 35546  01CD74  2AE3               	incf	plusw1,f,c
 35547  01CD76  E305               	bnc	u14700
 35548  01CD78  0EF4               	movlw	-12
 35549  01CD7A  2AE3               	incf	plusw1,f,c
 35550  01CD7C  E302               	bnc	u14700
 35551  01CD7E  0EF5               	movlw	-11
 35552  01CD80  2AE3               	incf	plusw1,f,c
 35553  01CD82                     u14700:
 35554                           
 35555                           ;stkvar	_divisor @ sp[(-2)+-16]
 35556  01CD82  0EEE               	movlw	-18
 35557  01CD84  50E3               	movf	plusw1,w,c
 35558  01CD86  E116               	bnz	u14710
 35559  01CD88  0EEF               	movlw	-17
 35560  01CD8A  50E3               	movf	plusw1,w,c
 35561  01CD8C  E113               	bnz	u14710
 35562  01CD8E  0EF0               	movlw	-16
 35563  01CD90  50E3               	movf	plusw1,w,c
 35564  01CD92  E110               	bnz	u14710
 35565  01CD94  0EF1               	movlw	-15
 35566  01CD96  50E3               	movf	plusw1,w,c
 35567  01CD98  E10D               	bnz	u14710
 35568  01CD9A  0EF2               	movlw	-14
 35569  01CD9C  50E3               	movf	plusw1,w,c
 35570  01CD9E  E10A               	bnz	u14710
 35571  01CDA0  0EF3               	movlw	-13
 35572  01CDA2  50E3               	movf	plusw1,w,c
 35573  01CDA4  E107               	bnz	u14710
 35574  01CDA6  0EF4               	movlw	-12
 35575  01CDA8  50E3               	movf	plusw1,w,c
 35576  01CDAA  E104               	bnz	u14710
 35577  01CDAC  0EF5               	movlw	-11
 35578  01CDAE  50E3               	movf	plusw1,w,c
 35579  01CDB0  B4D8               	btfsc	status,2,c
 35580  01CDB2  D075               	goto	u14740
 35581  01CDB4                     u14710:
 35582                           
 35583                           ;stkvar	_counter @ sp[(-2)+1]
 35584  01CDB4  0EFF               	movlw	-1
 35585  01CDB6  6AE3               	clrf	plusw1,c
 35586  01CDB8  D012               	goto	L40
 35587  01CDBA                     l15693:
 35588                           
 35589                           ;stkvar	_divisor @ sp[(-2)+-16]
 35590  01CDBA  90D8               	bcf	status,0,c
 35591  01CDBC  0EEE               	movlw	-18
 35592  01CDBE  36E3               	rlcf	plusw1,f,c
 35593  01CDC0  0EEF               	movlw	-17
 35594  01CDC2  36E3               	rlcf	plusw1,f,c
 35595  01CDC4  0EF0               	movlw	-16
 35596  01CDC6  36E3               	rlcf	plusw1,f,c
 35597  01CDC8  0EF1               	movlw	-15
 35598  01CDCA  36E3               	rlcf	plusw1,f,c
 35599  01CDCC  0EF2               	movlw	-14
 35600  01CDCE  36E3               	rlcf	plusw1,f,c
 35601  01CDD0  0EF3               	movlw	-13
 35602  01CDD2  36E3               	rlcf	plusw1,f,c
 35603  01CDD4  0EF4               	movlw	-12
 35604  01CDD6  36E3               	rlcf	plusw1,f,c
 35605  01CDD8  0EF5               	movlw	-11
 35606  01CDDA  36E3               	rlcf	plusw1,f,c
 35607                           
 35608                           ;stkvar	_counter @ sp[(-2)+1]
 35609  01CDDC  0EFF               	movlw	-1
 35610  01CDDE                     L40:
 35611  01CDDE  2AE3               	incf	plusw1,f,c
 35612                           
 35613                           ;stkvar	_divisor @ sp[(-2)+-16]
 35614  01CDE0  0EF5               	movlw	-11
 35615  01CDE2  AEE3               	btfss	plusw1,7,c
 35616  01CDE4  D7EA               	goto	l15693
 35617  01CDE6                     u14720:
 35618                           
 35619                           ;stkvar	_divisor @ sp[(-2)+-16]
 35620                           ;stkvar	_dividend @ sp[(-2)+-8]
 35621  01CDE6  50E1               	movf	fsr1l,w,c
 35622  01CDE8  0FF6               	addlw	-10
 35623  01CDEA  6ED9               	movwf	fsr2l,c
 35624  01CDEC  50E2               	movf	fsr1h,w,c
 35625  01CDEE  6EDA               	movwf	fsr2h,c
 35626  01CDF0  0EFF               	movlw	255
 35627  01CDF2  22DA               	addwfc	fsr2h,f,c
 35628  01CDF4  0EEE               	movlw	-18
 35629  01CDF6  50E3               	movf	plusw1,w,c
 35630  01CDF8  5CDE               	subwf	postinc2,w,c
 35631  01CDFA  0EEF               	movlw	-17
 35632  01CDFC  50E3               	movf	plusw1,w,c
 35633  01CDFE  58DE               	subwfb	postinc2,w,c
 35634  01CE00  0EF0               	movlw	-16
 35635  01CE02  50E3               	movf	plusw1,w,c
 35636  01CE04  58DE               	subwfb	postinc2,w,c
 35637  01CE06  0EF1               	movlw	-15
 35638  01CE08  50E3               	movf	plusw1,w,c
 35639  01CE0A  58DE               	subwfb	postinc2,w,c
 35640  01CE0C  0EF2               	movlw	-14
 35641  01CE0E  50E3               	movf	plusw1,w,c
 35642  01CE10  58DE               	subwfb	postinc2,w,c
 35643  01CE12  0EF3               	movlw	-13
 35644  01CE14  50E3               	movf	plusw1,w,c
 35645  01CE16  58DE               	subwfb	postinc2,w,c
 35646  01CE18  0EF4               	movlw	-12
 35647  01CE1A  50E3               	movf	plusw1,w,c
 35648  01CE1C  58DE               	subwfb	postinc2,w,c
 35649  01CE1E  0EF5               	movlw	-11
 35650  01CE20  50E3               	movf	plusw1,w,c
 35651  01CE22  58DE               	subwfb	postinc2,w,c
 35652  01CE24  A0D8               	btfss	status,0,c
 35653  01CE26  D01F               	goto	l15701
 35654                           
 35655                           ;stkvar	_divisor @ sp[(-2)+-16]
 35656                           ;stkvar	_dividend @ sp[(-2)+-8]
 35657  01CE28  50E1               	movf	fsr1l,w,c
 35658  01CE2A  0FF6               	addlw	-10
 35659  01CE2C  6ED9               	movwf	fsr2l,c
 35660  01CE2E  50E2               	movf	fsr1h,w,c
 35661  01CE30  6EDA               	movwf	fsr2h,c
 35662  01CE32  0EFF               	movlw	255
 35663  01CE34  22DA               	addwfc	fsr2h,f,c
 35664  01CE36  0EEE               	movlw	-18
 35665  01CE38  50E3               	movf	plusw1,w,c
 35666  01CE3A  5EDE               	subwf	postinc2,f,c
 35667  01CE3C  0EEF               	movlw	-17
 35668  01CE3E  50E3               	movf	plusw1,w,c
 35669  01CE40  5ADE               	subwfb	postinc2,f,c
 35670  01CE42  0EF0               	movlw	-16
 35671  01CE44  50E3               	movf	plusw1,w,c
 35672  01CE46  5ADE               	subwfb	postinc2,f,c
 35673  01CE48  0EF1               	movlw	-15
 35674  01CE4A  50E3               	movf	plusw1,w,c
 35675  01CE4C  5ADE               	subwfb	postinc2,f,c
 35676  01CE4E  0EF2               	movlw	-14
 35677  01CE50  50E3               	movf	plusw1,w,c
 35678  01CE52  5ADE               	subwfb	postinc2,f,c
 35679  01CE54  0EF3               	movlw	-13
 35680  01CE56  50E3               	movf	plusw1,w,c
 35681  01CE58  5ADE               	subwfb	postinc2,f,c
 35682  01CE5A  0EF4               	movlw	-12
 35683  01CE5C  50E3               	movf	plusw1,w,c
 35684  01CE5E  5ADE               	subwfb	postinc2,f,c
 35685  01CE60  0EF5               	movlw	-11
 35686  01CE62  50E3               	movf	plusw1,w,c
 35687  01CE64  5ADE               	subwfb	postinc2,f,c
 35688  01CE66                     l15701:
 35689                           
 35690                           ;stkvar	_divisor @ sp[(-2)+-16]
 35691  01CE66  90D8               	bcf	status,0,c
 35692  01CE68  0EF5               	movlw	-11
 35693  01CE6A  32E3               	rrcf	plusw1,f,c
 35694  01CE6C  0EF4               	movlw	-12
 35695  01CE6E  32E3               	rrcf	plusw1,f,c
 35696  01CE70  0EF3               	movlw	-13
 35697  01CE72  32E3               	rrcf	plusw1,f,c
 35698  01CE74  0EF2               	movlw	-14
 35699  01CE76  32E3               	rrcf	plusw1,f,c
 35700  01CE78  0EF1               	movlw	-15
 35701  01CE7A  32E3               	rrcf	plusw1,f,c
 35702  01CE7C  0EF0               	movlw	-16
 35703  01CE7E  32E3               	rrcf	plusw1,f,c
 35704  01CE80  0EEF               	movlw	-17
 35705  01CE82  32E3               	rrcf	plusw1,f,c
 35706  01CE84  0EEE               	movlw	-18
 35707  01CE86  32E3               	rrcf	plusw1,f,c
 35708                           
 35709                           ;stkvar	_counter @ sp[(-2)+1]
 35710  01CE88  0EFF               	movlw	-1
 35711  01CE8A  50E3               	movf	plusw1,w,c
 35712  01CE8C  6E2A               	movwf	btemp^0,c
 35713  01CE8E  0E01               	movlw	1
 35714  01CE90  5E2A               	subwf	btemp^0,f,c
 35715  01CE92  0EFF               	movlw	-1
 35716  01CE94  0060  F0AB  FFE3   	movff	btemp,plusw1
 35717  01CE9A  A4D8               	btfss	status,2,c
 35718  01CE9C  D7A4               	goto	u14720
 35719  01CE9E                     u14740:
 35720                           
 35721                           ;stkvar	_sign @ sp[(-2)+0]
 35722  01CE9E  0EFE               	movlw	-2
 35723  01CEA0  50E3               	movf	plusw1,w,c
 35724  01CEA2  B4D8               	btfsc	status,2,c
 35725  01CEA4  D025               	goto	u14760
 35726                           
 35727                           ;stkvar	_dividend @ sp[(-2)+-8]
 35728                           ;stkvar	_dividend @ sp[(-2)+-8]
 35729  01CEA6  0EF6               	movlw	-10
 35730  01CEA8  6CE3               	negf	plusw1,c
 35731  01CEAA  0EF7               	movlw	-9
 35732  01CEAC  1EE3               	comf	plusw1,f,c
 35733  01CEAE  0EF8               	movlw	-8
 35734  01CEB0  1EE3               	comf	plusw1,f,c
 35735  01CEB2  0EF9               	movlw	-7
 35736  01CEB4  1EE3               	comf	plusw1,f,c
 35737  01CEB6  0EFA               	movlw	-6
 35738  01CEB8  1EE3               	comf	plusw1,f,c
 35739  01CEBA  0EFB               	movlw	-5
 35740  01CEBC  1EE3               	comf	plusw1,f,c
 35741  01CEBE  0EFC               	movlw	-4
 35742  01CEC0  1EE3               	comf	plusw1,f,c
 35743  01CEC2  0EFD               	movlw	-3
 35744  01CEC4  1EE3               	comf	plusw1,f,c
 35745  01CEC6  E314               	bnc	u14760
 35746  01CEC8  0EF7               	movlw	-9
 35747  01CECA  2AE3               	incf	plusw1,f,c
 35748  01CECC  E311               	bnc	u14760
 35749  01CECE  0EF8               	movlw	-8
 35750  01CED0  2AE3               	incf	plusw1,f,c
 35751  01CED2  E30E               	bnc	u14760
 35752  01CED4  0EF9               	movlw	-7
 35753  01CED6  2AE3               	incf	plusw1,f,c
 35754  01CED8  E30B               	bnc	u14760
 35755  01CEDA  0EFA               	movlw	-6
 35756  01CEDC  2AE3               	incf	plusw1,f,c
 35757  01CEDE  E308               	bnc	u14760
 35758  01CEE0  0EFB               	movlw	-5
 35759  01CEE2  2AE3               	incf	plusw1,f,c
 35760  01CEE4  E305               	bnc	u14760
 35761  01CEE6  0EFC               	movlw	-4
 35762  01CEE8  2AE3               	incf	plusw1,f,c
 35763  01CEEA  E302               	bnc	u14760
 35764  01CEEC  0EFD               	movlw	-3
 35765  01CEEE  2AE3               	incf	plusw1,f,c
 35766  01CEF0                     u14760:
 35767                           
 35768                           ;stkvar	_dividend @ sp[(-2)+-8]
 35769  01CEF0  0EF6               	movlw	246
 35770  01CEF2  24E1               	addwf	fsr1l,w,c
 35771  01CEF4  6ED9               	movwf	fsr2l,c
 35772  01CEF6  0EFF               	movlw	255
 35773  01CEF8  20E2               	addwfc	fsr1h,w,c
 35774  01CEFA  6EDA               	movwf	fsr2h,c
 35775                           
 35776                           ;stkvar	?___aomod @ sp[(-2)+-8]
 35777  01CEFC  0E08               	movlw	8
 35778  01CEFE  6E2A               	movwf	btemp^0,c
 35779  01CF00  0EF6               	movlw	-10
 35780  01CF02                     us1477999:
 35781  01CF02  006F FF7B FFE3     	movff	postinc2,plusw1
 35782  01CF08  28E8               	incf	wreg,w,c
 35783  01CF0A  2E2A               	decfsz	btemp^0,f,c
 35784  01CF0C  D7FA               	bra	us1477999
 35785                           
 35786                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 35787  01CF0E  52E5               	movf	postdec1,f,c
 35788  01CF10  52E5               	movf	postdec1,f,c
 35789  01CF12  0012               	return		;funcret
 35790  01CF14                     __end_of___aomod:
 35791                           	opt callstack 0
 35792                           
 35793 ;; *************** function ___aodiv *****************
 35794 ;; Defined at:
 35795 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 35796 ;; Parameters:    Size  Location     Type
 35797 ;;  dividend        8  [STACK] long long 
 35798 ;;  divisor         8  [STACK] long long 
 35799 ;; Auto vars:     Size  Location     Type
 35800 ;;  quotient        8  [STACK] long long 
 35801 ;;  sign            1  [STACK] unsigned char 
 35802 ;;  counter         1  [STACK] unsigned char 
 35803 ;; Return value:  Size  Location     Type
 35804 ;;                  8  [STACK] long long 
 35805 ;; Registers used:
 35806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35807 ;; Tracked objects:
 35808 ;;		On entry : 0/0
 35809 ;;		On exit  : 0/0
 35810 ;;		Unchanged: 0/0
 35811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35816 ;;Total ram usage:        0 bytes
 35817 ;; Hardware stack levels used:    1
 35818 ;; Hardware stack levels required when called:   15
 35819 ;; This function calls:
 35820 ;;		Nothing
 35821 ;; This function is called by:
 35822 ;;		_dtoa
 35823 ;;		___secs_to_tm
 35824 ;;		___secs_to_zone
 35825 ;;		___year_to_secs
 35826 ;; This function uses a reentrant model
 35827 ;;
 35828                           
 35829                           	psect	text117
 35830  01C356                     __ptext117:
 35831                           	opt callstack 0
 35832  01C356                     ___aodiv:
 35833                           	opt callstack 0
 35834                           
 35835                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 35836  01C356  0E0A               	movlw	10
 35837  01C358  26E1               	addwf	fsr1l,f,c
 35838  01C35A  0E00               	movlw	0
 35839  01C35C  22E2               	addwfc	fsr1h,f,c
 35840                           
 35841                           ;stkvar	_sign @ sp[(-10)+8]
 35842                           
 35843                           ;incstack = 0
 35844 ;; hardware stack exceeded
 35845  01C35E  0EFE               	movlw	-2
 35846  01C360  6AE3               	clrf	plusw1,c
 35847                           
 35848                           ;stkvar	_divisor @ sp[(-10)+-16]
 35849  01C362  0EED               	movlw	-19
 35850  01C364  AEE3               	btfss	plusw1,7,c
 35851  01C366  D028               	goto	l15641
 35852                           
 35853                           ;stkvar	_divisor @ sp[(-10)+-16]
 35854                           ;stkvar	_divisor @ sp[(-10)+-16]
 35855  01C368  0EE6               	movlw	-26
 35856  01C36A  6CE3               	negf	plusw1,c
 35857  01C36C  0EE7               	movlw	-25
 35858  01C36E  1EE3               	comf	plusw1,f,c
 35859  01C370  0EE8               	movlw	-24
 35860  01C372  1EE3               	comf	plusw1,f,c
 35861  01C374  0EE9               	movlw	-23
 35862  01C376  1EE3               	comf	plusw1,f,c
 35863  01C378  0EEA               	movlw	-22
 35864  01C37A  1EE3               	comf	plusw1,f,c
 35865  01C37C  0EEB               	movlw	-21
 35866  01C37E  1EE3               	comf	plusw1,f,c
 35867  01C380  0EEC               	movlw	-20
 35868  01C382  1EE3               	comf	plusw1,f,c
 35869  01C384  0EED               	movlw	-19
 35870  01C386  1EE3               	comf	plusw1,f,c
 35871  01C388  E314               	bnc	u14560
 35872  01C38A  0EE7               	movlw	-25
 35873  01C38C  2AE3               	incf	plusw1,f,c
 35874  01C38E  E311               	bnc	u14560
 35875  01C390  0EE8               	movlw	-24
 35876  01C392  2AE3               	incf	plusw1,f,c
 35877  01C394  E30E               	bnc	u14560
 35878  01C396  0EE9               	movlw	-23
 35879  01C398  2AE3               	incf	plusw1,f,c
 35880  01C39A  E30B               	bnc	u14560
 35881  01C39C  0EEA               	movlw	-22
 35882  01C39E  2AE3               	incf	plusw1,f,c
 35883  01C3A0  E308               	bnc	u14560
 35884  01C3A2  0EEB               	movlw	-21
 35885  01C3A4  2AE3               	incf	plusw1,f,c
 35886  01C3A6  E305               	bnc	u14560
 35887  01C3A8  0EEC               	movlw	-20
 35888  01C3AA  2AE3               	incf	plusw1,f,c
 35889  01C3AC  E302               	bnc	u14560
 35890  01C3AE  0EED               	movlw	-19
 35891  01C3B0  2AE3               	incf	plusw1,f,c
 35892  01C3B2                     u14560:
 35893                           
 35894                           ;stkvar	_sign @ sp[(-10)+8]
 35895  01C3B2  0EFE               	movlw	-2
 35896  01C3B4  6AE3               	clrf	plusw1,c
 35897  01C3B6  2AE3               	incf	plusw1,f,c
 35898  01C3B8                     l15641:
 35899                           
 35900                           ;stkvar	_dividend @ sp[(-10)+-8]
 35901  01C3B8  0EF5               	movlw	-11
 35902  01C3BA  AEE3               	btfss	plusw1,7,c
 35903  01C3BC  D027               	goto	l15647
 35904                           
 35905                           ;stkvar	_dividend @ sp[(-10)+-8]
 35906                           ;stkvar	_dividend @ sp[(-10)+-8]
 35907  01C3BE  0EEE               	movlw	-18
 35908  01C3C0  6CE3               	negf	plusw1,c
 35909  01C3C2  0EEF               	movlw	-17
 35910  01C3C4  1EE3               	comf	plusw1,f,c
 35911  01C3C6  0EF0               	movlw	-16
 35912  01C3C8  1EE3               	comf	plusw1,f,c
 35913  01C3CA  0EF1               	movlw	-15
 35914  01C3CC  1EE3               	comf	plusw1,f,c
 35915  01C3CE  0EF2               	movlw	-14
 35916  01C3D0  1EE3               	comf	plusw1,f,c
 35917  01C3D2  0EF3               	movlw	-13
 35918  01C3D4  1EE3               	comf	plusw1,f,c
 35919  01C3D6  0EF4               	movlw	-12
 35920  01C3D8  1EE3               	comf	plusw1,f,c
 35921  01C3DA  0EF5               	movlw	-11
 35922  01C3DC  1EE3               	comf	plusw1,f,c
 35923  01C3DE  E314               	bnc	u14580
 35924  01C3E0  0EEF               	movlw	-17
 35925  01C3E2  2AE3               	incf	plusw1,f,c
 35926  01C3E4  E311               	bnc	u14580
 35927  01C3E6  0EF0               	movlw	-16
 35928  01C3E8  2AE3               	incf	plusw1,f,c
 35929  01C3EA  E30E               	bnc	u14580
 35930  01C3EC  0EF1               	movlw	-15
 35931  01C3EE  2AE3               	incf	plusw1,f,c
 35932  01C3F0  E30B               	bnc	u14580
 35933  01C3F2  0EF2               	movlw	-14
 35934  01C3F4  2AE3               	incf	plusw1,f,c
 35935  01C3F6  E308               	bnc	u14580
 35936  01C3F8  0EF3               	movlw	-13
 35937  01C3FA  2AE3               	incf	plusw1,f,c
 35938  01C3FC  E305               	bnc	u14580
 35939  01C3FE  0EF4               	movlw	-12
 35940  01C400  2AE3               	incf	plusw1,f,c
 35941  01C402  E302               	bnc	u14580
 35942  01C404  0EF5               	movlw	-11
 35943  01C406  2AE3               	incf	plusw1,f,c
 35944  01C408                     u14580:
 35945                           
 35946                           ;stkvar	_sign @ sp[(-10)+8]
 35947  01C408  0EFE               	movlw	-2
 35948  01C40A  70E3               	btg	plusw1,0,c
 35949  01C40C                     l15647:
 35950                           
 35951                           ;stkvar	_quotient @ sp[(-10)+0]
 35952  01C40C  0E07               	movlw	7
 35953  01C40E  6E2A               	movwf	btemp^0,c
 35954  01C410  0EF6               	movlw	-10
 35955  01C412                     u14591:
 35956  01C412  6AE3               	clrf	plusw1,c
 35957  01C414  2AE8               	incf	wreg,f,c
 35958  01C416  062A               	decf	btemp^0,f,c
 35959  01C418  E2FC               	bc	u14591
 35960                           
 35961                           ;stkvar	_divisor @ sp[(-10)+-16]
 35962  01C41A  0EE6               	movlw	-26
 35963  01C41C  50E3               	movf	plusw1,w,c
 35964  01C41E  E116               	bnz	u14600
 35965  01C420  0EE7               	movlw	-25
 35966  01C422  50E3               	movf	plusw1,w,c
 35967  01C424  E113               	bnz	u14600
 35968  01C426  0EE8               	movlw	-24
 35969  01C428  50E3               	movf	plusw1,w,c
 35970  01C42A  E110               	bnz	u14600
 35971  01C42C  0EE9               	movlw	-23
 35972  01C42E  50E3               	movf	plusw1,w,c
 35973  01C430  E10D               	bnz	u14600
 35974  01C432  0EEA               	movlw	-22
 35975  01C434  50E3               	movf	plusw1,w,c
 35976  01C436  E10A               	bnz	u14600
 35977  01C438  0EEB               	movlw	-21
 35978  01C43A  50E3               	movf	plusw1,w,c
 35979  01C43C  E107               	bnz	u14600
 35980  01C43E  0EEC               	movlw	-20
 35981  01C440  50E3               	movf	plusw1,w,c
 35982  01C442  E104               	bnz	u14600
 35983  01C444  0EED               	movlw	-19
 35984  01C446  50E3               	movf	plusw1,w,c
 35985  01C448  B4D8               	btfsc	status,2,c
 35986  01C44A  D088               	goto	u14630
 35987  01C44C                     u14600:
 35988                           
 35989                           ;stkvar	_counter @ sp[(-10)+9]
 35990  01C44C  0EFF               	movlw	-1
 35991  01C44E  6AE3               	clrf	plusw1,c
 35992  01C450  D012               	goto	L41
 35993  01C452                     l15653:
 35994                           
 35995                           ;stkvar	_divisor @ sp[(-10)+-16]
 35996  01C452  90D8               	bcf	status,0,c
 35997  01C454  0EE6               	movlw	-26
 35998  01C456  36E3               	rlcf	plusw1,f,c
 35999  01C458  0EE7               	movlw	-25
 36000  01C45A  36E3               	rlcf	plusw1,f,c
 36001  01C45C  0EE8               	movlw	-24
 36002  01C45E  36E3               	rlcf	plusw1,f,c
 36003  01C460  0EE9               	movlw	-23
 36004  01C462  36E3               	rlcf	plusw1,f,c
 36005  01C464  0EEA               	movlw	-22
 36006  01C466  36E3               	rlcf	plusw1,f,c
 36007  01C468  0EEB               	movlw	-21
 36008  01C46A  36E3               	rlcf	plusw1,f,c
 36009  01C46C  0EEC               	movlw	-20
 36010  01C46E  36E3               	rlcf	plusw1,f,c
 36011  01C470  0EED               	movlw	-19
 36012  01C472  36E3               	rlcf	plusw1,f,c
 36013                           
 36014                           ;stkvar	_counter @ sp[(-10)+9]
 36015  01C474  0EFF               	movlw	-1
 36016  01C476                     L41:
 36017  01C476  2AE3               	incf	plusw1,f,c
 36018                           
 36019                           ;stkvar	_divisor @ sp[(-10)+-16]
 36020  01C478  0EED               	movlw	-19
 36021  01C47A  AEE3               	btfss	plusw1,7,c
 36022  01C47C  D7EA               	goto	l15653
 36023  01C47E                     u14610:
 36024                           
 36025                           ;stkvar	_quotient @ sp[(-10)+0]
 36026  01C47E  90D8               	bcf	status,0,c
 36027  01C480  0EF6               	movlw	-10
 36028  01C482  36E3               	rlcf	plusw1,f,c
 36029  01C484  0EF7               	movlw	-9
 36030  01C486  36E3               	rlcf	plusw1,f,c
 36031  01C488  0EF8               	movlw	-8
 36032  01C48A  36E3               	rlcf	plusw1,f,c
 36033  01C48C  0EF9               	movlw	-7
 36034  01C48E  36E3               	rlcf	plusw1,f,c
 36035  01C490  0EFA               	movlw	-6
 36036  01C492  36E3               	rlcf	plusw1,f,c
 36037  01C494  0EFB               	movlw	-5
 36038  01C496  36E3               	rlcf	plusw1,f,c
 36039  01C498  0EFC               	movlw	-4
 36040  01C49A  36E3               	rlcf	plusw1,f,c
 36041  01C49C  0EFD               	movlw	-3
 36042  01C49E  36E3               	rlcf	plusw1,f,c
 36043                           
 36044                           ;stkvar	_divisor @ sp[(-10)+-16]
 36045                           ;stkvar	_dividend @ sp[(-10)+-8]
 36046  01C4A0  50E1               	movf	fsr1l,w,c
 36047  01C4A2  0FEE               	addlw	-18
 36048  01C4A4  6ED9               	movwf	fsr2l,c
 36049  01C4A6  50E2               	movf	fsr1h,w,c
 36050  01C4A8  6EDA               	movwf	fsr2h,c
 36051  01C4AA  0EFF               	movlw	255
 36052  01C4AC  22DA               	addwfc	fsr2h,f,c
 36053  01C4AE  0EE6               	movlw	-26
 36054  01C4B0  50E3               	movf	plusw1,w,c
 36055  01C4B2  5CDE               	subwf	postinc2,w,c
 36056  01C4B4  0EE7               	movlw	-25
 36057  01C4B6  50E3               	movf	plusw1,w,c
 36058  01C4B8  58DE               	subwfb	postinc2,w,c
 36059  01C4BA  0EE8               	movlw	-24
 36060  01C4BC  50E3               	movf	plusw1,w,c
 36061  01C4BE  58DE               	subwfb	postinc2,w,c
 36062  01C4C0  0EE9               	movlw	-23
 36063  01C4C2  50E3               	movf	plusw1,w,c
 36064  01C4C4  58DE               	subwfb	postinc2,w,c
 36065  01C4C6  0EEA               	movlw	-22
 36066  01C4C8  50E3               	movf	plusw1,w,c
 36067  01C4CA  58DE               	subwfb	postinc2,w,c
 36068  01C4CC  0EEB               	movlw	-21
 36069  01C4CE  50E3               	movf	plusw1,w,c
 36070  01C4D0  58DE               	subwfb	postinc2,w,c
 36071  01C4D2  0EEC               	movlw	-20
 36072  01C4D4  50E3               	movf	plusw1,w,c
 36073  01C4D6  58DE               	subwfb	postinc2,w,c
 36074  01C4D8  0EED               	movlw	-19
 36075  01C4DA  50E3               	movf	plusw1,w,c
 36076  01C4DC  58DE               	subwfb	postinc2,w,c
 36077  01C4DE  A0D8               	btfss	status,0,c
 36078  01C4E0  D021               	goto	l15665
 36079                           
 36080                           ;stkvar	_divisor @ sp[(-10)+-16]
 36081                           ;stkvar	_dividend @ sp[(-10)+-8]
 36082  01C4E2  50E1               	movf	fsr1l,w,c
 36083  01C4E4  0FEE               	addlw	-18
 36084  01C4E6  6ED9               	movwf	fsr2l,c
 36085  01C4E8  50E2               	movf	fsr1h,w,c
 36086  01C4EA  6EDA               	movwf	fsr2h,c
 36087  01C4EC  0EFF               	movlw	255
 36088  01C4EE  22DA               	addwfc	fsr2h,f,c
 36089  01C4F0  0EE6               	movlw	-26
 36090  01C4F2  50E3               	movf	plusw1,w,c
 36091  01C4F4  5EDE               	subwf	postinc2,f,c
 36092  01C4F6  0EE7               	movlw	-25
 36093  01C4F8  50E3               	movf	plusw1,w,c
 36094  01C4FA  5ADE               	subwfb	postinc2,f,c
 36095  01C4FC  0EE8               	movlw	-24
 36096  01C4FE  50E3               	movf	plusw1,w,c
 36097  01C500  5ADE               	subwfb	postinc2,f,c
 36098  01C502  0EE9               	movlw	-23
 36099  01C504  50E3               	movf	plusw1,w,c
 36100  01C506  5ADE               	subwfb	postinc2,f,c
 36101  01C508  0EEA               	movlw	-22
 36102  01C50A  50E3               	movf	plusw1,w,c
 36103  01C50C  5ADE               	subwfb	postinc2,f,c
 36104  01C50E  0EEB               	movlw	-21
 36105  01C510  50E3               	movf	plusw1,w,c
 36106  01C512  5ADE               	subwfb	postinc2,f,c
 36107  01C514  0EEC               	movlw	-20
 36108  01C516  50E3               	movf	plusw1,w,c
 36109  01C518  5ADE               	subwfb	postinc2,f,c
 36110  01C51A  0EED               	movlw	-19
 36111  01C51C  50E3               	movf	plusw1,w,c
 36112  01C51E  5ADE               	subwfb	postinc2,f,c
 36113                           
 36114                           ;stkvar	_quotient @ sp[(-10)+0]
 36115  01C520  0EF6               	movlw	-10
 36116  01C522  80E3               	bsf	plusw1,0,c
 36117  01C524                     l15665:
 36118                           
 36119                           ;stkvar	_divisor @ sp[(-10)+-16]
 36120  01C524  90D8               	bcf	status,0,c
 36121  01C526  0EED               	movlw	-19
 36122  01C528  32E3               	rrcf	plusw1,f,c
 36123  01C52A  0EEC               	movlw	-20
 36124  01C52C  32E3               	rrcf	plusw1,f,c
 36125  01C52E  0EEB               	movlw	-21
 36126  01C530  32E3               	rrcf	plusw1,f,c
 36127  01C532  0EEA               	movlw	-22
 36128  01C534  32E3               	rrcf	plusw1,f,c
 36129  01C536  0EE9               	movlw	-23
 36130  01C538  32E3               	rrcf	plusw1,f,c
 36131  01C53A  0EE8               	movlw	-24
 36132  01C53C  32E3               	rrcf	plusw1,f,c
 36133  01C53E  0EE7               	movlw	-25
 36134  01C540  32E3               	rrcf	plusw1,f,c
 36135  01C542  0EE6               	movlw	-26
 36136  01C544  32E3               	rrcf	plusw1,f,c
 36137                           
 36138                           ;stkvar	_counter @ sp[(-10)+9]
 36139  01C546  0EFF               	movlw	-1
 36140  01C548  50E3               	movf	plusw1,w,c
 36141  01C54A  6E2A               	movwf	btemp^0,c
 36142  01C54C  0E01               	movlw	1
 36143  01C54E  5E2A               	subwf	btemp^0,f,c
 36144  01C550  0EFF               	movlw	-1
 36145  01C552  0060  F0AB  FFE3   	movff	btemp,plusw1
 36146  01C558  A4D8               	btfss	status,2,c
 36147  01C55A  D791               	goto	u14610
 36148  01C55C                     u14630:
 36149                           
 36150                           ;stkvar	_sign @ sp[(-10)+8]
 36151  01C55C  0EFE               	movlw	-2
 36152  01C55E  50E3               	movf	plusw1,w,c
 36153  01C560  B4D8               	btfsc	status,2,c
 36154  01C562  D025               	goto	u14650
 36155                           
 36156                           ;stkvar	_quotient @ sp[(-10)+0]
 36157                           ;stkvar	_quotient @ sp[(-10)+0]
 36158  01C564  0EF6               	movlw	-10
 36159  01C566  6CE3               	negf	plusw1,c
 36160  01C568  0EF7               	movlw	-9
 36161  01C56A  1EE3               	comf	plusw1,f,c
 36162  01C56C  0EF8               	movlw	-8
 36163  01C56E  1EE3               	comf	plusw1,f,c
 36164  01C570  0EF9               	movlw	-7
 36165  01C572  1EE3               	comf	plusw1,f,c
 36166  01C574  0EFA               	movlw	-6
 36167  01C576  1EE3               	comf	plusw1,f,c
 36168  01C578  0EFB               	movlw	-5
 36169  01C57A  1EE3               	comf	plusw1,f,c
 36170  01C57C  0EFC               	movlw	-4
 36171  01C57E  1EE3               	comf	plusw1,f,c
 36172  01C580  0EFD               	movlw	-3
 36173  01C582  1EE3               	comf	plusw1,f,c
 36174  01C584  E314               	bnc	u14650
 36175  01C586  0EF7               	movlw	-9
 36176  01C588  2AE3               	incf	plusw1,f,c
 36177  01C58A  E311               	bnc	u14650
 36178  01C58C  0EF8               	movlw	-8
 36179  01C58E  2AE3               	incf	plusw1,f,c
 36180  01C590  E30E               	bnc	u14650
 36181  01C592  0EF9               	movlw	-7
 36182  01C594  2AE3               	incf	plusw1,f,c
 36183  01C596  E30B               	bnc	u14650
 36184  01C598  0EFA               	movlw	-6
 36185  01C59A  2AE3               	incf	plusw1,f,c
 36186  01C59C  E308               	bnc	u14650
 36187  01C59E  0EFB               	movlw	-5
 36188  01C5A0  2AE3               	incf	plusw1,f,c
 36189  01C5A2  E305               	bnc	u14650
 36190  01C5A4  0EFC               	movlw	-4
 36191  01C5A6  2AE3               	incf	plusw1,f,c
 36192  01C5A8  E302               	bnc	u14650
 36193  01C5AA  0EFD               	movlw	-3
 36194  01C5AC  2AE3               	incf	plusw1,f,c
 36195  01C5AE                     u14650:
 36196                           
 36197                           ;stkvar	_quotient @ sp[(-10)+0]
 36198  01C5AE  0EF6               	movlw	246
 36199  01C5B0  24E1               	addwf	fsr1l,w,c
 36200  01C5B2  6ED9               	movwf	fsr2l,c
 36201  01C5B4  0EFF               	movlw	255
 36202  01C5B6  20E2               	addwfc	fsr1h,w,c
 36203  01C5B8  6EDA               	movwf	fsr2h,c
 36204                           
 36205                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 36206  01C5BA  0E08               	movlw	8
 36207  01C5BC  6E2A               	movwf	btemp^0,c
 36208  01C5BE  0EEE               	movlw	-18
 36209  01C5C0                     us1466999:
 36210  01C5C0  006F FF7B FFE3     	movff	postinc2,plusw1
 36211  01C5C6  28E8               	incf	wreg,w,c
 36212  01C5C8  2E2A               	decfsz	btemp^0,f,c
 36213  01C5CA  D7FA               	bra	us1466999
 36214                           
 36215                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 36216  01C5CC  0EF6               	movlw	246
 36217  01C5CE  26E1               	addwf	fsr1l,f,c
 36218  01C5D0  0EFF               	movlw	255
 36219  01C5D2  22E2               	addwfc	fsr1h,f,c
 36220  01C5D4  0012               	return		;funcret
 36221  01C5D6                     __end_of___aodiv:
 36222                           	opt callstack 0
 36223                           
 36224 ;; *************** function _ctoa *****************
 36225 ;; Defined at:
 36226 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36227 ;; Parameters:    Size  Location     Type
 36228 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36229 ;;		 -> f(6), NULL(0), 
 36230 ;;  c               1  [STACK] unsigned char 
 36231 ;; Auto vars:     Size  Location     Type
 36232 ;;  w               2  [STACK] int 
 36233 ;;  l               2    0        int 
 36234 ;; Return value:  Size  Location     Type
 36235 ;;                  2  [STACK] int 
 36236 ;; Registers used:
 36237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36238 ;; Tracked objects:
 36239 ;;		On entry : 0/0
 36240 ;;		On exit  : 0/0
 36241 ;;		Unchanged: 0/0
 36242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36247 ;;Total ram usage:        0 bytes
 36248 ;; Hardware stack levels used:    1
 36249 ;; Hardware stack levels required when called:   20
 36250 ;; This function calls:
 36251 ;;		_pad
 36252 ;; This function is called by:
 36253 ;;		_vfpfcnvrt
 36254 ;; This function uses a reentrant model
 36255 ;;
 36256                           
 36257                           	psect	text118
 36258  00145A                     __ptext118:
 36259                           	opt callstack 0
 36260  00145A                     _ctoa:
 36261                           	opt callstack 0
 36262                           
 36263                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36264  00145A  52E6               	movf	postinc1,f,c
 36265  00145C  52E6               	movf	postinc1,f,c
 36266                           
 36267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 36268                           
 36269                           ;incstack = 0
 36270 ;; hardware stack exceeded
 36271  00145E  504A               	movf	_width^0,w,c
 36272  001460  104B               	iorwf	(_width+1)^0,w,c
 36273  001462  A4D8               	btfss	status,2,c
 36274  001464  D009               	goto	l15803
 36275                           
 36276                           ;stkvar	_w @ sp[(-2)+0]
 36277  001466  0EFE               	movlw	-2
 36278  001468  0060  F12B  FFE3   	movff	_width,plusw1
 36279  00146E  0EFF               	movlw	-1
 36280  001470  0060  F12F  FFE3   	movff	_width+1,plusw1
 36281  001476  D016               	goto	l15805
 36282  001478                     l15803:
 36283  001478  0EFF               	movlw	255
 36284  00147A  6E34               	movwf	(btemp+10)^0,c
 36285  00147C  0EFF               	movlw	255
 36286  00147E  6E35               	movwf	(btemp+11)^0,c
 36287  001480  0060  F128  F032   	movff	_width,btemp+8
 36288  001486  0060  F12C  F033   	movff	_width+1,btemp+9
 36289  00148C  5034               	movf	(btemp+10)^0,w,c
 36290  00148E  2632               	addwf	(btemp+8)^0,f,c
 36291  001490  5035               	movf	(btemp+11)^0,w,c
 36292  001492  2233               	addwfc	(btemp+9)^0,f,c
 36293                           
 36294                           ;stkvar	_w @ sp[(-2)+0]
 36295  001494  0EFE               	movlw	-2
 36296  001496  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36297  00149C  0EFF               	movlw	-1
 36298  00149E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36299  0014A4                     l15805:
 36300                           
 36301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 36302                           ;stkvar	_c @ sp[(-2)+-3]
 36303  0014A4  0EFB               	movlw	-5
 36304  0014A6  006F FF8C  F354    	movff	plusw1,_dbuf
 36305                           
 36306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 36307  0014AC  0103               	movlb	3	; () banked
 36308  0014AE  6B55               	clrf	(_dbuf+1)& (0+255),b
 36309                           
 36310                           ; BSR set to: 3
 36311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 36312                           ;stkvar	_w @ sp[(-2)+0]
 36313  0014B0  0EFE               	movlw	-2
 36314  0014B2  006F FF8F FFE6     	movff	plusw1,postinc1
 36315  0014B8  006F FF8F FFE6     	movff	plusw1,postinc1
 36316  0014BE  0E54               	movlw	low _dbuf
 36317  0014C0  6EE6               	movwf	postinc1,c
 36318  0014C2  0E03               	movlw	high _dbuf
 36319  0014C4  6EE6               	movwf	postinc1,c
 36320                           
 36321                           ;stkvar	_fp @ sp[(-6)+-2]
 36322  0014C6  0EF8               	movlw	-8
 36323  0014C8  006F FF8F FFE6     	movff	plusw1,postinc1
 36324  0014CE  006F FF8F FFE6     	movff	plusw1,postinc1
 36325  0014D4  EC77  F0FE         	call	_pad	;wreg free
 36326                           
 36327                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 36328  0014D8  0EFB               	movlw	251
 36329  0014DA  26E1               	addwf	fsr1l,f,c
 36330  0014DC  0EFF               	movlw	255
 36331  0014DE  22E2               	addwfc	fsr1h,f,c
 36332  0014E0  0012               	return		;funcret
 36333  0014E2                     __end_of_ctoa:
 36334                           	opt callstack 0
 36335                           
 36336 ;; *************** function _pad *****************
 36337 ;; Defined at:
 36338 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36339 ;; Parameters:    Size  Location     Type
 36340 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36341 ;;		 -> f(6), NULL(0), 
 36342 ;;  buf             2  [STACK] PTR unsigned char 
 36343 ;;		 -> dbuf(80), 
 36344 ;;  p               2  [STACK] int 
 36345 ;; Auto vars:     Size  Location     Type
 36346 ;;  w               2  [STACK] int 
 36347 ;;  i               2  [STACK] int 
 36348 ;; Return value:  Size  Location     Type
 36349 ;;                  2  [STACK] int 
 36350 ;; Registers used:
 36351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36352 ;; Tracked objects:
 36353 ;;		On entry : 0/3
 36354 ;;		On exit  : 0/0
 36355 ;;		Unchanged: 0/0
 36356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36361 ;;Total ram usage:        0 bytes
 36362 ;; Hardware stack levels used:    1
 36363 ;; Hardware stack levels required when called:   19
 36364 ;; This function calls:
 36365 ;;		_fputc
 36366 ;;		_fputs
 36367 ;;		_strlen
 36368 ;; This function is called by:
 36369 ;;		_ctoa
 36370 ;;		_dtoa
 36371 ;;		_efgtoa
 36372 ;;		_utoa
 36373 ;;		_xtoa
 36374 ;; This function uses a reentrant model
 36375 ;;
 36376                           
 36377                           	psect	text119
 36378  01FCEE                     __ptext119:
 36379                           	opt callstack 0
 36380  01FCEE                     _pad:
 36381                           	opt callstack 0
 36382                           
 36383                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36384  01FCEE  52E6               	movf	postinc1,f,c
 36385  01FCF0  52E6               	movf	postinc1,f,c
 36386  01FCF2  52E6               	movf	postinc1,f,c
 36387  01FCF4  52E6               	movf	postinc1,f,c
 36388                           
 36389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 36390                           
 36391                           ;incstack = 0
 36392 ;; hardware stack exceeded
 36393  01FCF6  A04E               	btfss	_flags^0,0,c
 36394  01FCF8  D010               	goto	l15585
 36395                           
 36396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 36397                           ;stkvar	_fp @ sp[(-4)+-2]
 36398  01FCFA  0EFA               	movlw	-6
 36399  01FCFC  006F FF8F FFE6     	movff	plusw1,postinc1
 36400  01FD02  006F FF8F FFE6     	movff	plusw1,postinc1
 36401                           
 36402                           ;stkvar	_buf @ sp[(-6)+-4]
 36403  01FD08  0EF6               	movlw	-10
 36404  01FD0A  006F FF8F FFE6     	movff	plusw1,postinc1
 36405  01FD10  006F FF8F FFE6     	movff	plusw1,postinc1
 36406  01FD16  EC74  F008         	call	_fputs	;wreg free
 36407  01FD1A                     l15585:
 36408                           
 36409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 36410                           ;stkvar	_p @ sp[(-4)+-6]
 36411  01FD1A  0EF7               	movlw	-9
 36412  01FD1C  BEE3               	btfsc	plusw1,7,c
 36413  01FD1E  D011               	goto	l15589
 36414                           
 36415                           ;stkvar	_p @ sp[(-4)+-6]
 36416                           ;stkvar	_w @ sp[(-4)+0]
 36417  01FD20  0EF6               	movlw	-10
 36418  01FD22  006F FF8C  F02A    	movff	plusw1,btemp
 36419  01FD28  0EFC               	movlw	-4
 36420  01FD2A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36421  01FD30  0EF7               	movlw	-9
 36422  01FD32  006F FF8C  F02A    	movff	plusw1,btemp
 36423  01FD38  0EFD               	movlw	-3
 36424  01FD3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36425  01FD40  D004               	goto	l2464
 36426  01FD42                     l15589:
 36427                           
 36428                           ;stkvar	_w @ sp[(-4)+0]
 36429  01FD42  0EFC               	movlw	-4
 36430  01FD44  6AE3               	clrf	plusw1,c
 36431  01FD46  0EFD               	movlw	-3
 36432  01FD48  6AE3               	clrf	plusw1,c
 36433  01FD4A                     l2464:
 36434                           
 36435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 36436                           ;stkvar	_i @ sp[(-4)+2]
 36437  01FD4A  0EFE               	movlw	-2
 36438  01FD4C  6AE3               	clrf	plusw1,c
 36439  01FD4E  0EFF               	movlw	-1
 36440  01FD50  6AE3               	clrf	plusw1,c
 36441                           
 36442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36443  01FD52  D01E               	goto	l15595
 36444  01FD54                     l15591:
 36445                           
 36446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 36447                           ;stkvar	_fp @ sp[(-4)+-2]
 36448  01FD54  0EFA               	movlw	-6
 36449  01FD56  006F FF8F FFE6     	movff	plusw1,postinc1
 36450  01FD5C  006F FF8F FFE6     	movff	plusw1,postinc1
 36451  01FD62  0E20               	movlw	32
 36452  01FD64  6EE6               	movwf	postinc1,c
 36453  01FD66  0E00               	movlw	0
 36454  01FD68  6EE6               	movwf	postinc1,c
 36455  01FD6A  EC40  F0FC         	call	_fputc	;wreg free
 36456                           
 36457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 36458                           ;stkvar	_i @ sp[(-4)+2]
 36459  01FD6E  0EFE               	movlw	-2
 36460  01FD70  50E3               	movf	plusw1,w,c
 36461  01FD72  0F01               	addlw	1
 36462  01FD74  6E2A               	movwf	btemp^0,c
 36463  01FD76  0EFE               	movlw	-2
 36464  01FD78  0060  F0AB  FFE3   	movff	btemp,plusw1
 36465  01FD7E  6A2A               	clrf	btemp^0,c
 36466  01FD80  0EFF               	movlw	-1
 36467  01FD82  50E3               	movf	plusw1,w,c
 36468  01FD84  202A               	addwfc	btemp^0,w,c
 36469  01FD86  6E2A               	movwf	btemp^0,c
 36470  01FD88  0EFF               	movlw	-1
 36471  01FD8A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36472  01FD90                     l15595:
 36473                           
 36474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36475                           ;stkvar	_w @ sp[(-4)+0]
 36476                           ;stkvar	_i @ sp[(-4)+2]
 36477  01FD90  50E1               	movf	fsr1l,w,c
 36478  01FD92  0FFE               	addlw	-2
 36479  01FD94  6ED9               	movwf	fsr2l,c
 36480  01FD96  50E2               	movf	fsr1h,w,c
 36481  01FD98  6EDA               	movwf	fsr2h,c
 36482  01FD9A  0EFF               	movlw	255
 36483  01FD9C  22DA               	addwfc	fsr2h,f,c
 36484  01FD9E  0EFC               	movlw	-4
 36485  01FDA0  50E3               	movf	plusw1,w,c
 36486  01FDA2  5CDE               	subwf	postinc2,w,c
 36487  01FDA4  50DE               	movf	postinc2,w,c
 36488  01FDA6  0A80               	xorlw	128
 36489  01FDA8  6E2A               	movwf	btemp^0,c
 36490  01FDAA  0EFD               	movlw	-3
 36491  01FDAC  50E3               	movf	plusw1,w,c
 36492  01FDAE  0A80               	xorlw	128
 36493  01FDB0  582A               	subwfb	btemp^0,w,c
 36494  01FDB2  A0D8               	btfss	status,0,c
 36495  01FDB4  D7CF               	goto	l15591
 36496                           
 36497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 36498  01FDB6  B04E               	btfsc	_flags^0,0,c
 36499  01FDB8  D010               	goto	l15599
 36500                           
 36501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 36502                           ;stkvar	_fp @ sp[(-4)+-2]
 36503  01FDBA  0EFA               	movlw	-6
 36504  01FDBC  006F FF8F FFE6     	movff	plusw1,postinc1
 36505  01FDC2  006F FF8F FFE6     	movff	plusw1,postinc1
 36506                           
 36507                           ;stkvar	_buf @ sp[(-6)+-4]
 36508  01FDC8  0EF6               	movlw	-10
 36509  01FDCA  006F FF8F FFE6     	movff	plusw1,postinc1
 36510  01FDD0  006F FF8F FFE6     	movff	plusw1,postinc1
 36511  01FDD6  EC74  F008         	call	_fputs	;wreg free
 36512  01FDDA                     l15599:
 36513                           
 36514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 36515                           ;stkvar	_w @ sp[(-4)+0]
 36516                           ;stkvar	_buf @ sp[(-4)+-4]
 36517  01FDDA  0EF8               	movlw	-8
 36518  01FDDC  006F FF8F FFE6     	movff	plusw1,postinc1
 36519  01FDE2  006F FF8F FFE6     	movff	plusw1,postinc1
 36520  01FDE8  ECD6  F007         	call	_strlen	;wreg free
 36521  01FDEC  0EFC               	movlw	-4
 36522  01FDEE  50E3               	movf	plusw1,w,c
 36523  01FDF0  262A               	addwf	btemp^0,f,c
 36524  01FDF2  0EFD               	movlw	-3
 36525  01FDF4  50E3               	movf	plusw1,w,c
 36526  01FDF6  222B               	addwfc	(btemp+1)^0,f,c
 36527                           
 36528                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 36529  01FDF8  0EF6               	movlw	246
 36530  01FDFA  26E1               	addwf	fsr1l,f,c
 36531  01FDFC  0EFF               	movlw	255
 36532  01FDFE  22E2               	addwfc	fsr1h,f,c
 36533  01FE00  0012               	return		;funcret
 36534  01FE02                     __end_of_pad:
 36535                           	opt callstack 0
 36536                           
 36537 ;; *************** function _strlen *****************
 36538 ;; Defined at:
 36539 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 36540 ;; Parameters:    Size  Location     Type
 36541 ;;  s               2  [STACK] PTR const unsigned char 
 36542 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36543 ;;		 -> dbuf(80), spin(120), STR_84(9), STR_83(12), 
 36544 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36545 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 36546 ;; Auto vars:     Size  Location     Type
 36547 ;;  a               2  [STACK] PTR const unsigned char 
 36548 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36549 ;;		 -> dbuf(80), spin(120), STR_84(9), STR_83(12), 
 36550 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36551 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 36552 ;; Return value:  Size  Location     Type
 36553 ;;                  2  [STACK] unsigned int 
 36554 ;; Registers used:
 36555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 36556 ;; Tracked objects:
 36557 ;;		On entry : 0/0
 36558 ;;		On exit  : 0/0
 36559 ;;		Unchanged: 0/0
 36560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36565 ;;Total ram usage:        0 bytes
 36566 ;; Hardware stack levels used:    1
 36567 ;; Hardware stack levels required when called:   15
 36568 ;; This function calls:
 36569 ;;		Nothing
 36570 ;; This function is called by:
 36571 ;;		_eaDogM_WriteString
 36572 ;;		_spinners
 36573 ;;		_calc_bsoc
 36574 ;;		_pad
 36575 ;;		_stoa
 36576 ;; This function uses a reentrant model
 36577 ;;
 36578                           
 36579                           	psect	text120
 36580  000FAC                     __ptext120:
 36581                           	opt callstack 0
 36582  000FAC                     _strlen:
 36583                           	opt callstack 0
 36584                           
 36585                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36586  000FAC  52E6               	movf	postinc1,f,c
 36587  000FAE  52E6               	movf	postinc1,f,c
 36588                           
 36589                           ;stkvar	_s @ sp[(-2)+-2]
 36590                           
 36591                           ;incstack = 0
 36592 ;; hardware stack exceeded
 36593  000FB0  0EFC               	movlw	-4
 36594  000FB2  006F FF8C  F034    	movff	plusw1,btemp+10
 36595  000FB8  0EFD               	movlw	-3
 36596  000FBA  006F FF8C  F035    	movff	plusw1,btemp+11
 36597                           
 36598                           ;stkvar	_a @ sp[(-2)+0]
 36599  000FC0  0EFF               	movlw	-1
 36600  000FC2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36601  000FC8  0EFE               	movlw	-2
 36602  000FCA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36603  000FD0  D011               	goto	l9849
 36604  000FD2                     l9847:
 36605                           
 36606                           ;stkvar	_s @ sp[(-2)+-2]
 36607  000FD2  0EFC               	movlw	-4
 36608  000FD4  50E3               	movf	plusw1,w,c
 36609  000FD6  0F01               	addlw	1
 36610  000FD8  6E2A               	movwf	btemp^0,c
 36611  000FDA  0EFC               	movlw	-4
 36612  000FDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 36613  000FE2  6A2A               	clrf	btemp^0,c
 36614  000FE4  0EFD               	movlw	-3
 36615  000FE6  50E3               	movf	plusw1,w,c
 36616  000FE8  202A               	addwfc	btemp^0,w,c
 36617  000FEA  6E2A               	movwf	btemp^0,c
 36618  000FEC  0EFD               	movlw	-3
 36619  000FEE  0060  F0AB  FFE3   	movff	btemp,plusw1
 36620  000FF4                     l9849:
 36621                           
 36622                           ;stkvar	_s @ sp[(-2)+-2]
 36623  000FF4  0EFC               	movlw	-4
 36624  000FF6  006F FF8F FFF6     	movff	plusw1,tblptrl
 36625  000FFC  0EFD               	movlw	-3
 36626  000FFE  006F FF8F FFF7     	movff	plusw1,tblptrh
 36627  001004  0E00               	movlw	low (__mediumconst shr (0+16))
 36628  001006  6EF8               	movwf	tblptru,c
 36629  001008  0E1F               	movlw	(high __ramtop+-1)
 36630  00100A  64F7               	cpfsgt	tblptrh,c
 36631  00100C  D003               	bra	u7217
 36632  00100E  0008               	tblrd		*
 36633  001010  50F5               	movf	tablat,w,c
 36634  001012  D007               	bra	u7210
 36635  001014                     u7217:
 36636  001014  006F FFDB FFE9     	movff	tblptrl,fsr0l
 36637  00101A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 36638  001020  50EF               	movf	indf0,w,c
 36639  001022                     u7210:
 36640  001022  0900               	iorlw	0
 36641  001024  A4D8               	btfss	status,2,c
 36642  001026  D7D5               	goto	l9847
 36643                           
 36644                           ;stkvar	_a @ sp[(-2)+0]
 36645                           ;stkvar	_s @ sp[(-2)+-2]
 36646  001028  0EFC               	movlw	-4
 36647  00102A  006F FF8C  F02A    	movff	plusw1,btemp
 36648  001030  0EFD               	movlw	-3
 36649  001032  006F FF8C  F02B    	movff	plusw1,btemp+1
 36650  001038  0EFE               	movlw	-2
 36651  00103A  50E3               	movf	plusw1,w,c
 36652  00103C  5E2A               	subwf	btemp^0,f,c
 36653  00103E  0EFF               	movlw	-1
 36654  001040  50E3               	movf	plusw1,w,c
 36655  001042  5A2B               	subwfb	(btemp+1)^0,f,c
 36656                           
 36657                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 36658  001044  52E5               	movf	postdec1,f,c
 36659  001046  52E5               	movf	postdec1,f,c
 36660  001048  52E5               	movf	postdec1,f,c
 36661  00104A  52E5               	movf	postdec1,f,c
 36662  00104C  0012               	return		;funcret
 36663  00104E                     __end_of_strlen:
 36664                           	opt callstack 0
 36665                           
 36666 ;; *************** function _fputs *****************
 36667 ;; Defined at:
 36668 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 36669 ;; Parameters:    Size  Location     Type
 36670 ;;  s               2  [STACK] PTR const unsigned char 
 36671 ;;		 -> dbuf(80), 
 36672 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36673 ;;		 -> f(6), NULL(0), 
 36674 ;; Auto vars:     Size  Location     Type
 36675 ;;  i               2  [STACK] int 
 36676 ;;  c               1  [STACK] unsigned char 
 36677 ;; Return value:  Size  Location     Type
 36678 ;;                  2  [STACK] int 
 36679 ;; Registers used:
 36680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36681 ;; Tracked objects:
 36682 ;;		On entry : 0/3
 36683 ;;		On exit  : 0/0
 36684 ;;		Unchanged: 0/0
 36685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36690 ;;Total ram usage:        0 bytes
 36691 ;; Hardware stack levels used:    1
 36692 ;; Hardware stack levels required when called:   18
 36693 ;; This function calls:
 36694 ;;		_fputc
 36695 ;; This function is called by:
 36696 ;;		_pad
 36697 ;; This function uses a reentrant model
 36698 ;;
 36699                           
 36700                           	psect	text121
 36701  0010E8                     __ptext121:
 36702                           	opt callstack 0
 36703  0010E8                     _fputs:
 36704                           	opt callstack 0
 36705                           
 36706                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36707  0010E8  52E6               	movf	postinc1,f,c
 36708  0010EA  52E6               	movf	postinc1,f,c
 36709  0010EC  52E6               	movf	postinc1,f,c
 36710                           
 36711                           ;stkvar	_i @ sp[(-3)+0]
 36712                           
 36713                           ;incstack = 0
 36714 ;; hardware stack exceeded
 36715  0010EE  0EFD               	movlw	-3
 36716  0010F0  6AE3               	clrf	plusw1,c
 36717  0010F2  0EFE               	movlw	-2
 36718  0010F4  6AE3               	clrf	plusw1,c
 36719  0010F6  D01F               	goto	l15525
 36720  0010F8                     l15521:
 36721                           
 36722                           ;stkvar	_fp @ sp[(-3)+-4]
 36723  0010F8  0EF9               	movlw	-7
 36724  0010FA  006F FF8F FFE6     	movff	plusw1,postinc1
 36725  001100  006F FF8F FFE6     	movff	plusw1,postinc1
 36726                           
 36727                           ;stkvar	_c @ sp[(-5)+2]
 36728  001106  0EFD               	movlw	-3
 36729  001108  50E3               	movf	plusw1,w,c
 36730  00110A  6EE6               	movwf	postinc1,c
 36731  00110C  0E00               	movlw	0
 36732  00110E  6EE6               	movwf	postinc1,c
 36733  001110  EC40  F0FC         	call	_fputc	;wreg free
 36734                           
 36735                           ;stkvar	_i @ sp[(-3)+0]
 36736  001114  0EFD               	movlw	-3
 36737  001116  50E3               	movf	plusw1,w,c
 36738  001118  0F01               	addlw	1
 36739  00111A  6E2A               	movwf	btemp^0,c
 36740  00111C  0EFD               	movlw	-3
 36741  00111E  0060  F0AB  FFE3   	movff	btemp,plusw1
 36742  001124  6A2A               	clrf	btemp^0,c
 36743  001126  0EFE               	movlw	-2
 36744  001128  50E3               	movf	plusw1,w,c
 36745  00112A  202A               	addwfc	btemp^0,w,c
 36746  00112C  6E2A               	movwf	btemp^0,c
 36747  00112E  0EFE               	movlw	-2
 36748  001130  0060  F0AB  FFE3   	movff	btemp,plusw1
 36749  001136                     l15525:
 36750                           
 36751                           ;stkvar	_i @ sp[(-3)+0]
 36752  001136  0EFD               	movlw	-3
 36753  001138  006F FF8C  F034    	movff	plusw1,btemp+10
 36754  00113E  0EFE               	movlw	-2
 36755  001140  006F FF8C  F035    	movff	plusw1,btemp+11
 36756                           
 36757                           ;stkvar	_s @ sp[(-3)+-2]
 36758  001146  0EFB               	movlw	-5
 36759  001148  006F FF8C  F032    	movff	plusw1,btemp+8
 36760  00114E  0EFC               	movlw	-4
 36761  001150  006F FF8C  F033    	movff	plusw1,btemp+9
 36762  001156  5034               	movf	(btemp+10)^0,w,c
 36763  001158  2432               	addwf	(btemp+8)^0,w,c
 36764  00115A  6ED9               	movwf	fsr2l,c
 36765  00115C  5035               	movf	(btemp+11)^0,w,c
 36766  00115E  2033               	addwfc	(btemp+9)^0,w,c
 36767  001160  6EDA               	movwf	fsr2h,c
 36768  001162  50DF               	movf	indf2,w,c
 36769  001164  6E35               	movwf	(btemp+11)^0,c
 36770                           
 36771                           ;stkvar	_c @ sp[(-3)+2]
 36772  001166  0EFF               	movlw	-1
 36773  001168  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36774  00116E  0EFF               	movlw	-1
 36775  001170  50E3               	movf	plusw1,w,c
 36776  001172  A4D8               	btfss	status,2,c
 36777  001174  D7C1               	goto	l15521
 36778                           
 36779                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36780  001176  0EF9               	movlw	249
 36781  001178  26E1               	addwf	fsr1l,f,c
 36782  00117A  0EFF               	movlw	255
 36783  00117C  22E2               	addwfc	fsr1h,f,c
 36784  00117E  0012               	return		;funcret
 36785  001180                     __end_of_fputs:
 36786                           	opt callstack 0
 36787                           
 36788 ;; *************** function _fputc *****************
 36789 ;; Defined at:
 36790 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 36791 ;; Parameters:    Size  Location     Type
 36792 ;;  c               2  [STACK] int 
 36793 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36794 ;;		 -> f(6), NULL(0), 
 36795 ;; Auto vars:     Size  Location     Type
 36796 ;;		None
 36797 ;; Return value:  Size  Location     Type
 36798 ;;                  2  [STACK] int 
 36799 ;; Registers used:
 36800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36801 ;; Tracked objects:
 36802 ;;		On entry : 0/0
 36803 ;;		On exit  : 0/0
 36804 ;;		Unchanged: 0/0
 36805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36810 ;;Total ram usage:        0 bytes
 36811 ;; Hardware stack levels used:    1
 36812 ;; Hardware stack levels required when called:   17
 36813 ;; This function calls:
 36814 ;;		_putch
 36815 ;; This function is called by:
 36816 ;;		_pad
 36817 ;;		_stoa
 36818 ;;		_vfpfcnvrt
 36819 ;;		_fputs
 36820 ;; This function uses a reentrant model
 36821 ;;
 36822                           
 36823                           	psect	text122
 36824  01F880                     __ptext122:
 36825                           	opt callstack 0
 36826  01F880                     _fputc:
 36827                           	opt callstack 0
 36828                           
 36829                           ;stkvar	_fp @ sp[(0)+-4]
 36830                           
 36831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36832                           ;incstack = 0
 36833 ;; hardware stack exceeded
 36834  01F880  0EFC               	movlw	-4
 36835  01F882  006F FF8C  F02A    	movff	plusw1,btemp
 36836  01F888  0EFD               	movlw	-3
 36837  01F88A  50E3               	movf	plusw1,w,c
 36838  01F88C  102A               	iorwf	btemp^0,w,c
 36839  01F88E  B4D8               	btfsc	status,2,c
 36840  01F890  D009               	goto	u14330
 36841                           
 36842                           ;stkvar	_fp @ sp[(0)+-4]
 36843  01F892  0EFC               	movlw	-4
 36844  01F894  006F FF8C  F02A    	movff	plusw1,btemp
 36845  01F89A  0EFD               	movlw	-3
 36846  01F89C  50E3               	movf	plusw1,w,c
 36847  01F89E  102A               	iorwf	btemp^0,w,c
 36848  01F8A0  A4D8               	btfss	status,2,c
 36849  01F8A2  D006               	goto	l15509
 36850  01F8A4                     u14330:
 36851                           
 36852                           ;stkvar	_c @ sp[(0)+-2]
 36853  01F8A4  0EFE               	movlw	-2
 36854  01F8A6  50E3               	movf	plusw1,w,c
 36855  01F8A8  6EE6               	movwf	postinc1,c
 36856  01F8AA  EC4A  F016         	call	_putch	;wreg free
 36857  01F8AE  D075               	goto	l3540
 36858  01F8B0                     l15509:
 36859                           
 36860                           ;stkvar	_fp @ sp[(0)+-4]
 36861  01F8B0  0EFC               	movlw	-4
 36862  01F8B2  006F FF8C  F034    	movff	plusw1,btemp+10
 36863  01F8B8  0EFD               	movlw	-3
 36864  01F8BA  006F FF8C  F035    	movff	plusw1,btemp+11
 36865  01F8C0  0E04               	movlw	4
 36866  01F8C2  2434               	addwf	(btemp+10)^0,w,c
 36867  01F8C4  6ED9               	movwf	fsr2l,c
 36868  01F8C6  0E00               	movlw	0
 36869  01F8C8  2035               	addwfc	(btemp+11)^0,w,c
 36870  01F8CA  6EDA               	movwf	fsr2h,c
 36871  01F8CC  50DE               	movf	postinc2,w,c
 36872  01F8CE  10DE               	iorwf	postinc2,w,c
 36873  01F8D0  B4D8               	btfsc	status,2,c
 36874  01F8D2  D026               	goto	u14350
 36875                           
 36876                           ;stkvar	_fp @ sp[(0)+-4]
 36877  01F8D4  0EFC               	movlw	-4
 36878  01F8D6  006F FF8C  F034    	movff	plusw1,btemp+10
 36879  01F8DC  0EFD               	movlw	-3
 36880  01F8DE  006F FF8C  F035    	movff	plusw1,btemp+11
 36881  01F8E4  0E04               	movlw	4
 36882  01F8E6  2434               	addwf	(btemp+10)^0,w,c
 36883  01F8E8  6ED9               	movwf	fsr2l,c
 36884  01F8EA  0E00               	movlw	0
 36885  01F8EC  2035               	addwfc	(btemp+11)^0,w,c
 36886  01F8EE  6EDA               	movwf	fsr2h,c
 36887                           
 36888                           ;stkvar	_fp @ sp[(0)+-4]
 36889  01F8F0  0EFC               	movlw	-4
 36890  01F8F2  006F FF8C  F034    	movff	plusw1,btemp+10
 36891  01F8F8  0EFD               	movlw	-3
 36892  01F8FA  006F FF8C  F035    	movff	plusw1,btemp+11
 36893  01F900  0E02               	movlw	2
 36894  01F902  2434               	addwf	(btemp+10)^0,w,c
 36895  01F904  6EE9               	movwf	fsr0l,c
 36896  01F906  0E00               	movlw	0
 36897  01F908  2035               	addwfc	(btemp+11)^0,w,c
 36898  01F90A  6EEA               	movwf	fsr0h,c
 36899  01F90C  50DE               	movf	postinc2,w,c
 36900  01F90E  5CEE               	subwf	postinc0,w,c
 36901  01F910  50EE               	movf	postinc0,w,c
 36902  01F912  0A80               	xorlw	128
 36903  01F914  6E2A               	movwf	btemp^0,c
 36904  01F916  50DE               	movf	postinc2,w,c
 36905  01F918  0A80               	xorlw	128
 36906  01F91A  582A               	subwfb	btemp^0,w,c
 36907  01F91C  B0D8               	btfsc	status,0,c
 36908  01F91E  D03D               	goto	l3540
 36909  01F920                     u14350:
 36910                           
 36911                           ;stkvar	_c @ sp[(0)+-2]
 36912                           ;stkvar	_fp @ sp[(0)+-4]
 36913  01F920  0EFC               	movlw	-4
 36914  01F922  006F FF8C  F034    	movff	plusw1,btemp+10
 36915  01F928  0EFD               	movlw	-3
 36916  01F92A  006F FF8C  F035    	movff	plusw1,btemp+11
 36917  01F930  0E02               	movlw	2
 36918  01F932  2434               	addwf	(btemp+10)^0,w,c
 36919  01F934  6ED9               	movwf	fsr2l,c
 36920  01F936  0E00               	movlw	0
 36921  01F938  2035               	addwfc	(btemp+11)^0,w,c
 36922  01F93A  6EDA               	movwf	fsr2h,c
 36923  01F93C  006F FF78  F034    	movff	postinc2,btemp+10
 36924  01F942  006F FF74  F035    	movff	postdec2,btemp+11
 36925                           
 36926                           ;stkvar	_fp @ sp[(0)+-4]
 36927  01F948  0EFC               	movlw	-4
 36928  01F94A  006F FF8F FFD9     	movff	plusw1,fsr2l
 36929  01F950  0EFD               	movlw	-3
 36930  01F952  006F FF8F FFDA     	movff	plusw1,fsr2h
 36931  01F958  006F FF78  F032    	movff	postinc2,btemp+8
 36932  01F95E  006F FF74  F033    	movff	postdec2,btemp+9
 36933  01F964  5034               	movf	(btemp+10)^0,w,c
 36934  01F966  2432               	addwf	(btemp+8)^0,w,c
 36935  01F968  6ED9               	movwf	fsr2l,c
 36936  01F96A  5035               	movf	(btemp+11)^0,w,c
 36937  01F96C  2033               	addwfc	(btemp+9)^0,w,c
 36938  01F96E  6EDA               	movwf	fsr2h,c
 36939  01F970  0EFE               	movlw	-2
 36940  01F972  006F FF8F FFDF     	movff	plusw1,indf2
 36941                           
 36942                           ;stkvar	_fp @ sp[(0)+-4]
 36943  01F978  0EFC               	movlw	-4
 36944  01F97A  006F FF8C  F034    	movff	plusw1,btemp+10
 36945  01F980  0EFD               	movlw	-3
 36946  01F982  006F FF8C  F035    	movff	plusw1,btemp+11
 36947  01F988  0E02               	movlw	2
 36948  01F98A  2434               	addwf	(btemp+10)^0,w,c
 36949  01F98C  6ED9               	movwf	fsr2l,c
 36950  01F98E  0E00               	movlw	0
 36951  01F990  2035               	addwfc	(btemp+11)^0,w,c
 36952  01F992  6EDA               	movwf	fsr2h,c
 36953  01F994  2ADE               	incf	postinc2,f,c
 36954  01F996  0E00               	movlw	0
 36955  01F998  22DD               	addwfc	postdec2,f,c
 36956  01F99A                     l3540:
 36957                           
 36958                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36959  01F99A  52E5               	movf	postdec1,f,c
 36960  01F99C  52E5               	movf	postdec1,f,c
 36961  01F99E  52E5               	movf	postdec1,f,c
 36962  01F9A0  52E5               	movf	postdec1,f,c
 36963  01F9A2  0012               	return		;funcret
 36964  01F9A4                     __end_of_fputc:
 36965                           	opt callstack 0
 36966                           
 36967 ;; *************** function _putch *****************
 36968 ;; Defined at:
 36969 ;;		line 420 in file "eadog.c"
 36970 ;; Parameters:    Size  Location     Type
 36971 ;;  c               1  [STACK] unsigned char 
 36972 ;; Auto vars:     Size  Location     Type
 36973 ;;		None
 36974 ;; Return value:  Size  Location     Type
 36975 ;;                  1  [STACK] void 
 36976 ;; Registers used:
 36977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36978 ;; Tracked objects:
 36979 ;;		On entry : 0/0
 36980 ;;		On exit  : 0/0
 36981 ;;		Unchanged: 0/0
 36982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36987 ;;Total ram usage:        0 bytes
 36988 ;; Hardware stack levels used:    1
 36989 ;; Hardware stack levels required when called:   16
 36990 ;; This function calls:
 36991 ;;		_ringBufS_put_dma
 36992 ;; This function is called by:
 36993 ;;		_fputc
 36994 ;; This function uses a reentrant model
 36995 ;;
 36996                           
 36997                           	psect	text123
 36998  002C94                     __ptext123:
 36999                           	opt callstack 0
 37000  002C94                     _putch:
 37001                           	opt callstack 0
 37002                           
 37003                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 37004                           ;stkvar	_c @ sp[(0)+-1]
 37005                           
 37006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37007                           ;incstack = 0
 37008 ;; hardware stack exceeded
 37009  002C94  0EFF               	movlw	-1
 37010  002C96  50E3               	movf	plusw1,w,c
 37011  002C98  6EE6               	movwf	postinc1,c
 37012  002C9A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 37013  002CA0  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 37014  002CA6  EC2E  F007         	call	_ringBufS_put_dma	;wreg free
 37015                           
 37016                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 37017  002CAA  52E5               	movf	postdec1,f,c
 37018  002CAC  0012               	return		;funcret
 37019  002CAE                     __end_of_putch:
 37020                           	opt callstack 0
 37021                           
 37022 ;; *************** function _ringBufS_put_dma *****************
 37023 ;; Defined at:
 37024 ;;		line 67 in file "ringbufs.c"
 37025 ;; Parameters:    Size  Location     Type
 37026 ;;  _this           2  [STACK] PTR struct ringBufS_t
 37027 ;;		 -> ring_buf1(67), 
 37028 ;;  c               1  [STACK] const unsigned char 
 37029 ;; Auto vars:     Size  Location     Type
 37030 ;;		None
 37031 ;; Return value:  Size  Location     Type
 37032 ;;                  1  [STACK] void 
 37033 ;; Registers used:
 37034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 37035 ;; Tracked objects:
 37036 ;;		On entry : 0/3B
 37037 ;;		On exit  : 0/0
 37038 ;;		Unchanged: 0/0
 37039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37044 ;;Total ram usage:        0 bytes
 37045 ;; Hardware stack levels used:    1
 37046 ;; Hardware stack levels required when called:   15
 37047 ;; This function calls:
 37048 ;;		Nothing
 37049 ;; This function is called by:
 37050 ;;		_send_lcd_data_dma
 37051 ;;		_putch
 37052 ;; This function uses a reentrant model
 37053 ;;
 37054                           
 37055                           	psect	text124
 37056  000E5C                     __ptext124:
 37057                           	opt callstack 0
 37058  000E5C                     _ringBufS_put_dma:
 37059                           	opt callstack 0
 37060                           
 37061                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 37062                           ;stkvar	__this @ sp[(0)+-2]
 37063                           
 37064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37065                           ;incstack = 0
 37066 ;; hardware stack exceeded
 37067  000E5C  0EFE               	movlw	-2
 37068  000E5E  006F FF8C  F034    	movff	plusw1,btemp+10
 37069  000E64  0EFF               	movlw	-1
 37070  000E66  006F FF8C  F035    	movff	plusw1,btemp+11
 37071  000E6C  0E42               	movlw	66
 37072  000E6E  2434               	addwf	(btemp+10)^0,w,c
 37073  000E70  6ED9               	movwf	fsr2l,c
 37074  000E72  0E00               	movlw	0
 37075  000E74  2035               	addwfc	(btemp+11)^0,w,c
 37076  000E76  6EDA               	movwf	fsr2h,c
 37077  000E78  0E40               	movlw	64
 37078  000E7A  60DF               	cpfslt	indf2,c
 37079  000E7C  D040               	goto	l1748
 37080                           
 37081                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 37082                           ;stkvar	_c @ sp[(0)+-3]
 37083                           ;stkvar	__this @ sp[(0)+-2]
 37084  000E7E  0EFE               	movlw	-2
 37085  000E80  006F FF8C  F034    	movff	plusw1,btemp+10
 37086  000E86  0EFF               	movlw	-1
 37087  000E88  006F FF8C  F035    	movff	plusw1,btemp+11
 37088  000E8E  0E40               	movlw	64
 37089  000E90  2434               	addwf	(btemp+10)^0,w,c
 37090  000E92  6ED9               	movwf	fsr2l,c
 37091  000E94  0E00               	movlw	0
 37092  000E96  2035               	addwfc	(btemp+11)^0,w,c
 37093  000E98  6EDA               	movwf	fsr2h,c
 37094  000E9A  50DF               	movf	indf2,w,c
 37095  000E9C  6E35               	movwf	(btemp+11)^0,c
 37096                           
 37097                           ;stkvar	__this @ sp[(0)+-2]
 37098  000E9E  0EFE               	movlw	-2
 37099  000EA0  006F FF8C  F032    	movff	plusw1,btemp+8
 37100  000EA6  0EFF               	movlw	-1
 37101  000EA8  006F FF8C  F033    	movff	plusw1,btemp+9
 37102  000EAE  5035               	movf	(btemp+11)^0,w,c
 37103  000EB0  2432               	addwf	(btemp+8)^0,w,c
 37104  000EB2  6ED9               	movwf	fsr2l,c
 37105  000EB4  0E00               	movlw	0
 37106  000EB6  2033               	addwfc	(btemp+9)^0,w,c
 37107  000EB8  6EDA               	movwf	fsr2h,c
 37108  000EBA  0EFD               	movlw	-3
 37109  000EBC  006F FF8F FFDF     	movff	plusw1,indf2
 37110                           
 37111                           ;ringbufs.c: 71:   ++_this->head;
 37112                           ;stkvar	__this @ sp[(0)+-2]
 37113  000EC2  0EFE               	movlw	-2
 37114  000EC4  006F FF8C  F034    	movff	plusw1,btemp+10
 37115  000ECA  0EFF               	movlw	-1
 37116  000ECC  006F FF8C  F035    	movff	plusw1,btemp+11
 37117  000ED2  0E40               	movlw	64
 37118  000ED4  2434               	addwf	(btemp+10)^0,w,c
 37119  000ED6  6ED9               	movwf	fsr2l,c
 37120  000ED8  0E00               	movlw	0
 37121  000EDA  2035               	addwfc	(btemp+11)^0,w,c
 37122  000EDC  6EDA               	movwf	fsr2h,c
 37123  000EDE  2ADF               	incf	indf2,f,c
 37124                           
 37125                           ;ringbufs.c: 72:   ++_this->count;
 37126                           ;stkvar	__this @ sp[(0)+-2]
 37127  000EE0  0EFE               	movlw	-2
 37128  000EE2  006F FF8C  F034    	movff	plusw1,btemp+10
 37129  000EE8  0EFF               	movlw	-1
 37130  000EEA  006F FF8C  F035    	movff	plusw1,btemp+11
 37131  000EF0  0E42               	movlw	66
 37132  000EF2  2434               	addwf	(btemp+10)^0,w,c
 37133  000EF4  6ED9               	movwf	fsr2l,c
 37134  000EF6  0E00               	movlw	0
 37135  000EF8  2035               	addwfc	(btemp+11)^0,w,c
 37136  000EFA  6EDA               	movwf	fsr2h,c
 37137  000EFC  2ADF               	incf	indf2,f,c
 37138  000EFE                     l1748:
 37139                           
 37140                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 37141  000EFE  52E5               	movf	postdec1,f,c
 37142  000F00  52E5               	movf	postdec1,f,c
 37143  000F02  52E5               	movf	postdec1,f,c
 37144  000F04  0012               	return		;funcret
 37145  000F06                     __end_of_ringBufS_put_dma:
 37146                           	opt callstack 0
 37147                           
 37148 ;; *************** function _atoi *****************
 37149 ;; Defined at:
 37150 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 37151 ;; Parameters:    Size  Location     Type
 37152 ;;  s               2  [STACK] PTR const unsigned char 
 37153 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 37154 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 37155 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 37156 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 37157 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 37158 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(21), 
 37159 ;;		 -> STR_76(21), STR_75(21), STR_74(21), STR_73(21), 
 37160 ;;		 -> STR_72(21), STR_71(21), STR_70(21), STR_69(21), 
 37161 ;;		 -> STR_68(18), STR_67(21), STR_66(21), STR_65(21), 
 37162 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 37163 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 37164 ;;		 -> STR_56(21), STR_55(20), STR_54(21), STR_53(21), 
 37165 ;;		 -> STR_52(21), STR_51(22), STR_50(22), STR_49(22), 
 37166 ;;		 -> STR_48(23), STR_47(23), STR_46(23), STR_45(29), 
 37167 ;;		 -> STR_44(23), STR_43(23), STR_42(22), STR_41(22), 
 37168 ;;		 -> STR_40(22), STR_39(22), STR_38(22), STR_37(22), 
 37169 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 37170 ;;		 -> STR_32(22), STR_31(22), STR_30(17), STR_29(16), 
 37171 ;;		 -> STR_28(16), STR_27(21), STR_26(21), STR_25(21), 
 37172 ;;		 -> STR_24(14), STR_23(26), STR_22(26), STR_21(22), 
 37173 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 37174 ;;		 -> STR_16(22), STR_15(22), STR_14(22), STR_13(26), 
 37175 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 37176 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 37177 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 37178 ;; Auto vars:     Size  Location     Type
 37179 ;;  n               2  [STACK] int 
 37180 ;;  neg             2  [STACK] int 
 37181 ;; Return value:  Size  Location     Type
 37182 ;;                  2  [STACK] int 
 37183 ;; Registers used:
 37184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 37185 ;; Tracked objects:
 37186 ;;		On entry : 0/0
 37187 ;;		On exit  : 0/0
 37188 ;;		Unchanged: 0/0
 37189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37194 ;;Total ram usage:        0 bytes
 37195 ;; Hardware stack levels used:    1
 37196 ;; Hardware stack levels required when called:   16
 37197 ;; This function calls:
 37198 ;;		_isdigit
 37199 ;;		_isspace
 37200 ;; This function is called by:
 37201 ;;		_vfpfcnvrt
 37202 ;; This function uses a reentrant model
 37203 ;;
 37204                           
 37205                           	psect	text125
 37206  01C5D6                     __ptext125:
 37207                           	opt callstack 0
 37208  01C5D6                     _atoi:
 37209                           	opt callstack 0
 37210                           
 37211                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37212  01C5D6  0E09               	movlw	9
 37213  01C5D8  26E1               	addwf	fsr1l,f,c
 37214  01C5DA  0E00               	movlw	0
 37215  01C5DC  22E2               	addwfc	fsr1h,f,c
 37216                           
 37217                           ;stkvar	_n @ sp[(-9)+5]
 37218                           
 37219                           ;incstack = 0
 37220 ;; hardware stack exceeded
 37221  01C5DE  0EFC               	movlw	-4
 37222  01C5E0  6AE3               	clrf	plusw1,c
 37223  01C5E2  0EFD               	movlw	-3
 37224  01C5E4  6AE3               	clrf	plusw1,c
 37225                           
 37226                           ;stkvar	_neg @ sp[(-9)+7]
 37227  01C5E6  0EFE               	movlw	-2
 37228  01C5E8  6AE3               	clrf	plusw1,c
 37229  01C5EA  0EFF               	movlw	-1
 37230  01C5EC  6AE3               	clrf	plusw1,c
 37231  01C5EE  D011               	goto	l11539
 37232  01C5F0                     l11537:
 37233                           
 37234                           ;stkvar	_s @ sp[(-9)+-2]
 37235  01C5F0  0EF5               	movlw	-11
 37236  01C5F2  50E3               	movf	plusw1,w,c
 37237  01C5F4  0F01               	addlw	1
 37238  01C5F6  6E2A               	movwf	btemp^0,c
 37239  01C5F8  0EF5               	movlw	-11
 37240  01C5FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 37241  01C600  6A2A               	clrf	btemp^0,c
 37242  01C602  0EF6               	movlw	-10
 37243  01C604  50E3               	movf	plusw1,w,c
 37244  01C606  202A               	addwfc	btemp^0,w,c
 37245  01C608  6E2A               	movwf	btemp^0,c
 37246  01C60A  0EF6               	movlw	-10
 37247  01C60C  0060  F0AB  FFE3   	movff	btemp,plusw1
 37248  01C612                     l11539:
 37249                           
 37250                           ;stkvar	_atoi$7458 @ sp[(-9)+4]
 37251  01C612  0EFB               	movlw	-5
 37252  01C614  6AE3               	clrf	plusw1,c
 37253  01C616  2AE3               	incf	plusw1,f,c
 37254                           
 37255                           ;stkvar	_s @ sp[(-9)+-2]
 37256  01C618  50E1               	movf	fsr1l,w,c
 37257  01C61A  0FF5               	addlw	-11
 37258  01C61C  6ED9               	movwf	fsr2l,c
 37259  01C61E  50E2               	movf	fsr1h,w,c
 37260  01C620  6EDA               	movwf	fsr2h,c
 37261  01C622  0EFF               	movlw	255
 37262  01C624  22DA               	addwfc	fsr2h,f,c
 37263  01C626  006F FF7B FFF6     	movff	postinc2,tblptrl
 37264  01C62C  006F FF77 FFF7     	movff	postdec2,tblptrh
 37265  01C632                     	if	0	;tblptru may be non-zero
 37266  01C632                     	endif
 37267  01C632                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37268  01C632  0E00               	movlw	low (__mediumconst shr (0+16))
 37269  01C634  6EF8               	movwf	tblptru,c
 37270  01C636                     	endif
 37271  01C636  0008               	tblrd		*
 37272  01C638  50F5               	movf	tablat,w,c
 37273  01C63A  0A20               	xorlw	32
 37274  01C63C  B4D8               	btfsc	status,2,c
 37275  01C63E  D023               	goto	l11547
 37276  01C640  0EF7               	movlw	247
 37277  01C642  6E34               	movwf	(btemp+10)^0,c
 37278  01C644  0EFF               	movlw	255
 37279  01C646  6E35               	movwf	(btemp+11)^0,c
 37280                           
 37281                           ;stkvar	_s @ sp[(-9)+-2]
 37282  01C648  50E1               	movf	fsr1l,w,c
 37283  01C64A  0FF5               	addlw	-11
 37284  01C64C  6ED9               	movwf	fsr2l,c
 37285  01C64E  50E2               	movf	fsr1h,w,c
 37286  01C650  6EDA               	movwf	fsr2h,c
 37287  01C652  0EFF               	movlw	255
 37288  01C654  22DA               	addwfc	fsr2h,f,c
 37289  01C656  006F FF7B FFF6     	movff	postinc2,tblptrl
 37290  01C65C  006F FF77 FFF7     	movff	postdec2,tblptrh
 37291  01C662                     	if	0	;tblptru may be non-zero
 37292  01C662                     	endif
 37293  01C662                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37294  01C662  0E00               	movlw	low (__mediumconst shr (0+16))
 37295  01C664  6EF8               	movwf	tblptru,c
 37296  01C666                     	endif
 37297  01C666  0008               	tblrd		*
 37298  01C668  50F5               	movf	tablat,w,c
 37299  01C66A  6E32               	movwf	(btemp+8)^0,c
 37300  01C66C  6A33               	clrf	(btemp+9)^0,c
 37301  01C66E  5034               	movf	(btemp+10)^0,w,c
 37302  01C670  2632               	addwf	(btemp+8)^0,f,c
 37303  01C672  5035               	movf	(btemp+11)^0,w,c
 37304  01C674  2233               	addwfc	(btemp+9)^0,f,c
 37305  01C676  5033               	movf	(btemp+9)^0,w,c
 37306  01C678  E104               	bnz	u10450
 37307  01C67A  0E05               	movlw	5
 37308  01C67C  5C32               	subwf	(btemp+8)^0,w,c
 37309  01C67E  A0D8               	btfss	status,0,c
 37310  01C680  D002               	goto	l11547
 37311  01C682                     u10450:
 37312                           
 37313                           ;stkvar	_atoi$7458 @ sp[(-9)+4]
 37314  01C682  0EFB               	movlw	-5
 37315  01C684  6AE3               	clrf	plusw1,c
 37316  01C686                     l11547:
 37317                           
 37318                           ;stkvar	_atoi$7458 @ sp[(-9)+4]
 37319  01C686  0EFB               	movlw	-5
 37320  01C688  50E3               	movf	plusw1,w,c
 37321  01C68A  6E34               	movwf	(btemp+10)^0,c
 37322  01C68C  6A35               	clrf	(btemp+11)^0,c
 37323                           
 37324                           ;stkvar	_atoi$7457 @ sp[(-9)+2]
 37325  01C68E  0EF9               	movlw	-7
 37326  01C690  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37327  01C696  0EFA               	movlw	-6
 37328  01C698  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37329                           
 37330                           ;stkvar	_atoi$7457 @ sp[(-9)+2]
 37331  01C69E  0EF9               	movlw	-7
 37332  01C6A0  006F FF8C  F02A    	movff	plusw1,btemp
 37333  01C6A6  0EFA               	movlw	-6
 37334  01C6A8  50E3               	movf	plusw1,w,c
 37335  01C6AA  102A               	iorwf	btemp^0,w,c
 37336  01C6AC  B4D8               	btfsc	status,2,c
 37337  01C6AE  D01F               	goto	l11557
 37338  01C6B0  D79F               	goto	l11537
 37339  01C6B2                     l11553:
 37340  01C6B2  0E01               	movlw	1
 37341  01C6B4  6E34               	movwf	(btemp+10)^0,c
 37342  01C6B6  0E00               	movlw	0
 37343  01C6B8  6E35               	movwf	(btemp+11)^0,c
 37344                           
 37345                           ;stkvar	_neg @ sp[(-9)+7]
 37346  01C6BA  0EFE               	movlw	-2
 37347  01C6BC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37348  01C6C2  0EFF               	movlw	-1
 37349  01C6C4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37350  01C6CA                     l11555:
 37351                           
 37352                           ;stkvar	_s @ sp[(-9)+-2]
 37353  01C6CA  0EF5               	movlw	-11
 37354  01C6CC  50E3               	movf	plusw1,w,c
 37355  01C6CE  0F01               	addlw	1
 37356  01C6D0  6E2A               	movwf	btemp^0,c
 37357  01C6D2  0EF5               	movlw	-11
 37358  01C6D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 37359  01C6DA  6A2A               	clrf	btemp^0,c
 37360  01C6DC  0EF6               	movlw	-10
 37361  01C6DE  50E3               	movf	plusw1,w,c
 37362  01C6E0  202A               	addwfc	btemp^0,w,c
 37363  01C6E2  6E2A               	movwf	btemp^0,c
 37364  01C6E4  0EF6               	movlw	-10
 37365  01C6E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 37366  01C6EC  D053               	goto	l11563
 37367  01C6EE                     l11557:
 37368                           
 37369                           ;stkvar	_s @ sp[(-9)+-2]
 37370  01C6EE  50E1               	movf	fsr1l,w,c
 37371  01C6F0  0FF5               	addlw	-11
 37372  01C6F2  6ED9               	movwf	fsr2l,c
 37373  01C6F4  50E2               	movf	fsr1h,w,c
 37374  01C6F6  6EDA               	movwf	fsr2h,c
 37375  01C6F8  0EFF               	movlw	255
 37376  01C6FA  22DA               	addwfc	fsr2h,f,c
 37377  01C6FC  006F FF7B FFF6     	movff	postinc2,tblptrl
 37378  01C702  006F FF77 FFF7     	movff	postdec2,tblptrh
 37379  01C708                     	if	0	;tblptru may be non-zero
 37380  01C708                     	endif
 37381  01C708                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37382  01C708  0E00               	movlw	low (__mediumconst shr (0+16))
 37383  01C70A  6EF8               	movwf	tblptru,c
 37384  01C70C                     	endif
 37385  01C70C  0008               	tblrd		*
 37386  01C70E  50F5               	movf	tablat,w,c
 37387  01C710  6E34               	movwf	(btemp+10)^0,c
 37388  01C712  6A35               	clrf	(btemp+11)^0,c
 37389                           
 37390                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37391                           ; Switch size 1, requested type "simple"
 37392                           ; Number of cases is 1, Range of values is 0 to 0
 37393                           ; switch strategies available:
 37394                           ; Name         Instructions Cycles
 37395                           ; simple_byte            4     3 (average)
 37396                           ;	Chosen strategy is simple_byte
 37397  01C714  5035               	movf	(btemp+11)^0,w,c
 37398  01C716  0A00               	xorlw	0	; case 0
 37399  01C718  A4D8               	btfss	status,2,c
 37400  01C71A  D03C               	goto	l11563
 37401                           
 37402                           ; Switch size 1, requested type "simple"
 37403                           ; Number of cases is 2, Range of values is 43 to 45
 37404                           ; switch strategies available:
 37405                           ; Name         Instructions Cycles
 37406                           ; simple_byte            7     4 (average)
 37407                           ;	Chosen strategy is simple_byte
 37408  01C71C  5034               	movf	(btemp+10)^0,w,c
 37409  01C71E  0A2B               	xorlw	43	; case 43
 37410  01C720  B4D8               	btfsc	status,2,c
 37411  01C722  D7D3               	goto	l11555
 37412  01C724  0A06               	xorlw	6	; case 45
 37413  01C726  B4D8               	btfsc	status,2,c
 37414  01C728  D7C4               	goto	l11553
 37415  01C72A  D034               	goto	l11563
 37416  01C72C                     l11559:
 37417                           
 37418                           ;stkvar	_n @ sp[(-9)+5]
 37419  01C72C  0EFC               	movlw	-4
 37420  01C72E  006F FF8C  F034    	movff	plusw1,btemp+10
 37421  01C734  0EFD               	movlw	-3
 37422  01C736  006F FF8C  F035    	movff	plusw1,btemp+11
 37423  01C73C  0E0A               	movlw	10
 37424  01C73E  0234               	mulwf	(btemp+10)^0,c
 37425  01C740  006F FFCC  F032    	movff	prodl,btemp+8
 37426  01C746  006F FFD0  F033    	movff	prodh,btemp+9
 37427  01C74C  0235               	mulwf	(btemp+11)^0,c
 37428  01C74E  50F3               	movf	prodl,w,c
 37429  01C750  2633               	addwf	(btemp+9)^0,f,c
 37430                           
 37431                           ;stkvar	_s @ sp[(-9)+-2]
 37432  01C752  50E1               	movf	fsr1l,w,c
 37433  01C754  0FF5               	addlw	-11
 37434  01C756  6ED9               	movwf	fsr2l,c
 37435  01C758  50E2               	movf	fsr1h,w,c
 37436  01C75A  6EDA               	movwf	fsr2h,c
 37437  01C75C  0EFF               	movlw	255
 37438  01C75E  22DA               	addwfc	fsr2h,f,c
 37439  01C760  006F FF7B FFF6     	movff	postinc2,tblptrl
 37440  01C766  006F FF77 FFF7     	movff	postdec2,tblptrh
 37441  01C76C                     	if	0	;tblptru may be non-zero
 37442  01C76C                     	endif
 37443  01C76C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37444  01C76C  0E00               	movlw	low (__mediumconst shr (0+16))
 37445  01C76E  6EF8               	movwf	tblptru,c
 37446  01C770                     	endif
 37447  01C770  0008               	tblrd		*
 37448  01C772  50F5               	movf	tablat,w,c
 37449  01C774  5E32               	subwf	(btemp+8)^0,f,c
 37450  01C776  0E00               	movlw	0
 37451  01C778  5A33               	subwfb	(btemp+9)^0,f,c
 37452  01C77A  0E30               	movlw	48
 37453  01C77C  2632               	addwf	(btemp+8)^0,f,c
 37454  01C77E  0E00               	movlw	0
 37455  01C780  2233               	addwfc	(btemp+9)^0,f,c
 37456                           
 37457                           ;stkvar	_n @ sp[(-9)+5]
 37458  01C782  0EFC               	movlw	-4
 37459  01C784  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37460  01C78A  0EFD               	movlw	-3
 37461  01C78C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37462  01C792  D79B               	goto	l11555
 37463  01C794                     l11563:
 37464  01C794  0ED0               	movlw	208
 37465  01C796  6E34               	movwf	(btemp+10)^0,c
 37466  01C798  0EFF               	movlw	255
 37467  01C79A  6E35               	movwf	(btemp+11)^0,c
 37468                           
 37469                           ;stkvar	_s @ sp[(-9)+-2]
 37470  01C79C  50E1               	movf	fsr1l,w,c
 37471  01C79E  0FF5               	addlw	-11
 37472  01C7A0  6ED9               	movwf	fsr2l,c
 37473  01C7A2  50E2               	movf	fsr1h,w,c
 37474  01C7A4  6EDA               	movwf	fsr2h,c
 37475  01C7A6  0EFF               	movlw	255
 37476  01C7A8  22DA               	addwfc	fsr2h,f,c
 37477  01C7AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 37478  01C7B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 37479  01C7B6                     	if	0	;tblptru may be non-zero
 37480  01C7B6                     	endif
 37481  01C7B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37482  01C7B6  0E00               	movlw	low (__mediumconst shr (0+16))
 37483  01C7B8  6EF8               	movwf	tblptru,c
 37484  01C7BA                     	endif
 37485  01C7BA  0008               	tblrd		*
 37486  01C7BC  50F5               	movf	tablat,w,c
 37487  01C7BE  6E32               	movwf	(btemp+8)^0,c
 37488  01C7C0  6A33               	clrf	(btemp+9)^0,c
 37489  01C7C2  5034               	movf	(btemp+10)^0,w,c
 37490  01C7C4  2632               	addwf	(btemp+8)^0,f,c
 37491  01C7C6  5035               	movf	(btemp+11)^0,w,c
 37492  01C7C8  2233               	addwfc	(btemp+9)^0,f,c
 37493  01C7CA  5033               	movf	(btemp+9)^0,w,c
 37494  01C7CC  E106               	bnz	u10470
 37495  01C7CE  0E0A               	movlw	10
 37496  01C7D0  5C32               	subwf	(btemp+8)^0,w,c
 37497  01C7D2  B0D8               	btfsc	status,0,c
 37498  01C7D4  D002               	goto	u10470
 37499  01C7D6  0E01               	movlw	1
 37500  01C7D8  D001               	goto	u10480
 37501  01C7DA                     u10470:
 37502  01C7DA  0E00               	movlw	0
 37503  01C7DC                     u10480:
 37504  01C7DC  6E34               	movwf	(btemp+10)^0,c
 37505  01C7DE  6A35               	clrf	(btemp+11)^0,c
 37506                           
 37507                           ;stkvar	_atoi$7459 @ sp[(-9)+0]
 37508  01C7E0  0EF7               	movlw	-9
 37509  01C7E2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37510  01C7E8  0EF8               	movlw	-8
 37511  01C7EA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37512                           
 37513                           ;stkvar	_atoi$7459 @ sp[(-9)+0]
 37514  01C7F0  0EF7               	movlw	-9
 37515  01C7F2  006F FF8C  F02A    	movff	plusw1,btemp
 37516  01C7F8  0EF8               	movlw	-8
 37517  01C7FA  50E3               	movf	plusw1,w,c
 37518  01C7FC  102A               	iorwf	btemp^0,w,c
 37519  01C7FE  A4D8               	btfss	status,2,c
 37520  01C800  D795               	goto	l11559
 37521                           
 37522                           ;stkvar	_neg @ sp[(-9)+7]
 37523  01C802  0EFE               	movlw	-2
 37524  01C804  006F FF8C  F02A    	movff	plusw1,btemp
 37525  01C80A  0EFF               	movlw	-1
 37526  01C80C  50E3               	movf	plusw1,w,c
 37527  01C80E  102A               	iorwf	btemp^0,w,c
 37528  01C810  A4D8               	btfss	status,2,c
 37529  01C812  D00E               	goto	l11573
 37530                           
 37531                           ;stkvar	_n @ sp[(-9)+5]
 37532  01C814  0EFC               	movlw	-4
 37533  01C816  006F FF8C  F02A    	movff	plusw1,btemp
 37534  01C81C  1E2A               	comf	btemp^0,f,c
 37535  01C81E  0EFD               	movlw	-3
 37536  01C820  006F FF8C  F02B    	movff	plusw1,btemp+1
 37537  01C826  1E2B               	comf	(btemp+1)^0,f,c
 37538  01C828  2A2A               	incf	btemp^0,f,c
 37539  01C82A  B4D8               	btfsc	status,2,c
 37540  01C82C  2A2B               	incf	(btemp+1)^0,f,c
 37541  01C82E  D008               	goto	l3451
 37542  01C830                     l11573:
 37543                           
 37544                           ;stkvar	_n @ sp[(-9)+5]
 37545  01C830  0EFC               	movlw	-4
 37546  01C832  006F FF8C  F02A    	movff	plusw1,btemp
 37547  01C838  0EFD               	movlw	-3
 37548  01C83A  006F FF8C  F02B    	movff	plusw1,btemp+1
 37549  01C840                     l3451:
 37550                           
 37551                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 37552  01C840  0EF5               	movlw	245
 37553  01C842  26E1               	addwf	fsr1l,f,c
 37554  01C844  0EFF               	movlw	255
 37555  01C846  22E2               	addwfc	fsr1h,f,c
 37556  01C848  0012               	return		;funcret
 37557  01C84A                     __end_of_atoi:
 37558                           	opt callstack 0
 37559                           
 37560 ;; *************** function _isspace *****************
 37561 ;; Defined at:
 37562 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 37563 ;; Parameters:    Size  Location     Type
 37564 ;;  c               2  [STACK] int 
 37565 ;; Auto vars:     Size  Location     Type
 37566 ;;		None
 37567 ;; Return value:  Size  Location     Type
 37568 ;;                  2  [STACK] int 
 37569 ;; Registers used:
 37570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37571 ;; Tracked objects:
 37572 ;;		On entry : 0/0
 37573 ;;		On exit  : 0/0
 37574 ;;		Unchanged: 0/0
 37575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37580 ;;Total ram usage:        0 bytes
 37581 ;; Hardware stack levels used:    1
 37582 ;; Hardware stack levels required when called:   15
 37583 ;; This function calls:
 37584 ;;		Nothing
 37585 ;; This function is called by:
 37586 ;;		_atoi
 37587 ;; This function uses a reentrant model
 37588 ;;
 37589                           
 37590                           	psect	text126
 37591  001EE0                     __ptext126:
 37592                           	opt callstack 0
 37593  001EE0                     _isspace:
 37594                           	opt callstack 0
 37595                           
 37596                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37597  001EE0  52E6               	movf	postinc1,f,c
 37598                           
 37599                           ;stkvar	_isspace$7508 @ sp[(-1)+0]
 37600                           
 37601                           ;incstack = 0
 37602 ;; hardware stack exceeded
 37603  001EE2  0EFF               	movlw	-1
 37604  001EE4  6AE3               	clrf	plusw1,c
 37605  001EE6  2AE3               	incf	plusw1,f,c
 37606                           
 37607                           ;stkvar	_c @ sp[(-1)+-2]
 37608  001EE8  0EFD               	movlw	-3
 37609  001EEA  006F FF8C  F02A    	movff	plusw1,btemp
 37610  001EF0  0E20               	movlw	32
 37611  001EF2  182A               	xorwf	btemp^0,w,c
 37612  001EF4  E104               	bnz	u9290
 37613  001EF6  0EFE               	movlw	-2
 37614  001EF8  50E3               	movf	plusw1,w,c
 37615  001EFA  B4D8               	btfsc	status,2,c
 37616  001EFC  D012               	goto	l10929
 37617  001EFE                     u9290:
 37618                           
 37619                           ;stkvar	_c @ sp[(-1)+-2]
 37620  001EFE  0EFD               	movlw	-3
 37621  001F00  50E3               	movf	plusw1,w,c
 37622  001F02  0FF7               	addlw	247
 37623  001F04  6E34               	movwf	(btemp+10)^0,c
 37624  001F06  0EFE               	movlw	-2
 37625  001F08  006F FF8C  F035    	movff	plusw1,btemp+11
 37626  001F0E  0EFF               	movlw	255
 37627  001F10  2235               	addwfc	(btemp+11)^0,f,c
 37628  001F12  5035               	movf	(btemp+11)^0,w,c
 37629  001F14  E104               	bnz	u9300
 37630  001F16  0E05               	movlw	5
 37631  001F18  5C34               	subwf	(btemp+10)^0,w,c
 37632  001F1A  A0D8               	btfss	status,0,c
 37633  001F1C  D002               	goto	l10929
 37634  001F1E                     u9300:
 37635                           
 37636                           ;stkvar	_isspace$7508 @ sp[(-1)+0]
 37637  001F1E  0EFF               	movlw	-1
 37638  001F20  6AE3               	clrf	plusw1,c
 37639  001F22                     l10929:
 37640                           
 37641                           ;stkvar	_isspace$7508 @ sp[(-1)+0]
 37642  001F22  0EFF               	movlw	-1
 37643  001F24  50E3               	movf	plusw1,w,c
 37644  001F26  6E2A               	movwf	btemp^0,c
 37645  001F28  6A2B               	clrf	(btemp+1)^0,c
 37646                           
 37647                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37648  001F2A  52E5               	movf	postdec1,f,c
 37649  001F2C  52E5               	movf	postdec1,f,c
 37650  001F2E  52E5               	movf	postdec1,f,c
 37651  001F30  0012               	return		;funcret
 37652  001F32                     __end_of_isspace:
 37653                           	opt callstack 0
 37654                           
 37655 ;; *************** function _isdigit *****************
 37656 ;; Defined at:
 37657 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 37658 ;; Parameters:    Size  Location     Type
 37659 ;;  c               2  [STACK] int 
 37660 ;; Auto vars:     Size  Location     Type
 37661 ;;		None
 37662 ;; Return value:  Size  Location     Type
 37663 ;;                  2  [STACK] int 
 37664 ;; Registers used:
 37665 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37666 ;; Tracked objects:
 37667 ;;		On entry : 0/0
 37668 ;;		On exit  : 0/0
 37669 ;;		Unchanged: 0/0
 37670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37675 ;;Total ram usage:        0 bytes
 37676 ;; Hardware stack levels used:    1
 37677 ;; Hardware stack levels required when called:   15
 37678 ;; This function calls:
 37679 ;;		Nothing
 37680 ;; This function is called by:
 37681 ;;		_vfpfcnvrt
 37682 ;;		_atoi
 37683 ;; This function uses a reentrant model
 37684 ;;
 37685                           
 37686                           	psect	text127
 37687  002714                     __ptext127:
 37688                           	opt callstack 0
 37689  002714                     _isdigit:
 37690                           	opt callstack 0
 37691                           
 37692                           ;stkvar	_c @ sp[(0)+-2]
 37693                           
 37694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37695                           ;incstack = 0
 37696 ;; hardware stack exceeded
 37697  002714  0EFE               	movlw	-2
 37698  002716  50E3               	movf	plusw1,w,c
 37699  002718  0FD0               	addlw	208
 37700  00271A  6E34               	movwf	(btemp+10)^0,c
 37701  00271C  0EFF               	movlw	-1
 37702  00271E  006F FF8C  F035    	movff	plusw1,btemp+11
 37703  002724  0EFF               	movlw	255
 37704  002726  2235               	addwfc	(btemp+11)^0,f,c
 37705  002728  5035               	movf	(btemp+11)^0,w,c
 37706  00272A  E106               	bnz	u8080
 37707  00272C  0E0A               	movlw	10
 37708  00272E  5C34               	subwf	(btemp+10)^0,w,c
 37709  002730  B0D8               	btfsc	status,0,c
 37710  002732  D002               	goto	u8080
 37711  002734  0E01               	movlw	1
 37712  002736  D001               	goto	u8090
 37713  002738                     u8080:
 37714  002738  0E00               	movlw	0
 37715  00273A                     u8090:
 37716  00273A  6E2A               	movwf	btemp^0,c
 37717  00273C  6A2B               	clrf	(btemp+1)^0,c
 37718                           
 37719                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37720  00273E  52E5               	movf	postdec1,f,c
 37721  002740  52E5               	movf	postdec1,f,c
 37722  002742  0012               	return		;funcret
 37723  002744                     __end_of_isdigit:
 37724                           	opt callstack 0
 37725                           
 37726 ;; *************** function _set_vterm *****************
 37727 ;; Defined at:
 37728 ;;		line 110 in file "mconfig.c"
 37729 ;; Parameters:    Size  Location     Type
 37730 ;;  vterm           1  [STACK] const unsigned char 
 37731 ;; Auto vars:     Size  Location     Type
 37732 ;;		None
 37733 ;; Return value:  Size  Location     Type
 37734 ;;                  1  [STACK] unsigned char 
 37735 ;; Registers used:
 37736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 37737 ;; Tracked objects:
 37738 ;;		On entry : 0/2
 37739 ;;		On exit  : 0/0
 37740 ;;		Unchanged: 0/0
 37741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37746 ;;Total ram usage:        0 bytes
 37747 ;; Hardware stack levels used:    1
 37748 ;; Hardware stack levels required when called:   15
 37749 ;; This function calls:
 37750 ;;		Nothing
 37751 ;; This function is called by:
 37752 ;;		_main
 37753 ;;		_check_help
 37754 ;; This function uses a reentrant model
 37755 ;;
 37756                           
 37757                           	psect	text128
 37758  002C58                     __ptext128:
 37759                           	opt callstack 0
 37760  002C58                     _set_vterm:
 37761                           	opt callstack 15
 37762                           
 37763                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 37764                           ;stkvar	_vterm @ sp[(0)+-1]
 37765                           
 37766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37767                           ;incstack = 0
 37768  002C58  0EFF               	movlw	-1
 37769  002C5A  006F FF8C  F035    	movff	plusw1,btemp+11
 37770  002C60  0E03               	movlw	3
 37771  002C62  1635               	andwf	(btemp+11)^0,f,c
 37772  002C64  EE23  F0CF         	lfsr	2,_D+640
 37773  002C68  50DF               	movf	223,w,c
 37774  002C6A  1835               	xorwf	(btemp+11)^0,w,c
 37775  002C6C  0BFE               	andlw	-2
 37776  002C6E  1835               	xorwf	(btemp+11)^0,w,c
 37777  002C70  6EDF               	movwf	223,c
 37778                           
 37779                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37780  002C72  52E5               	movf	postdec1,f,c
 37781  002C74  0012               	return		;funcret
 37782  002C76                     __end_of_set_vterm:
 37783                           	opt callstack 0
 37784                           
 37785 ;; *************** function _set_temp_display_help *****************
 37786 ;; Defined at:
 37787 ;;		line 217 in file "mconfig.c"
 37788 ;; Parameters:    Size  Location     Type
 37789 ;;  new_response    1  [STACK] const enum E16677
 37790 ;; Auto vars:     Size  Location     Type
 37791 ;;		None
 37792 ;; Return value:  Size  Location     Type
 37793 ;;                  1  [STACK] enum E16677
 37794 ;; Registers used:
 37795 ;;		wreg, fsr1l, fsr1h
 37796 ;; Tracked objects:
 37797 ;;		On entry : 0/2
 37798 ;;		On exit  : 3F/2
 37799 ;;		Unchanged: 0/0
 37800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37805 ;;Total ram usage:        0 bytes
 37806 ;; Hardware stack levels used:    1
 37807 ;; Hardware stack levels required when called:   15
 37808 ;; This function calls:
 37809 ;;		Nothing
 37810 ;; This function is called by:
 37811 ;;		_check_help
 37812 ;; This function uses a reentrant model
 37813 ;;
 37814                           
 37815                           	psect	text129
 37816  002DBA                     __ptext129:
 37817                           	opt callstack 0
 37818  002DBA                     _set_temp_display_help:
 37819                           	opt callstack 14
 37820                           
 37821                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 37822                           
 37823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37824                           ;incstack = 0
 37825  002DBA  0102               	movlb	2	; () banked
 37826  002DBC  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 37827                           
 37828                           ; BSR set to: 2
 37829                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 37830                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37831  002DBE  0EFF               	movlw	-1
 37832  002DC0  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 37833                           
 37834                           ; BSR set to: 2
 37835                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 37836  002DC6  52E5               	movf	postdec1,f,c
 37837  002DC8  0012               	return		;funcret
 37838  002DCA                     __end_of_set_temp_display_help:
 37839                           	opt callstack 0
 37840                           
 37841 ;; *************** function _set_display_info *****************
 37842 ;; Defined at:
 37843 ;;		line 206 in file "mconfig.c"
 37844 ;; Parameters:    Size  Location     Type
 37845 ;;  new_response    1  [STACK] const enum E16677
 37846 ;; Auto vars:     Size  Location     Type
 37847 ;;		None
 37848 ;; Return value:  Size  Location     Type
 37849 ;;                  1  [STACK] enum E17160
 37850 ;; Registers used:
 37851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37852 ;; Tracked objects:
 37853 ;;		On entry : 0/2
 37854 ;;		On exit  : 0/0
 37855 ;;		Unchanged: 0/0
 37856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37861 ;;Total ram usage:        0 bytes
 37862 ;; Hardware stack levels used:    1
 37863 ;; Hardware stack levels required when called:   16
 37864 ;; This function calls:
 37865 ;;		_TimerDone
 37866 ;; This function is called by:
 37867 ;;		_main
 37868 ;;		_check_help
 37869 ;; This function uses a reentrant model
 37870 ;;
 37871                           
 37872                           	psect	text130
 37873  002C76                     __ptext130:
 37874                           	opt callstack 0
 37875  002C76                     _set_display_info:
 37876                           	opt callstack 14
 37877                           
 37878                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 37879                           
 37880                           ; BSR set to: 2
 37881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37882                           ;incstack = 0
 37883  002C76  0E07               	movlw	7
 37884  002C78  6EE6               	movwf	postinc1,c
 37885  002C7A  EC25  F014         	call	_TimerDone	;wreg free
 37886  002C7E  502A               	movf	btemp^0,w,c
 37887  002C80  B4D8               	btfsc	status,2,c
 37888  002C82  D006               	goto	l1883
 37889                           
 37890                           ;mconfig.c: 211:   old_info = V.response.info;
 37891  002C84  0102               	movlb	2	; () banked
 37892  002C86  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 37893                           
 37894                           ; BSR set to: 2
 37895                           ;mconfig.c: 212:   V.response.info = new_response_info;
 37896                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37897  002C88  0EFF               	movlw	-1
 37898  002C8A  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 37899  002C90                     l1883:
 37900                           
 37901                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 37902  002C90  52E5               	movf	postdec1,f,c
 37903  002C92  0012               	return		;funcret
 37904  002C94                     __end_of_set_display_info:
 37905                           	opt callstack 0
 37906                           
 37907 ;; *************** function _mode_lamp_dim *****************
 37908 ;; Defined at:
 37909 ;;		line 13 in file "mconfig.c"
 37910 ;; Parameters:    Size  Location     Type
 37911 ;;  level           2  [STACK] const unsigned short 
 37912 ;; Auto vars:     Size  Location     Type
 37913 ;;		None
 37914 ;; Return value:  Size  Location     Type
 37915 ;;                  1  [STACK] void 
 37916 ;; Registers used:
 37917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37918 ;; Tracked objects:
 37919 ;;		On entry : 0/2
 37920 ;;		On exit  : 0/0
 37921 ;;		Unchanged: 0/0
 37922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37927 ;;Total ram usage:        0 bytes
 37928 ;; Hardware stack levels used:    1
 37929 ;; Hardware stack levels required when called:   16
 37930 ;; This function calls:
 37931 ;;		_PWM8_LoadDutyValue
 37932 ;; This function is called by:
 37933 ;;		_main
 37934 ;;		_check_help
 37935 ;; This function uses a reentrant model
 37936 ;;
 37937                           
 37938                           	psect	text131
 37939  002CCA                     __ptext131:
 37940                           	opt callstack 0
 37941  002CCA                     _mode_lamp_dim:
 37942                           	opt callstack 14
 37943                           
 37944                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 37945                           ;stkvar	_level @ sp[(0)+-2]
 37946                           
 37947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37948                           ;incstack = 0
 37949  002CCA  0EFE               	movlw	-2
 37950  002CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 37951  002CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 37952  002CD8  EC52  F011         	call	_PWM8_LoadDutyValue	;wreg free
 37953                           
 37954                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 37955  002CDC  52E5               	movf	postdec1,f,c
 37956  002CDE  52E5               	movf	postdec1,f,c
 37957  002CE0  0012               	return		;funcret
 37958  002CE2                     __end_of_mode_lamp_dim:
 37959                           	opt callstack 0
 37960                           
 37961 ;; *************** function _mode_lamp_bright *****************
 37962 ;; Defined at:
 37963 ;;		line 18 in file "mconfig.c"
 37964 ;; Parameters:    Size  Location     Type
 37965 ;;		None
 37966 ;; Auto vars:     Size  Location     Type
 37967 ;;		None
 37968 ;; Return value:  Size  Location     Type
 37969 ;;                  1  [STACK] void 
 37970 ;; Registers used:
 37971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37972 ;; Tracked objects:
 37973 ;;		On entry : 0/0
 37974 ;;		On exit  : 0/0
 37975 ;;		Unchanged: 0/0
 37976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37981 ;;Total ram usage:        0 bytes
 37982 ;; Hardware stack levels used:    1
 37983 ;; Hardware stack levels required when called:   16
 37984 ;; This function calls:
 37985 ;;		_PWM8_LoadDutyValue
 37986 ;; This function is called by:
 37987 ;;		_check_help
 37988 ;; This function uses a reentrant model
 37989 ;;
 37990                           
 37991                           	psect	text132
 37992  002DE8                     __ptext132:
 37993                           	opt callstack 0
 37994  002DE8                     _mode_lamp_bright:
 37995                           	opt callstack 13
 37996                           
 37997                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 37998                           
 37999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38000                           ;incstack = 0
 38001  002DE8  0E2C               	movlw	44
 38002  002DEA  6EE6               	movwf	postinc1,c
 38003  002DEC  0E01               	movlw	1
 38004  002DEE  6EE6               	movwf	postinc1,c
 38005  002DF0  EC52  F011         	call	_PWM8_LoadDutyValue	;wreg free
 38006                           
 38007                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 38008  002DF4  0012               	return		;funcret
 38009  002DF6                     __end_of_mode_lamp_bright:
 38010                           	opt callstack 0
 38011                           
 38012 ;; *************** function _PWM8_LoadDutyValue *****************
 38013 ;; Defined at:
 38014 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 38015 ;; Parameters:    Size  Location     Type
 38016 ;;  dutyValue       2  [STACK] unsigned short 
 38017 ;; Auto vars:     Size  Location     Type
 38018 ;;		None
 38019 ;; Return value:  Size  Location     Type
 38020 ;;                  1  [STACK] void 
 38021 ;; Registers used:
 38022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38023 ;; Tracked objects:
 38024 ;;		On entry : 0/2
 38025 ;;		On exit  : 0/0
 38026 ;;		Unchanged: 0/0
 38027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38032 ;;Total ram usage:        0 bytes
 38033 ;; Hardware stack levels used:    1
 38034 ;; Hardware stack levels required when called:   15
 38035 ;; This function calls:
 38036 ;;		Nothing
 38037 ;; This function is called by:
 38038 ;;		_mode_lamp_dim
 38039 ;;		_mode_lamp_bright
 38040 ;; This function uses a reentrant model
 38041 ;;
 38042                           
 38043                           	psect	text133
 38044  0022A4                     __ptext133:
 38045                           	opt callstack 0
 38046  0022A4                     _PWM8_LoadDutyValue:
 38047                           	opt callstack 14
 38048                           
 38049                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 38050                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38051                           
 38052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38053                           ;incstack = 0
 38054  0022A4  0EFE               	movlw	-2
 38055  0022A6  006F FF8C  F034    	movff	plusw1,btemp+10
 38056  0022AC  0EFF               	movlw	-1
 38057  0022AE  006F FF8C  F035    	movff	plusw1,btemp+11
 38058  0022B4  90D8               	bcf	status,0,c
 38059  0022B6  3235               	rrcf	(btemp+11)^0,f,c
 38060  0022B8  3234               	rrcf	(btemp+10)^0,f,c
 38061  0022BA  90D8               	bcf	status,0,c
 38062  0022BC  3235               	rrcf	(btemp+11)^0,f,c
 38063  0022BE  3234               	rrcf	(btemp+10)^0,f,c
 38064  0022C0  5034               	movf	(btemp+10)^0,w,c
 38065  0022C2  6E61               	movwf	97,c	;volatile
 38066                           
 38067                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 38068                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38069  0022C4  0EFE               	movlw	-2
 38070  0022C6  006F FF8C  F035    	movff	plusw1,btemp+11
 38071  0022CC  0E03               	movlw	3
 38072  0022CE  1635               	andwf	(btemp+11)^0,f,c
 38073  0022D0  0E06               	movlw	6
 38074  0022D2  6E2A               	movwf	btemp^0,c
 38075  0022D4                     u12295:
 38076  0022D4  90D8               	bcf	status,0,c
 38077  0022D6  3635               	rlcf	(btemp+11)^0,f,c
 38078  0022D8  2E2A               	decfsz	btemp^0,f,c
 38079  0022DA  D7FC               	goto	u12295
 38080  0022DC  5035               	movf	(btemp+11)^0,w,c
 38081  0022DE  6E60               	movwf	96,c	;volatile
 38082                           
 38083                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38084  0022E0  52E5               	movf	postdec1,f,c
 38085  0022E2  52E5               	movf	postdec1,f,c
 38086  0022E4  0012               	return		;funcret
 38087  0022E6                     __end_of_PWM8_LoadDutyValue:
 38088                           	opt callstack 0
 38089                           
 38090 ;; *************** function _help_button *****************
 38091 ;; Defined at:
 38092 ;;		line 26 in file "mconfig.c"
 38093 ;; Parameters:    Size  Location     Type
 38094 ;;		None
 38095 ;; Auto vars:     Size  Location     Type
 38096 ;;		None
 38097 ;; Return value:  Size  Location     Type
 38098 ;;                  1  [STACK] _Bool 
 38099 ;; Registers used:
 38100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38101 ;; Tracked objects:
 38102 ;;		On entry : 0/2
 38103 ;;		On exit  : 0/0
 38104 ;;		Unchanged: 0/0
 38105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38110 ;;Total ram usage:        0 bytes
 38111 ;; Hardware stack levels used:    1
 38112 ;; Hardware stack levels required when called:   16
 38113 ;; This function calls:
 38114 ;;		_StartTimer
 38115 ;;		_TimerDone
 38116 ;; This function is called by:
 38117 ;;		_check_help
 38118 ;; This function uses a reentrant model
 38119 ;;
 38120                           
 38121                           	psect	text134
 38122  0024DC                     __ptext134:
 38123                           	opt callstack 0
 38124  0024DC                     _help_button:
 38125                           	opt callstack 13
 38126                           
 38127                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 38128                           
 38129                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38130                           ;incstack = 0
 38131  0024DC  B0CB               	btfsc	203,0,c	;volatile
 38132  0024DE  D00C               	goto	l1826
 38133                           
 38134                           ;mconfig.c: 29:   V.help = 1;
 38135  0024E0  0102               	movlb	2	; () banked
 38136  0024E2  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 38137                           
 38138                           ; BSR set to: 2
 38139                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 38140  0024E4  0E08               	movlw	8
 38141  0024E6  6EE6               	movwf	postinc1,c
 38142  0024E8  EC25  F014         	call	_TimerDone	;wreg free
 38143  0024EC  502A               	movf	btemp^0,w,c
 38144  0024EE  B4D8               	btfsc	status,2,c
 38145  0024F0  D003               	goto	l1826
 38146                           
 38147                           ;mconfig.c: 31:    return 1;
 38148  0024F2  0E01               	movlw	1
 38149  0024F4  6E2A               	movwf	btemp^0,c
 38150  0024F6  0012               	return	
 38151  0024F8                     l1826:
 38152                           
 38153                           ;mconfig.c: 34:  if (!V.help)
 38154  0024F8  0102               	movlb	2	; () banked
 38155  0024FA  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 38156  0024FC  D008               	goto	l13719
 38157                           
 38158                           ; BSR set to: 2
 38159                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 38160  0024FE  0E2C               	movlw	44
 38161  002500  6EE6               	movwf	postinc1,c
 38162  002502  0E01               	movlw	1
 38163  002504  6EE6               	movwf	postinc1,c
 38164  002506  0E08               	movlw	8
 38165  002508  6EE6               	movwf	postinc1,c
 38166  00250A  ECB3  F011         	call	_StartTimer	;wreg free
 38167  00250E                     l13719:
 38168                           
 38169                           ;mconfig.c: 37:  return 0;
 38170  00250E  0E00               	movlw	0
 38171  002510  6E2A               	movwf	btemp^0,c
 38172                           
 38173                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 38174  002512  0012               	return		;funcret
 38175  002514                     __end_of_help_button:
 38176                           	opt callstack 0
 38177                           
 38178 ;; *************** function _TimerDone *****************
 38179 ;; Defined at:
 38180 ;;		line 20 in file "timers.c"
 38181 ;; Parameters:    Size  Location     Type
 38182 ;;  timer           1  [STACK] const unsigned char 
 38183 ;; Auto vars:     Size  Location     Type
 38184 ;;		None
 38185 ;; Return value:  Size  Location     Type
 38186 ;;                  1  [STACK] _Bool 
 38187 ;; Registers used:
 38188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38189 ;; Tracked objects:
 38190 ;;		On entry : 0/2
 38191 ;;		On exit  : 0/0
 38192 ;;		Unchanged: 0/0
 38193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38198 ;;Total ram usage:        0 bytes
 38199 ;; Hardware stack levels used:    1
 38200 ;; Hardware stack levels required when called:   15
 38201 ;; This function calls:
 38202 ;;		Nothing
 38203 ;; This function is called by:
 38204 ;;		_main
 38205 ;;		_WaitMs
 38206 ;;		_help_button
 38207 ;;		_check_help
 38208 ;;		_set_display_info
 38209 ;;		_update_adc_result
 38210 ;;		_esr_check
 38211 ;; This function uses a reentrant model
 38212 ;;
 38213                           
 38214                           	psect	text135
 38215  00284A                     __ptext135:
 38216                           	opt callstack 0
 38217  00284A                     _TimerDone:
 38218                           	opt callstack 14
 38219                           
 38220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38221                           ;incstack = 0
 38222  00284A  0004               	clrwdt		;# 
 38223                           
 38224                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 38225                           ;stkvar	_timer @ sp[(0)+-1]
 38226  00284C  0EFF               	movlw	-1
 38227  00284E  50E3               	movf	plusw1,w,c
 38228  002850  0D02               	mullw	2
 38229  002852  0EBC               	movlw	low _tickCount
 38230  002854  24F3               	addwf	243,w,c
 38231  002856  6ED9               	movwf	fsr2l,c
 38232  002858  0E02               	movlw	high _tickCount
 38233  00285A  20F4               	addwfc	prodh,w,c
 38234  00285C  6EDA               	movwf	fsr2h,c
 38235  00285E  50DE               	movf	postinc2,w,c
 38236  002860  10DE               	iorwf	postinc2,w,c
 38237  002862  A4D8               	btfss	status,2,c
 38238  002864  D002               	goto	l12441
 38239                           
 38240                           ;timers.c: 24:   return 1;
 38241  002866  0E01               	movlw	1
 38242  002868  D001               	goto	L42
 38243  00286A                     l12441:
 38244                           
 38245                           ;timers.c: 26:  return 0;
 38246  00286A  0E00               	movlw	0
 38247  00286C                     L42:
 38248  00286C  6E2A               	movwf	btemp^0,c
 38249                           
 38250                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 38251  00286E  52E5               	movf	postdec1,f,c
 38252  002870  0012               	return		;funcret
 38253  002872                     __end_of_TimerDone:
 38254                           	opt callstack 0
 38255                           
 38256 ;; *************** function _StartTimer *****************
 38257 ;; Defined at:
 38258 ;;		line 12 in file "timers.c"
 38259 ;; Parameters:    Size  Location     Type
 38260 ;;  timer           1  [STACK] const unsigned char 
 38261 ;;  count           2  [STACK] const unsigned short 
 38262 ;; Auto vars:     Size  Location     Type
 38263 ;;		None
 38264 ;; Return value:  Size  Location     Type
 38265 ;;                  1  [STACK] void 
 38266 ;; Registers used:
 38267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38268 ;; Tracked objects:
 38269 ;;		On entry : 0/0
 38270 ;;		On exit  : 0/0
 38271 ;;		Unchanged: 0/0
 38272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38277 ;;Total ram usage:        0 bytes
 38278 ;; Hardware stack levels used:    1
 38279 ;; Hardware stack levels required when called:   15
 38280 ;; This function calls:
 38281 ;;		Nothing
 38282 ;; This function is called by:
 38283 ;;		_main
 38284 ;;		_WaitMs
 38285 ;;		_help_button
 38286 ;;		_check_help
 38287 ;;		_update_adc_result
 38288 ;;		_calc_bsoc
 38289 ;;		_esr_check
 38290 ;; This function uses a reentrant model
 38291 ;;
 38292                           
 38293                           	psect	text136
 38294  002366                     __ptext136:
 38295                           	opt callstack 0
 38296  002366                     _StartTimer:
 38297                           	opt callstack 0
 38298                           
 38299                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 38300                           ;stkvar	_count @ sp[(0)+-3]
 38301                           
 38302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38303                           ;incstack = 0
 38304 ;; hardware stack exceeded
 38305  002366  0EFD               	movlw	-3
 38306  002368  006F FF8C  F034    	movff	plusw1,btemp+10
 38307  00236E  0EFE               	movlw	-2
 38308  002370  006F FF8C  F035    	movff	plusw1,btemp+11
 38309  002376  90D8               	bcf	status,0,c
 38310  002378  3434               	rlcf	(btemp+10)^0,w,c
 38311  00237A  6E32               	movwf	(btemp+8)^0,c
 38312  00237C  3435               	rlcf	(btemp+11)^0,w,c
 38313  00237E  6E33               	movwf	(btemp+9)^0,c
 38314                           
 38315                           ;stkvar	_timer @ sp[(0)+-1]
 38316  002380  0EFF               	movlw	-1
 38317  002382  50E3               	movf	plusw1,w,c
 38318  002384  0D02               	mullw	2
 38319  002386  0EBC               	movlw	low _tickCount
 38320  002388  24F3               	addwf	243,w,c
 38321  00238A  6ED9               	movwf	fsr2l,c
 38322  00238C  0E02               	movlw	high _tickCount
 38323  00238E  20F4               	addwfc	prodh,w,c
 38324  002390  6EDA               	movwf	fsr2h,c
 38325  002392  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 38326  002398  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 38327                           
 38328                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 38329  00239E  52E5               	movf	postdec1,f,c
 38330  0023A0  52E5               	movf	postdec1,f,c
 38331  0023A2  52E5               	movf	postdec1,f,c
 38332  0023A4  0012               	return		;funcret
 38333  0023A6                     __end_of_StartTimer:
 38334                           	opt callstack 0
 38335                           
 38336 ;; *************** function _display_info *****************
 38337 ;; Defined at:
 38338 ;;		line 196 in file "mconfig.c"
 38339 ;; Parameters:    Size  Location     Type
 38340 ;;		None
 38341 ;; Auto vars:     Size  Location     Type
 38342 ;;		None
 38343 ;; Return value:  Size  Location     Type
 38344 ;;                  1  [STACK] enum E16677
 38345 ;; Registers used:
 38346 ;;		btemp
 38347 ;; Tracked objects:
 38348 ;;		On entry : 0/2
 38349 ;;		On exit  : 0/0
 38350 ;;		Unchanged: 0/0
 38351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38356 ;;Total ram usage:        0 bytes
 38357 ;; Hardware stack levels used:    1
 38358 ;; Hardware stack levels required when called:   15
 38359 ;; This function calls:
 38360 ;;		Nothing
 38361 ;; This function is called by:
 38362 ;;		_check_help
 38363 ;; This function uses a reentrant model
 38364 ;;
 38365                           
 38366                           	psect	text137
 38367  002E6A                     __ptext137:
 38368                           	opt callstack 0
 38369  002E6A                     _display_info:
 38370                           	opt callstack 14
 38371                           
 38372                           ;mconfig.c: 198:  return V.response.info;
 38373                           
 38374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38375                           ;incstack = 0
 38376  002E6A  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 38377                           
 38378                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38379  002E70  0012               	return		;funcret
 38380  002E72                     __end_of_display_info:
 38381                           	opt callstack 0
 38382                           
 38383 ;; *************** function _display_help *****************
 38384 ;; Defined at:
 38385 ;;		line 201 in file "mconfig.c"
 38386 ;; Parameters:    Size  Location     Type
 38387 ;;		None
 38388 ;; Auto vars:     Size  Location     Type
 38389 ;;		None
 38390 ;; Return value:  Size  Location     Type
 38391 ;;                  1  [STACK] enum E16677
 38392 ;; Registers used:
 38393 ;;		btemp
 38394 ;; Tracked objects:
 38395 ;;		On entry : 3F/2
 38396 ;;		On exit  : 0/0
 38397 ;;		Unchanged: 0/0
 38398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38403 ;;Total ram usage:        0 bytes
 38404 ;; Hardware stack levels used:    1
 38405 ;; Hardware stack levels required when called:   15
 38406 ;; This function calls:
 38407 ;;		Nothing
 38408 ;; This function is called by:
 38409 ;;		_check_help
 38410 ;; This function uses a reentrant model
 38411 ;;
 38412                           
 38413                           	psect	text138
 38414  002E72                     __ptext138:
 38415                           	opt callstack 0
 38416  002E72                     _display_help:
 38417                           	opt callstack 14
 38418                           
 38419                           ;mconfig.c: 203:  return V.response.help_temp;
 38420                           
 38421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38422                           ;incstack = 0
 38423  002E72  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 38424                           
 38425                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38426  002E78  0012               	return		;funcret
 38427  002E7A                     __end_of_display_help:
 38428                           	opt callstack 0
 38429                           
 38430 ;; *************** function _check_enter_button *****************
 38431 ;; Defined at:
 38432 ;;		line 49 in file "hid.c"
 38433 ;; Parameters:    Size  Location     Type
 38434 ;;  h               2  [STACK] PTR struct H_data
 38435 ;;		 -> H(9), 
 38436 ;; Auto vars:     Size  Location     Type
 38437 ;;		None
 38438 ;; Return value:  Size  Location     Type
 38439 ;;                  1  [STACK] _Bool 
 38440 ;; Registers used:
 38441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 38442 ;; Tracked objects:
 38443 ;;		On entry : 0/0
 38444 ;;		On exit  : 0/0
 38445 ;;		Unchanged: 0/0
 38446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38451 ;;Total ram usage:        0 bytes
 38452 ;; Hardware stack levels used:    1
 38453 ;; Hardware stack levels required when called:   15
 38454 ;; This function calls:
 38455 ;;		Nothing
 38456 ;; This function is called by:
 38457 ;;		_main
 38458 ;; This function uses a reentrant model
 38459 ;;
 38460                           
 38461                           	psect	text139
 38462  0017DE                     __ptext139:
 38463                           	opt callstack 0
 38464  0017DE                     _check_enter_button:
 38465                           	opt callstack 15
 38466                           
 38467                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 38468                           ;stkvar	_h @ sp[(0)+-2]
 38469                           
 38470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38471                           ;incstack = 0
 38472  0017DE  0EFE               	movlw	-2
 38473  0017E0  006F FF8C  F034    	movff	plusw1,btemp+10
 38474  0017E6  0EFF               	movlw	-1
 38475  0017E8  006F FF8C  F035    	movff	plusw1,btemp+11
 38476  0017EE  0E04               	movlw	4
 38477  0017F0  2434               	addwf	(btemp+10)^0,w,c
 38478  0017F2  6ED9               	movwf	fsr2l,c
 38479  0017F4  0E00               	movlw	0
 38480  0017F6  2035               	addwfc	(btemp+11)^0,w,c
 38481  0017F8  6EDA               	movwf	fsr2h,c
 38482  0017FA  50DF               	movf	indf2,w,c
 38483  0017FC  A4D8               	btfss	status,2,c
 38484  0017FE  D023               	goto	l17769
 38485                           
 38486                           ;stkvar	_h @ sp[(0)+-2]
 38487  001800  0EFE               	movlw	-2
 38488  001802  006F FF8C  F034    	movff	plusw1,btemp+10
 38489  001808  0EFF               	movlw	-1
 38490  00180A  006F FF8C  F035    	movff	plusw1,btemp+11
 38491  001810  0E05               	movlw	5
 38492  001812  2434               	addwf	(btemp+10)^0,w,c
 38493  001814  6ED9               	movwf	fsr2l,c
 38494  001816  0E00               	movlw	0
 38495  001818  2035               	addwfc	(btemp+11)^0,w,c
 38496  00181A  6EDA               	movwf	fsr2h,c
 38497  00181C  50DF               	movf	indf2,w,c
 38498  00181E  A4D8               	btfss	status,2,c
 38499  001820  D012               	goto	l17769
 38500                           
 38501                           ;hid.c: 52:   h->wait_enter = 1;
 38502                           ;stkvar	_h @ sp[(0)+-2]
 38503  001822  0EFE               	movlw	-2
 38504  001824  006F FF8C  F034    	movff	plusw1,btemp+10
 38505  00182A  0EFF               	movlw	-1
 38506  00182C  006F FF8C  F035    	movff	plusw1,btemp+11
 38507  001832  0E04               	movlw	4
 38508  001834  2434               	addwf	(btemp+10)^0,w,c
 38509  001836  6ED9               	movwf	fsr2l,c
 38510  001838  0E00               	movlw	0
 38511  00183A  2035               	addwfc	(btemp+11)^0,w,c
 38512  00183C  6EDA               	movwf	fsr2h,c
 38513  00183E  0E01               	movlw	1
 38514  001840  6EDF               	movwf	indf2,c
 38515                           
 38516                           ;hid.c: 53:   return 1;
 38517  001842  0E01               	movlw	1
 38518  001844  D001               	goto	L43
 38519  001846                     l17769:
 38520                           
 38521                           ;hid.c: 55:  return 0;
 38522  001846  0E00               	movlw	0
 38523  001848                     L43:
 38524  001848  6E2A               	movwf	btemp^0,c
 38525                           
 38526                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38527  00184A  52E5               	movf	postdec1,f,c
 38528  00184C  52E5               	movf	postdec1,f,c
 38529  00184E  0012               	return		;funcret
 38530  001850                     __end_of_check_enter_button:
 38531                           	opt callstack 0
 38532                           
 38533 ;; *************** function _calc_ror_data *****************
 38534 ;; Defined at:
 38535 ;;		line 103 in file "mbmc.c"
 38536 ;; Parameters:    Size  Location     Type
 38537 ;;		None
 38538 ;; Auto vars:     Size  Location     Type
 38539 ;;		None
 38540 ;; Return value:  Size  Location     Type
 38541 ;;                  1  [STACK] void 
 38542 ;; Registers used:
 38543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38544 ;; Tracked objects:
 38545 ;;		On entry : 0/0
 38546 ;;		On exit  : 0/0
 38547 ;;		Unchanged: 0/0
 38548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38553 ;;Total ram usage:        0 bytes
 38554 ;; Hardware stack levels used:    1
 38555 ;; Hardware stack levels required when called:   18
 38556 ;; This function calls:
 38557 ;;		___flge
 38558 ;;		___flsub
 38559 ;;		_conv_raw_result
 38560 ;;		_fabsf
 38561 ;; This function is called by:
 38562 ;;		_main
 38563 ;; This function uses a reentrant model
 38564 ;;
 38565                           
 38566                           	psect	text140
 38567  01E552                     __ptext140:
 38568                           	opt callstack 0
 38569  01E552                     _calc_ror_data:
 38570                           	opt callstack 12
 38571                           
 38572                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 38573                           
 38574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38575                           ;incstack = 0
 38576  01E552  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 38577  01E558  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 38578  01E55E  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 38579  01E564  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 38580  01E56A  0E00               	movlw	0
 38581  01E56C  6EE6               	movwf	postinc1,c
 38582  01E56E  0E00               	movlw	0
 38583  01E570  6EE6               	movwf	postinc1,c
 38584  01E572  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 38585  01E576  0060  F0AB  FFE6   	movff	btemp,postinc1
 38586  01E57C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38587  01E582  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38588  01E588  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38589  01E58E  EC0D  F011         	call	___flsub	;wreg free
 38590  01E592  0060  F0AB  FFE6   	movff	btemp,postinc1
 38591  01E598  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38592  01E59E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38593  01E5A4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38594  01E5AA  EC81  F006         	call	_fabsf	;wreg free
 38595  01E5AE  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 38596  01E5B4  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 38597  01E5BA  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 38598  01E5C0  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 38599                           
 38600                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 38601  01E5C6  0E00               	movlw	0
 38602  01E5C8  6EE6               	movwf	postinc1,c
 38603  01E5CA  0E00               	movlw	0
 38604  01E5CC  6EE6               	movwf	postinc1,c
 38605  01E5CE  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 38606  01E5D2  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 38607  01E5D8  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 38608  01E5DE  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 38609  01E5E4  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 38610                           
 38611                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 38612  01E5EA  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 38613  01E5F0  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 38614  01E5F6  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 38615  01E5FC  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 38616  01E602  0E00               	movlw	0
 38617  01E604  6EE6               	movwf	postinc1,c
 38618  01E606  0E04               	movlw	4
 38619  01E608  6EE6               	movwf	postinc1,c
 38620  01E60A  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 38621  01E60E  0060  F0AB  FFE6   	movff	btemp,postinc1
 38622  01E614  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38623  01E61A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38624  01E620  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38625  01E626  EC0D  F011         	call	___flsub	;wreg free
 38626  01E62A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38627  01E630  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38628  01E636  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38629  01E63C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38630  01E642  EC81  F006         	call	_fabsf	;wreg free
 38631  01E646  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 38632  01E64C  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 38633  01E652  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 38634  01E658  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 38635                           
 38636                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 38637  01E65E  0EE7               	movlw	231
 38638  01E660  6EE6               	movwf	postinc1,c
 38639  01E662  0E1D               	movlw	29
 38640  01E664  6EE6               	movwf	postinc1,c
 38641  01E666  0EA7               	movlw	167
 38642  01E668  6EE6               	movwf	postinc1,c
 38643  01E66A  0E3B               	movlw	59
 38644  01E66C  6EE6               	movwf	postinc1,c
 38645  01E66E  EE22  F16B         	lfsr	2,_C+108	;volatile
 38646  01E672  006F FF7B FFE6     	movff	postinc2,postinc1
 38647  01E678  006F FF7B FFE6     	movff	postinc2,postinc1
 38648  01E67E  006F FF7B FFE6     	movff	postinc2,postinc1
 38649  01E684  006F FF7B FFE6     	movff	postinc2,postinc1
 38650  01E68A  EC51  F0F6         	call	___flge	;wreg free
 38651  01E68E  B02A               	btfsc	btemp& (0+255),0,c
 38652  01E690  D010               	goto	l14299
 38653                           
 38654                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 38655  01E692  0EB0               	movlw	176
 38656  01E694  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 38657  01E69A  0E03               	movlw	3
 38658  01E69C  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 38659  01E6A2  0E67               	movlw	103
 38660  01E6A4  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 38661  01E6AA  0E3C               	movlw	60
 38662  01E6AC  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 38663  01E6B2                     l14299:
 38664                           
 38665                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 38666  01E6B2  0E00               	movlw	0
 38667  01E6B4  6EE6               	movwf	postinc1,c
 38668  01E6B6  0E04               	movlw	4
 38669  01E6B8  6EE6               	movwf	postinc1,c
 38670  01E6BA  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 38671  01E6BE  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 38672  01E6C4  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 38673  01E6CA  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 38674  01E6D0  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 38675                           
 38676                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 38677  01E6D6  0012               	return		;funcret
 38678  01E6D8                     __end_of_calc_ror_data:
 38679                           	opt callstack 0
 38680                           
 38681 ;; *************** function _fabsf *****************
 38682 ;; Defined at:
 38683 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 38684 ;; Parameters:    Size  Location     Type
 38685 ;;  x               4  [STACK] float 
 38686 ;; Auto vars:     Size  Location     Type
 38687 ;;  u               4  [STACK] struct .
 38688 ;; Return value:  Size  Location     Type
 38689 ;;                  4  [STACK] float 
 38690 ;; Registers used:
 38691 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38692 ;; Tracked objects:
 38693 ;;		On entry : 0/0
 38694 ;;		On exit  : 0/0
 38695 ;;		Unchanged: 0/0
 38696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38701 ;;Total ram usage:        0 bytes
 38702 ;; Hardware stack levels used:    1
 38703 ;; Hardware stack levels required when called:   15
 38704 ;; This function calls:
 38705 ;;		Nothing
 38706 ;; This function is called by:
 38707 ;;		_main
 38708 ;;		_calc_ror_data
 38709 ;;		_calc_bsoc
 38710 ;;		_esr_check
 38711 ;; This function uses a reentrant model
 38712 ;;
 38713                           
 38714                           	psect	text141
 38715  000D02                     __ptext141:
 38716                           	opt callstack 0
 38717  000D02                     _fabsf:
 38718                           	opt callstack 0
 38719                           
 38720                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38721  000D02  52E6               	movf	postinc1,f,c
 38722  000D04  52E6               	movf	postinc1,f,c
 38723  000D06  52E6               	movf	postinc1,f,c
 38724  000D08  52E6               	movf	postinc1,f,c
 38725                           
 38726                           ;incstack = 0
 38727 ;; hardware stack exceeded
 38728  000D0A  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 38729  000D10  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 38730  000D16  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 38731  000D1C  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 38732                           
 38733                           ;stkvar	_u @ sp[(-4)+0]
 38734  000D22  0EFC               	movlw	-4
 38735  000D24  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38736  000D2A  0EFD               	movlw	-3
 38737  000D2C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38738  000D32  0EFE               	movlw	-2
 38739  000D34  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38740  000D3A  0EFF               	movlw	-1
 38741  000D3C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38742                           
 38743                           ;stkvar	_x @ sp[(-4)+-4]
 38744  000D42  0EF8               	movlw	-8
 38745  000D44  006F FF8C  F032    	movff	plusw1,btemp+8
 38746  000D4A  0EF9               	movlw	-7
 38747  000D4C  006F FF8C  F033    	movff	plusw1,btemp+9
 38748  000D52  0EFA               	movlw	-6
 38749  000D54  006F FF8C  F034    	movff	plusw1,btemp+10
 38750  000D5A  0EFB               	movlw	-5
 38751  000D5C  006F FF8C  F035    	movff	plusw1,btemp+11
 38752                           
 38753                           ;stkvar	_u @ sp[(-4)+0]
 38754  000D62  0EFC               	movlw	-4
 38755  000D64  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38756  000D6A  0EFD               	movlw	-3
 38757  000D6C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38758  000D72  0EFE               	movlw	-2
 38759  000D74  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38760  000D7A  0EFF               	movlw	-1
 38761  000D7C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38762                           
 38763                           ;stkvar	_u @ sp[(-4)+0]
 38764  000D82  0EFF               	movlw	-1
 38765  000D84  9EE3               	bcf	plusw1,7,c
 38766                           
 38767                           ;stkvar	_u @ sp[(-4)+0]
 38768  000D86  0EFC               	movlw	-4
 38769  000D88  006F FF8C  F02A    	movff	plusw1,btemp
 38770  000D8E  0EFD               	movlw	-3
 38771  000D90  006F FF8C  F02B    	movff	plusw1,btemp+1
 38772  000D96  0EFE               	movlw	-2
 38773  000D98  006F FF8C  F02C    	movff	plusw1,btemp+2
 38774  000D9E  0EFF               	movlw	-1
 38775  000DA0  006F FF8C  F02D    	movff	plusw1,btemp+3
 38776                           
 38777                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 38778  000DA6  0EF8               	movlw	248
 38779  000DA8  26E1               	addwf	fsr1l,f,c
 38780  000DAA  0EFF               	movlw	255
 38781  000DAC  22E2               	addwfc	fsr1h,f,c
 38782  000DAE  0012               	return		;funcret
 38783  000DB0                     __end_of_fabsf:
 38784                           	opt callstack 0
 38785                           
 38786 ;; *************** function _conv_raw_result *****************
 38787 ;; Defined at:
 38788 ;;		line 133 in file "daq.c"
 38789 ;; Parameters:    Size  Location     Type
 38790 ;;  chan            1  [STACK] const enum E16605
 38791 ;;  to_what         1  [STACK] const enum E16996
 38792 ;; Auto vars:     Size  Location     Type
 38793 ;;		None
 38794 ;; Return value:  Size  Location     Type
 38795 ;;                  4  [STACK] float 
 38796 ;; Registers used:
 38797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38798 ;; Tracked objects:
 38799 ;;		On entry : 0/0
 38800 ;;		On exit  : 0/0
 38801 ;;		Unchanged: 0/0
 38802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38807 ;;Total ram usage:        0 bytes
 38808 ;; Hardware stack levels used:    1
 38809 ;; Hardware stack levels required when called:   17
 38810 ;; This function calls:
 38811 ;;		___fldiv
 38812 ;;		___flmul
 38813 ;;		___flsub
 38814 ;;		___xxtofl
 38815 ;;		_get_raw_result
 38816 ;;		_nanf
 38817 ;; This function is called by:
 38818 ;;		_main
 38819 ;;		_convert_adc_data
 38820 ;;		_calc_ror_data
 38821 ;;		_check_day_time
 38822 ;;		_init_bsoc
 38823 ;;		_esr_check
 38824 ;; This function uses a reentrant model
 38825 ;;
 38826                           
 38827                           	psect	text142
 38828  01913E                     __ptext142:
 38829                           	opt callstack 0
 38830  01913E                     _conv_raw_result:
 38831                           	opt callstack 0
 38832                           
 38833                           ;daq.c: 133: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 134: {;daq.c: 136:  switch (to_what) {
 38834                           
 38835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38836                           ;incstack = 0
 38837 ;; hardware stack exceeded
 38838  01913E  D24A               	goto	l12423
 38839  019140                     l12369:
 38840                           
 38841                           ;daq.c: 138:   if (!(0b0011110001110111 >> chan & 0x1))
 38842                           ;stkvar	_chan @ sp[(0)+-1]
 38843  019140  0EFF               	movlw	-1
 38844  019142  006F FF8C  F035    	movff	plusw1,btemp+11
 38845  019148  0E77               	movlw	119
 38846  01914A  6E32               	movwf	(btemp+8)^0,c
 38847  01914C  0E3C               	movlw	60
 38848  01914E  6E33               	movwf	(btemp+9)^0,c
 38849  019150  2A35               	incf	(btemp+11)^0,f,c
 38850  019152  D003               	goto	u11644
 38851  019154                     u11645:
 38852  019154  3433               	rlcf	(btemp+9)^0,w,c
 38853  019156  3233               	rrcf	(btemp+9)^0,f,c
 38854  019158  3232               	rrcf	(btemp+8)^0,f,c
 38855  01915A                     u11644:
 38856  01915A  2E35               	decfsz	(btemp+11)^0,f,c
 38857  01915C  D7FB               	goto	u11645
 38858  01915E  B032               	btfsc	(btemp+8)^0,0,c
 38859  019160  D007               	goto	l12375
 38860                           
 38861                           ;daq.c: 139:    return nanf("");
 38862  019162  0E3B               	movlw	low (STR_103+126)
 38863  019164  6EE6               	movwf	postinc1,c
 38864  019166  0EFA               	movlw	high (STR_103+126)
 38865  019168  6EE6               	movwf	postinc1,c
 38866  01916A  EC2E  F00E         	call	_nanf	;wreg free
 38867  01916E  D242               	goto	l1983
 38868  019170                     l12375:
 38869                           
 38870                           ;daq.c: 141:   if (0b0000000000000011 >> chan & 0x1) {
 38871                           ;stkvar	_chan @ sp[(0)+-1]
 38872  019170  0EFF               	movlw	-1
 38873  019172  006F FF8C  F035    	movff	plusw1,btemp+11
 38874  019178  0E03               	movlw	3
 38875  01917A  6E32               	movwf	(btemp+8)^0,c
 38876  01917C  0E00               	movlw	0
 38877  01917E  6E33               	movwf	(btemp+9)^0,c
 38878  019180  2A35               	incf	(btemp+11)^0,f,c
 38879  019182  D003               	goto	u11664
 38880  019184                     u11665:
 38881  019184  3433               	rlcf	(btemp+9)^0,w,c
 38882  019186  3233               	rrcf	(btemp+9)^0,f,c
 38883  019188  3232               	rrcf	(btemp+8)^0,f,c
 38884  01918A                     u11664:
 38885  01918A  2E35               	decfsz	(btemp+11)^0,f,c
 38886  01918C  D7FB               	goto	u11665
 38887  01918E  A032               	btfss	(btemp+8)^0,0,c
 38888  019190  D0F3               	goto	l12389
 38889                           
 38890                           ;daq.c: 142:    if (0b0000000000000001 >> chan & 0x1) {
 38891                           ;stkvar	_chan @ sp[(0)+-1]
 38892  019192  0EFF               	movlw	-1
 38893  019194  006F FF8C  F035    	movff	plusw1,btemp+11
 38894  01919A  0E01               	movlw	1
 38895  01919C  6E32               	movwf	(btemp+8)^0,c
 38896  01919E  0E00               	movlw	0
 38897  0191A0  6E33               	movwf	(btemp+9)^0,c
 38898  0191A2  2A35               	incf	(btemp+11)^0,f,c
 38899  0191A4  D003               	goto	u11684
 38900  0191A6                     u11685:
 38901  0191A6  3433               	rlcf	(btemp+9)^0,w,c
 38902  0191A8  3233               	rrcf	(btemp+9)^0,f,c
 38903  0191AA  3232               	rrcf	(btemp+8)^0,f,c
 38904  0191AC                     u11684:
 38905  0191AC  2E35               	decfsz	(btemp+11)^0,f,c
 38906  0191AE  D7FB               	goto	u11685
 38907  0191B0  A032               	btfss	(btemp+8)^0,0,c
 38908  0191B2  D071               	goto	l12385
 38909                           
 38910                           ;daq.c: 143:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 38911  0191B4  0060  F4AB  FFE6   	movff	_R+42,postinc1
 38912  0191BA  0060  F4AF  FFE6   	movff	_R+43,postinc1
 38913  0191C0  0060  F4B3  FFE6   	movff	_R+44,postinc1
 38914  0191C6  0060  F4B7  FFE6   	movff	_R+45,postinc1
 38915  0191CC  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 38916  0191D2  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 38917  0191D8  0E00               	movlw	0
 38918  0191DA  BE33               	btfsc	(btemp+9)^0,7,c
 38919  0191DC  0EFF               	movlw	255
 38920  0191DE  6E34               	movwf	(btemp+10)^0,c
 38921  0191E0  6E35               	movwf	(btemp+11)^0,c
 38922  0191E2  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38923  0191E8  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38924  0191EE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38925  0191F4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38926  0191FA  0E01               	movlw	1
 38927  0191FC  6EE6               	movwf	postinc1,c
 38928  0191FE  ECC9  F0EB         	call	___xxtofl	;wreg free
 38929  019202  0060  F0AB  FFE6   	movff	btemp,postinc1
 38930  019208  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38931  01920E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38932  019214  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38933                           
 38934                           ;stkvar	_chan @ sp[(-8)+-1]
 38935  01921A  0EF7               	movlw	-9
 38936  01921C  50E3               	movf	plusw1,w,c
 38937  01921E  6EE6               	movwf	postinc1,c
 38938  019220  ECBB  F015         	call	_get_raw_result	;wreg free
 38939  019224  0060  F0A8  F034   	movff	btemp,btemp+10
 38940  01922A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38941  019230  5034               	movf	(btemp+10)^0,w,c
 38942  019232  6E2E               	movwf	(btemp+4)^0,c
 38943  019234  5035               	movf	(btemp+11)^0,w,c
 38944  019236  6E2F               	movwf	(btemp+5)^0,c
 38945  019238  6A30               	clrf	(btemp+6)^0,c
 38946  01923A  6A31               	clrf	(btemp+7)^0,c
 38947  01923C  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38948  019242  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38949  019248  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38950  01924E  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38951  019254  0E00               	movlw	0
 38952  019256  6EE6               	movwf	postinc1,c
 38953  019258  ECC9  F0EB         	call	___xxtofl	;wreg free
 38954  01925C  0060  F0AB  FFE6   	movff	btemp,postinc1
 38955  019262  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38956  019268  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38957  01926E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38958  019274  EC0D  F011         	call	___flsub	;wreg free
 38959  019278  0060  F0AB  FFE6   	movff	btemp,postinc1
 38960  01927E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38961  019284  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38962  01928A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38963  019290  EC06  F0B8         	call	___flmul	;wreg free
 38964  019294  D1AF               	goto	l1983
 38965  019296                     l12385:
 38966                           
 38967                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 38968  019296  0060  F4BB  FFE6   	movff	_R+46,postinc1
 38969  01929C  0060  F4BF  FFE6   	movff	_R+47,postinc1
 38970  0192A2  0060  F4C3  FFE6   	movff	_R+48,postinc1
 38971  0192A8  0060  F4C7  FFE6   	movff	_R+49,postinc1
 38972  0192AE  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 38973  0192B4  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 38974  0192BA  0E00               	movlw	0
 38975  0192BC  BE33               	btfsc	(btemp+9)^0,7,c
 38976  0192BE  0EFF               	movlw	255
 38977  0192C0  6E34               	movwf	(btemp+10)^0,c
 38978  0192C2  6E35               	movwf	(btemp+11)^0,c
 38979  0192C4  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38980  0192CA  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38981  0192D0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38982  0192D6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38983  0192DC  0E01               	movlw	1
 38984  0192DE  6EE6               	movwf	postinc1,c
 38985  0192E0  ECC9  F0EB         	call	___xxtofl	;wreg free
 38986  0192E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 38987  0192EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38988  0192F0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38989  0192F6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38990                           
 38991                           ;stkvar	_chan @ sp[(-8)+-1]
 38992  0192FC  0EF7               	movlw	-9
 38993  0192FE  50E3               	movf	plusw1,w,c
 38994  019300  6EE6               	movwf	postinc1,c
 38995  019302  ECBB  F015         	call	_get_raw_result	;wreg free
 38996  019306  0060  F0A8  F034   	movff	btemp,btemp+10
 38997  01930C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38998  019312  5034               	movf	(btemp+10)^0,w,c
 38999  019314  6E2E               	movwf	(btemp+4)^0,c
 39000  019316  5035               	movf	(btemp+11)^0,w,c
 39001  019318  6E2F               	movwf	(btemp+5)^0,c
 39002  01931A  6A30               	clrf	(btemp+6)^0,c
 39003  01931C  6A31               	clrf	(btemp+7)^0,c
 39004  01931E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39005  019324  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39006  01932A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39007  019330  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39008  019336  0E00               	movlw	0
 39009  019338  6EE6               	movwf	postinc1,c
 39010  01933A  ECC9  F0EB         	call	___xxtofl	;wreg free
 39011  01933E  0060  F0AB  FFE6   	movff	btemp,postinc1
 39012  019344  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39013  01934A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39014  019350  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39015  019356  EC0D  F011         	call	___flsub	;wreg free
 39016  01935A  0060  F0AB  FFE6   	movff	btemp,postinc1
 39017  019360  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39018  019366  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39019  01936C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39020  019372  EC06  F0B8         	call	___flmul	;wreg free
 39021  019376  D13E               	goto	l1983
 39022  019378                     l12389:
 39023                           
 39024                           ;daq.c: 148:    if (0b0000100000000000 >> chan & 0x1) {
 39025                           ;stkvar	_chan @ sp[(0)+-1]
 39026  019378  0EFF               	movlw	-1
 39027  01937A  006F FF8C  F035    	movff	plusw1,btemp+11
 39028  019380  0E00               	movlw	0
 39029  019382  6E32               	movwf	(btemp+8)^0,c
 39030  019384  0E08               	movlw	8
 39031  019386  6E33               	movwf	(btemp+9)^0,c
 39032  019388  2A35               	incf	(btemp+11)^0,f,c
 39033  01938A  D003               	goto	u11704
 39034  01938C                     u11705:
 39035  01938C  3433               	rlcf	(btemp+9)^0,w,c
 39036  01938E  3233               	rrcf	(btemp+9)^0,f,c
 39037  019390  3232               	rrcf	(btemp+8)^0,f,c
 39038  019392                     u11704:
 39039  019392  2E35               	decfsz	(btemp+11)^0,f,c
 39040  019394  D7FB               	goto	u11705
 39041  019396  A032               	btfss	(btemp+8)^0,0,c
 39042  019398  D008               	goto	l12397
 39043                           
 39044                           ;daq.c: 149:     return 25.0;
 39045  01939A  0E00               	movlw	0
 39046  01939C  6E2A               	movwf	btemp^0,c
 39047  01939E  0E00               	movlw	0
 39048  0193A0  6E2B               	movwf	(btemp+1)^0,c
 39049  0193A2  0EC8               	movlw	200
 39050  0193A4  6E2C               	movwf	(btemp+2)^0,c
 39051  0193A6  0E41               	movlw	65
 39052  0193A8  D113               	goto	L44
 39053  0193AA                     l12397:
 39054                           
 39055                           ;daq.c: 151:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39056  0193AA  0E00               	movlw	0
 39057  0193AC  6EE6               	movwf	postinc1,c
 39058  0193AE  0E00               	movlw	0
 39059  0193B0  6EE6               	movwf	postinc1,c
 39060  0193B2  0E7A               	movlw	122
 39061  0193B4  6EE6               	movwf	postinc1,c
 39062  0193B6  0E44               	movlw	68
 39063  0193B8  6EE6               	movwf	postinc1,c
 39064  0193BA  0E61               	movlw	97
 39065  0193BC  6EE6               	movwf	postinc1,c
 39066  0193BE  0E03               	movlw	3
 39067  0193C0  6EE6               	movwf	postinc1,c
 39068  0193C2  0E84               	movlw	132
 39069  0193C4  6EE6               	movwf	postinc1,c
 39070  0193C6  0E40               	movlw	64
 39071  0193C8  6EE6               	movwf	postinc1,c
 39072                           
 39073                           ;stkvar	_chan @ sp[(-8)+-1]
 39074  0193CA  0EF7               	movlw	-9
 39075  0193CC  50E3               	movf	plusw1,w,c
 39076  0193CE  6EE6               	movwf	postinc1,c
 39077  0193D0  ECBB  F015         	call	_get_raw_result	;wreg free
 39078  0193D4  0060  F0A8  F034   	movff	btemp,btemp+10
 39079  0193DA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39080  0193E0  5034               	movf	(btemp+10)^0,w,c
 39081  0193E2  6E2E               	movwf	(btemp+4)^0,c
 39082  0193E4  5035               	movf	(btemp+11)^0,w,c
 39083  0193E6  6E2F               	movwf	(btemp+5)^0,c
 39084  0193E8  6A30               	clrf	(btemp+6)^0,c
 39085  0193EA  6A31               	clrf	(btemp+7)^0,c
 39086  0193EC  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39087  0193F2  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39088  0193F8  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39089  0193FE  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39090  019404  0E00               	movlw	0
 39091  019406  6EE6               	movwf	postinc1,c
 39092  019408  ECC9  F0EB         	call	___xxtofl	;wreg free
 39093  01940C  0060  F0AB  FFE6   	movff	btemp,postinc1
 39094  019412  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39095  019418  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39096  01941E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39097  019424  EC06  F0B8         	call	___flmul	;wreg free
 39098  019428  0060  F0AB  FFE6   	movff	btemp,postinc1
 39099  01942E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39100  019434  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39101  01943A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39102  019440  EC57  F0C3         	call	___fldiv	;wreg free
 39103  019444  D0D7               	goto	l1983
 39104  019446                     l12401:
 39105                           
 39106                           ;daq.c: 156:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 39107                           ;stkvar	_chan @ sp[(0)+-1]
 39108  019446  0EFF               	movlw	-1
 39109  019448  006F FF8C  F035    	movff	plusw1,btemp+11
 39110  01944E  0E03               	movlw	3
 39111  019450  6E32               	movwf	(btemp+8)^0,c
 39112  019452  0E00               	movlw	0
 39113  019454  6E33               	movwf	(btemp+9)^0,c
 39114  019456  2A35               	incf	(btemp+11)^0,f,c
 39115  019458  D003               	goto	u11724
 39116  01945A                     u11725:
 39117  01945A  3433               	rlcf	(btemp+9)^0,w,c
 39118  01945C  3233               	rrcf	(btemp+9)^0,f,c
 39119  01945E  3232               	rrcf	(btemp+8)^0,f,c
 39120  019460                     u11724:
 39121  019460  2E35               	decfsz	(btemp+11)^0,f,c
 39122  019462  D7FB               	goto	u11725
 39123  019464  B032               	btfsc	(btemp+8)^0,0,c
 39124  019466  D011               	goto	u11750
 39125                           
 39126                           ;stkvar	_chan @ sp[(0)+-1]
 39127  019468  0EFF               	movlw	-1
 39128  01946A  006F FF8C  F035    	movff	plusw1,btemp+11
 39129  019470  0E00               	movlw	0
 39130  019472  6E32               	movwf	(btemp+8)^0,c
 39131  019474  0E08               	movlw	8
 39132  019476  6E33               	movwf	(btemp+9)^0,c
 39133  019478  2A35               	incf	(btemp+11)^0,f,c
 39134  01947A  D003               	goto	u11744
 39135  01947C                     u11745:
 39136  01947C  3433               	rlcf	(btemp+9)^0,w,c
 39137  01947E  3233               	rrcf	(btemp+9)^0,f,c
 39138  019480  3232               	rrcf	(btemp+8)^0,f,c
 39139  019482                     u11744:
 39140  019482  2E35               	decfsz	(btemp+11)^0,f,c
 39141  019484  D7FB               	goto	u11745
 39142  019486  A032               	btfss	(btemp+8)^0,0,c
 39143  019488  D04E               	goto	l12409
 39144  01948A                     u11750:
 39145                           
 39146                           ;daq.c: 157:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 39147  01948A  0E00               	movlw	0
 39148  01948C  6EE6               	movwf	postinc1,c
 39149  01948E  0E00               	movlw	0
 39150  019490  6EE6               	movwf	postinc1,c
 39151  019492  0E7A               	movlw	122
 39152  019494  6EE6               	movwf	postinc1,c
 39153  019496  0E44               	movlw	68
 39154  019498  6EE6               	movwf	postinc1,c
 39155  01949A  0E00               	movlw	0
 39156  01949C  6EE6               	movwf	postinc1,c
 39157  01949E  0E00               	movlw	0
 39158  0194A0  6EE6               	movwf	postinc1,c
 39159  0194A2  0E20               	movlw	32
 39160  0194A4  6EE6               	movwf	postinc1,c
 39161  0194A6  0E3F               	movlw	63
 39162  0194A8  6EE6               	movwf	postinc1,c
 39163                           
 39164                           ;stkvar	_chan @ sp[(-8)+-1]
 39165  0194AA  0EF7               	movlw	-9
 39166  0194AC  50E3               	movf	plusw1,w,c
 39167  0194AE  6EE6               	movwf	postinc1,c
 39168  0194B0  ECBB  F015         	call	_get_raw_result	;wreg free
 39169  0194B4  0060  F0A8  F034   	movff	btemp,btemp+10
 39170  0194BA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39171  0194C0  5034               	movf	(btemp+10)^0,w,c
 39172  0194C2  6E2E               	movwf	(btemp+4)^0,c
 39173  0194C4  5035               	movf	(btemp+11)^0,w,c
 39174  0194C6  6E2F               	movwf	(btemp+5)^0,c
 39175  0194C8  6A30               	clrf	(btemp+6)^0,c
 39176  0194CA  6A31               	clrf	(btemp+7)^0,c
 39177  0194CC  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39178  0194D2  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39179  0194D8  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39180  0194DE  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39181  0194E4  0E00               	movlw	0
 39182  0194E6  6EE6               	movwf	postinc1,c
 39183  0194E8  ECC9  F0EB         	call	___xxtofl	;wreg free
 39184  0194EC  0060  F0AB  FFE6   	movff	btemp,postinc1
 39185  0194F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39186  0194F8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39187  0194FE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39188  019504  EC06  F0B8         	call	___flmul	;wreg free
 39189  019508  0060  F0AB  FFE6   	movff	btemp,postinc1
 39190  01950E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39191  019514  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39192  01951A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39193  019520  EC57  F0C3         	call	___fldiv	;wreg free
 39194  019524  D067               	goto	l1983
 39195  019526                     l12409:
 39196                           
 39197                           ;daq.c: 159:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39198  019526  0E00               	movlw	0
 39199  019528  6EE6               	movwf	postinc1,c
 39200  01952A  0E00               	movlw	0
 39201  01952C  6EE6               	movwf	postinc1,c
 39202  01952E  0E7A               	movlw	122
 39203  019530  6EE6               	movwf	postinc1,c
 39204  019532  0E44               	movlw	68
 39205  019534  6EE6               	movwf	postinc1,c
 39206  019536  0E61               	movlw	97
 39207  019538  6EE6               	movwf	postinc1,c
 39208  01953A  0E03               	movlw	3
 39209  01953C  6EE6               	movwf	postinc1,c
 39210  01953E  0E84               	movlw	132
 39211  019540  6EE6               	movwf	postinc1,c
 39212  019542  0E40               	movlw	64
 39213  019544  6EE6               	movwf	postinc1,c
 39214                           
 39215                           ;stkvar	_chan @ sp[(-8)+-1]
 39216  019546  0EF7               	movlw	-9
 39217  019548  50E3               	movf	plusw1,w,c
 39218  01954A  6EE6               	movwf	postinc1,c
 39219  01954C  ECBB  F015         	call	_get_raw_result	;wreg free
 39220  019550  0060  F0A8  F034   	movff	btemp,btemp+10
 39221  019556  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39222  01955C  5034               	movf	(btemp+10)^0,w,c
 39223  01955E  6E2E               	movwf	(btemp+4)^0,c
 39224  019560  5035               	movf	(btemp+11)^0,w,c
 39225  019562  6E2F               	movwf	(btemp+5)^0,c
 39226  019564  6A30               	clrf	(btemp+6)^0,c
 39227  019566  6A31               	clrf	(btemp+7)^0,c
 39228  019568  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39229  01956E  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39230  019574  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39231  01957A  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39232  019580  0E00               	movlw	0
 39233  019582  6EE6               	movwf	postinc1,c
 39234  019584  ECC9  F0EB         	call	___xxtofl	;wreg free
 39235  019588  0060  F0AB  FFE6   	movff	btemp,postinc1
 39236  01958E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39237  019594  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39238  01959A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39239  0195A0  EC06  F0B8         	call	___flmul	;wreg free
 39240  0195A4  0060  F0AB  FFE6   	movff	btemp,postinc1
 39241  0195AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39242  0195B0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39243  0195B6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39244  0195BC  EC57  F0C3         	call	___fldiv	;wreg free
 39245  0195C0  D019               	goto	l1983
 39246  0195C2                     l12415:
 39247                           
 39248                           ;daq.c: 162:   return 0.0;
 39249  0195C2  0E00               	movlw	0
 39250  0195C4  6E2A               	movwf	btemp^0,c
 39251  0195C6  0E00               	movlw	0
 39252  0195C8  6E2B               	movwf	(btemp+1)^0,c
 39253  0195CA  0E00               	movlw	0
 39254  0195CC  6E2C               	movwf	(btemp+2)^0,c
 39255  0195CE  0E00               	movlw	0
 39256  0195D0                     L44:
 39257  0195D0  6E2D               	movwf	(btemp+3)^0,c
 39258  0195D2  D010               	goto	l1983
 39259  0195D4                     l12423:
 39260                           
 39261                           ;stkvar	_to_what @ sp[(0)+-2]
 39262  0195D4  0EFE               	movlw	-2
 39263  0195D6  50E3               	movf	plusw1,w,c
 39264  0195D8  6E34               	movwf	(btemp+10)^0,c
 39265  0195DA  6A35               	clrf	(btemp+11)^0,c
 39266                           
 39267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39268                           ; Switch size 1, requested type "simple"
 39269                           ; Number of cases is 1, Range of values is 0 to 0
 39270                           ; switch strategies available:
 39271                           ; Name         Instructions Cycles
 39272                           ; simple_byte            4     3 (average)
 39273                           ;	Chosen strategy is simple_byte
 39274  0195DC  5035               	movf	(btemp+11)^0,w,c
 39275  0195DE  0A00               	xorlw	0	; case 0
 39276  0195E0  A4D8               	btfss	status,2,c
 39277  0195E2  D7EF               	goto	l12415
 39278                           
 39279                           ; Switch size 1, requested type "simple"
 39280                           ; Number of cases is 2, Range of values is 0 to 1
 39281                           ; switch strategies available:
 39282                           ; Name         Instructions Cycles
 39283                           ; simple_byte            7     4 (average)
 39284                           ;	Chosen strategy is simple_byte
 39285  0195E4  5034               	movf	(btemp+10)^0,w,c
 39286  0195E6  0A00               	xorlw	0	; case 0
 39287  0195E8  B4D8               	btfsc	status,2,c
 39288  0195EA  D5AA               	goto	l12369
 39289  0195EC  0A01               	xorlw	1	; case 1
 39290  0195EE  B4D8               	btfsc	status,2,c
 39291  0195F0  D72A               	goto	l12401
 39292  0195F2  D7E7               	goto	l12415
 39293  0195F4                     l1983:
 39294                           
 39295                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 39296  0195F4  52E5               	movf	postdec1,f,c
 39297  0195F6  52E5               	movf	postdec1,f,c
 39298  0195F8  0012               	return		;funcret
 39299  0195FA                     __end_of_conv_raw_result:
 39300                           	opt callstack 0
 39301                           
 39302 ;; *************** function _nanf *****************
 39303 ;; Defined at:
 39304 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 39305 ;; Parameters:    Size  Location     Type
 39306 ;;  s               2  [STACK] PTR const unsigned char 
 39307 ;;		 -> STR_142(1), STR_102(1), 
 39308 ;; Auto vars:     Size  Location     Type
 39309 ;;  u               4  [STACK] struct .
 39310 ;; Return value:  Size  Location     Type
 39311 ;;                  4  [STACK] float 
 39312 ;; Registers used:
 39313 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 39314 ;; Tracked objects:
 39315 ;;		On entry : 0/0
 39316 ;;		On exit  : 0/0
 39317 ;;		Unchanged: 0/0
 39318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39323 ;;Total ram usage:        0 bytes
 39324 ;; Hardware stack levels used:    1
 39325 ;; Hardware stack levels required when called:   15
 39326 ;; This function calls:
 39327 ;;		Nothing
 39328 ;; This function is called by:
 39329 ;;		_conv_raw_result
 39330 ;; This function uses a reentrant model
 39331 ;;
 39332                           
 39333                           	psect	text143
 39334  001C5C                     __ptext143:
 39335                           	opt callstack 0
 39336  001C5C                     _nanf:
 39337                           	opt callstack 0
 39338                           
 39339                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39340  001C5C  52E6               	movf	postinc1,f,c
 39341  001C5E  52E6               	movf	postinc1,f,c
 39342  001C60  52E6               	movf	postinc1,f,c
 39343  001C62  52E6               	movf	postinc1,f,c
 39344                           
 39345                           ;incstack = 0
 39346 ;; hardware stack exceeded
 39347  001C64  0EFF               	movlw	255
 39348  001C66  6E32               	movwf	(btemp+8)^0,c
 39349  001C68  0EFF               	movlw	255
 39350  001C6A  6E33               	movwf	(btemp+9)^0,c
 39351  001C6C  0EFF               	movlw	255
 39352  001C6E  6E34               	movwf	(btemp+10)^0,c
 39353  001C70  0E7F               	movlw	127
 39354  001C72  6E35               	movwf	(btemp+11)^0,c
 39355                           
 39356                           ;stkvar	_u @ sp[(-4)+0]
 39357  001C74  0EFC               	movlw	-4
 39358  001C76  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39359  001C7C  0EFD               	movlw	-3
 39360  001C7E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39361  001C84  0EFE               	movlw	-2
 39362  001C86  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39363  001C8C  0EFF               	movlw	-1
 39364  001C8E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39365                           
 39366                           ;stkvar	_u @ sp[(-4)+0]
 39367  001C94  0EFC               	movlw	-4
 39368  001C96  006F FF8C  F02A    	movff	plusw1,btemp
 39369  001C9C  0EFD               	movlw	-3
 39370  001C9E  006F FF8C  F02B    	movff	plusw1,btemp+1
 39371  001CA4  0EFE               	movlw	-2
 39372  001CA6  006F FF8C  F02C    	movff	plusw1,btemp+2
 39373  001CAC  0EFF               	movlw	-1
 39374  001CAE  006F FF8C  F02D    	movff	plusw1,btemp+3
 39375                           
 39376                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 39377  001CB4  0EFA               	movlw	250
 39378  001CB6  26E1               	addwf	fsr1l,f,c
 39379  001CB8  0EFF               	movlw	255
 39380  001CBA  22E2               	addwfc	fsr1h,f,c
 39381  001CBC  0012               	return		;funcret
 39382  001CBE                     __end_of_nanf:
 39383                           	opt callstack 0
 39384                           
 39385 ;; *************** function _get_raw_result *****************
 39386 ;; Defined at:
 39387 ;;		line 125 in file "daq.c"
 39388 ;; Parameters:    Size  Location     Type
 39389 ;;  index           1  [STACK] const enum E16605
 39390 ;; Auto vars:     Size  Location     Type
 39391 ;;		None
 39392 ;; Return value:  Size  Location     Type
 39393 ;;                  2  [STACK] unsigned short 
 39394 ;; Registers used:
 39395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 39396 ;; Tracked objects:
 39397 ;;		On entry : 0/2
 39398 ;;		On exit  : 0/0
 39399 ;;		Unchanged: 0/0
 39400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39405 ;;Total ram usage:        0 bytes
 39406 ;; Hardware stack levels used:    1
 39407 ;; Hardware stack levels required when called:   15
 39408 ;; This function calls:
 39409 ;;		Nothing
 39410 ;; This function is called by:
 39411 ;;		_main
 39412 ;;		_current_sensor_cal
 39413 ;;		_conv_raw_result
 39414 ;; This function uses a reentrant model
 39415 ;;
 39416                           
 39417                           	psect	text144
 39418  002B76                     __ptext144:
 39419                           	opt callstack 0
 39420  002B76                     _get_raw_result:
 39421                           	opt callstack 0
 39422                           
 39423                           ;daq.c: 125: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 126: {;daq.c
      +                          : 127:  return R.raw_adc[index];
 39424                           ;stkvar	_index @ sp[(0)+-1]
 39425                           
 39426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39427                           ;incstack = 0
 39428 ;; hardware stack exceeded
 39429  002B76  0EFF               	movlw	-1
 39430  002B78  50E3               	movf	plusw1,w,c
 39431  002B7A  0D02               	mullw	2
 39432  002B7C  0E00               	movlw	low _R
 39433  002B7E  24F3               	addwf	243,w,c
 39434  002B80  6ED9               	movwf	fsr2l,c
 39435  002B82  0E01               	movlw	high _R
 39436  002B84  20F4               	addwfc	prodh,w,c
 39437  002B86  6EDA               	movwf	fsr2h,c
 39438  002B88  006F FF78  F02A    	movff	postinc2,btemp
 39439  002B8E  006F FF74  F02B    	movff	postdec2,btemp+1
 39440                           
 39441                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 39442  002B94  52E5               	movf	postdec1,f,c
 39443  002B96  0012               	return		;funcret
 39444  002B98                     __end_of_get_raw_result:
 39445                           	opt callstack 0
 39446                           
 39447 ;; *************** function ___xxtofl *****************
 39448 ;; Defined at:
 39449 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 39450 ;; Parameters:    Size  Location     Type
 39451 ;;  sign            1  [STACK] unsigned char 
 39452 ;;  val             4  [STACK] long 
 39453 ;; Auto vars:     Size  Location     Type
 39454 ;;  arg             4  [STACK] unsigned long 
 39455 ;;  exp             1  [STACK] unsigned char 
 39456 ;; Return value:  Size  Location     Type
 39457 ;;                  4  [STACK] unsigned char 
 39458 ;; Registers used:
 39459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39460 ;; Tracked objects:
 39461 ;;		On entry : 0/1
 39462 ;;		On exit  : 0/0
 39463 ;;		Unchanged: 0/0
 39464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39469 ;;Total ram usage:        0 bytes
 39470 ;; Hardware stack levels used:    1
 39471 ;; Hardware stack levels required when called:   15
 39472 ;; This function calls:
 39473 ;;		Nothing
 39474 ;; This function is called by:
 39475 ;;		_current_sensor_cal
 39476 ;;		_conv_raw_result
 39477 ;;		_init_bsoc
 39478 ;; This function uses a reentrant model
 39479 ;;
 39480                           
 39481                           	psect	text145
 39482  01D792                     __ptext145:
 39483                           	opt callstack 0
 39484  01D792                     ___xxtofl:
 39485                           	opt callstack 0
 39486                           
 39487                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39488  01D792  0E05               	movlw	5
 39489  01D794  26E1               	addwf	fsr1l,f,c
 39490  01D796  0E00               	movlw	0
 39491  01D798  22E2               	addwfc	fsr1h,f,c
 39492                           
 39493                           ;stkvar	_sign @ sp[(-5)+-1]
 39494                           
 39495                           ;incstack = 0
 39496 ;; hardware stack exceeded
 39497  01D79A  0EFA               	movlw	-6
 39498  01D79C  50E3               	movf	plusw1,w,c
 39499  01D79E  B4D8               	btfsc	status,2,c
 39500  01D7A0  D01D               	goto	l12105
 39501                           
 39502                           ;stkvar	_val @ sp[(-5)+-5]
 39503  01D7A2  0EF9               	movlw	-7
 39504  01D7A4  AEE3               	btfss	plusw1,7,c
 39505  01D7A6  D01A               	goto	l12105
 39506                           
 39507                           ;stkvar	_val @ sp[(-5)+-5]
 39508  01D7A8  0EF6               	movlw	-10
 39509  01D7AA  006F FF8C  F032    	movff	plusw1,btemp+8
 39510  01D7B0  0EF7               	movlw	-9
 39511  01D7B2  006F FF8C  F033    	movff	plusw1,btemp+9
 39512  01D7B8  0EF8               	movlw	-8
 39513  01D7BA  006F FF8C  F034    	movff	plusw1,btemp+10
 39514  01D7C0  0EF9               	movlw	-7
 39515  01D7C2  006F FF8C  F035    	movff	plusw1,btemp+11
 39516  01D7C8  1E32               	comf	(btemp+8)^0,f,c
 39517  01D7CA  1E33               	comf	(btemp+9)^0,f,c
 39518  01D7CC  1E34               	comf	(btemp+10)^0,f,c
 39519  01D7CE  1E35               	comf	(btemp+11)^0,f,c
 39520  01D7D0  2A32               	incf	(btemp+8)^0,f,c
 39521  01D7D2  0E00               	movlw	0
 39522  01D7D4  2233               	addwfc	(btemp+9)^0,f,c
 39523  01D7D6  2234               	addwfc	(btemp+10)^0,f,c
 39524  01D7D8  2235               	addwfc	(btemp+11)^0,f,c
 39525  01D7DA  D010               	goto	L45
 39526  01D7DC                     l12105:
 39527                           
 39528                           ;stkvar	_val @ sp[(-5)+-5]
 39529  01D7DC  0EF6               	movlw	-10
 39530  01D7DE  006F FF8C  F032    	movff	plusw1,btemp+8
 39531  01D7E4  0EF7               	movlw	-9
 39532  01D7E6  006F FF8C  F033    	movff	plusw1,btemp+9
 39533  01D7EC  0EF8               	movlw	-8
 39534  01D7EE  006F FF8C  F034    	movff	plusw1,btemp+10
 39535  01D7F4  0EF9               	movlw	-7
 39536  01D7F6  006F FF8C  F035    	movff	plusw1,btemp+11
 39537  01D7FC                     L45:
 39538                           
 39539                           ;stkvar	_arg @ sp[(-5)+0]
 39540  01D7FC  0EFB               	movlw	-5
 39541  01D7FE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39542  01D804  0EFC               	movlw	-4
 39543  01D806  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39544  01D80C  0EFD               	movlw	-3
 39545  01D80E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39546  01D814  0EFE               	movlw	-2
 39547  01D816  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39548                           
 39549                           ;stkvar	_val @ sp[(-5)+-5]
 39550  01D81C  0EF6               	movlw	-10
 39551  01D81E  50E3               	movf	plusw1,w,c
 39552  01D820  E113               	bnz	l12113
 39553  01D822  0EF7               	movlw	-9
 39554  01D824  50E3               	movf	plusw1,w,c
 39555  01D826  E110               	bnz	l12113
 39556  01D828  0EF8               	movlw	-8
 39557  01D82A  50E3               	movf	plusw1,w,c
 39558  01D82C  E10D               	bnz	l12113
 39559  01D82E  0EF9               	movlw	-7
 39560  01D830  50E3               	movf	plusw1,w,c
 39561  01D832  A4D8               	btfss	status,2,c
 39562  01D834  D009               	goto	l12113
 39563  01D836  0E00               	movlw	0
 39564  01D838  6E2A               	movwf	btemp^0,c
 39565  01D83A  0E00               	movlw	0
 39566  01D83C  6E2B               	movwf	(btemp+1)^0,c
 39567  01D83E  0E00               	movlw	0
 39568  01D840  6E2C               	movwf	(btemp+2)^0,c
 39569  01D842  0E00               	movlw	0
 39570  01D844  6E2D               	movwf	(btemp+3)^0,c
 39571  01D846  D0A2               	goto	l3379
 39572  01D848                     l12113:
 39573  01D848  0E96               	movlw	150
 39574  01D84A  6E35               	movwf	(btemp+11)^0,c
 39575                           
 39576                           ;stkvar	_exp @ sp[(-5)+4]
 39577  01D84C  0EFF               	movlw	-1
 39578  01D84E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39579  01D854  D00B               	goto	l12117
 39580  01D856                     l12115:
 39581                           
 39582                           ;stkvar	_exp @ sp[(-5)+4]
 39583  01D856  0EFF               	movlw	-1
 39584  01D858  2AE3               	incf	plusw1,f,c
 39585                           
 39586                           ;stkvar	_arg @ sp[(-5)+0]
 39587  01D85A  90D8               	bcf	status,0,c
 39588  01D85C  0EFE               	movlw	-2
 39589  01D85E  32E3               	rrcf	plusw1,f,c
 39590  01D860  0EFD               	movlw	-3
 39591  01D862  32E3               	rrcf	plusw1,f,c
 39592  01D864  0EFC               	movlw	-4
 39593  01D866  32E3               	rrcf	plusw1,f,c
 39594  01D868  0EFB               	movlw	-5
 39595  01D86A  32E3               	rrcf	plusw1,f,c
 39596  01D86C                     l12117:
 39597                           
 39598                           ;stkvar	_arg @ sp[(-5)+0]
 39599  01D86C  50E1               	movf	fsr1l,w,c
 39600  01D86E  0FFB               	addlw	-5
 39601  01D870  6ED9               	movwf	fsr2l,c
 39602  01D872  50E2               	movf	fsr1h,w,c
 39603  01D874  6EDA               	movwf	fsr2h,c
 39604  01D876  0EFF               	movlw	255
 39605  01D878  22DA               	addwfc	fsr2h,f,c
 39606  01D87A  52DE               	movf	postinc2,f,c
 39607  01D87C  52DE               	movf	postinc2,f,c
 39608  01D87E  52DE               	movf	postinc2,f,c
 39609  01D880  0EFE               	movlw	254
 39610  01D882  14DD               	andwf	postdec2,w,c
 39611  01D884  B4D8               	btfsc	status,2,c
 39612  01D886  D018               	goto	l12125
 39613  01D888  D7E6               	goto	l12115
 39614  01D88A                     l12119:
 39615                           
 39616                           ;stkvar	_exp @ sp[(-5)+4]
 39617  01D88A  0EFF               	movlw	-1
 39618  01D88C  2AE3               	incf	plusw1,f,c
 39619                           
 39620                           ;stkvar	_arg @ sp[(-5)+0]
 39621  01D88E  50E1               	movf	fsr1l,w,c
 39622  01D890  0FFB               	addlw	-5
 39623  01D892  6ED9               	movwf	fsr2l,c
 39624  01D894  50E2               	movf	fsr1h,w,c
 39625  01D896  6EDA               	movwf	fsr2h,c
 39626  01D898  0EFF               	movlw	255
 39627  01D89A  22DA               	addwfc	fsr2h,f,c
 39628  01D89C  2ADE               	incf	postinc2,f,c
 39629  01D89E  0E00               	movlw	0
 39630  01D8A0  22DE               	addwfc	postinc2,f,c
 39631  01D8A2  22DE               	addwfc	postinc2,f,c
 39632  01D8A4  22DE               	addwfc	postinc2,f,c
 39633                           
 39634                           ;stkvar	_arg @ sp[(-5)+0]
 39635  01D8A6  90D8               	bcf	status,0,c
 39636  01D8A8  0EFE               	movlw	-2
 39637  01D8AA  32E3               	rrcf	plusw1,f,c
 39638  01D8AC  0EFD               	movlw	-3
 39639  01D8AE  32E3               	rrcf	plusw1,f,c
 39640  01D8B0  0EFC               	movlw	-4
 39641  01D8B2  32E3               	rrcf	plusw1,f,c
 39642  01D8B4  0EFB               	movlw	-5
 39643  01D8B6  32E3               	rrcf	plusw1,f,c
 39644  01D8B8                     l12125:
 39645                           
 39646                           ;stkvar	_arg @ sp[(-5)+0]
 39647  01D8B8  50E1               	movf	fsr1l,w,c
 39648  01D8BA  0FFB               	addlw	-5
 39649  01D8BC  6ED9               	movwf	fsr2l,c
 39650  01D8BE  50E2               	movf	fsr1h,w,c
 39651  01D8C0  6EDA               	movwf	fsr2h,c
 39652  01D8C2  0EFF               	movlw	255
 39653  01D8C4  22DA               	addwfc	fsr2h,f,c
 39654  01D8C6  52DE               	movf	postinc2,f,c
 39655  01D8C8  52DE               	movf	postinc2,f,c
 39656  01D8CA  52DE               	movf	postinc2,f,c
 39657  01D8CC  0EFF               	movlw	255
 39658  01D8CE  14DD               	andwf	postdec2,w,c
 39659  01D8D0  B4D8               	btfsc	status,2,c
 39660  01D8D2  D00C               	goto	l12129
 39661  01D8D4  D7DA               	goto	l12119
 39662  01D8D6                     l12127:
 39663                           
 39664                           ;stkvar	_exp @ sp[(-5)+4]
 39665  01D8D6  0EFF               	movlw	-1
 39666  01D8D8  06E3               	decf	plusw1,f,c
 39667                           
 39668                           ;stkvar	_arg @ sp[(-5)+0]
 39669  01D8DA  90D8               	bcf	status,0,c
 39670  01D8DC  0EFB               	movlw	-5
 39671  01D8DE  36E3               	rlcf	plusw1,f,c
 39672  01D8E0  0EFC               	movlw	-4
 39673  01D8E2  36E3               	rlcf	plusw1,f,c
 39674  01D8E4  0EFD               	movlw	-3
 39675  01D8E6  36E3               	rlcf	plusw1,f,c
 39676  01D8E8  0EFE               	movlw	-2
 39677  01D8EA  36E3               	rlcf	plusw1,f,c
 39678  01D8EC                     l12129:
 39679                           
 39680                           ;stkvar	_arg @ sp[(-5)+0]
 39681  01D8EC  0EFD               	movlw	-3
 39682  01D8EE  BEE3               	btfsc	plusw1,7,c
 39683  01D8F0  D007               	goto	u11420
 39684                           
 39685                           ;stkvar	_exp @ sp[(-5)+4]
 39686  01D8F2  0EFF               	movlw	-1
 39687  01D8F4  006F FF8C  F02A    	movff	plusw1,btemp
 39688  01D8FA  0E02               	movlw	2
 39689  01D8FC  602A               	cpfslt	btemp^0,c
 39690  01D8FE  D7EB               	goto	l12127
 39691  01D900                     u11420:
 39692                           
 39693                           ;stkvar	_exp @ sp[(-5)+4]
 39694  01D900  0EFF               	movlw	-1
 39695  01D902  B0E3               	btfsc	plusw1,0,c
 39696  01D904  D002               	goto	l12137
 39697                           
 39698                           ;stkvar	_arg @ sp[(-5)+0]
 39699  01D906  0EFD               	movlw	-3
 39700  01D908  9EE3               	bcf	plusw1,7,c
 39701  01D90A                     l12137:
 39702                           
 39703                           ;stkvar	_exp @ sp[(-5)+4]
 39704  01D90A  50E1               	movf	fsr1l,w,c
 39705  01D90C  0FFF               	addlw	-1
 39706  01D90E  6ED9               	movwf	fsr2l,c
 39707  01D910  50E2               	movf	fsr1h,w,c
 39708  01D912  6EDA               	movwf	fsr2h,c
 39709  01D914  0EFF               	movlw	255
 39710  01D916  22DA               	addwfc	fsr2h,f,c
 39711  01D918  90D8               	bcf	status,0,c
 39712  01D91A  32DF               	rrcf	indf2,f,c
 39713                           
 39714                           ;stkvar	_exp @ sp[(-5)+4]
 39715  01D91C  0EFF               	movlw	-1
 39716  01D91E  006F FF8C  F035    	movff	plusw1,btemp+11
 39717  01D924  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 39718  01D92A  6A2F               	clrf	(btemp+5)^0,c
 39719  01D92C  6A30               	clrf	(btemp+6)^0,c
 39720  01D92E  6A31               	clrf	(btemp+7)^0,c
 39721  01D930  0060  F0B8  F031   	movff	btemp+4,btemp+7
 39722  01D936  6A30               	clrf	(btemp+6)^0,c
 39723  01D938  6A2F               	clrf	(btemp+5)^0,c
 39724  01D93A  6A2E               	clrf	(btemp+4)^0,c
 39725                           
 39726                           ;stkvar	_arg @ sp[(-5)+0]
 39727  01D93C  50E1               	movf	fsr1l,w,c
 39728  01D93E  0FFB               	addlw	-5
 39729  01D940  6ED9               	movwf	fsr2l,c
 39730  01D942  50E2               	movf	fsr1h,w,c
 39731  01D944  6EDA               	movwf	fsr2h,c
 39732  01D946  0EFF               	movlw	255
 39733  01D948  22DA               	addwfc	fsr2h,f,c
 39734  01D94A  502E               	movf	(btemp+4)^0,w,c
 39735  01D94C  12DE               	iorwf	postinc2,f,c
 39736  01D94E  502F               	movf	(btemp+5)^0,w,c
 39737  01D950  12DE               	iorwf	postinc2,f,c
 39738  01D952  5030               	movf	(btemp+6)^0,w,c
 39739  01D954  12DE               	iorwf	postinc2,f,c
 39740  01D956  5031               	movf	(btemp+7)^0,w,c
 39741  01D958  12DE               	iorwf	postinc2,f,c
 39742                           
 39743                           ;stkvar	_sign @ sp[(-5)+-1]
 39744  01D95A  0EFA               	movlw	-6
 39745  01D95C  50E3               	movf	plusw1,w,c
 39746  01D95E  B4D8               	btfsc	status,2,c
 39747  01D960  D005               	goto	l12147
 39748                           
 39749                           ;stkvar	_val @ sp[(-5)+-5]
 39750  01D962  0EF9               	movlw	-7
 39751  01D964  AEE3               	btfss	plusw1,7,c
 39752  01D966  D002               	goto	l12147
 39753                           
 39754                           ;stkvar	_arg @ sp[(-5)+0]
 39755  01D968  0EFE               	movlw	-2
 39756  01D96A  8EE3               	bsf	plusw1,7,c
 39757  01D96C                     l12147:
 39758                           
 39759                           ;stkvar	_arg @ sp[(-5)+0]
 39760  01D96C  0EFB               	movlw	-5
 39761  01D96E  006F FF8C  F02A    	movff	plusw1,btemp
 39762  01D974  0EFC               	movlw	-4
 39763  01D976  006F FF8C  F02B    	movff	plusw1,btemp+1
 39764  01D97C  0EFD               	movlw	-3
 39765  01D97E  006F FF8C  F02C    	movff	plusw1,btemp+2
 39766  01D984  0EFE               	movlw	-2
 39767  01D986  006F FF8C  F02D    	movff	plusw1,btemp+3
 39768  01D98C                     l3379:
 39769                           
 39770                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 39771  01D98C  0EF6               	movlw	246
 39772  01D98E  26E1               	addwf	fsr1l,f,c
 39773  01D990  0EFF               	movlw	255
 39774  01D992  22E2               	addwfc	fsr1h,f,c
 39775  01D994  0012               	return		;funcret
 39776  01D996                     __end_of___xxtofl:
 39777                           	opt callstack 0
 39778                           
 39779 ;; *************** function ___fldiv *****************
 39780 ;; Defined at:
 39781 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 39782 ;; Parameters:    Size  Location     Type
 39783 ;;  b               4  [STACK] unsigned char 
 39784 ;;  a               4  [STACK] unsigned char 
 39785 ;; Auto vars:     Size  Location     Type
 39786 ;;  grs             4  [STACK] unsigned long 
 39787 ;;  rem             4  [STACK] unsigned long 
 39788 ;;  new_exp         2  [STACK] short 
 39789 ;;  aexp            1  [STACK] unsigned char 
 39790 ;;  bexp            1  [STACK] unsigned char 
 39791 ;;  sign            1  [STACK] unsigned char 
 39792 ;; Return value:  Size  Location     Type
 39793 ;;                  4  [STACK] unsigned char 
 39794 ;; Registers used:
 39795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 39796 ;; Tracked objects:
 39797 ;;		On entry : 0/0
 39798 ;;		On exit  : 0/0
 39799 ;;		Unchanged: 0/0
 39800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39805 ;;Total ram usage:        0 bytes
 39806 ;; Hardware stack levels used:    1
 39807 ;; Hardware stack levels required when called:   15
 39808 ;; This function calls:
 39809 ;;		Nothing
 39810 ;; This function is called by:
 39811 ;;		_current_sensor_cal
 39812 ;;		_conv_raw_result
 39813 ;;		_convert_dac_raw
 39814 ;;		_load_hist_data
 39815 ;;		_calc_bsoc
 39816 ;;		_init_bsoc
 39817 ;;		_esr_check
 39818 ;;		_efgtoa
 39819 ;; This function uses a reentrant model
 39820 ;;
 39821                           
 39822                           	psect	text146
 39823  0186AE                     __ptext146:
 39824                           	opt callstack 0
 39825  0186AE                     ___fldiv:
 39826                           	opt callstack 0
 39827                           
 39828                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 39829  0186AE  0E0D               	movlw	13
 39830  0186B0  26E1               	addwf	fsr1l,f,c
 39831  0186B2  0E00               	movlw	0
 39832  0186B4  22E2               	addwfc	fsr1h,f,c
 39833                           
 39834                           ;stkvar	_b @ sp[(-13)+-4]
 39835                           
 39836                           ;incstack = 0
 39837 ;; hardware stack exceeded
 39838  0186B6  0EF2               	movlw	242
 39839  0186B8  24E1               	addwf	fsr1l,w,c
 39840  0186BA  6ED9               	movwf	fsr2l,c
 39841  0186BC  0EFF               	movlw	255
 39842  0186BE  20E2               	addwfc	fsr1h,w,c
 39843  0186C0  6EDA               	movwf	fsr2h,c
 39844  0186C2  50DF               	movf	indf2,w,c
 39845  0186C4  6E35               	movwf	(btemp+11)^0,c
 39846  0186C6  0E80               	movlw	128
 39847  0186C8  1635               	andwf	(btemp+11)^0,f,c
 39848                           
 39849                           ;stkvar	_sign @ sp[(-13)+12]
 39850  0186CA  0EFF               	movlw	-1
 39851  0186CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39852                           
 39853                           ;stkvar	_b @ sp[(-13)+-4]
 39854  0186D2  0EF2               	movlw	242
 39855  0186D4  24E1               	addwf	fsr1l,w,c
 39856  0186D6  6ED9               	movwf	fsr2l,c
 39857  0186D8  0EFF               	movlw	255
 39858  0186DA  20E2               	addwfc	fsr1h,w,c
 39859  0186DC  6EDA               	movwf	fsr2h,c
 39860  0186DE  50DF               	movf	indf2,w,c
 39861  0186E0  6E35               	movwf	(btemp+11)^0,c
 39862  0186E2  90D8               	bcf	status,0,c
 39863  0186E4  3435               	rlcf	(btemp+11)^0,w,c
 39864  0186E6  6E34               	movwf	(btemp+10)^0,c
 39865                           
 39866                           ;stkvar	_bexp @ sp[(-13)+11]
 39867  0186E8  0EFE               	movlw	-2
 39868  0186EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39869                           
 39870                           ;stkvar	_b @ sp[(-13)+-4]
 39871  0186F0  0EF1               	movlw	241
 39872  0186F2  24E1               	addwf	fsr1l,w,c
 39873  0186F4  6ED9               	movwf	fsr2l,c
 39874  0186F6  0EFF               	movlw	255
 39875  0186F8  20E2               	addwfc	fsr1h,w,c
 39876  0186FA  6EDA               	movwf	fsr2h,c
 39877  0186FC  AEDF               	btfss	indf2,7,c
 39878  0186FE  D002               	goto	l10391
 39879                           
 39880                           ;stkvar	_bexp @ sp[(-13)+11]
 39881  018700  0EFE               	movlw	-2
 39882  018702  80E3               	bsf	plusw1,0,c
 39883  018704                     l10391:
 39884                           
 39885                           ;stkvar	_bexp @ sp[(-13)+11]
 39886  018704  0EFE               	movlw	-2
 39887  018706  50E3               	movf	plusw1,w,c
 39888  018708  B4D8               	btfsc	status,2,c
 39889  01870A  D027               	goto	l10401
 39890                           
 39891                           ;stkvar	_bexp @ sp[(-13)+11]
 39892  01870C  0EFE               	movlw	-2
 39893  01870E  28E3               	incf	plusw1,w,c
 39894  018710  A4D8               	btfss	status,2,c
 39895  018712  D018               	goto	l10397
 39896  018714  0E00               	movlw	0
 39897  018716  6E32               	movwf	(btemp+8)^0,c
 39898  018718  0E00               	movlw	0
 39899  01871A  6E33               	movwf	(btemp+9)^0,c
 39900  01871C  0E00               	movlw	0
 39901  01871E  6E34               	movwf	(btemp+10)^0,c
 39902  018720  0E00               	movlw	0
 39903  018722  6E35               	movwf	(btemp+11)^0,c
 39904                           
 39905                           ;stkvar	_b @ sp[(-13)+-4]
 39906  018724  0EEF               	movlw	-17
 39907  018726  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39908  01872C  0EF0               	movlw	-16
 39909  01872E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39910  018734  0EF1               	movlw	-15
 39911  018736  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39912  01873C  0EF2               	movlw	-14
 39913  01873E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39914  018744                     l10397:
 39915                           
 39916                           ;stkvar	_b @ sp[(-13)+-4]
 39917  018744  0EF1               	movlw	-15
 39918  018746  8EE3               	bsf	plusw1,7,c
 39919                           
 39920                           ;stkvar	_b @ sp[(-13)+-4]
 39921  018748  0EF2               	movlw	242
 39922  01874A  24E1               	addwf	fsr1l,w,c
 39923  01874C  6ED9               	movwf	fsr2l,c
 39924  01874E  0EFF               	movlw	255
 39925  018750  20E2               	addwfc	fsr1h,w,c
 39926  018752  6EDA               	movwf	fsr2h,c
 39927  018754  0E00               	movlw	0
 39928  018756  6EDF               	movwf	indf2,c
 39929  018758  D018               	goto	l10403
 39930  01875A                     l10401:
 39931  01875A  0E00               	movlw	0
 39932  01875C  6E32               	movwf	(btemp+8)^0,c
 39933  01875E  0E00               	movlw	0
 39934  018760  6E33               	movwf	(btemp+9)^0,c
 39935  018762  0E00               	movlw	0
 39936  018764  6E34               	movwf	(btemp+10)^0,c
 39937  018766  0E00               	movlw	0
 39938  018768  6E35               	movwf	(btemp+11)^0,c
 39939                           
 39940                           ;stkvar	_b @ sp[(-13)+-4]
 39941  01876A  0EEF               	movlw	-17
 39942  01876C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39943  018772  0EF0               	movlw	-16
 39944  018774  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39945  01877A  0EF1               	movlw	-15
 39946  01877C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39947  018782  0EF2               	movlw	-14
 39948  018784  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39949  01878A                     l10403:
 39950                           
 39951                           ;stkvar	_a @ sp[(-13)+-8]
 39952  01878A  0EEE               	movlw	238
 39953  01878C  24E1               	addwf	fsr1l,w,c
 39954  01878E  6ED9               	movwf	fsr2l,c
 39955  018790  0EFF               	movlw	255
 39956  018792  20E2               	addwfc	fsr1h,w,c
 39957  018794  6EDA               	movwf	fsr2h,c
 39958  018796  50DF               	movf	indf2,w,c
 39959  018798  6E35               	movwf	(btemp+11)^0,c
 39960  01879A  0E80               	movlw	128
 39961  01879C  1635               	andwf	(btemp+11)^0,f,c
 39962                           
 39963                           ;stkvar	_sign @ sp[(-13)+12]
 39964  01879E  50E1               	movf	fsr1l,w,c
 39965  0187A0  0FFF               	addlw	-1
 39966  0187A2  6ED9               	movwf	fsr2l,c
 39967  0187A4  50E2               	movf	fsr1h,w,c
 39968  0187A6  6EDA               	movwf	fsr2h,c
 39969  0187A8  0EFF               	movlw	255
 39970  0187AA  22DA               	addwfc	fsr2h,f,c
 39971  0187AC  5035               	movf	(btemp+11)^0,w,c
 39972  0187AE  1ADF               	xorwf	indf2,f,c
 39973                           
 39974                           ;stkvar	_a @ sp[(-13)+-8]
 39975  0187B0  0EEE               	movlw	238
 39976  0187B2  24E1               	addwf	fsr1l,w,c
 39977  0187B4  6ED9               	movwf	fsr2l,c
 39978  0187B6  0EFF               	movlw	255
 39979  0187B8  20E2               	addwfc	fsr1h,w,c
 39980  0187BA  6EDA               	movwf	fsr2h,c
 39981  0187BC  50DF               	movf	indf2,w,c
 39982  0187BE  6E35               	movwf	(btemp+11)^0,c
 39983  0187C0  90D8               	bcf	status,0,c
 39984  0187C2  3435               	rlcf	(btemp+11)^0,w,c
 39985  0187C4  6E34               	movwf	(btemp+10)^0,c
 39986                           
 39987                           ;stkvar	_aexp @ sp[(-13)+10]
 39988  0187C6  0EFD               	movlw	-3
 39989  0187C8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39990                           
 39991                           ;stkvar	_a @ sp[(-13)+-8]
 39992  0187CE  0EED               	movlw	237
 39993  0187D0  24E1               	addwf	fsr1l,w,c
 39994  0187D2  6ED9               	movwf	fsr2l,c
 39995  0187D4  0EFF               	movlw	255
 39996  0187D6  20E2               	addwfc	fsr1h,w,c
 39997  0187D8  6EDA               	movwf	fsr2h,c
 39998  0187DA  AEDF               	btfss	indf2,7,c
 39999  0187DC  D002               	goto	l10411
 40000                           
 40001                           ;stkvar	_aexp @ sp[(-13)+10]
 40002  0187DE  0EFD               	movlw	-3
 40003  0187E0  80E3               	bsf	plusw1,0,c
 40004  0187E2                     l10411:
 40005                           
 40006                           ;stkvar	_aexp @ sp[(-13)+10]
 40007  0187E2  0EFD               	movlw	-3
 40008  0187E4  50E3               	movf	plusw1,w,c
 40009  0187E6  B4D8               	btfsc	status,2,c
 40010  0187E8  D027               	goto	l10421
 40011                           
 40012                           ;stkvar	_aexp @ sp[(-13)+10]
 40013  0187EA  0EFD               	movlw	-3
 40014  0187EC  28E3               	incf	plusw1,w,c
 40015  0187EE  A4D8               	btfss	status,2,c
 40016  0187F0  D018               	goto	l10417
 40017  0187F2  0E00               	movlw	0
 40018  0187F4  6E32               	movwf	(btemp+8)^0,c
 40019  0187F6  0E00               	movlw	0
 40020  0187F8  6E33               	movwf	(btemp+9)^0,c
 40021  0187FA  0E00               	movlw	0
 40022  0187FC  6E34               	movwf	(btemp+10)^0,c
 40023  0187FE  0E00               	movlw	0
 40024  018800  6E35               	movwf	(btemp+11)^0,c
 40025                           
 40026                           ;stkvar	_a @ sp[(-13)+-8]
 40027  018802  0EEB               	movlw	-21
 40028  018804  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40029  01880A  0EEC               	movlw	-20
 40030  01880C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40031  018812  0EED               	movlw	-19
 40032  018814  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40033  01881A  0EEE               	movlw	-18
 40034  01881C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40035  018822                     l10417:
 40036                           
 40037                           ;stkvar	_a @ sp[(-13)+-8]
 40038  018822  0EED               	movlw	-19
 40039  018824  8EE3               	bsf	plusw1,7,c
 40040                           
 40041                           ;stkvar	_a @ sp[(-13)+-8]
 40042  018826  0EEE               	movlw	238
 40043  018828  24E1               	addwf	fsr1l,w,c
 40044  01882A  6ED9               	movwf	fsr2l,c
 40045  01882C  0EFF               	movlw	255
 40046  01882E  20E2               	addwfc	fsr1h,w,c
 40047  018830  6EDA               	movwf	fsr2h,c
 40048  018832  0E00               	movlw	0
 40049  018834  6EDF               	movwf	indf2,c
 40050  018836  D018               	goto	l10423
 40051  018838                     l10421:
 40052  018838  0E00               	movlw	0
 40053  01883A  6E32               	movwf	(btemp+8)^0,c
 40054  01883C  0E00               	movlw	0
 40055  01883E  6E33               	movwf	(btemp+9)^0,c
 40056  018840  0E00               	movlw	0
 40057  018842  6E34               	movwf	(btemp+10)^0,c
 40058  018844  0E00               	movlw	0
 40059  018846  6E35               	movwf	(btemp+11)^0,c
 40060                           
 40061                           ;stkvar	_a @ sp[(-13)+-8]
 40062  018848  0EEB               	movlw	-21
 40063  01884A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40064  018850  0EEC               	movlw	-20
 40065  018852  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40066  018858  0EED               	movlw	-19
 40067  01885A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40068  018860  0EEE               	movlw	-18
 40069  018862  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40070  018868                     l10423:
 40071                           
 40072                           ;stkvar	_a @ sp[(-13)+-8]
 40073  018868  0EEB               	movlw	-21
 40074  01886A  50E3               	movf	plusw1,w,c
 40075  01886C  E139               	bnz	l10435
 40076  01886E  0EEC               	movlw	-20
 40077  018870  50E3               	movf	plusw1,w,c
 40078  018872  E136               	bnz	l10435
 40079  018874  0EED               	movlw	-19
 40080  018876  50E3               	movf	plusw1,w,c
 40081  018878  E133               	bnz	l10435
 40082  01887A  0EEE               	movlw	-18
 40083  01887C  50E3               	movf	plusw1,w,c
 40084  01887E  A4D8               	btfss	status,2,c
 40085  018880  D02F               	goto	l10435
 40086                           
 40087                           ;stkvar	_b @ sp[(-13)+-4]
 40088  018882  0EEF               	movlw	-17
 40089  018884  6AE3               	clrf	plusw1,c
 40090  018886  0EF0               	movlw	-16
 40091  018888  6AE3               	clrf	plusw1,c
 40092  01888A  0EF1               	movlw	-15
 40093  01888C  6AE3               	clrf	plusw1,c
 40094  01888E  0EF2               	movlw	-14
 40095  018890  6AE3               	clrf	plusw1,c
 40096                           
 40097                           ;stkvar	_b @ sp[(-13)+-4]
 40098  018892  0EF1               	movlw	241
 40099  018894  24E1               	addwf	fsr1l,w,c
 40100  018896  6ED9               	movwf	fsr2l,c
 40101  018898  0EFF               	movlw	255
 40102  01889A  20E2               	addwfc	fsr1h,w,c
 40103  01889C  6EDA               	movwf	fsr2h,c
 40104  01889E  0E80               	movlw	128
 40105  0188A0  12DE               	iorwf	postinc2,f,c
 40106  0188A2  0E7F               	movlw	127
 40107  0188A4  12DD               	iorwf	postdec2,f,c
 40108  0188A6                     l10429:
 40109                           
 40110                           ;stkvar	_sign @ sp[(-13)+12]
 40111  0188A6  0EFF               	movlw	-1
 40112  0188A8  006F FF8C  F035    	movff	plusw1,btemp+11
 40113                           
 40114                           ;stkvar	_b @ sp[(-13)+-4]
 40115  0188AE  0EF2               	movlw	242
 40116  0188B0  24E1               	addwf	fsr1l,w,c
 40117  0188B2  6ED9               	movwf	fsr2l,c
 40118  0188B4  0EFF               	movlw	255
 40119  0188B6  20E2               	addwfc	fsr1h,w,c
 40120  0188B8  6EDA               	movwf	fsr2h,c
 40121  0188BA  5035               	movf	(btemp+11)^0,w,c
 40122  0188BC  12DF               	iorwf	indf2,f,c
 40123                           
 40124                           ;stkvar	_b @ sp[(-13)+-4]
 40125  0188BE  0EEF               	movlw	-17
 40126  0188C0  006F FF8C  F02A    	movff	plusw1,btemp
 40127  0188C6  0EF0               	movlw	-16
 40128  0188C8  006F FF8C  F02B    	movff	plusw1,btemp+1
 40129  0188CE  0EF1               	movlw	-15
 40130  0188D0  006F FF8C  F02C    	movff	plusw1,btemp+2
 40131  0188D6  0EF2               	movlw	-14
 40132  0188D8  006F FF8C  F02D    	movff	plusw1,btemp+3
 40133  0188DE  D19F               	goto	l3303
 40134  0188E0                     l10435:
 40135                           
 40136                           ;stkvar	_bexp @ sp[(-13)+11]
 40137  0188E0  0EFE               	movlw	-2
 40138  0188E2  50E3               	movf	plusw1,w,c
 40139  0188E4  A4D8               	btfss	status,2,c
 40140  0188E6  D009               	goto	l10443
 40141  0188E8  0E00               	movlw	0
 40142  0188EA  6E2A               	movwf	btemp^0,c
 40143  0188EC  0E00               	movlw	0
 40144  0188EE  6E2B               	movwf	(btemp+1)^0,c
 40145  0188F0  0E00               	movlw	0
 40146  0188F2  6E2C               	movwf	(btemp+2)^0,c
 40147  0188F4  0E00               	movlw	0
 40148  0188F6  6E2D               	movwf	(btemp+3)^0,c
 40149  0188F8  D192               	goto	l3303
 40150  0188FA                     l10443:
 40151                           
 40152                           ;stkvar	_bexp @ sp[(-13)+11]
 40153  0188FA  0EFE               	movlw	-2
 40154  0188FC  50E3               	movf	plusw1,w,c
 40155  0188FE  6E34               	movwf	(btemp+10)^0,c
 40156  018900  6A35               	clrf	(btemp+11)^0,c
 40157                           
 40158                           ;stkvar	_aexp @ sp[(-13)+10]
 40159  018902  0EFD               	movlw	-3
 40160  018904  50E3               	movf	plusw1,w,c
 40161  018906  5E34               	subwf	(btemp+10)^0,f,c
 40162  018908  0E00               	movlw	0
 40163  01890A  5A35               	subwfb	(btemp+11)^0,f,c
 40164  01890C  0E7F               	movlw	127
 40165  01890E  2634               	addwf	(btemp+10)^0,f,c
 40166  018910  0E00               	movlw	0
 40167  018912  2235               	addwfc	(btemp+11)^0,f,c
 40168                           
 40169                           ;stkvar	_new_exp @ sp[(-13)+8]
 40170  018914  0EFB               	movlw	-5
 40171  018916  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40172  01891C  0EFC               	movlw	-4
 40173  01891E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40174                           
 40175                           ;stkvar	_b @ sp[(-13)+-4]
 40176  018924  0EEF               	movlw	-17
 40177  018926  006F FF8C  F032    	movff	plusw1,btemp+8
 40178  01892C  0EF0               	movlw	-16
 40179  01892E  006F FF8C  F033    	movff	plusw1,btemp+9
 40180  018934  0EF1               	movlw	-15
 40181  018936  006F FF8C  F034    	movff	plusw1,btemp+10
 40182  01893C  0EF2               	movlw	-14
 40183  01893E  006F FF8C  F035    	movff	plusw1,btemp+11
 40184                           
 40185                           ;stkvar	_rem @ sp[(-13)+4]
 40186  018944  0EF7               	movlw	-9
 40187  018946  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40188  01894C  0EF8               	movlw	-8
 40189  01894E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40190  018954  0EF9               	movlw	-7
 40191  018956  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40192  01895C  0EFA               	movlw	-6
 40193  01895E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40194                           
 40195                           ;stkvar	_b @ sp[(-13)+-4]
 40196  018964  0EEF               	movlw	-17
 40197  018966  6AE3               	clrf	plusw1,c
 40198  018968  0EF0               	movlw	-16
 40199  01896A  6AE3               	clrf	plusw1,c
 40200  01896C  0EF1               	movlw	-15
 40201  01896E  6AE3               	clrf	plusw1,c
 40202  018970  0EF2               	movlw	-14
 40203  018972  6AE3               	clrf	plusw1,c
 40204                           
 40205                           ;stkvar	_grs @ sp[(-13)+0]
 40206  018974  0EF3               	movlw	-13
 40207  018976  6AE3               	clrf	plusw1,c
 40208  018978  0EF4               	movlw	-12
 40209  01897A  6AE3               	clrf	plusw1,c
 40210  01897C  0EF5               	movlw	-11
 40211  01897E  6AE3               	clrf	plusw1,c
 40212  018980  0EF6               	movlw	-10
 40213  018982  6AE3               	clrf	plusw1,c
 40214                           
 40215                           ;stkvar	_aexp @ sp[(-13)+10]
 40216  018984  0EFD               	movlw	-3
 40217  018986  6AE3               	clrf	plusw1,c
 40218  018988  D050               	goto	l10471
 40219  01898A                     l10453:
 40220                           
 40221                           ;stkvar	_aexp @ sp[(-13)+10]
 40222  01898A  0EFD               	movlw	-3
 40223  01898C  50E3               	movf	plusw1,w,c
 40224  01898E  B4D8               	btfsc	status,2,c
 40225  018990  D020               	goto	l10463
 40226                           
 40227                           ;stkvar	_rem @ sp[(-13)+4]
 40228  018992  90D8               	bcf	status,0,c
 40229  018994  0EF7               	movlw	-9
 40230  018996  36E3               	rlcf	plusw1,f,c
 40231  018998  0EF8               	movlw	-8
 40232  01899A  36E3               	rlcf	plusw1,f,c
 40233  01899C  0EF9               	movlw	-7
 40234  01899E  36E3               	rlcf	plusw1,f,c
 40235  0189A0  0EFA               	movlw	-6
 40236  0189A2  36E3               	rlcf	plusw1,f,c
 40237                           
 40238                           ;stkvar	_b @ sp[(-13)+-4]
 40239  0189A4  90D8               	bcf	status,0,c
 40240  0189A6  0EEF               	movlw	-17
 40241  0189A8  36E3               	rlcf	plusw1,f,c
 40242  0189AA  0EF0               	movlw	-16
 40243  0189AC  36E3               	rlcf	plusw1,f,c
 40244  0189AE  0EF1               	movlw	-15
 40245  0189B0  36E3               	rlcf	plusw1,f,c
 40246  0189B2  0EF2               	movlw	-14
 40247  0189B4  36E3               	rlcf	plusw1,f,c
 40248                           
 40249                           ;stkvar	_grs @ sp[(-13)+0]
 40250  0189B6  0EF6               	movlw	-10
 40251  0189B8  AEE3               	btfss	plusw1,7,c
 40252  0189BA  D002               	goto	l10461
 40253                           
 40254                           ;stkvar	_b @ sp[(-13)+-4]
 40255  0189BC  0EEF               	movlw	-17
 40256  0189BE  80E3               	bsf	plusw1,0,c
 40257  0189C0                     l10461:
 40258                           
 40259                           ;stkvar	_grs @ sp[(-13)+0]
 40260  0189C0  90D8               	bcf	status,0,c
 40261  0189C2  0EF3               	movlw	-13
 40262  0189C4  36E3               	rlcf	plusw1,f,c
 40263  0189C6  0EF4               	movlw	-12
 40264  0189C8  36E3               	rlcf	plusw1,f,c
 40265  0189CA  0EF5               	movlw	-11
 40266  0189CC  36E3               	rlcf	plusw1,f,c
 40267  0189CE  0EF6               	movlw	-10
 40268  0189D0  36E3               	rlcf	plusw1,f,c
 40269  0189D2                     l10463:
 40270                           
 40271                           ;stkvar	_a @ sp[(-13)+-8]
 40272                           ;stkvar	_rem @ sp[(-13)+4]
 40273  0189D2  50E1               	movf	fsr1l,w,c
 40274  0189D4  0FF7               	addlw	-9
 40275  0189D6  6ED9               	movwf	fsr2l,c
 40276  0189D8  50E2               	movf	fsr1h,w,c
 40277  0189DA  6EDA               	movwf	fsr2h,c
 40278  0189DC  0EFF               	movlw	255
 40279  0189DE  22DA               	addwfc	fsr2h,f,c
 40280  0189E0  0EEB               	movlw	-21
 40281  0189E2  50E3               	movf	plusw1,w,c
 40282  0189E4  5CDE               	subwf	postinc2,w,c
 40283  0189E6  0EEC               	movlw	-20
 40284  0189E8  50E3               	movf	plusw1,w,c
 40285  0189EA  58DE               	subwfb	postinc2,w,c
 40286  0189EC  0EED               	movlw	-19
 40287  0189EE  50E3               	movf	plusw1,w,c
 40288  0189F0  58DE               	subwfb	postinc2,w,c
 40289  0189F2  0EEE               	movlw	-18
 40290  0189F4  50E3               	movf	plusw1,w,c
 40291  0189F6  58DE               	subwfb	postinc2,w,c
 40292  0189F8  A0D8               	btfss	status,0,c
 40293  0189FA  D015               	goto	l10469
 40294                           
 40295                           ;stkvar	_grs @ sp[(-13)+0]
 40296  0189FC  0EF6               	movlw	-10
 40297  0189FE  8CE3               	bsf	plusw1,6,c
 40298                           
 40299                           ;stkvar	_a @ sp[(-13)+-8]
 40300                           ;stkvar	_rem @ sp[(-13)+4]
 40301  018A00  50E1               	movf	fsr1l,w,c
 40302  018A02  0FF7               	addlw	-9
 40303  018A04  6ED9               	movwf	fsr2l,c
 40304  018A06  50E2               	movf	fsr1h,w,c
 40305  018A08  6EDA               	movwf	fsr2h,c
 40306  018A0A  0EFF               	movlw	255
 40307  018A0C  22DA               	addwfc	fsr2h,f,c
 40308  018A0E  0EEB               	movlw	-21
 40309  018A10  50E3               	movf	plusw1,w,c
 40310  018A12  5EDE               	subwf	postinc2,f,c
 40311  018A14  0EEC               	movlw	-20
 40312  018A16  50E3               	movf	plusw1,w,c
 40313  018A18  5ADE               	subwfb	postinc2,f,c
 40314  018A1A  0EED               	movlw	-19
 40315  018A1C  50E3               	movf	plusw1,w,c
 40316  018A1E  5ADE               	subwfb	postinc2,f,c
 40317  018A20  0EEE               	movlw	-18
 40318  018A22  50E3               	movf	plusw1,w,c
 40319  018A24  5ADE               	subwfb	postinc2,f,c
 40320  018A26                     l10469:
 40321                           
 40322                           ;stkvar	_aexp @ sp[(-13)+10]
 40323  018A26  0EFD               	movlw	-3
 40324  018A28  2AE3               	incf	plusw1,f,c
 40325  018A2A                     l10471:
 40326                           
 40327                           ;stkvar	_aexp @ sp[(-13)+10]
 40328  018A2A  0EFD               	movlw	-3
 40329  018A2C  006F FF8C  F02A    	movff	plusw1,btemp
 40330  018A32  0E19               	movlw	25
 40331  018A34  642A               	cpfsgt	btemp^0,c
 40332  018A36  D7A9               	goto	l10453
 40333                           
 40334                           ;stkvar	_rem @ sp[(-13)+4]
 40335  018A38  0EF7               	movlw	-9
 40336  018A3A  50E3               	movf	plusw1,w,c
 40337  018A3C  E10A               	bnz	u8510
 40338  018A3E  0EF8               	movlw	-8
 40339  018A40  50E3               	movf	plusw1,w,c
 40340  018A42  E107               	bnz	u8510
 40341  018A44  0EF9               	movlw	-7
 40342  018A46  50E3               	movf	plusw1,w,c
 40343  018A48  E104               	bnz	u8510
 40344  018A4A  0EFA               	movlw	-6
 40345  018A4C  50E3               	movf	plusw1,w,c
 40346  018A4E  B4D8               	btfsc	status,2,c
 40347  018A50  D024               	goto	l10487
 40348  018A52                     u8510:
 40349                           
 40350                           ;stkvar	_grs @ sp[(-13)+0]
 40351  018A52  0EF3               	movlw	-13
 40352  018A54  80E3               	bsf	plusw1,0,c
 40353  018A56  D021               	goto	l10487
 40354  018A58                     l10477:
 40355                           
 40356                           ;stkvar	_b @ sp[(-13)+-4]
 40357  018A58  90D8               	bcf	status,0,c
 40358  018A5A  0EEF               	movlw	-17
 40359  018A5C  36E3               	rlcf	plusw1,f,c
 40360  018A5E  0EF0               	movlw	-16
 40361  018A60  36E3               	rlcf	plusw1,f,c
 40362  018A62  0EF1               	movlw	-15
 40363  018A64  36E3               	rlcf	plusw1,f,c
 40364  018A66  0EF2               	movlw	-14
 40365  018A68  36E3               	rlcf	plusw1,f,c
 40366                           
 40367                           ;stkvar	_grs @ sp[(-13)+0]
 40368  018A6A  0EF6               	movlw	-10
 40369  018A6C  AEE3               	btfss	plusw1,7,c
 40370  018A6E  D002               	goto	l10483
 40371                           
 40372                           ;stkvar	_b @ sp[(-13)+-4]
 40373  018A70  0EEF               	movlw	-17
 40374  018A72  80E3               	bsf	plusw1,0,c
 40375  018A74                     l10483:
 40376                           
 40377                           ;stkvar	_grs @ sp[(-13)+0]
 40378  018A74  90D8               	bcf	status,0,c
 40379  018A76  0EF3               	movlw	-13
 40380  018A78  36E3               	rlcf	plusw1,f,c
 40381  018A7A  0EF4               	movlw	-12
 40382  018A7C  36E3               	rlcf	plusw1,f,c
 40383  018A7E  0EF5               	movlw	-11
 40384  018A80  36E3               	rlcf	plusw1,f,c
 40385  018A82  0EF6               	movlw	-10
 40386  018A84  36E3               	rlcf	plusw1,f,c
 40387                           
 40388                           ;stkvar	_new_exp @ sp[(-13)+8]
 40389  018A86  50E1               	movf	fsr1l,w,c
 40390  018A88  0FFB               	addlw	-5
 40391  018A8A  6ED9               	movwf	fsr2l,c
 40392  018A8C  50E2               	movf	fsr1h,w,c
 40393  018A8E  6EDA               	movwf	fsr2h,c
 40394  018A90  0EFF               	movlw	255
 40395  018A92  22DA               	addwfc	fsr2h,f,c
 40396  018A94  06DE               	decf	postinc2,f,c
 40397  018A96  0E00               	movlw	0
 40398  018A98  5ADD               	subwfb	postdec2,f,c
 40399  018A9A                     l10487:
 40400                           
 40401                           ;stkvar	_b @ sp[(-13)+-4]
 40402  018A9A  0EF1               	movlw	-15
 40403  018A9C  AEE3               	btfss	plusw1,7,c
 40404  018A9E  D7DC               	goto	l10477
 40405                           
 40406                           ;stkvar	_aexp @ sp[(-13)+10]
 40407  018AA0  0EFD               	movlw	-3
 40408  018AA2  6AE3               	clrf	plusw1,c
 40409                           
 40410                           ;stkvar	_grs @ sp[(-13)+0]
 40411  018AA4  0EF6               	movlw	-10
 40412  018AA6  AEE3               	btfss	plusw1,7,c
 40413  018AA8  D020               	goto	l10501
 40414                           
 40415                           ;stkvar	_grs @ sp[(-13)+0]
 40416  018AAA  50E1               	movf	fsr1l,w,c
 40417  018AAC  0FF3               	addlw	-13
 40418  018AAE  6ED9               	movwf	fsr2l,c
 40419  018AB0  50E2               	movf	fsr1h,w,c
 40420  018AB2  6EDA               	movwf	fsr2h,c
 40421  018AB4  0EFF               	movlw	255
 40422  018AB6  22DA               	addwfc	fsr2h,f,c
 40423  018AB8  0EFF               	movlw	255
 40424  018ABA  14DE               	andwf	postinc2,w,c
 40425  018ABC  6E32               	movwf	(btemp+8)^0,c
 40426  018ABE  0EFF               	movlw	255
 40427  018AC0  14DE               	andwf	postinc2,w,c
 40428  018AC2  6E33               	movwf	(btemp+9)^0,c
 40429  018AC4  0EFF               	movlw	255
 40430  018AC6  14DE               	andwf	postinc2,w,c
 40431  018AC8  6E34               	movwf	(btemp+10)^0,c
 40432  018ACA  0E7F               	movlw	127
 40433  018ACC  14DE               	andwf	postinc2,w,c
 40434  018ACE  6E35               	movwf	(btemp+11)^0,c
 40435  018AD0  5032               	movf	(btemp+8)^0,w,c
 40436  018AD2  1033               	iorwf	(btemp+9)^0,w,c
 40437  018AD4  1034               	iorwf	(btemp+10)^0,w,c
 40438  018AD6  1035               	iorwf	(btemp+11)^0,w,c
 40439  018AD8  B4D8               	btfsc	status,2,c
 40440  018ADA  D004               	goto	l10497
 40441  018ADC                     u8550:
 40442                           
 40443                           ;stkvar	_aexp @ sp[(-13)+10]
 40444  018ADC  0EFD               	movlw	-3
 40445  018ADE  6AE3               	clrf	plusw1,c
 40446  018AE0  2AE3               	incf	plusw1,f,c
 40447  018AE2  D003               	goto	l10501
 40448  018AE4                     l10497:
 40449                           
 40450                           ;stkvar	_b @ sp[(-13)+-4]
 40451  018AE4  0EEF               	movlw	-17
 40452  018AE6  B0E3               	btfsc	plusw1,0,c
 40453  018AE8  D7F9               	goto	u8550
 40454  018AEA                     l10501:
 40455                           
 40456                           ;stkvar	_aexp @ sp[(-13)+10]
 40457  018AEA  0EFD               	movlw	-3
 40458  018AEC  50E3               	movf	plusw1,w,c
 40459  018AEE  B4D8               	btfsc	status,2,c
 40460  018AF0  D036               	goto	l10511
 40461                           
 40462                           ;stkvar	_b @ sp[(-13)+-4]
 40463  018AF2  50E1               	movf	fsr1l,w,c
 40464  018AF4  0FEF               	addlw	-17
 40465  018AF6  6ED9               	movwf	fsr2l,c
 40466  018AF8  50E2               	movf	fsr1h,w,c
 40467  018AFA  6EDA               	movwf	fsr2h,c
 40468  018AFC  0EFF               	movlw	255
 40469  018AFE  22DA               	addwfc	fsr2h,f,c
 40470  018B00  2ADE               	incf	postinc2,f,c
 40471  018B02  0E00               	movlw	0
 40472  018B04  22DE               	addwfc	postinc2,f,c
 40473  018B06  22DE               	addwfc	postinc2,f,c
 40474  018B08  22DE               	addwfc	postinc2,f,c
 40475                           
 40476                           ;stkvar	_b @ sp[(-13)+-4]
 40477  018B0A  0EF2               	movlw	-14
 40478  018B0C  A0E3               	btfss	plusw1,0,c
 40479  018B0E  D027               	goto	l10511
 40480  018B10  0E01               	movlw	1
 40481  018B12  6E35               	movwf	(btemp+11)^0,c
 40482                           
 40483                           ;stkvar	_b @ sp[(-13)+-4]
 40484  018B14  50E1               	movf	fsr1l,w,c
 40485  018B16  0FEF               	addlw	-17
 40486  018B18  6ED9               	movwf	fsr2l,c
 40487  018B1A  50E2               	movf	fsr1h,w,c
 40488  018B1C  6EDA               	movwf	fsr2h,c
 40489  018B1E  0EFF               	movlw	255
 40490  018B20  22DA               	addwfc	fsr2h,f,c
 40491  018B22  2835               	incf	(btemp+11)^0,w,c
 40492  018B24  52DE               	movf	postinc2,f,c
 40493  018B26  D008               	goto	u8590
 40494  018B28                     u8595:
 40495  018B28  52DE               	movf	postinc2,f,c
 40496  018B2A  90D8               	bcf	status,0,c
 40497  018B2C  BEDC               	btfsc	preinc2,7,c
 40498  018B2E  80D8               	bsf	status,0,c
 40499  018B30  32DD               	rrcf	postdec2,f,c
 40500  018B32  32DD               	rrcf	postdec2,f,c
 40501  018B34  32DD               	rrcf	postdec2,f,c
 40502  018B36  32DE               	rrcf	postinc2,f,c
 40503  018B38                     u8590:
 40504  018B38  2EE8               	decfsz	wreg,f,c
 40505  018B3A  D7F6               	goto	u8595
 40506                           
 40507                           ;stkvar	_new_exp @ sp[(-13)+8]
 40508  018B3C  0EFB               	movlw	-5
 40509  018B3E  50E3               	movf	plusw1,w,c
 40510  018B40  0F01               	addlw	1
 40511  018B42  6E2A               	movwf	btemp^0,c
 40512  018B44  0EFB               	movlw	-5
 40513  018B46  0060  F0AB  FFE3   	movff	btemp,plusw1
 40514  018B4C  6A2A               	clrf	btemp^0,c
 40515  018B4E  0EFC               	movlw	-4
 40516  018B50  50E3               	movf	plusw1,w,c
 40517  018B52  202A               	addwfc	btemp^0,w,c
 40518  018B54  6E2A               	movwf	btemp^0,c
 40519  018B56  0EFC               	movlw	-4
 40520  018B58  0060  F0AB  FFE3   	movff	btemp,plusw1
 40521  018B5E                     l10511:
 40522                           
 40523                           ;stkvar	_new_exp @ sp[(-13)+8]
 40524  018B5E  0EFC               	movlw	-4
 40525  018B60  BEE3               	btfsc	plusw1,7,c
 40526  018B62  D01B               	goto	l10517
 40527  018B64  0EFC               	movlw	-4
 40528  018B66  50E3               	movf	plusw1,w,c
 40529  018B68  E104               	bnz	u8600
 40530  018B6A  0EFB               	movlw	-5
 40531  018B6C  28E3               	incf	plusw1,w,c
 40532  018B6E  A0D8               	btfss	status,0,c
 40533  018B70  D014               	goto	l10517
 40534  018B72                     u8600:
 40535  018B72  0EFF               	movlw	255
 40536  018B74  6E34               	movwf	(btemp+10)^0,c
 40537  018B76  0E00               	movlw	0
 40538  018B78  6E35               	movwf	(btemp+11)^0,c
 40539                           
 40540                           ;stkvar	_new_exp @ sp[(-13)+8]
 40541  018B7A  0EFB               	movlw	-5
 40542  018B7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40543  018B82  0EFC               	movlw	-4
 40544  018B84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40545                           
 40546                           ;stkvar	_b @ sp[(-13)+-4]
 40547  018B8A  0EEF               	movlw	-17
 40548  018B8C  6AE3               	clrf	plusw1,c
 40549  018B8E  0EF0               	movlw	-16
 40550  018B90  6AE3               	clrf	plusw1,c
 40551  018B92  0EF1               	movlw	-15
 40552  018B94  6AE3               	clrf	plusw1,c
 40553  018B96  0EF2               	movlw	-14
 40554  018B98  6AE3               	clrf	plusw1,c
 40555  018B9A                     l10517:
 40556                           
 40557                           ;stkvar	_new_exp @ sp[(-13)+8]
 40558  018B9A  0EFC               	movlw	-4
 40559  018B9C  BEE3               	btfsc	plusw1,7,c
 40560  018B9E  D007               	goto	u8610
 40561  018BA0  0EFC               	movlw	-4
 40562  018BA2  50E3               	movf	plusw1,w,c
 40563  018BA4  E112               	bnz	l10523
 40564  018BA6  0EFB               	movlw	-5
 40565  018BA8  04E3               	decf	plusw1,w,c
 40566  018BAA  B0D8               	btfsc	status,0,c
 40567  018BAC  D00E               	goto	l10523
 40568  018BAE                     u8610:
 40569                           
 40570                           ;stkvar	_new_exp @ sp[(-13)+8]
 40571  018BAE  0EFB               	movlw	-5
 40572  018BB0  6AE3               	clrf	plusw1,c
 40573  018BB2  0EFC               	movlw	-4
 40574  018BB4  6AE3               	clrf	plusw1,c
 40575                           
 40576                           ;stkvar	_b @ sp[(-13)+-4]
 40577  018BB6  0EEF               	movlw	-17
 40578  018BB8  6AE3               	clrf	plusw1,c
 40579  018BBA  0EF0               	movlw	-16
 40580  018BBC  6AE3               	clrf	plusw1,c
 40581  018BBE  0EF1               	movlw	-15
 40582  018BC0  6AE3               	clrf	plusw1,c
 40583  018BC2  0EF2               	movlw	-14
 40584  018BC4  6AE3               	clrf	plusw1,c
 40585                           
 40586                           ;stkvar	_sign @ sp[(-13)+12]
 40587  018BC6  0EFF               	movlw	-1
 40588  018BC8  6AE3               	clrf	plusw1,c
 40589  018BCA                     l10523:
 40590                           
 40591                           ;stkvar	_new_exp @ sp[(-13)+8]
 40592                           ;stkvar	_bexp @ sp[(-13)+11]
 40593  018BCA  0EFB               	movlw	-5
 40594  018BCC  006F FF8C  F02A    	movff	plusw1,btemp
 40595  018BD2  0EFE               	movlw	-2
 40596  018BD4  0060  F0AB  FFE3   	movff	btemp,plusw1
 40597                           
 40598                           ;stkvar	_bexp @ sp[(-13)+11]
 40599  018BDA  0EFE               	movlw	-2
 40600  018BDC  A0E3               	btfss	plusw1,0,c
 40601  018BDE  D009               	goto	l10529
 40602                           
 40603                           ;stkvar	_b @ sp[(-13)+-4]
 40604  018BE0  0EF1               	movlw	241
 40605  018BE2  24E1               	addwf	fsr1l,w,c
 40606  018BE4  6ED9               	movwf	fsr2l,c
 40607  018BE6  0EFF               	movlw	255
 40608  018BE8  20E2               	addwfc	fsr1h,w,c
 40609  018BEA  6EDA               	movwf	fsr2h,c
 40610  018BEC  0E00               	movlw	0
 40611  018BEE  8EDB               	bsf	plusw2,7,c
 40612  018BF0  D008               	goto	l10531
 40613  018BF2                     l10529:
 40614                           
 40615                           ;stkvar	_b @ sp[(-13)+-4]
 40616  018BF2  0EF1               	movlw	241
 40617  018BF4  24E1               	addwf	fsr1l,w,c
 40618  018BF6  6ED9               	movwf	fsr2l,c
 40619  018BF8  0EFF               	movlw	255
 40620  018BFA  20E2               	addwfc	fsr1h,w,c
 40621  018BFC  6EDA               	movwf	fsr2h,c
 40622  018BFE  0E7F               	movlw	127
 40623  018C00  16DF               	andwf	indf2,f,c
 40624  018C02                     l10531:
 40625                           
 40626                           ;stkvar	_b @ sp[(-13)+-4]
 40627  018C02  0EF2               	movlw	242
 40628  018C04  24E1               	addwf	fsr1l,w,c
 40629  018C06  6ED9               	movwf	fsr2l,c
 40630  018C08  0EFF               	movlw	255
 40631  018C0A  20E2               	addwfc	fsr1h,w,c
 40632  018C0C  6EDA               	movwf	fsr2h,c
 40633                           
 40634                           ;stkvar	_bexp @ sp[(-13)+11]
 40635  018C0E  0EFE               	movlw	-2
 40636  018C10  006F FF8C  F035    	movff	plusw1,btemp+11
 40637  018C16  90D8               	bcf	status,0,c
 40638  018C18  3035               	rrcf	(btemp+11)^0,w,c
 40639  018C1A  6EDF               	movwf	indf2,c
 40640  018C1C  D644               	goto	l10429
 40641  018C1E                     l3303:
 40642                           
 40643                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 40644  018C1E  0EEB               	movlw	235
 40645  018C20  26E1               	addwf	fsr1l,f,c
 40646  018C22  0EFF               	movlw	255
 40647  018C24  22E2               	addwfc	fsr1h,f,c
 40648  018C26  0012               	return		;funcret
 40649  018C28                     __end_of___fldiv:
 40650                           	opt callstack 0
 40651                           
 40652 ;; *************** function ___flge *****************
 40653 ;; Defined at:
 40654 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 40655 ;; Parameters:    Size  Location     Type
 40656 ;;  ff1             4  [STACK] unsigned char 
 40657 ;;  ff2             4  [STACK] unsigned char 
 40658 ;; Auto vars:     Size  Location     Type
 40659 ;;		None
 40660 ;; Return value:  Size  Location     Type
 40661 ;;		None               void
 40662 ;; Registers used:
 40663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 40664 ;; Tracked objects:
 40665 ;;		On entry : 0/1
 40666 ;;		On exit  : 0/0
 40667 ;;		Unchanged: 0/0
 40668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40673 ;;Total ram usage:        0 bytes
 40674 ;; Hardware stack levels used:    1
 40675 ;; Hardware stack levels required when called:   15
 40676 ;; This function calls:
 40677 ;;		Nothing
 40678 ;; This function is called by:
 40679 ;;		_main
 40680 ;;		_convert_dac_raw
 40681 ;;		_calc_ror_data
 40682 ;;		_check_day_time
 40683 ;;		_calc_bsoc
 40684 ;;		_efgtoa
 40685 ;; This function uses a reentrant model
 40686 ;;
 40687                           
 40688                           	psect	text147
 40689  01ECA2                     __ptext147:
 40690                           	opt callstack 0
 40691  01ECA2                     ___flge:
 40692                           	opt callstack 0
 40693                           
 40694                           ;stkvar	_ff1 @ sp[(0)+-4]
 40695                           
 40696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40697                           ;incstack = 0
 40698 ;; hardware stack exceeded
 40699  01ECA2  50E1               	movf	fsr1l,w,c
 40700  01ECA4  0FFC               	addlw	-4
 40701  01ECA6  6ED9               	movwf	fsr2l,c
 40702  01ECA8  50E2               	movf	fsr1h,w,c
 40703  01ECAA  6EDA               	movwf	fsr2h,c
 40704  01ECAC  0EFF               	movlw	255
 40705  01ECAE  22DA               	addwfc	fsr2h,f,c
 40706  01ECB0  0E00               	movlw	0
 40707  01ECB2  14DE               	andwf	postinc2,w,c
 40708  01ECB4  6E32               	movwf	(btemp+8)^0,c
 40709  01ECB6  0E00               	movlw	0
 40710  01ECB8  14DE               	andwf	postinc2,w,c
 40711  01ECBA  6E33               	movwf	(btemp+9)^0,c
 40712  01ECBC  0E80               	movlw	128
 40713  01ECBE  14DE               	andwf	postinc2,w,c
 40714  01ECC0  6E34               	movwf	(btemp+10)^0,c
 40715  01ECC2  0E7F               	movlw	127
 40716  01ECC4  14DE               	andwf	postinc2,w,c
 40717  01ECC6  6E35               	movwf	(btemp+11)^0,c
 40718  01ECC8  5032               	movf	(btemp+8)^0,w,c
 40719  01ECCA  1033               	iorwf	(btemp+9)^0,w,c
 40720  01ECCC  1034               	iorwf	(btemp+10)^0,w,c
 40721  01ECCE  1035               	iorwf	(btemp+11)^0,w,c
 40722  01ECD0  A4D8               	btfss	status,2,c
 40723  01ECD2  D008               	goto	l10805
 40724                           
 40725                           ;stkvar	_ff1 @ sp[(0)+-4]
 40726  01ECD4  0EFC               	movlw	-4
 40727  01ECD6  6AE3               	clrf	plusw1,c
 40728  01ECD8  0EFD               	movlw	-3
 40729  01ECDA  6AE3               	clrf	plusw1,c
 40730  01ECDC  0EFE               	movlw	-2
 40731  01ECDE  6AE3               	clrf	plusw1,c
 40732  01ECE0  0EFF               	movlw	-1
 40733  01ECE2  6AE3               	clrf	plusw1,c
 40734  01ECE4                     l10805:
 40735                           
 40736                           ;stkvar	_ff2 @ sp[(0)+-8]
 40737  01ECE4  50E1               	movf	fsr1l,w,c
 40738  01ECE6  0FF8               	addlw	-8
 40739  01ECE8  6ED9               	movwf	fsr2l,c
 40740  01ECEA  50E2               	movf	fsr1h,w,c
 40741  01ECEC  6EDA               	movwf	fsr2h,c
 40742  01ECEE  0EFF               	movlw	255
 40743  01ECF0  22DA               	addwfc	fsr2h,f,c
 40744  01ECF2  0E00               	movlw	0
 40745  01ECF4  14DE               	andwf	postinc2,w,c
 40746  01ECF6  6E32               	movwf	(btemp+8)^0,c
 40747  01ECF8  0E00               	movlw	0
 40748  01ECFA  14DE               	andwf	postinc2,w,c
 40749  01ECFC  6E33               	movwf	(btemp+9)^0,c
 40750  01ECFE  0E80               	movlw	128
 40751  01ED00  14DE               	andwf	postinc2,w,c
 40752  01ED02  6E34               	movwf	(btemp+10)^0,c
 40753  01ED04  0E7F               	movlw	127
 40754  01ED06  14DE               	andwf	postinc2,w,c
 40755  01ED08  6E35               	movwf	(btemp+11)^0,c
 40756  01ED0A  5032               	movf	(btemp+8)^0,w,c
 40757  01ED0C  1033               	iorwf	(btemp+9)^0,w,c
 40758  01ED0E  1034               	iorwf	(btemp+10)^0,w,c
 40759  01ED10  1035               	iorwf	(btemp+11)^0,w,c
 40760  01ED12  A4D8               	btfss	status,2,c
 40761  01ED14  D008               	goto	l2984
 40762                           
 40763                           ;stkvar	_ff2 @ sp[(0)+-8]
 40764  01ED16  0EF8               	movlw	-8
 40765  01ED18  6AE3               	clrf	plusw1,c
 40766  01ED1A  0EF9               	movlw	-7
 40767  01ED1C  6AE3               	clrf	plusw1,c
 40768  01ED1E  0EFA               	movlw	-6
 40769  01ED20  6AE3               	clrf	plusw1,c
 40770  01ED22  0EFB               	movlw	-5
 40771  01ED24  6AE3               	clrf	plusw1,c
 40772  01ED26                     l2984:
 40773                           
 40774                           ;stkvar	_ff1 @ sp[(0)+-4]
 40775  01ED26  0EFF               	movlw	-1
 40776  01ED28  AEE3               	btfss	plusw1,7,c
 40777  01ED2A  D024               	goto	l10811
 40778                           
 40779                           ;stkvar	_ff1 @ sp[(0)+-4]
 40780  01ED2C  0E00               	movlw	0
 40781  01ED2E  6E32               	movwf	(btemp+8)^0,c
 40782  01ED30  0E00               	movlw	0
 40783  01ED32  6E33               	movwf	(btemp+9)^0,c
 40784  01ED34  0E00               	movlw	0
 40785  01ED36  6E34               	movwf	(btemp+10)^0,c
 40786  01ED38  0E80               	movlw	128
 40787  01ED3A  6E35               	movwf	(btemp+11)^0,c
 40788  01ED3C  0EFC               	movlw	-4
 40789  01ED3E  50E3               	movf	plusw1,w,c
 40790  01ED40  5E32               	subwf	(btemp+8)^0,f,c
 40791  01ED42  0EFD               	movlw	-3
 40792  01ED44  50E3               	movf	plusw1,w,c
 40793  01ED46  5A33               	subwfb	(btemp+9)^0,f,c
 40794  01ED48  0EFE               	movlw	-2
 40795  01ED4A  50E3               	movf	plusw1,w,c
 40796  01ED4C  5A34               	subwfb	(btemp+10)^0,f,c
 40797  01ED4E  0EFF               	movlw	-1
 40798  01ED50  50E3               	movf	plusw1,w,c
 40799  01ED52  5A35               	subwfb	(btemp+11)^0,f,c
 40800                           
 40801                           ;stkvar	_ff1 @ sp[(0)+-4]
 40802  01ED54  0EFC               	movlw	-4
 40803  01ED56  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40804  01ED5C  0EFD               	movlw	-3
 40805  01ED5E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40806  01ED64  0EFE               	movlw	-2
 40807  01ED66  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40808  01ED6C  0EFF               	movlw	-1
 40809  01ED6E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40810  01ED74                     l10811:
 40811                           
 40812                           ;stkvar	_ff2 @ sp[(0)+-8]
 40813  01ED74  0EFB               	movlw	-5
 40814  01ED76  AEE3               	btfss	plusw1,7,c
 40815  01ED78  D024               	goto	l10815
 40816                           
 40817                           ;stkvar	_ff2 @ sp[(0)+-8]
 40818  01ED7A  0E00               	movlw	0
 40819  01ED7C  6E32               	movwf	(btemp+8)^0,c
 40820  01ED7E  0E00               	movlw	0
 40821  01ED80  6E33               	movwf	(btemp+9)^0,c
 40822  01ED82  0E00               	movlw	0
 40823  01ED84  6E34               	movwf	(btemp+10)^0,c
 40824  01ED86  0E80               	movlw	128
 40825  01ED88  6E35               	movwf	(btemp+11)^0,c
 40826  01ED8A  0EF8               	movlw	-8
 40827  01ED8C  50E3               	movf	plusw1,w,c
 40828  01ED8E  5E32               	subwf	(btemp+8)^0,f,c
 40829  01ED90  0EF9               	movlw	-7
 40830  01ED92  50E3               	movf	plusw1,w,c
 40831  01ED94  5A33               	subwfb	(btemp+9)^0,f,c
 40832  01ED96  0EFA               	movlw	-6
 40833  01ED98  50E3               	movf	plusw1,w,c
 40834  01ED9A  5A34               	subwfb	(btemp+10)^0,f,c
 40835  01ED9C  0EFB               	movlw	-5
 40836  01ED9E  50E3               	movf	plusw1,w,c
 40837  01EDA0  5A35               	subwfb	(btemp+11)^0,f,c
 40838                           
 40839                           ;stkvar	_ff2 @ sp[(0)+-8]
 40840  01EDA2  0EF8               	movlw	-8
 40841  01EDA4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40842  01EDAA  0EF9               	movlw	-7
 40843  01EDAC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40844  01EDB2  0EFA               	movlw	-6
 40845  01EDB4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40846  01EDBA  0EFB               	movlw	-5
 40847  01EDBC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40848  01EDC2                     l10815:
 40849                           
 40850                           ;stkvar	_ff1 @ sp[(0)+-4]
 40851  01EDC2  0EFF               	movlw	-1
 40852  01EDC4  7EE3               	btg	plusw1,7,c
 40853                           
 40854                           ;stkvar	_ff2 @ sp[(0)+-8]
 40855  01EDC6  0EFB               	movlw	-5
 40856  01EDC8  7EE3               	btg	plusw1,7,c
 40857                           
 40858                           ;stkvar	_ff2 @ sp[(0)+-8]
 40859                           ;stkvar	_ff1 @ sp[(0)+-4]
 40860  01EDCA  50E1               	movf	fsr1l,w,c
 40861  01EDCC  0FFC               	addlw	-4
 40862  01EDCE  6ED9               	movwf	fsr2l,c
 40863  01EDD0  50E2               	movf	fsr1h,w,c
 40864  01EDD2  6EDA               	movwf	fsr2h,c
 40865  01EDD4  0EFF               	movlw	255
 40866  01EDD6  22DA               	addwfc	fsr2h,f,c
 40867  01EDD8  0EF8               	movlw	-8
 40868  01EDDA  50E3               	movf	plusw1,w,c
 40869  01EDDC  5CDE               	subwf	postinc2,w,c
 40870  01EDDE  0EF9               	movlw	-7
 40871  01EDE0  50E3               	movf	plusw1,w,c
 40872  01EDE2  58DE               	subwfb	postinc2,w,c
 40873  01EDE4  0EFA               	movlw	-6
 40874  01EDE6  50E3               	movf	plusw1,w,c
 40875  01EDE8  58DE               	subwfb	postinc2,w,c
 40876  01EDEA  0EFB               	movlw	-5
 40877  01EDEC  50E3               	movf	plusw1,w,c
 40878  01EDEE  58DE               	subwfb	postinc2,w,c
 40879  01EDF0  B0D8               	btfsc	status,0,c
 40880  01EDF2  D002               	goto	l10823
 40881  01EDF4  902A               	bcf	btemp& (0+255),0,c
 40882  01EDF6  D001               	goto	l2991
 40883  01EDF8                     l10823:
 40884  01EDF8  802A               	bsf	btemp& (0+255),0,c
 40885  01EDFA                     l2991:
 40886                           
 40887                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 40888  01EDFA  0EF8               	movlw	248
 40889  01EDFC  26E1               	addwf	fsr1l,f,c
 40890  01EDFE  0EFF               	movlw	255
 40891  01EE00  22E2               	addwfc	fsr1h,f,c
 40892  01EE02  0012               	return		;funcret
 40893  01EE04                     __end_of___flge:
 40894                           	opt callstack 0
 40895                           
 40896 ;; *************** function _calc_model_data *****************
 40897 ;; Defined at:
 40898 ;;		line 67 in file "mbmc.c"
 40899 ;; Parameters:    Size  Location     Type
 40900 ;;		None
 40901 ;; Auto vars:     Size  Location     Type
 40902 ;;		None
 40903 ;; Return value:  Size  Location     Type
 40904 ;;                  1  [STACK] void 
 40905 ;; Registers used:
 40906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40907 ;; Tracked objects:
 40908 ;;		On entry : 3F/0
 40909 ;;		On exit  : 3F/39
 40910 ;;		Unchanged: 0/0
 40911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40916 ;;Total ram usage:        0 bytes
 40917 ;; Hardware stack levels used:    1
 40918 ;; Hardware stack levels required when called:   18
 40919 ;; This function calls:
 40920 ;;		___fladd
 40921 ;;		___flmul
 40922 ;;		___flsub
 40923 ;;		_lp_filter
 40924 ;;		_start_bsoc
 40925 ;;		_stop_bsoc
 40926 ;; This function is called by:
 40927 ;;		_main
 40928 ;; This function uses a reentrant model
 40929 ;;
 40930                           
 40931                           	psect	text148
 40932  019A7A                     __ptext148:
 40933                           	opt callstack 0
 40934  019A7A                     _calc_model_data:
 40935                           	opt callstack 12
 40936                           
 40937                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 40938                           
 40939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40940                           ;incstack = 0
 40941  019A7A  EC4D  F017         	call	_stop_bsoc	;wreg free
 40942                           
 40943                           ; BSR set to: 57
 40944                           ;mbmc.c: 72:  if (!V.calib) {
 40945  019A7E  0102               	movlb	2	; () banked
 40946  019A80  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 40947  019A82  A4D8               	btfss	status,2,c
 40948  019A84  D220               	goto	l14601
 40949                           
 40950                           ; BSR set to: 2
 40951                           ;mbmc.c: 73:   C.updates++;
 40952  019A86  EE22  F24B         	lfsr	2,_C+332	;volatile
 40953  019A8A  2ADE               	incf	postinc2,f,c
 40954  019A8C  0E00               	movlw	0
 40955  019A8E  22DE               	addwfc	postinc2,f,c
 40956  019A90  22DE               	addwfc	postinc2,f,c
 40957  019A92  22DE               	addwfc	postinc2,f,c
 40958                           
 40959                           ; BSR set to: 2
 40960                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 40961  019A94  EE22  F0FF         	lfsr	2,_C
 40962  019A98  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 40963  019A9E  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 40964  019AA4  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 40965  019AAA  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 40966                           
 40967                           ; BSR set to: 2
 40968                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 40969  019AB0  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 40970  019AB6  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 40971  019ABC  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 40972  019AC2  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 40973  019AC8  EE22  F143         	lfsr	2,_C+68	;volatile
 40974  019ACC  006F FF7B FFE6     	movff	postinc2,postinc1
 40975  019AD2  006F FF7B FFE6     	movff	postinc2,postinc1
 40976  019AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 40977  019ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 40978  019AE4  EC0D  F011         	call	___flsub	;wreg free
 40979  019AE8  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 40980  019AEE  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 40981  019AF4  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 40982  019AFA  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 40983                           
 40984                           ;mbmc.c: 76:   bcror = C.c_bat;
 40985  019B00  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 40986  019B04  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 40987  019B08  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 40988  019B0C  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 40989                           
 40990                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 40991  019B10  EE22  F103         	lfsr	2,_C+4	;volatile
 40992  019B14  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 40993  019B1A  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 40994  019B20  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 40995  019B26  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 40996                           
 40997                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 40998  019B2C  EE22  F10F         	lfsr	2,_C+16	;volatile
 40999  019B30  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 41000  019B36  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 41001  019B3C  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 41002  019B42  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 41003                           
 41004                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 41005  019B48  EE22  F133         	lfsr	2,_C+52	;volatile
 41006  019B4C  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 41007  019B52  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 41008  019B58  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 41009  019B5E  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 41010                           
 41011                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 41012  019B64  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 41013  019B6A  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 41014  019B70  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 41015  019B76  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 41016  019B7C  EE22  F153         	lfsr	2,_C+84	;volatile
 41017  019B80  006F FF7B FFE6     	movff	postinc2,postinc1
 41018  019B86  006F FF7B FFE6     	movff	postinc2,postinc1
 41019  019B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 41020  019B92  006F FF7B FFE6     	movff	postinc2,postinc1
 41021  019B98  EC0D  F011         	call	___flsub	;wreg free
 41022  019B9C  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 41023  019BA2  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 41024  019BA8  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 41025  019BAE  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 41026                           
 41027                           ;mbmc.c: 81:   bvror = C.v_bat;
 41028  019BB4  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 41029  019BB8  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 41030  019BBC  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 41031  019BC0  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 41032                           
 41033                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 41034  019BC4  EE22  F113         	lfsr	2,_C+20	;volatile
 41035  019BC8  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 41036  019BCE  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 41037  019BD4  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 41038  019BDA  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 41039                           
 41040                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 41041  019BE0  EE22  F107         	lfsr	2,_C+8	;volatile
 41042  019BE4  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 41043  019BEA  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 41044  019BF0  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 41045  019BF6  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 41046                           
 41047                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 41048  019BFC  EE22  F12F         	lfsr	2,_C+48	;volatile
 41049  019C00  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 41050  019C06  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 41051  019C0C  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 41052  019C12  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 41053                           
 41054                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 41055  019C18  0E01               	movlw	1
 41056  019C1A  6EE6               	movwf	postinc1,c
 41057  019C1C  0E10               	movlw	16
 41058  019C1E  6EE6               	movwf	postinc1,c
 41059  019C20  EE22  F0FF         	lfsr	2,_C
 41060  019C24  006F FF7B FFE6     	movff	postinc2,postinc1
 41061  019C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 41062  019C30  006F FF7B FFE6     	movff	postinc2,postinc1
 41063  019C36  006F FF7B FFE6     	movff	postinc2,postinc1
 41064  019C3C  EE22  F103         	lfsr	2,_C+4	;volatile
 41065  019C40  006F FF7B FFE6     	movff	postinc2,postinc1
 41066  019C46  006F FF7B FFE6     	movff	postinc2,postinc1
 41067  019C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 41068  019C52  006F FF7B FFE6     	movff	postinc2,postinc1
 41069  019C58  EC0D  F011         	call	___flsub	;wreg free
 41070  019C5C  0060  F0AB  FFE6   	movff	btemp,postinc1
 41071  019C62  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41072  019C68  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41073  019C6E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41074  019C74  EC9D  F0EE         	call	_lp_filter	;wreg free
 41075  019C78  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 41076  019C7E  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 41077  019C84  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 41078  019C8A  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 41079                           
 41080                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 41081  019C90  0E01               	movlw	1
 41082  019C92  6EE6               	movwf	postinc1,c
 41083  019C94  0E11               	movlw	17
 41084  019C96  6EE6               	movwf	postinc1,c
 41085  019C98  EE22  F153         	lfsr	2,_C+84	;volatile
 41086  019C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 41087  019CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 41088  019CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 41089  019CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 41090  019CB4  EE22  F13F         	lfsr	2,_C+64	;volatile
 41091  019CB8  006F FF7B FFE6     	movff	postinc2,postinc1
 41092  019CBE  006F FF7B FFE6     	movff	postinc2,postinc1
 41093  019CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 41094  019CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 41095  019CD0  EC06  F0B8         	call	___flmul	;wreg free
 41096  019CD4  0060  F0AB  FFE6   	movff	btemp,postinc1
 41097  019CDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41098  019CE0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41099  019CE6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41100  019CEC  EC9D  F0EE         	call	_lp_filter	;wreg free
 41101  019CF0  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 41102  019CF6  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 41103  019CFC  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 41104  019D02  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 41105                           
 41106                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 41107  019D08  0E01               	movlw	1
 41108  019D0A  6EE6               	movwf	postinc1,c
 41109  019D0C  0E12               	movlw	18
 41110  019D0E  6EE6               	movwf	postinc1,c
 41111  019D10  EE22  F14F         	lfsr	2,_C+80	;volatile
 41112  019D14  006F FF7B FFE6     	movff	postinc2,postinc1
 41113  019D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 41114  019D20  006F FF7B FFE6     	movff	postinc2,postinc1
 41115  019D26  006F FF7B FFE6     	movff	postinc2,postinc1
 41116  019D2C  EE22  F147         	lfsr	2,_C+72	;volatile
 41117  019D30  006F FF7B FFE6     	movff	postinc2,postinc1
 41118  019D36  006F FF7B FFE6     	movff	postinc2,postinc1
 41119  019D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 41120  019D42  006F FF7B FFE6     	movff	postinc2,postinc1
 41121  019D48  EC06  F0B8         	call	___flmul	;wreg free
 41122  019D4C  0060  F0AB  FFE6   	movff	btemp,postinc1
 41123  019D52  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41124  019D58  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41125  019D5E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41126  019D64  EC9D  F0EE         	call	_lp_filter	;wreg free
 41127  019D68  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 41128  019D6E  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 41129  019D74  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 41130  019D7A  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 41131                           
 41132                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 41133  019D80  0E01               	movlw	1
 41134  019D82  6EE6               	movwf	postinc1,c
 41135  019D84  0E13               	movlw	19
 41136  019D86  6EE6               	movwf	postinc1,c
 41137  019D88  0E00               	movlw	0
 41138  019D8A  6EE6               	movwf	postinc1,c
 41139  019D8C  0E00               	movlw	0
 41140  019D8E  6EE6               	movwf	postinc1,c
 41141  019D90  0E60               	movlw	96
 41142  019D92  6EE6               	movwf	postinc1,c
 41143  019D94  0EC1               	movlw	193
 41144  019D96  6EE6               	movwf	postinc1,c
 41145  019D98  EE22  F163         	lfsr	2,_C+100	;volatile
 41146  019D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 41147  019DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 41148  019DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 41149  019DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 41150  019DB4  EE22  F13F         	lfsr	2,_C+64	;volatile
 41151  019DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 41152  019DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 41153  019DC4  006F FF7B FFE6     	movff	postinc2,postinc1
 41154  019DCA  006F FF7B FFE6     	movff	postinc2,postinc1
 41155  019DD0  EC06  F0B8         	call	___flmul	;wreg free
 41156  019DD4  0060  F0AB  FFE6   	movff	btemp,postinc1
 41157  019DDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41158  019DE0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41159  019DE6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41160  019DEC  EC1B  F0BC         	call	___fladd	;wreg free
 41161  019DF0  0060  F0AB  FFE6   	movff	btemp,postinc1
 41162  019DF6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41163  019DFC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41164  019E02  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41165  019E08  EC9D  F0EE         	call	_lp_filter	;wreg free
 41166  019E0C  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 41167  019E12  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 41168  019E18  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 41169  019E1E  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 41170                           
 41171                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 41172  019E24  0E01               	movlw	1
 41173  019E26  6EE6               	movwf	postinc1,c
 41174  019E28  0E14               	movlw	20
 41175  019E2A  6EE6               	movwf	postinc1,c
 41176  019E2C  EE22  F153         	lfsr	2,_C+84	;volatile
 41177  019E30  006F FF7B FFE6     	movff	postinc2,postinc1
 41178  019E36  006F FF7B FFE6     	movff	postinc2,postinc1
 41179  019E3C  006F FF7B FFE6     	movff	postinc2,postinc1
 41180  019E42  006F FF7B FFE6     	movff	postinc2,postinc1
 41181  019E48  EE22  F143         	lfsr	2,_C+68	;volatile
 41182  019E4C  006F FF7B FFE6     	movff	postinc2,postinc1
 41183  019E52  006F FF7B FFE6     	movff	postinc2,postinc1
 41184  019E58  006F FF7B FFE6     	movff	postinc2,postinc1
 41185  019E5E  006F FF7B FFE6     	movff	postinc2,postinc1
 41186  019E64  EC06  F0B8         	call	___flmul	;wreg free
 41187  019E68  0060  F0AB  FFE6   	movff	btemp,postinc1
 41188  019E6E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41189  019E74  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41190  019E7A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41191  019E80  EC9D  F0EE         	call	_lp_filter	;wreg free
 41192  019E84  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 41193  019E8A  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 41194  019E90  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 41195  019E96  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 41196                           
 41197                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 41198  019E9C  EE22  F177         	lfsr	2,_C+120	;volatile
 41199  019EA0  0E03               	movlw	3
 41200  019EA2  AEDB               	btfss	plusw2,7,c
 41201  019EA4  D010               	goto	l14601
 41202                           
 41203                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 41204  019EA6  0E17               	movlw	23
 41205  019EA8  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 41206  019EAE  0EB7               	movlw	183
 41207  019EB0  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 41208  019EB6  0ED1               	movlw	209
 41209  019EB8  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 41210  019EBE  0E38               	movlw	56
 41211  019EC0  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 41212  019EC6                     l14601:
 41213                           
 41214                           ;mbmc.c: 96:  start_bsoc();
 41215  019EC6  ECCC  F015         	call	_start_bsoc	;wreg free
 41216                           
 41217                           ; BSR set to: 57
 41218                           ;mbmc.c: 97:  C.update = 1;
 41219  019ECA  0E01               	movlw	1
 41220  019ECC  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 41221                           
 41222                           ; BSR set to: 57
 41223                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 41224  019ED2  0012               	return		;funcret
 41225  019ED4                     __end_of_calc_model_data:
 41226                           	opt callstack 0
 41227                           
 41228 ;; *************** function _stop_bsoc *****************
 41229 ;; Defined at:
 41230 ;;		line 130 in file "bsoc.c"
 41231 ;; Parameters:    Size  Location     Type
 41232 ;;		None
 41233 ;; Auto vars:     Size  Location     Type
 41234 ;;		None
 41235 ;; Return value:  Size  Location     Type
 41236 ;;                  1  [STACK] void 
 41237 ;; Registers used:
 41238 ;;		None
 41239 ;; Tracked objects:
 41240 ;;		On entry : 0/39
 41241 ;;		On exit  : 3F/39
 41242 ;;		Unchanged: 0/0
 41243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41248 ;;Total ram usage:        0 bytes
 41249 ;; Hardware stack levels used:    1
 41250 ;; Hardware stack levels required when called:   15
 41251 ;; This function calls:
 41252 ;;		Nothing
 41253 ;; This function is called by:
 41254 ;;		_calc_model_data
 41255 ;;		_load_hist_data
 41256 ;; This function uses a reentrant model
 41257 ;;
 41258                           
 41259                           	psect	text149
 41260  002E9A                     __ptext149:
 41261                           	opt callstack 0
 41262  002E9A                     _stop_bsoc:
 41263                           	opt callstack 14
 41264                           
 41265                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 41266                           
 41267                           ; BSR set to: 57
 41268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41269                           ;incstack = 0
 41270  002E9A  0139               	movlb	57	; () banked
 41271  002E9C  9D96               	bcf	150,6,b	;volatile
 41272                           
 41273                           ; BSR set to: 57
 41274                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 41275  002E9E  0012               	return		;funcret
 41276  002EA0                     __end_of_stop_bsoc:
 41277                           	opt callstack 0
 41278                           
 41279 ;; *************** function _start_bsoc *****************
 41280 ;; Defined at:
 41281 ;;		line 121 in file "bsoc.c"
 41282 ;; Parameters:    Size  Location     Type
 41283 ;;		None
 41284 ;; Auto vars:     Size  Location     Type
 41285 ;;		None
 41286 ;; Return value:  Size  Location     Type
 41287 ;;                  1  [STACK] void 
 41288 ;; Registers used:
 41289 ;;		wreg, status,2, status,0, btemp+11
 41290 ;; Tracked objects:
 41291 ;;		On entry : 0/39
 41292 ;;		On exit  : 3F/39
 41293 ;;		Unchanged: 0/0
 41294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41299 ;;Total ram usage:        0 bytes
 41300 ;; Hardware stack levels used:    1
 41301 ;; Hardware stack levels required when called:   15
 41302 ;; This function calls:
 41303 ;;		Nothing
 41304 ;; This function is called by:
 41305 ;;		_calc_model_data
 41306 ;;		_load_hist_data
 41307 ;; This function uses a reentrant model
 41308 ;;
 41309                           
 41310                           	psect	text150
 41311  002B98                     __ptext150:
 41312                           	opt callstack 0
 41313  002B98                     _start_bsoc:
 41314                           	opt callstack 14
 41315                           
 41316                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 41317                           
 41318                           ; BSR set to: 57
 41319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41320                           ;incstack = 0
 41321  002B98  0139               	movlb	57	; () banked
 41322  002B9A  8D96               	bsf	150,6,b	;volatile
 41323                           
 41324                           ; BSR set to: 57
 41325  002B9C  A4BE               	btfss	190,2,c	;volatile
 41326  002B9E  D002               	goto	u12870
 41327  002BA0  0E01               	movlw	1
 41328  002BA2  D001               	goto	u12876
 41329  002BA4                     u12870:
 41330  002BA4  0E00               	movlw	0
 41331  002BA6                     u12876:
 41332  002BA6  0AFF               	xorlw	255
 41333  002BA8  6E35               	movwf	(btemp+11)^0,c
 41334  002BAA  4635               	rlncf	(btemp+11)^0,f,c
 41335  002BAC  4635               	rlncf	(btemp+11)^0,f,c
 41336  002BAE  50BE               	movf	190,w,c	;volatile
 41337  002BB0  1835               	xorwf	(btemp+11)^0,w,c
 41338  002BB2  0BFB               	andlw	-5
 41339  002BB4  1835               	xorwf	(btemp+11)^0,w,c
 41340  002BB6  6EBE               	movwf	190,c	;volatile
 41341                           
 41342                           ; BSR set to: 57
 41343                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 41344  002BB8  0012               	return		;funcret
 41345  002BBA                     __end_of_start_bsoc:
 41346                           	opt callstack 0
 41347                           
 41348 ;; *************** function _lp_filter *****************
 41349 ;; Defined at:
 41350 ;;		line 29 in file "mbmc.c"
 41351 ;; Parameters:    Size  Location     Type
 41352 ;;  new             4  [STACK] const float 
 41353 ;;  bn              1  [STACK] const unsigned char 
 41354 ;;  slow            1  [STACK] const char 
 41355 ;; Auto vars:     Size  Location     Type
 41356 ;;  lp_speed        4  [STACK] float 
 41357 ;; Return value:  Size  Location     Type
 41358 ;;                  4  [STACK] float 
 41359 ;; Registers used:
 41360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41361 ;; Tracked objects:
 41362 ;;		On entry : 0/2
 41363 ;;		On exit  : 0/0
 41364 ;;		Unchanged: 0/0
 41365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41370 ;;Total ram usage:        0 bytes
 41371 ;; Hardware stack levels used:    1
 41372 ;; Hardware stack levels required when called:   17
 41373 ;; This function calls:
 41374 ;;		___fladd
 41375 ;;		___flmul
 41376 ;;		___flsub
 41377 ;; This function is called by:
 41378 ;;		_main
 41379 ;;		_convert_adc_data
 41380 ;;		_calc_model_data
 41381 ;; This function uses a reentrant model
 41382 ;;
 41383                           
 41384                           	psect	text151
 41385  01DD3A                     __ptext151:
 41386                           	opt callstack 0
 41387  01DD3A                     _lp_filter:
 41388                           	opt callstack 0
 41389                           
 41390                           ; BSR set to: 57
 41391                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41392  01DD3A  52E6               	movf	postinc1,f,c
 41393  01DD3C  52E6               	movf	postinc1,f,c
 41394  01DD3E  52E6               	movf	postinc1,f,c
 41395  01DD40  52E6               	movf	postinc1,f,c
 41396                           
 41397                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 41398                           ;stkvar	_bn @ sp[(-4)+-5]
 41399                           
 41400                           ;incstack = 0
 41401  01DD42  0EF7               	movlw	-9
 41402  01DD44  006F FF8C  F02A    	movff	plusw1,btemp
 41403  01DD4A  0E14               	movlw	20
 41404  01DD4C  642A               	cpfsgt	btemp^0,c
 41405  01DD4E  D011               	goto	l13609
 41406  01DD50                     u12650:
 41407                           
 41408                           ;mbmc.c: 35:   return new;
 41409                           ;stkvar	_new @ sp[(-4)+-4]
 41410  01DD50  0EF8               	movlw	-8
 41411  01DD52  006F FF8C  F02A    	movff	plusw1,btemp
 41412  01DD58  0EF9               	movlw	-7
 41413  01DD5A  006F FF8C  F02B    	movff	plusw1,btemp+1
 41414  01DD60  0EFA               	movlw	-6
 41415  01DD62  006F FF8C  F02C    	movff	plusw1,btemp+2
 41416  01DD68  0EFB               	movlw	-5
 41417  01DD6A  006F FF8C  F02D    	movff	plusw1,btemp+3
 41418  01DD70  D0BD               	goto	l2139
 41419  01DD72                     l13609:
 41420                           
 41421                           ;mbmc.c: 37:  if (slow == (-1)) {
 41422                           ;stkvar	_slow @ sp[(-4)+-6]
 41423  01DD72  0EF6               	movlw	-10
 41424  01DD74  28E3               	incf	plusw1,w,c
 41425  01DD76  A4D8               	btfss	status,2,c
 41426  01DD78  D012               	goto	l13617
 41427                           
 41428                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 41429                           ;stkvar	_bn @ sp[(-4)+-5]
 41430  01DD7A  0EF7               	movlw	-9
 41431  01DD7C  50E3               	movf	plusw1,w,c
 41432  01DD7E  0D04               	mullw	4
 41433  01DD80  0E00               	movlw	low lp_filter@smooth
 41434  01DD82  24F3               	addwf	243,w,c
 41435  01DD84  6ED9               	movwf	fsr2l,c
 41436  01DD86  0E03               	movlw	high lp_filter@smooth
 41437  01DD88  20F4               	addwfc	prodh,w,c
 41438  01DD8A  6EDA               	movwf	fsr2h,c
 41439  01DD8C  0E00               	movlw	0
 41440  01DD8E  6EDE               	movwf	postinc2,c
 41441  01DD90  0E00               	movlw	0
 41442  01DD92  6EDE               	movwf	postinc2,c
 41443  01DD94  0E00               	movlw	0
 41444  01DD96  6EDE               	movwf	postinc2,c
 41445  01DD98  0E00               	movlw	0
 41446  01DD9A  6EDD               	movwf	postdec2,c
 41447  01DD9C  D7D9               	goto	u12650
 41448  01DD9E                     l13617:
 41449                           
 41450                           ;mbmc.c: 42:  if (slow) {
 41451                           ;stkvar	_slow @ sp[(-4)+-6]
 41452  01DD9E  0EF6               	movlw	-10
 41453  01DDA0  50E3               	movf	plusw1,w,c
 41454  01DDA2  B4D8               	btfsc	status,2,c
 41455  01DDA4  D006               	goto	l13621
 41456                           
 41457                           ;mbmc.c: 43:   lp_speed = 0.033;
 41458  01DDA6  0E02               	movlw	2
 41459  01DDA8  6E32               	movwf	(btemp+8)^0,c
 41460  01DDAA  0E2B               	movlw	43
 41461  01DDAC  6E33               	movwf	(btemp+9)^0,c
 41462  01DDAE  0E07               	movlw	7
 41463  01DDB0  D005               	goto	L46
 41464  01DDB2                     l13621:
 41465                           
 41466                           ;mbmc.c: 45:   lp_speed = 0.066;
 41467  01DDB2  0E02               	movlw	2
 41468  01DDB4  6E32               	movwf	(btemp+8)^0,c
 41469  01DDB6  0E2B               	movlw	43
 41470  01DDB8  6E33               	movwf	(btemp+9)^0,c
 41471  01DDBA  0E87               	movlw	135
 41472  01DDBC                     L46:
 41473  01DDBC  6E34               	movwf	(btemp+10)^0,c
 41474  01DDBE  0E3D               	movlw	61
 41475  01DDC0  6E35               	movwf	(btemp+11)^0,c
 41476                           
 41477                           ;stkvar	_lp_speed @ sp[(-4)+0]
 41478  01DDC2  0EFC               	movlw	-4
 41479  01DDC4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41480  01DDCA  0EFD               	movlw	-3
 41481  01DDCC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41482  01DDD2  0EFE               	movlw	-2
 41483  01DDD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41484  01DDDA  0EFF               	movlw	-1
 41485  01DDDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41486                           
 41487                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 41488                           ;stkvar	_bn @ sp[(-4)+-5]
 41489  01DDE2  0EF7               	movlw	-9
 41490  01DDE4  50E3               	movf	plusw1,w,c
 41491  01DDE6  0D04               	mullw	4
 41492  01DDE8  0E00               	movlw	low lp_filter@smooth
 41493  01DDEA  24F3               	addwf	243,w,c
 41494  01DDEC  6ED9               	movwf	fsr2l,c
 41495  01DDEE  0E03               	movlw	high lp_filter@smooth
 41496  01DDF0  20F4               	addwfc	prodh,w,c
 41497  01DDF2  6EDA               	movwf	fsr2h,c
 41498  01DDF4  006F FF7B FFE6     	movff	postinc2,postinc1
 41499  01DDFA  006F FF7B FFE6     	movff	postinc2,postinc1
 41500  01DE00  006F FF7B FFE6     	movff	postinc2,postinc1
 41501  01DE06  006F FF7B FFE6     	movff	postinc2,postinc1
 41502                           
 41503                           ;stkvar	_lp_speed @ sp[(-8)+0]
 41504  01DE0C  0EF8               	movlw	-8
 41505  01DE0E  006F FF8F FFE6     	movff	plusw1,postinc1
 41506  01DE14  006F FF8F FFE6     	movff	plusw1,postinc1
 41507  01DE1A  006F FF8F FFE6     	movff	plusw1,postinc1
 41508  01DE20  006F FF8F FFE6     	movff	plusw1,postinc1
 41509                           
 41510                           ;stkvar	_bn @ sp[(-12)+-5]
 41511  01DE26  0EEF               	movlw	-17
 41512  01DE28  50E3               	movf	plusw1,w,c
 41513  01DE2A  0D04               	mullw	4
 41514  01DE2C  0E00               	movlw	low lp_filter@smooth
 41515  01DE2E  24F3               	addwf	243,w,c
 41516  01DE30  6ED9               	movwf	fsr2l,c
 41517  01DE32  0E03               	movlw	high lp_filter@smooth
 41518  01DE34  20F4               	addwfc	prodh,w,c
 41519  01DE36  6EDA               	movwf	fsr2h,c
 41520  01DE38  006F FF7B FFE6     	movff	postinc2,postinc1
 41521  01DE3E  006F FF7B FFE6     	movff	postinc2,postinc1
 41522  01DE44  006F FF7B FFE6     	movff	postinc2,postinc1
 41523  01DE4A  006F FF7B FFE6     	movff	postinc2,postinc1
 41524                           
 41525                           ;stkvar	_new @ sp[(-16)+-4]
 41526  01DE50  0EEC               	movlw	-20
 41527  01DE52  006F FF8F FFE6     	movff	plusw1,postinc1
 41528  01DE58  006F FF8F FFE6     	movff	plusw1,postinc1
 41529  01DE5E  006F FF8F FFE6     	movff	plusw1,postinc1
 41530  01DE64  006F FF8F FFE6     	movff	plusw1,postinc1
 41531  01DE6A  EC0D  F011         	call	___flsub	;wreg free
 41532  01DE6E  0060  F0AB  FFE6   	movff	btemp,postinc1
 41533  01DE74  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41534  01DE7A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41535  01DE80  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41536  01DE86  EC06  F0B8         	call	___flmul	;wreg free
 41537  01DE8A  0060  F0AB  FFE6   	movff	btemp,postinc1
 41538  01DE90  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41539  01DE96  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41540  01DE9C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41541  01DEA2  EC1B  F0BC         	call	___fladd	;wreg free
 41542                           
 41543                           ;stkvar	_bn @ sp[(-4)+-5]
 41544  01DEA6  0EF7               	movlw	-9
 41545  01DEA8  50E3               	movf	plusw1,w,c
 41546  01DEAA  0D04               	mullw	4
 41547  01DEAC  0E00               	movlw	low lp_filter@smooth
 41548  01DEAE  24F3               	addwf	243,w,c
 41549  01DEB0  6ED9               	movwf	fsr2l,c
 41550  01DEB2  0E03               	movlw	high lp_filter@smooth
 41551  01DEB4  20F4               	addwfc	prodh,w,c
 41552  01DEB6  6EDA               	movwf	fsr2h,c
 41553  01DEB8  0060  F0AB  FFDE   	movff	btemp,postinc2
 41554  01DEBE  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 41555  01DEC4  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 41556  01DECA  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 41557  01DED0  52DD               	movf	postdec2,f,c
 41558  01DED2  52DD               	movf	postdec2,f,c
 41559  01DED4  006F FF78  F02A    	movff	postinc2,btemp
 41560  01DEDA  006F FF78  F02B    	movff	postinc2,btemp+1
 41561  01DEE0  006F FF78  F02C    	movff	postinc2,btemp+2
 41562  01DEE6  006F FF78  F02D    	movff	postinc2,btemp+3
 41563  01DEEC                     l2139:
 41564                           
 41565                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 41566  01DEEC  0EF6               	movlw	246
 41567  01DEEE  26E1               	addwf	fsr1l,f,c
 41568  01DEF0  0EFF               	movlw	255
 41569  01DEF2  22E2               	addwfc	fsr1h,f,c
 41570  01DEF4  0012               	return		;funcret
 41571  01DEF6                     __end_of_lp_filter:
 41572                           	opt callstack 0
 41573                           
 41574 ;; *************** function ___flsub *****************
 41575 ;; Defined at:
 41576 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41577 ;; Parameters:    Size  Location     Type
 41578 ;;  b               4  [STACK] float 
 41579 ;;  a               4  [STACK] float 
 41580 ;; Auto vars:     Size  Location     Type
 41581 ;;		None
 41582 ;; Return value:  Size  Location     Type
 41583 ;;                  4  [STACK] float 
 41584 ;; Registers used:
 41585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41586 ;; Tracked objects:
 41587 ;;		On entry : 0/0
 41588 ;;		On exit  : 0/0
 41589 ;;		Unchanged: 0/0
 41590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41595 ;;Total ram usage:        0 bytes
 41596 ;; Hardware stack levels used:    1
 41597 ;; Hardware stack levels required when called:   16
 41598 ;; This function calls:
 41599 ;;		___fladd
 41600 ;; This function is called by:
 41601 ;;		_conv_raw_result
 41602 ;;		_lp_filter
 41603 ;;		_calc_model_data
 41604 ;;		_calc_ror_data
 41605 ;;		_esr_check
 41606 ;;		_efgtoa
 41607 ;; This function uses a reentrant model
 41608 ;;
 41609                           
 41610                           	psect	text152
 41611  00221A                     __ptext152:
 41612                           	opt callstack 0
 41613  00221A                     ___flsub:
 41614                           	opt callstack 0
 41615                           
 41616                           ;stkvar	_a @ sp[(0)+-8]
 41617                           
 41618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41619                           ;incstack = 0
 41620 ;; hardware stack exceeded
 41621  00221A  0EFB               	movlw	-5
 41622  00221C  7EE3               	btg	plusw1,7,c
 41623                           
 41624                           ;stkvar	_a @ sp[(0)+-8]
 41625  00221E  0EF8               	movlw	-8
 41626  002220  006F FF8F FFE6     	movff	plusw1,postinc1
 41627  002226  006F FF8F FFE6     	movff	plusw1,postinc1
 41628  00222C  006F FF8F FFE6     	movff	plusw1,postinc1
 41629  002232  006F FF8F FFE6     	movff	plusw1,postinc1
 41630                           
 41631                           ;stkvar	_b @ sp[(-4)+-4]
 41632  002238  0EF8               	movlw	-8
 41633  00223A  006F FF8F FFE6     	movff	plusw1,postinc1
 41634  002240  006F FF8F FFE6     	movff	plusw1,postinc1
 41635  002246  006F FF8F FFE6     	movff	plusw1,postinc1
 41636  00224C  006F FF8F FFE6     	movff	plusw1,postinc1
 41637  002252  EC1B  F0BC         	call	___fladd	;wreg free
 41638                           
 41639                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41640  002256  0EF8               	movlw	248
 41641  002258  26E1               	addwf	fsr1l,f,c
 41642  00225A  0EFF               	movlw	255
 41643  00225C  22E2               	addwfc	fsr1h,f,c
 41644  00225E  0012               	return		;funcret
 41645  002260                     __end_of___flsub:
 41646                           	opt callstack 0
 41647                           
 41648 ;; *************** function ___fladd *****************
 41649 ;; Defined at:
 41650 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41651 ;; Parameters:    Size  Location     Type
 41652 ;;  b               4  [STACK] float 
 41653 ;;  a               4  [STACK] float 
 41654 ;; Auto vars:     Size  Location     Type
 41655 ;;  grs             1  [STACK] unsigned char 
 41656 ;;  bexp            1  [STACK] unsigned char 
 41657 ;;  aexp            1  [STACK] unsigned char 
 41658 ;;  signs           1  [STACK] unsigned char 
 41659 ;; Return value:  Size  Location     Type
 41660 ;;                  4  [STACK] unsigned char 
 41661 ;; Registers used:
 41662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41663 ;; Tracked objects:
 41664 ;;		On entry : 0/0
 41665 ;;		On exit  : 0/0
 41666 ;;		Unchanged: 0/0
 41667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41672 ;;Total ram usage:        0 bytes
 41673 ;; Hardware stack levels used:    1
 41674 ;; Hardware stack levels required when called:   15
 41675 ;; This function calls:
 41676 ;;		Nothing
 41677 ;; This function is called by:
 41678 ;;		_main
 41679 ;;		_lp_filter
 41680 ;;		_calc_model_data
 41681 ;;		_efgtoa
 41682 ;;		___asfladd
 41683 ;;		___flsub
 41684 ;; This function uses a reentrant model
 41685 ;;
 41686                           
 41687                           	psect	text153
 41688  017836                     __ptext153:
 41689                           	opt callstack 0
 41690  017836                     ___fladd:
 41691                           	opt callstack 0
 41692                           
 41693                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41694  017836  52E6               	movf	postinc1,f,c
 41695  017838  52E6               	movf	postinc1,f,c
 41696  01783A  52E6               	movf	postinc1,f,c
 41697  01783C  52E6               	movf	postinc1,f,c
 41698                           
 41699                           ;stkvar	_b @ sp[(-4)+-4]
 41700                           
 41701                           ;incstack = 0
 41702 ;; hardware stack exceeded
 41703  01783E  0EFB               	movlw	251
 41704  017840  24E1               	addwf	fsr1l,w,c
 41705  017842  6ED9               	movwf	fsr2l,c
 41706  017844  0EFF               	movlw	255
 41707  017846  20E2               	addwfc	fsr1h,w,c
 41708  017848  6EDA               	movwf	fsr2h,c
 41709  01784A  50DF               	movf	indf2,w,c
 41710  01784C  6E35               	movwf	(btemp+11)^0,c
 41711  01784E  0E80               	movlw	128
 41712  017850  1635               	andwf	(btemp+11)^0,f,c
 41713                           
 41714                           ;stkvar	_signs @ sp[(-4)+3]
 41715  017852  0EFF               	movlw	-1
 41716  017854  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41717                           
 41718                           ;stkvar	_b @ sp[(-4)+-4]
 41719  01785A  0EFB               	movlw	251
 41720  01785C  24E1               	addwf	fsr1l,w,c
 41721  01785E  6ED9               	movwf	fsr2l,c
 41722  017860  0EFF               	movlw	255
 41723  017862  20E2               	addwfc	fsr1h,w,c
 41724  017864  6EDA               	movwf	fsr2h,c
 41725  017866  50DF               	movf	indf2,w,c
 41726  017868  6E35               	movwf	(btemp+11)^0,c
 41727  01786A  90D8               	bcf	status,0,c
 41728  01786C  3435               	rlcf	(btemp+11)^0,w,c
 41729  01786E  6E34               	movwf	(btemp+10)^0,c
 41730                           
 41731                           ;stkvar	_bexp @ sp[(-4)+1]
 41732  017870  0EFD               	movlw	-3
 41733  017872  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41734                           
 41735                           ;stkvar	_b @ sp[(-4)+-4]
 41736  017878  0EFA               	movlw	250
 41737  01787A  24E1               	addwf	fsr1l,w,c
 41738  01787C  6ED9               	movwf	fsr2l,c
 41739  01787E  0EFF               	movlw	255
 41740  017880  20E2               	addwfc	fsr1h,w,c
 41741  017882  6EDA               	movwf	fsr2h,c
 41742  017884  AEDF               	btfss	indf2,7,c
 41743  017886  D002               	goto	l9875
 41744                           
 41745                           ;stkvar	_bexp @ sp[(-4)+1]
 41746  017888  0EFD               	movlw	-3
 41747  01788A  80E3               	bsf	plusw1,0,c
 41748  01788C                     l9875:
 41749                           
 41750                           ;stkvar	_bexp @ sp[(-4)+1]
 41751  01788C  0EFD               	movlw	-3
 41752  01788E  50E3               	movf	plusw1,w,c
 41753  017890  B4D8               	btfsc	status,2,c
 41754  017892  D027               	goto	l9885
 41755                           
 41756                           ;stkvar	_bexp @ sp[(-4)+1]
 41757  017894  0EFD               	movlw	-3
 41758  017896  28E3               	incf	plusw1,w,c
 41759  017898  A4D8               	btfss	status,2,c
 41760  01789A  D018               	goto	l9881
 41761  01789C  0E00               	movlw	0
 41762  01789E  6E32               	movwf	(btemp+8)^0,c
 41763  0178A0  0E00               	movlw	0
 41764  0178A2  6E33               	movwf	(btemp+9)^0,c
 41765  0178A4  0E00               	movlw	0
 41766  0178A6  6E34               	movwf	(btemp+10)^0,c
 41767  0178A8  0E00               	movlw	0
 41768  0178AA  6E35               	movwf	(btemp+11)^0,c
 41769                           
 41770                           ;stkvar	_b @ sp[(-4)+-4]
 41771  0178AC  0EF8               	movlw	-8
 41772  0178AE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41773  0178B4  0EF9               	movlw	-7
 41774  0178B6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41775  0178BC  0EFA               	movlw	-6
 41776  0178BE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41777  0178C4  0EFB               	movlw	-5
 41778  0178C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41779  0178CC                     l9881:
 41780                           
 41781                           ;stkvar	_b @ sp[(-4)+-4]
 41782  0178CC  0EFA               	movlw	-6
 41783  0178CE  8EE3               	bsf	plusw1,7,c
 41784                           
 41785                           ;stkvar	_b @ sp[(-4)+-4]
 41786  0178D0  0EFB               	movlw	251
 41787  0178D2  24E1               	addwf	fsr1l,w,c
 41788  0178D4  6ED9               	movwf	fsr2l,c
 41789  0178D6  0EFF               	movlw	255
 41790  0178D8  20E2               	addwfc	fsr1h,w,c
 41791  0178DA  6EDA               	movwf	fsr2h,c
 41792  0178DC  0E00               	movlw	0
 41793  0178DE  6EDF               	movwf	indf2,c
 41794  0178E0  D018               	goto	l9887
 41795  0178E2                     l9885:
 41796  0178E2  0E00               	movlw	0
 41797  0178E4  6E32               	movwf	(btemp+8)^0,c
 41798  0178E6  0E00               	movlw	0
 41799  0178E8  6E33               	movwf	(btemp+9)^0,c
 41800  0178EA  0E00               	movlw	0
 41801  0178EC  6E34               	movwf	(btemp+10)^0,c
 41802  0178EE  0E00               	movlw	0
 41803  0178F0  6E35               	movwf	(btemp+11)^0,c
 41804                           
 41805                           ;stkvar	_b @ sp[(-4)+-4]
 41806  0178F2  0EF8               	movlw	-8
 41807  0178F4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41808  0178FA  0EF9               	movlw	-7
 41809  0178FC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41810  017902  0EFA               	movlw	-6
 41811  017904  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41812  01790A  0EFB               	movlw	-5
 41813  01790C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41814  017912                     l9887:
 41815                           
 41816                           ;stkvar	_a @ sp[(-4)+-8]
 41817  017912  0EF7               	movlw	247
 41818  017914  24E1               	addwf	fsr1l,w,c
 41819  017916  6ED9               	movwf	fsr2l,c
 41820  017918  0EFF               	movlw	255
 41821  01791A  20E2               	addwfc	fsr1h,w,c
 41822  01791C  6EDA               	movwf	fsr2h,c
 41823  01791E  50DF               	movf	indf2,w,c
 41824  017920  6E35               	movwf	(btemp+11)^0,c
 41825  017922  0E80               	movlw	128
 41826  017924  1635               	andwf	(btemp+11)^0,f,c
 41827                           
 41828                           ;stkvar	_aexp @ sp[(-4)+2]
 41829  017926  0EFE               	movlw	-2
 41830  017928  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41831                           
 41832                           ;stkvar	_signs @ sp[(-4)+3]
 41833                           ;stkvar	_aexp @ sp[(-4)+2]
 41834  01792E  50E1               	movf	fsr1l,w,c
 41835  017930  0FFE               	addlw	-2
 41836  017932  6ED9               	movwf	fsr2l,c
 41837  017934  50E2               	movf	fsr1h,w,c
 41838  017936  6EDA               	movwf	fsr2h,c
 41839  017938  0EFF               	movlw	255
 41840  01793A  22DA               	addwfc	fsr2h,f,c
 41841  01793C  0EFF               	movlw	-1
 41842  01793E  50E3               	movf	plusw1,w,c
 41843  017940  18DE               	xorwf	postinc2,w,c
 41844  017942  B4D8               	btfsc	status,2,c
 41845  017944  D002               	goto	l9893
 41846                           
 41847                           ;stkvar	_signs @ sp[(-4)+3]
 41848  017946  0EFF               	movlw	-1
 41849  017948  8CE3               	bsf	plusw1,6,c
 41850  01794A                     l9893:
 41851                           
 41852                           ;stkvar	_a @ sp[(-4)+-8]
 41853  01794A  0EF7               	movlw	247
 41854  01794C  24E1               	addwf	fsr1l,w,c
 41855  01794E  6ED9               	movwf	fsr2l,c
 41856  017950  0EFF               	movlw	255
 41857  017952  20E2               	addwfc	fsr1h,w,c
 41858  017954  6EDA               	movwf	fsr2h,c
 41859  017956  50DF               	movf	indf2,w,c
 41860  017958  6E35               	movwf	(btemp+11)^0,c
 41861  01795A  90D8               	bcf	status,0,c
 41862  01795C  3435               	rlcf	(btemp+11)^0,w,c
 41863  01795E  6E34               	movwf	(btemp+10)^0,c
 41864                           
 41865                           ;stkvar	_aexp @ sp[(-4)+2]
 41866  017960  0EFE               	movlw	-2
 41867  017962  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41868                           
 41869                           ;stkvar	_a @ sp[(-4)+-8]
 41870  017968  0EF6               	movlw	246
 41871  01796A  24E1               	addwf	fsr1l,w,c
 41872  01796C  6ED9               	movwf	fsr2l,c
 41873  01796E  0EFF               	movlw	255
 41874  017970  20E2               	addwfc	fsr1h,w,c
 41875  017972  6EDA               	movwf	fsr2h,c
 41876  017974  AEDF               	btfss	indf2,7,c
 41877  017976  D002               	goto	l9899
 41878                           
 41879                           ;stkvar	_aexp @ sp[(-4)+2]
 41880  017978  0EFE               	movlw	-2
 41881  01797A  80E3               	bsf	plusw1,0,c
 41882  01797C                     l9899:
 41883                           
 41884                           ;stkvar	_aexp @ sp[(-4)+2]
 41885  01797C  0EFE               	movlw	-2
 41886  01797E  50E3               	movf	plusw1,w,c
 41887  017980  B4D8               	btfsc	status,2,c
 41888  017982  D027               	goto	l9909
 41889                           
 41890                           ;stkvar	_aexp @ sp[(-4)+2]
 41891  017984  0EFE               	movlw	-2
 41892  017986  28E3               	incf	plusw1,w,c
 41893  017988  A4D8               	btfss	status,2,c
 41894  01798A  D018               	goto	l9905
 41895  01798C  0E00               	movlw	0
 41896  01798E  6E32               	movwf	(btemp+8)^0,c
 41897  017990  0E00               	movlw	0
 41898  017992  6E33               	movwf	(btemp+9)^0,c
 41899  017994  0E00               	movlw	0
 41900  017996  6E34               	movwf	(btemp+10)^0,c
 41901  017998  0E00               	movlw	0
 41902  01799A  6E35               	movwf	(btemp+11)^0,c
 41903                           
 41904                           ;stkvar	_a @ sp[(-4)+-8]
 41905  01799C  0EF4               	movlw	-12
 41906  01799E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41907  0179A4  0EF5               	movlw	-11
 41908  0179A6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41909  0179AC  0EF6               	movlw	-10
 41910  0179AE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41911  0179B4  0EF7               	movlw	-9
 41912  0179B6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41913  0179BC                     l9905:
 41914                           
 41915                           ;stkvar	_a @ sp[(-4)+-8]
 41916  0179BC  0EF6               	movlw	-10
 41917  0179BE  8EE3               	bsf	plusw1,7,c
 41918                           
 41919                           ;stkvar	_a @ sp[(-4)+-8]
 41920  0179C0  0EF7               	movlw	247
 41921  0179C2  24E1               	addwf	fsr1l,w,c
 41922  0179C4  6ED9               	movwf	fsr2l,c
 41923  0179C6  0EFF               	movlw	255
 41924  0179C8  20E2               	addwfc	fsr1h,w,c
 41925  0179CA  6EDA               	movwf	fsr2h,c
 41926  0179CC  0E00               	movlw	0
 41927  0179CE  6EDF               	movwf	indf2,c
 41928  0179D0  D018               	goto	l9911
 41929  0179D2                     l9909:
 41930  0179D2  0E00               	movlw	0
 41931  0179D4  6E32               	movwf	(btemp+8)^0,c
 41932  0179D6  0E00               	movlw	0
 41933  0179D8  6E33               	movwf	(btemp+9)^0,c
 41934  0179DA  0E00               	movlw	0
 41935  0179DC  6E34               	movwf	(btemp+10)^0,c
 41936  0179DE  0E00               	movlw	0
 41937  0179E0  6E35               	movwf	(btemp+11)^0,c
 41938                           
 41939                           ;stkvar	_a @ sp[(-4)+-8]
 41940  0179E2  0EF4               	movlw	-12
 41941  0179E4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41942  0179EA  0EF5               	movlw	-11
 41943  0179EC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41944  0179F2  0EF6               	movlw	-10
 41945  0179F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41946  0179FA  0EF7               	movlw	-9
 41947  0179FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41948  017A02                     l9911:
 41949                           
 41950                           ;stkvar	_bexp @ sp[(-4)+1]
 41951                           ;stkvar	_aexp @ sp[(-4)+2]
 41952  017A02  50E1               	movf	fsr1l,w,c
 41953  017A04  0FFE               	addlw	-2
 41954  017A06  6ED9               	movwf	fsr2l,c
 41955  017A08  50E2               	movf	fsr1h,w,c
 41956  017A0A  6EDA               	movwf	fsr2h,c
 41957  017A0C  0EFF               	movlw	255
 41958  017A0E  22DA               	addwfc	fsr2h,f,c
 41959  017A10  0EFD               	movlw	-3
 41960  017A12  50E3               	movf	plusw1,w,c
 41961  017A14  5CDE               	subwf	postinc2,w,c
 41962  017A16  B0D8               	btfsc	status,0,c
 41963  017A18  D0A4               	goto	l9947
 41964                           
 41965                           ;stkvar	_signs @ sp[(-4)+3]
 41966  017A1A  0EFF               	movlw	-1
 41967  017A1C  ACE3               	btfss	plusw1,6,c
 41968  017A1E  D002               	goto	l9917
 41969                           
 41970                           ;stkvar	_signs @ sp[(-4)+3]
 41971  017A20  0EFF               	movlw	-1
 41972  017A22  7EE3               	btg	plusw1,7,c
 41973  017A24                     l9917:
 41974                           
 41975                           ;stkvar	_bexp @ sp[(-4)+1]
 41976                           ;stkvar	_grs @ sp[(-4)+0]
 41977  017A24  0EFD               	movlw	-3
 41978  017A26  006F FF8C  F02A    	movff	plusw1,btemp
 41979  017A2C  0EFC               	movlw	-4
 41980  017A2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 41981                           
 41982                           ;stkvar	_aexp @ sp[(-4)+2]
 41983                           ;stkvar	_bexp @ sp[(-4)+1]
 41984  017A34  0EFE               	movlw	-2
 41985  017A36  006F FF8C  F02A    	movff	plusw1,btemp
 41986  017A3C  0EFD               	movlw	-3
 41987  017A3E  0060  F0AB  FFE3   	movff	btemp,plusw1
 41988                           
 41989                           ;stkvar	_grs @ sp[(-4)+0]
 41990                           ;stkvar	_aexp @ sp[(-4)+2]
 41991  017A44  0EFC               	movlw	-4
 41992  017A46  006F FF8C  F02A    	movff	plusw1,btemp
 41993  017A4C  0EFE               	movlw	-2
 41994  017A4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 41995                           
 41996                           ;stkvar	_b @ sp[(-4)+-4]
 41997                           ;stkvar	_grs @ sp[(-4)+0]
 41998  017A54  0EF8               	movlw	-8
 41999  017A56  006F FF8C  F02A    	movff	plusw1,btemp
 42000  017A5C  0EFC               	movlw	-4
 42001  017A5E  0060  F0AB  FFE3   	movff	btemp,plusw1
 42002                           
 42003                           ;stkvar	_a @ sp[(-4)+-8]
 42004                           ;stkvar	_b @ sp[(-4)+-4]
 42005  017A64  0EF4               	movlw	-12
 42006  017A66  006F FF8C  F02A    	movff	plusw1,btemp
 42007  017A6C  0EF8               	movlw	-8
 42008  017A6E  0060  F0AB  FFE3   	movff	btemp,plusw1
 42009                           
 42010                           ;stkvar	_grs @ sp[(-4)+0]
 42011                           ;stkvar	_a @ sp[(-4)+-8]
 42012  017A74  0EFC               	movlw	-4
 42013  017A76  006F FF8C  F02A    	movff	plusw1,btemp
 42014  017A7C  0EF4               	movlw	-12
 42015  017A7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 42016                           
 42017                           ;stkvar	_b @ sp[(-4)+-4]
 42018  017A84  0EF9               	movlw	249
 42019  017A86  24E1               	addwf	fsr1l,w,c
 42020  017A88  6ED9               	movwf	fsr2l,c
 42021  017A8A  0EFF               	movlw	255
 42022  017A8C  20E2               	addwfc	fsr1h,w,c
 42023  017A8E  6EDA               	movwf	fsr2h,c
 42024  017A90  50DF               	movf	indf2,w,c
 42025  017A92  6E35               	movwf	(btemp+11)^0,c
 42026                           
 42027                           ;stkvar	_grs @ sp[(-4)+0]
 42028  017A94  0EFC               	movlw	-4
 42029  017A96  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42030                           
 42031                           ;stkvar	_a @ sp[(-4)+-8]
 42032  017A9C  0EF5               	movlw	245
 42033  017A9E  24E1               	addwf	fsr1l,w,c
 42034  017AA0  6ED9               	movwf	fsr2l,c
 42035  017AA2  0EFF               	movlw	255
 42036  017AA4  20E2               	addwfc	fsr1h,w,c
 42037  017AA6  6EDA               	movwf	fsr2h,c
 42038                           
 42039                           ;stkvar	_b @ sp[(-4)+-4]
 42040  017AA8  0EF9               	movlw	249
 42041  017AAA  24E1               	addwf	fsr1l,w,c
 42042  017AAC  6EE9               	movwf	fsr0l,c
 42043  017AAE  0EFF               	movlw	255
 42044  017AB0  20E2               	addwfc	fsr1h,w,c
 42045  017AB2  6EEA               	movwf	fsr0h,c
 42046  017AB4  006F FF7F FFEF     	movff	indf2,indf0
 42047                           
 42048                           ;stkvar	_grs @ sp[(-4)+0]
 42049                           ;stkvar	_a @ sp[(-4)+-8]
 42050  017ABA  0EF5               	movlw	245
 42051  017ABC  24E1               	addwf	fsr1l,w,c
 42052  017ABE  6ED9               	movwf	fsr2l,c
 42053  017AC0  0EFF               	movlw	255
 42054  017AC2  20E2               	addwfc	fsr1h,w,c
 42055  017AC4  6EDA               	movwf	fsr2h,c
 42056  017AC6  0EFC               	movlw	-4
 42057  017AC8  006F FF8F FFDF     	movff	plusw1,indf2
 42058                           
 42059                           ;stkvar	_b @ sp[(-4)+-4]
 42060  017ACE  0EFA               	movlw	250
 42061  017AD0  24E1               	addwf	fsr1l,w,c
 42062  017AD2  6ED9               	movwf	fsr2l,c
 42063  017AD4  0EFF               	movlw	255
 42064  017AD6  20E2               	addwfc	fsr1h,w,c
 42065  017AD8  6EDA               	movwf	fsr2h,c
 42066  017ADA  50DF               	movf	indf2,w,c
 42067  017ADC  6E35               	movwf	(btemp+11)^0,c
 42068                           
 42069                           ;stkvar	_grs @ sp[(-4)+0]
 42070  017ADE  0EFC               	movlw	-4
 42071  017AE0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42072                           
 42073                           ;stkvar	_a @ sp[(-4)+-8]
 42074  017AE6  0EF6               	movlw	246
 42075  017AE8  24E1               	addwf	fsr1l,w,c
 42076  017AEA  6ED9               	movwf	fsr2l,c
 42077  017AEC  0EFF               	movlw	255
 42078  017AEE  20E2               	addwfc	fsr1h,w,c
 42079  017AF0  6EDA               	movwf	fsr2h,c
 42080                           
 42081                           ;stkvar	_b @ sp[(-4)+-4]
 42082  017AF2  0EFA               	movlw	250
 42083  017AF4  24E1               	addwf	fsr1l,w,c
 42084  017AF6  6EE9               	movwf	fsr0l,c
 42085  017AF8  0EFF               	movlw	255
 42086  017AFA  20E2               	addwfc	fsr1h,w,c
 42087  017AFC  6EEA               	movwf	fsr0h,c
 42088  017AFE  006F FF7F FFEF     	movff	indf2,indf0
 42089                           
 42090                           ;stkvar	_grs @ sp[(-4)+0]
 42091                           ;stkvar	_a @ sp[(-4)+-8]
 42092  017B04  0EF6               	movlw	246
 42093  017B06  24E1               	addwf	fsr1l,w,c
 42094  017B08  6ED9               	movwf	fsr2l,c
 42095  017B0A  0EFF               	movlw	255
 42096  017B0C  20E2               	addwfc	fsr1h,w,c
 42097  017B0E  6EDA               	movwf	fsr2h,c
 42098  017B10  0EFC               	movlw	-4
 42099  017B12  006F FF8F FFDF     	movff	plusw1,indf2
 42100                           
 42101                           ;stkvar	_b @ sp[(-4)+-4]
 42102  017B18  0EFB               	movlw	251
 42103  017B1A  24E1               	addwf	fsr1l,w,c
 42104  017B1C  6ED9               	movwf	fsr2l,c
 42105  017B1E  0EFF               	movlw	255
 42106  017B20  20E2               	addwfc	fsr1h,w,c
 42107  017B22  6EDA               	movwf	fsr2h,c
 42108  017B24  50DF               	movf	indf2,w,c
 42109  017B26  6E35               	movwf	(btemp+11)^0,c
 42110                           
 42111                           ;stkvar	_grs @ sp[(-4)+0]
 42112  017B28  0EFC               	movlw	-4
 42113  017B2A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42114                           
 42115                           ;stkvar	_a @ sp[(-4)+-8]
 42116  017B30  0EF7               	movlw	247
 42117  017B32  24E1               	addwf	fsr1l,w,c
 42118  017B34  6ED9               	movwf	fsr2l,c
 42119  017B36  0EFF               	movlw	255
 42120  017B38  20E2               	addwfc	fsr1h,w,c
 42121  017B3A  6EDA               	movwf	fsr2h,c
 42122                           
 42123                           ;stkvar	_b @ sp[(-4)+-4]
 42124  017B3C  0EFB               	movlw	251
 42125  017B3E  24E1               	addwf	fsr1l,w,c
 42126  017B40  6EE9               	movwf	fsr0l,c
 42127  017B42  0EFF               	movlw	255
 42128  017B44  20E2               	addwfc	fsr1h,w,c
 42129  017B46  6EEA               	movwf	fsr0h,c
 42130  017B48  006F FF7F FFEF     	movff	indf2,indf0
 42131                           
 42132                           ;stkvar	_grs @ sp[(-4)+0]
 42133                           ;stkvar	_a @ sp[(-4)+-8]
 42134  017B4E  0EF7               	movlw	247
 42135  017B50  24E1               	addwf	fsr1l,w,c
 42136  017B52  6ED9               	movwf	fsr2l,c
 42137  017B54  0EFF               	movlw	255
 42138  017B56  20E2               	addwfc	fsr1h,w,c
 42139  017B58  6EDA               	movwf	fsr2h,c
 42140  017B5A  0EFC               	movlw	-4
 42141  017B5C  006F FF8F FFDF     	movff	plusw1,indf2
 42142  017B62                     l9947:
 42143                           
 42144                           ;stkvar	_grs @ sp[(-4)+0]
 42145  017B62  0EFC               	movlw	-4
 42146  017B64  6AE3               	clrf	plusw1,c
 42147                           
 42148                           ;stkvar	_aexp @ sp[(-4)+2]
 42149  017B66  0EFE               	movlw	-2
 42150  017B68  50E3               	movf	plusw1,w,c
 42151  017B6A  6E34               	movwf	(btemp+10)^0,c
 42152  017B6C  6A35               	clrf	(btemp+11)^0,c
 42153                           
 42154                           ;stkvar	_bexp @ sp[(-4)+1]
 42155  017B6E  0EFD               	movlw	-3
 42156  017B70  50E3               	movf	plusw1,w,c
 42157  017B72  5E34               	subwf	(btemp+10)^0,f,c
 42158  017B74  0E00               	movlw	0
 42159  017B76  5A35               	subwfb	(btemp+11)^0,f,c
 42160  017B78  BE35               	btfsc	(btemp+11)^0,7,c
 42161  017B7A  D062               	goto	l9971
 42162  017B7C  5035               	movf	(btemp+11)^0,w,c
 42163  017B7E  E104               	bnz	u7350
 42164  017B80  0E1A               	movlw	26
 42165  017B82  5C34               	subwf	(btemp+10)^0,w,c
 42166  017B84  A0D8               	btfss	status,0,c
 42167  017B86  D05C               	goto	l9971
 42168  017B88                     u7350:
 42169                           
 42170                           ;stkvar	_b @ sp[(-4)+-4]
 42171  017B88  0EF8               	movlw	-8
 42172  017B8A  50E3               	movf	plusw1,w,c
 42173  017B8C  E10A               	bnz	u7361
 42174  017B8E  0EF9               	movlw	-7
 42175  017B90  50E3               	movf	plusw1,w,c
 42176  017B92  E107               	bnz	u7361
 42177  017B94  0EFA               	movlw	-6
 42178  017B96  50E3               	movf	plusw1,w,c
 42179  017B98  E104               	bnz	u7361
 42180  017B9A  0EFB               	movlw	-5
 42181  017B9C  50E3               	movf	plusw1,w,c
 42182  017B9E  B4D8               	btfsc	status,2,c
 42183  017BA0  D003               	goto	u7360
 42184  017BA2                     u7361:
 42185  017BA2  6A35               	clrf	(btemp+11)^0,c
 42186  017BA4  2A35               	incf	(btemp+11)^0,f,c
 42187  017BA6  D001               	goto	u7378
 42188  017BA8                     u7360:
 42189  017BA8  6A35               	clrf	(btemp+11)^0,c
 42190  017BAA                     u7378:
 42191                           
 42192                           ;stkvar	_grs @ sp[(-4)+0]
 42193  017BAA  0EFC               	movlw	-4
 42194  017BAC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42195                           
 42196                           ;stkvar	_b @ sp[(-4)+-4]
 42197  017BB2  0EF8               	movlw	-8
 42198  017BB4  6AE3               	clrf	plusw1,c
 42199  017BB6  0EF9               	movlw	-7
 42200  017BB8  6AE3               	clrf	plusw1,c
 42201  017BBA  0EFA               	movlw	-6
 42202  017BBC  6AE3               	clrf	plusw1,c
 42203  017BBE  0EFB               	movlw	-5
 42204  017BC0  6AE3               	clrf	plusw1,c
 42205                           
 42206                           ;stkvar	_aexp @ sp[(-4)+2]
 42207                           ;stkvar	_bexp @ sp[(-4)+1]
 42208  017BC2  0EFE               	movlw	-2
 42209  017BC4  006F FF8C  F02A    	movff	plusw1,btemp
 42210  017BCA  0EFD               	movlw	-3
 42211  017BCC  0060  F0AB  FFE3   	movff	btemp,plusw1
 42212  017BD2  D042               	goto	u7410
 42213  017BD4                     l9957:
 42214                           
 42215                           ;stkvar	_grs @ sp[(-4)+0]
 42216  017BD4  0EFC               	movlw	-4
 42217  017BD6  A0E3               	btfss	plusw1,0,c
 42218  017BD8  D00D               	goto	l9961
 42219                           
 42220                           ;stkvar	_grs @ sp[(-4)+0]
 42221  017BDA  0EFC               	movlw	-4
 42222  017BDC  006F FF8C  F035    	movff	plusw1,btemp+11
 42223  017BE2  90D8               	bcf	status,0,c
 42224  017BE4  3235               	rrcf	(btemp+11)^0,f,c
 42225  017BE6  0E01               	movlw	1
 42226  017BE8  1235               	iorwf	(btemp+11)^0,f,c
 42227                           
 42228                           ;stkvar	_grs @ sp[(-4)+0]
 42229  017BEA  0EFC               	movlw	-4
 42230  017BEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42231  017BF2  D009               	goto	l9963
 42232  017BF4                     l9961:
 42233                           
 42234                           ;stkvar	_grs @ sp[(-4)+0]
 42235  017BF4  50E1               	movf	fsr1l,w,c
 42236  017BF6  0FFC               	addlw	-4
 42237  017BF8  6ED9               	movwf	fsr2l,c
 42238  017BFA  50E2               	movf	fsr1h,w,c
 42239  017BFC  6EDA               	movwf	fsr2h,c
 42240  017BFE  0EFF               	movlw	255
 42241  017C00  22DA               	addwfc	fsr2h,f,c
 42242  017C02  90D8               	bcf	status,0,c
 42243  017C04  32DF               	rrcf	indf2,f,c
 42244  017C06                     l9963:
 42245                           
 42246                           ;stkvar	_b @ sp[(-4)+-4]
 42247  017C06  0EF8               	movlw	-8
 42248  017C08  A0E3               	btfss	plusw1,0,c
 42249  017C0A  D002               	goto	l9967
 42250                           
 42251                           ;stkvar	_grs @ sp[(-4)+0]
 42252  017C0C  0EFC               	movlw	-4
 42253  017C0E  8EE3               	bsf	plusw1,7,c
 42254  017C10                     l9967:
 42255  017C10  0E01               	movlw	1
 42256  017C12  6E35               	movwf	(btemp+11)^0,c
 42257                           
 42258                           ;stkvar	_b @ sp[(-4)+-4]
 42259  017C14  50E1               	movf	fsr1l,w,c
 42260  017C16  0FF8               	addlw	-8
 42261  017C18  6ED9               	movwf	fsr2l,c
 42262  017C1A  50E2               	movf	fsr1h,w,c
 42263  017C1C  6EDA               	movwf	fsr2h,c
 42264  017C1E  0EFF               	movlw	255
 42265  017C20  22DA               	addwfc	fsr2h,f,c
 42266  017C22  2835               	incf	(btemp+11)^0,w,c
 42267  017C24  52DE               	movf	postinc2,f,c
 42268  017C26  D008               	goto	u7400
 42269  017C28                     u7405:
 42270  017C28  52DE               	movf	postinc2,f,c
 42271  017C2A  90D8               	bcf	status,0,c
 42272  017C2C  BEDC               	btfsc	preinc2,7,c
 42273  017C2E  80D8               	bsf	status,0,c
 42274  017C30  32DD               	rrcf	postdec2,f,c
 42275  017C32  32DD               	rrcf	postdec2,f,c
 42276  017C34  32DD               	rrcf	postdec2,f,c
 42277  017C36  32DE               	rrcf	postinc2,f,c
 42278  017C38                     u7400:
 42279  017C38  2EE8               	decfsz	wreg,f,c
 42280  017C3A  D7F6               	goto	u7405
 42281                           
 42282                           ;stkvar	_bexp @ sp[(-4)+1]
 42283  017C3C  0EFD               	movlw	-3
 42284  017C3E  2AE3               	incf	plusw1,f,c
 42285  017C40                     l9971:
 42286                           
 42287                           ;stkvar	_aexp @ sp[(-4)+2]
 42288                           ;stkvar	_bexp @ sp[(-4)+1]
 42289  017C40  50E1               	movf	fsr1l,w,c
 42290  017C42  0FFD               	addlw	-3
 42291  017C44  6ED9               	movwf	fsr2l,c
 42292  017C46  50E2               	movf	fsr1h,w,c
 42293  017C48  6EDA               	movwf	fsr2h,c
 42294  017C4A  0EFF               	movlw	255
 42295  017C4C  22DA               	addwfc	fsr2h,f,c
 42296  017C4E  0EFE               	movlw	-2
 42297  017C50  50E3               	movf	plusw1,w,c
 42298  017C52  5CDE               	subwf	postinc2,w,c
 42299  017C54  A0D8               	btfss	status,0,c
 42300  017C56  D7BE               	goto	l9957
 42301  017C58                     u7410:
 42302                           
 42303                           ;stkvar	_signs @ sp[(-4)+3]
 42304  017C58  0EFF               	movlw	-1
 42305  017C5A  BCE3               	btfsc	plusw1,6,c
 42306  017C5C  D066               	goto	l9999
 42307                           
 42308                           ;stkvar	_bexp @ sp[(-4)+1]
 42309  017C5E  0EFD               	movlw	-3
 42310  017C60  50E3               	movf	plusw1,w,c
 42311  017C62  B4D8               	btfsc	status,2,c
 42312  017C64  D0F2               	goto	u7510
 42313                           
 42314                           ;stkvar	_a @ sp[(-4)+-8]
 42315                           ;stkvar	_b @ sp[(-4)+-4]
 42316  017C66  0EF8               	movlw	-8
 42317  017C68  50E3               	movf	plusw1,w,c
 42318  017C6A  6E2A               	movwf	btemp^0,c
 42319  017C6C  0EF4               	movlw	-12
 42320  017C6E  50E3               	movf	plusw1,w,c
 42321  017C70  262A               	addwf	btemp^0,f,c
 42322  017C72  0EF8               	movlw	-8
 42323  017C74  0060  F0AB  FFE3   	movff	btemp,plusw1
 42324  017C7A  0EF9               	movlw	-7
 42325  017C7C  50E3               	movf	plusw1,w,c
 42326  017C7E  6E2A               	movwf	btemp^0,c
 42327  017C80  0EF5               	movlw	-11
 42328  017C82  50E3               	movf	plusw1,w,c
 42329  017C84  222A               	addwfc	btemp^0,f,c
 42330  017C86  0EF9               	movlw	-7
 42331  017C88  0060  F0AB  FFE3   	movff	btemp,plusw1
 42332  017C8E  0EFA               	movlw	-6
 42333  017C90  50E3               	movf	plusw1,w,c
 42334  017C92  6E2A               	movwf	btemp^0,c
 42335  017C94  0EF6               	movlw	-10
 42336  017C96  50E3               	movf	plusw1,w,c
 42337  017C98  222A               	addwfc	btemp^0,f,c
 42338  017C9A  0EFA               	movlw	-6
 42339  017C9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 42340  017CA2  0EFB               	movlw	-5
 42341  017CA4  50E3               	movf	plusw1,w,c
 42342  017CA6  6E2A               	movwf	btemp^0,c
 42343  017CA8  0EF7               	movlw	-9
 42344  017CAA  50E3               	movf	plusw1,w,c
 42345  017CAC  222A               	addwfc	btemp^0,f,c
 42346  017CAE  0EFB               	movlw	-5
 42347  017CB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 42348                           
 42349                           ;stkvar	_b @ sp[(-4)+-4]
 42350  017CB6  0EFB               	movlw	-5
 42351  017CB8  A0E3               	btfss	plusw1,0,c
 42352  017CBA  D101               	goto	u7550
 42353                           
 42354                           ;stkvar	_grs @ sp[(-4)+0]
 42355  017CBC  0EFC               	movlw	-4
 42356  017CBE  A0E3               	btfss	plusw1,0,c
 42357  017CC0  D00D               	goto	l9989
 42358                           
 42359                           ;stkvar	_grs @ sp[(-4)+0]
 42360  017CC2  0EFC               	movlw	-4
 42361  017CC4  006F FF8C  F035    	movff	plusw1,btemp+11
 42362  017CCA  90D8               	bcf	status,0,c
 42363  017CCC  3235               	rrcf	(btemp+11)^0,f,c
 42364  017CCE  0E01               	movlw	1
 42365  017CD0  1235               	iorwf	(btemp+11)^0,f,c
 42366                           
 42367                           ;stkvar	_grs @ sp[(-4)+0]
 42368  017CD2  0EFC               	movlw	-4
 42369  017CD4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42370  017CDA  D009               	goto	l9991
 42371  017CDC                     l9989:
 42372                           
 42373                           ;stkvar	_grs @ sp[(-4)+0]
 42374  017CDC  50E1               	movf	fsr1l,w,c
 42375  017CDE  0FFC               	addlw	-4
 42376  017CE0  6ED9               	movwf	fsr2l,c
 42377  017CE2  50E2               	movf	fsr1h,w,c
 42378  017CE4  6EDA               	movwf	fsr2h,c
 42379  017CE6  0EFF               	movlw	255
 42380  017CE8  22DA               	addwfc	fsr2h,f,c
 42381  017CEA  90D8               	bcf	status,0,c
 42382  017CEC  32DF               	rrcf	indf2,f,c
 42383  017CEE                     l9991:
 42384                           
 42385                           ;stkvar	_b @ sp[(-4)+-4]
 42386  017CEE  0EF8               	movlw	-8
 42387  017CF0  A0E3               	btfss	plusw1,0,c
 42388  017CF2  D002               	goto	l9995
 42389                           
 42390                           ;stkvar	_grs @ sp[(-4)+0]
 42391  017CF4  0EFC               	movlw	-4
 42392  017CF6  8EE3               	bsf	plusw1,7,c
 42393  017CF8                     l9995:
 42394  017CF8  0E01               	movlw	1
 42395  017CFA  6E35               	movwf	(btemp+11)^0,c
 42396                           
 42397                           ;stkvar	_b @ sp[(-4)+-4]
 42398  017CFC  50E1               	movf	fsr1l,w,c
 42399  017CFE  0FF8               	addlw	-8
 42400  017D00  6ED9               	movwf	fsr2l,c
 42401  017D02  50E2               	movf	fsr1h,w,c
 42402  017D04  6EDA               	movwf	fsr2h,c
 42403  017D06  0EFF               	movlw	255
 42404  017D08  22DA               	addwfc	fsr2h,f,c
 42405  017D0A  2835               	incf	(btemp+11)^0,w,c
 42406  017D0C  52DE               	movf	postinc2,f,c
 42407  017D0E  D008               	goto	u7470
 42408  017D10                     u7475:
 42409  017D10  52DE               	movf	postinc2,f,c
 42410  017D12  90D8               	bcf	status,0,c
 42411  017D14  BEDC               	btfsc	preinc2,7,c
 42412  017D16  80D8               	bsf	status,0,c
 42413  017D18  32DD               	rrcf	postdec2,f,c
 42414  017D1A  32DD               	rrcf	postdec2,f,c
 42415  017D1C  32DD               	rrcf	postdec2,f,c
 42416  017D1E  32DE               	rrcf	postinc2,f,c
 42417  017D20                     u7470:
 42418  017D20  2EE8               	decfsz	wreg,f,c
 42419  017D22  D7F6               	goto	u7475
 42420                           
 42421                           ;stkvar	_bexp @ sp[(-4)+1]
 42422  017D24  0EFD               	movlw	-3
 42423  017D26  2AE3               	incf	plusw1,f,c
 42424  017D28  D0CA               	goto	u7550
 42425  017D2A                     l9999:
 42426                           
 42427                           ;stkvar	_a @ sp[(-4)+-8]
 42428                           ;stkvar	_b @ sp[(-4)+-4]
 42429  017D2A  50E1               	movf	fsr1l,w,c
 42430  017D2C  0FF8               	addlw	-8
 42431  017D2E  6ED9               	movwf	fsr2l,c
 42432  017D30  50E2               	movf	fsr1h,w,c
 42433  017D32  6EDA               	movwf	fsr2h,c
 42434  017D34  0EFF               	movlw	255
 42435  017D36  22DA               	addwfc	fsr2h,f,c
 42436  017D38  0EF4               	movlw	-12
 42437  017D3A  50E3               	movf	plusw1,w,c
 42438  017D3C  5CDE               	subwf	postinc2,w,c
 42439  017D3E  0EF5               	movlw	-11
 42440  017D40  50E3               	movf	plusw1,w,c
 42441  017D42  58DE               	subwfb	postinc2,w,c
 42442  017D44  0EF6               	movlw	-10
 42443  017D46  50E3               	movf	plusw1,w,c
 42444  017D48  58DE               	subwfb	postinc2,w,c
 42445  017D4A  50DE               	movf	postinc2,w,c
 42446  017D4C  0A80               	xorlw	128
 42447  017D4E  6E2A               	movwf	btemp^0,c
 42448  017D50  0EF7               	movlw	-9
 42449  017D52  50E3               	movf	plusw1,w,c
 42450  017D54  0A80               	xorlw	128
 42451  017D56  582A               	subwfb	btemp^0,w,c
 42452  017D58  B0D8               	btfsc	status,0,c
 42453  017D5A  D053               	goto	l10011
 42454                           
 42455                           ;stkvar	_b @ sp[(-4)+-4]
 42456                           ;stkvar	_a @ sp[(-4)+-8]
 42457  017D5C  0EF4               	movlw	-12
 42458  017D5E  006F FF8C  F032    	movff	plusw1,btemp+8
 42459  017D64  0EF5               	movlw	-11
 42460  017D66  006F FF8C  F033    	movff	plusw1,btemp+9
 42461  017D6C  0EF6               	movlw	-10
 42462  017D6E  006F FF8C  F034    	movff	plusw1,btemp+10
 42463  017D74  0EF7               	movlw	-9
 42464  017D76  006F FF8C  F035    	movff	plusw1,btemp+11
 42465  017D7C  0EF8               	movlw	-8
 42466  017D7E  50E3               	movf	plusw1,w,c
 42467  017D80  5E32               	subwf	(btemp+8)^0,f,c
 42468  017D82  0EF9               	movlw	-7
 42469  017D84  50E3               	movf	plusw1,w,c
 42470  017D86  5A33               	subwfb	(btemp+9)^0,f,c
 42471  017D88  0EFA               	movlw	-6
 42472  017D8A  50E3               	movf	plusw1,w,c
 42473  017D8C  5A34               	subwfb	(btemp+10)^0,f,c
 42474  017D8E  0EFB               	movlw	-5
 42475  017D90  50E3               	movf	plusw1,w,c
 42476  017D92  5A35               	subwfb	(btemp+11)^0,f,c
 42477  017D94  0EFF               	movlw	255
 42478  017D96  2432               	addwf	(btemp+8)^0,w,c
 42479  017D98  6E2E               	movwf	(btemp+4)^0,c
 42480  017D9A  0EFF               	movlw	255
 42481  017D9C  2033               	addwfc	(btemp+9)^0,w,c
 42482  017D9E  6E2F               	movwf	(btemp+5)^0,c
 42483  017DA0  0EFF               	movlw	255
 42484  017DA2  2034               	addwfc	(btemp+10)^0,w,c
 42485  017DA4  6E30               	movwf	(btemp+6)^0,c
 42486  017DA6  0EFF               	movlw	255
 42487  017DA8  2035               	addwfc	(btemp+11)^0,w,c
 42488  017DAA  6E31               	movwf	(btemp+7)^0,c
 42489                           
 42490                           ;stkvar	_b @ sp[(-4)+-4]
 42491  017DAC  0EF8               	movlw	-8
 42492  017DAE  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42493  017DB4  0EF9               	movlw	-7
 42494  017DB6  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42495  017DBC  0EFA               	movlw	-6
 42496  017DBE  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42497  017DC4  0EFB               	movlw	-5
 42498  017DC6  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42499                           
 42500                           ;stkvar	_signs @ sp[(-4)+3]
 42501  017DCC  0EFF               	movlw	-1
 42502  017DCE  7EE3               	btg	plusw1,7,c
 42503                           
 42504                           ;stkvar	_grs @ sp[(-4)+0]
 42505  017DD0  0EFC               	movlw	-4
 42506  017DD2  50E3               	movf	plusw1,w,c
 42507  017DD4  0800               	sublw	0
 42508  017DD6  6E35               	movwf	(btemp+11)^0,c
 42509                           
 42510                           ;stkvar	_grs @ sp[(-4)+0]
 42511  017DD8  0EFC               	movlw	-4
 42512  017DDA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42513                           
 42514                           ;stkvar	_grs @ sp[(-4)+0]
 42515  017DE0  0EFC               	movlw	-4
 42516  017DE2  50E3               	movf	plusw1,w,c
 42517  017DE4  A4D8               	btfss	status,2,c
 42518  017DE6  D020               	goto	l10013
 42519                           
 42520                           ;stkvar	_b @ sp[(-4)+-4]
 42521  017DE8  50E1               	movf	fsr1l,w,c
 42522  017DEA  0FF8               	addlw	-8
 42523  017DEC  6ED9               	movwf	fsr2l,c
 42524  017DEE  50E2               	movf	fsr1h,w,c
 42525  017DF0  6EDA               	movwf	fsr2h,c
 42526  017DF2  0EFF               	movlw	255
 42527  017DF4  22DA               	addwfc	fsr2h,f,c
 42528  017DF6  2ADE               	incf	postinc2,f,c
 42529  017DF8  0E00               	movlw	0
 42530  017DFA  22DE               	addwfc	postinc2,f,c
 42531  017DFC  22DE               	addwfc	postinc2,f,c
 42532  017DFE  22DE               	addwfc	postinc2,f,c
 42533  017E00  D013               	goto	l10013
 42534  017E02                     l10011:
 42535                           
 42536                           ;stkvar	_a @ sp[(-4)+-8]
 42537                           ;stkvar	_b @ sp[(-4)+-4]
 42538  017E02  50E1               	movf	fsr1l,w,c
 42539  017E04  0FF8               	addlw	-8
 42540  017E06  6ED9               	movwf	fsr2l,c
 42541  017E08  50E2               	movf	fsr1h,w,c
 42542  017E0A  6EDA               	movwf	fsr2h,c
 42543  017E0C  0EFF               	movlw	255
 42544  017E0E  22DA               	addwfc	fsr2h,f,c
 42545  017E10  0EF4               	movlw	-12
 42546  017E12  50E3               	movf	plusw1,w,c
 42547  017E14  5EDE               	subwf	postinc2,f,c
 42548  017E16  0EF5               	movlw	-11
 42549  017E18  50E3               	movf	plusw1,w,c
 42550  017E1A  5ADE               	subwfb	postinc2,f,c
 42551  017E1C  0EF6               	movlw	-10
 42552  017E1E  50E3               	movf	plusw1,w,c
 42553  017E20  5ADE               	subwfb	postinc2,f,c
 42554  017E22  0EF7               	movlw	-9
 42555  017E24  50E3               	movf	plusw1,w,c
 42556  017E26  5ADE               	subwfb	postinc2,f,c
 42557  017E28                     l10013:
 42558                           
 42559                           ;stkvar	_b @ sp[(-4)+-4]
 42560  017E28  0EF8               	movlw	-8
 42561  017E2A  50E3               	movf	plusw1,w,c
 42562  017E2C  E145               	bnz	l10035
 42563  017E2E  0EF9               	movlw	-7
 42564  017E30  50E3               	movf	plusw1,w,c
 42565  017E32  E142               	bnz	l10035
 42566  017E34  0EFA               	movlw	-6
 42567  017E36  50E3               	movf	plusw1,w,c
 42568  017E38  E13F               	bnz	l10035
 42569  017E3A  0EFB               	movlw	-5
 42570  017E3C  50E3               	movf	plusw1,w,c
 42571  017E3E  A4D8               	btfss	status,2,c
 42572  017E40  D03B               	goto	l10035
 42573                           
 42574                           ;stkvar	_grs @ sp[(-4)+0]
 42575  017E42  0EFC               	movlw	-4
 42576  017E44  50E3               	movf	plusw1,w,c
 42577  017E46  A4D8               	btfss	status,2,c
 42578  017E48  D037               	goto	l10035
 42579  017E4A                     u7510:
 42580  017E4A  0E00               	movlw	0
 42581  017E4C  6E2A               	movwf	btemp^0,c
 42582  017E4E  0E00               	movlw	0
 42583  017E50  6E2B               	movwf	(btemp+1)^0,c
 42584  017E52  0E00               	movlw	0
 42585  017E54  6E2C               	movwf	(btemp+2)^0,c
 42586  017E56  0E00               	movlw	0
 42587  017E58  6E2D               	movwf	(btemp+3)^0,c
 42588  017E5A  D0C6               	goto	l3258
 42589  017E5C                     l10021:
 42590                           
 42591                           ;stkvar	_b @ sp[(-4)+-4]
 42592  017E5C  90D8               	bcf	status,0,c
 42593  017E5E  0EF8               	movlw	-8
 42594  017E60  36E3               	rlcf	plusw1,f,c
 42595  017E62  0EF9               	movlw	-7
 42596  017E64  36E3               	rlcf	plusw1,f,c
 42597  017E66  0EFA               	movlw	-6
 42598  017E68  36E3               	rlcf	plusw1,f,c
 42599  017E6A  0EFB               	movlw	-5
 42600  017E6C  36E3               	rlcf	plusw1,f,c
 42601                           
 42602                           ;stkvar	_grs @ sp[(-4)+0]
 42603  017E6E  0EFC               	movlw	-4
 42604  017E70  AEE3               	btfss	plusw1,7,c
 42605  017E72  D002               	goto	l3270
 42606                           
 42607                           ;stkvar	_b @ sp[(-4)+-4]
 42608  017E74  0EF8               	movlw	-8
 42609  017E76  80E3               	bsf	plusw1,0,c
 42610  017E78                     l3270:
 42611                           
 42612                           ;stkvar	_grs @ sp[(-4)+0]
 42613  017E78  0EFC               	movlw	-4
 42614  017E7A  A0E3               	btfss	plusw1,0,c
 42615  017E7C  D00E               	goto	l10029
 42616                           
 42617                           ;stkvar	_grs @ sp[(-4)+0]
 42618  017E7E  0EFC               	movlw	-4
 42619  017E80  006F FF8C  F035    	movff	plusw1,btemp+11
 42620  017E86  90D8               	bcf	status,0,c
 42621  017E88  3435               	rlcf	(btemp+11)^0,w,c
 42622  017E8A  6E34               	movwf	(btemp+10)^0,c
 42623  017E8C  0E01               	movlw	1
 42624  017E8E  1234               	iorwf	(btemp+10)^0,f,c
 42625                           
 42626                           ;stkvar	_grs @ sp[(-4)+0]
 42627  017E90  0EFC               	movlw	-4
 42628  017E92  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42629  017E98  D009               	goto	l10031
 42630  017E9A                     l10029:
 42631                           
 42632                           ;stkvar	_grs @ sp[(-4)+0]
 42633  017E9A  50E1               	movf	fsr1l,w,c
 42634  017E9C  0FFC               	addlw	-4
 42635  017E9E  6ED9               	movwf	fsr2l,c
 42636  017EA0  50E2               	movf	fsr1h,w,c
 42637  017EA2  6EDA               	movwf	fsr2h,c
 42638  017EA4  0EFF               	movlw	255
 42639  017EA6  22DA               	addwfc	fsr2h,f,c
 42640  017EA8  90D8               	bcf	status,0,c
 42641  017EAA  36DF               	rlcf	indf2,f,c
 42642  017EAC                     l10031:
 42643                           
 42644                           ;stkvar	_bexp @ sp[(-4)+1]
 42645  017EAC  0EFD               	movlw	-3
 42646  017EAE  50E3               	movf	plusw1,w,c
 42647  017EB0  B4D8               	btfsc	status,2,c
 42648  017EB2  D002               	goto	l10035
 42649                           
 42650                           ;stkvar	_bexp @ sp[(-4)+1]
 42651  017EB4  0EFD               	movlw	-3
 42652  017EB6  06E3               	decf	plusw1,f,c
 42653  017EB8                     l10035:
 42654                           
 42655                           ;stkvar	_b @ sp[(-4)+-4]
 42656  017EB8  0EFA               	movlw	-6
 42657  017EBA  AEE3               	btfss	plusw1,7,c
 42658  017EBC  D7CF               	goto	l10021
 42659  017EBE                     u7550:
 42660                           
 42661                           ;stkvar	_aexp @ sp[(-4)+2]
 42662  017EBE  0EFE               	movlw	-2
 42663  017EC0  6AE3               	clrf	plusw1,c
 42664                           
 42665                           ;stkvar	_grs @ sp[(-4)+0]
 42666  017EC2  0EFC               	movlw	-4
 42667  017EC4  AEE3               	btfss	plusw1,7,c
 42668  017EC6  D00F               	goto	l10049
 42669                           
 42670                           ;stkvar	_grs @ sp[(-4)+0]
 42671  017EC8  0EFC               	movlw	-4
 42672  017ECA  006F FF8C  F035    	movff	plusw1,btemp+11
 42673  017ED0  0E7F               	movlw	127
 42674  017ED2  1635               	andwf	(btemp+11)^0,f,c
 42675  017ED4  B4D8               	btfsc	status,2,c
 42676  017ED6  D004               	goto	l10045
 42677  017ED8                     u7570:
 42678                           
 42679                           ;stkvar	_aexp @ sp[(-4)+2]
 42680  017ED8  0EFE               	movlw	-2
 42681  017EDA  6AE3               	clrf	plusw1,c
 42682  017EDC  2AE3               	incf	plusw1,f,c
 42683  017EDE  D003               	goto	l10049
 42684  017EE0                     l10045:
 42685                           
 42686                           ;stkvar	_b @ sp[(-4)+-4]
 42687  017EE0  0EF8               	movlw	-8
 42688  017EE2  B0E3               	btfsc	plusw1,0,c
 42689  017EE4  D7F9               	goto	u7570
 42690  017EE6                     l10049:
 42691                           
 42692                           ;stkvar	_aexp @ sp[(-4)+2]
 42693  017EE6  0EFE               	movlw	-2
 42694  017EE8  50E3               	movf	plusw1,w,c
 42695  017EEA  B4D8               	btfsc	status,2,c
 42696  017EEC  D02B               	goto	l10061
 42697                           
 42698                           ;stkvar	_b @ sp[(-4)+-4]
 42699  017EEE  50E1               	movf	fsr1l,w,c
 42700  017EF0  0FF8               	addlw	-8
 42701  017EF2  6ED9               	movwf	fsr2l,c
 42702  017EF4  50E2               	movf	fsr1h,w,c
 42703  017EF6  6EDA               	movwf	fsr2h,c
 42704  017EF8  0EFF               	movlw	255
 42705  017EFA  22DA               	addwfc	fsr2h,f,c
 42706  017EFC  2ADE               	incf	postinc2,f,c
 42707  017EFE  0E00               	movlw	0
 42708  017F00  22DE               	addwfc	postinc2,f,c
 42709  017F02  22DE               	addwfc	postinc2,f,c
 42710  017F04  22DE               	addwfc	postinc2,f,c
 42711                           
 42712                           ;stkvar	_b @ sp[(-4)+-4]
 42713  017F06  0EFB               	movlw	-5
 42714  017F08  A0E3               	btfss	plusw1,0,c
 42715  017F0A  D01C               	goto	l10061
 42716  017F0C  0E01               	movlw	1
 42717  017F0E  6E35               	movwf	(btemp+11)^0,c
 42718                           
 42719                           ;stkvar	_b @ sp[(-4)+-4]
 42720  017F10  50E1               	movf	fsr1l,w,c
 42721  017F12  0FF8               	addlw	-8
 42722  017F14  6ED9               	movwf	fsr2l,c
 42723  017F16  50E2               	movf	fsr1h,w,c
 42724  017F18  6EDA               	movwf	fsr2h,c
 42725  017F1A  0EFF               	movlw	255
 42726  017F1C  22DA               	addwfc	fsr2h,f,c
 42727  017F1E  2835               	incf	(btemp+11)^0,w,c
 42728  017F20  52DE               	movf	postinc2,f,c
 42729  017F22  D008               	goto	u7610
 42730  017F24                     u7615:
 42731  017F24  52DE               	movf	postinc2,f,c
 42732  017F26  90D8               	bcf	status,0,c
 42733  017F28  BEDC               	btfsc	preinc2,7,c
 42734  017F2A  80D8               	bsf	status,0,c
 42735  017F2C  32DD               	rrcf	postdec2,f,c
 42736  017F2E  32DD               	rrcf	postdec2,f,c
 42737  017F30  32DD               	rrcf	postdec2,f,c
 42738  017F32  32DE               	rrcf	postinc2,f,c
 42739  017F34                     u7610:
 42740  017F34  2EE8               	decfsz	wreg,f,c
 42741  017F36  D7F6               	goto	u7615
 42742                           
 42743                           ;stkvar	_bexp @ sp[(-4)+1]
 42744  017F38  0EFD               	movlw	-3
 42745  017F3A  28E3               	incf	plusw1,w,c
 42746  017F3C  B4D8               	btfsc	status,2,c
 42747  017F3E  D002               	goto	l10061
 42748                           
 42749                           ;stkvar	_bexp @ sp[(-4)+1]
 42750  017F40  0EFD               	movlw	-3
 42751  017F42  2AE3               	incf	plusw1,f,c
 42752  017F44                     l10061:
 42753                           
 42754                           ;stkvar	_bexp @ sp[(-4)+1]
 42755  017F44  0EFD               	movlw	-3
 42756  017F46  28E3               	incf	plusw1,w,c
 42757  017F48  B4D8               	btfsc	status,2,c
 42758  017F4A  D004               	goto	u7640
 42759                           
 42760                           ;stkvar	_bexp @ sp[(-4)+1]
 42761  017F4C  0EFD               	movlw	-3
 42762  017F4E  50E3               	movf	plusw1,w,c
 42763  017F50  A4D8               	btfss	status,2,c
 42764  017F52  D00E               	goto	l10071
 42765  017F54                     u7640:
 42766                           
 42767                           ;stkvar	_b @ sp[(-4)+-4]
 42768  017F54  0EF8               	movlw	-8
 42769  017F56  6AE3               	clrf	plusw1,c
 42770  017F58  0EF9               	movlw	-7
 42771  017F5A  6AE3               	clrf	plusw1,c
 42772  017F5C  0EFA               	movlw	-6
 42773  017F5E  6AE3               	clrf	plusw1,c
 42774  017F60  0EFB               	movlw	-5
 42775  017F62  6AE3               	clrf	plusw1,c
 42776                           
 42777                           ;stkvar	_bexp @ sp[(-4)+1]
 42778  017F64  0EFD               	movlw	-3
 42779  017F66  50E3               	movf	plusw1,w,c
 42780  017F68  A4D8               	btfss	status,2,c
 42781  017F6A  D002               	goto	l10071
 42782                           
 42783                           ;stkvar	_signs @ sp[(-4)+3]
 42784  017F6C  0EFF               	movlw	-1
 42785  017F6E  6AE3               	clrf	plusw1,c
 42786  017F70                     l10071:
 42787                           
 42788                           ;stkvar	_bexp @ sp[(-4)+1]
 42789  017F70  0EFD               	movlw	-3
 42790  017F72  A0E3               	btfss	plusw1,0,c
 42791  017F74  D009               	goto	l10075
 42792                           
 42793                           ;stkvar	_b @ sp[(-4)+-4]
 42794  017F76  0EFA               	movlw	250
 42795  017F78  24E1               	addwf	fsr1l,w,c
 42796  017F7A  6ED9               	movwf	fsr2l,c
 42797  017F7C  0EFF               	movlw	255
 42798  017F7E  20E2               	addwfc	fsr1h,w,c
 42799  017F80  6EDA               	movwf	fsr2h,c
 42800  017F82  0E00               	movlw	0
 42801  017F84  8EDB               	bsf	plusw2,7,c
 42802  017F86  D008               	goto	l10077
 42803  017F88                     l10075:
 42804                           
 42805                           ;stkvar	_b @ sp[(-4)+-4]
 42806  017F88  0EFA               	movlw	250
 42807  017F8A  24E1               	addwf	fsr1l,w,c
 42808  017F8C  6ED9               	movwf	fsr2l,c
 42809  017F8E  0EFF               	movlw	255
 42810  017F90  20E2               	addwfc	fsr1h,w,c
 42811  017F92  6EDA               	movwf	fsr2h,c
 42812  017F94  0E7F               	movlw	127
 42813  017F96  16DF               	andwf	indf2,f,c
 42814  017F98                     l10077:
 42815                           
 42816                           ;stkvar	_b @ sp[(-4)+-4]
 42817  017F98  0EFB               	movlw	251
 42818  017F9A  24E1               	addwf	fsr1l,w,c
 42819  017F9C  6ED9               	movwf	fsr2l,c
 42820  017F9E  0EFF               	movlw	255
 42821  017FA0  20E2               	addwfc	fsr1h,w,c
 42822  017FA2  6EDA               	movwf	fsr2h,c
 42823                           
 42824                           ;stkvar	_bexp @ sp[(-4)+1]
 42825  017FA4  0EFD               	movlw	-3
 42826  017FA6  006F FF8C  F035    	movff	plusw1,btemp+11
 42827  017FAC  90D8               	bcf	status,0,c
 42828  017FAE  3035               	rrcf	(btemp+11)^0,w,c
 42829  017FB0  6EDF               	movwf	indf2,c
 42830                           
 42831                           ;stkvar	_signs @ sp[(-4)+3]
 42832  017FB2  0EFF               	movlw	-1
 42833  017FB4  AEE3               	btfss	plusw1,7,c
 42834  017FB6  D008               	goto	l10083
 42835                           
 42836                           ;stkvar	_b @ sp[(-4)+-4]
 42837  017FB8  0EFB               	movlw	251
 42838  017FBA  24E1               	addwf	fsr1l,w,c
 42839  017FBC  6ED9               	movwf	fsr2l,c
 42840  017FBE  0EFF               	movlw	255
 42841  017FC0  20E2               	addwfc	fsr1h,w,c
 42842  017FC2  6EDA               	movwf	fsr2h,c
 42843  017FC4  0E00               	movlw	0
 42844  017FC6  8EDB               	bsf	plusw2,7,c
 42845  017FC8                     l10083:
 42846                           
 42847                           ;stkvar	_b @ sp[(-4)+-4]
 42848  017FC8  0EF8               	movlw	-8
 42849  017FCA  006F FF8C  F02A    	movff	plusw1,btemp
 42850  017FD0  0EF9               	movlw	-7
 42851  017FD2  006F FF8C  F02B    	movff	plusw1,btemp+1
 42852  017FD8  0EFA               	movlw	-6
 42853  017FDA  006F FF8C  F02C    	movff	plusw1,btemp+2
 42854  017FE0  0EFB               	movlw	-5
 42855  017FE2  006F FF8C  F02D    	movff	plusw1,btemp+3
 42856  017FE8                     l3258:
 42857                           
 42858                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42859  017FE8  0EF4               	movlw	244
 42860  017FEA  26E1               	addwf	fsr1l,f,c
 42861  017FEC  0EFF               	movlw	255
 42862  017FEE  22E2               	addwfc	fsr1h,f,c
 42863  017FF0  0012               	return		;funcret
 42864  017FF2                     __end_of___fladd:
 42865                           	opt callstack 0
 42866                           
 42867 ;; *************** function ___flmul *****************
 42868 ;; Defined at:
 42869 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 42870 ;; Parameters:    Size  Location     Type
 42871 ;;  b               4  [STACK] unsigned char 
 42872 ;;  a               4  [STACK] unsigned char 
 42873 ;; Auto vars:     Size  Location     Type
 42874 ;;  prod            4  [STACK] struct .
 42875 ;;  grs             4  [STACK] unsigned long 
 42876 ;;  temp            2  [STACK] struct .
 42877 ;;  bexp            1  [STACK] unsigned char 
 42878 ;;  aexp            1  [STACK] unsigned char 
 42879 ;;  sign            1  [STACK] unsigned char 
 42880 ;; Return value:  Size  Location     Type
 42881 ;;                  4  [STACK] unsigned char 
 42882 ;; Registers used:
 42883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 42884 ;; Tracked objects:
 42885 ;;		On entry : 0/39
 42886 ;;		On exit  : 0/0
 42887 ;;		Unchanged: 0/0
 42888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42893 ;;Total ram usage:        0 bytes
 42894 ;; Hardware stack levels used:    1
 42895 ;; Hardware stack levels required when called:   15
 42896 ;; This function calls:
 42897 ;;		Nothing
 42898 ;; This function is called by:
 42899 ;;		_conv_raw_result
 42900 ;;		_lp_filter
 42901 ;;		_calc_model_data
 42902 ;;		_load_hist_data
 42903 ;;		_calc_bsoc
 42904 ;;		_init_bsoc
 42905 ;;		_efgtoa
 42906 ;; This function uses a reentrant model
 42907 ;;
 42908                           
 42909                           	psect	text154
 42910  01700C                     __ptext154:
 42911                           	opt callstack 0
 42912  01700C                     ___flmul:
 42913                           	opt callstack 0
 42914                           
 42915                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 42916  01700C  0E0D               	movlw	13
 42917  01700E  26E1               	addwf	fsr1l,f,c
 42918  017010  0E00               	movlw	0
 42919  017012  22E2               	addwfc	fsr1h,f,c
 42920                           
 42921                           ;stkvar	_b @ sp[(-13)+-4]
 42922                           
 42923                           ;incstack = 0
 42924 ;; hardware stack exceeded
 42925  017014  0EF2               	movlw	242
 42926  017016  24E1               	addwf	fsr1l,w,c
 42927  017018  6ED9               	movwf	fsr2l,c
 42928  01701A  0EFF               	movlw	255
 42929  01701C  20E2               	addwfc	fsr1h,w,c
 42930  01701E  6EDA               	movwf	fsr2h,c
 42931  017020  50DF               	movf	indf2,w,c
 42932  017022  6E35               	movwf	(btemp+11)^0,c
 42933  017024  0E80               	movlw	128
 42934  017026  1635               	andwf	(btemp+11)^0,f,c
 42935                           
 42936                           ;stkvar	_sign @ sp[(-13)+12]
 42937  017028  0EFF               	movlw	-1
 42938  01702A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42939                           
 42940                           ;stkvar	_b @ sp[(-13)+-4]
 42941  017030  0EF2               	movlw	242
 42942  017032  24E1               	addwf	fsr1l,w,c
 42943  017034  6ED9               	movwf	fsr2l,c
 42944  017036  0EFF               	movlw	255
 42945  017038  20E2               	addwfc	fsr1h,w,c
 42946  01703A  6EDA               	movwf	fsr2h,c
 42947  01703C  50DF               	movf	indf2,w,c
 42948  01703E  6E35               	movwf	(btemp+11)^0,c
 42949  017040  90D8               	bcf	status,0,c
 42950  017042  3435               	rlcf	(btemp+11)^0,w,c
 42951  017044  6E34               	movwf	(btemp+10)^0,c
 42952                           
 42953                           ;stkvar	_bexp @ sp[(-13)+10]
 42954  017046  0EFD               	movlw	-3
 42955  017048  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42956                           
 42957                           ;stkvar	_b @ sp[(-13)+-4]
 42958  01704E  0EF1               	movlw	241
 42959  017050  24E1               	addwf	fsr1l,w,c
 42960  017052  6ED9               	movwf	fsr2l,c
 42961  017054  0EFF               	movlw	255
 42962  017056  20E2               	addwfc	fsr1h,w,c
 42963  017058  6EDA               	movwf	fsr2h,c
 42964  01705A  AEDF               	btfss	indf2,7,c
 42965  01705C  D002               	goto	l10547
 42966                           
 42967                           ;stkvar	_bexp @ sp[(-13)+10]
 42968  01705E  0EFD               	movlw	-3
 42969  017060  80E3               	bsf	plusw1,0,c
 42970  017062                     l10547:
 42971                           
 42972                           ;stkvar	_bexp @ sp[(-13)+10]
 42973  017062  0EFD               	movlw	-3
 42974  017064  50E3               	movf	plusw1,w,c
 42975  017066  B4D8               	btfsc	status,2,c
 42976  017068  D01F               	goto	l10555
 42977                           
 42978                           ;stkvar	_bexp @ sp[(-13)+10]
 42979  01706A  0EFD               	movlw	-3
 42980  01706C  28E3               	incf	plusw1,w,c
 42981  01706E  A4D8               	btfss	status,2,c
 42982  017070  D018               	goto	l10553
 42983  017072  0E00               	movlw	0
 42984  017074  6E32               	movwf	(btemp+8)^0,c
 42985  017076  0E00               	movlw	0
 42986  017078  6E33               	movwf	(btemp+9)^0,c
 42987  01707A  0E00               	movlw	0
 42988  01707C  6E34               	movwf	(btemp+10)^0,c
 42989  01707E  0E00               	movlw	0
 42990  017080  6E35               	movwf	(btemp+11)^0,c
 42991                           
 42992                           ;stkvar	_b @ sp[(-13)+-4]
 42993  017082  0EEF               	movlw	-17
 42994  017084  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42995  01708A  0EF0               	movlw	-16
 42996  01708C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42997  017092  0EF1               	movlw	-15
 42998  017094  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42999  01709A  0EF2               	movlw	-14
 43000  01709C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43001  0170A2                     l10553:
 43002                           
 43003                           ;stkvar	_b @ sp[(-13)+-4]
 43004  0170A2  0EF1               	movlw	-15
 43005  0170A4  8EE3               	bsf	plusw1,7,c
 43006  0170A6  D018               	goto	l10557
 43007  0170A8                     l10555:
 43008  0170A8  0E00               	movlw	0
 43009  0170AA  6E32               	movwf	(btemp+8)^0,c
 43010  0170AC  0E00               	movlw	0
 43011  0170AE  6E33               	movwf	(btemp+9)^0,c
 43012  0170B0  0E00               	movlw	0
 43013  0170B2  6E34               	movwf	(btemp+10)^0,c
 43014  0170B4  0E00               	movlw	0
 43015  0170B6  6E35               	movwf	(btemp+11)^0,c
 43016                           
 43017                           ;stkvar	_b @ sp[(-13)+-4]
 43018  0170B8  0EEF               	movlw	-17
 43019  0170BA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43020  0170C0  0EF0               	movlw	-16
 43021  0170C2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43022  0170C8  0EF1               	movlw	-15
 43023  0170CA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43024  0170D0  0EF2               	movlw	-14
 43025  0170D2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43026  0170D8                     l10557:
 43027                           
 43028                           ;stkvar	_a @ sp[(-13)+-8]
 43029  0170D8  0EEE               	movlw	238
 43030  0170DA  24E1               	addwf	fsr1l,w,c
 43031  0170DC  6ED9               	movwf	fsr2l,c
 43032  0170DE  0EFF               	movlw	255
 43033  0170E0  20E2               	addwfc	fsr1h,w,c
 43034  0170E2  6EDA               	movwf	fsr2h,c
 43035  0170E4  50DF               	movf	indf2,w,c
 43036  0170E6  6E35               	movwf	(btemp+11)^0,c
 43037  0170E8  0E80               	movlw	128
 43038  0170EA  1635               	andwf	(btemp+11)^0,f,c
 43039                           
 43040                           ;stkvar	_sign @ sp[(-13)+12]
 43041  0170EC  50E1               	movf	fsr1l,w,c
 43042  0170EE  0FFF               	addlw	-1
 43043  0170F0  6ED9               	movwf	fsr2l,c
 43044  0170F2  50E2               	movf	fsr1h,w,c
 43045  0170F4  6EDA               	movwf	fsr2h,c
 43046  0170F6  0EFF               	movlw	255
 43047  0170F8  22DA               	addwfc	fsr2h,f,c
 43048  0170FA  5035               	movf	(btemp+11)^0,w,c
 43049  0170FC  1ADF               	xorwf	indf2,f,c
 43050                           
 43051                           ;stkvar	_a @ sp[(-13)+-8]
 43052  0170FE  0EEE               	movlw	238
 43053  017100  24E1               	addwf	fsr1l,w,c
 43054  017102  6ED9               	movwf	fsr2l,c
 43055  017104  0EFF               	movlw	255
 43056  017106  20E2               	addwfc	fsr1h,w,c
 43057  017108  6EDA               	movwf	fsr2h,c
 43058  01710A  50DF               	movf	indf2,w,c
 43059  01710C  6E35               	movwf	(btemp+11)^0,c
 43060  01710E  90D8               	bcf	status,0,c
 43061  017110  3435               	rlcf	(btemp+11)^0,w,c
 43062  017112  6E34               	movwf	(btemp+10)^0,c
 43063                           
 43064                           ;stkvar	_aexp @ sp[(-13)+11]
 43065  017114  0EFE               	movlw	-2
 43066  017116  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43067                           
 43068                           ;stkvar	_a @ sp[(-13)+-8]
 43069  01711C  0EED               	movlw	237
 43070  01711E  24E1               	addwf	fsr1l,w,c
 43071  017120  6ED9               	movwf	fsr2l,c
 43072  017122  0EFF               	movlw	255
 43073  017124  20E2               	addwfc	fsr1h,w,c
 43074  017126  6EDA               	movwf	fsr2h,c
 43075  017128  AEDF               	btfss	indf2,7,c
 43076  01712A  D002               	goto	l10565
 43077                           
 43078                           ;stkvar	_aexp @ sp[(-13)+11]
 43079  01712C  0EFE               	movlw	-2
 43080  01712E  80E3               	bsf	plusw1,0,c
 43081  017130                     l10565:
 43082                           
 43083                           ;stkvar	_aexp @ sp[(-13)+11]
 43084  017130  0EFE               	movlw	-2
 43085  017132  50E3               	movf	plusw1,w,c
 43086  017134  B4D8               	btfsc	status,2,c
 43087  017136  D01F               	goto	l10573
 43088                           
 43089                           ;stkvar	_aexp @ sp[(-13)+11]
 43090  017138  0EFE               	movlw	-2
 43091  01713A  28E3               	incf	plusw1,w,c
 43092  01713C  A4D8               	btfss	status,2,c
 43093  01713E  D018               	goto	l10571
 43094  017140  0E00               	movlw	0
 43095  017142  6E32               	movwf	(btemp+8)^0,c
 43096  017144  0E00               	movlw	0
 43097  017146  6E33               	movwf	(btemp+9)^0,c
 43098  017148  0E00               	movlw	0
 43099  01714A  6E34               	movwf	(btemp+10)^0,c
 43100  01714C  0E00               	movlw	0
 43101  01714E  6E35               	movwf	(btemp+11)^0,c
 43102                           
 43103                           ;stkvar	_a @ sp[(-13)+-8]
 43104  017150  0EEB               	movlw	-21
 43105  017152  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43106  017158  0EEC               	movlw	-20
 43107  01715A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43108  017160  0EED               	movlw	-19
 43109  017162  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43110  017168  0EEE               	movlw	-18
 43111  01716A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43112  017170                     l10571:
 43113                           
 43114                           ;stkvar	_a @ sp[(-13)+-8]
 43115  017170  0EED               	movlw	-19
 43116  017172  8EE3               	bsf	plusw1,7,c
 43117  017174  D018               	goto	l10575
 43118  017176                     l10573:
 43119  017176  0E00               	movlw	0
 43120  017178  6E32               	movwf	(btemp+8)^0,c
 43121  01717A  0E00               	movlw	0
 43122  01717C  6E33               	movwf	(btemp+9)^0,c
 43123  01717E  0E00               	movlw	0
 43124  017180  6E34               	movwf	(btemp+10)^0,c
 43125  017182  0E00               	movlw	0
 43126  017184  6E35               	movwf	(btemp+11)^0,c
 43127                           
 43128                           ;stkvar	_a @ sp[(-13)+-8]
 43129  017186  0EEB               	movlw	-21
 43130  017188  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43131  01718E  0EEC               	movlw	-20
 43132  017190  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43133  017196  0EED               	movlw	-19
 43134  017198  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43135  01719E  0EEE               	movlw	-18
 43136  0171A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43137  0171A6                     l10575:
 43138                           
 43139                           ;stkvar	_aexp @ sp[(-13)+11]
 43140  0171A6  0EFE               	movlw	-2
 43141  0171A8  50E3               	movf	plusw1,w,c
 43142  0171AA  B4D8               	btfsc	status,2,c
 43143  0171AC  D004               	goto	u8700
 43144                           
 43145                           ;stkvar	_bexp @ sp[(-13)+10]
 43146  0171AE  0EFD               	movlw	-3
 43147  0171B0  50E3               	movf	plusw1,w,c
 43148  0171B2  A4D8               	btfss	status,2,c
 43149  0171B4  D009               	goto	l10583
 43150  0171B6                     u8700:
 43151  0171B6  0E00               	movlw	0
 43152  0171B8  6E2A               	movwf	btemp^0,c
 43153  0171BA  0E00               	movlw	0
 43154  0171BC  6E2B               	movwf	(btemp+1)^0,c
 43155  0171BE  0E00               	movlw	0
 43156  0171C0  6E2C               	movwf	(btemp+2)^0,c
 43157  0171C2  0E00               	movlw	0
 43158  0171C4  6E2D               	movwf	(btemp+3)^0,c
 43159  0171C6  D332               	goto	l3339
 43160  0171C8                     l10583:
 43161                           
 43162                           ;stkvar	_b @ sp[(-13)+-4]
 43163  0171C8  0EEF               	movlw	-17
 43164  0171CA  006F FF8C  F035    	movff	plusw1,btemp+11
 43165                           
 43166                           ;stkvar	_a @ sp[(-13)+-8]
 43167  0171D0  0EED               	movlw	237
 43168  0171D2  24E1               	addwf	fsr1l,w,c
 43169  0171D4  6ED9               	movwf	fsr2l,c
 43170  0171D6  0EFF               	movlw	255
 43171  0171D8  20E2               	addwfc	fsr1h,w,c
 43172  0171DA  6EDA               	movwf	fsr2h,c
 43173  0171DC  50DF               	movf	indf2,w,c
 43174  0171DE  0235               	mulwf	(btemp+11)^0,c
 43175                           
 43176                           ;stkvar	_temp @ sp[(-13)+8]
 43177  0171E0  0EFB               	movlw	-5
 43178  0171E2  006F FFCF FFE3     	movff	prodl,plusw1
 43179  0171E8  0EFC               	movlw	-4
 43180  0171EA  006F FFD3 FFE3     	movff	prodh,plusw1
 43181                           
 43182                           ;stkvar	_temp @ sp[(-13)+8]
 43183  0171F0  0EFB               	movlw	-5
 43184  0171F2  006F FF8C  F035    	movff	plusw1,btemp+11
 43185  0171F8  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43186  0171FE  6A2F               	clrf	(btemp+5)^0,c
 43187  017200  6A30               	clrf	(btemp+6)^0,c
 43188  017202  6A31               	clrf	(btemp+7)^0,c
 43189                           
 43190                           ;stkvar	_grs @ sp[(-13)+4]
 43191  017204  0EF7               	movlw	-9
 43192  017206  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43193  01720C  0EF8               	movlw	-8
 43194  01720E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43195  017214  0EF9               	movlw	-7
 43196  017216  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43197  01721C  0EFA               	movlw	-6
 43198  01721E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43199                           
 43200                           ;stkvar	_temp @ sp[(-13)+8]
 43201  017224  0EFC               	movlw	252
 43202  017226  24E1               	addwf	fsr1l,w,c
 43203  017228  6ED9               	movwf	fsr2l,c
 43204  01722A  0EFF               	movlw	255
 43205  01722C  20E2               	addwfc	fsr1h,w,c
 43206  01722E  6EDA               	movwf	fsr2h,c
 43207  017230  50DF               	movf	indf2,w,c
 43208  017232  6E35               	movwf	(btemp+11)^0,c
 43209  017234  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43210  01723A  6A2F               	clrf	(btemp+5)^0,c
 43211  01723C  6A30               	clrf	(btemp+6)^0,c
 43212  01723E  6A31               	clrf	(btemp+7)^0,c
 43213                           
 43214                           ;stkvar	_prod @ sp[(-13)+0]
 43215  017240  0EF3               	movlw	-13
 43216  017242  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43217  017248  0EF4               	movlw	-12
 43218  01724A  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43219  017250  0EF5               	movlw	-11
 43220  017252  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43221  017258  0EF6               	movlw	-10
 43222  01725A  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43223                           
 43224                           ;stkvar	_b @ sp[(-13)+-4]
 43225  017260  0EF0               	movlw	240
 43226  017262  24E1               	addwf	fsr1l,w,c
 43227  017264  6ED9               	movwf	fsr2l,c
 43228  017266  0EFF               	movlw	255
 43229  017268  20E2               	addwfc	fsr1h,w,c
 43230  01726A  6EDA               	movwf	fsr2h,c
 43231  01726C  50DF               	movf	indf2,w,c
 43232  01726E  6E35               	movwf	(btemp+11)^0,c
 43233                           
 43234                           ;stkvar	_a @ sp[(-13)+-8]
 43235  017270  0EEC               	movlw	236
 43236  017272  24E1               	addwf	fsr1l,w,c
 43237  017274  6ED9               	movwf	fsr2l,c
 43238  017276  0EFF               	movlw	255
 43239  017278  20E2               	addwfc	fsr1h,w,c
 43240  01727A  6EDA               	movwf	fsr2h,c
 43241  01727C  50DF               	movf	indf2,w,c
 43242  01727E  0235               	mulwf	(btemp+11)^0,c
 43243                           
 43244                           ;stkvar	_temp @ sp[(-13)+8]
 43245  017280  0EFB               	movlw	-5
 43246  017282  006F FFCF FFE3     	movff	prodl,plusw1
 43247  017288  0EFC               	movlw	-4
 43248  01728A  006F FFD3 FFE3     	movff	prodh,plusw1
 43249                           
 43250                           ;stkvar	_grs @ sp[(-13)+4]
 43251  017290  50E1               	movf	fsr1l,w,c
 43252  017292  0FF7               	addlw	-9
 43253  017294  6ED9               	movwf	fsr2l,c
 43254  017296  50E2               	movf	fsr1h,w,c
 43255  017298  6EDA               	movwf	fsr2h,c
 43256  01729A  0EFF               	movlw	255
 43257  01729C  22DA               	addwfc	fsr2h,f,c
 43258                           
 43259                           ;stkvar	_temp @ sp[(-13)+8]
 43260  01729E  0EFB               	movlw	-5
 43261  0172A0  50E3               	movf	plusw1,w,c
 43262  0172A2  26DE               	addwf	postinc2,f,c
 43263  0172A4  0E00               	movlw	0
 43264  0172A6  22DE               	addwfc	postinc2,f,c
 43265  0172A8  22DE               	addwfc	postinc2,f,c
 43266  0172AA  22DE               	addwfc	postinc2,f,c
 43267                           
 43268                           ;stkvar	_prod @ sp[(-13)+0]
 43269  0172AC  50E1               	movf	fsr1l,w,c
 43270  0172AE  0FF3               	addlw	-13
 43271  0172B0  6ED9               	movwf	fsr2l,c
 43272  0172B2  50E2               	movf	fsr1h,w,c
 43273  0172B4  6EDA               	movwf	fsr2h,c
 43274  0172B6  0EFF               	movlw	255
 43275  0172B8  22DA               	addwfc	fsr2h,f,c
 43276                           
 43277                           ;stkvar	_temp @ sp[(-13)+8]
 43278  0172BA  0EFC               	movlw	252
 43279  0172BC  24E1               	addwf	fsr1l,w,c
 43280  0172BE  6EE9               	movwf	fsr0l,c
 43281  0172C0  0EFF               	movlw	255
 43282  0172C2  20E2               	addwfc	fsr1h,w,c
 43283  0172C4  6EEA               	movwf	fsr0h,c
 43284  0172C6  50EF               	movf	indf0,w,c
 43285  0172C8  26DE               	addwf	postinc2,f,c
 43286  0172CA  0E00               	movlw	0
 43287  0172CC  22DE               	addwfc	postinc2,f,c
 43288  0172CE  22DE               	addwfc	postinc2,f,c
 43289  0172D0  22DE               	addwfc	postinc2,f,c
 43290                           
 43291                           ;stkvar	_b @ sp[(-13)+-4]
 43292  0172D2  0EF1               	movlw	241
 43293  0172D4  24E1               	addwf	fsr1l,w,c
 43294  0172D6  6ED9               	movwf	fsr2l,c
 43295  0172D8  0EFF               	movlw	255
 43296  0172DA  20E2               	addwfc	fsr1h,w,c
 43297  0172DC  6EDA               	movwf	fsr2h,c
 43298  0172DE  50DF               	movf	indf2,w,c
 43299  0172E0  6E35               	movwf	(btemp+11)^0,c
 43300                           
 43301                           ;stkvar	_a @ sp[(-13)+-8]
 43302  0172E2  0EEB               	movlw	-21
 43303  0172E4  50E3               	movf	plusw1,w,c
 43304  0172E6  0235               	mulwf	(btemp+11)^0,c
 43305                           
 43306                           ;stkvar	_temp @ sp[(-13)+8]
 43307  0172E8  0EFB               	movlw	-5
 43308  0172EA  006F FFCF FFE3     	movff	prodl,plusw1
 43309  0172F0  0EFC               	movlw	-4
 43310  0172F2  006F FFD3 FFE3     	movff	prodh,plusw1
 43311                           
 43312                           ;stkvar	_grs @ sp[(-13)+4]
 43313  0172F8  50E1               	movf	fsr1l,w,c
 43314  0172FA  0FF7               	addlw	-9
 43315  0172FC  6ED9               	movwf	fsr2l,c
 43316  0172FE  50E2               	movf	fsr1h,w,c
 43317  017300  6EDA               	movwf	fsr2h,c
 43318  017302  0EFF               	movlw	255
 43319  017304  22DA               	addwfc	fsr2h,f,c
 43320                           
 43321                           ;stkvar	_temp @ sp[(-13)+8]
 43322  017306  0EFB               	movlw	-5
 43323  017308  50E3               	movf	plusw1,w,c
 43324  01730A  26DE               	addwf	postinc2,f,c
 43325  01730C  0E00               	movlw	0
 43326  01730E  22DE               	addwfc	postinc2,f,c
 43327  017310  22DE               	addwfc	postinc2,f,c
 43328  017312  22DE               	addwfc	postinc2,f,c
 43329                           
 43330                           ;stkvar	_prod @ sp[(-13)+0]
 43331  017314  50E1               	movf	fsr1l,w,c
 43332  017316  0FF3               	addlw	-13
 43333  017318  6ED9               	movwf	fsr2l,c
 43334  01731A  50E2               	movf	fsr1h,w,c
 43335  01731C  6EDA               	movwf	fsr2h,c
 43336  01731E  0EFF               	movlw	255
 43337  017320  22DA               	addwfc	fsr2h,f,c
 43338                           
 43339                           ;stkvar	_temp @ sp[(-13)+8]
 43340  017322  0EFC               	movlw	252
 43341  017324  24E1               	addwf	fsr1l,w,c
 43342  017326  6EE9               	movwf	fsr0l,c
 43343  017328  0EFF               	movlw	255
 43344  01732A  20E2               	addwfc	fsr1h,w,c
 43345  01732C  6EEA               	movwf	fsr0h,c
 43346  01732E  50EF               	movf	indf0,w,c
 43347  017330  26DE               	addwf	postinc2,f,c
 43348  017332  0E00               	movlw	0
 43349  017334  22DE               	addwfc	postinc2,f,c
 43350  017336  22DE               	addwfc	postinc2,f,c
 43351  017338  22DE               	addwfc	postinc2,f,c
 43352                           
 43353                           ;stkvar	_grs @ sp[(-13)+4]
 43354  01733A  50E1               	movf	fsr1l,w,c
 43355  01733C  0FF7               	addlw	-9
 43356  01733E  6ED9               	movwf	fsr2l,c
 43357  017340  50E2               	movf	fsr1h,w,c
 43358  017342  6EDA               	movwf	fsr2h,c
 43359  017344  0EFF               	movlw	255
 43360  017346  22DA               	addwfc	fsr2h,f,c
 43361  017348  0E08               	movlw	8
 43362  01734A                     u8715:
 43363  01734A  90D8               	bcf	status,0,c
 43364  01734C  36DE               	rlcf	postinc2,f,c
 43365  01734E  36DE               	rlcf	postinc2,f,c
 43366  017350  36DE               	rlcf	postinc2,f,c
 43367  017352  36DD               	rlcf	postdec2,f,c
 43368  017354  52DD               	movf	postdec2,f,c
 43369  017356  52DD               	movf	postdec2,f,c
 43370  017358  2EE8               	decfsz	wreg,f,c
 43371  01735A  D7F7               	goto	u8715
 43372                           
 43373                           ;stkvar	_b @ sp[(-13)+-4]
 43374  01735C  0EF0               	movlw	240
 43375  01735E  24E1               	addwf	fsr1l,w,c
 43376  017360  6ED9               	movwf	fsr2l,c
 43377  017362  0EFF               	movlw	255
 43378  017364  20E2               	addwfc	fsr1h,w,c
 43379  017366  6EDA               	movwf	fsr2h,c
 43380  017368  50DF               	movf	indf2,w,c
 43381  01736A  6E35               	movwf	(btemp+11)^0,c
 43382                           
 43383                           ;stkvar	_a @ sp[(-13)+-8]
 43384  01736C  0EEB               	movlw	-21
 43385  01736E  50E3               	movf	plusw1,w,c
 43386  017370  0235               	mulwf	(btemp+11)^0,c
 43387                           
 43388                           ;stkvar	_temp @ sp[(-13)+8]
 43389  017372  0EFB               	movlw	-5
 43390  017374  006F FFCF FFE3     	movff	prodl,plusw1
 43391  01737A  0EFC               	movlw	-4
 43392  01737C  006F FFD3 FFE3     	movff	prodh,plusw1
 43393                           
 43394                           ;stkvar	_temp @ sp[(-13)+8]
 43395  017382  0EFB               	movlw	-5
 43396  017384  006F FF8C  F034    	movff	plusw1,btemp+10
 43397  01738A  0EFC               	movlw	-4
 43398  01738C  006F FF8C  F035    	movff	plusw1,btemp+11
 43399                           
 43400                           ;stkvar	_grs @ sp[(-13)+4]
 43401  017392  50E1               	movf	fsr1l,w,c
 43402  017394  0FF7               	addlw	-9
 43403  017396  6ED9               	movwf	fsr2l,c
 43404  017398  50E2               	movf	fsr1h,w,c
 43405  01739A  6EDA               	movwf	fsr2h,c
 43406  01739C  0EFF               	movlw	255
 43407  01739E  22DA               	addwfc	fsr2h,f,c
 43408  0173A0  5034               	movf	(btemp+10)^0,w,c
 43409  0173A2  26DE               	addwf	postinc2,f,c
 43410  0173A4  5035               	movf	(btemp+11)^0,w,c
 43411  0173A6  22DE               	addwfc	postinc2,f,c
 43412  0173A8  0E00               	movlw	0
 43413  0173AA  22DE               	addwfc	postinc2,f,c
 43414  0173AC  22DE               	addwfc	postinc2,f,c
 43415                           
 43416                           ;stkvar	_b @ sp[(-13)+-4]
 43417  0173AE  0EEF               	movlw	-17
 43418  0173B0  006F FF8C  F035    	movff	plusw1,btemp+11
 43419                           
 43420                           ;stkvar	_a @ sp[(-13)+-8]
 43421  0173B6  0EEC               	movlw	236
 43422  0173B8  24E1               	addwf	fsr1l,w,c
 43423  0173BA  6ED9               	movwf	fsr2l,c
 43424  0173BC  0EFF               	movlw	255
 43425  0173BE  20E2               	addwfc	fsr1h,w,c
 43426  0173C0  6EDA               	movwf	fsr2h,c
 43427  0173C2  50DF               	movf	indf2,w,c
 43428  0173C4  0235               	mulwf	(btemp+11)^0,c
 43429                           
 43430                           ;stkvar	_temp @ sp[(-13)+8]
 43431  0173C6  0EFB               	movlw	-5
 43432  0173C8  006F FFCF FFE3     	movff	prodl,plusw1
 43433  0173CE  0EFC               	movlw	-4
 43434  0173D0  006F FFD3 FFE3     	movff	prodh,plusw1
 43435                           
 43436                           ;stkvar	_temp @ sp[(-13)+8]
 43437  0173D6  0EFB               	movlw	-5
 43438  0173D8  006F FF8C  F034    	movff	plusw1,btemp+10
 43439  0173DE  0EFC               	movlw	-4
 43440  0173E0  006F FF8C  F035    	movff	plusw1,btemp+11
 43441                           
 43442                           ;stkvar	_grs @ sp[(-13)+4]
 43443  0173E6  50E1               	movf	fsr1l,w,c
 43444  0173E8  0FF7               	addlw	-9
 43445  0173EA  6ED9               	movwf	fsr2l,c
 43446  0173EC  50E2               	movf	fsr1h,w,c
 43447  0173EE  6EDA               	movwf	fsr2h,c
 43448  0173F0  0EFF               	movlw	255
 43449  0173F2  22DA               	addwfc	fsr2h,f,c
 43450  0173F4  5034               	movf	(btemp+10)^0,w,c
 43451  0173F6  26DE               	addwf	postinc2,f,c
 43452  0173F8  5035               	movf	(btemp+11)^0,w,c
 43453  0173FA  22DE               	addwfc	postinc2,f,c
 43454  0173FC  0E00               	movlw	0
 43455  0173FE  22DE               	addwfc	postinc2,f,c
 43456  017400  22DE               	addwfc	postinc2,f,c
 43457                           
 43458                           ;stkvar	_grs @ sp[(-13)+4]
 43459  017402  50E1               	movf	fsr1l,w,c
 43460  017404  0FF7               	addlw	-9
 43461  017406  6ED9               	movwf	fsr2l,c
 43462  017408  50E2               	movf	fsr1h,w,c
 43463  01740A  6EDA               	movwf	fsr2h,c
 43464  01740C  0EFF               	movlw	255
 43465  01740E  22DA               	addwfc	fsr2h,f,c
 43466  017410  0E08               	movlw	8
 43467  017412                     u8725:
 43468  017412  90D8               	bcf	status,0,c
 43469  017414  36DE               	rlcf	postinc2,f,c
 43470  017416  36DE               	rlcf	postinc2,f,c
 43471  017418  36DE               	rlcf	postinc2,f,c
 43472  01741A  36DD               	rlcf	postdec2,f,c
 43473  01741C  52DD               	movf	postdec2,f,c
 43474  01741E  52DD               	movf	postdec2,f,c
 43475  017420  2EE8               	decfsz	wreg,f,c
 43476  017422  D7F7               	goto	u8725
 43477                           
 43478                           ;stkvar	_b @ sp[(-13)+-4]
 43479  017424  0EEF               	movlw	-17
 43480  017426  006F FF8C  F035    	movff	plusw1,btemp+11
 43481                           
 43482                           ;stkvar	_a @ sp[(-13)+-8]
 43483  01742C  0EEB               	movlw	-21
 43484  01742E  50E3               	movf	plusw1,w,c
 43485  017430  0235               	mulwf	(btemp+11)^0,c
 43486                           
 43487                           ;stkvar	_temp @ sp[(-13)+8]
 43488  017432  0EFB               	movlw	-5
 43489  017434  006F FFCF FFE3     	movff	prodl,plusw1
 43490  01743A  0EFC               	movlw	-4
 43491  01743C  006F FFD3 FFE3     	movff	prodh,plusw1
 43492                           
 43493                           ;stkvar	_temp @ sp[(-13)+8]
 43494  017442  0EFB               	movlw	-5
 43495  017444  006F FF8C  F034    	movff	plusw1,btemp+10
 43496  01744A  0EFC               	movlw	-4
 43497  01744C  006F FF8C  F035    	movff	plusw1,btemp+11
 43498                           
 43499                           ;stkvar	_grs @ sp[(-13)+4]
 43500  017452  50E1               	movf	fsr1l,w,c
 43501  017454  0FF7               	addlw	-9
 43502  017456  6ED9               	movwf	fsr2l,c
 43503  017458  50E2               	movf	fsr1h,w,c
 43504  01745A  6EDA               	movwf	fsr2h,c
 43505  01745C  0EFF               	movlw	255
 43506  01745E  22DA               	addwfc	fsr2h,f,c
 43507  017460  5034               	movf	(btemp+10)^0,w,c
 43508  017462  26DE               	addwf	postinc2,f,c
 43509  017464  5035               	movf	(btemp+11)^0,w,c
 43510  017466  22DE               	addwfc	postinc2,f,c
 43511  017468  0E00               	movlw	0
 43512  01746A  22DE               	addwfc	postinc2,f,c
 43513  01746C  22DE               	addwfc	postinc2,f,c
 43514                           
 43515                           ;stkvar	_b @ sp[(-13)+-4]
 43516  01746E  0EF0               	movlw	240
 43517  017470  24E1               	addwf	fsr1l,w,c
 43518  017472  6ED9               	movwf	fsr2l,c
 43519  017474  0EFF               	movlw	255
 43520  017476  20E2               	addwfc	fsr1h,w,c
 43521  017478  6EDA               	movwf	fsr2h,c
 43522  01747A  50DF               	movf	indf2,w,c
 43523  01747C  6E35               	movwf	(btemp+11)^0,c
 43524                           
 43525                           ;stkvar	_a @ sp[(-13)+-8]
 43526  01747E  0EED               	movlw	237
 43527  017480  24E1               	addwf	fsr1l,w,c
 43528  017482  6ED9               	movwf	fsr2l,c
 43529  017484  0EFF               	movlw	255
 43530  017486  20E2               	addwfc	fsr1h,w,c
 43531  017488  6EDA               	movwf	fsr2h,c
 43532  01748A  50DF               	movf	indf2,w,c
 43533  01748C  0235               	mulwf	(btemp+11)^0,c
 43534                           
 43535                           ;stkvar	_temp @ sp[(-13)+8]
 43536  01748E  0EFB               	movlw	-5
 43537  017490  006F FFCF FFE3     	movff	prodl,plusw1
 43538  017496  0EFC               	movlw	-4
 43539  017498  006F FFD3 FFE3     	movff	prodh,plusw1
 43540                           
 43541                           ;stkvar	_temp @ sp[(-13)+8]
 43542  01749E  0EFB               	movlw	-5
 43543  0174A0  006F FF8C  F034    	movff	plusw1,btemp+10
 43544  0174A6  0EFC               	movlw	-4
 43545  0174A8  006F FF8C  F035    	movff	plusw1,btemp+11
 43546                           
 43547                           ;stkvar	_prod @ sp[(-13)+0]
 43548  0174AE  50E1               	movf	fsr1l,w,c
 43549  0174B0  0FF3               	addlw	-13
 43550  0174B2  6ED9               	movwf	fsr2l,c
 43551  0174B4  50E2               	movf	fsr1h,w,c
 43552  0174B6  6EDA               	movwf	fsr2h,c
 43553  0174B8  0EFF               	movlw	255
 43554  0174BA  22DA               	addwfc	fsr2h,f,c
 43555  0174BC  5034               	movf	(btemp+10)^0,w,c
 43556  0174BE  26DE               	addwf	postinc2,f,c
 43557  0174C0  5035               	movf	(btemp+11)^0,w,c
 43558  0174C2  22DE               	addwfc	postinc2,f,c
 43559  0174C4  0E00               	movlw	0
 43560  0174C6  22DE               	addwfc	postinc2,f,c
 43561  0174C8  22DE               	addwfc	postinc2,f,c
 43562                           
 43563                           ;stkvar	_b @ sp[(-13)+-4]
 43564  0174CA  0EF1               	movlw	241
 43565  0174CC  24E1               	addwf	fsr1l,w,c
 43566  0174CE  6ED9               	movwf	fsr2l,c
 43567  0174D0  0EFF               	movlw	255
 43568  0174D2  20E2               	addwfc	fsr1h,w,c
 43569  0174D4  6EDA               	movwf	fsr2h,c
 43570  0174D6  50DF               	movf	indf2,w,c
 43571  0174D8  6E35               	movwf	(btemp+11)^0,c
 43572                           
 43573                           ;stkvar	_a @ sp[(-13)+-8]
 43574  0174DA  0EEC               	movlw	236
 43575  0174DC  24E1               	addwf	fsr1l,w,c
 43576  0174DE  6ED9               	movwf	fsr2l,c
 43577  0174E0  0EFF               	movlw	255
 43578  0174E2  20E2               	addwfc	fsr1h,w,c
 43579  0174E4  6EDA               	movwf	fsr2h,c
 43580  0174E6  50DF               	movf	indf2,w,c
 43581  0174E8  0235               	mulwf	(btemp+11)^0,c
 43582                           
 43583                           ;stkvar	_temp @ sp[(-13)+8]
 43584  0174EA  0EFB               	movlw	-5
 43585  0174EC  006F FFCF FFE3     	movff	prodl,plusw1
 43586  0174F2  0EFC               	movlw	-4
 43587  0174F4  006F FFD3 FFE3     	movff	prodh,plusw1
 43588                           
 43589                           ;stkvar	_temp @ sp[(-13)+8]
 43590  0174FA  0EFB               	movlw	-5
 43591  0174FC  006F FF8C  F034    	movff	plusw1,btemp+10
 43592  017502  0EFC               	movlw	-4
 43593  017504  006F FF8C  F035    	movff	plusw1,btemp+11
 43594                           
 43595                           ;stkvar	_prod @ sp[(-13)+0]
 43596  01750A  50E1               	movf	fsr1l,w,c
 43597  01750C  0FF3               	addlw	-13
 43598  01750E  6ED9               	movwf	fsr2l,c
 43599  017510  50E2               	movf	fsr1h,w,c
 43600  017512  6EDA               	movwf	fsr2h,c
 43601  017514  0EFF               	movlw	255
 43602  017516  22DA               	addwfc	fsr2h,f,c
 43603  017518  5034               	movf	(btemp+10)^0,w,c
 43604  01751A  26DE               	addwf	postinc2,f,c
 43605  01751C  5035               	movf	(btemp+11)^0,w,c
 43606  01751E  22DE               	addwfc	postinc2,f,c
 43607  017520  0E00               	movlw	0
 43608  017522  22DE               	addwfc	postinc2,f,c
 43609  017524  22DE               	addwfc	postinc2,f,c
 43610                           
 43611                           ;stkvar	_b @ sp[(-13)+-4]
 43612  017526  0EF1               	movlw	241
 43613  017528  24E1               	addwf	fsr1l,w,c
 43614  01752A  6ED9               	movwf	fsr2l,c
 43615  01752C  0EFF               	movlw	255
 43616  01752E  20E2               	addwfc	fsr1h,w,c
 43617  017530  6EDA               	movwf	fsr2h,c
 43618  017532  50DF               	movf	indf2,w,c
 43619  017534  6E35               	movwf	(btemp+11)^0,c
 43620                           
 43621                           ;stkvar	_a @ sp[(-13)+-8]
 43622  017536  0EED               	movlw	237
 43623  017538  24E1               	addwf	fsr1l,w,c
 43624  01753A  6ED9               	movwf	fsr2l,c
 43625  01753C  0EFF               	movlw	255
 43626  01753E  20E2               	addwfc	fsr1h,w,c
 43627  017540  6EDA               	movwf	fsr2h,c
 43628  017542  50DF               	movf	indf2,w,c
 43629  017544  0235               	mulwf	(btemp+11)^0,c
 43630                           
 43631                           ;stkvar	_temp @ sp[(-13)+8]
 43632  017546  0EFB               	movlw	-5
 43633  017548  006F FFCF FFE3     	movff	prodl,plusw1
 43634  01754E  0EFC               	movlw	-4
 43635  017550  006F FFD3 FFE3     	movff	prodh,plusw1
 43636                           
 43637                           ;stkvar	_temp @ sp[(-13)+8]
 43638  017556  0EFB               	movlw	-5
 43639  017558  006F FF8C  F034    	movff	plusw1,btemp+10
 43640  01755E  0EFC               	movlw	-4
 43641  017560  006F FF8C  F035    	movff	plusw1,btemp+11
 43642  017566  5034               	movf	(btemp+10)^0,w,c
 43643  017568  6E2E               	movwf	(btemp+4)^0,c
 43644  01756A  5035               	movf	(btemp+11)^0,w,c
 43645  01756C  6E2F               	movwf	(btemp+5)^0,c
 43646  01756E  6A30               	clrf	(btemp+6)^0,c
 43647  017570  6A31               	clrf	(btemp+7)^0,c
 43648  017572  0060  F0C0  F031   	movff	btemp+6,btemp+7
 43649  017578  0060  F0BC  F030   	movff	btemp+5,btemp+6
 43650  01757E  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 43651  017584  6A2E               	clrf	(btemp+4)^0,c
 43652                           
 43653                           ;stkvar	_prod @ sp[(-13)+0]
 43654  017586  50E1               	movf	fsr1l,w,c
 43655  017588  0FF3               	addlw	-13
 43656  01758A  6ED9               	movwf	fsr2l,c
 43657  01758C  50E2               	movf	fsr1h,w,c
 43658  01758E  6EDA               	movwf	fsr2h,c
 43659  017590  0EFF               	movlw	255
 43660  017592  22DA               	addwfc	fsr2h,f,c
 43661  017594  502E               	movf	(btemp+4)^0,w,c
 43662  017596  26DE               	addwf	postinc2,f,c
 43663  017598  502F               	movf	(btemp+5)^0,w,c
 43664  01759A  22DE               	addwfc	postinc2,f,c
 43665  01759C  5030               	movf	(btemp+6)^0,w,c
 43666  01759E  22DE               	addwfc	postinc2,f,c
 43667  0175A0  5031               	movf	(btemp+7)^0,w,c
 43668  0175A2  22DE               	addwfc	postinc2,f,c
 43669                           
 43670                           ;stkvar	_prod @ sp[(-13)+0]
 43671  0175A4  50E1               	movf	fsr1l,w,c
 43672  0175A6  0FF3               	addlw	-13
 43673  0175A8  6ED9               	movwf	fsr2l,c
 43674  0175AA  50E2               	movf	fsr1h,w,c
 43675  0175AC  6EDA               	movwf	fsr2h,c
 43676  0175AE  0EFF               	movlw	255
 43677  0175B0  22DA               	addwfc	fsr2h,f,c
 43678                           
 43679                           ;stkvar	_grs @ sp[(-13)+4]
 43680  0175B2  0EFA               	movlw	250
 43681  0175B4  24E1               	addwf	fsr1l,w,c
 43682  0175B6  6EE9               	movwf	fsr0l,c
 43683  0175B8  0EFF               	movlw	255
 43684  0175BA  20E2               	addwfc	fsr1h,w,c
 43685  0175BC  6EEA               	movwf	fsr0h,c
 43686  0175BE  50EF               	movf	indf0,w,c
 43687  0175C0  26DE               	addwf	postinc2,f,c
 43688  0175C2  0E00               	movlw	0
 43689  0175C4  22DE               	addwfc	postinc2,f,c
 43690  0175C6  22DE               	addwfc	postinc2,f,c
 43691  0175C8  22DE               	addwfc	postinc2,f,c
 43692                           
 43693                           ;stkvar	_grs @ sp[(-13)+4]
 43694  0175CA  50E1               	movf	fsr1l,w,c
 43695  0175CC  0FF7               	addlw	-9
 43696  0175CE  6ED9               	movwf	fsr2l,c
 43697  0175D0  50E2               	movf	fsr1h,w,c
 43698  0175D2  6EDA               	movwf	fsr2h,c
 43699  0175D4  0EFF               	movlw	255
 43700  0175D6  22DA               	addwfc	fsr2h,f,c
 43701  0175D8  0E08               	movlw	8
 43702  0175DA                     u8735:
 43703  0175DA  90D8               	bcf	status,0,c
 43704  0175DC  36DE               	rlcf	postinc2,f,c
 43705  0175DE  36DE               	rlcf	postinc2,f,c
 43706  0175E0  36DE               	rlcf	postinc2,f,c
 43707  0175E2  36DD               	rlcf	postdec2,f,c
 43708  0175E4  52DD               	movf	postdec2,f,c
 43709  0175E6  52DD               	movf	postdec2,f,c
 43710  0175E8  2EE8               	decfsz	wreg,f,c
 43711  0175EA  D7F7               	goto	u8735
 43712  0175EC  0E82               	movlw	130
 43713  0175EE  6E34               	movwf	(btemp+10)^0,c
 43714  0175F0  0EFF               	movlw	255
 43715  0175F2  6E35               	movwf	(btemp+11)^0,c
 43716                           
 43717                           ;stkvar	_bexp @ sp[(-13)+10]
 43718  0175F4  0EFD               	movlw	-3
 43719  0175F6  50E3               	movf	plusw1,w,c
 43720  0175F8  6E32               	movwf	(btemp+8)^0,c
 43721  0175FA  6A33               	clrf	(btemp+9)^0,c
 43722                           
 43723                           ;stkvar	_aexp @ sp[(-13)+11]
 43724  0175FC  0EFE               	movlw	-2
 43725  0175FE  50E3               	movf	plusw1,w,c
 43726  017600  2632               	addwf	(btemp+8)^0,f,c
 43727  017602  0E00               	movlw	0
 43728  017604  2233               	addwfc	(btemp+9)^0,f,c
 43729  017606  5034               	movf	(btemp+10)^0,w,c
 43730  017608  2632               	addwf	(btemp+8)^0,f,c
 43731  01760A  5035               	movf	(btemp+11)^0,w,c
 43732  01760C  2233               	addwfc	(btemp+9)^0,f,c
 43733                           
 43734                           ;stkvar	_temp @ sp[(-13)+8]
 43735  01760E  0EFB               	movlw	-5
 43736  017610  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43737  017616  0EFC               	movlw	-4
 43738  017618  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43739  01761E  D021               	goto	l10645
 43740  017620                     l10635:
 43741                           
 43742                           ;stkvar	_prod @ sp[(-13)+0]
 43743  017620  90D8               	bcf	status,0,c
 43744  017622  0EF3               	movlw	-13
 43745  017624  36E3               	rlcf	plusw1,f,c
 43746  017626  0EF4               	movlw	-12
 43747  017628  36E3               	rlcf	plusw1,f,c
 43748  01762A  0EF5               	movlw	-11
 43749  01762C  36E3               	rlcf	plusw1,f,c
 43750  01762E  0EF6               	movlw	-10
 43751  017630  36E3               	rlcf	plusw1,f,c
 43752                           
 43753                           ;stkvar	_grs @ sp[(-13)+4]
 43754  017632  0EFA               	movlw	-6
 43755  017634  AEE3               	btfss	plusw1,7,c
 43756  017636  D002               	goto	l10641
 43757                           
 43758                           ;stkvar	_prod @ sp[(-13)+0]
 43759  017638  0EF3               	movlw	-13
 43760  01763A  80E3               	bsf	plusw1,0,c
 43761  01763C                     l10641:
 43762                           
 43763                           ;stkvar	_grs @ sp[(-13)+4]
 43764  01763C  90D8               	bcf	status,0,c
 43765  01763E  0EF7               	movlw	-9
 43766  017640  36E3               	rlcf	plusw1,f,c
 43767  017642  0EF8               	movlw	-8
 43768  017644  36E3               	rlcf	plusw1,f,c
 43769  017646  0EF9               	movlw	-7
 43770  017648  36E3               	rlcf	plusw1,f,c
 43771  01764A  0EFA               	movlw	-6
 43772  01764C  36E3               	rlcf	plusw1,f,c
 43773                           
 43774                           ;stkvar	_temp @ sp[(-13)+8]
 43775  01764E  50E1               	movf	fsr1l,w,c
 43776  017650  0FFB               	addlw	-5
 43777  017652  6ED9               	movwf	fsr2l,c
 43778  017654  50E2               	movf	fsr1h,w,c
 43779  017656  6EDA               	movwf	fsr2h,c
 43780  017658  0EFF               	movlw	255
 43781  01765A  22DA               	addwfc	fsr2h,f,c
 43782  01765C  06DE               	decf	postinc2,f,c
 43783  01765E  0E00               	movlw	0
 43784  017660  5ADD               	subwfb	postdec2,f,c
 43785  017662                     l10645:
 43786                           
 43787                           ;stkvar	_prod @ sp[(-13)+0]
 43788  017662  0EF5               	movlw	-11
 43789  017664  AEE3               	btfss	plusw1,7,c
 43790  017666  D7DC               	goto	l10635
 43791                           
 43792                           ;stkvar	_aexp @ sp[(-13)+11]
 43793  017668  0EFE               	movlw	-2
 43794  01766A  6AE3               	clrf	plusw1,c
 43795                           
 43796                           ;stkvar	_grs @ sp[(-13)+4]
 43797  01766C  0EFA               	movlw	-6
 43798  01766E  AEE3               	btfss	plusw1,7,c
 43799  017670  D020               	goto	l10659
 43800                           
 43801                           ;stkvar	_grs @ sp[(-13)+4]
 43802  017672  50E1               	movf	fsr1l,w,c
 43803  017674  0FF7               	addlw	-9
 43804  017676  6ED9               	movwf	fsr2l,c
 43805  017678  50E2               	movf	fsr1h,w,c
 43806  01767A  6EDA               	movwf	fsr2h,c
 43807  01767C  0EFF               	movlw	255
 43808  01767E  22DA               	addwfc	fsr2h,f,c
 43809  017680  0EFF               	movlw	255
 43810  017682  14DE               	andwf	postinc2,w,c
 43811  017684  6E32               	movwf	(btemp+8)^0,c
 43812  017686  0EFF               	movlw	255
 43813  017688  14DE               	andwf	postinc2,w,c
 43814  01768A  6E33               	movwf	(btemp+9)^0,c
 43815  01768C  0EFF               	movlw	255
 43816  01768E  14DE               	andwf	postinc2,w,c
 43817  017690  6E34               	movwf	(btemp+10)^0,c
 43818  017692  0E7F               	movlw	127
 43819  017694  14DE               	andwf	postinc2,w,c
 43820  017696  6E35               	movwf	(btemp+11)^0,c
 43821  017698  5032               	movf	(btemp+8)^0,w,c
 43822  01769A  1033               	iorwf	(btemp+9)^0,w,c
 43823  01769C  1034               	iorwf	(btemp+10)^0,w,c
 43824  01769E  1035               	iorwf	(btemp+11)^0,w,c
 43825  0176A0  B4D8               	btfsc	status,2,c
 43826  0176A2  D004               	goto	l10655
 43827  0176A4                     u8770:
 43828                           
 43829                           ;stkvar	_aexp @ sp[(-13)+11]
 43830  0176A4  0EFE               	movlw	-2
 43831  0176A6  6AE3               	clrf	plusw1,c
 43832  0176A8  2AE3               	incf	plusw1,f,c
 43833  0176AA  D003               	goto	l10659
 43834  0176AC                     l10655:
 43835                           
 43836                           ;stkvar	_prod @ sp[(-13)+0]
 43837  0176AC  0EF3               	movlw	-13
 43838  0176AE  B0E3               	btfsc	plusw1,0,c
 43839  0176B0  D7F9               	goto	u8770
 43840  0176B2                     l10659:
 43841                           
 43842                           ;stkvar	_aexp @ sp[(-13)+11]
 43843  0176B2  0EFE               	movlw	-2
 43844  0176B4  50E3               	movf	plusw1,w,c
 43845  0176B6  B4D8               	btfsc	status,2,c
 43846  0176B8  D036               	goto	l10669
 43847                           
 43848                           ;stkvar	_prod @ sp[(-13)+0]
 43849  0176BA  50E1               	movf	fsr1l,w,c
 43850  0176BC  0FF3               	addlw	-13
 43851  0176BE  6ED9               	movwf	fsr2l,c
 43852  0176C0  50E2               	movf	fsr1h,w,c
 43853  0176C2  6EDA               	movwf	fsr2h,c
 43854  0176C4  0EFF               	movlw	255
 43855  0176C6  22DA               	addwfc	fsr2h,f,c
 43856  0176C8  2ADE               	incf	postinc2,f,c
 43857  0176CA  0E00               	movlw	0
 43858  0176CC  22DE               	addwfc	postinc2,f,c
 43859  0176CE  22DE               	addwfc	postinc2,f,c
 43860  0176D0  22DE               	addwfc	postinc2,f,c
 43861                           
 43862                           ;stkvar	_prod @ sp[(-13)+0]
 43863  0176D2  0EF6               	movlw	-10
 43864  0176D4  A0E3               	btfss	plusw1,0,c
 43865  0176D6  D027               	goto	l10669
 43866  0176D8  0E01               	movlw	1
 43867  0176DA  6E35               	movwf	(btemp+11)^0,c
 43868                           
 43869                           ;stkvar	_prod @ sp[(-13)+0]
 43870  0176DC  50E1               	movf	fsr1l,w,c
 43871  0176DE  0FF3               	addlw	-13
 43872  0176E0  6ED9               	movwf	fsr2l,c
 43873  0176E2  50E2               	movf	fsr1h,w,c
 43874  0176E4  6EDA               	movwf	fsr2h,c
 43875  0176E6  0EFF               	movlw	255
 43876  0176E8  22DA               	addwfc	fsr2h,f,c
 43877  0176EA  2835               	incf	(btemp+11)^0,w,c
 43878  0176EC  52DE               	movf	postinc2,f,c
 43879  0176EE  D008               	goto	u8810
 43880  0176F0                     u8815:
 43881  0176F0  52DE               	movf	postinc2,f,c
 43882  0176F2  90D8               	bcf	status,0,c
 43883  0176F4  BEDC               	btfsc	preinc2,7,c
 43884  0176F6  80D8               	bsf	status,0,c
 43885  0176F8  32DD               	rrcf	postdec2,f,c
 43886  0176FA  32DD               	rrcf	postdec2,f,c
 43887  0176FC  32DD               	rrcf	postdec2,f,c
 43888  0176FE  32DE               	rrcf	postinc2,f,c
 43889  017700                     u8810:
 43890  017700  2EE8               	decfsz	wreg,f,c
 43891  017702  D7F6               	goto	u8815
 43892                           
 43893                           ;stkvar	_temp @ sp[(-13)+8]
 43894  017704  0EFB               	movlw	-5
 43895  017706  50E3               	movf	plusw1,w,c
 43896  017708  0F01               	addlw	1
 43897  01770A  6E2A               	movwf	btemp^0,c
 43898  01770C  0EFB               	movlw	-5
 43899  01770E  0060  F0AB  FFE3   	movff	btemp,plusw1
 43900  017714  6A2A               	clrf	btemp^0,c
 43901  017716  0EFC               	movlw	-4
 43902  017718  50E3               	movf	plusw1,w,c
 43903  01771A  202A               	addwfc	btemp^0,w,c
 43904  01771C  6E2A               	movwf	btemp^0,c
 43905  01771E  0EFC               	movlw	-4
 43906  017720  0060  F0AB  FFE3   	movff	btemp,plusw1
 43907  017726                     l10669:
 43908                           
 43909                           ;stkvar	_temp @ sp[(-13)+8]
 43910  017726  0EFC               	movlw	-4
 43911  017728  BEE3               	btfsc	plusw1,7,c
 43912  01772A  D020               	goto	l10673
 43913  01772C  0EFC               	movlw	-4
 43914  01772E  50E3               	movf	plusw1,w,c
 43915  017730  E104               	bnz	u8820
 43916  017732  0EFB               	movlw	-5
 43917  017734  28E3               	incf	plusw1,w,c
 43918  017736  A0D8               	btfss	status,0,c
 43919  017738  D019               	goto	l10673
 43920  01773A                     u8820:
 43921  01773A  0E00               	movlw	0
 43922  01773C  6E32               	movwf	(btemp+8)^0,c
 43923  01773E  0E00               	movlw	0
 43924  017740  6E33               	movwf	(btemp+9)^0,c
 43925  017742  0E80               	movlw	128
 43926  017744  6E34               	movwf	(btemp+10)^0,c
 43927  017746  0E7F               	movlw	127
 43928  017748  6E35               	movwf	(btemp+11)^0,c
 43929                           
 43930                           ;stkvar	_prod @ sp[(-13)+0]
 43931  01774A  0EF3               	movlw	-13
 43932  01774C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43933  017752  0EF4               	movlw	-12
 43934  017754  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43935  01775A  0EF5               	movlw	-11
 43936  01775C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43937  017762  0EF6               	movlw	-10
 43938  017764  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43939  01776A  D044               	goto	l10689
 43940  01776C                     l10673:
 43941                           
 43942                           ;stkvar	_temp @ sp[(-13)+8]
 43943  01776C  0EFC               	movlw	-4
 43944  01776E  BEE3               	btfsc	plusw1,7,c
 43945  017770  D007               	goto	u8830
 43946  017772  0EFC               	movlw	-4
 43947  017774  50E3               	movf	plusw1,w,c
 43948  017776  E10F               	bnz	l10679
 43949  017778  0EFB               	movlw	-5
 43950  01777A  04E3               	decf	plusw1,w,c
 43951  01777C  B0D8               	btfsc	status,0,c
 43952  01777E  D00B               	goto	l10679
 43953  017780                     u8830:
 43954                           
 43955                           ;stkvar	_prod @ sp[(-13)+0]
 43956  017780  0EF3               	movlw	-13
 43957  017782  6AE3               	clrf	plusw1,c
 43958  017784  0EF4               	movlw	-12
 43959  017786  6AE3               	clrf	plusw1,c
 43960  017788  0EF5               	movlw	-11
 43961  01778A  6AE3               	clrf	plusw1,c
 43962  01778C  0EF6               	movlw	-10
 43963  01778E  6AE3               	clrf	plusw1,c
 43964                           
 43965                           ;stkvar	_sign @ sp[(-13)+12]
 43966  017790  0EFF               	movlw	-1
 43967  017792  6AE3               	clrf	plusw1,c
 43968  017794  D02F               	goto	l10689
 43969  017796                     l10679:
 43970                           
 43971                           ;stkvar	_temp @ sp[(-13)+8]
 43972                           ;stkvar	_bexp @ sp[(-13)+10]
 43973  017796  0EFB               	movlw	-5
 43974  017798  006F FF8C  F02A    	movff	plusw1,btemp
 43975  01779E  0EFD               	movlw	-3
 43976  0177A0  0060  F0AB  FFE3   	movff	btemp,plusw1
 43977                           
 43978                           ;stkvar	_prod @ sp[(-13)+0]
 43979  0177A6  50E1               	movf	fsr1l,w,c
 43980  0177A8  0FF3               	addlw	-13
 43981  0177AA  6ED9               	movwf	fsr2l,c
 43982  0177AC  50E2               	movf	fsr1h,w,c
 43983  0177AE  6EDA               	movwf	fsr2h,c
 43984  0177B0  0EFF               	movlw	255
 43985  0177B2  22DA               	addwfc	fsr2h,f,c
 43986  0177B4  0EFF               	movlw	255
 43987  0177B6  16DE               	andwf	postinc2,f,c
 43988  0177B8  0EFF               	movlw	255
 43989  0177BA  16DE               	andwf	postinc2,f,c
 43990  0177BC  0E7F               	movlw	127
 43991  0177BE  16DE               	andwf	postinc2,f,c
 43992  0177C0  0E00               	movlw	0
 43993  0177C2  16DE               	andwf	postinc2,f,c
 43994                           
 43995                           ;stkvar	_bexp @ sp[(-13)+10]
 43996  0177C4  0EFD               	movlw	-3
 43997  0177C6  A0E3               	btfss	plusw1,0,c
 43998  0177C8  D008               	goto	l10687
 43999                           
 44000                           ;stkvar	_prod @ sp[(-13)+0]
 44001  0177CA  0EF5               	movlw	245
 44002  0177CC  24E1               	addwf	fsr1l,w,c
 44003  0177CE  6ED9               	movwf	fsr2l,c
 44004  0177D0  0EFF               	movlw	255
 44005  0177D2  20E2               	addwfc	fsr1h,w,c
 44006  0177D4  6EDA               	movwf	fsr2h,c
 44007  0177D6  0E00               	movlw	0
 44008  0177D8  8EDB               	bsf	plusw2,7,c
 44009  0177DA                     l10687:
 44010                           
 44011                           ;stkvar	_prod @ sp[(-13)+0]
 44012  0177DA  0EF6               	movlw	246
 44013  0177DC  24E1               	addwf	fsr1l,w,c
 44014  0177DE  6ED9               	movwf	fsr2l,c
 44015  0177E0  0EFF               	movlw	255
 44016  0177E2  20E2               	addwfc	fsr1h,w,c
 44017  0177E4  6EDA               	movwf	fsr2h,c
 44018                           
 44019                           ;stkvar	_bexp @ sp[(-13)+10]
 44020  0177E6  0EFD               	movlw	-3
 44021  0177E8  006F FF8C  F035    	movff	plusw1,btemp+11
 44022  0177EE  90D8               	bcf	status,0,c
 44023  0177F0  3035               	rrcf	(btemp+11)^0,w,c
 44024  0177F2  6EDF               	movwf	indf2,c
 44025  0177F4                     l10689:
 44026                           
 44027                           ;stkvar	_sign @ sp[(-13)+12]
 44028  0177F4  0EFF               	movlw	-1
 44029  0177F6  006F FF8C  F035    	movff	plusw1,btemp+11
 44030                           
 44031                           ;stkvar	_prod @ sp[(-13)+0]
 44032  0177FC  0EF6               	movlw	246
 44033  0177FE  24E1               	addwf	fsr1l,w,c
 44034  017800  6ED9               	movwf	fsr2l,c
 44035  017802  0EFF               	movlw	255
 44036  017804  20E2               	addwfc	fsr1h,w,c
 44037  017806  6EDA               	movwf	fsr2h,c
 44038  017808  5035               	movf	(btemp+11)^0,w,c
 44039  01780A  12DF               	iorwf	indf2,f,c
 44040                           
 44041                           ;stkvar	_prod @ sp[(-13)+0]
 44042  01780C  0EF3               	movlw	-13
 44043  01780E  006F FF8C  F02A    	movff	plusw1,btemp
 44044  017814  0EF4               	movlw	-12
 44045  017816  006F FF8C  F02B    	movff	plusw1,btemp+1
 44046  01781C  0EF5               	movlw	-11
 44047  01781E  006F FF8C  F02C    	movff	plusw1,btemp+2
 44048  017824  0EF6               	movlw	-10
 44049  017826  006F FF8C  F02D    	movff	plusw1,btemp+3
 44050  01782C                     l3339:
 44051                           
 44052                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 44053  01782C  0EEB               	movlw	235
 44054  01782E  26E1               	addwf	fsr1l,f,c
 44055  017830  0EFF               	movlw	255
 44056  017832  22E2               	addwfc	fsr1h,f,c
 44057  017834  0012               	return		;funcret
 44058  017836                     __end_of___flmul:
 44059                           	opt callstack 0
 44060                           
 44061 ;; *************** function _SYSTEM_Initialize *****************
 44062 ;; Defined at:
 44063 ;;		line 50 in file "mcc_generated_files/mcc.c"
 44064 ;; Parameters:    Size  Location     Type
 44065 ;;		None
 44066 ;; Auto vars:     Size  Location     Type
 44067 ;;		None
 44068 ;; Return value:  Size  Location     Type
 44069 ;;                  1  [STACK] void 
 44070 ;; Registers used:
 44071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 44072 ;; Tracked objects:
 44073 ;;		On entry : 0/0
 44074 ;;		On exit  : 3F/3C
 44075 ;;		Unchanged: 0/0
 44076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44081 ;;Total ram usage:        0 bytes
 44082 ;; Hardware stack levels used:    1
 44083 ;; Hardware stack levels required when called:   17
 44084 ;; This function calls:
 44085 ;;		_ADCC_Initialize
 44086 ;;		_CLKREF_Initialize
 44087 ;;		_CRC_Initialize
 44088 ;;		_DMA1_Initialize
 44089 ;;		_DMA2_Initialize
 44090 ;;		_EXT_INT_Initialize
 44091 ;;		_FVR_Initialize
 44092 ;;		_INTERRUPT_Initialize
 44093 ;;		_OSCILLATOR_Initialize
 44094 ;;		_PIN_MANAGER_Initialize
 44095 ;;		_PMD_Initialize
 44096 ;;		_PWM8_Initialize
 44097 ;;		_SPI1_Initialize
 44098 ;;		_TMR2_Initialize
 44099 ;;		_TMR3_Initialize
 44100 ;;		_TMR5_Initialize
 44101 ;;		_TMR6_Initialize
 44102 ;;		_UART1_Initialize
 44103 ;;		_UART2_Initialize
 44104 ;; This function is called by:
 44105 ;;		_main
 44106 ;; This function uses a reentrant model
 44107 ;;
 44108                           
 44109                           	psect	text155
 44110  001FD2                     __ptext155:
 44111                           	opt callstack 0
 44112  001FD2                     _SYSTEM_Initialize:
 44113                           	opt callstack 13
 44114                           
 44115                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 44116                           
 44117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44118                           ;incstack = 0
 44119  001FD2  EC66  F00D         	call	_INTERRUPT_Initialize	;wreg free
 44120                           
 44121                           ; BSR set to: 57
 44122                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 44123  001FD6  ECA9  F016         	call	_PMD_Initialize	;wreg free
 44124                           
 44125                           ; BSR set to: 57
 44126                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 44127  001FDA  EC9B  F009         	call	_PIN_MANAGER_Initialize	;wreg free
 44128                           
 44129                           ; BSR set to: 58
 44130                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 44131  001FDE  EC9E  F016         	call	_OSCILLATOR_Initialize	;wreg free
 44132                           
 44133                           ; BSR set to: 57
 44134                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 44135  001FE2  EC3D  F017         	call	_FVR_Initialize	;wreg free
 44136                           
 44137                           ; BSR set to: 62
 44138                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 44139  001FE6  ECE4  F009         	call	_CRC_Initialize	;wreg free
 44140                           
 44141                           ; BSR set to: 0
 44142                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 44143  001FEA  EC94  F00C         	call	_ADCC_Initialize	;wreg free
 44144                           
 44145                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 44146  001FEE  EC71  F016         	call	_TMR2_Initialize	;wreg free
 44147                           
 44148                           ; BSR set to: 57
 44149                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 44150  001FF2  EC93  F016         	call	_PWM8_Initialize	;wreg free
 44151                           
 44152                           ; BSR set to: 63
 44153                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 44154  001FF6  EC0F  F013         	call	_EXT_INT_Initialize	;wreg free
 44155                           
 44156                           ; BSR set to: 57
 44157                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 44158  001FFA  ECFC  F013         	call	_TMR6_Initialize	;wreg free
 44159                           
 44160                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 44161  001FFE  ECA3  F010         	call	_TMR3_Initialize	;wreg free
 44162                           
 44163                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 44164  002002  EC7F  F010         	call	_TMR5_Initialize	;wreg free
 44165                           
 44166                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 44167  002006  EC5B  F010         	call	_UART1_Initialize	;wreg free
 44168                           
 44169                           ; BSR set to: 57
 44170                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 44171  00200A  EC5F  F00E         	call	_UART2_Initialize	;wreg free
 44172                           
 44173                           ; BSR set to: 57
 44174                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 44175  00200E  EC88  F016         	call	_SPI1_Initialize	;wreg free
 44176                           
 44177                           ; BSR set to: 61
 44178                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 44179  002012  EC18  F00F         	call	_DMA2_Initialize	;wreg free
 44180                           
 44181                           ; BSR set to: 59
 44182                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 44183  002016  EC5F  F00C         	call	_DMA1_Initialize	;wreg free
 44184                           
 44185                           ; BSR set to: 59
 44186                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 44187  00201A  EC11  F017         	call	_CLKREF_Initialize	;wreg free
 44188                           
 44189                           ; BSR set to: 60
 44190                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 44191  00201E  0012               	return		;funcret
 44192  002020                     __end_of_SYSTEM_Initialize:
 44193                           	opt callstack 0
 44194                           
 44195 ;; *************** function _UART2_Initialize *****************
 44196 ;; Defined at:
 44197 ;;		line 78 in file "mcc_generated_files/uart2.c"
 44198 ;; Parameters:    Size  Location     Type
 44199 ;;		None
 44200 ;; Auto vars:     Size  Location     Type
 44201 ;;		None
 44202 ;; Return value:  Size  Location     Type
 44203 ;;                  1  [STACK] void 
 44204 ;; Registers used:
 44205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44206 ;; Tracked objects:
 44207 ;;		On entry : 3F/39
 44208 ;;		On exit  : 3F/39
 44209 ;;		Unchanged: 0/0
 44210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44215 ;;Total ram usage:        0 bytes
 44216 ;; Hardware stack levels used:    1
 44217 ;; Hardware stack levels required when called:   16
 44218 ;; This function calls:
 44219 ;;		_UART2_SetRxInterruptHandler
 44220 ;;		_UART2_SetTxInterruptHandler
 44221 ;; This function is called by:
 44222 ;;		_SYSTEM_Initialize
 44223 ;; This function uses a reentrant model
 44224 ;;
 44225                           
 44226                           	psect	text156
 44227  001CBE                     __ptext156:
 44228                           	opt callstack 0
 44229  001CBE                     _UART2_Initialize:
 44230                           	opt callstack 13
 44231                           
 44232                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 44233                           
 44234                           ; BSR set to: 60
 44235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44236                           ;incstack = 0
 44237  001CBE  0139               	movlb	57	; () banked
 44238  001CC0  9596               	bcf	150,2,b	;volatile
 44239                           
 44240                           ; BSR set to: 57
 44241                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 44242  001CC2  0EFC               	movlw	low _UART2_Receive_ISR
 44243  001CC4  6EE6               	movwf	postinc1,c
 44244  001CC6  0E2B               	movlw	high _UART2_Receive_ISR
 44245  001CC8  6EE6               	movwf	postinc1,c
 44246  001CCA  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 44247  001CCC  6EE6               	movwf	postinc1,c
 44248  001CCE  EC4D  F014         	call	_UART2_SetRxInterruptHandler	;wreg free
 44249                           
 44250                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 44251  001CD2  0139               	movlb	57	; () banked
 44252  001CD4  9796               	bcf	150,3,b	;volatile
 44253                           
 44254                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 44255  001CD6  0ECC               	movlw	low _UART2_Transmit_ISR
 44256  001CD8  6EE6               	movwf	postinc1,c
 44257  001CDA  0E27               	movlw	high _UART2_Transmit_ISR
 44258  001CDC  6EE6               	movwf	postinc1,c
 44259  001CDE  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 44260  001CE0  6EE6               	movwf	postinc1,c
 44261  001CE2  EC39  F014         	call	_UART2_SetTxInterruptHandler	;wreg free
 44262                           
 44263                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 44264  001CE6  013D               	movlb	61	; () banked
 44265  001CE8  6BD4               	clrf	212,b	;volatile
 44266                           
 44267                           ; BSR set to: 61
 44268                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 44269  001CEA  6BD6               	clrf	214,b	;volatile
 44270                           
 44271                           ; BSR set to: 61
 44272                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 44273  001CEC  6BD8               	clrf	216,b	;volatile
 44274                           
 44275                           ; BSR set to: 61
 44276                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 44277  001CEE  0EB0               	movlw	176
 44278  001CF0  6FDA               	movwf	218,b	;volatile
 44279                           
 44280                           ; BSR set to: 61
 44281                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 44282  001CF2  0E80               	movlw	128
 44283  001CF4  6FDB               	movwf	219,b	;volatile
 44284                           
 44285                           ; BSR set to: 61
 44286                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 44287  001CF6  6BDC               	clrf	220,b	;volatile
 44288                           
 44289                           ; BSR set to: 61
 44290                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 44291  001CF8  0E82               	movlw	130
 44292  001CFA  6FDD               	movwf	221,b	;volatile
 44293                           
 44294                           ; BSR set to: 61
 44295                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 44296  001CFC  0E06               	movlw	6
 44297  001CFE  6FDE               	movwf	222,b	;volatile
 44298                           
 44299                           ; BSR set to: 61
 44300                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 44301  001D00  6BDF               	clrf	223,b	;volatile
 44302                           
 44303                           ; BSR set to: 61
 44304                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 44305  001D02  6BE0               	clrf	224,b	;volatile
 44306                           
 44307                           ; BSR set to: 61
 44308                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 44309  001D04  6BE1               	clrf	225,b	;volatile
 44310                           
 44311                           ; BSR set to: 61
 44312                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 44313  001D06  6BE2               	clrf	226,b	;volatile
 44314                           
 44315                           ; BSR set to: 61
 44316                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 44317  001D08  0100               	movlb	0	; () banked
 44318  001D0A  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 44319                           
 44320                           ; BSR set to: 0
 44321                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 44322  001D0C  6A56               	clrf	_uart2TxTail^0,c	;volatile
 44323                           
 44324                           ; BSR set to: 0
 44325                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 44326  001D0E  0E40               	movlw	64
 44327  001D10  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 44328                           
 44329                           ; BSR set to: 0
 44330                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 44331  001D12  6A54               	clrf	_uart2RxHead^0,c	;volatile
 44332                           
 44333                           ; BSR set to: 0
 44334                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 44335  001D14  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 44336                           
 44337                           ; BSR set to: 0
 44338                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 44339  001D16  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 44340                           
 44341                           ; BSR set to: 0
 44342                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 44343  001D18  0139               	movlb	57	; () banked
 44344  001D1A  8596               	bsf	150,2,b	;volatile
 44345                           
 44346                           ; BSR set to: 57
 44347                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44348  001D1C  0012               	return		;funcret
 44349  001D1E                     __end_of_UART2_Initialize:
 44350                           	opt callstack 0
 44351                           
 44352 ;; *************** function _UART2_SetTxInterruptHandler *****************
 44353 ;; Defined at:
 44354 ;;		line 252 in file "mcc_generated_files/uart2.c"
 44355 ;; Parameters:    Size  Location     Type
 44356 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44357 ;;		 -> UART2_Transmit_ISR(1), 
 44358 ;; Auto vars:     Size  Location     Type
 44359 ;;		None
 44360 ;; Return value:  Size  Location     Type
 44361 ;;                  1  [STACK] void 
 44362 ;; Registers used:
 44363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44364 ;; Tracked objects:
 44365 ;;		On entry : 3F/39
 44366 ;;		On exit  : 0/0
 44367 ;;		Unchanged: 0/0
 44368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44373 ;;Total ram usage:        0 bytes
 44374 ;; Hardware stack levels used:    1
 44375 ;; Hardware stack levels required when called:   15
 44376 ;; This function calls:
 44377 ;;		Nothing
 44378 ;; This function is called by:
 44379 ;;		_UART2_Initialize
 44380 ;; This function uses a reentrant model
 44381 ;;
 44382                           
 44383                           	psect	text157
 44384  002872                     __ptext157:
 44385                           	opt callstack 0
 44386  002872                     _UART2_SetTxInterruptHandler:
 44387                           	opt callstack 13
 44388                           
 44389                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 44390                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44391                           
 44392                           ; BSR set to: 57
 44393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44394                           ;incstack = 0
 44395  002872  50E1               	movf	fsr1l,w,c
 44396  002874  0FFD               	addlw	-3
 44397  002876  6ED9               	movwf	fsr2l,c
 44398  002878  50E2               	movf	fsr1h,w,c
 44399  00287A  6EDA               	movwf	fsr2h,c
 44400  00287C  0EFF               	movlw	255
 44401  00287E  22DA               	addwfc	fsr2h,f,c
 44402  002880  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 44403  002886  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 44404  00288C  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 44405                           
 44406                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44407  002892  52E5               	movf	postdec1,f,c
 44408  002894  52E5               	movf	postdec1,f,c
 44409  002896  52E5               	movf	postdec1,f,c
 44410  002898  0012               	return		;funcret
 44411  00289A                     __end_of_UART2_SetTxInterruptHandler:
 44412                           	opt callstack 0
 44413                           
 44414 ;; *************** function _UART2_SetRxInterruptHandler *****************
 44415 ;; Defined at:
 44416 ;;		line 248 in file "mcc_generated_files/uart2.c"
 44417 ;; Parameters:    Size  Location     Type
 44418 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44419 ;;		 -> UART2_Receive_ISR(1), 
 44420 ;; Auto vars:     Size  Location     Type
 44421 ;;		None
 44422 ;; Return value:  Size  Location     Type
 44423 ;;                  1  [STACK] void 
 44424 ;; Registers used:
 44425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44426 ;; Tracked objects:
 44427 ;;		On entry : 3F/39
 44428 ;;		On exit  : 0/0
 44429 ;;		Unchanged: 0/0
 44430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44435 ;;Total ram usage:        0 bytes
 44436 ;; Hardware stack levels used:    1
 44437 ;; Hardware stack levels required when called:   15
 44438 ;; This function calls:
 44439 ;;		Nothing
 44440 ;; This function is called by:
 44441 ;;		_UART2_Initialize
 44442 ;; This function uses a reentrant model
 44443 ;;
 44444                           
 44445                           	psect	text158
 44446  00289A                     __ptext158:
 44447                           	opt callstack 0
 44448  00289A                     _UART2_SetRxInterruptHandler:
 44449                           	opt callstack 13
 44450                           
 44451                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 44452                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44453                           
 44454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44455                           ;incstack = 0
 44456  00289A  50E1               	movf	fsr1l,w,c
 44457  00289C  0FFD               	addlw	-3
 44458  00289E  6ED9               	movwf	fsr2l,c
 44459  0028A0  50E2               	movf	fsr1h,w,c
 44460  0028A2  6EDA               	movwf	fsr2h,c
 44461  0028A4  0EFF               	movlw	255
 44462  0028A6  22DA               	addwfc	fsr2h,f,c
 44463  0028A8  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 44464  0028AE  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 44465  0028B4  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 44466                           
 44467                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44468  0028BA  52E5               	movf	postdec1,f,c
 44469  0028BC  52E5               	movf	postdec1,f,c
 44470  0028BE  52E5               	movf	postdec1,f,c
 44471  0028C0  0012               	return		;funcret
 44472  0028C2                     __end_of_UART2_SetRxInterruptHandler:
 44473                           	opt callstack 0
 44474                           
 44475 ;; *************** function _UART1_Initialize *****************
 44476 ;; Defined at:
 44477 ;;		line 75 in file "mcc_generated_files/uart1.c"
 44478 ;; Parameters:    Size  Location     Type
 44479 ;;		None
 44480 ;; Auto vars:     Size  Location     Type
 44481 ;;		None
 44482 ;; Return value:  Size  Location     Type
 44483 ;;                  1  [STACK] void 
 44484 ;; Registers used:
 44485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44486 ;; Tracked objects:
 44487 ;;		On entry : 0/39
 44488 ;;		On exit  : 3F/39
 44489 ;;		Unchanged: 0/0
 44490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44495 ;;Total ram usage:        0 bytes
 44496 ;; Hardware stack levels used:    1
 44497 ;; Hardware stack levels required when called:   16
 44498 ;; This function calls:
 44499 ;;		_UART1_SetRxInterruptHandler
 44500 ;; This function is called by:
 44501 ;;		_SYSTEM_Initialize
 44502 ;; This function uses a reentrant model
 44503 ;;
 44504                           
 44505                           	psect	text159
 44506  0020B6                     __ptext159:
 44507                           	opt callstack 0
 44508  0020B6                     _UART1_Initialize:
 44509                           	opt callstack 13
 44510                           
 44511                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 44512                           
 44513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44514                           ;incstack = 0
 44515  0020B6  0139               	movlb	57	; () banked
 44516  0020B8  9793               	bcf	147,3,b	;volatile
 44517                           
 44518                           ; BSR set to: 57
 44519                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 44520  0020BA  0EBA               	movlw	low _UART1_Receive_ISR
 44521  0020BC  6EE6               	movwf	postinc1,c
 44522  0020BE  0E2B               	movlw	high _UART1_Receive_ISR
 44523  0020C0  6EE6               	movwf	postinc1,c
 44524  0020C2  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 44525  0020C4  6EE6               	movwf	postinc1,c
 44526  0020C6  EC61  F014         	call	_UART1_SetRxInterruptHandler	;wreg free
 44527                           
 44528                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 44529  0020CA  013D               	movlb	61	; () banked
 44530  0020CC  6BEC               	clrf	236,b	;volatile
 44531                           
 44532                           ; BSR set to: 61
 44533                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 44534  0020CE  6BED               	clrf	237,b	;volatile
 44535                           
 44536                           ; BSR set to: 61
 44537                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 44538  0020D0  6BEE               	clrf	238,b	;volatile
 44539                           
 44540                           ; BSR set to: 61
 44541                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 44542  0020D2  6BEF               	clrf	239,b	;volatile
 44543                           
 44544                           ; BSR set to: 61
 44545                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 44546  0020D4  6BF0               	clrf	240,b	;volatile
 44547                           
 44548                           ; BSR set to: 61
 44549                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 44550  0020D6  6BF1               	clrf	241,b	;volatile
 44551                           
 44552                           ; BSR set to: 61
 44553                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 44554  0020D8  0EB0               	movlw	176
 44555  0020DA  6FF2               	movwf	242,b	;volatile
 44556                           
 44557                           ; BSR set to: 61
 44558                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 44559  0020DC  0E80               	movlw	128
 44560  0020DE  6FF3               	movwf	243,b	;volatile
 44561                           
 44562                           ; BSR set to: 61
 44563                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 44564  0020E0  6BF4               	clrf	244,b	;volatile
 44565                           
 44566                           ; BSR set to: 61
 44567                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 44568  0020E2  0E8A               	movlw	138
 44569  0020E4  6FF5               	movwf	245,b	;volatile
 44570                           
 44571                           ; BSR set to: 61
 44572                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 44573  0020E6  6BF6               	clrf	246,b	;volatile
 44574                           
 44575                           ; BSR set to: 61
 44576                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 44577  0020E8  6BF7               	clrf	247,b	;volatile
 44578                           
 44579                           ; BSR set to: 61
 44580                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 44581  0020EA  6BF8               	clrf	248,b	;volatile
 44582                           
 44583                           ; BSR set to: 61
 44584                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 44585  0020EC  6BF9               	clrf	249,b	;volatile
 44586                           
 44587                           ; BSR set to: 61
 44588                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 44589  0020EE  6BFA               	clrf	250,b	;volatile
 44590                           
 44591                           ; BSR set to: 61
 44592                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 44593  0020F0  6A57               	clrf	_uart1RxHead^0,c	;volatile
 44594                           
 44595                           ; BSR set to: 61
 44596                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 44597  0020F2  0100               	movlb	0	; () banked
 44598  0020F4  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 44599                           
 44600                           ; BSR set to: 0
 44601                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 44602  0020F6  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 44603                           
 44604                           ; BSR set to: 0
 44605                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 44606  0020F8  0139               	movlb	57	; () banked
 44607  0020FA  8793               	bsf	147,3,b	;volatile
 44608                           
 44609                           ; BSR set to: 57
 44610                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44611  0020FC  0012               	return		;funcret
 44612  0020FE                     __end_of_UART1_Initialize:
 44613                           	opt callstack 0
 44614                           
 44615 ;; *************** function _UART1_SetRxInterruptHandler *****************
 44616 ;; Defined at:
 44617 ;;		line 207 in file "mcc_generated_files/uart1.c"
 44618 ;; Parameters:    Size  Location     Type
 44619 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44620 ;;		 -> UART1_Receive_ISR(1), 
 44621 ;; Auto vars:     Size  Location     Type
 44622 ;;		None
 44623 ;; Return value:  Size  Location     Type
 44624 ;;                  1  [STACK] void 
 44625 ;; Registers used:
 44626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44627 ;; Tracked objects:
 44628 ;;		On entry : 3F/39
 44629 ;;		On exit  : 0/0
 44630 ;;		Unchanged: 0/0
 44631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44636 ;;Total ram usage:        0 bytes
 44637 ;; Hardware stack levels used:    1
 44638 ;; Hardware stack levels required when called:   15
 44639 ;; This function calls:
 44640 ;;		Nothing
 44641 ;; This function is called by:
 44642 ;;		_UART1_Initialize
 44643 ;; This function uses a reentrant model
 44644 ;;
 44645                           
 44646                           	psect	text160
 44647  0028C2                     __ptext160:
 44648                           	opt callstack 0
 44649  0028C2                     _UART1_SetRxInterruptHandler:
 44650                           	opt callstack 13
 44651                           
 44652                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 44653                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44654                           
 44655                           ; BSR set to: 57
 44656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44657                           ;incstack = 0
 44658  0028C2  50E1               	movf	fsr1l,w,c
 44659  0028C4  0FFD               	addlw	-3
 44660  0028C6  6ED9               	movwf	fsr2l,c
 44661  0028C8  50E2               	movf	fsr1h,w,c
 44662  0028CA  6EDA               	movwf	fsr2h,c
 44663  0028CC  0EFF               	movlw	255
 44664  0028CE  22DA               	addwfc	fsr2h,f,c
 44665  0028D0  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 44666  0028D6  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 44667  0028DC  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 44668                           
 44669                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44670  0028E2  52E5               	movf	postdec1,f,c
 44671  0028E4  52E5               	movf	postdec1,f,c
 44672  0028E6  52E5               	movf	postdec1,f,c
 44673  0028E8  0012               	return		;funcret
 44674  0028EA                     __end_of_UART1_SetRxInterruptHandler:
 44675                           	opt callstack 0
 44676                           
 44677 ;; *************** function _TMR6_Initialize *****************
 44678 ;; Defined at:
 44679 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 44680 ;; Parameters:    Size  Location     Type
 44681 ;;		None
 44682 ;; Auto vars:     Size  Location     Type
 44683 ;;		None
 44684 ;; Return value:  Size  Location     Type
 44685 ;;                  1  [STACK] void 
 44686 ;; Registers used:
 44687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44688 ;; Tracked objects:
 44689 ;;		On entry : 3F/39
 44690 ;;		On exit  : 0/0
 44691 ;;		Unchanged: 0/0
 44692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44697 ;;Total ram usage:        0 bytes
 44698 ;; Hardware stack levels used:    1
 44699 ;; Hardware stack levels required when called:   16
 44700 ;; This function calls:
 44701 ;;		_TMR6_SetInterruptHandler
 44702 ;; This function is called by:
 44703 ;;		_SYSTEM_Initialize
 44704 ;; This function uses a reentrant model
 44705 ;;
 44706                           
 44707                           	psect	text161
 44708  0027F8                     __ptext161:
 44709                           	opt callstack 0
 44710  0027F8                     _TMR6_Initialize:
 44711                           	opt callstack 13
 44712                           
 44713                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 44714                           
 44715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44716                           ;incstack = 0
 44717  0027F8  0E01               	movlw	1
 44718  0027FA  6E96               	movwf	150,c	;volatile
 44719                           
 44720                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 44721  0027FC  6A95               	clrf	149,c	;volatile
 44722                           
 44723                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 44724  0027FE  6A97               	clrf	151,c	;volatile
 44725                           
 44726                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 44727  002800  0E7C               	movlw	124
 44728  002802  6E93               	movwf	147,c	;volatile
 44729                           
 44730                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 44731  002804  6A92               	clrf	146,c	;volatile
 44732                           
 44733                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 44734  002806  0139               	movlb	57	; () banked
 44735  002808  91A9               	bcf	169,0,b	;volatile
 44736                           
 44737                           ; BSR set to: 57
 44738                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 44739  00280A  8199               	bsf	153,0,b	;volatile
 44740                           
 44741                           ; BSR set to: 57
 44742                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 44743  00280C  0E20               	movlw	low _TMR6_DefaultInterruptHandler
 44744  00280E  6EE6               	movwf	postinc1,c
 44745  002810  0E20               	movlw	high _TMR6_DefaultInterruptHandler
 44746  002812  6EE6               	movwf	postinc1,c
 44747  002814  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 44748  002816  6EE6               	movwf	postinc1,c
 44749  002818  EC75  F014         	call	_TMR6_SetInterruptHandler	;wreg free
 44750                           
 44751                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 44752  00281C  0EE0               	movlw	224
 44753  00281E  6E94               	movwf	148,c	;volatile
 44754                           
 44755                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44756  002820  0012               	return		;funcret
 44757  002822                     __end_of_TMR6_Initialize:
 44758                           	opt callstack 0
 44759                           
 44760 ;; *************** function _TMR6_SetInterruptHandler *****************
 44761 ;; Defined at:
 44762 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 44763 ;; Parameters:    Size  Location     Type
 44764 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44765 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 44766 ;; Auto vars:     Size  Location     Type
 44767 ;;		None
 44768 ;; Return value:  Size  Location     Type
 44769 ;;                  1  [STACK] void 
 44770 ;; Registers used:
 44771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44772 ;; Tracked objects:
 44773 ;;		On entry : 3F/39
 44774 ;;		On exit  : 0/0
 44775 ;;		Unchanged: 0/0
 44776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44781 ;;Total ram usage:        0 bytes
 44782 ;; Hardware stack levels used:    1
 44783 ;; Hardware stack levels required when called:   15
 44784 ;; This function calls:
 44785 ;;		Nothing
 44786 ;; This function is called by:
 44787 ;;		_TMR6_Initialize
 44788 ;; This function uses a reentrant model
 44789 ;;
 44790                           
 44791                           	psect	text162
 44792  0028EA                     __ptext162:
 44793                           	opt callstack 0
 44794  0028EA                     _TMR6_SetInterruptHandler:
 44795                           	opt callstack 13
 44796                           
 44797                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 44798                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44799                           
 44800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44801                           ;incstack = 0
 44802  0028EA  50E1               	movf	fsr1l,w,c
 44803  0028EC  0FFD               	addlw	-3
 44804  0028EE  6ED9               	movwf	fsr2l,c
 44805  0028F0  50E2               	movf	fsr1h,w,c
 44806  0028F2  6EDA               	movwf	fsr2h,c
 44807  0028F4  0EFF               	movlw	255
 44808  0028F6  22DA               	addwfc	fsr2h,f,c
 44809  0028F8  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 44810  0028FE  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 44811  002904  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 44812                           
 44813                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44814  00290A  52E5               	movf	postdec1,f,c
 44815  00290C  52E5               	movf	postdec1,f,c
 44816  00290E  52E5               	movf	postdec1,f,c
 44817  002910  0012               	return		;funcret
 44818  002912                     __end_of_TMR6_SetInterruptHandler:
 44819                           	opt callstack 0
 44820                           
 44821 ;; *************** function _TMR5_Initialize *****************
 44822 ;; Defined at:
 44823 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 44824 ;; Parameters:    Size  Location     Type
 44825 ;;		None
 44826 ;; Auto vars:     Size  Location     Type
 44827 ;;		None
 44828 ;; Return value:  Size  Location     Type
 44829 ;;                  1  [STACK] void 
 44830 ;; Registers used:
 44831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44832 ;; Tracked objects:
 44833 ;;		On entry : 0/39
 44834 ;;		On exit  : 0/0
 44835 ;;		Unchanged: 0/0
 44836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44841 ;;Total ram usage:        0 bytes
 44842 ;; Hardware stack levels used:    1
 44843 ;; Hardware stack levels required when called:   16
 44844 ;; This function calls:
 44845 ;;		_TMR5_SetInterruptHandler
 44846 ;; This function is called by:
 44847 ;;		_SYSTEM_Initialize
 44848 ;; This function uses a reentrant model
 44849 ;;
 44850                           
 44851                           	psect	text163
 44852  0020FE                     __ptext163:
 44853                           	opt callstack 0
 44854  0020FE                     _TMR5_Initialize:
 44855                           	opt callstack 13
 44856                           
 44857                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 44858                           
 44859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44860                           ;incstack = 0
 44861  0020FE  6A9B               	clrf	155,c	;volatile
 44862                           
 44863                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 44864  002100  6A9C               	clrf	156,c	;volatile
 44865                           
 44866                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 44867  002102  0E01               	movlw	1
 44868  002104  6E9D               	movwf	157,c	;volatile
 44869                           
 44870                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 44871  002106  0E63               	movlw	99
 44872  002108  6E99               	movwf	153,c	;volatile
 44873                           
 44874                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 44875  00210A  0EC0               	movlw	192
 44876  00210C  6E98               	movwf	152,c	;volatile
 44877                           
 44878                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 44879  00210E  5098               	movf	152,w,c	;volatile
 44880  002110  006F FE64  F02A    	movff	16281,btemp	;volatile
 44881  002116  6A2B               	clrf	(btemp+1)^0,c
 44882  002118  0060  F0A8  F02B   	movff	btemp,btemp+1
 44883  00211E  6A2A               	clrf	btemp^0,c
 44884  002120  102A               	iorwf	btemp^0,w,c
 44885  002122  0100               	movlb	0	; () banked
 44886  002124  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 44887  002126  502B               	movf	(btemp+1)^0,w,c
 44888  002128  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 44889                           
 44890                           ; BSR set to: 0
 44891                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 44892  00212A  0139               	movlb	57	; () banked
 44893  00212C  9DA8               	bcf	168,6,b	;volatile
 44894                           
 44895                           ; BSR set to: 57
 44896                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 44897  00212E  8D98               	bsf	152,6,b	;volatile
 44898                           
 44899                           ; BSR set to: 57
 44900                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 44901  002130  0E14               	movlw	low _TMR5_DefaultInterruptHandler
 44902  002132  6EE6               	movwf	postinc1,c
 44903  002134  0E25               	movlw	high _TMR5_DefaultInterruptHandler
 44904  002136  6EE6               	movwf	postinc1,c
 44905  002138  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 44906  00213A  6EE6               	movwf	postinc1,c
 44907  00213C  EC89  F014         	call	_TMR5_SetInterruptHandler	;wreg free
 44908                           
 44909                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 44910  002140  0E31               	movlw	49
 44911  002142  6E9A               	movwf	154,c	;volatile
 44912                           
 44913                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44914  002144  0012               	return		;funcret
 44915  002146                     __end_of_TMR5_Initialize:
 44916                           	opt callstack 0
 44917                           
 44918 ;; *************** function _TMR5_SetInterruptHandler *****************
 44919 ;; Defined at:
 44920 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 44921 ;; Parameters:    Size  Location     Type
 44922 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44923 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 44924 ;; Auto vars:     Size  Location     Type
 44925 ;;		None
 44926 ;; Return value:  Size  Location     Type
 44927 ;;                  1  [STACK] void 
 44928 ;; Registers used:
 44929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44930 ;; Tracked objects:
 44931 ;;		On entry : 3F/39
 44932 ;;		On exit  : 0/0
 44933 ;;		Unchanged: 0/0
 44934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44939 ;;Total ram usage:        0 bytes
 44940 ;; Hardware stack levels used:    1
 44941 ;; Hardware stack levels required when called:   15
 44942 ;; This function calls:
 44943 ;;		Nothing
 44944 ;; This function is called by:
 44945 ;;		_TMR5_Initialize
 44946 ;; This function uses a reentrant model
 44947 ;;
 44948                           
 44949                           	psect	text164
 44950  002912                     __ptext164:
 44951                           	opt callstack 0
 44952  002912                     _TMR5_SetInterruptHandler:
 44953                           	opt callstack 13
 44954                           
 44955                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 44956                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44957                           
 44958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44959                           ;incstack = 0
 44960  002912  50E1               	movf	fsr1l,w,c
 44961  002914  0FFD               	addlw	-3
 44962  002916  6ED9               	movwf	fsr2l,c
 44963  002918  50E2               	movf	fsr1h,w,c
 44964  00291A  6EDA               	movwf	fsr2h,c
 44965  00291C  0EFF               	movlw	255
 44966  00291E  22DA               	addwfc	fsr2h,f,c
 44967  002920  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 44968  002926  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 44969  00292C  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 44970                           
 44971                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44972  002932  52E5               	movf	postdec1,f,c
 44973  002934  52E5               	movf	postdec1,f,c
 44974  002936  52E5               	movf	postdec1,f,c
 44975  002938  0012               	return		;funcret
 44976  00293A                     __end_of_TMR5_SetInterruptHandler:
 44977                           	opt callstack 0
 44978                           
 44979 ;; *************** function _TMR3_Initialize *****************
 44980 ;; Defined at:
 44981 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 44982 ;; Parameters:    Size  Location     Type
 44983 ;;		None
 44984 ;; Auto vars:     Size  Location     Type
 44985 ;;		None
 44986 ;; Return value:  Size  Location     Type
 44987 ;;                  1  [STACK] void 
 44988 ;; Registers used:
 44989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44990 ;; Tracked objects:
 44991 ;;		On entry : 0/39
 44992 ;;		On exit  : 0/0
 44993 ;;		Unchanged: 0/0
 44994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44999 ;;Total ram usage:        0 bytes
 45000 ;; Hardware stack levels used:    1
 45001 ;; Hardware stack levels required when called:   16
 45002 ;; This function calls:
 45003 ;;		_TMR3_SetInterruptHandler
 45004 ;; This function is called by:
 45005 ;;		_SYSTEM_Initialize
 45006 ;; This function uses a reentrant model
 45007 ;;
 45008                           
 45009                           	psect	text165
 45010  002146                     __ptext165:
 45011                           	opt callstack 0
 45012  002146                     _TMR3_Initialize:
 45013                           	opt callstack 13
 45014                           
 45015                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 45016                           
 45017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45018                           ;incstack = 0
 45019  002146  6AA7               	clrf	167,c	;volatile
 45020                           
 45021                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 45022  002148  6AA8               	clrf	168,c	;volatile
 45023                           
 45024                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 45025  00214A  0E01               	movlw	1
 45026  00214C  6EA9               	movwf	169,c	;volatile
 45027                           
 45028                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 45029  00214E  0E3C               	movlw	60
 45030  002150  6EA5               	movwf	165,c	;volatile
 45031                           
 45032                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 45033  002152  0EB0               	movlw	176
 45034  002154  6EA4               	movwf	164,c	;volatile
 45035                           
 45036                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 45037  002156  50A4               	movf	164,w,c	;volatile
 45038  002158  006F FE94  F02A    	movff	16293,btemp	;volatile
 45039  00215E  6A2B               	clrf	(btemp+1)^0,c
 45040  002160  0060  F0A8  F02B   	movff	btemp,btemp+1
 45041  002166  6A2A               	clrf	btemp^0,c
 45042  002168  102A               	iorwf	btemp^0,w,c
 45043  00216A  0100               	movlb	0	; () banked
 45044  00216C  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 45045  00216E  502B               	movf	(btemp+1)^0,w,c
 45046  002170  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 45047                           
 45048                           ; BSR set to: 0
 45049                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 45050  002172  0139               	movlb	57	; () banked
 45051  002174  9DA6               	bcf	166,6,b	;volatile
 45052                           
 45053                           ; BSR set to: 57
 45054                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 45055  002176  8D96               	bsf	150,6,b	;volatile
 45056                           
 45057                           ; BSR set to: 57
 45058                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 45059  002178  0EF6               	movlw	low _TMR3_DefaultInterruptHandler
 45060  00217A  6EE6               	movwf	postinc1,c
 45061  00217C  0EDE               	movlw	high _TMR3_DefaultInterruptHandler
 45062  00217E  6EE6               	movwf	postinc1,c
 45063  002180  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 45064  002182  6EE6               	movwf	postinc1,c
 45065  002184  EC9D  F014         	call	_TMR3_SetInterruptHandler	;wreg free
 45066                           
 45067                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 45068  002188  0E31               	movlw	49
 45069  00218A  6EA6               	movwf	166,c	;volatile
 45070                           
 45071                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45072  00218C  0012               	return		;funcret
 45073  00218E                     __end_of_TMR3_Initialize:
 45074                           	opt callstack 0
 45075                           
 45076 ;; *************** function _TMR3_SetInterruptHandler *****************
 45077 ;; Defined at:
 45078 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 45079 ;; Parameters:    Size  Location     Type
 45080 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45081 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 45082 ;; Auto vars:     Size  Location     Type
 45083 ;;		None
 45084 ;; Return value:  Size  Location     Type
 45085 ;;                  1  [STACK] void 
 45086 ;; Registers used:
 45087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45088 ;; Tracked objects:
 45089 ;;		On entry : 0/1
 45090 ;;		On exit  : 0/0
 45091 ;;		Unchanged: 0/0
 45092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45097 ;;Total ram usage:        0 bytes
 45098 ;; Hardware stack levels used:    1
 45099 ;; Hardware stack levels required when called:   15
 45100 ;; This function calls:
 45101 ;;		Nothing
 45102 ;; This function is called by:
 45103 ;;		_TMR3_Initialize
 45104 ;;		_init_bsoc
 45105 ;; This function uses a reentrant model
 45106 ;;
 45107                           
 45108                           	psect	text166
 45109  00293A                     __ptext166:
 45110                           	opt callstack 0
 45111  00293A                     _TMR3_SetInterruptHandler:
 45112                           	opt callstack 14
 45113                           
 45114                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 45115                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45116                           
 45117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45118                           ;incstack = 0
 45119  00293A  50E1               	movf	fsr1l,w,c
 45120  00293C  0FFD               	addlw	-3
 45121  00293E  6ED9               	movwf	fsr2l,c
 45122  002940  50E2               	movf	fsr1h,w,c
 45123  002942  6EDA               	movwf	fsr2h,c
 45124  002944  0EFF               	movlw	255
 45125  002946  22DA               	addwfc	fsr2h,f,c
 45126  002948  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 45127  00294E  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 45128  002954  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 45129                           
 45130                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45131  00295A  52E5               	movf	postdec1,f,c
 45132  00295C  52E5               	movf	postdec1,f,c
 45133  00295E  52E5               	movf	postdec1,f,c
 45134  002960  0012               	return		;funcret
 45135  002962                     __end_of_TMR3_SetInterruptHandler:
 45136                           	opt callstack 0
 45137                           
 45138 ;; *************** function _TMR2_Initialize *****************
 45139 ;; Defined at:
 45140 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 45141 ;; Parameters:    Size  Location     Type
 45142 ;;		None
 45143 ;; Auto vars:     Size  Location     Type
 45144 ;;		None
 45145 ;; Return value:  Size  Location     Type
 45146 ;;                  1  [STACK] void 
 45147 ;; Registers used:
 45148 ;;		wreg, status,2
 45149 ;; Tracked objects:
 45150 ;;		On entry : 0/0
 45151 ;;		On exit  : 3F/39
 45152 ;;		Unchanged: 0/0
 45153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45158 ;;Total ram usage:        0 bytes
 45159 ;; Hardware stack levels used:    1
 45160 ;; Hardware stack levels required when called:   15
 45161 ;; This function calls:
 45162 ;;		Nothing
 45163 ;; This function is called by:
 45164 ;;		_SYSTEM_Initialize
 45165 ;; This function uses a reentrant model
 45166 ;;
 45167                           
 45168                           	psect	text167
 45169  002CE2                     __ptext167:
 45170                           	opt callstack 0
 45171  002CE2                     _TMR2_Initialize:
 45172                           	opt callstack 14
 45173                           
 45174                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 45175                           
 45176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45177                           ;incstack = 0
 45178  002CE2  0E01               	movlw	1
 45179  002CE4  6EAE               	movwf	174,c	;volatile
 45180                           
 45181                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 45182  002CE6  6AAD               	clrf	173,c	;volatile
 45183                           
 45184                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 45185  002CE8  6AAF               	clrf	175,c	;volatile
 45186                           
 45187                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 45188  002CEA  0E63               	movlw	99
 45189  002CEC  6EAB               	movwf	171,c	;volatile
 45190                           
 45191                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 45192  002CEE  6AAA               	clrf	170,c	;volatile
 45193                           
 45194                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 45195  002CF0  0139               	movlb	57	; () banked
 45196  002CF2  95A4               	bcf	164,2,b	;volatile
 45197                           
 45198                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 45199  002CF4  0EC0               	movlw	192
 45200  002CF6  6EAC               	movwf	172,c	;volatile
 45201                           
 45202                           ; BSR set to: 57
 45203                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45204  002CF8  0012               	return		;funcret
 45205  002CFA                     __end_of_TMR2_Initialize:
 45206                           	opt callstack 0
 45207                           
 45208 ;; *************** function _SPI1_Initialize *****************
 45209 ;; Defined at:
 45210 ;;		line 64 in file "mcc_generated_files/spi1.c"
 45211 ;; Parameters:    Size  Location     Type
 45212 ;;		None
 45213 ;; Auto vars:     Size  Location     Type
 45214 ;;		None
 45215 ;; Return value:  Size  Location     Type
 45216 ;;                  1  [STACK] void 
 45217 ;; Registers used:
 45218 ;;		wreg, status,2
 45219 ;; Tracked objects:
 45220 ;;		On entry : 3F/39
 45221 ;;		On exit  : 3F/3D
 45222 ;;		Unchanged: 0/0
 45223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45228 ;;Total ram usage:        0 bytes
 45229 ;; Hardware stack levels used:    1
 45230 ;; Hardware stack levels required when called:   15
 45231 ;; This function calls:
 45232 ;;		Nothing
 45233 ;; This function is called by:
 45234 ;;		_SYSTEM_Initialize
 45235 ;; This function uses a reentrant model
 45236 ;;
 45237                           
 45238                           	psect	text168
 45239  002D10                     __ptext168:
 45240                           	opt callstack 0
 45241  002D10                     _SPI1_Initialize:
 45242                           	opt callstack 14
 45243                           
 45244                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 45245                           
 45246                           ; BSR set to: 57
 45247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45248                           ;incstack = 0
 45249  002D10  0E40               	movlw	64
 45250  002D12  013D               	movlb	61	; () banked
 45251  002D14  6F15               	movwf	21,b	;volatile
 45252                           
 45253                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 45254  002D16  0E03               	movlw	3
 45255  002D18  6F16               	movwf	22,b	;volatile
 45256                           
 45257                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 45258  002D1A  0E4F               	movlw	79
 45259  002D1C  6F19               	movwf	25,b	;volatile
 45260                           
 45261                           ; BSR set to: 61
 45262                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 45263  002D1E  6B1C               	clrf	28,b	;volatile
 45264                           
 45265                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 45266  002D20  0E83               	movlw	131
 45267  002D22  6F14               	movwf	20,b	;volatile
 45268                           
 45269                           ; BSR set to: 61
 45270                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45271  002D24  0012               	return		;funcret
 45272  002D26                     __end_of_SPI1_Initialize:
 45273                           	opt callstack 0
 45274                           
 45275 ;; *************** function _PWM8_Initialize *****************
 45276 ;; Defined at:
 45277 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 45278 ;; Parameters:    Size  Location     Type
 45279 ;;		None
 45280 ;; Auto vars:     Size  Location     Type
 45281 ;;		None
 45282 ;; Return value:  Size  Location     Type
 45283 ;;                  1  [STACK] void 
 45284 ;; Registers used:
 45285 ;;		wreg, status,2
 45286 ;; Tracked objects:
 45287 ;;		On entry : 3F/39
 45288 ;;		On exit  : 3F/3F
 45289 ;;		Unchanged: 0/0
 45290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45295 ;;Total ram usage:        0 bytes
 45296 ;; Hardware stack levels used:    1
 45297 ;; Hardware stack levels required when called:   15
 45298 ;; This function calls:
 45299 ;;		Nothing
 45300 ;; This function is called by:
 45301 ;;		_SYSTEM_Initialize
 45302 ;; This function uses a reentrant model
 45303 ;;
 45304                           
 45305                           	psect	text169
 45306  002D26                     __ptext169:
 45307                           	opt callstack 0
 45308  002D26                     _PWM8_Initialize:
 45309                           	opt callstack 14
 45310                           
 45311                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 45312                           
 45313                           ; BSR set to: 61
 45314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45315                           ;incstack = 0
 45316  002D26  0E80               	movlw	128
 45317  002D28  6E62               	movwf	98,c	;volatile
 45318                           
 45319                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 45320  002D2A  6A61               	clrf	97,c	;volatile
 45321                           
 45322                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 45323  002D2C  0E40               	movlw	64
 45324  002D2E  6E60               	movwf	96,c	;volatile
 45325                           
 45326                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 45327  002D30  013F               	movlb	63	; () banked
 45328  002D32  515F               	movf	95,w,b	;volatile
 45329  002D34  0B3F               	andlw	-193
 45330  002D36  0940               	iorlw	64
 45331  002D38  6F5F               	movwf	95,b	;volatile
 45332                           
 45333                           ; BSR set to: 63
 45334                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45335  002D3A  0012               	return		;funcret
 45336  002D3C                     __end_of_PWM8_Initialize:
 45337                           	opt callstack 0
 45338                           
 45339 ;; *************** function _PMD_Initialize *****************
 45340 ;; Defined at:
 45341 ;;		line 91 in file "mcc_generated_files/mcc.c"
 45342 ;; Parameters:    Size  Location     Type
 45343 ;;		None
 45344 ;; Auto vars:     Size  Location     Type
 45345 ;;		None
 45346 ;; Return value:  Size  Location     Type
 45347 ;;                  1  [STACK] void 
 45348 ;; Registers used:
 45349 ;;		None
 45350 ;; Tracked objects:
 45351 ;;		On entry : 3F/39
 45352 ;;		On exit  : 3F/39
 45353 ;;		Unchanged: 0/0
 45354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45359 ;;Total ram usage:        0 bytes
 45360 ;; Hardware stack levels used:    1
 45361 ;; Hardware stack levels required when called:   15
 45362 ;; This function calls:
 45363 ;;		Nothing
 45364 ;; This function is called by:
 45365 ;;		_SYSTEM_Initialize
 45366 ;; This function uses a reentrant model
 45367 ;;
 45368                           
 45369                           	psect	text170
 45370  002D52                     __ptext170:
 45371                           	opt callstack 0
 45372  002D52                     _PMD_Initialize:
 45373                           	opt callstack 14
 45374                           
 45375                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 45376                           
 45377                           ; BSR set to: 63
 45378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45379                           ;incstack = 0
 45380  002D52  0139               	movlb	57	; () banked
 45381  002D54  6BC0               	clrf	192,b	;volatile
 45382                           
 45383                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 45384  002D56  6BC1               	clrf	193,b	;volatile
 45385                           
 45386                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 45387  002D58  6BC2               	clrf	194,b	;volatile
 45388                           
 45389                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 45390  002D5A  6BC3               	clrf	195,b	;volatile
 45391                           
 45392                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 45393  002D5C  6BC4               	clrf	196,b	;volatile
 45394                           
 45395                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 45396  002D5E  6BC5               	clrf	197,b	;volatile
 45397                           
 45398                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 45399  002D60  6BC6               	clrf	198,b	;volatile
 45400                           
 45401                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 45402  002D62  6BC7               	clrf	199,b	;volatile
 45403                           
 45404                           ; BSR set to: 57
 45405                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45406  002D64  0012               	return		;funcret
 45407  002D66                     __end_of_PMD_Initialize:
 45408                           	opt callstack 0
 45409                           
 45410 ;; *************** function _PIN_MANAGER_Initialize *****************
 45411 ;; Defined at:
 45412 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 45413 ;; Parameters:    Size  Location     Type
 45414 ;;		None
 45415 ;; Auto vars:     Size  Location     Type
 45416 ;;		None
 45417 ;; Return value:  Size  Location     Type
 45418 ;;                  1  [STACK] void 
 45419 ;; Registers used:
 45420 ;;		wreg, status,2
 45421 ;; Tracked objects:
 45422 ;;		On entry : 3F/39
 45423 ;;		On exit  : 3F/3A
 45424 ;;		Unchanged: 0/0
 45425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45430 ;;Total ram usage:        0 bytes
 45431 ;; Hardware stack levels used:    1
 45432 ;; Hardware stack levels required when called:   15
 45433 ;; This function calls:
 45434 ;;		Nothing
 45435 ;; This function is called by:
 45436 ;;		_SYSTEM_Initialize
 45437 ;; This function uses a reentrant model
 45438 ;;
 45439                           
 45440                           	psect	text171
 45441  001336                     __ptext171:
 45442                           	opt callstack 0
 45443  001336                     _PIN_MANAGER_Initialize:
 45444                           	opt callstack 14
 45445                           
 45446                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 45447                           
 45448                           ; BSR set to: 57
 45449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45450                           ;incstack = 0
 45451  001336  0E07               	movlw	7
 45452  001338  6EBE               	movwf	190,c	;volatile
 45453                           
 45454                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 45455  00133A  6ABD               	clrf	189,c	;volatile
 45456                           
 45457                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 45458  00133C  6ABA               	clrf	186,c	;volatile
 45459                           
 45460                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 45461  00133E  0E23               	movlw	35
 45462  001340  6EBF               	movwf	191,c	;volatile
 45463                           
 45464                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 45465  001342  6ABB               	clrf	187,c	;volatile
 45466                           
 45467                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 45468  001344  0E07               	movlw	7
 45469  001346  6EBC               	movwf	188,c	;volatile
 45470                           
 45471                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 45472  001348  6AC6               	clrf	198,c	;volatile
 45473                           
 45474                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 45475  00134A  0E0C               	movlw	12
 45476  00134C  6EC7               	movwf	199,c	;volatile
 45477                           
 45478                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 45479  00134E  68C2               	setf	194,c	;volatile
 45480                           
 45481                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 45482  001350  0EBF               	movlw	191
 45483  001352  6EC3               	movwf	195,c	;volatile
 45484                           
 45485                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 45486  001354  0E90               	movlw	144
 45487  001356  6EC4               	movwf	196,c	;volatile
 45488                           
 45489                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 45490  001358  0E0C               	movlw	12
 45491  00135A  6EC5               	movwf	197,c	;volatile
 45492                           
 45493                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 45494  00135C  013A               	movlb	58	; () banked
 45495  00135E  6B70               	clrf	112,b	;volatile
 45496                           
 45497                           ; BSR set to: 58
 45498                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 45499  001360  6B60               	clrf	96,b	;volatile
 45500                           
 45501                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 45502  001362  0E3C               	movlw	60
 45503  001364  6F50               	movwf	80,b	;volatile
 45504                           
 45505                           ; BSR set to: 58
 45506                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 45507  001366  6B80               	clrf	128,b	;volatile
 45508                           
 45509                           ; BSR set to: 58
 45510                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 45511  001368  6B90               	clrf	144,b	;volatile
 45512                           
 45513                           ; BSR set to: 58
 45514                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 45515  00136A  6940               	setf	64,b	;volatile
 45516                           
 45517                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 45518  00136C  0E0C               	movlw	12
 45519  00136E  6F71               	movwf	113,b	;volatile
 45520                           
 45521                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 45522  001370  0E0C               	movlw	12
 45523  001372  6F91               	movwf	145,b	;volatile
 45524                           
 45525                           ; BSR set to: 58
 45526                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 45527  001374  6B81               	clrf	129,b	;volatile
 45528                           
 45529                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 45530  001376  0E83               	movlw	131
 45531  001378  6F51               	movwf	81,b	;volatile
 45532                           
 45533                           ; BSR set to: 58
 45534                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 45535  00137A  6B41               	clrf	65,b	;volatile
 45536                           
 45537                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 45538  00137C  0E97               	movlw	151
 45539  00137E  6F61               	movwf	97,b	;volatile
 45540                           
 45541                           ; BSR set to: 58
 45542                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 45543  001380  6B82               	clrf	130,b	;volatile
 45544                           
 45545                           ; BSR set to: 58
 45546                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 45547  001382  6B92               	clrf	146,b	;volatile
 45548                           
 45549                           ; BSR set to: 58
 45550                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 45551  001384  6B42               	clrf	66,b	;volatile
 45552                           
 45553                           ; BSR set to: 58
 45554                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 45555  001386  6B52               	clrf	82,b	;volatile
 45556                           
 45557                           ; BSR set to: 58
 45558                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 45559  001388  6B62               	clrf	98,b	;volatile
 45560                           
 45561                           ; BSR set to: 58
 45562                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 45563  00138A  6B72               	clrf	114,b	;volatile
 45564                           
 45565                           ; BSR set to: 58
 45566                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 45567  00138C  6943               	setf	67,b	;volatile
 45568                           
 45569                           ; BSR set to: 58
 45570                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 45571  00138E  6953               	setf	83,b	;volatile
 45572                           
 45573                           ; BSR set to: 58
 45574                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 45575  001390  6963               	setf	99,b	;volatile
 45576                           
 45577                           ; BSR set to: 58
 45578                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 45579  001392  6973               	setf	115,b	;volatile
 45580                           
 45581                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 45582  001394  0E07               	movlw	7
 45583  001396  6F83               	movwf	131,b	;volatile
 45584                           
 45585                           ; BSR set to: 58
 45586                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 45587  001398  6993               	setf	147,b	;volatile
 45588                           
 45589                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 45590  00139A  0E0F               	movlw	15
 45591  00139C  6FE8               	movwf	232,b	;volatile
 45592                           
 45593                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 45594  00139E  0E13               	movlw	19
 45595  0013A0  6FDE               	movwf	222,b	;volatile
 45596                           
 45597                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 45598  0013A2  0E16               	movlw	22
 45599  0013A4  6F0E               	movwf	14,b	;volatile
 45600                           
 45601                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 45602  0013A6  0E1E               	movlw	30
 45603  0013A8  6F13               	movwf	19,b	;volatile
 45604                           
 45605                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 45606  0013AA  0E08               	movlw	8
 45607  0013AC  6FC0               	movwf	192,b	;volatile
 45608                           
 45609                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 45610  0013AE  0E10               	movlw	16
 45611  0013B0  6F19               	movwf	25,b	;volatile
 45612                           
 45613                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 45614  0013B2  0E09               	movlw	9
 45615  0013B4  6FC1               	movwf	193,b	;volatile
 45616                           
 45617                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 45618  0013B6  0E1F               	movlw	31
 45619  0013B8  6F15               	movwf	21,b	;volatile
 45620                           
 45621                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 45622  0013BA  0E13               	movlw	19
 45623  0013BC  6F16               	movwf	22,b	;volatile
 45624                           
 45625                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 45626  0013BE  0E17               	movlw	23
 45627  0013C0  6FE5               	movwf	229,b	;volatile
 45628                           
 45629                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 45630  0013C2  0E14               	movlw	20
 45631  0013C4  6FDF               	movwf	223,b	;volatile
 45632                           
 45633                           ; BSR set to: 58
 45634                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 45635  0013C6  0012               	return		;funcret
 45636  0013C8                     __end_of_PIN_MANAGER_Initialize:
 45637                           	opt callstack 0
 45638                           
 45639 ;; *************** function _OSCILLATOR_Initialize *****************
 45640 ;; Defined at:
 45641 ;;		line 73 in file "mcc_generated_files/mcc.c"
 45642 ;; Parameters:    Size  Location     Type
 45643 ;;		None
 45644 ;; Auto vars:     Size  Location     Type
 45645 ;;		None
 45646 ;; Return value:  Size  Location     Type
 45647 ;;                  1  [STACK] void 
 45648 ;; Registers used:
 45649 ;;		wreg, status,2
 45650 ;; Tracked objects:
 45651 ;;		On entry : 3F/3A
 45652 ;;		On exit  : 3F/39
 45653 ;;		Unchanged: 0/0
 45654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45659 ;;Total ram usage:        0 bytes
 45660 ;; Hardware stack levels used:    1
 45661 ;; Hardware stack levels required when called:   15
 45662 ;; This function calls:
 45663 ;;		Nothing
 45664 ;; This function is called by:
 45665 ;;		_SYSTEM_Initialize
 45666 ;; This function uses a reentrant model
 45667 ;;
 45668                           
 45669                           	psect	text172
 45670  002D3C                     __ptext172:
 45671                           	opt callstack 0
 45672  002D3C                     _OSCILLATOR_Initialize:
 45673                           	opt callstack 14
 45674                           
 45675                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 45676                           
 45677                           ; BSR set to: 58
 45678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45679                           ;incstack = 0
 45680  002D3C  0E20               	movlw	32
 45681  002D3E  0139               	movlb	57	; () banked
 45682  002D40  6FD9               	movwf	217,b	;volatile
 45683                           
 45684                           ; BSR set to: 57
 45685                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 45686  002D42  6BDB               	clrf	219,b	;volatile
 45687                           
 45688                           ; BSR set to: 57
 45689                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 45690  002D44  6BDD               	clrf	221,b	;volatile
 45691                           
 45692                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 45693  002D46  0E02               	movlw	2
 45694  002D48  6FDF               	movwf	223,b	;volatile
 45695                           
 45696                           ; BSR set to: 57
 45697                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 45698  002D4A  6BDE               	clrf	222,b	;volatile
 45699  002D4C                     l171:
 45700                           
 45701                           ; BSR set to: 57
 45702                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 45703  002D4C  B1DC               	btfsc	220,0,b	;volatile
 45704  002D4E  0012               	return	
 45705  002D50  D7FD               	goto	l171
 45706  002D52                     __end_of_OSCILLATOR_Initialize:
 45707                           	opt callstack 0
 45708                           
 45709 ;; *************** function _INTERRUPT_Initialize *****************
 45710 ;; Defined at:
 45711 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 45712 ;; Parameters:    Size  Location     Type
 45713 ;;		None
 45714 ;; Auto vars:     Size  Location     Type
 45715 ;;  state           1  [STACK] _Bool 
 45716 ;; Return value:  Size  Location     Type
 45717 ;;                  1  [STACK] void 
 45718 ;; Registers used:
 45719 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 45720 ;; Tracked objects:
 45721 ;;		On entry : 0/0
 45722 ;;		On exit  : 3F/39
 45723 ;;		Unchanged: 0/0
 45724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45729 ;;Total ram usage:        0 bytes
 45730 ;; Hardware stack levels used:    1
 45731 ;; Hardware stack levels required when called:   15
 45732 ;; This function calls:
 45733 ;;		Nothing
 45734 ;; This function is called by:
 45735 ;;		_SYSTEM_Initialize
 45736 ;; This function uses a reentrant model
 45737 ;;
 45738                           
 45739                           	psect	text173
 45740  001ACC                     __ptext173:
 45741                           	opt callstack 0
 45742  001ACC                     _INTERRUPT_Initialize:
 45743                           	opt callstack 0
 45744                           
 45745                           ; BSR set to: 57
 45746                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45747  001ACC  52E6               	movf	postinc1,f,c
 45748                           
 45749                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 45750                           
 45751                           ;incstack = 0
 45752  001ACE  8AD2               	bsf	210,5,c	;volatile
 45753                           
 45754                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 45755  001AD0  AED2               	btfss	16338,7,c	;volatile
 45756  001AD2  D003               	goto	u12480
 45757  001AD4  6A35               	clrf	(btemp+11)^0,c
 45758  001AD6  2A35               	incf	(btemp+11)^0,f,c
 45759  001AD8  D001               	goto	u12498
 45760  001ADA                     u12480:
 45761  001ADA  6A35               	clrf	(btemp+11)^0,c
 45762  001ADC                     u12498:
 45763                           
 45764                           ;stkvar	_state @ sp[(-1)+0]
 45765  001ADC  0EFF               	movlw	-1
 45766  001ADE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45767                           
 45768                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 45769  001AE4  9ED2               	bcf	16338,7,c	;volatile
 45770                           
 45771                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 45772  001AE6  0E55               	movlw	85
 45773  001AE8  6ED4               	movwf	212,c	;volatile
 45774                           
 45775                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 45776  001AEA  0EAA               	movlw	170
 45777  001AEC  6ED4               	movwf	212,c	;volatile
 45778                           
 45779                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 45780  001AEE  90D4               	bcf	212,0,c	;volatile
 45781                           
 45782                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 45783  001AF0  0138               	movlb	56	; () banked
 45784  001AF2  6B9F               	clrf	159,b	;volatile
 45785                           
 45786                           ; BSR set to: 56
 45787                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 45788  001AF4  6B9E               	clrf	158,b	;volatile
 45789                           
 45790                           ; BSR set to: 56
 45791                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 45792  001AF6  0E08               	movlw	8
 45793  001AF8  6F9D               	movwf	157,b	;volatile
 45794                           
 45795                           ; BSR set to: 56
 45796                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 45797  001AFA  0E55               	movlw	85
 45798  001AFC  6ED4               	movwf	212,c	;volatile
 45799                           
 45800                           ; BSR set to: 56
 45801                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 45802  001AFE  0EAA               	movlw	170
 45803  001B00  6ED4               	movwf	212,c	;volatile
 45804                           
 45805                           ; BSR set to: 56
 45806                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 45807  001B02  80D4               	bsf	212,0,c	;volatile
 45808                           
 45809                           ; BSR set to: 56
 45810                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 45811                           ;stkvar	_state @ sp[(-1)+0]
 45812  001B04  0EFF               	movlw	-1
 45813  001B06  B0E3               	btfsc	plusw1,0,c
 45814  001B08  D002               	bra	u12505
 45815  001B0A  9ED2               	bcf	16338,7,c	;volatile
 45816  001B0C  D001               	bra	u12506
 45817  001B0E                     u12505:
 45818  001B0E  8ED2               	bsf	16338,7,c	;volatile
 45819  001B10                     u12506:
 45820                           
 45821                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 45822  001B10  0139               	movlb	57	; () banked
 45823  001B12  8782               	bsf	130,3,b	;volatile
 45824                           
 45825                           ; BSR set to: 57
 45826                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 45827  001B14  8382               	bsf	130,1,b	;volatile
 45828                           
 45829                           ; BSR set to: 57
 45830                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 45831  001B16  8182               	bsf	130,0,b	;volatile
 45832                           
 45833                           ; BSR set to: 57
 45834                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 45835  001B18  8582               	bsf	130,2,b	;volatile
 45836                           
 45837                           ; BSR set to: 57
 45838                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 45839  001B1A  8786               	bsf	134,3,b	;volatile
 45840                           
 45841                           ; BSR set to: 57
 45842                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 45843  001B1C  8586               	bsf	134,2,b	;volatile
 45844                           
 45845                           ; BSR set to: 57
 45846                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 45847  001B1E  8783               	bsf	131,3,b	;volatile
 45848                           
 45849                           ; BSR set to: 57
 45850                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 45851  001B20  8181               	bsf	129,0,b	;volatile
 45852                           
 45853                           ; BSR set to: 57
 45854                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 45855  001B22  9185               	bcf	133,0,b	;volatile
 45856                           
 45857                           ; BSR set to: 57
 45858                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 45859  001B24  8189               	bsf	137,0,b	;volatile
 45860                           
 45861                           ; BSR set to: 57
 45862                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 45863  001B26  9D88               	bcf	136,6,b	;volatile
 45864                           
 45865                           ; BSR set to: 57
 45866                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 45867  001B28  8581               	bsf	129,2,b	;volatile
 45868                           
 45869                           ; BSR set to: 57
 45870                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 45871  001B2A  8781               	bsf	129,3,b	;volatile
 45872                           
 45873                           ; BSR set to: 57
 45874                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 45875  001B2C  9D86               	bcf	134,6,b	;volatile
 45876                           
 45877                           ; BSR set to: 57
 45878                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 45879  001B2E  52E5               	movf	postdec1,f,c
 45880  001B30  0012               	return		;funcret
 45881  001B32                     __end_of_INTERRUPT_Initialize:
 45882                           	opt callstack 0
 45883                           
 45884 ;; *************** function _FVR_Initialize *****************
 45885 ;; Defined at:
 45886 ;;		line 58 in file "mcc_generated_files/fvr.c"
 45887 ;; Parameters:    Size  Location     Type
 45888 ;;		None
 45889 ;; Auto vars:     Size  Location     Type
 45890 ;;		None
 45891 ;; Return value:  Size  Location     Type
 45892 ;;                  1  [STACK] void 
 45893 ;; Registers used:
 45894 ;;		wreg, status,2
 45895 ;; Tracked objects:
 45896 ;;		On entry : 3F/39
 45897 ;;		On exit  : 3F/3E
 45898 ;;		Unchanged: 0/0
 45899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45904 ;;Total ram usage:        0 bytes
 45905 ;; Hardware stack levels used:    1
 45906 ;; Hardware stack levels required when called:   15
 45907 ;; This function calls:
 45908 ;;		Nothing
 45909 ;; This function is called by:
 45910 ;;		_SYSTEM_Initialize
 45911 ;; This function uses a reentrant model
 45912 ;;
 45913                           
 45914                           	psect	text174
 45915  002E7A                     __ptext174:
 45916                           	opt callstack 0
 45917  002E7A                     _FVR_Initialize:
 45918                           	opt callstack 14
 45919                           
 45920                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 45921                           
 45922                           ; BSR set to: 57
 45923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45924                           ;incstack = 0
 45925  002E7A  0EAF               	movlw	175
 45926  002E7C  013E               	movlb	62	; () banked
 45927  002E7E  6FC1               	movwf	193,b	;volatile
 45928                           
 45929                           ; BSR set to: 62
 45930                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45931  002E80  0012               	return		;funcret
 45932  002E82                     __end_of_FVR_Initialize:
 45933                           	opt callstack 0
 45934                           
 45935 ;; *************** function _EXT_INT_Initialize *****************
 45936 ;; Defined at:
 45937 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 45938 ;; Parameters:    Size  Location     Type
 45939 ;;		None
 45940 ;; Auto vars:     Size  Location     Type
 45941 ;;		None
 45942 ;; Return value:  Size  Location     Type
 45943 ;;                  1  [STACK] void 
 45944 ;; Registers used:
 45945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45946 ;; Tracked objects:
 45947 ;;		On entry : 3F/3F
 45948 ;;		On exit  : 3F/39
 45949 ;;		Unchanged: 0/0
 45950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45955 ;;Total ram usage:        0 bytes
 45956 ;; Hardware stack levels used:    1
 45957 ;; Hardware stack levels required when called:   16
 45958 ;; This function calls:
 45959 ;;		_INT0_SetInterruptHandler
 45960 ;;		_INT1_SetInterruptHandler
 45961 ;; This function is called by:
 45962 ;;		_SYSTEM_Initialize
 45963 ;; This function uses a reentrant model
 45964 ;;
 45965                           
 45966                           	psect	text175
 45967  00261E                     __ptext175:
 45968                           	opt callstack 0
 45969  00261E                     _EXT_INT_Initialize:
 45970                           	opt callstack 13
 45971                           
 45972                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 45973                           
 45974                           ; BSR set to: 62
 45975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45976                           ;incstack = 0
 45977  00261E  0139               	movlb	57	; () banked
 45978  002620  91A1               	bcf	161,0,b	;volatile
 45979                           
 45980                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 45981  002622  90D2               	bcf	210,0,c	;volatile
 45982                           
 45983                           ; BSR set to: 57
 45984                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 45985  002624  0EA6               	movlw	low _INT0_DefaultInterruptHandler
 45986  002626  6EE6               	movwf	postinc1,c
 45987  002628  0E2E               	movlw	high _INT0_DefaultInterruptHandler
 45988  00262A  6EE6               	movwf	postinc1,c
 45989  00262C  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 45990  00262E  6EE6               	movwf	postinc1,c
 45991  002630  ECC5  F014         	call	_INT0_SetInterruptHandler	;wreg free
 45992                           
 45993                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 45994  002634  0139               	movlb	57	; () banked
 45995  002636  8191               	bsf	145,0,b	;volatile
 45996                           
 45997                           ; BSR set to: 57
 45998                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 45999  002638  91A5               	bcf	165,0,b	;volatile
 46000                           
 46001                           ; BSR set to: 57
 46002                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 46003  00263A  92D2               	bcf	210,1,c	;volatile
 46004                           
 46005                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 46006  00263C  0EFE               	movlw	low _INT1_DefaultInterruptHandler
 46007  00263E  6EE6               	movwf	postinc1,c
 46008  002640  0EFF               	movlw	high _INT1_DefaultInterruptHandler
 46009  002642  6EE6               	movwf	postinc1,c
 46010  002644  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 46011  002646  6EE6               	movwf	postinc1,c
 46012  002648  ECB1  F014         	call	_INT1_SetInterruptHandler	;wreg free
 46013                           
 46014                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 46015  00264C  0139               	movlb	57	; () banked
 46016  00264E  8195               	bsf	149,0,b	;volatile
 46017                           
 46018                           ; BSR set to: 57
 46019                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46020  002650  0012               	return		;funcret
 46021  002652                     __end_of_EXT_INT_Initialize:
 46022                           	opt callstack 0
 46023                           
 46024 ;; *************** function _INT1_SetInterruptHandler *****************
 46025 ;; Defined at:
 46026 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 46027 ;; Parameters:    Size  Location     Type
 46028 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46029 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 46030 ;; Auto vars:     Size  Location     Type
 46031 ;;		None
 46032 ;; Return value:  Size  Location     Type
 46033 ;;                  1  [STACK] void 
 46034 ;; Registers used:
 46035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46036 ;; Tracked objects:
 46037 ;;		On entry : 3F/39
 46038 ;;		On exit  : 0/0
 46039 ;;		Unchanged: 0/0
 46040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46045 ;;Total ram usage:        0 bytes
 46046 ;; Hardware stack levels used:    1
 46047 ;; Hardware stack levels required when called:   15
 46048 ;; This function calls:
 46049 ;;		Nothing
 46050 ;; This function is called by:
 46051 ;;		_EXT_INT_Initialize
 46052 ;;		_start_switch_handler
 46053 ;; This function uses a reentrant model
 46054 ;;
 46055                           
 46056                           	psect	text176
 46057  002962                     __ptext176:
 46058                           	opt callstack 0
 46059  002962                     _INT1_SetInterruptHandler:
 46060                           	opt callstack 14
 46061                           
 46062                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 46063                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46064                           
 46065                           ; BSR set to: 57
 46066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46067                           ;incstack = 0
 46068  002962  50E1               	movf	fsr1l,w,c
 46069  002964  0FFD               	addlw	-3
 46070  002966  6ED9               	movwf	fsr2l,c
 46071  002968  50E2               	movf	fsr1h,w,c
 46072  00296A  6EDA               	movwf	fsr2h,c
 46073  00296C  0EFF               	movlw	255
 46074  00296E  22DA               	addwfc	fsr2h,f,c
 46075  002970  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 46076  002976  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 46077  00297C  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 46078                           
 46079                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46080  002982  52E5               	movf	postdec1,f,c
 46081  002984  52E5               	movf	postdec1,f,c
 46082  002986  52E5               	movf	postdec1,f,c
 46083  002988  0012               	return		;funcret
 46084  00298A                     __end_of_INT1_SetInterruptHandler:
 46085                           	opt callstack 0
 46086                           
 46087 ;; *************** function _INT0_SetInterruptHandler *****************
 46088 ;; Defined at:
 46089 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 46090 ;; Parameters:    Size  Location     Type
 46091 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46092 ;;		 -> INT0_DefaultInterruptHandler(1), 
 46093 ;; Auto vars:     Size  Location     Type
 46094 ;;		None
 46095 ;; Return value:  Size  Location     Type
 46096 ;;                  1  [STACK] void 
 46097 ;; Registers used:
 46098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46099 ;; Tracked objects:
 46100 ;;		On entry : 3F/39
 46101 ;;		On exit  : 0/0
 46102 ;;		Unchanged: 0/0
 46103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46108 ;;Total ram usage:        0 bytes
 46109 ;; Hardware stack levels used:    1
 46110 ;; Hardware stack levels required when called:   15
 46111 ;; This function calls:
 46112 ;;		Nothing
 46113 ;; This function is called by:
 46114 ;;		_EXT_INT_Initialize
 46115 ;; This function uses a reentrant model
 46116 ;;
 46117                           
 46118                           	psect	text177
 46119  00298A                     __ptext177:
 46120                           	opt callstack 0
 46121  00298A                     _INT0_SetInterruptHandler:
 46122                           	opt callstack 13
 46123                           
 46124                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 46125                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46126                           
 46127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46128                           ;incstack = 0
 46129  00298A  50E1               	movf	fsr1l,w,c
 46130  00298C  0FFD               	addlw	-3
 46131  00298E  6ED9               	movwf	fsr2l,c
 46132  002990  50E2               	movf	fsr1h,w,c
 46133  002992  6EDA               	movwf	fsr2h,c
 46134  002994  0EFF               	movlw	255
 46135  002996  22DA               	addwfc	fsr2h,f,c
 46136  002998  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 46137  00299E  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 46138  0029A4  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 46139                           
 46140                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46141  0029AA  52E5               	movf	postdec1,f,c
 46142  0029AC  52E5               	movf	postdec1,f,c
 46143  0029AE  52E5               	movf	postdec1,f,c
 46144  0029B0  0012               	return		;funcret
 46145  0029B2                     __end_of_INT0_SetInterruptHandler:
 46146                           	opt callstack 0
 46147                           
 46148 ;; *************** function _DMA2_Initialize *****************
 46149 ;; Defined at:
 46150 ;;		line 61 in file "mcc_generated_files/dma2.c"
 46151 ;; Parameters:    Size  Location     Type
 46152 ;;		None
 46153 ;; Auto vars:     Size  Location     Type
 46154 ;;		None
 46155 ;; Return value:  Size  Location     Type
 46156 ;;                  1  [STACK] void 
 46157 ;; Registers used:
 46158 ;;		wreg, status,2
 46159 ;; Tracked objects:
 46160 ;;		On entry : 3F/3D
 46161 ;;		On exit  : 3F/3B
 46162 ;;		Unchanged: 0/0
 46163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46168 ;;Total ram usage:        0 bytes
 46169 ;; Hardware stack levels used:    1
 46170 ;; Hardware stack levels required when called:   15
 46171 ;; This function calls:
 46172 ;;		Nothing
 46173 ;; This function is called by:
 46174 ;;		_SYSTEM_Initialize
 46175 ;; This function uses a reentrant model
 46176 ;;
 46177                           
 46178                           	psect	text178
 46179  001E30                     __ptext178:
 46180                           	opt callstack 0
 46181  001E30                     _DMA2_Initialize:
 46182                           	opt callstack 14
 46183                           
 46184                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 46185                           
 46186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46187                           ;incstack = 0
 46188  001E30  0E00               	movlw	0
 46189  001E32  013B               	movlb	59	; () banked
 46190  001E34  6FD9               	movwf	217,b	;volatile
 46191  001E36  0E10               	movlw	16
 46192  001E38  6FDA               	movwf	218,b	;volatile
 46193  001E3A  0E00               	movlw	0
 46194  001E3C  6FDB               	movwf	219,b	;volatile
 46195                           
 46196                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 46197  001E3E  0E3F               	movlw	63
 46198  001E40  6FD1               	movwf	209,b	;volatile
 46199  001E42  0EBB               	movlw	187
 46200  001E44  6FD0               	movwf	208,b	;volatile
 46201                           
 46202                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 46203  001E46  0E03               	movlw	3
 46204  001E48  6FDD               	movwf	221,b	;volatile
 46205                           
 46206                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 46207  001E4A  0E00               	movlw	0
 46208  001E4C  6FD8               	movwf	216,b	;volatile
 46209  001E4E  0E01               	movlw	1
 46210  001E50  6FD7               	movwf	215,b	;volatile
 46211                           
 46212                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 46213  001E52  0E00               	movlw	0
 46214  001E54  6FCF               	movwf	207,b	;volatile
 46215  001E56  0E01               	movlw	1
 46216  001E58  6FCE               	movwf	206,b	;volatile
 46217                           
 46218                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 46219  001E5A  0E1C               	movlw	28
 46220  001E5C  6FDF               	movwf	223,b	;volatile
 46221                           
 46222                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 46223  001E5E  0E3D               	movlw	61
 46224  001E60  6FDE               	movwf	222,b	;volatile
 46225                           
 46226                           ; BSR set to: 59
 46227                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 46228  001E62  0139               	movlb	57	; () banked
 46229  001E64  97A5               	bcf	165,3,b	;volatile
 46230                           
 46231                           ; BSR set to: 57
 46232                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 46233  001E66  95A5               	bcf	165,2,b	;volatile
 46234                           
 46235                           ; BSR set to: 57
 46236                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 46237  001E68  9BA5               	bcf	165,5,b	;volatile
 46238                           
 46239                           ; BSR set to: 57
 46240                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 46241  001E6A  99A5               	bcf	165,4,b	;volatile
 46242                           
 46243                           ; BSR set to: 57
 46244                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 46245  001E6C  9795               	bcf	149,3,b	;volatile
 46246                           
 46247                           ; BSR set to: 57
 46248                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 46249  001E6E  9595               	bcf	149,2,b	;volatile
 46250                           
 46251                           ; BSR set to: 57
 46252                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 46253  001E70  9B95               	bcf	149,5,b	;volatile
 46254                           
 46255                           ; BSR set to: 57
 46256                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 46257  001E72  9995               	bcf	149,4,b	;volatile
 46258  001E74  9ED2               	bcf	16338,7,c	;# 
 46259  001E76  0139               	banksel	14831	;# 
 46260  001E78  0E55               	movlw	85	;# 
 46261  001E7A  6FEF               	movwf	14831,b	;# 
 46262  001E7C  0EAA               	movlw	170	;# 
 46263  001E7E  6FEF               	movwf	14831,b	;# 
 46264  001E80  81EF               	bsf	14831,0,b	;# 
 46265  001E82  8ED2               	bsf	16338,7,c	;# 
 46266                           
 46267                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 46268  001E84  013B               	movlb	59	; () banked
 46269  001E86  6BDC               	clrf	220,b	;volatile
 46270                           
 46271                           ; BSR set to: 59
 46272                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46273  001E88  0012               	return		;funcret
 46274  001E8A                     __end_of_DMA2_Initialize:
 46275                           	opt callstack 0
 46276                           
 46277 ;; *************** function _DMA1_Initialize *****************
 46278 ;; Defined at:
 46279 ;;		line 86 in file "mcc_generated_files/dma1.c"
 46280 ;; Parameters:    Size  Location     Type
 46281 ;;		None
 46282 ;; Auto vars:     Size  Location     Type
 46283 ;;		None
 46284 ;; Return value:  Size  Location     Type
 46285 ;;                  1  [STACK] void 
 46286 ;; Registers used:
 46287 ;;		wreg, status,2
 46288 ;; Tracked objects:
 46289 ;;		On entry : 3F/3B
 46290 ;;		On exit  : 3F/3B
 46291 ;;		Unchanged: 0/0
 46292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46297 ;;Total ram usage:        0 bytes
 46298 ;; Hardware stack levels used:    1
 46299 ;; Hardware stack levels required when called:   15
 46300 ;; This function calls:
 46301 ;;		Nothing
 46302 ;; This function is called by:
 46303 ;;		_SYSTEM_Initialize
 46304 ;; This function uses a reentrant model
 46305 ;;
 46306                           
 46307                           	psect	text179
 46308  0018BE                     __ptext179:
 46309                           	opt callstack 0
 46310  0018BE                     _DMA1_Initialize:
 46311                           	opt callstack 14
 46312                           
 46313                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 46314                           
 46315                           ; BSR set to: 59
 46316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46317                           ;incstack = 0
 46318  0018BE  0E00               	movlw	0
 46319  0018C0  013B               	movlb	59	; () banked
 46320  0018C2  6FF9               	movwf	249,b	;volatile
 46321  0018C4  0E10               	movlw	16
 46322  0018C6  6FFA               	movwf	250,b	;volatile
 46323  0018C8  0E00               	movlw	0
 46324  0018CA  6FFB               	movwf	251,b	;volatile
 46325                           
 46326                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 46327  0018CC  0E3D               	movlw	61
 46328  0018CE  6FF1               	movwf	241,b	;volatile
 46329  0018D0  0E11               	movlw	17
 46330  0018D2  6FF0               	movwf	240,b	;volatile
 46331                           
 46332                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 46333  0018D4  0E03               	movlw	3
 46334  0018D6  6FFD               	movwf	253,b	;volatile
 46335                           
 46336                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 46337  0018D8  0E00               	movlw	0
 46338  0018DA  6FF8               	movwf	248,b	;volatile
 46339  0018DC  0E01               	movlw	1
 46340  0018DE  6FF7               	movwf	247,b	;volatile
 46341                           
 46342                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 46343  0018E0  0E00               	movlw	0
 46344  0018E2  6FEF               	movwf	239,b	;volatile
 46345  0018E4  0E01               	movlw	1
 46346  0018E6  6FEE               	movwf	238,b	;volatile
 46347                           
 46348                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 46349  0018E8  0E15               	movlw	21
 46350  0018EA  6FFF               	movwf	255,b	;volatile
 46351                           
 46352                           ; BSR set to: 59
 46353                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 46354  0018EC  6BFE               	clrf	254,b	;volatile
 46355                           
 46356                           ; BSR set to: 59
 46357                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 46358  0018EE  0139               	movlb	57	; () banked
 46359  0018F0  93A2               	bcf	162,1,b	;volatile
 46360                           
 46361                           ; BSR set to: 57
 46362                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 46363  0018F2  91A2               	bcf	162,0,b	;volatile
 46364                           
 46365                           ; BSR set to: 57
 46366                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 46367  0018F4  97A2               	bcf	162,3,b	;volatile
 46368                           
 46369                           ; BSR set to: 57
 46370                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 46371  0018F6  95A2               	bcf	162,2,b	;volatile
 46372                           
 46373                           ; BSR set to: 57
 46374                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 46375  0018F8  8392               	bsf	146,1,b	;volatile
 46376                           
 46377                           ; BSR set to: 57
 46378                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 46379  0018FA  8192               	bsf	146,0,b	;volatile
 46380                           
 46381                           ; BSR set to: 57
 46382                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 46383  0018FC  8792               	bsf	146,3,b	;volatile
 46384                           
 46385                           ; BSR set to: 57
 46386                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 46387  0018FE  8592               	bsf	146,2,b	;volatile
 46388                           
 46389                           ; BSR set to: 57
 46390                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 46391  001900  6BF1               	clrf	241,b	;volatile
 46392                           
 46393                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 46394  001902  0E01               	movlw	1
 46395  001904  6FF2               	movwf	242,b	;volatile
 46396                           
 46397                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 46398  001906  0E04               	movlw	4
 46399  001908  6FF3               	movwf	243,b	;volatile
 46400                           
 46401                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 46402  00190A  0E02               	movlw	2
 46403  00190C  6FF4               	movwf	244,b	;volatile
 46404                           
 46405                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 46406  00190E  0E03               	movlw	3
 46407  001910  6FF7               	movwf	247,b	;volatile
 46408  001912  9ED2               	bcf	16338,7,c	;# 
 46409  001914  0139               	banksel	14831	;# 
 46410  001916  0E55               	movlw	85	;# 
 46411  001918  6FEF               	movwf	14831,b	;# 
 46412  00191A  0EAA               	movlw	170	;# 
 46413  00191C  6FEF               	movwf	14831,b	;# 
 46414  00191E  81EF               	bsf	14831,0,b	;# 
 46415  001920  8ED2               	bsf	16338,7,c	;# 
 46416                           
 46417                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 46418  001922  013B               	movlb	59	; () banked
 46419  001924  6BFC               	clrf	252,b	;volatile
 46420                           
 46421                           ; BSR set to: 59
 46422                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46423  001926  0012               	return		;funcret
 46424  001928                     __end_of_DMA1_Initialize:
 46425                           	opt callstack 0
 46426                           
 46427 ;; *************** function _CRC_Initialize *****************
 46428 ;; Defined at:
 46429 ;;		line 76 in file "mcc_generated_files/crc.c"
 46430 ;; Parameters:    Size  Location     Type
 46431 ;;		None
 46432 ;; Auto vars:     Size  Location     Type
 46433 ;;  seed            2  [STACK] unsigned short 
 46434 ;;  poly            2  [STACK] unsigned short 
 46435 ;; Return value:  Size  Location     Type
 46436 ;;                  1  [STACK] void 
 46437 ;; Registers used:
 46438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 46439 ;; Tracked objects:
 46440 ;;		On entry : 0/39
 46441 ;;		On exit  : 3F/0
 46442 ;;		Unchanged: 0/0
 46443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46448 ;;Total ram usage:        0 bytes
 46449 ;; Hardware stack levels used:    1
 46450 ;; Hardware stack levels required when called:   15
 46451 ;; This function calls:
 46452 ;;		Nothing
 46453 ;; This function is called by:
 46454 ;;		_SYSTEM_Initialize
 46455 ;;		_read_cal_data
 46456 ;;		_write_cal_data
 46457 ;; This function uses a reentrant model
 46458 ;;
 46459                           
 46460                           	psect	text180
 46461  0013C8                     __ptext180:
 46462                           	opt callstack 0
 46463  0013C8                     _CRC_Initialize:
 46464                           	opt callstack 0
 46465                           
 46466                           ; BSR set to: 59
 46467                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46468  0013C8  52E6               	movf	postinc1,f,c
 46469  0013CA  52E6               	movf	postinc1,f,c
 46470  0013CC  52E6               	movf	postinc1,f,c
 46471  0013CE  52E6               	movf	postinc1,f,c
 46472                           
 46473                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 46474                           
 46475                           ;incstack = 0
 46476  0013D0  0E80               	movlw	128
 46477  0013D2  0139               	movlb	57	; () banked
 46478  0013D4  6F68               	movwf	104,b	;volatile
 46479                           
 46480                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 46481  0013D6  0E07               	movlw	7
 46482  0013D8  6F69               	movwf	105,b	;volatile
 46483                           
 46484                           ; BSR set to: 57
 46485                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 46486  0013DA  6B62               	clrf	98,b	;volatile
 46487                           
 46488                           ; BSR set to: 57
 46489                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 46490  0013DC  6B63               	clrf	99,b	;volatile
 46491                           
 46492                           ; BSR set to: 57
 46493                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 46494  0013DE  6B7C               	clrf	124,b	;volatile
 46495                           
 46496                           ; BSR set to: 57
 46497                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 46498  0013E0  6B78               	clrf	120,b	;volatile
 46499                           
 46500                           ; BSR set to: 57
 46501                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 46502  0013E2  6B77               	clrf	119,b	;volatile
 46503                           
 46504                           ; BSR set to: 57
 46505                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 46506  0013E4  6B76               	clrf	118,b	;volatile
 46507                           
 46508                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 46509  0013E6  0E3F               	movlw	63
 46510  0013E8  6F7B               	movwf	123,b	;volatile
 46511                           
 46512                           ; BSR set to: 57
 46513                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 46514  0013EA  697A               	setf	122,b	;volatile
 46515                           
 46516                           ; BSR set to: 57
 46517                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 46518  0013EC  6979               	setf	121,b	;volatile
 46519                           
 46520                           ; BSR set to: 57
 46521                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 46522  0013EE  6B7D               	clrf	125,b	;volatile
 46523                           
 46524                           ; BSR set to: 57
 46525                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 46526  0013F0  0ED5               	movlw	213
 46527  0013F2  6E34               	movwf	(btemp+10)^0,c
 46528  0013F4  0E00               	movlw	0
 46529  0013F6  6E35               	movwf	(btemp+11)^0,c
 46530                           
 46531                           ;stkvar	_poly @ sp[(-4)+2]
 46532  0013F8  0EFE               	movlw	-2
 46533  0013FA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 46534  001400  0EFF               	movlw	-1
 46535  001402  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46536                           
 46537                           ; BSR set to: 57
 46538                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 46539                           ;stkvar	_poly @ sp[(-4)+2]
 46540  001408  0EFF               	movlw	255
 46541  00140A  24E1               	addwf	fsr1l,w,c
 46542  00140C  6ED9               	movwf	fsr2l,c
 46543  00140E  0EFF               	movlw	255
 46544  001410  20E2               	addwfc	fsr1h,w,c
 46545  001412  6EDA               	movwf	fsr2h,c
 46546  001414  50DF               	movf	indf2,w,c
 46547  001416  6F67               	movwf	103,b	;volatile
 46548                           
 46549                           ; BSR set to: 57
 46550                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 46551  001418  0ED5               	movlw	213
 46552  00141A  6F66               	movwf	102,b	;volatile
 46553                           
 46554                           ; BSR set to: 57
 46555                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 46556                           ;stkvar	_seed @ sp[(-4)+0]
 46557  00141C  0EFC               	movlw	-4
 46558  00141E  6AE3               	clrf	plusw1,c
 46559  001420  0EFD               	movlw	-3
 46560  001422  6AE3               	clrf	plusw1,c
 46561                           
 46562                           ; BSR set to: 57
 46563                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 46564                           ;stkvar	_seed @ sp[(-4)+0]
 46565  001424  0EFD               	movlw	253
 46566  001426  24E1               	addwf	fsr1l,w,c
 46567  001428  6ED9               	movwf	fsr2l,c
 46568  00142A  0EFF               	movlw	255
 46569  00142C  20E2               	addwfc	fsr1h,w,c
 46570  00142E  6EDA               	movwf	fsr2h,c
 46571  001430  50DF               	movf	indf2,w,c
 46572  001432  6F63               	movwf	99,b	;volatile
 46573                           
 46574                           ; BSR set to: 57
 46575                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 46576  001434  6B62               	clrf	98,b	;volatile
 46577                           
 46578                           ; BSR set to: 57
 46579                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 46580  001436  3969               	swapf	105,w,b	;volatile
 46581  001438  0B0F               	andlw	15
 46582  00143A  6E35               	movwf	(btemp+11)^0,c
 46583  00143C  2835               	incf	(btemp+11)^0,w,c
 46584  00143E  0100               	movlb	0	; () banked
 46585  001440  6FE2               	movwf	_crcObj& (0+255),b
 46586                           
 46587                           ; BSR set to: 0
 46588                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 46589  001442  0139               	movlb	57	; () banked
 46590  001444  5169               	movf	105,w,b	;volatile
 46591  001446  0B0F               	andlw	15
 46592  001448  6E35               	movwf	(btemp+11)^0,c
 46593  00144A  2835               	incf	(btemp+11)^0,w,c
 46594  00144C  0100               	movlb	0	; () banked
 46595  00144E  6FE3               	movwf	(_crcObj+1)& (0+255),b
 46596                           
 46597                           ; BSR set to: 0
 46598                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46599  001450  52E5               	movf	postdec1,f,c
 46600  001452  52E5               	movf	postdec1,f,c
 46601  001454  52E5               	movf	postdec1,f,c
 46602  001456  52E5               	movf	postdec1,f,c
 46603  001458  0012               	return		;funcret
 46604  00145A                     __end_of_CRC_Initialize:
 46605                           	opt callstack 0
 46606                           
 46607 ;; *************** function _CLKREF_Initialize *****************
 46608 ;; Defined at:
 46609 ;;		line 58 in file "mcc_generated_files/clkref.c"
 46610 ;; Parameters:    Size  Location     Type
 46611 ;;		None
 46612 ;; Auto vars:     Size  Location     Type
 46613 ;;		None
 46614 ;; Return value:  Size  Location     Type
 46615 ;;                  1  [STACK] void 
 46616 ;; Registers used:
 46617 ;;		wreg, status,2
 46618 ;; Tracked objects:
 46619 ;;		On entry : 3F/3B
 46620 ;;		On exit  : 3F/3C
 46621 ;;		Unchanged: 0/0
 46622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46627 ;;Total ram usage:        0 bytes
 46628 ;; Hardware stack levels used:    1
 46629 ;; Hardware stack levels required when called:   15
 46630 ;; This function calls:
 46631 ;;		Nothing
 46632 ;; This function is called by:
 46633 ;;		_SYSTEM_Initialize
 46634 ;; This function uses a reentrant model
 46635 ;;
 46636                           
 46637                           	psect	text181
 46638  002E22                     __ptext181:
 46639                           	opt callstack 0
 46640  002E22                     _CLKREF_Initialize:
 46641                           	opt callstack 14
 46642                           
 46643                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 46644                           
 46645                           ; BSR set to: 0
 46646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46647                           ;incstack = 0
 46648  002E22  013C               	movlb	60	; () banked
 46649  002E24  6BE6               	clrf	230,b	;volatile
 46650                           
 46651                           ; BSR set to: 60
 46652                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 46653  002E26  0E94               	movlw	148
 46654  002E28  6FE5               	movwf	229,b	;volatile
 46655                           
 46656                           ; BSR set to: 60
 46657                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46658  002E2A  0012               	return		;funcret
 46659  002E2C                     __end_of_CLKREF_Initialize:
 46660                           	opt callstack 0
 46661                           
 46662 ;; *************** function _ADCC_Initialize *****************
 46663 ;; Defined at:
 46664 ;;		line 65 in file "mcc_generated_files/adcc.c"
 46665 ;; Parameters:    Size  Location     Type
 46666 ;;		None
 46667 ;; Auto vars:     Size  Location     Type
 46668 ;;		None
 46669 ;; Return value:  Size  Location     Type
 46670 ;;                  1  [STACK] void 
 46671 ;; Registers used:
 46672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 46673 ;; Tracked objects:
 46674 ;;		On entry : 3F/0
 46675 ;;		On exit  : 0/0
 46676 ;;		Unchanged: 0/0
 46677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46682 ;;Total ram usage:        0 bytes
 46683 ;; Hardware stack levels used:    1
 46684 ;; Hardware stack levels required when called:   16
 46685 ;; This function calls:
 46686 ;;		_ADCC_SetADIInterruptHandler
 46687 ;;		_ADCC_SetADTIInterruptHandler
 46688 ;; This function is called by:
 46689 ;;		_SYSTEM_Initialize
 46690 ;; This function uses a reentrant model
 46691 ;;
 46692                           
 46693                           	psect	text182
 46694  001928                     __ptext182:
 46695                           	opt callstack 0
 46696  001928                     _ADCC_Initialize:
 46697                           	opt callstack 13
 46698                           
 46699                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 46700                           
 46701                           ; BSR set to: 60
 46702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46703                           ;incstack = 0
 46704  001928  013E               	movlb	62	; () banked
 46705  00192A  6BDE               	clrf	222,b	;volatile
 46706                           
 46707                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 46708  00192C  6BDF               	clrf	223,b	;volatile
 46709                           
 46710                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 46711  00192E  6BE0               	clrf	224,b	;volatile
 46712                           
 46713                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 46714  001930  6BE1               	clrf	225,b	;volatile
 46715                           
 46716                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 46717  001932  6BE4               	clrf	228,b	;volatile
 46718                           
 46719                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 46720  001934  6BE5               	clrf	229,b	;volatile
 46721                           
 46722                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 46723  001936  6BEA               	clrf	234,b	;volatile
 46724                           
 46725                           ; BSR set to: 62
 46726                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 46727  001938  0E40               	movlw	64
 46728  00193A  6FEC               	movwf	236,b	;volatile
 46729                           
 46730                           ; BSR set to: 62
 46731                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 46732  00193C  6BF1               	clrf	241,b	;volatile
 46733                           
 46734                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 46735  00193E  0E20               	movlw	32
 46736  001940  6FF3               	movwf	243,b	;volatile
 46737                           
 46738                           ; BSR set to: 62
 46739                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 46740  001942  6BF4               	clrf	244,b	;volatile
 46741                           
 46742                           ; BSR set to: 62
 46743                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 46744  001944  6BF5               	clrf	245,b	;volatile
 46745                           
 46746                           ; BSR set to: 62
 46747                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 46748  001946  6BF6               	clrf	246,b	;volatile
 46749                           
 46750                           ; BSR set to: 62
 46751                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 46752  001948  6BF7               	clrf	247,b	;volatile
 46753                           
 46754                           ; BSR set to: 62
 46755                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 46756  00194A  6BF9               	clrf	249,b	;volatile
 46757                           
 46758                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 46759  00194C  0E5B               	movlw	91
 46760  00194E  6FFA               	movwf	250,b	;volatile
 46761                           
 46762                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 46763  001950  0E27               	movlw	39
 46764  001952  6FFB               	movwf	251,b	;volatile
 46765                           
 46766                           ; BSR set to: 62
 46767                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 46768  001954  6BFC               	clrf	252,b	;volatile
 46769                           
 46770                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 46771  001956  0E02               	movlw	2
 46772  001958  6FFD               	movwf	253,b	;volatile
 46773                           
 46774                           ; BSR set to: 62
 46775                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 46776  00195A  6BFE               	clrf	254,b	;volatile
 46777                           
 46778                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 46779  00195C  0E07               	movlw	7
 46780  00195E  6FFF               	movwf	255,b	;volatile
 46781                           
 46782                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 46783  001960  0E84               	movlw	132
 46784  001962  6FF8               	movwf	248,b	;volatile
 46785                           
 46786                           ; BSR set to: 62
 46787                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 46788  001964  0139               	movlb	57	; () banked
 46789  001966  95A1               	bcf	161,2,b	;volatile
 46790                           
 46791                           ; BSR set to: 57
 46792                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 46793  001968  8591               	bsf	145,2,b	;volatile
 46794                           
 46795                           ; BSR set to: 57
 46796                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 46797  00196A  0EA8               	movlw	low _ADCC_DefaultInterruptHandler
 46798  00196C  6EE6               	movwf	postinc1,c
 46799  00196E  0E2E               	movlw	high _ADCC_DefaultInterruptHandler
 46800  001970  6EE6               	movwf	postinc1,c
 46801  001972  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46802  001974  6EE6               	movwf	postinc1,c
 46803  001976  ECED  F014         	call	_ADCC_SetADIInterruptHandler	;wreg free
 46804                           
 46805                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 46806  00197A  0139               	movlb	57	; () banked
 46807  00197C  97A1               	bcf	161,3,b	;volatile
 46808                           
 46809                           ; BSR set to: 57
 46810                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 46811  00197E  8791               	bsf	145,3,b	;volatile
 46812                           
 46813                           ; BSR set to: 57
 46814                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 46815  001980  0EA8               	movlw	low _ADCC_DefaultInterruptHandler
 46816  001982  6EE6               	movwf	postinc1,c
 46817  001984  0E2E               	movlw	high _ADCC_DefaultInterruptHandler
 46818  001986  6EE6               	movwf	postinc1,c
 46819  001988  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46820  00198A  6EE6               	movwf	postinc1,c
 46821  00198C  ECD9  F014         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 46822                           
 46823                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46824  001990  0012               	return		;funcret
 46825  001992                     __end_of_ADCC_Initialize:
 46826                           	opt callstack 0
 46827                           
 46828 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 46829 ;; Defined at:
 46830 ;;		line 336 in file "mcc_generated_files/adcc.c"
 46831 ;; Parameters:    Size  Location     Type
 46832 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46833 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 46834 ;; Auto vars:     Size  Location     Type
 46835 ;;		None
 46836 ;; Return value:  Size  Location     Type
 46837 ;;                  1  [STACK] void 
 46838 ;; Registers used:
 46839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46840 ;; Tracked objects:
 46841 ;;		On entry : 0/1
 46842 ;;		On exit  : 0/0
 46843 ;;		Unchanged: 0/0
 46844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46849 ;;Total ram usage:        0 bytes
 46850 ;; Hardware stack levels used:    1
 46851 ;; Hardware stack levels required when called:   15
 46852 ;; This function calls:
 46853 ;;		Nothing
 46854 ;; This function is called by:
 46855 ;;		_ADCC_Initialize
 46856 ;;		_start_adc_scan
 46857 ;; This function uses a reentrant model
 46858 ;;
 46859                           
 46860                           	psect	text183
 46861  0029B2                     __ptext183:
 46862                           	opt callstack 0
 46863  0029B2                     _ADCC_SetADTIInterruptHandler:
 46864                           	opt callstack 14
 46865                           
 46866                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 46867                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46868                           
 46869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46870                           ;incstack = 0
 46871  0029B2  50E1               	movf	fsr1l,w,c
 46872  0029B4  0FFD               	addlw	-3
 46873  0029B6  6ED9               	movwf	fsr2l,c
 46874  0029B8  50E2               	movf	fsr1h,w,c
 46875  0029BA  6EDA               	movwf	fsr2h,c
 46876  0029BC  0EFF               	movlw	255
 46877  0029BE  22DA               	addwfc	fsr2h,f,c
 46878  0029C0  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 46879  0029C6  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 46880  0029CC  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 46881                           
 46882                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 46883  0029D2  52E5               	movf	postdec1,f,c
 46884  0029D4  52E5               	movf	postdec1,f,c
 46885  0029D6  52E5               	movf	postdec1,f,c
 46886  0029D8  0012               	return		;funcret
 46887  0029DA                     __end_of_ADCC_SetADTIInterruptHandler:
 46888                           	opt callstack 0
 46889                           
 46890 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 46891 ;; Defined at:
 46892 ;;		line 323 in file "mcc_generated_files/adcc.c"
 46893 ;; Parameters:    Size  Location     Type
 46894 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46895 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 46896 ;; Auto vars:     Size  Location     Type
 46897 ;;		None
 46898 ;; Return value:  Size  Location     Type
 46899 ;;                  1  [STACK] void 
 46900 ;; Registers used:
 46901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46902 ;; Tracked objects:
 46903 ;;		On entry : 7/1
 46904 ;;		On exit  : 0/0
 46905 ;;		Unchanged: 0/0
 46906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46911 ;;Total ram usage:        0 bytes
 46912 ;; Hardware stack levels used:    1
 46913 ;; Hardware stack levels required when called:   15
 46914 ;; This function calls:
 46915 ;;		Nothing
 46916 ;; This function is called by:
 46917 ;;		_ADCC_Initialize
 46918 ;;		_start_adc_scan
 46919 ;; This function uses a reentrant model
 46920 ;;
 46921                           
 46922                           	psect	text184
 46923  0029DA                     __ptext184:
 46924                           	opt callstack 0
 46925  0029DA                     _ADCC_SetADIInterruptHandler:
 46926                           	opt callstack 14
 46927                           
 46928                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 46929                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46930                           
 46931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46932                           ;incstack = 0
 46933  0029DA  50E1               	movf	fsr1l,w,c
 46934  0029DC  0FFD               	addlw	-3
 46935  0029DE  6ED9               	movwf	fsr2l,c
 46936  0029E0  50E2               	movf	fsr1h,w,c
 46937  0029E2  6EDA               	movwf	fsr2h,c
 46938  0029E4  0EFF               	movlw	255
 46939  0029E6  22DA               	addwfc	fsr2h,f,c
 46940  0029E8  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 46941  0029EE  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 46942  0029F4  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 46943                           
 46944                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 46945  0029FA  52E5               	movf	postdec1,f,c
 46946  0029FC  52E5               	movf	postdec1,f,c
 46947  0029FE  52E5               	movf	postdec1,f,c
 46948  002A00  0012               	return		;funcret
 46949  002A02                     __end_of_ADCC_SetADIInterruptHandler:
 46950                           	opt callstack 0
 46951                           
 46952 ;; *************** function _INT1_ISR *****************
 46953 ;; Defined at:
 46954 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 46955 ;; Parameters:    Size  Location     Type
 46956 ;;		None
 46957 ;; Auto vars:     Size  Location     Type
 46958 ;;		None
 46959 ;; Return value:  Size  Location     Type
 46960 ;;                  1    wreg      void 
 46961 ;; Registers used:
 46962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46963 ;; Tracked objects:
 46964 ;;		On entry : 0/0
 46965 ;;		On exit  : 0/0
 46966 ;;		Unchanged: 0/0
 46967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46970 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46971 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46972 ;;Total ram usage:        4 bytes
 46973 ;; Hardware stack levels used:    1
 46974 ;; Hardware stack levels required when called:    5
 46975 ;; This function calls:
 46976 ;;		_INT1_CallBack
 46977 ;; This function is called by:
 46978 ;;		Interrupt level 1
 46979 ;; This function uses a non-reentrant model
 46980 ;;
 46981                           
 46982                           	psect	text185
 46983  002428                     __ptext185:
 46984                           	opt callstack 0
 46985  002428                     _INT1_ISR:
 46986                           	opt callstack 12
 46987                           
 46988                           ;incstack = 0
 46989  002428  006F FF60  F007    	movff	status,??_INT1_ISR
 46990  00242E  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 46991  002434  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 46992  00243A  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 46993  002440  EE16  F19B         	lfsr	1,___intlo_sp
 46994                           
 46995                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 46996  002444  0139               	movlb	57	; () banked
 46997  002446  91A5               	bcf	165,0,b	;volatile
 46998                           
 46999                           ; BSR set to: 57
 47000                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 47001  002448  EC50  F015         	call	_INT1_CallBack	;wreg free
 47002  00244C  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 47003  002452  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 47004  002458  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 47005  00245E  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 47006  002464  0011               	retfie		f
 47007  002466                     __end_of_INT1_ISR:
 47008                           	opt callstack 0
 47009                           
 47010 ;; *************** function _INT1_CallBack *****************
 47011 ;; Defined at:
 47012 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 47013 ;; Parameters:    Size  Location     Type
 47014 ;;		None
 47015 ;; Auto vars:     Size  Location     Type
 47016 ;;		None
 47017 ;; Return value:  Size  Location     Type
 47018 ;;                  1  [STACK] void 
 47019 ;; Registers used:
 47020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 47021 ;; Tracked objects:
 47022 ;;		On entry : 3F/39
 47023 ;;		On exit  : 0/0
 47024 ;;		Unchanged: 0/0
 47025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47030 ;;Total ram usage:        0 bytes
 47031 ;; Hardware stack levels used:    1
 47032 ;; Hardware stack levels required when called:    4
 47033 ;; This function calls:
 47034 ;;		Absolute function
 47035 ;;		_INT1_DefaultInterruptHandler
 47036 ;;		_switch_handler
 47037 ;; This function is called by:
 47038 ;;		_INT1_ISR
 47039 ;; This function uses a reentrant model
 47040 ;;
 47041                           
 47042                           	psect	text186
 47043  002AA0                     __ptext186:
 47044                           	opt callstack 0
 47045  002AA0                     _INT1_CallBack:
 47046                           	opt callstack 12
 47047                           
 47048                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 47049                           
 47050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47051                           ;incstack = 0
 47052  002AA0  0100               	movlb	0	; () banked
 47053  002AA2  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47054  002AA4  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47055  002AA6  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47056  002AA8  B4D8               	btfsc	status,2,c
 47057  002AAA  0012               	return	
 47058                           
 47059                           ; BSR set to: 0
 47060                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 47061  002AAC  D801               	call	u1324_28
 47062  002AAE  0012               	return	
 47063  002AB0                     u1324_28:
 47064  002AB0  0005               	push	
 47065  002AB2  6EFA               	movwf	pclath,c
 47066  002AB4  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47067  002AB6  6EFD               	movwf	tosl,c
 47068  002AB8  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47069  002ABA  6EFE               	movwf	tosh,c
 47070  002ABC  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47071  002ABE  6EFF               	movwf	tosu,c
 47072  002AC0  50FA               	movf	pclath,w,c
 47073  002AC2  0012               	return		;indir
 47074  002AC4                     __end_of_INT1_CallBack:
 47075                           	opt callstack 0
 47076                           
 47077 ;; *************** function _INT1_DefaultInterruptHandler *****************
 47078 ;; Defined at:
 47079 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 47080 ;; Parameters:    Size  Location     Type
 47081 ;;		None
 47082 ;; Auto vars:     Size  Location     Type
 47083 ;;		None
 47084 ;; Return value:  Size  Location     Type
 47085 ;;                  1  [STACK] void 
 47086 ;; Registers used:
 47087 ;;		None
 47088 ;; Tracked objects:
 47089 ;;		On entry : 3F/0
 47090 ;;		On exit  : 0/0
 47091 ;;		Unchanged: 0/0
 47092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47097 ;;Total ram usage:        0 bytes
 47098 ;; Hardware stack levels used:    1
 47099 ;; Hardware stack levels required when called:    3
 47100 ;; This function calls:
 47101 ;;		Nothing
 47102 ;; This function is called by:
 47103 ;;		_EXT_INT_Initialize
 47104 ;;		_INT1_CallBack
 47105 ;; This function uses a reentrant model
 47106 ;;
 47107                           
 47108                           	psect	text187
 47109  01FFFE                     __ptext187:
 47110                           	opt callstack 0
 47111  01FFFE                     _INT1_DefaultInterruptHandler:
 47112                           	opt callstack 12
 47113                           
 47114                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47115                           
 47116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47117                           ;incstack = 0
 47118  01FFFE  0012               	return		;funcret
 47119  020000                     __end_of_INT1_DefaultInterruptHandler:
 47120                           	opt callstack 0
 47121                           
 47122 ;; *************** function _switch_handler *****************
 47123 ;; Defined at:
 47124 ;;		line 58 in file "dio.c"
 47125 ;; Parameters:    Size  Location     Type
 47126 ;;		None
 47127 ;; Auto vars:     Size  Location     Type
 47128 ;;  i               1  [STACK] unsigned char 
 47129 ;;  sw_value        1  [STACK] unsigned char 
 47130 ;; Return value:  Size  Location     Type
 47131 ;;                  1  [STACK] void 
 47132 ;; Registers used:
 47133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 47134 ;; Tracked objects:
 47135 ;;		On entry : 3F/0
 47136 ;;		On exit  : 0/0
 47137 ;;		Unchanged: 0/0
 47138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47143 ;;Total ram usage:        0 bytes
 47144 ;; Hardware stack levels used:    1
 47145 ;; Hardware stack levels required when called:    3
 47146 ;; This function calls:
 47147 ;;		Nothing
 47148 ;; This function is called by:
 47149 ;;		_start_switch_handler
 47150 ;;		_INT1_CallBack
 47151 ;; This function uses a reentrant model
 47152 ;;
 47153                           
 47154                           	psect	text188
 47155  01F4C6                     __ptext188:
 47156                           	opt callstack 0
 47157  01F4C6                     _switch_handler:
 47158                           	opt callstack 0
 47159                           
 47160                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47161  01F4C6  52E6               	movf	postinc1,f,c
 47162  01F4C8  52E6               	movf	postinc1,f,c
 47163                           
 47164                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 47165                           ;stkvar	_i @ sp[(-2)+0]
 47166                           
 47167                           ;incstack = 0
 47168  01F4CA  0EFE               	movlw	-2
 47169  01F4CC  6AE3               	clrf	plusw1,c
 47170  01F4CE  9ABF               	bcf	191,5,c	;volatile
 47171                           
 47172                           ;dio.c: 72:  __nop();
 47173  01F4D0  F000               	nop	
 47174                           
 47175                           ;dio.c: 73:  __nop();
 47176  01F4D2  F000               	nop	
 47177                           
 47178                           ;dio.c: 74:  __nop();
 47179  01F4D4  F000               	nop	
 47180                           
 47181                           ;dio.c: 75:  __nop();
 47182  01F4D6  F000               	nop	
 47183                           
 47184                           ;dio.c: 76:  __nop();
 47185  01F4D8  F000               	nop	
 47186                           
 47187                           ;dio.c: 77:  __nop();
 47188  01F4DA  F000               	nop	
 47189  01F4DC  D016               	goto	l13853
 47190  01F4DE                     l13839:
 47191                           
 47192                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 47193  01F4DE  A6CF               	btfss	207,3,c	;volatile
 47194  01F4E0  D00E               	goto	u1290_20
 47195  01F4E2  D00A               	goto	u1290_21
 47196  01F4E4                     u1288_28:
 47197                           
 47198                           ;stkvar	_sw_value @ sp[(-2)+1]
 47199  01F4E4  0EFF               	movlw	-1
 47200  01F4E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47201                           
 47202                           ;dio.c: 83:    break;
 47203  01F4EC  D027               	goto	l13855
 47204  01F4EE                     l13841:
 47205                           
 47206                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 47207  01F4EE  A4CF               	btfss	207,2,c	;volatile
 47208  01F4F0  D006               	goto	u1290_20
 47209  01F4F2  D002               	goto	u1290_21
 47210  01F4F4                     l13843:
 47211                           
 47212                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 47213  01F4F4  A6CD               	btfss	205,3,c	;volatile
 47214  01F4F6  D003               	goto	u1290_20
 47215  01F4F8                     u1290_21:
 47216  01F4F8  6A35               	clrf	(btemp+11)^0,c
 47217  01F4FA  2A35               	incf	(btemp+11)^0,f,c
 47218  01F4FC  D7F3               	goto	u1288_28
 47219  01F4FE                     u1290_20:
 47220  01F4FE  6A35               	clrf	(btemp+11)^0,c
 47221  01F500  D7F1               	goto	u1288_28
 47222  01F502                     l13845:
 47223                           
 47224                           ;dio.c: 91:    sw_value = 1;
 47225                           ;stkvar	_sw_value @ sp[(-2)+1]
 47226  01F502  0EFF               	movlw	-1
 47227  01F504  6AE3               	clrf	plusw1,c
 47228  01F506  2AE3               	incf	plusw1,f,c
 47229                           
 47230                           ;dio.c: 92:    break;
 47231  01F508  D019               	goto	l13855
 47232  01F50A                     l13853:
 47233                           
 47234                           ;stkvar	_i @ sp[(-2)+0]
 47235  01F50A  0EFE               	movlw	-2
 47236  01F50C  50E3               	movf	plusw1,w,c
 47237  01F50E  6E34               	movwf	(btemp+10)^0,c
 47238  01F510  6A35               	clrf	(btemp+11)^0,c
 47239                           
 47240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 47241                           ; Switch size 1, requested type "simple"
 47242                           ; Number of cases is 1, Range of values is 0 to 0
 47243                           ; switch strategies available:
 47244                           ; Name         Instructions Cycles
 47245                           ; simple_byte            4     3 (average)
 47246                           ;	Chosen strategy is simple_byte
 47247  01F512  5035               	movf	(btemp+11)^0,w,c
 47248  01F514  0A00               	xorlw	0	; case 0
 47249  01F516  A4D8               	btfss	status,2,c
 47250  01F518  D7F4               	goto	l13845
 47251                           
 47252                           ; Switch size 1, requested type "simple"
 47253                           ; Number of cases is 5, Range of values is 0 to 4
 47254                           ; switch strategies available:
 47255                           ; Name         Instructions Cycles
 47256                           ; simple_byte           16     9 (average)
 47257                           ;	Chosen strategy is simple_byte
 47258  01F51A  5034               	movf	(btemp+10)^0,w,c
 47259  01F51C  0A00               	xorlw	0	; case 0
 47260  01F51E  B4D8               	btfsc	status,2,c
 47261  01F520  D7F0               	goto	l13845
 47262  01F522  0A01               	xorlw	1	; case 1
 47263  01F524  B4D8               	btfsc	status,2,c
 47264  01F526  D7ED               	goto	l13845
 47265  01F528  0A03               	xorlw	3	; case 2
 47266  01F52A  B4D8               	btfsc	status,2,c
 47267  01F52C  D7E0               	goto	l13841
 47268  01F52E  0A01               	xorlw	1	; case 3
 47269  01F530  B4D8               	btfsc	status,2,c
 47270  01F532  D7D5               	goto	l13839
 47271  01F534  0A07               	xorlw	7	; case 4
 47272  01F536  B4D8               	btfsc	status,2,c
 47273  01F538  D7DD               	goto	l13843
 47274  01F53A  D7E3               	goto	l13845
 47275  01F53C                     l13855:
 47276                           
 47277                           ;dio.c: 102:   if (sw_value) {
 47278                           ;stkvar	_sw_value @ sp[(-2)+1]
 47279  01F53C  0EFF               	movlw	-1
 47280  01F53E  50E3               	movf	plusw1,w,c
 47281  01F540  B4D8               	btfsc	status,2,c
 47282  01F542  D018               	goto	l13861
 47283                           
 47284                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 47285                           ;stkvar	_i @ sp[(-2)+0]
 47286  01F544  0EFE               	movlw	-2
 47287  01F546  50E3               	movf	plusw1,w,c
 47288  01F548  0D05               	mullw	5
 47289  01F54A  0EB4               	movlw	low _S
 47290  01F54C  24F3               	addwf	243,w,c
 47291  01F54E  6ED9               	movwf	fsr2l,c
 47292  01F550  0E01               	movlw	high _S
 47293  01F552  20F4               	addwfc	prodh,w,c
 47294  01F554  6EDA               	movwf	fsr2h,c
 47295  01F556  04DE               	decf	postinc2,w,c
 47296  01F558  A4D8               	btfss	status,2,c
 47297  01F55A  D049               	goto	l13869
 47298                           
 47299                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 47300                           ;stkvar	_i @ sp[(-2)+0]
 47301  01F55C  0EFE               	movlw	-2
 47302  01F55E  50E3               	movf	plusw1,w,c
 47303  01F560  0D05               	mullw	5
 47304  01F562  0EB4               	movlw	low _S
 47305  01F564  24F3               	addwf	243,w,c
 47306  01F566  6ED9               	movwf	fsr2l,c
 47307  01F568  0E01               	movlw	high _S
 47308  01F56A  20F4               	addwfc	prodh,w,c
 47309  01F56C  6EDA               	movwf	fsr2h,c
 47310  01F56E  0E00               	movlw	0
 47311  01F570  6EDF               	movwf	indf2,c
 47312  01F572  D03D               	goto	l13869
 47313  01F574                     l13861:
 47314                           
 47315                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 47316                           ;stkvar	_i @ sp[(-2)+0]
 47317  01F574  0EFE               	movlw	-2
 47318  01F576  50E3               	movf	plusw1,w,c
 47319  01F578  0D05               	mullw	5
 47320  01F57A  0EB4               	movlw	low _S
 47321  01F57C  24F3               	addwf	243,w,c
 47322  01F57E  6ED9               	movwf	fsr2l,c
 47323  01F580  0E01               	movlw	high _S
 47324  01F582  20F4               	addwfc	prodh,w,c
 47325  01F584  6EDA               	movwf	fsr2h,c
 47326  01F586  50DF               	movf	indf2,w,c
 47327  01F588  A4D8               	btfss	status,2,c
 47328  01F58A  D031               	goto	l13869
 47329                           
 47330                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 47331                           ;stkvar	_i @ sp[(-2)+0]
 47332  01F58C  0EFE               	movlw	-2
 47333  01F58E  50E3               	movf	plusw1,w,c
 47334  01F590  0D05               	mullw	5
 47335  01F592  0EB4               	movlw	low _S
 47336  01F594  24F3               	addwf	243,w,c
 47337  01F596  6ED9               	movwf	fsr2l,c
 47338  01F598  0E01               	movlw	high _S
 47339  01F59A  20F4               	addwfc	prodh,w,c
 47340  01F59C  6EDA               	movwf	fsr2h,c
 47341  01F59E  0E01               	movlw	1
 47342  01F5A0  6EDF               	movwf	indf2,c
 47343                           
 47344                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 47345  01F5A2  EE20  F2B8         	lfsr	2,_V+177	;volatile
 47346                           
 47347                           ;stkvar	_i @ sp[(-2)+0]
 47348  01F5A6  0EFE               	movlw	-2
 47349  01F5A8  50E3               	movf	plusw1,w,c
 47350  01F5AA  0D05               	mullw	5
 47351  01F5AC  0EB5               	movlw	low (_S+1)
 47352  01F5AE  24F3               	addwf	243,w,c
 47353  01F5B0  6EE9               	movwf	fsr0l,c
 47354  01F5B2  0E01               	movlw	high (_S+1)
 47355  01F5B4  20F4               	addwfc	prodh,w,c
 47356  01F5B6  6EEA               	movwf	fsr0h,c
 47357  01F5B8  006F FF7B FFEE     	movff	postinc2,postinc0
 47358  01F5BE  006F FF7B FFEE     	movff	postinc2,postinc0
 47359  01F5C4  006F FF7B FFEE     	movff	postinc2,postinc0
 47360  01F5CA  006F FF7B FFEE     	movff	postinc2,postinc0
 47361                           
 47362                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 47363                           ;stkvar	_i @ sp[(-2)+0]
 47364  01F5D0  0EFE               	movlw	-2
 47365  01F5D2  006F FF8C  F035    	movff	plusw1,btemp+11
 47366  01F5D8  0E01               	movlw	1
 47367  01F5DA  6E34               	movwf	(btemp+10)^0,c
 47368  01F5DC  2A35               	incf	(btemp+11)^0,f,c
 47369  01F5DE  D002               	goto	u1294_24
 47370  01F5E0                     u1294_25:
 47371  01F5E0  90D8               	bcf	status,0,c
 47372  01F5E2  3634               	rlcf	(btemp+10)^0,f,c
 47373  01F5E4                     u1294_24:
 47374  01F5E4  2E35               	decfsz	(btemp+11)^0,f,c
 47375  01F5E6  D7FC               	goto	u1294_25
 47376  01F5E8  5034               	movf	(btemp+10)^0,w,c
 47377  01F5EA  0101               	movlb	1	; () banked
 47378  01F5EC  13DC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 47379  01F5EE                     l13869:
 47380                           
 47381                           ;dio.c: 113:  } while (++i < 6);
 47382                           ;stkvar	_i @ sp[(-2)+0]
 47383  01F5EE  0EFE               	movlw	-2
 47384  01F5F0  2AE3               	incf	plusw1,f,c
 47385  01F5F2  0EFE               	movlw	-2
 47386  01F5F4  006F FF8C  F02A    	movff	plusw1,btemp
 47387  01F5FA  0E05               	movlw	5
 47388  01F5FC  642A               	cpfsgt	btemp^0,c
 47389  01F5FE  D785               	goto	l13853
 47390                           
 47391                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 47392  01F600  8ABF               	bsf	191,5,c	;volatile
 47393                           
 47394                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47395  01F602  52E5               	movf	postdec1,f,c
 47396  01F604  52E5               	movf	postdec1,f,c
 47397  01F606  0012               	return		;funcret
 47398  01F608                     __end_of_switch_handler:
 47399                           	opt callstack 0
 47400                           
 47401 ;; *************** function _TMR5_ISR *****************
 47402 ;; Defined at:
 47403 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 47404 ;; Parameters:    Size  Location     Type
 47405 ;;		None
 47406 ;; Auto vars:     Size  Location     Type
 47407 ;;		None
 47408 ;; Return value:  Size  Location     Type
 47409 ;;                  1    wreg      void 
 47410 ;; Registers used:
 47411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47412 ;; Tracked objects:
 47413 ;;		On entry : 0/0
 47414 ;;		On exit  : 3F/0
 47415 ;;		Unchanged: 0/0
 47416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47419 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47420 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47421 ;;Total ram usage:       31 bytes
 47422 ;; Hardware stack levels used:    1
 47423 ;; Hardware stack levels required when called:    9
 47424 ;; This function calls:
 47425 ;;		_TMR5_CallBack
 47426 ;;		_TMR5_WriteTimer
 47427 ;; This function is called by:
 47428 ;;		Interrupt level 1
 47429 ;; This function uses a non-reentrant model
 47430 ;;
 47431                           
 47432                           	psect	text189
 47433  01DEF8                     __ptext189:
 47434                           	opt callstack 0
 47435  01DEF8                     _TMR5_ISR:
 47436                           	opt callstack 8
 47437                           
 47438                           ;incstack = 0
 47439  01DEF8  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 47440  01DEFE  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 47441  01DF04  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 47442  01DF0A  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 47443  01DF10  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 47444  01DF16  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 47445  01DF1C  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 47446  01DF22  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 47447  01DF28  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 47448  01DF2E  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 47449  01DF34  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 47450  01DF3A  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 47451  01DF40  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 47452  01DF46  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 47453  01DF4C  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 47454  01DF52  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 47455  01DF58  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 47456  01DF5E  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 47457  01DF64  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 47458  01DF6A  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 47459  01DF70  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 47460  01DF76  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 47461  01DF7C  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 47462  01DF82  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 47463  01DF88  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 47464  01DF8E  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 47465  01DF94  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 47466  01DF9A  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 47467  01DFA0  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 47468  01DFA6  EE16  F19B         	lfsr	1,___intlo_sp
 47469                           
 47470                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 47471  01DFAA  0139               	movlb	57	; () banked
 47472  01DFAC  9DA8               	bcf	168,6,b	;volatile
 47473                           
 47474                           ; BSR set to: 57
 47475                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 47476  01DFAE  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 47477  01DFB4  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 47478  01DFBA  ECD3  F011         	call	_TMR5_WriteTimer	;wreg free
 47479                           
 47480                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 47481  01DFBE  0102               	movlb	2	; () banked
 47482  01DFC0  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 47483  01DFC2  6E0B               	movwf	??_TMR5_ISR^0,c
 47484  01DFC4  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 47485  01DFC6  0E05               	movlw	5
 47486  01DFC8  260B               	addwf	??_TMR5_ISR^0,f,c
 47487  01DFCA  0E00               	movlw	0
 47488  01DFCC  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 47489  01DFCE  0100               	movlb	0	; () banked
 47490  01DFD0  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 47491  01DFD2  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47492  01DFD4  500B               	movf	??_TMR5_ISR^0,w,c
 47493  01DFD6  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 47494  01DFD8  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 47495  01DFDA  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47496  01DFDC  A0D8               	btfss	status,0,c
 47497  01DFDE  D005               	goto	i1l1021
 47498                           
 47499                           ; BSR set to: 0
 47500                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 47501  01DFE0  EC62  F015         	call	_TMR5_CallBack	;wreg free
 47502                           
 47503                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 47504  01DFE4  0100               	movlb	0	; () banked
 47505  01DFE6  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 47506  01DFE8  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 47507  01DFEA                     i1l1021:
 47508                           
 47509                           ; BSR set to: 0
 47510  01DFEA  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 47511  01DFF0  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 47512  01DFF6  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 47513  01DFFC  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 47514  01E002  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 47515  01E008  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 47516  01E00E  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 47517  01E014  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 47518  01E01A  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 47519  01E020  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 47520  01E026  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 47521  01E02C  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 47522  01E032  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 47523  01E038  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 47524  01E03E  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 47525  01E044  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 47526  01E04A  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 47527  01E050  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 47528  01E056  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 47529  01E05C  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 47530  01E062  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 47531  01E068  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 47532  01E06E  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 47533  01E074  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 47534  01E07A  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 47535  01E080  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 47536  01E086  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 47537  01E08C  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 47538  01E092  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 47539  01E098  0011               	retfie		f
 47540  01E09A                     __end_of_TMR5_ISR:
 47541                           	opt callstack 0
 47542                           
 47543 ;; *************** function _TMR5_WriteTimer *****************
 47544 ;; Defined at:
 47545 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 47546 ;; Parameters:    Size  Location     Type
 47547 ;;  timerVal        2  [STACK] unsigned short 
 47548 ;; Auto vars:     Size  Location     Type
 47549 ;;		None
 47550 ;; Return value:  Size  Location     Type
 47551 ;;                  1  [STACK] void 
 47552 ;; Registers used:
 47553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47554 ;; Tracked objects:
 47555 ;;		On entry : 3F/39
 47556 ;;		On exit  : 0/0
 47557 ;;		Unchanged: 0/0
 47558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47563 ;;Total ram usage:        0 bytes
 47564 ;; Hardware stack levels used:    1
 47565 ;; Hardware stack levels required when called:    3
 47566 ;; This function calls:
 47567 ;;		Nothing
 47568 ;; This function is called by:
 47569 ;;		_TMR5_ISR
 47570 ;; This function uses a reentrant model
 47571 ;;
 47572                           
 47573                           	psect	text190
 47574  0023A6                     __ptext190:
 47575                           	opt callstack 0
 47576  0023A6                     _TMR5_WriteTimer:
 47577                           	opt callstack 13
 47578                           
 47579                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 47580                           
 47581                           ; BSR set to: 0
 47582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47583                           ;incstack = 0
 47584  0023A6  A49A               	btfss	154,2,c	;volatile
 47585  0023A8  D00F               	goto	l14081
 47586                           
 47587                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 47588  0023AA  909A               	bcf	154,0,c	;volatile
 47589                           
 47590                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 47591                           ;stkvar	_timerVal @ sp[(0)+-2]
 47592  0023AC  0EFF               	movlw	255
 47593  0023AE  24E1               	addwf	fsr1l,w,c
 47594  0023B0  6ED9               	movwf	fsr2l,c
 47595  0023B2  0EFF               	movlw	255
 47596  0023B4  20E2               	addwfc	fsr1h,w,c
 47597  0023B6  6EDA               	movwf	fsr2h,c
 47598  0023B8  50DF               	movf	indf2,w,c
 47599  0023BA  6E99               	movwf	153,c	;volatile
 47600                           
 47601                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 47602                           ;stkvar	_timerVal @ sp[(0)+-2]
 47603  0023BC  0EFE               	movlw	-2
 47604  0023BE  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47605                           
 47606                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 47607  0023C4  809A               	bsf	154,0,c	;volatile
 47608                           
 47609                           ;mcc_generated_files/tmr5.c: 144:  } else {
 47610  0023C6  D00C               	goto	l1004
 47611  0023C8                     l14081:
 47612                           
 47613                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 47614                           ;stkvar	_timerVal @ sp[(0)+-2]
 47615  0023C8  0EFF               	movlw	255
 47616  0023CA  24E1               	addwf	fsr1l,w,c
 47617  0023CC  6ED9               	movwf	fsr2l,c
 47618  0023CE  0EFF               	movlw	255
 47619  0023D0  20E2               	addwfc	fsr1h,w,c
 47620  0023D2  6EDA               	movwf	fsr2h,c
 47621  0023D4  50DF               	movf	indf2,w,c
 47622  0023D6  6E99               	movwf	153,c	;volatile
 47623                           
 47624                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 47625                           ;stkvar	_timerVal @ sp[(0)+-2]
 47626  0023D8  0EFE               	movlw	-2
 47627  0023DA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47628  0023E0                     l1004:
 47629                           
 47630                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47631  0023E0  52E5               	movf	postdec1,f,c
 47632  0023E2  52E5               	movf	postdec1,f,c
 47633  0023E4  0012               	return		;funcret
 47634  0023E6                     __end_of_TMR5_WriteTimer:
 47635                           	opt callstack 0
 47636                           
 47637 ;; *************** function _TMR5_CallBack *****************
 47638 ;; Defined at:
 47639 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 47640 ;; Parameters:    Size  Location     Type
 47641 ;;		None
 47642 ;; Auto vars:     Size  Location     Type
 47643 ;;		None
 47644 ;; Return value:  Size  Location     Type
 47645 ;;                  1  [STACK] void 
 47646 ;; Registers used:
 47647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47648 ;; Tracked objects:
 47649 ;;		On entry : 3F/0
 47650 ;;		On exit  : 0/0
 47651 ;;		Unchanged: 0/0
 47652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47657 ;;Total ram usage:        0 bytes
 47658 ;; Hardware stack levels used:    1
 47659 ;; Hardware stack levels required when called:    8
 47660 ;; This function calls:
 47661 ;;		Absolute function
 47662 ;;		_TMR5_DefaultInterruptHandler
 47663 ;; This function is called by:
 47664 ;;		_TMR5_ISR
 47665 ;; This function uses a reentrant model
 47666 ;;
 47667                           
 47668                           	psect	text191
 47669  002AC4                     __ptext191:
 47670                           	opt callstack 0
 47671  002AC4                     _TMR5_CallBack:
 47672                           	opt callstack 8
 47673                           
 47674                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 47675                           
 47676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47677                           ;incstack = 0
 47678  002AC4  0100               	movlb	0	; () banked
 47679  002AC6  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47680  002AC8  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47681  002ACA  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47682  002ACC  B4D8               	btfsc	status,2,c
 47683  002ACE  0012               	return	
 47684                           
 47685                           ; BSR set to: 0
 47686                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 47687  002AD0  D801               	call	u1333_28
 47688  002AD2  0012               	return	
 47689  002AD4                     u1333_28:
 47690  002AD4  0005               	push	
 47691  002AD6  6EFA               	movwf	pclath,c
 47692  002AD8  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47693  002ADA  6EFD               	movwf	tosl,c
 47694  002ADC  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47695  002ADE  6EFE               	movwf	tosh,c
 47696  002AE0  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47697  002AE2  6EFF               	movwf	tosu,c
 47698  002AE4  50FA               	movf	pclath,w,c
 47699  002AE6  0012               	return		;indir
 47700  002AE8                     __end_of_TMR5_CallBack:
 47701                           	opt callstack 0
 47702                           
 47703 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 47704 ;; Defined at:
 47705 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 47706 ;; Parameters:    Size  Location     Type
 47707 ;;		None
 47708 ;; Auto vars:     Size  Location     Type
 47709 ;;		None
 47710 ;; Return value:  Size  Location     Type
 47711 ;;                  1  [STACK] void 
 47712 ;; Registers used:
 47713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47714 ;; Tracked objects:
 47715 ;;		On entry : 3F/0
 47716 ;;		On exit  : 0/0
 47717 ;;		Unchanged: 0/0
 47718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47723 ;;Total ram usage:        0 bytes
 47724 ;; Hardware stack levels used:    1
 47725 ;; Hardware stack levels required when called:    7
 47726 ;; This function calls:
 47727 ;;		_check_day_time
 47728 ;; This function is called by:
 47729 ;;		_TMR5_Initialize
 47730 ;;		_TMR5_CallBack
 47731 ;; This function uses a reentrant model
 47732 ;;
 47733                           
 47734                           	psect	text192
 47735  002514                     __ptext192:
 47736                           	opt callstack 0
 47737  002514                     _TMR5_DefaultInterruptHandler:
 47738                           	opt callstack 8
 47739                           
 47740                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 47741                           
 47742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47743                           ;incstack = 0
 47744  002514  A0BE               	btfss	190,0,c	;volatile
 47745  002516  D002               	goto	u1254_20
 47746  002518  0E01               	movlw	1
 47747  00251A  D001               	goto	u1254_26
 47748  00251C                     u1254_20:
 47749  00251C  0E00               	movlw	0
 47750  00251E                     u1254_26:
 47751  00251E  0AFF               	xorlw	255
 47752  002520  6E35               	movwf	(btemp+11)^0,c
 47753  002522  50BE               	movf	190,w,c	;volatile
 47754  002524  1835               	xorwf	(btemp+11)^0,w,c
 47755  002526  0BFE               	andlw	-2
 47756  002528  1835               	xorwf	(btemp+11)^0,w,c
 47757  00252A  6EBE               	movwf	190,c	;volatile
 47758                           
 47759                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 47760  00252C  0E01               	movlw	1
 47761  00252E  0102               	movlb	2	; () banked
 47762  002530  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 47763  002532  0E00               	movlw	0
 47764  002534  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 47765  002536  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 47766  002538  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 47767                           
 47768                           ; BSR set to: 2
 47769                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 47770  00253A  0E01               	movlw	1
 47771  00253C  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 47772  00253E  0E00               	movlw	0
 47773  002540  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 47774  002542  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 47775  002544  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 47776                           
 47777                           ; BSR set to: 2
 47778                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 47779  002546  EC47  F0D1         	call	_check_day_time	;wreg free
 47780                           
 47781                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47782  00254A  0012               	return		;funcret
 47783  00254C                     __end_of_TMR5_DefaultInterruptHandler:
 47784                           	opt callstack 0
 47785                           
 47786 ;; *************** function _check_day_time *****************
 47787 ;; Defined at:
 47788 ;;		line 167 in file "mbmc.c"
 47789 ;; Parameters:    Size  Location     Type
 47790 ;;		None
 47791 ;; Auto vars:     Size  Location     Type
 47792 ;;  light           4  [STACK] float 
 47793 ;; Return value:  Size  Location     Type
 47794 ;;                  1  [STACK] _Bool 
 47795 ;; Registers used:
 47796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47797 ;; Tracked objects:
 47798 ;;		On entry : 3F/2
 47799 ;;		On exit  : 0/0
 47800 ;;		Unchanged: 0/0
 47801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47806 ;;Total ram usage:        0 bytes
 47807 ;; Hardware stack levels used:    1
 47808 ;; Hardware stack levels required when called:    6
 47809 ;; This function calls:
 47810 ;;		___flge
 47811 ;;		_conv_raw_result
 47812 ;;		_get_ac_charger_relay
 47813 ;;		_set_ac_charger_relay
 47814 ;;		_time
 47815 ;; This function is called by:
 47816 ;;		_TMR5_DefaultInterruptHandler
 47817 ;; This function uses a reentrant model
 47818 ;;
 47819                           
 47820                           	psect	text193
 47821  01A28E                     __ptext193:
 47822                           	opt callstack 0
 47823  01A28E                     _check_day_time:
 47824                           	opt callstack 0
 47825                           
 47826                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47827  01A28E  52E6               	movf	postinc1,f,c
 47828  01A290  52E6               	movf	postinc1,f,c
 47829  01A292  52E6               	movf	postinc1,f,c
 47830  01A294  52E6               	movf	postinc1,f,c
 47831                           
 47832                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 47833                           
 47834                           ;incstack = 0
 47835  01A296  0E00               	movlw	0
 47836  01A298  6EE6               	movwf	postinc1,c
 47837  01A29A  0E0D               	movlw	13
 47838  01A29C  6EE6               	movwf	postinc1,c
 47839  01A29E  EC9F  F0C8         	call	_conv_raw_result	;wreg free
 47840                           
 47841                           ;stkvar	_light @ sp[(-4)+0]
 47842  01A2A2  0EFC               	movlw	-4
 47843  01A2A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 47844  01A2AA  0EFD               	movlw	-3
 47845  01A2AC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 47846  01A2B2  0EFE               	movlw	-2
 47847  01A2B4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 47848  01A2BA  0EFF               	movlw	-1
 47849  01A2BC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 47850                           
 47851                           ;mbmc.c: 176:  if (C.day_update) {
 47852  01A2C2  EE22  F247         	lfsr	2,_C+328	;volatile
 47853  01A2C6  50DE               	movf	postinc2,w,c
 47854  01A2C8  10DE               	iorwf	postinc2,w,c
 47855  01A2CA  10DE               	iorwf	postinc2,w,c
 47856  01A2CC  10DE               	iorwf	postinc2,w,c
 47857  01A2CE  B4D8               	btfsc	status,2,c
 47858  01A2D0  D068               	goto	l12799
 47859                           
 47860                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 47861  01A2D2  0062  F91C  F032   	movff	_C+328,btemp+8	;volatile
 47862  01A2D8  0062  F920  F033   	movff	_C+329,btemp+9	;volatile
 47863  01A2DE  0062  F924  F034   	movff	_C+330,btemp+10	;volatile
 47864  01A2E4  0062  F928  F035   	movff	_C+331,btemp+11	;volatile
 47865  01A2EA  5032               	movf	(btemp+8)^0,w,c
 47866  01A2EC  6E3A               	movwf	(btemp+16)^0,c
 47867  01A2EE  5033               	movf	(btemp+9)^0,w,c
 47868  01A2F0  6E3B               	movwf	(btemp+17)^0,c
 47869  01A2F2  5034               	movf	(btemp+10)^0,w,c
 47870  01A2F4  6E3C               	movwf	(btemp+18)^0,c
 47871  01A2F6  5035               	movf	(btemp+11)^0,w,c
 47872  01A2F8  6E3D               	movwf	(btemp+19)^0,c
 47873  01A2FA  6A3E               	clrf	(btemp+20)^0,c
 47874  01A2FC  6A3F               	clrf	(btemp+21)^0,c
 47875  01A2FE  6A40               	clrf	(btemp+22)^0,c
 47876  01A300  6A41               	clrf	(btemp+23)^0,c
 47877  01A302  0E00               	movlw	0
 47878  01A304  6EE6               	movwf	postinc1,c
 47879  01A306  0E00               	movlw	0
 47880  01A308  6EE6               	movwf	postinc1,c
 47881  01A30A  EC8F  F00E         	call	_time	;wreg free
 47882  01A30E  52E5               	movf	postdec1,f,c
 47883  01A310  006F FF9C  F049    	movff	indf1,btemp+31
 47884  01A316  52E5               	movf	postdec1,f,c
 47885  01A318  006F FF9C  F048    	movff	indf1,btemp+30
 47886  01A31E  52E5               	movf	postdec1,f,c
 47887  01A320  006F FF9C  F047    	movff	indf1,btemp+29
 47888  01A326  52E5               	movf	postdec1,f,c
 47889  01A328  006F FF9C  F046    	movff	indf1,btemp+28
 47890  01A32E  52E5               	movf	postdec1,f,c
 47891  01A330  006F FF9C  F045    	movff	indf1,btemp+27
 47892  01A336  52E5               	movf	postdec1,f,c
 47893  01A338  006F FF9C  F044    	movff	indf1,btemp+26
 47894  01A33E  52E5               	movf	postdec1,f,c
 47895  01A340  006F FF9C  F043    	movff	indf1,btemp+25
 47896  01A346  52E5               	movf	postdec1,f,c
 47897  01A348  006F FF9C  F042    	movff	indf1,btemp+24
 47898  01A34E  503A               	movf	(btemp+16)^0,w,c
 47899  01A350  5C42               	subwf	(btemp+24)^0,w,c
 47900  01A352  503B               	movf	(btemp+17)^0,w,c
 47901  01A354  5843               	subwfb	(btemp+25)^0,w,c
 47902  01A356  503C               	movf	(btemp+18)^0,w,c
 47903  01A358  5844               	subwfb	(btemp+26)^0,w,c
 47904  01A35A  503D               	movf	(btemp+19)^0,w,c
 47905  01A35C  5845               	subwfb	(btemp+27)^0,w,c
 47906  01A35E  503E               	movf	(btemp+20)^0,w,c
 47907  01A360  5846               	subwfb	(btemp+28)^0,w,c
 47908  01A362  503F               	movf	(btemp+21)^0,w,c
 47909  01A364  5847               	subwfb	(btemp+29)^0,w,c
 47910  01A366  5040               	movf	(btemp+22)^0,w,c
 47911  01A368  5848               	subwfb	(btemp+30)^0,w,c
 47912  01A36A  5049               	movf	(btemp+31)^0,w,c
 47913  01A36C  0A80               	xorlw	128
 47914  01A36E  6E2A               	movwf	btemp^0,c
 47915  01A370  5041               	movf	(btemp+23)^0,w,c
 47916  01A372  0A80               	xorlw	128
 47917  01A374  582A               	subwfb	btemp^0,w,c
 47918  01A376  A0D8               	btfss	status,0,c
 47919  01A378  D014               	goto	l12799
 47920                           
 47921                           ; BSR set to: 57
 47922                           ;mbmc.c: 178:    C.day_update = 0;
 47923  01A37A  0E00               	movlw	0
 47924  01A37C  006F FFA0  FA47    	movff	wreg,_C+328	;volatile
 47925  01A382  0E00               	movlw	0
 47926  01A384  006F FFA0  FA48    	movff	wreg,_C+329	;volatile
 47927  01A38A  0E00               	movlw	0
 47928  01A38C  006F FFA0  FA49    	movff	wreg,_C+330	;volatile
 47929  01A392  0E00               	movlw	0
 47930  01A394  006F FFA0  FA4A    	movff	wreg,_C+331	;volatile
 47931                           
 47932                           ;mbmc.c: 179:    C.dupdate = 1;
 47933  01A39A  0E01               	movlw	1
 47934  01A39C  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
 47935  01A3A2                     l12799:
 47936                           
 47937                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 47938  01A3A2  2A51               	incf	check_day_time@day_delay^0,f,c
 47939  01A3A4  0451               	decf	check_day_time@day_delay^0,w,c
 47940  01A3A6  A4D8               	btfss	status,2,c
 47941  01A3A8  D123               	goto	l2205
 47942  01A3AA  0102               	movlb	2	; () banked
 47943  01A3AC  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 47944  01A3AE  B4D8               	btfsc	status,2,c
 47945  01A3B0  D11F               	goto	l2205
 47946                           
 47947                           ; BSR set to: 2
 47948                           ;mbmc.c: 184:   if (C.soc > 3) {
 47949  01A3B2  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47950  01A3B6  0E01               	movlw	1
 47951  01A3B8  50DB               	movf	plusw2,w,c
 47952  01A3BA  E104               	bnz	u1220_20
 47953  01A3BC  0E04               	movlw	4
 47954  01A3BE  5CDE               	subwf	postinc2,w,c
 47955  01A3C0  A0D8               	btfss	status,0,c
 47956  01A3C2  D0ED               	goto	l12833
 47957  01A3C4                     u1220_20:
 47958                           
 47959                           ; BSR set to: 2
 47960                           ;mbmc.c: 185:    if (!C.day) {
 47961  01A3C4  EE22  F23D         	lfsr	2,_C+318	;volatile
 47962  01A3C8  50DF               	movf	indf2,w,c
 47963  01A3CA  A4D8               	btfss	status,2,c
 47964  01A3CC  D065               	goto	l12819
 47965                           
 47966                           ; BSR set to: 2
 47967                           ;mbmc.c: 186:     if (light > 22.0) {
 47968                           ;stkvar	_light @ sp[(-4)+0]
 47969  01A3CE  0EFC               	movlw	-4
 47970  01A3D0  006F FF8F FFE6     	movff	plusw1,postinc1
 47971  01A3D6  006F FF8F FFE6     	movff	plusw1,postinc1
 47972  01A3DC  006F FF8F FFE6     	movff	plusw1,postinc1
 47973  01A3E2  006F FF8F FFE6     	movff	plusw1,postinc1
 47974  01A3E8  0E00               	movlw	0
 47975  01A3EA  6EE6               	movwf	postinc1,c
 47976  01A3EC  0E00               	movlw	0
 47977  01A3EE  6EE6               	movwf	postinc1,c
 47978  01A3F0  0EB0               	movlw	176
 47979  01A3F2  6EE6               	movwf	postinc1,c
 47980  01A3F4  0E41               	movlw	65
 47981  01A3F6  6EE6               	movwf	postinc1,c
 47982  01A3F8  EC51  F0F6         	call	___flge	;wreg free
 47983  01A3FC  B02A               	btfsc	btemp& (0+255),0,c
 47984  01A3FE  D0F8               	goto	l2205
 47985                           
 47986                           ;mbmc.c: 187:      C.day = 1;
 47987  01A400  0E01               	movlw	1
 47988  01A402  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 47989                           
 47990                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 47991  01A408  0E00               	movlw	0
 47992  01A40A  6EE6               	movwf	postinc1,c
 47993  01A40C  0E00               	movlw	0
 47994  01A40E  6EE6               	movwf	postinc1,c
 47995  01A410  EC8F  F00E         	call	_time	;wreg free
 47996  01A414  52E5               	movf	postdec1,f,c
 47997  01A416  006F FF9C  F041    	movff	indf1,btemp+23
 47998  01A41C  52E5               	movf	postdec1,f,c
 47999  01A41E  006F FF9C  F040    	movff	indf1,btemp+22
 48000  01A424  52E5               	movf	postdec1,f,c
 48001  01A426  006F FF9C  F03F    	movff	indf1,btemp+21
 48002  01A42C  52E5               	movf	postdec1,f,c
 48003  01A42E  006F FF9C  F03E    	movff	indf1,btemp+20
 48004  01A434  52E5               	movf	postdec1,f,c
 48005  01A436  006F FF9C  F03D    	movff	indf1,btemp+19
 48006  01A43C  52E5               	movf	postdec1,f,c
 48007  01A43E  006F FF9C  F03C    	movff	indf1,btemp+18
 48008  01A444  52E5               	movf	postdec1,f,c
 48009  01A446  006F FF9C  F03B    	movff	indf1,btemp+17
 48010  01A44C  52E5               	movf	postdec1,f,c
 48011  01A44E  006F FF9C  F03A    	movff	indf1,btemp+16
 48012  01A454  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48013  01A45A  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48014  01A460  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48015  01A466  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48016  01A46C  0060  F0C8  FA3F   	movff	btemp+8,_C+320	;volatile
 48017  01A472  0060  F0CC  FA40   	movff	btemp+9,_C+321	;volatile
 48018  01A478  0060  F0D0  FA41   	movff	btemp+10,_C+322	;volatile
 48019  01A47E  0060  F0D4  FA42   	movff	btemp+11,_C+323	;volatile
 48020                           
 48021                           ; BSR set to: 57
 48022                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 48023  01A484  ECFB  F016         	call	_get_ac_charger_relay	;wreg free
 48024  01A488  502A               	movf	btemp^0,w,c
 48025  01A48A  B4D8               	btfsc	status,2,c
 48026  01A48C  D0B5               	goto	l2201
 48027                           
 48028                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 48029  01A48E  0E00               	movlw	0
 48030  01A490  6EE6               	movwf	postinc1,c
 48031  01A492  ECE5  F016         	call	_set_ac_charger_relay	;wreg free
 48032  01A496  D0B0               	goto	l2201
 48033  01A498                     l12819:
 48034                           
 48035                           ; BSR set to: 2
 48036                           ;mbmc.c: 195:     if (light < 12.0) {
 48037  01A498  0E00               	movlw	0
 48038  01A49A  6EE6               	movwf	postinc1,c
 48039  01A49C  0E00               	movlw	0
 48040  01A49E  6EE6               	movwf	postinc1,c
 48041  01A4A0  0E40               	movlw	64
 48042  01A4A2  6EE6               	movwf	postinc1,c
 48043  01A4A4  0E41               	movlw	65
 48044  01A4A6  6EE6               	movwf	postinc1,c
 48045                           
 48046                           ;stkvar	_light @ sp[(-8)+0]
 48047  01A4A8  0EF8               	movlw	-8
 48048  01A4AA  006F FF8F FFE6     	movff	plusw1,postinc1
 48049  01A4B0  006F FF8F FFE6     	movff	plusw1,postinc1
 48050  01A4B6  006F FF8F FFE6     	movff	plusw1,postinc1
 48051  01A4BC  006F FF8F FFE6     	movff	plusw1,postinc1
 48052  01A4C2  EC51  F0F6         	call	___flge	;wreg free
 48053  01A4C6  B02A               	btfsc	btemp& (0+255),0,c
 48054  01A4C8  D093               	goto	l2205
 48055                           
 48056                           ;mbmc.c: 196:      C.day = 0;
 48057  01A4CA  0E00               	movlw	0
 48058  01A4CC  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 48059                           
 48060                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 48061  01A4D2  0E00               	movlw	0
 48062  01A4D4  6EE6               	movwf	postinc1,c
 48063  01A4D6  0E00               	movlw	0
 48064  01A4D8  6EE6               	movwf	postinc1,c
 48065  01A4DA  EC8F  F00E         	call	_time	;wreg free
 48066  01A4DE  52E5               	movf	postdec1,f,c
 48067  01A4E0  006F FF9C  F041    	movff	indf1,btemp+23
 48068  01A4E6  52E5               	movf	postdec1,f,c
 48069  01A4E8  006F FF9C  F040    	movff	indf1,btemp+22
 48070  01A4EE  52E5               	movf	postdec1,f,c
 48071  01A4F0  006F FF9C  F03F    	movff	indf1,btemp+21
 48072  01A4F6  52E5               	movf	postdec1,f,c
 48073  01A4F8  006F FF9C  F03E    	movff	indf1,btemp+20
 48074  01A4FE  52E5               	movf	postdec1,f,c
 48075  01A500  006F FF9C  F03D    	movff	indf1,btemp+19
 48076  01A506  52E5               	movf	postdec1,f,c
 48077  01A508  006F FF9C  F03C    	movff	indf1,btemp+18
 48078  01A50E  52E5               	movf	postdec1,f,c
 48079  01A510  006F FF9C  F03B    	movff	indf1,btemp+17
 48080  01A516  52E5               	movf	postdec1,f,c
 48081  01A518  006F FF9C  F03A    	movff	indf1,btemp+16
 48082  01A51E  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48083  01A524  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48084  01A52A  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48085  01A530  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48086  01A536  0060  F0C8  FA43   	movff	btemp+8,_C+324	;volatile
 48087  01A53C  0060  F0CC  FA44   	movff	btemp+9,_C+325	;volatile
 48088  01A542  0060  F0D0  FA45   	movff	btemp+10,_C+326	;volatile
 48089  01A548  0060  F0D4  FA46   	movff	btemp+11,_C+327	;volatile
 48090                           
 48091                           ; BSR set to: 57
 48092                           ;mbmc.c: 198:      C.day_update = C.day_end + 14400;
 48093  01A54E  EE22  F243         	lfsr	2,_C+324	;volatile
 48094  01A552  0E40               	movlw	64
 48095  01A554  24DE               	addwf	postinc2,w,c
 48096  01A556  6E32               	movwf	(btemp+8)^0,c
 48097  01A558  0E38               	movlw	56
 48098  01A55A  20DE               	addwfc	postinc2,w,c
 48099  01A55C  6E33               	movwf	(btemp+9)^0,c
 48100  01A55E  0E00               	movlw	0
 48101  01A560  20DE               	addwfc	postinc2,w,c
 48102  01A562  6E34               	movwf	(btemp+10)^0,c
 48103  01A564  0E00               	movlw	0
 48104  01A566  20DE               	addwfc	postinc2,w,c
 48105  01A568  6E35               	movwf	(btemp+11)^0,c
 48106  01A56A  0060  F0C8  FA47   	movff	btemp+8,_C+328	;volatile
 48107  01A570  0060  F0CC  FA48   	movff	btemp+9,_C+329	;volatile
 48108  01A576  0060  F0D0  FA49   	movff	btemp+10,_C+330	;volatile
 48109  01A57C  0060  F0D4  FA4A   	movff	btemp+11,_C+331	;volatile
 48110                           
 48111                           ; BSR set to: 57
 48112                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 48113  01A582  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48114  01A586  0E01               	movlw	1
 48115  01A588  50DB               	movf	plusw2,w,c
 48116  01A58A  E136               	bnz	l2201
 48117  01A58C  0E14               	movlw	20
 48118  01A58E  5CDE               	subwf	postinc2,w,c
 48119  01A590  B0D8               	btfsc	status,0,c
 48120  01A592  D032               	goto	l2201
 48121                           
 48122                           ; BSR set to: 57
 48123                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 48124  01A594  0E01               	movlw	1
 48125  01A596  6EE6               	movwf	postinc1,c
 48126  01A598  ECE5  F016         	call	_set_ac_charger_relay	;wreg free
 48127  01A59C  D02D               	goto	l2201
 48128  01A59E                     l12833:
 48129                           
 48130                           ; BSR set to: 2
 48131                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 48132  01A59E  EE22  F177         	lfsr	2,_C+120	;volatile
 48133  01A5A2  006F FF7B FFE6     	movff	postinc2,postinc1
 48134  01A5A8  006F FF7B FFE6     	movff	postinc2,postinc1
 48135  01A5AE  006F FF7B FFE6     	movff	postinc2,postinc1
 48136  01A5B4  006F FF7B FFE6     	movff	postinc2,postinc1
 48137  01A5BA  EE22  F17B         	lfsr	2,_C+124	;volatile
 48138  01A5BE  006F FF7B FFE6     	movff	postinc2,postinc1
 48139  01A5C4  006F FF7B FFE6     	movff	postinc2,postinc1
 48140  01A5CA  006F FF7B FFE6     	movff	postinc2,postinc1
 48141  01A5D0  006F FF7B FFE6     	movff	postinc2,postinc1
 48142  01A5D6  EC51  F0F6         	call	___flge	;wreg free
 48143  01A5DA  B02A               	btfsc	btemp& (0+255),0,c
 48144  01A5DC  D009               	goto	l2205
 48145                           
 48146                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 48147  01A5DE  ECFB  F016         	call	_get_ac_charger_relay	;wreg free
 48148  01A5E2  502A               	movf	btemp^0,w,c
 48149  01A5E4  A4D8               	btfss	status,2,c
 48150  01A5E6  D004               	goto	l2205
 48151                           
 48152                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 48153  01A5E8  0E01               	movlw	1
 48154  01A5EA  6EE6               	movwf	postinc1,c
 48155  01A5EC  ECE5  F016         	call	_set_ac_charger_relay	;wreg free
 48156  01A5F0                     l2205:
 48157                           
 48158                           ;mbmc.c: 216:  if (day_delay >= 240)
 48159  01A5F0  0EEF               	movlw	239
 48160  01A5F2  6451               	cpfsgt	check_day_time@day_delay^0,c
 48161  01A5F4  D001               	goto	l2201
 48162                           
 48163                           ;mbmc.c: 217:   day_delay = 0;
 48164  01A5F6  6A51               	clrf	check_day_time@day_delay^0,c
 48165  01A5F8                     l2201:
 48166                           
 48167                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 48168  01A5F8  52E5               	movf	postdec1,f,c
 48169  01A5FA  52E5               	movf	postdec1,f,c
 48170  01A5FC  52E5               	movf	postdec1,f,c
 48171  01A5FE  52E5               	movf	postdec1,f,c
 48172  01A600  0012               	return		;funcret
 48173  01A602                     __end_of_check_day_time:
 48174                           	opt callstack 0
 48175                           
 48176 ;; *************** function _set_ac_charger_relay *****************
 48177 ;; Defined at:
 48178 ;;		line 136 in file "mbmc.c"
 48179 ;; Parameters:    Size  Location     Type
 48180 ;;  mode            1  [STACK] const _Bool 
 48181 ;; Auto vars:     Size  Location     Type
 48182 ;;		None
 48183 ;; Return value:  Size  Location     Type
 48184 ;;                  1  [STACK] void 
 48185 ;; Registers used:
 48186 ;;		wreg, fsr1l, fsr1h
 48187 ;; Tracked objects:
 48188 ;;		On entry : 0/39
 48189 ;;		On exit  : 0/0
 48190 ;;		Unchanged: 0/0
 48191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48196 ;;Total ram usage:        0 bytes
 48197 ;; Hardware stack levels used:    1
 48198 ;; Hardware stack levels required when called:    3
 48199 ;; This function calls:
 48200 ;;		Nothing
 48201 ;; This function is called by:
 48202 ;;		_check_day_time
 48203 ;; This function uses a reentrant model
 48204 ;;
 48205                           
 48206                           	psect	text194
 48207  002DCA                     __ptext194:
 48208                           	opt callstack 0
 48209  002DCA                     _set_ac_charger_relay:
 48210                           	opt callstack 10
 48211                           
 48212                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 48213                           ;stkvar	_mode @ sp[(0)+-1]
 48214                           
 48215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48216                           ;incstack = 0
 48217  002DCA  0EFF               	movlw	-1
 48218  002DCC  B0E3               	btfsc	plusw1,0,c
 48219  002DCE  D002               	bra	u1180_25
 48220  002DD0  9CBD               	bcf	189,6,c	;volatile
 48221  002DD2  D001               	bra	u1180_26
 48222  002DD4                     u1180_25:
 48223  002DD4  8CBD               	bsf	189,6,c	;volatile
 48224  002DD6                     u1180_26:
 48225                           
 48226                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 48227  002DD6  52E5               	movf	postdec1,f,c
 48228  002DD8  0012               	return		;funcret
 48229  002DDA                     __end_of_set_ac_charger_relay:
 48230                           	opt callstack 0
 48231                           
 48232 ;; *************** function _get_ac_charger_relay *****************
 48233 ;; Defined at:
 48234 ;;		line 141 in file "mbmc.c"
 48235 ;; Parameters:    Size  Location     Type
 48236 ;;		None
 48237 ;; Auto vars:     Size  Location     Type
 48238 ;;		None
 48239 ;; Return value:  Size  Location     Type
 48240 ;;                  1  [STACK] _Bool 
 48241 ;; Registers used:
 48242 ;;		btemp
 48243 ;; Tracked objects:
 48244 ;;		On entry : 0/39
 48245 ;;		On exit  : 0/0
 48246 ;;		Unchanged: 0/0
 48247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48252 ;;Total ram usage:        0 bytes
 48253 ;; Hardware stack levels used:    1
 48254 ;; Hardware stack levels required when called:    3
 48255 ;; This function calls:
 48256 ;;		Nothing
 48257 ;; This function is called by:
 48258 ;;		_check_day_time
 48259 ;;		_calc_bsoc
 48260 ;; This function uses a reentrant model
 48261 ;;
 48262                           
 48263                           	psect	text195
 48264  002DF6                     __ptext195:
 48265                           	opt callstack 0
 48266  002DF6                     _get_ac_charger_relay:
 48267                           	opt callstack 11
 48268                           
 48269                           ;mbmc.c: 143:  return LATDbits.LATD6;
 48270                           
 48271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48272                           ;incstack = 0
 48273  002DF6  ACBD               	btfss	189,6,c	;volatile
 48274  002DF8  D003               	goto	u1243_20
 48275  002DFA  6A2A               	clrf	btemp^0,c
 48276  002DFC  2A2A               	incf	btemp^0,f,c
 48277  002DFE  0012               	return	
 48278  002E00                     u1243_20:
 48279  002E00  6A2A               	clrf	btemp^0,c
 48280                           
 48281                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 48282  002E02  0012               	return		;funcret
 48283  002E04                     __end_of_get_ac_charger_relay:
 48284                           	opt callstack 0
 48285                           
 48286 ;; *************** function _TMR3_ISR *****************
 48287 ;; Defined at:
 48288 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 48289 ;; Parameters:    Size  Location     Type
 48290 ;;		None
 48291 ;; Auto vars:     Size  Location     Type
 48292 ;;		None
 48293 ;; Return value:  Size  Location     Type
 48294 ;;                  1    wreg      void 
 48295 ;; Registers used:
 48296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48297 ;; Tracked objects:
 48298 ;;		On entry : 0/0
 48299 ;;		On exit  : 3F/0
 48300 ;;		Unchanged: 0/0
 48301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48304 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48305 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48306 ;;Total ram usage:       25 bytes
 48307 ;; Hardware stack levels used:    1
 48308 ;; Hardware stack levels required when called:   14
 48309 ;; This function calls:
 48310 ;;		_TMR3_CallBack
 48311 ;;		_TMR3_WriteTimer
 48312 ;; This function is called by:
 48313 ;;		Interrupt level 1
 48314 ;; This function uses a non-reentrant model
 48315 ;;
 48316                           
 48317                           	psect	text196
 48318  01EE04                     __ptext196:
 48319                           	opt callstack 0
 48320  01EE04                     _TMR3_ISR:
 48321                           	opt callstack 3
 48322                           
 48323                           ;incstack = 0
 48324  01EE04  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 48325  01EE0A  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 48326  01EE10  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 48327  01EE16  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 48328  01EE1C  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 48329  01EE22  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 48330  01EE28  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 48331  01EE2E  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 48332  01EE34  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 48333  01EE3A  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 48334  01EE40  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 48335  01EE46  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 48336  01EE4C  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 48337  01EE52  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 48338  01EE58  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 48339  01EE5E  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 48340  01EE64  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 48341  01EE6A  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 48342  01EE70  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 48343  01EE76  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 48344  01EE7C  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 48345  01EE82  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 48346  01EE88  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 48347  01EE8E  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 48348  01EE94  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 48349  01EE9A  EE16  F19B         	lfsr	1,___intlo_sp
 48350                           
 48351                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 48352  01EE9E  0139               	movlb	57	; () banked
 48353  01EEA0  9DA6               	bcf	166,6,b	;volatile
 48354                           
 48355                           ; BSR set to: 57
 48356                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 48357  01EEA2  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 48358  01EEA8  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 48359  01EEAE  ECF3  F011         	call	_TMR3_WriteTimer	;wreg free
 48360                           
 48361                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 48362  01EEB2  0100               	movlb	0	; () banked
 48363  01EEB4  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 48364  01EEB6  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 48365  01EEB8  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 48366  01EEBA  E104               	bnz	i1u1766_20
 48367  01EEBC  0E28               	movlw	40
 48368  01EEBE  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 48369  01EEC0  A0D8               	btfss	status,0,c
 48370  01EEC2  D005               	goto	i1l1209
 48371  01EEC4                     i1u1766_20:
 48372                           
 48373                           ; BSR set to: 0
 48374                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 48375  01EEC4  EC74  F015         	call	_TMR3_CallBack	;wreg free
 48376                           
 48377                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 48378  01EEC8  0100               	movlb	0	; () banked
 48379  01EECA  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 48380  01EECC  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 48381  01EECE                     i1l1209:
 48382                           
 48383                           ; BSR set to: 0
 48384  01EECE  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 48385  01EED4  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 48386  01EEDA  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 48387  01EEE0  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 48388  01EEE6  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 48389  01EEEC  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 48390  01EEF2  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 48391  01EEF8  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 48392  01EEFE  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 48393  01EF04  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 48394  01EF0A  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 48395  01EF10  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 48396  01EF16  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 48397  01EF1C  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 48398  01EF22  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 48399  01EF28  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 48400  01EF2E  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 48401  01EF34  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 48402  01EF3A  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 48403  01EF40  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 48404  01EF46  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 48405  01EF4C  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 48406  01EF52  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 48407  01EF58  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 48408  01EF5E  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 48409  01EF64  0011               	retfie		f
 48410  01EF66                     __end_of_TMR3_ISR:
 48411                           	opt callstack 0
 48412                           
 48413 ;; *************** function _TMR3_WriteTimer *****************
 48414 ;; Defined at:
 48415 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 48416 ;; Parameters:    Size  Location     Type
 48417 ;;  timerVal        2  [STACK] unsigned short 
 48418 ;; Auto vars:     Size  Location     Type
 48419 ;;		None
 48420 ;; Return value:  Size  Location     Type
 48421 ;;                  1  [STACK] void 
 48422 ;; Registers used:
 48423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 48424 ;; Tracked objects:
 48425 ;;		On entry : 3F/39
 48426 ;;		On exit  : 0/0
 48427 ;;		Unchanged: 0/0
 48428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48433 ;;Total ram usage:        0 bytes
 48434 ;; Hardware stack levels used:    1
 48435 ;; Hardware stack levels required when called:    3
 48436 ;; This function calls:
 48437 ;;		Nothing
 48438 ;; This function is called by:
 48439 ;;		_TMR3_ISR
 48440 ;; This function uses a reentrant model
 48441 ;;
 48442                           
 48443                           	psect	text197
 48444  0023E6                     __ptext197:
 48445                           	opt callstack 0
 48446  0023E6                     _TMR3_WriteTimer:
 48447                           	opt callstack 13
 48448                           
 48449                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 48450                           
 48451                           ; BSR set to: 0
 48452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48453                           ;incstack = 0
 48454  0023E6  A4A6               	btfss	166,2,c	;volatile
 48455  0023E8  D00F               	goto	l14099
 48456                           
 48457                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 48458  0023EA  90A6               	bcf	166,0,c	;volatile
 48459                           
 48460                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 48461                           ;stkvar	_timerVal @ sp[(0)+-2]
 48462  0023EC  0EFF               	movlw	255
 48463  0023EE  24E1               	addwf	fsr1l,w,c
 48464  0023F0  6ED9               	movwf	fsr2l,c
 48465  0023F2  0EFF               	movlw	255
 48466  0023F4  20E2               	addwfc	fsr1h,w,c
 48467  0023F6  6EDA               	movwf	fsr2h,c
 48468  0023F8  50DF               	movf	indf2,w,c
 48469  0023FA  6EA5               	movwf	165,c	;volatile
 48470                           
 48471                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 48472                           ;stkvar	_timerVal @ sp[(0)+-2]
 48473  0023FC  0EFE               	movlw	-2
 48474  0023FE  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48475                           
 48476                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 48477  002404  80A6               	bsf	166,0,c	;volatile
 48478                           
 48479                           ;mcc_generated_files/tmr3.c: 141:     }
 48480  002406  D00C               	goto	l1192
 48481  002408                     l14099:
 48482                           
 48483                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 48484                           ;stkvar	_timerVal @ sp[(0)+-2]
 48485  002408  0EFF               	movlw	255
 48486  00240A  24E1               	addwf	fsr1l,w,c
 48487  00240C  6ED9               	movwf	fsr2l,c
 48488  00240E  0EFF               	movlw	255
 48489  002410  20E2               	addwfc	fsr1h,w,c
 48490  002412  6EDA               	movwf	fsr2h,c
 48491  002414  50DF               	movf	indf2,w,c
 48492  002416  6EA5               	movwf	165,c	;volatile
 48493                           
 48494                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 48495                           ;stkvar	_timerVal @ sp[(0)+-2]
 48496  002418  0EFE               	movlw	-2
 48497  00241A  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48498  002420                     l1192:
 48499                           
 48500                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 48501  002420  52E5               	movf	postdec1,f,c
 48502  002422  52E5               	movf	postdec1,f,c
 48503  002424  0012               	return		;funcret
 48504  002426                     __end_of_TMR3_WriteTimer:
 48505                           	opt callstack 0
 48506                           
 48507 ;; *************** function _TMR3_CallBack *****************
 48508 ;; Defined at:
 48509 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 48510 ;; Parameters:    Size  Location     Type
 48511 ;;		None
 48512 ;; Auto vars:     Size  Location     Type
 48513 ;;		None
 48514 ;; Return value:  Size  Location     Type
 48515 ;;                  1  [STACK] void 
 48516 ;; Registers used:
 48517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48518 ;; Tracked objects:
 48519 ;;		On entry : 3F/0
 48520 ;;		On exit  : 0/0
 48521 ;;		Unchanged: 0/0
 48522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48527 ;;Total ram usage:        0 bytes
 48528 ;; Hardware stack levels used:    1
 48529 ;; Hardware stack levels required when called:   13
 48530 ;; This function calls:
 48531 ;;		Absolute function
 48532 ;;		_TMR3_DefaultInterruptHandler
 48533 ;;		_calc_bsoc
 48534 ;; This function is called by:
 48535 ;;		_TMR3_ISR
 48536 ;; This function uses a reentrant model
 48537 ;;
 48538                           
 48539                           	psect	text198
 48540  002AE8                     __ptext198:
 48541                           	opt callstack 0
 48542  002AE8                     _TMR3_CallBack:
 48543                           	opt callstack 3
 48544                           
 48545                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 48546                           
 48547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48548                           ;incstack = 0
 48549  002AE8  0100               	movlb	0	; () banked
 48550  002AEA  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48551  002AEC  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48552  002AEE  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48553  002AF0  B4D8               	btfsc	status,2,c
 48554  002AF2  0012               	return	
 48555                           
 48556                           ; BSR set to: 0
 48557                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 48558  002AF4  D801               	call	u1738_28
 48559  002AF6  0012               	return	
 48560  002AF8                     u1738_28:
 48561  002AF8  0005               	push	
 48562  002AFA  6EFA               	movwf	pclath,c
 48563  002AFC  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48564  002AFE  6EFD               	movwf	tosl,c
 48565  002B00  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48566  002B02  6EFE               	movwf	tosh,c
 48567  002B04  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48568  002B06  6EFF               	movwf	tosu,c
 48569  002B08  50FA               	movf	pclath,w,c
 48570  002B0A  0012               	return		;indir
 48571  002B0C                     __end_of_TMR3_CallBack:
 48572                           	opt callstack 0
 48573                           
 48574 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 48575 ;; Defined at:
 48576 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 48577 ;; Parameters:    Size  Location     Type
 48578 ;;		None
 48579 ;; Auto vars:     Size  Location     Type
 48580 ;;		None
 48581 ;; Return value:  Size  Location     Type
 48582 ;;                  1  [STACK] void 
 48583 ;; Registers used:
 48584 ;;		None
 48585 ;; Tracked objects:
 48586 ;;		On entry : 3F/0
 48587 ;;		On exit  : 0/0
 48588 ;;		Unchanged: 0/0
 48589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48594 ;;Total ram usage:        0 bytes
 48595 ;; Hardware stack levels used:    1
 48596 ;; Hardware stack levels required when called:    3
 48597 ;; This function calls:
 48598 ;;		Nothing
 48599 ;; This function is called by:
 48600 ;;		_TMR3_Initialize
 48601 ;;		_TMR3_CallBack
 48602 ;; This function uses a reentrant model
 48603 ;;
 48604                           
 48605                           	psect	text199
 48606  01DEF6                     __ptext199:
 48607                           	opt callstack 0
 48608  01DEF6                     _TMR3_DefaultInterruptHandler:
 48609                           	opt callstack 12
 48610                           
 48611                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48612                           
 48613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48614                           ;incstack = 0
 48615  01DEF6  0012               	return		;funcret
 48616  01DEF8                     __end_of_TMR3_DefaultInterruptHandler:
 48617                           	opt callstack 0
 48618                           
 48619 ;; *************** function _calc_bsoc *****************
 48620 ;; Defined at:
 48621 ;;		line 39 in file "bsoc.c"
 48622 ;; Parameters:    Size  Location     Type
 48623 ;;		None
 48624 ;; Auto vars:     Size  Location     Type
 48625 ;;  adj             4  [STACK] float 
 48626 ;;  log_ptr         2  [STACK] PTR unsigned char 
 48627 ;;		 -> port_data(512), 
 48628 ;; Return value:  Size  Location     Type
 48629 ;;                  1  [STACK] void 
 48630 ;; Registers used:
 48631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 48632 ;; Tracked objects:
 48633 ;;		On entry : 3F/0
 48634 ;;		On exit  : 6/2
 48635 ;;		Unchanged: 0/0
 48636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48641 ;;Total ram usage:        0 bytes
 48642 ;; Hardware stack levels used:    1
 48643 ;; Hardware stack levels required when called:   12
 48644 ;; This function calls:
 48645 ;;		_StartTimer
 48646 ;;		___asfladd
 48647 ;;		___fldiv
 48648 ;;		___flge
 48649 ;;		___flmul
 48650 ;;		___flneg
 48651 ;;		___fltol
 48652 ;;		_fabsf
 48653 ;;		_get_ac_charger_relay
 48654 ;;		_port_data_dma_ptr
 48655 ;;		_send_port_data_dma
 48656 ;;		_sprintf
 48657 ;;		_strlen
 48658 ;; This function is called by:
 48659 ;;		_init_bsoc
 48660 ;;		_TMR3_CallBack
 48661 ;; This function uses a reentrant model
 48662 ;;
 48663                           
 48664                           	psect	text200
 48665  01538A                     __ptext200:
 48666                           	opt callstack 0
 48667  01538A                     _calc_bsoc:
 48668                           	opt callstack 0
 48669                           
 48670                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48671  01538A  0E06               	movlw	6
 48672  01538C  26E1               	addwf	fsr1l,f,c
 48673  01538E  0E00               	movlw	0
 48674  015390  22E2               	addwfc	fsr1h,f,c
 48675                           
 48676                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 48677                           
 48678                           ;incstack = 0
 48679  015392  0E00               	movlw	0
 48680  015394  6E32               	movwf	(btemp+8)^0,c
 48681  015396  0E00               	movlw	0
 48682  015398  6E33               	movwf	(btemp+9)^0,c
 48683  01539A  0E80               	movlw	128
 48684  01539C  6E34               	movwf	(btemp+10)^0,c
 48685  01539E  0E3F               	movlw	63
 48686  0153A0  6E35               	movwf	(btemp+11)^0,c
 48687                           
 48688                           ;stkvar	_adj @ sp[(-6)+0]
 48689  0153A2  0EFA               	movlw	-6
 48690  0153A4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48691  0153AA  0EFB               	movlw	-5
 48692  0153AC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48693  0153B2  0EFC               	movlw	-4
 48694  0153B4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48695  0153BA  0EFD               	movlw	-3
 48696  0153BC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48697  0153C2  82BE               	bsf	190,1,c	;volatile
 48698                           
 48699                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 48700  0153C4  0E00               	movlw	0
 48701  0153C6  6EE6               	movwf	postinc1,c
 48702  0153C8  0E00               	movlw	0
 48703  0153CA  6EE6               	movwf	postinc1,c
 48704  0153CC  0E61               	movlw	97
 48705  0153CE  6EE6               	movwf	postinc1,c
 48706  0153D0  0E45               	movlw	69
 48707  0153D2  6EE6               	movwf	postinc1,c
 48708  0153D4  EE22  F143         	lfsr	2,_C+68	;volatile
 48709  0153D8  006F FF7B FFE6     	movff	postinc2,postinc1
 48710  0153DE  006F FF7B FFE6     	movff	postinc2,postinc1
 48711  0153E4  006F FF7B FFE6     	movff	postinc2,postinc1
 48712  0153EA  006F FF7B FFE6     	movff	postinc2,postinc1
 48713  0153F0  EC57  F0C3         	call	___fldiv	;wreg free
 48714  0153F4  0060  F0AB  FFE6   	movff	btemp,postinc1
 48715  0153FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48716  015400  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48717  015406  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48718  01540C  0E8F               	movlw	low (_C+144)
 48719  01540E  6EE6               	movwf	postinc1,c
 48720  015410  0E09               	movlw	high (_C+144)
 48721  015412  6EE6               	movwf	postinc1,c
 48722  015414  ECB3  F00B         	call	___asfladd	;wreg free
 48723                           
 48724                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 48725  015418  EE22  F18F         	lfsr	2,_C+144	;volatile
 48726  01541C  006F FF7B FFE6     	movff	postinc2,postinc1
 48727  015422  006F FF7B FFE6     	movff	postinc2,postinc1
 48728  015428  006F FF7B FFE6     	movff	postinc2,postinc1
 48729  01542E  006F FF7B FFE6     	movff	postinc2,postinc1
 48730  015434  EE22  F18B         	lfsr	2,_C+140	;volatile
 48731  015438  006F FF7B FFE6     	movff	postinc2,postinc1
 48732  01543E  006F FF7B FFE6     	movff	postinc2,postinc1
 48733  015444  006F FF7B FFE6     	movff	postinc2,postinc1
 48734  01544A  006F FF7B FFE6     	movff	postinc2,postinc1
 48735  015450  EC51  F0F6         	call	___flge	;wreg free
 48736  015454  B02A               	btfsc	btemp& (0+255),0,c
 48737  015456  D00E               	goto	l17433
 48738                           
 48739                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 48740  015458  EE22  F18B         	lfsr	2,_C+140	;volatile
 48741  01545C  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 48742  015462  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 48743  015468  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 48744  01546E  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 48745  015474                     l17433:
 48746                           
 48747                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 48748  015474  0ECD               	movlw	205
 48749  015476  6EE6               	movwf	postinc1,c
 48750  015478  0ECC               	movlw	204
 48751  01547A  6EE6               	movwf	postinc1,c
 48752  01547C  0ECC               	movlw	204
 48753  01547E  6EE6               	movwf	postinc1,c
 48754  015480  0E3D               	movlw	61
 48755  015482  6EE6               	movwf	postinc1,c
 48756  015484  EE22  F18F         	lfsr	2,_C+144	;volatile
 48757  015488  006F FF7B FFE6     	movff	postinc2,postinc1
 48758  01548E  006F FF7B FFE6     	movff	postinc2,postinc1
 48759  015494  006F FF7B FFE6     	movff	postinc2,postinc1
 48760  01549A  006F FF7B FFE6     	movff	postinc2,postinc1
 48761  0154A0  EC51  F0F6         	call	___flge	;wreg free
 48762  0154A4  B02A               	btfsc	btemp& (0+255),0,c
 48763  0154A6  D010               	goto	l17437
 48764                           
 48765                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 48766  0154A8  0ECD               	movlw	205
 48767  0154AA  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 48768  0154B0  0ECC               	movlw	204
 48769  0154B2  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 48770  0154B8  0ECC               	movlw	204
 48771  0154BA  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 48772  0154C0  0E3D               	movlw	61
 48773  0154C2  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 48774  0154C8                     l17437:
 48775                           
 48776                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 48777  0154C8  EE22  F143         	lfsr	2,_C+68	;volatile
 48778  0154CC  006F FF7B FFE6     	movff	postinc2,postinc1
 48779  0154D2  006F FF7B FFE6     	movff	postinc2,postinc1
 48780  0154D8  006F FF7B FFE6     	movff	postinc2,postinc1
 48781  0154DE  006F FF7B FFE6     	movff	postinc2,postinc1
 48782  0154E4  0E0A               	movlw	10
 48783  0154E6  6EE6               	movwf	postinc1,c
 48784  0154E8  0ED7               	movlw	215
 48785  0154EA  6EE6               	movwf	postinc1,c
 48786  0154EC  0E23               	movlw	35
 48787  0154EE  6EE6               	movwf	postinc1,c
 48788  0154F0  0E3C               	movlw	60
 48789  0154F2  6EE6               	movwf	postinc1,c
 48790  0154F4  EC51  F0F6         	call	___flge	;wreg free
 48791  0154F8  B02A               	btfsc	btemp& (0+255),0,c
 48792  0154FA  D01C               	goto	l17441
 48793                           
 48794                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 48795  0154FC  0062  F754  F032   	movff	_C+214,btemp+8	;volatile
 48796  015502  0062  F758  F033   	movff	_C+215,btemp+9	;volatile
 48797  015508  0062  F75C  F034   	movff	_C+216,btemp+10	;volatile
 48798  01550E  0062  F760  F035   	movff	_C+217,btemp+11	;volatile
 48799                           
 48800                           ;stkvar	_adj @ sp[(-6)+0]
 48801  015514  0EFA               	movlw	-6
 48802  015516  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48803  01551C  0EFB               	movlw	-5
 48804  01551E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48805  015524  0EFC               	movlw	-4
 48806  015526  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48807  01552C  0EFD               	movlw	-3
 48808  01552E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48809  015534                     l17441:
 48810                           
 48811                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 48812  015534  0E0A               	movlw	10
 48813  015536  6EE6               	movwf	postinc1,c
 48814  015538  0ED7               	movlw	215
 48815  01553A  6EE6               	movwf	postinc1,c
 48816  01553C  0E23               	movlw	35
 48817  01553E  6EE6               	movwf	postinc1,c
 48818  015540  0E3C               	movlw	60
 48819  015542  6EE6               	movwf	postinc1,c
 48820  015544  EE22  F143         	lfsr	2,_C+68	;volatile
 48821  015548  006F FF7B FFE6     	movff	postinc2,postinc1
 48822  01554E  006F FF7B FFE6     	movff	postinc2,postinc1
 48823  015554  006F FF7B FFE6     	movff	postinc2,postinc1
 48824  01555A  006F FF7B FFE6     	movff	postinc2,postinc1
 48825  015560  EC51  F0F6         	call	___flge	;wreg free
 48826  015564  B02A               	btfsc	btemp& (0+255),0,c
 48827  015566  D01C               	goto	l17445
 48828                           
 48829                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 48830  015568  0062  F744  F032   	movff	_C+210,btemp+8	;volatile
 48831  01556E  0062  F748  F033   	movff	_C+211,btemp+9	;volatile
 48832  015574  0062  F74C  F034   	movff	_C+212,btemp+10	;volatile
 48833  01557A  0062  F750  F035   	movff	_C+213,btemp+11	;volatile
 48834                           
 48835                           ;stkvar	_adj @ sp[(-6)+0]
 48836  015580  0EFA               	movlw	-6
 48837  015582  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48838  015588  0EFB               	movlw	-5
 48839  01558A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48840  015590  0EFC               	movlw	-4
 48841  015592  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48842  015598  0EFD               	movlw	-3
 48843  01559A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48844  0155A0                     l17445:
 48845                           
 48846                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 48847  0155A0  0E00               	movlw	0
 48848  0155A2  6EE6               	movwf	postinc1,c
 48849  0155A4  0E00               	movlw	0
 48850  0155A6  6EE6               	movwf	postinc1,c
 48851  0155A8  0E61               	movlw	97
 48852  0155AA  6EE6               	movwf	postinc1,c
 48853  0155AC  0E45               	movlw	69
 48854  0155AE  6EE6               	movwf	postinc1,c
 48855                           
 48856                           ;stkvar	_adj @ sp[(-10)+0]
 48857  0155B0  0EF6               	movlw	-10
 48858  0155B2  006F FF8F FFE6     	movff	plusw1,postinc1
 48859  0155B8  006F FF8F FFE6     	movff	plusw1,postinc1
 48860  0155BE  006F FF8F FFE6     	movff	plusw1,postinc1
 48861  0155C4  006F FF8F FFE6     	movff	plusw1,postinc1
 48862  0155CA  EE22  F143         	lfsr	2,_C+68	;volatile
 48863  0155CE  006F FF7B FFE6     	movff	postinc2,postinc1
 48864  0155D4  006F FF7B FFE6     	movff	postinc2,postinc1
 48865  0155DA  006F FF7B FFE6     	movff	postinc2,postinc1
 48866  0155E0  006F FF7B FFE6     	movff	postinc2,postinc1
 48867  0155E6  EC06  F0B8         	call	___flmul	;wreg free
 48868  0155EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 48869  0155F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48870  0155F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48871  0155FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48872  015602  EC57  F0C3         	call	___fldiv	;wreg free
 48873  015606  0060  F0AB  FFE6   	movff	btemp,postinc1
 48874  01560C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48875  015612  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48876  015618  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48877  01561E  0E8F               	movlw	low (_C+144)
 48878  015620  6EE6               	movwf	postinc1,c
 48879  015622  0E09               	movlw	high (_C+144)
 48880  015624  6EE6               	movwf	postinc1,c
 48881  015626  ECB3  F00B         	call	___asfladd	;wreg free
 48882                           
 48883                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 48884  01562A  EE22  F18F         	lfsr	2,_C+144	;volatile
 48885  01562E  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 48886  015634  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 48887  01563A  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 48888  015640  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 48889                           
 48890                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 48891  015646  EE22  F19B         	lfsr	2,_C+156	;volatile
 48892  01564A  006F FF7B FFE6     	movff	postinc2,postinc1
 48893  015650  006F FF7B FFE6     	movff	postinc2,postinc1
 48894  015656  006F FF7B FFE6     	movff	postinc2,postinc1
 48895  01565C  006F FF7B FFE6     	movff	postinc2,postinc1
 48896  015662  EE22  F18B         	lfsr	2,_C+140	;volatile
 48897  015666  006F FF7B FFE6     	movff	postinc2,postinc1
 48898  01566C  006F FF7B FFE6     	movff	postinc2,postinc1
 48899  015672  006F FF7B FFE6     	movff	postinc2,postinc1
 48900  015678  006F FF7B FFE6     	movff	postinc2,postinc1
 48901  01567E  EC51  F0F6         	call	___flge	;wreg free
 48902  015682  B02A               	btfsc	btemp& (0+255),0,c
 48903  015684  D00E               	goto	l17453
 48904                           
 48905                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 48906  015686  EE22  F18B         	lfsr	2,_C+140	;volatile
 48907  01568A  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 48908  015690  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 48909  015696  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 48910  01569C  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 48911  0156A2                     l17453:
 48912                           
 48913                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 48914  0156A2  0ECD               	movlw	205
 48915  0156A4  6EE6               	movwf	postinc1,c
 48916  0156A6  0ECC               	movlw	204
 48917  0156A8  6EE6               	movwf	postinc1,c
 48918  0156AA  0ECC               	movlw	204
 48919  0156AC  6EE6               	movwf	postinc1,c
 48920  0156AE  0E3D               	movlw	61
 48921  0156B0  6EE6               	movwf	postinc1,c
 48922  0156B2  EE22  F19B         	lfsr	2,_C+156	;volatile
 48923  0156B6  006F FF7B FFE6     	movff	postinc2,postinc1
 48924  0156BC  006F FF7B FFE6     	movff	postinc2,postinc1
 48925  0156C2  006F FF7B FFE6     	movff	postinc2,postinc1
 48926  0156C8  006F FF7B FFE6     	movff	postinc2,postinc1
 48927  0156CE  EC51  F0F6         	call	___flge	;wreg free
 48928  0156D2  B02A               	btfsc	btemp& (0+255),0,c
 48929  0156D4  D010               	goto	l17457
 48930                           
 48931                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 48932  0156D6  0ECD               	movlw	205
 48933  0156D8  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 48934  0156DE  0ECC               	movlw	204
 48935  0156E0  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 48936  0156E6  0ECC               	movlw	204
 48937  0156E8  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 48938  0156EE  0E3D               	movlw	61
 48939  0156F0  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 48940  0156F6                     l17457:
 48941                           
 48942                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 48943  0156F6  0E00               	movlw	0
 48944  0156F8  6EE6               	movwf	postinc1,c
 48945  0156FA  0E00               	movlw	0
 48946  0156FC  6EE6               	movwf	postinc1,c
 48947  0156FE  0E61               	movlw	97
 48948  015700  6EE6               	movwf	postinc1,c
 48949  015702  0E45               	movlw	69
 48950  015704  6EE6               	movwf	postinc1,c
 48951  015706  EE22  F147         	lfsr	2,_C+72	;volatile
 48952  01570A  006F FF7B FFE6     	movff	postinc2,postinc1
 48953  015710  006F FF7B FFE6     	movff	postinc2,postinc1
 48954  015716  006F FF7B FFE6     	movff	postinc2,postinc1
 48955  01571C  006F FF7B FFE6     	movff	postinc2,postinc1
 48956  015722  EC57  F0C3         	call	___fldiv	;wreg free
 48957  015726  0060  F0AB  FFE6   	movff	btemp,postinc1
 48958  01572C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48959  015732  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48960  015738  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48961  01573E  0E93               	movlw	low (_C+148)
 48962  015740  6EE6               	movwf	postinc1,c
 48963  015742  0E09               	movlw	high (_C+148)
 48964  015744  6EE6               	movwf	postinc1,c
 48965  015746  ECB3  F00B         	call	___asfladd	;wreg free
 48966                           
 48967                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 48968  01574A  0E00               	movlw	0
 48969  01574C  6EE6               	movwf	postinc1,c
 48970  01574E  0E00               	movlw	0
 48971  015750  6EE6               	movwf	postinc1,c
 48972  015752  0E61               	movlw	97
 48973  015754  6EE6               	movwf	postinc1,c
 48974  015756  0E45               	movlw	69
 48975  015758  6EE6               	movwf	postinc1,c
 48976  01575A  EE22  F17B         	lfsr	2,_C+124	;volatile
 48977  01575E  006F FF7B FFE6     	movff	postinc2,postinc1
 48978  015764  006F FF7B FFE6     	movff	postinc2,postinc1
 48979  01576A  006F FF7B FFE6     	movff	postinc2,postinc1
 48980  015770  006F FF7B FFE6     	movff	postinc2,postinc1
 48981  015776  EC57  F0C3         	call	___fldiv	;wreg free
 48982  01577A  0060  F0AB  FFE6   	movff	btemp,postinc1
 48983  015780  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48984  015786  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48985  01578C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48986  015792  0EA7               	movlw	low (_C+168)
 48987  015794  6EE6               	movwf	postinc1,c
 48988  015796  0E09               	movlw	high (_C+168)
 48989  015798  6EE6               	movwf	postinc1,c
 48990  01579A  ECB3  F00B         	call	___asfladd	;wreg free
 48991                           
 48992                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 48993  01579E  0E00               	movlw	0
 48994  0157A0  6EE6               	movwf	postinc1,c
 48995  0157A2  0E00               	movlw	0
 48996  0157A4  6EE6               	movwf	postinc1,c
 48997  0157A6  0E61               	movlw	97
 48998  0157A8  6EE6               	movwf	postinc1,c
 48999  0157AA  0E45               	movlw	69
 49000  0157AC  6EE6               	movwf	postinc1,c
 49001  0157AE  EE22  F177         	lfsr	2,_C+120	;volatile
 49002  0157B2  006F FF7B FFE6     	movff	postinc2,postinc1
 49003  0157B8  006F FF7B FFE6     	movff	postinc2,postinc1
 49004  0157BE  006F FF7B FFE6     	movff	postinc2,postinc1
 49005  0157C4  006F FF7B FFE6     	movff	postinc2,postinc1
 49006  0157CA  EC57  F0C3         	call	___fldiv	;wreg free
 49007  0157CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 49008  0157D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49009  0157DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49010  0157E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49011  0157E6  0EAB               	movlw	low (_C+172)
 49012  0157E8  6EE6               	movwf	postinc1,c
 49013  0157EA  0E09               	movlw	high (_C+172)
 49014  0157EC  6EE6               	movwf	postinc1,c
 49015  0157EE  ECB3  F00B         	call	___asfladd	;wreg free
 49016                           
 49017                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 49018  0157F2  0E00               	movlw	0
 49019  0157F4  6EE6               	movwf	postinc1,c
 49020  0157F6  0E00               	movlw	0
 49021  0157F8  6EE6               	movwf	postinc1,c
 49022  0157FA  0E61               	movlw	97
 49023  0157FC  6EE6               	movwf	postinc1,c
 49024  0157FE  0E45               	movlw	69
 49025  015800  6EE6               	movwf	postinc1,c
 49026  015802  EE22  F173         	lfsr	2,_C+116	;volatile
 49027  015806  006F FF7B FFE6     	movff	postinc2,postinc1
 49028  01580C  006F FF7B FFE6     	movff	postinc2,postinc1
 49029  015812  006F FF7B FFE6     	movff	postinc2,postinc1
 49030  015818  006F FF7B FFE6     	movff	postinc2,postinc1
 49031  01581E  EC57  F0C3         	call	___fldiv	;wreg free
 49032  015822  0060  F0AB  FFE6   	movff	btemp,postinc1
 49033  015828  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49034  01582E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49035  015834  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49036  01583A  0EAF               	movlw	low (_C+176)
 49037  01583C  6EE6               	movwf	postinc1,c
 49038  01583E  0E09               	movlw	high (_C+176)
 49039  015840  6EE6               	movwf	postinc1,c
 49040  015842  ECB3  F00B         	call	___asfladd	;wreg free
 49041                           
 49042                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 49043  015846  EE22  F17F         	lfsr	2,_C+128	;volatile
 49044  01584A  006F FF7B FFE6     	movff	postinc2,postinc1
 49045  015850  006F FF7B FFE6     	movff	postinc2,postinc1
 49046  015856  006F FF7B FFE6     	movff	postinc2,postinc1
 49047  01585C  006F FF7B FFE6     	movff	postinc2,postinc1
 49048  015862  0E00               	movlw	0
 49049  015864  6EE6               	movwf	postinc1,c
 49050  015866  0E00               	movlw	0
 49051  015868  6EE6               	movwf	postinc1,c
 49052  01586A  0E00               	movlw	0
 49053  01586C  6EE6               	movwf	postinc1,c
 49054  01586E  0E00               	movlw	0
 49055  015870  6EE6               	movwf	postinc1,c
 49056  015872  EC51  F0F6         	call	___flge	;wreg free
 49057  015876  B02A               	btfsc	btemp& (0+255),0,c
 49058  015878  D02A               	goto	l17463
 49059                           
 49060                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 49061  01587A  0E00               	movlw	0
 49062  01587C  6EE6               	movwf	postinc1,c
 49063  01587E  0E00               	movlw	0
 49064  015880  6EE6               	movwf	postinc1,c
 49065  015882  0E61               	movlw	97
 49066  015884  6EE6               	movwf	postinc1,c
 49067  015886  0E45               	movlw	69
 49068  015888  6EE6               	movwf	postinc1,c
 49069  01588A  EE22  F17F         	lfsr	2,_C+128	;volatile
 49070  01588E  006F FF7B FFE6     	movff	postinc2,postinc1
 49071  015894  006F FF7B FFE6     	movff	postinc2,postinc1
 49072  01589A  006F FF7B FFE6     	movff	postinc2,postinc1
 49073  0158A0  006F FF7B FFE6     	movff	postinc2,postinc1
 49074  0158A6  EC57  F0C3         	call	___fldiv	;wreg free
 49075  0158AA  0060  F0AB  FFE6   	movff	btemp,postinc1
 49076  0158B0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49077  0158B6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49078  0158BC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49079  0158C2  0E9F               	movlw	low (_C+160)
 49080  0158C4  6EE6               	movwf	postinc1,c
 49081  0158C6  0E09               	movlw	high (_C+160)
 49082  0158C8  6EE6               	movwf	postinc1,c
 49083  0158CA  ECB3  F00B         	call	___asfladd	;wreg free
 49084  0158CE                     l17463:
 49085                           
 49086                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 49087  0158CE  EE22  F17F         	lfsr	2,_C+128	;volatile
 49088  0158D2  0E03               	movlw	3
 49089  0158D4  AEDB               	btfss	plusw2,7,c
 49090  0158D6  D038               	goto	l17467
 49091                           
 49092                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 49093  0158D8  0E00               	movlw	0
 49094  0158DA  6EE6               	movwf	postinc1,c
 49095  0158DC  0E00               	movlw	0
 49096  0158DE  6EE6               	movwf	postinc1,c
 49097  0158E0  0E61               	movlw	97
 49098  0158E2  6EE6               	movwf	postinc1,c
 49099  0158E4  0E45               	movlw	69
 49100  0158E6  6EE6               	movwf	postinc1,c
 49101  0158E8  EE22  F17F         	lfsr	2,_C+128	;volatile
 49102  0158EC  006F FF7B FFE6     	movff	postinc2,postinc1
 49103  0158F2  006F FF7B FFE6     	movff	postinc2,postinc1
 49104  0158F8  006F FF7B FFE6     	movff	postinc2,postinc1
 49105  0158FE  006F FF7B FFE6     	movff	postinc2,postinc1
 49106  015904  EC57  F0C3         	call	___fldiv	;wreg free
 49107  015908  0060  F0AB  FFE6   	movff	btemp,postinc1
 49108  01590E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49109  015914  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49110  01591A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49111  015920  EC81  F006         	call	_fabsf	;wreg free
 49112  015924  0060  F0AB  FFE6   	movff	btemp,postinc1
 49113  01592A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49114  015930  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49115  015936  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49116  01593C  0EA3               	movlw	low (_C+164)
 49117  01593E  6EE6               	movwf	postinc1,c
 49118  015940  0E09               	movlw	high (_C+164)
 49119  015942  6EE6               	movwf	postinc1,c
 49120  015944  ECB3  F00B         	call	___asfladd	;wreg free
 49121  015948                     l17467:
 49122                           
 49123                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 49124  015948  0E00               	movlw	0
 49125  01594A  6EE6               	movwf	postinc1,c
 49126  01594C  0E00               	movlw	0
 49127  01594E  6EE6               	movwf	postinc1,c
 49128  015950  0EC8               	movlw	200
 49129  015952  6EE6               	movwf	postinc1,c
 49130  015954  0E42               	movlw	66
 49131  015956  6EE6               	movwf	postinc1,c
 49132  015958  EE22  F18B         	lfsr	2,_C+140	;volatile
 49133  01595C  006F FF7B FFE6     	movff	postinc2,postinc1
 49134  015962  006F FF7B FFE6     	movff	postinc2,postinc1
 49135  015968  006F FF7B FFE6     	movff	postinc2,postinc1
 49136  01596E  006F FF7B FFE6     	movff	postinc2,postinc1
 49137  015974  EE22  F19B         	lfsr	2,_C+156	;volatile
 49138  015978  006F FF7B FFE6     	movff	postinc2,postinc1
 49139  01597E  006F FF7B FFE6     	movff	postinc2,postinc1
 49140  015984  006F FF7B FFE6     	movff	postinc2,postinc1
 49141  01598A  006F FF7B FFE6     	movff	postinc2,postinc1
 49142  015990  EC57  F0C3         	call	___fldiv	;wreg free
 49143  015994  0060  F0AB  FFE6   	movff	btemp,postinc1
 49144  01599A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49145  0159A0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49146  0159A6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49147  0159AC  EC06  F0B8         	call	___flmul	;wreg free
 49148  0159B0  0060  F0AB  FFE6   	movff	btemp,postinc1
 49149  0159B6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49150  0159BC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49151  0159C2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49152  0159C8  ECE5  F0F4         	call	___fltol	;wreg free
 49153  0159CC  0060  F0A8  F034   	movff	btemp,btemp+10
 49154  0159D2  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49155  0159D8  0E01               	movlw	1
 49156  0159DA  2634               	addwf	(btemp+10)^0,f,c
 49157  0159DC  0E00               	movlw	0
 49158  0159DE  2235               	addwfc	(btemp+11)^0,f,c
 49159  0159E0  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 49160  0159E6  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 49161                           
 49162                           ;bsoc.c: 76:  if (C.soc > 100)
 49163  0159EC  EE22  F1B5         	lfsr	2,_C+182	;volatile
 49164  0159F0  0E01               	movlw	1
 49165  0159F2  50DB               	movf	plusw2,w,c
 49166  0159F4  E104               	bnz	u1731_20
 49167  0159F6  0E65               	movlw	101
 49168  0159F8  5CDE               	subwf	postinc2,w,c
 49169  0159FA  A0D8               	btfss	status,0,c
 49170  0159FC  D008               	goto	l17473
 49171  0159FE                     u1731_20:
 49172                           
 49173                           ;bsoc.c: 77:   C.soc = 100;
 49174  0159FE  0E64               	movlw	100
 49175  015A00  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 49176  015A06  0E00               	movlw	0
 49177  015A08  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 49178  015A0E                     l17473:
 49179                           
 49180                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 49181  015A0E  EE22  F143         	lfsr	2,_C+68	;volatile
 49182  015A12  0E03               	movlw	3
 49183  015A14  AEDB               	btfss	plusw2,7,c
 49184  015A16  D047               	goto	l2359
 49185                           
 49186                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 49187  015A18  EE22  F143         	lfsr	2,_C+68	;volatile
 49188  015A1C  006F FF7B FFE6     	movff	postinc2,postinc1
 49189  015A22  006F FF7B FFE6     	movff	postinc2,postinc1
 49190  015A28  006F FF7B FFE6     	movff	postinc2,postinc1
 49191  015A2E  006F FF7B FFE6     	movff	postinc2,postinc1
 49192  015A34  EE22  F19B         	lfsr	2,_C+156	;volatile
 49193  015A38  006F FF7B FFE6     	movff	postinc2,postinc1
 49194  015A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 49195  015A44  006F FF7B FFE6     	movff	postinc2,postinc1
 49196  015A4A  006F FF7B FFE6     	movff	postinc2,postinc1
 49197  015A50  EC57  F0C3         	call	___fldiv	;wreg free
 49198  015A54  0060  F0AB  FFE6   	movff	btemp,postinc1
 49199  015A5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49200  015A60  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49201  015A66  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49202  015A6C  EC37  F010         	call	___flneg	;wreg free
 49203  015A70  0060  F0AB  FFE6   	movff	btemp,postinc1
 49204  015A76  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49205  015A7C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49206  015A82  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49207  015A88  ECE5  F0F4         	call	___fltol	;wreg free
 49208  015A8C  0060  F0A8  F034   	movff	btemp,btemp+10
 49209  015A92  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49210  015A98  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 49211  015A9E  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 49212                           
 49213                           ;bsoc.c: 81:  } else {
 49214  015AA4  D008               	goto	l17477
 49215  015AA6                     l2359:
 49216                           
 49217                           ;bsoc.c: 82:   C.runtime = 99;
 49218  015AA6  0E63               	movlw	99
 49219  015AA8  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 49220  015AAE  0E00               	movlw	0
 49221  015AB0  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 49222  015AB6                     l17477:
 49223                           
 49224                           ;bsoc.c: 84:  if (C.runtime > 99)
 49225  015AB6  EE22  F1B3         	lfsr	2,_C+180	;volatile
 49226  015ABA  0E01               	movlw	1
 49227  015ABC  50DB               	movf	plusw2,w,c
 49228  015ABE  E104               	bnz	u1733_20
 49229  015AC0  0E64               	movlw	100
 49230  015AC2  5CDE               	subwf	postinc2,w,c
 49231  015AC4  A0D8               	btfss	status,0,c
 49232  015AC6  D008               	goto	l17481
 49233  015AC8                     u1733_20:
 49234                           
 49235                           ;bsoc.c: 85:   C.runtime = 99;
 49236  015AC8  0E63               	movlw	99
 49237  015ACA  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 49238  015AD0  0E00               	movlw	0
 49239  015AD2  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 49240  015AD8                     l17481:
 49241                           
 49242                           ;bsoc.c: 87:  V.lowint_count++;
 49243  015AD8  0E01               	movlw	1
 49244  015ADA  0102               	movlb	2	; () banked
 49245  015ADC  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 49246  015ADE  0E00               	movlw	0
 49247  015AE0  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 49248  015AE2  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 49249  015AE4  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 49250                           
 49251                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 49252  015AE6  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 49253  015AE8  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 49254  015AEA  A4D8               	btfss	status,2,c
 49255  015AEC  D177               	goto	l17493
 49256                           
 49257                           ; BSR set to: 2
 49258  015AEE  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 49259  015AF0  B4D8               	btfsc	status,2,c
 49260  015AF2  D174               	goto	l17493
 49261                           
 49262                           ; BSR set to: 2
 49263                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 49264  015AF4  EC16  F017         	call	_port_data_dma_ptr	;wreg free
 49265                           
 49266                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49267  015AF8  0EFF               	movlw	-1
 49268  015AFA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 49269  015B00  0EFE               	movlw	-2
 49270  015B02  0060  F0AB  FFE3   	movff	btemp,plusw1
 49271                           
 49272                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 49273  015B08  EE22  F1D1         	lfsr	2,_C+210	;volatile
 49274  015B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 49275  015B12  006F FF7B FFE6     	movff	postinc2,postinc1
 49276  015B18  006F FF7B FFE6     	movff	postinc2,postinc1
 49277  015B1E  006F FF7B FFE6     	movff	postinc2,postinc1
 49278  015B24  EE22  F1D5         	lfsr	2,_C+214	;volatile
 49279  015B28  006F FF7B FFE6     	movff	postinc2,postinc1
 49280  015B2E  006F FF7B FFE6     	movff	postinc2,postinc1
 49281  015B34  006F FF7B FFE6     	movff	postinc2,postinc1
 49282  015B3A  006F FF7B FFE6     	movff	postinc2,postinc1
 49283  015B40  EE22  F19B         	lfsr	2,_C+156	;volatile
 49284  015B44  006F FF7B FFE6     	movff	postinc2,postinc1
 49285  015B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 49286  015B50  006F FF7B FFE6     	movff	postinc2,postinc1
 49287  015B56  006F FF7B FFE6     	movff	postinc2,postinc1
 49288  015B5C  EE22  F243         	lfsr	2,_C+324	;volatile
 49289  015B60  006F FF7B FFE6     	movff	postinc2,postinc1
 49290  015B66  006F FF7B FFE6     	movff	postinc2,postinc1
 49291  015B6C  006F FF7B FFE6     	movff	postinc2,postinc1
 49292  015B72  006F FF7B FFE6     	movff	postinc2,postinc1
 49293  015B78  EE22  F23F         	lfsr	2,_C+320	;volatile
 49294  015B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 49295  015B82  006F FF7B FFE6     	movff	postinc2,postinc1
 49296  015B88  006F FF7B FFE6     	movff	postinc2,postinc1
 49297  015B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 49298  015B94  EE22  F23D         	lfsr	2,_C+318	;volatile
 49299  015B98  50DF               	movf	indf2,w,c
 49300  015B9A  6EE6               	movwf	postinc1,c
 49301  015B9C  0E00               	movlw	0
 49302  015B9E  6EE6               	movwf	postinc1,c
 49303  015BA0  ECFB  F016         	call	_get_ac_charger_relay	;wreg free
 49304  015BA4  502A               	movf	btemp^0,w,c
 49305  015BA6  6EE6               	movwf	postinc1,c
 49306  015BA8  0E00               	movlw	0
 49307  015BAA  6EE6               	movwf	postinc1,c
 49308  015BAC  EE22  F167         	lfsr	2,_C+104	;volatile
 49309  015BB0  006F FF7B FFE6     	movff	postinc2,postinc1
 49310  015BB6  006F FF7B FFE6     	movff	postinc2,postinc1
 49311  015BBC  006F FF7B FFE6     	movff	postinc2,postinc1
 49312  015BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 49313  015BC8  EE22  F187         	lfsr	2,_C+136	;volatile
 49314  015BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 49315  015BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 49316  015BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 49317  015BDE  006F FF7B FFE6     	movff	postinc2,postinc1
 49318  015BE4  EE22  F1B3         	lfsr	2,_C+180	;volatile
 49319  015BE8  006F FF78  F034    	movff	postinc2,btemp+10
 49320  015BEE  006F FF74  F035    	movff	postdec2,btemp+11
 49321  015BF4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49322  015BFA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49323  015C00  EE22  F1B5         	lfsr	2,_C+182	;volatile
 49324  015C04  006F FF78  F034    	movff	postinc2,btemp+10
 49325  015C0A  006F FF74  F035    	movff	postdec2,btemp+11
 49326  015C10  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49327  015C16  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49328  015C1C  EE22  F193         	lfsr	2,_C+148	;volatile
 49329  015C20  006F FF7B FFE6     	movff	postinc2,postinc1
 49330  015C26  006F FF7B FFE6     	movff	postinc2,postinc1
 49331  015C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 49332  015C32  006F FF7B FFE6     	movff	postinc2,postinc1
 49333  015C38  EE22  F18F         	lfsr	2,_C+144	;volatile
 49334  015C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 49335  015C42  006F FF7B FFE6     	movff	postinc2,postinc1
 49336  015C48  006F FF7B FFE6     	movff	postinc2,postinc1
 49337  015C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 49338  015C54  EE22  F177         	lfsr	2,_C+120	;volatile
 49339  015C58  006F FF7B FFE6     	movff	postinc2,postinc1
 49340  015C5E  006F FF7B FFE6     	movff	postinc2,postinc1
 49341  015C64  006F FF7B FFE6     	movff	postinc2,postinc1
 49342  015C6A  006F FF7B FFE6     	movff	postinc2,postinc1
 49343  015C70  EE22  F173         	lfsr	2,_C+116	;volatile
 49344  015C74  006F FF7B FFE6     	movff	postinc2,postinc1
 49345  015C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 49346  015C80  006F FF7B FFE6     	movff	postinc2,postinc1
 49347  015C86  006F FF7B FFE6     	movff	postinc2,postinc1
 49348  015C8C  EE22  F17B         	lfsr	2,_C+124	;volatile
 49349  015C90  006F FF7B FFE6     	movff	postinc2,postinc1
 49350  015C96  006F FF7B FFE6     	movff	postinc2,postinc1
 49351  015C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 49352  015CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 49353  015CA8  EE22  F17F         	lfsr	2,_C+128	;volatile
 49354  015CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 49355  015CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 49356  015CB8  006F FF7B FFE6     	movff	postinc2,postinc1
 49357  015CBE  006F FF7B FFE6     	movff	postinc2,postinc1
 49358  015CC4  EE22  F147         	lfsr	2,_C+72	;volatile
 49359  015CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 49360  015CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 49361  015CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 49362  015CDA  006F FF7B FFE6     	movff	postinc2,postinc1
 49363  015CE0  EE22  F143         	lfsr	2,_C+68	;volatile
 49364  015CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 49365  015CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 49366  015CF0  006F FF7B FFE6     	movff	postinc2,postinc1
 49367  015CF6  006F FF7B FFE6     	movff	postinc2,postinc1
 49368  015CFC  EE22  F163         	lfsr	2,_C+100	;volatile
 49369  015D00  006F FF7B FFE6     	movff	postinc2,postinc1
 49370  015D06  006F FF7B FFE6     	movff	postinc2,postinc1
 49371  015D0C  006F FF7B FFE6     	movff	postinc2,postinc1
 49372  015D12  006F FF7B FFE6     	movff	postinc2,postinc1
 49373  015D18  EE22  F14B         	lfsr	2,_C+76	;volatile
 49374  015D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 49375  015D22  006F FF7B FFE6     	movff	postinc2,postinc1
 49376  015D28  006F FF7B FFE6     	movff	postinc2,postinc1
 49377  015D2E  006F FF7B FFE6     	movff	postinc2,postinc1
 49378  015D34  EE22  F14F         	lfsr	2,_C+80	;volatile
 49379  015D38  006F FF7B FFE6     	movff	postinc2,postinc1
 49380  015D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 49381  015D44  006F FF7B FFE6     	movff	postinc2,postinc1
 49382  015D4A  006F FF7B FFE6     	movff	postinc2,postinc1
 49383  015D50  EE22  F153         	lfsr	2,_C+84	;volatile
 49384  015D54  006F FF7B FFE6     	movff	postinc2,postinc1
 49385  015D5A  006F FF7B FFE6     	movff	postinc2,postinc1
 49386  015D60  006F FF7B FFE6     	movff	postinc2,postinc1
 49387  015D66  006F FF7B FFE6     	movff	postinc2,postinc1
 49388  015D6C  0060  FA23  FFE6   	movff	_V+129,postinc1
 49389  015D72  0060  FA27  FFE6   	movff	_V+130,postinc1
 49390  015D78  0060  FA2B  FFE6   	movff	_V+131,postinc1
 49391  015D7E  0060  FA2F  FFE6   	movff	_V+132,postinc1
 49392  015D84  0E32               	movlw	50
 49393  015D86  6EE6               	movwf	postinc1,c
 49394  015D88  0E00               	movlw	0
 49395  015D8A  6EE6               	movwf	postinc1,c
 49396  015D8C  0EBD               	movlw	low STR_103
 49397  015D8E  6EE6               	movwf	postinc1,c
 49398  015D90  0EF9               	movlw	high STR_103
 49399  015D92  6EE6               	movwf	postinc1,c
 49400                           
 49401                           ;stkvar	_log_ptr @ sp[(-98)+4]
 49402  015D94  0EA2               	movlw	-94
 49403  015D96  006F FF8F FFE6     	movff	plusw1,postinc1
 49404  015D9C  006F FF8F FFE6     	movff	plusw1,postinc1
 49405  015DA2  0E5E               	movlw	94
 49406  015DA4  6EE6               	movwf	postinc1,c
 49407  015DA6  EC01  F0FF         	call	_sprintf	;wreg free
 49408                           
 49409                           ; BSR set to: 0
 49410                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 49411  015DAA  0E7D               	movlw	125
 49412  015DAC  6EE6               	movwf	postinc1,c
 49413  015DAE  0E00               	movlw	0
 49414  015DB0  6EE6               	movwf	postinc1,c
 49415  015DB2  0E0A               	movlw	10
 49416  015DB4  6EE6               	movwf	postinc1,c
 49417  015DB6  ECB3  F011         	call	_StartTimer	;wreg free
 49418                           
 49419                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 49420                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49421  015DBA  0EFE               	movlw	-2
 49422  015DBC  006F FF8F FFE6     	movff	plusw1,postinc1
 49423  015DC2  006F FF8F FFE6     	movff	plusw1,postinc1
 49424  015DC8  ECD6  F007         	call	_strlen	;wreg free
 49425  015DCC  0060  F0AB  FFE6   	movff	btemp,postinc1
 49426  015DD2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49427  015DD8  EC99  F00F         	call	_send_port_data_dma	;wreg free
 49428  015DDC                     l17493:
 49429                           
 49430                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 49431  015DDC  0E09               	movlw	9
 49432  015DDE  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 49433  015DE0  D001               	goto	l2363
 49434                           
 49435                           ;bsoc.c: 102:   log_update_wait = 0;
 49436  015DE2  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 49437  015DE4                     l2363:
 49438                           
 49439                           ;bsoc.c: 104:  C.update = 0;
 49440  015DE4  0E00               	movlw	0
 49441  015DE6  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 49442                           
 49443                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 49444  015DEC  92BE               	bcf	190,1,c	;volatile
 49445                           
 49446                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 49447  015DEE  0EFA               	movlw	250
 49448  015DF0  26E1               	addwf	fsr1l,f,c
 49449  015DF2  0EFF               	movlw	255
 49450  015DF4  22E2               	addwfc	fsr1h,f,c
 49451  015DF6  0012               	return		;funcret
 49452  015DF8                     __end_of_calc_bsoc:
 49453                           	opt callstack 0
 49454                           
 49455 ;; *************** function _send_port_data_dma *****************
 49456 ;; Defined at:
 49457 ;;		line 397 in file "eadog.c"
 49458 ;; Parameters:    Size  Location     Type
 49459 ;;  dsize           2  [STACK] unsigned short 
 49460 ;; Auto vars:     Size  Location     Type
 49461 ;;		None
 49462 ;; Return value:  Size  Location     Type
 49463 ;;                  1  [STACK] void 
 49464 ;; Registers used:
 49465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 49466 ;; Tracked objects:
 49467 ;;		On entry : 0/0
 49468 ;;		On exit  : 3F/3B
 49469 ;;		Unchanged: 0/0
 49470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49475 ;;Total ram usage:        0 bytes
 49476 ;; Hardware stack levels used:    1
 49477 ;; Hardware stack levels required when called:    3
 49478 ;; This function calls:
 49479 ;;		Nothing
 49480 ;; This function is called by:
 49481 ;;		_calc_bsoc
 49482 ;; This function uses a reentrant model
 49483 ;;
 49484                           
 49485                           	psect	text201
 49486  001F32                     __ptext201:
 49487                           	opt callstack 0
 49488  001F32                     _send_port_data_dma:
 49489                           	opt callstack 11
 49490                           
 49491                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 49492                           ;stkvar	_dsize @ sp[(0)+-2]
 49493                           
 49494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49495                           ;incstack = 0
 49496  001F32  0EFE               	movlw	-2
 49497  001F34  04E3               	decf	plusw1,w,c
 49498  001F36  0EFF               	movlw	-1
 49499  001F38  006F FF8C  F02A    	movff	plusw1,btemp
 49500  001F3E  0E02               	movlw	2
 49501  001F40  5A2A               	subwfb	btemp^0,f,c
 49502  001F42  A0D8               	btfss	status,0,c
 49503  001F44  D00C               	goto	l12985
 49504                           
 49505                           ;eadog.c: 400:   dsize = 512;
 49506  001F46  0E00               	movlw	0
 49507  001F48  6E34               	movwf	(btemp+10)^0,c
 49508  001F4A  0E02               	movlw	2
 49509  001F4C  6E35               	movwf	(btemp+11)^0,c
 49510                           
 49511                           ;stkvar	_dsize @ sp[(0)+-2]
 49512  001F4E  0EFE               	movlw	-2
 49513  001F50  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49514  001F56  0EFF               	movlw	-1
 49515  001F58  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49516  001F5E                     l12985:
 49517                           
 49518                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 49519  001F5E  013B               	movlb	59	; () banked
 49520  001F60  9FDC               	bcf	220,7,b	;volatile
 49521                           
 49522                           ; BSR set to: 59
 49523                           ;eadog.c: 403:  DMA2SSZ = dsize;
 49524                           ;stkvar	_dsize @ sp[(0)+-2]
 49525  001F62  0EFE               	movlw	-2
 49526  001F64  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 49527  001F6A  0EFF               	movlw	-1
 49528  001F6C  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 49529                           
 49530                           ; BSR set to: 59
 49531                           ;eadog.c: 404:  DMA2DSZ = 1;
 49532  001F72  0E00               	movlw	0
 49533  001F74  6FCF               	movwf	207,b	;volatile
 49534  001F76  0E01               	movlw	1
 49535  001F78  6FCE               	movwf	206,b	;volatile
 49536                           
 49537                           ; BSR set to: 59
 49538                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 49539  001F7A  8FDC               	bsf	220,7,b	;volatile
 49540                           
 49541                           ; BSR set to: 59
 49542                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 49543  001F7C  8DDC               	bsf	220,6,b	;volatile
 49544                           
 49545                           ; BSR set to: 59
 49546                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 49547  001F7E  52E5               	movf	postdec1,f,c
 49548  001F80  52E5               	movf	postdec1,f,c
 49549  001F82  0012               	return		;funcret
 49550  001F84                     __end_of_send_port_data_dma:
 49551                           	opt callstack 0
 49552                           
 49553 ;; *************** function _port_data_dma_ptr *****************
 49554 ;; Defined at:
 49555 ;;		line 412 in file "eadog.c"
 49556 ;; Parameters:    Size  Location     Type
 49557 ;;		None
 49558 ;; Auto vars:     Size  Location     Type
 49559 ;;		None
 49560 ;; Return value:  Size  Location     Type
 49561 ;;                  2  [STACK] PTR unsigned char 
 49562 ;; Registers used:
 49563 ;;		wreg, status,2, status,0, btemp, btemp+1
 49564 ;; Tracked objects:
 49565 ;;		On entry : 3F/2
 49566 ;;		On exit  : 0/0
 49567 ;;		Unchanged: 0/0
 49568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49573 ;;Total ram usage:        0 bytes
 49574 ;; Hardware stack levels used:    1
 49575 ;; Hardware stack levels required when called:    3
 49576 ;; This function calls:
 49577 ;;		Nothing
 49578 ;; This function is called by:
 49579 ;;		_calc_bsoc
 49580 ;; This function uses a reentrant model
 49581 ;;
 49582                           
 49583                           	psect	text202
 49584  002E2C                     __ptext202:
 49585                           	opt callstack 0
 49586  002E2C                     _port_data_dma_ptr:
 49587                           	opt callstack 11
 49588                           
 49589                           ;eadog.c: 414:  return port_data;
 49590                           
 49591                           ; BSR set to: 59
 49592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49593                           ;incstack = 0
 49594  002E2C  0EFF               	movlw	low _port_data
 49595  002E2E  6E2A               	movwf	btemp^0,c
 49596  002E30  0E06               	movlw	high _port_data
 49597  002E32  6E2B               	movwf	(btemp+1)^0,c
 49598                           
 49599                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49600  002E34  0012               	return		;funcret
 49601  002E36                     __end_of_port_data_dma_ptr:
 49602                           	opt callstack 0
 49603                           
 49604 ;; *************** function ___asfladd *****************
 49605 ;; Defined at:
 49606 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 49607 ;; Parameters:    Size  Location     Type
 49608 ;;  f1p             2  [STACK] PTR 
 49609 ;;		 -> C(336), 
 49610 ;;  f2              4  [STACK] PTR 
 49611 ;; Auto vars:     Size  Location     Type
 49612 ;;		None
 49613 ;; Return value:  Size  Location     Type
 49614 ;;                  4  [STACK] PTR 
 49615 ;; Registers used:
 49616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 49617 ;; Tracked objects:
 49618 ;;		On entry : 0/0
 49619 ;;		On exit  : 0/0
 49620 ;;		Unchanged: 0/0
 49621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49626 ;;Total ram usage:        0 bytes
 49627 ;; Hardware stack levels used:    1
 49628 ;; Hardware stack levels required when called:    4
 49629 ;; This function calls:
 49630 ;;		___fladd
 49631 ;; This function is called by:
 49632 ;;		_calc_bsoc
 49633 ;; This function uses a reentrant model
 49634 ;;
 49635                           
 49636                           	psect	text203
 49637  001766                     __ptext203:
 49638                           	opt callstack 0
 49639  001766                     ___asfladd:
 49640                           	opt callstack 10
 49641                           
 49642                           ;	Return value of ___asfladd is never used
 49643                           ;stkvar	_f2 @ sp[(0)+-6]
 49644                           
 49645                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49646                           ;incstack = 0
 49647  001766  0EFA               	movlw	-6
 49648  001768  006F FF8F FFE6     	movff	plusw1,postinc1
 49649  00176E  006F FF8F FFE6     	movff	plusw1,postinc1
 49650  001774  006F FF8F FFE6     	movff	plusw1,postinc1
 49651  00177A  006F FF8F FFE6     	movff	plusw1,postinc1
 49652                           
 49653                           ;stkvar	_f1p @ sp[(-4)+-2]
 49654  001780  0EFA               	movlw	-6
 49655  001782  006F FF8F FFD9     	movff	plusw1,fsr2l
 49656  001788  0EFB               	movlw	-5
 49657  00178A  006F FF8F FFDA     	movff	plusw1,fsr2h
 49658  001790  006F FF7B FFE6     	movff	postinc2,postinc1
 49659  001796  006F FF7B FFE6     	movff	postinc2,postinc1
 49660  00179C  006F FF7B FFE6     	movff	postinc2,postinc1
 49661  0017A2  006F FF7B FFE6     	movff	postinc2,postinc1
 49662  0017A8  EC1B  F0BC         	call	___fladd	;wreg free
 49663                           
 49664                           ;stkvar	_f1p @ sp[(0)+-2]
 49665  0017AC  0EFE               	movlw	-2
 49666  0017AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 49667  0017B4  0EFF               	movlw	-1
 49668  0017B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 49669  0017BC  0060  F0AB  FFDE   	movff	btemp,postinc2
 49670  0017C2  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 49671  0017C8  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 49672  0017CE  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 49673                           
 49674                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 49675  0017D4  0EFA               	movlw	250
 49676  0017D6  26E1               	addwf	fsr1l,f,c
 49677  0017D8  0EFF               	movlw	255
 49678  0017DA  22E2               	addwfc	fsr1h,f,c
 49679  0017DC  0012               	return		;funcret
 49680  0017DE                     __end_of___asfladd:
 49681                           	opt callstack 0
 49682                           
 49683 ;; *************** function _INT0_ISR *****************
 49684 ;; Defined at:
 49685 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 49686 ;; Parameters:    Size  Location     Type
 49687 ;;		None
 49688 ;; Auto vars:     Size  Location     Type
 49689 ;;		None
 49690 ;; Return value:  Size  Location     Type
 49691 ;;                  1    wreg      void 
 49692 ;; Registers used:
 49693 ;;		wreg, status,2, status,0, pclath, tosl
 49694 ;; Tracked objects:
 49695 ;;		On entry : 0/0
 49696 ;;		On exit  : 0/0
 49697 ;;		Unchanged: 0/0
 49698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49703 ;;Total ram usage:        0 bytes
 49704 ;; Hardware stack levels used:    1
 49705 ;; Hardware stack levels required when called:    2
 49706 ;; This function calls:
 49707 ;;		_INT0_CallBack
 49708 ;; This function is called by:
 49709 ;;		Interrupt level 2
 49710 ;; This function uses a non-reentrant model
 49711 ;;
 49712                           
 49713                           	psect	text204
 49714  002E04                     __ptext204:
 49715                           	opt callstack 0
 49716  002E04                     _INT0_ISR:
 49717                           	opt callstack 3
 49718                           
 49719                           ;incstack = 0
 49720  002E04  EE14  F336         	lfsr	1,___inthi_sp
 49721                           
 49722                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 49723  002E08  0139               	movlb	57	; () banked
 49724  002E0A  91A1               	bcf	161,0,b	;volatile
 49725                           
 49726                           ; BSR set to: 57
 49727                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 49728  002E0C  EC86  F015         	call	_INT0_CallBack	;wreg free
 49729  002E10  0011               	retfie		f
 49730  002E12                     __end_of_INT0_ISR:
 49731                           	opt callstack 0
 49732                           
 49733 ;; *************** function _INT0_CallBack *****************
 49734 ;; Defined at:
 49735 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 49736 ;; Parameters:    Size  Location     Type
 49737 ;;		None
 49738 ;; Auto vars:     Size  Location     Type
 49739 ;;		None
 49740 ;; Return value:  Size  Location     Type
 49741 ;;                  1  [STACK] void 
 49742 ;; Registers used:
 49743 ;;		wreg, status,2, status,0, pclath, tosl
 49744 ;; Tracked objects:
 49745 ;;		On entry : 3F/39
 49746 ;;		On exit  : 0/0
 49747 ;;		Unchanged: 0/0
 49748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49753 ;;Total ram usage:        0 bytes
 49754 ;; Hardware stack levels used:    1
 49755 ;; Hardware stack levels required when called:    1
 49756 ;; This function calls:
 49757 ;;		Absolute function
 49758 ;;		_INT0_DefaultInterruptHandler
 49759 ;; This function is called by:
 49760 ;;		_INT0_ISR
 49761 ;; This function uses a reentrant model
 49762 ;;
 49763                           
 49764                           	psect	text205
 49765  002B0C                     __ptext205:
 49766                           	opt callstack 0
 49767  002B0C                     _INT0_CallBack:
 49768                           	opt callstack 3
 49769                           
 49770                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 49771                           
 49772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49773                           ;incstack = 0
 49774  002B0C  0100               	movlb	0	; () banked
 49775  002B0E  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49776  002B10  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49777  002B12  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49778  002B14  B4D8               	btfsc	status,2,c
 49779  002B16  0012               	return	
 49780                           
 49781                           ; BSR set to: 0
 49782                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 49783  002B18  D801               	call	u1322_48
 49784  002B1A  0012               	return	
 49785  002B1C                     u1322_48:
 49786  002B1C  0005               	push	
 49787  002B1E  6EFA               	movwf	pclath,c
 49788  002B20  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49789  002B22  6EFD               	movwf	tosl,c
 49790  002B24  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49791  002B26  6EFE               	movwf	tosh,c
 49792  002B28  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49793  002B2A  6EFF               	movwf	tosu,c
 49794  002B2C  50FA               	movf	pclath,w,c
 49795  002B2E  0012               	return		;indir
 49796  002B30                     __end_of_INT0_CallBack:
 49797                           	opt callstack 0
 49798                           
 49799 ;; *************** function _INT0_DefaultInterruptHandler *****************
 49800 ;; Defined at:
 49801 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 49802 ;; Parameters:    Size  Location     Type
 49803 ;;		None
 49804 ;; Auto vars:     Size  Location     Type
 49805 ;;		None
 49806 ;; Return value:  Size  Location     Type
 49807 ;;                  1  [STACK] void 
 49808 ;; Registers used:
 49809 ;;		None
 49810 ;; Tracked objects:
 49811 ;;		On entry : 3F/0
 49812 ;;		On exit  : 0/0
 49813 ;;		Unchanged: 0/0
 49814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49819 ;;Total ram usage:        0 bytes
 49820 ;; Hardware stack levels used:    1
 49821 ;; This function calls:
 49822 ;;		Nothing
 49823 ;; This function is called by:
 49824 ;;		_EXT_INT_Initialize
 49825 ;;		_INT0_CallBack
 49826 ;; This function uses a reentrant model
 49827 ;;
 49828                           
 49829                           	psect	text206
 49830  002EA6                     __ptext206:
 49831                           	opt callstack 0
 49832  002EA6                     _INT0_DefaultInterruptHandler:
 49833                           	opt callstack 3
 49834                           
 49835                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49836                           
 49837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49838                           ;incstack = 0
 49839  002EA6  0012               	return		;funcret
 49840  002EA8                     __end_of_INT0_DefaultInterruptHandler:
 49841                           	opt callstack 0
 49842                           
 49843 ;; *************** function _Default_ISR *****************
 49844 ;; Defined at:
 49845 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 49846 ;; Parameters:    Size  Location     Type
 49847 ;;		None
 49848 ;; Auto vars:     Size  Location     Type
 49849 ;;		None
 49850 ;; Return value:  Size  Location     Type
 49851 ;;                  1    wreg      void 
 49852 ;; Registers used:
 49853 ;;		None
 49854 ;; Tracked objects:
 49855 ;;		On entry : 0/0
 49856 ;;		On exit  : 0/0
 49857 ;;		Unchanged: 0/0
 49858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49863 ;;Total ram usage:        0 bytes
 49864 ;; Hardware stack levels used:    1
 49865 ;; This function calls:
 49866 ;;		Nothing
 49867 ;; This function is called by:
 49868 ;;		Interrupt level 2
 49869 ;; This function uses a non-reentrant model
 49870 ;;
 49871                           
 49872                           	psect	text207
 49873  002EA0                     __ptext207:
 49874                           	opt callstack 0
 49875  002EA0                     _Default_ISR:
 49876                           	opt callstack 5
 49877                           
 49878                           ;incstack = 0
 49879  002EA0  EE14  F336         	lfsr	1,___inthi_sp
 49880  002EA4  0011               	retfie		f
 49881  002EA6                     __end_of_Default_ISR:
 49882                           	opt callstack 0
 49883                           
 49884 ;; *************** function _ADCC_ISR *****************
 49885 ;; Defined at:
 49886 ;;		line 314 in file "mcc_generated_files/adcc.c"
 49887 ;; Parameters:    Size  Location     Type
 49888 ;;		None
 49889 ;; Auto vars:     Size  Location     Type
 49890 ;;		None
 49891 ;; Return value:  Size  Location     Type
 49892 ;;                  1    wreg      void 
 49893 ;; Registers used:
 49894 ;;		wreg, status,2, status,0, pclath, tosl
 49895 ;; Tracked objects:
 49896 ;;		On entry : 0/0
 49897 ;;		On exit  : 0/0
 49898 ;;		Unchanged: 0/0
 49899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49904 ;;Total ram usage:        0 bytes
 49905 ;; Hardware stack levels used:    1
 49906 ;; Hardware stack levels required when called:    1
 49907 ;; This function calls:
 49908 ;;		Absolute function
 49909 ;;		_ADCC_DefaultInterruptHandler
 49910 ;;		_adc_int_handler
 49911 ;; This function is called by:
 49912 ;;		Interrupt level 2
 49913 ;; This function uses a non-reentrant model
 49914 ;;
 49915                           
 49916                           	psect	text208
 49917  0027A0                     __ptext208:
 49918                           	opt callstack 0
 49919  0027A0                     _ADCC_ISR:
 49920                           	opt callstack 4
 49921                           
 49922                           ;incstack = 0
 49923  0027A0  EE14  F336         	lfsr	1,___inthi_sp
 49924                           
 49925                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 49926  0027A4  0139               	movlb	57	; () banked
 49927  0027A6  95A1               	bcf	161,2,b	;volatile
 49928                           
 49929                           ; BSR set to: 57
 49930                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 49931  0027A8  0100               	movlb	0	; () banked
 49932  0027AA  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49933  0027AC  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49934  0027AE  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49935  0027B0  B4D8               	btfsc	status,2,c
 49936  0027B2  0011               	retfie		f
 49937                           
 49938                           ; BSR set to: 0
 49939                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 49940  0027B4  D801               	call	i2u1392_48
 49941  0027B6  0011               	retfie		f
 49942  0027B8                     i2u1392_48:
 49943  0027B8  0005               	push	
 49944  0027BA  6EFA               	movwf	pclath,c
 49945  0027BC  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49946  0027BE  6EFD               	movwf	tosl,c
 49947  0027C0  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49948  0027C2  6EFE               	movwf	tosh,c
 49949  0027C4  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49950  0027C6  6EFF               	movwf	tosu,c
 49951  0027C8  50FA               	movf	pclath,w,c
 49952  0027CA  0012               	return		;indir
 49953  0027CC                     __end_of_ADCC_ISR:
 49954                           	opt callstack 0
 49955                           
 49956 ;; *************** function _adc_int_t_handler *****************
 49957 ;; Defined at:
 49958 ;;		line 181 in file "daq.c"
 49959 ;; Parameters:    Size  Location     Type
 49960 ;;		None
 49961 ;; Auto vars:     Size  Location     Type
 49962 ;;		None
 49963 ;; Return value:  Size  Location     Type
 49964 ;;                  1  [STACK] void 
 49965 ;; Registers used:
 49966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 49967 ;; Tracked objects:
 49968 ;;		On entry : 3F/0
 49969 ;;		On exit  : 0/0
 49970 ;;		Unchanged: 0/0
 49971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49976 ;;Total ram usage:        0 bytes
 49977 ;; Hardware stack levels used:    1
 49978 ;; Hardware stack levels required when called:    1
 49979 ;; This function calls:
 49980 ;;		_ADCC_DischargeSampleCapacitor
 49981 ;;		_ADCC_StartConversion
 49982 ;; This function is called by:
 49983 ;;		_start_adc_scan
 49984 ;;		_ADCC_ThresholdISR
 49985 ;; This function uses a reentrant model
 49986 ;;
 49987                           
 49988                           	psect	text209
 49989  0015EA                     __ptext209:
 49990                           	opt callstack 0
 49991  0015EA                     _adc_int_t_handler:
 49992                           	opt callstack 3
 49993                           
 49994                           ;daq.c: 186:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 49995                           
 49996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49997                           ;incstack = 0
 49998  0015EA  013E               	movlb	62	; () banked
 49999  0015EC  51E6               	movf	230,w,b	;volatile
 50000  0015EE  006F FB9C  F02A    	movff	16103,btemp	;volatile
 50001  0015F4  6A2B               	clrf	(btemp+1)^0,c
 50002  0015F6  0060  F0A8  F02B   	movff	btemp,btemp+1
 50003  0015FC  6A2A               	clrf	btemp^0,c
 50004  0015FE  262A               	addwf	btemp^0,f,c
 50005  001600  0E00               	movlw	0
 50006  001602  222B               	addwfc	(btemp+1)^0,f,c
 50007  001604  0101               	movlb	1	; () banked
 50008  001606  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50009  001608  0D02               	mullw	2
 50010  00160A  0E00               	movlw	low _R
 50011  00160C  24F3               	addwf	243,w,c
 50012  00160E  6ED9               	movwf	fsr2l,c
 50013  001610  0E01               	movlw	high _R
 50014  001612  20F4               	addwfc	prodh,w,c
 50015  001614  6EDA               	movwf	fsr2h,c
 50016  001616  0060  F0AB  FFDE   	movff	btemp,postinc2
 50017  00161C  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 50018  001622                     l14777:
 50019                           
 50020                           ;daq.c: 188:   if (++R.scan_index > 0XD) {
 50021  001622  0101               	movlb	1	; () banked
 50022  001624  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 50023  001626  0E0D               	movlw	13
 50024  001628  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 50025  00162A  D003               	goto	l14783
 50026                           
 50027                           ; BSR set to: 1
 50028                           ;daq.c: 189:    R.done = 1;
 50029  00162C  0E01               	movlw	1
 50030  00162E  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 50031  001630  0012               	return	
 50032  001632                     l14783:
 50033                           
 50034                           ; BSR set to: 1
 50035                           ;daq.c: 195:  } while (!((R.scan_select >> R.scan_index) &0x1));
 50036  001632  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 50037  001638  EE20  F133         	lfsr	2,_R+51	;volatile
 50038  00163C  006F FF78  F032    	movff	postinc2,btemp+8
 50039  001642  006F FF74  F033    	movff	postdec2,btemp+9
 50040  001648  2A35               	incf	(btemp+11)^0,f,c
 50041  00164A  D003               	goto	u1389_44
 50042  00164C                     u1389_45:
 50043  00164C  90D8               	bcf	status,0,c
 50044  00164E  3233               	rrcf	(btemp+9)^0,f,c
 50045  001650  3232               	rrcf	(btemp+8)^0,f,c
 50046  001652                     u1389_44:
 50047  001652  2E35               	decfsz	(btemp+11)^0,f,c
 50048  001654  D7FB               	goto	u1389_45
 50049  001656  A032               	btfss	(btemp+8)^0,0,c
 50050  001658  D7E4               	goto	l14777
 50051                           
 50052                           ;daq.c: 196:  ADCC_DischargeSampleCapacitor();
 50053  00165A  EC31  F017         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 50054                           
 50055                           ; BSR set to: 62
 50056                           ;daq.c: 197:  ADCC_StartConversion(R.scan_index & 0xf);
 50057  00165E  0101               	movlb	1	; () banked
 50058  001660  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50059  001662  0B0F               	andlw	15
 50060  001664  6EE6               	movwf	postinc1,c
 50061  001666  ECBC  F016         	call	_ADCC_StartConversion	;wreg free
 50062                           
 50063                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50064  00166A  0012               	return		;funcret
 50065  00166C                     __end_of_adc_int_t_handler:
 50066                           	opt callstack 0
 50067                           
 50068 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 50069 ;; Defined at:
 50070 ;;		line 339 in file "mcc_generated_files/adcc.c"
 50071 ;; Parameters:    Size  Location     Type
 50072 ;;		None
 50073 ;; Auto vars:     Size  Location     Type
 50074 ;;		None
 50075 ;; Return value:  Size  Location     Type
 50076 ;;                  1  [STACK] void 
 50077 ;; Registers used:
 50078 ;;		None
 50079 ;; Tracked objects:
 50080 ;;		On entry : 3F/0
 50081 ;;		On exit  : 0/0
 50082 ;;		Unchanged: 0/0
 50083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50088 ;;Total ram usage:        0 bytes
 50089 ;; Hardware stack levels used:    1
 50090 ;; This function calls:
 50091 ;;		Nothing
 50092 ;; This function is called by:
 50093 ;;		_ADCC_Initialize
 50094 ;;		_ADCC_ISR
 50095 ;;		_ADCC_ThresholdISR
 50096 ;; This function uses a reentrant model
 50097 ;;
 50098                           
 50099                           	psect	text210
 50100  002EA8                     __ptext210:
 50101                           	opt callstack 0
 50102  002EA8                     _ADCC_DefaultInterruptHandler:
 50103                           	opt callstack 4
 50104                           
 50105                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50106                           
 50107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50108                           ;incstack = 0
 50109  002EA8  0012               	return		;funcret
 50110  002EAA                     __end_of_ADCC_DefaultInterruptHandler:
 50111                           	opt callstack 0
 50112                           
 50113 ;; *************** function _adc_int_handler *****************
 50114 ;; Defined at:
 50115 ;;		line 171 in file "daq.c"
 50116 ;; Parameters:    Size  Location     Type
 50117 ;;		None
 50118 ;; Auto vars:     Size  Location     Type
 50119 ;;		None
 50120 ;; Return value:  Size  Location     Type
 50121 ;;                  1  [STACK] void 
 50122 ;; Registers used:
 50123 ;;		None
 50124 ;; Tracked objects:
 50125 ;;		On entry : 3F/0
 50126 ;;		On exit  : 0/0
 50127 ;;		Unchanged: 0/0
 50128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50133 ;;Total ram usage:        0 bytes
 50134 ;; Hardware stack levels used:    1
 50135 ;; This function calls:
 50136 ;;		Nothing
 50137 ;; This function is called by:
 50138 ;;		_start_adc_scan
 50139 ;;		_ADCC_ISR
 50140 ;; This function uses a reentrant model
 50141 ;;
 50142                           
 50143                           	psect	text211
 50144  002EAA                     __ptext211:
 50145                           	opt callstack 0
 50146  002EAA                     _adc_int_handler:
 50147                           	opt callstack 4
 50148                           
 50149                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 50150                           
 50151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50152                           ;incstack = 0
 50153  002EAA  0012               	return		;funcret
 50154  002EAC                     __end_of_adc_int_handler:
 50155                           	opt callstack 0
 50156                           
 50157 ;; *************** function _ADCC_ThresholdISR *****************
 50158 ;; Defined at:
 50159 ;;		line 327 in file "mcc_generated_files/adcc.c"
 50160 ;; Parameters:    Size  Location     Type
 50161 ;;		None
 50162 ;; Auto vars:     Size  Location     Type
 50163 ;;		None
 50164 ;; Return value:  Size  Location     Type
 50165 ;;                  1    wreg      void 
 50166 ;; Registers used:
 50167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 50168 ;; Tracked objects:
 50169 ;;		On entry : 0/0
 50170 ;;		On exit  : 0/0
 50171 ;;		Unchanged: 0/0
 50172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50175 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50176 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50177 ;;Total ram usage:        5 bytes
 50178 ;; Hardware stack levels used:    1
 50179 ;; Hardware stack levels required when called:    2
 50180 ;; This function calls:
 50181 ;;		Absolute function
 50182 ;;		_ADCC_DefaultInterruptHandler
 50183 ;;		_adc_int_t_handler
 50184 ;; This function is called by:
 50185 ;;		Interrupt level 2
 50186 ;; This function uses a non-reentrant model
 50187 ;;
 50188                           
 50189                           	psect	text212
 50190  001994                     __ptext212:
 50191                           	opt callstack 0
 50192  001994                     _ADCC_ThresholdISR:
 50193                           	opt callstack 3
 50194                           
 50195                           ;incstack = 0
 50196  001994  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 50197  00199A  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 50198  0019A0  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 50199  0019A6  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 50200  0019AC  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 50201  0019B2  EE14  F336         	lfsr	1,___inthi_sp
 50202                           
 50203                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 50204  0019B6  0139               	movlb	57	; () banked
 50205  0019B8  97A1               	bcf	161,3,b	;volatile
 50206                           
 50207                           ; BSR set to: 57
 50208                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 50209  0019BA  0100               	movlb	0	; () banked
 50210  0019BC  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50211  0019BE  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50212  0019C0  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50213  0019C2  B4D8               	btfsc	status,2,c
 50214  0019C4  D00C               	goto	i2u1394_49
 50215                           
 50216                           ; BSR set to: 0
 50217                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 50218  0019C6  D801               	call	i2u1394_48
 50219  0019C8  D00A               	goto	i2u1394_49
 50220  0019CA                     i2u1394_48:
 50221  0019CA  0005               	push	
 50222  0019CC  6EFA               	movwf	pclath,c
 50223  0019CE  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50224  0019D0  6EFD               	movwf	tosl,c
 50225  0019D2  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50226  0019D4  6EFE               	movwf	tosh,c
 50227  0019D6  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50228  0019D8  6EFF               	movwf	tosu,c
 50229  0019DA  50FA               	movf	pclath,w,c
 50230  0019DC  0012               	return		;indir
 50231  0019DE                     i2u1394_49:
 50232  0019DE  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 50233  0019E4  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 50234  0019EA  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 50235  0019F0  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 50236  0019F6  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 50237  0019FC  0011               	retfie		f
 50238  0019FE                     __end_of_ADCC_ThresholdISR:
 50239                           	opt callstack 0
 50240                           
 50241 ;; *************** function _UART1_rx_vect_isr *****************
 50242 ;; Defined at:
 50243 ;;		line 181 in file "mcc_generated_files/uart1.c"
 50244 ;; Parameters:    Size  Location     Type
 50245 ;;		None
 50246 ;; Auto vars:     Size  Location     Type
 50247 ;;		None
 50248 ;; Return value:  Size  Location     Type
 50249 ;;                  1    wreg      void 
 50250 ;; Registers used:
 50251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50252 ;; Tracked objects:
 50253 ;;		On entry : 0/0
 50254 ;;		On exit  : 0/0
 50255 ;;		Unchanged: 0/0
 50256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50261 ;;Total ram usage:        0 bytes
 50262 ;; Hardware stack levels used:    1
 50263 ;; Hardware stack levels required when called:    1
 50264 ;; This function calls:
 50265 ;;		Absolute function
 50266 ;;		_UART1_Receive_ISR
 50267 ;; This function is called by:
 50268 ;;		Interrupt level 2
 50269 ;; This function uses a non-reentrant model
 50270 ;;
 50271                           
 50272                           	psect	text213
 50273  002A04                     __ptext213:
 50274                           	opt callstack 0
 50275  002A04                     _UART1_rx_vect_isr:
 50276                           	opt callstack 4
 50277                           
 50278                           ;incstack = 0
 50279  002A04  EE14  F336         	lfsr	1,___inthi_sp
 50280                           
 50281                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 50282  002A08  0100               	movlb	0	; () banked
 50283  002A0A  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50284  002A0C  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50285  002A0E  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50286  002A10  B4D8               	btfsc	status,2,c
 50287  002A12  0011               	retfie		f
 50288                           
 50289                           ; BSR set to: 0
 50290                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 50291  002A14  D801               	call	i2u1396_48
 50292  002A16  0011               	retfie		f
 50293  002A18                     i2u1396_48:
 50294  002A18  0005               	push	
 50295  002A1A  6EFA               	movwf	pclath,c
 50296  002A1C  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50297  002A1E  6EFD               	movwf	tosl,c
 50298  002A20  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50299  002A22  6EFE               	movwf	tosh,c
 50300  002A24  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50301  002A26  6EFF               	movwf	tosu,c
 50302  002A28  50FA               	movf	pclath,w,c
 50303  002A2A  0012               	return		;indir
 50304  002A2C                     __end_of_UART1_rx_vect_isr:
 50305                           	opt callstack 0
 50306                           
 50307 ;; *************** function _UART1_Receive_ISR *****************
 50308 ;; Defined at:
 50309 ;;		line 192 in file "mcc_generated_files/uart1.c"
 50310 ;; Parameters:    Size  Location     Type
 50311 ;;		None
 50312 ;; Auto vars:     Size  Location     Type
 50313 ;;		None
 50314 ;; Return value:  Size  Location     Type
 50315 ;;                  1  [STACK] void 
 50316 ;; Registers used:
 50317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50318 ;; Tracked objects:
 50319 ;;		On entry : 3F/0
 50320 ;;		On exit  : 3F/0
 50321 ;;		Unchanged: 0/0
 50322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50327 ;;Total ram usage:        0 bytes
 50328 ;; Hardware stack levels used:    1
 50329 ;; This function calls:
 50330 ;;		Nothing
 50331 ;; This function is called by:
 50332 ;;		_UART1_Initialize
 50333 ;;		_UART1_rx_vect_isr
 50334 ;; This function uses a reentrant model
 50335 ;;
 50336                           
 50337                           	psect	text214
 50338  002BBA                     __ptext214:
 50339                           	opt callstack 0
 50340  002BBA                     _UART1_Receive_ISR:
 50341                           	opt callstack 4
 50342                           
 50343                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 50344                           
 50345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50346                           ;incstack = 0
 50347  002BBA  0ED6               	movlw	low _uart1RxBuffer
 50348  002BBC  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 50349  002BBE  6ED9               	movwf	fsr2l,c
 50350  002BC0  6ADA               	clrf	fsr2h,c
 50351  002BC2  0E02               	movlw	high _uart1RxBuffer
 50352  002BC4  22DA               	addwfc	fsr2h,f,c
 50353  002BC6  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 50354  002BCC  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 50355                           
 50356                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 50357  002BCE  0E07               	movlw	7
 50358  002BD0  6457               	cpfsgt	_uart1RxHead^0,c
 50359  002BD2  D001               	goto	l14043
 50360                           
 50361                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 50362  002BD4  6A57               	clrf	_uart1RxHead^0,c	;volatile
 50363  002BD6                     l14043:
 50364                           
 50365                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 50366  002BD6  0100               	movlb	0	; () banked
 50367  002BD8  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 50368                           
 50369                           ; BSR set to: 0
 50370                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50371  002BDA  0012               	return		;funcret
 50372  002BDC                     __end_of_UART1_Receive_ISR:
 50373                           	opt callstack 0
 50374                           
 50375 ;; *************** function _UART2_tx_vect_isr *****************
 50376 ;; Defined at:
 50377 ;;		line 195 in file "mcc_generated_files/uart2.c"
 50378 ;; Parameters:    Size  Location     Type
 50379 ;;		None
 50380 ;; Auto vars:     Size  Location     Type
 50381 ;;		None
 50382 ;; Return value:  Size  Location     Type
 50383 ;;                  1    wreg      void 
 50384 ;; Registers used:
 50385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50386 ;; Tracked objects:
 50387 ;;		On entry : 0/0
 50388 ;;		On exit  : 0/0
 50389 ;;		Unchanged: 0/0
 50390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50395 ;;Total ram usage:        0 bytes
 50396 ;; Hardware stack levels used:    1
 50397 ;; Hardware stack levels required when called:    1
 50398 ;; This function calls:
 50399 ;;		Absolute function
 50400 ;;		_UART2_Transmit_ISR
 50401 ;; This function is called by:
 50402 ;;		Interrupt level 2
 50403 ;; This function uses a non-reentrant model
 50404 ;;
 50405                           
 50406                           	psect	text215
 50407  002A2C                     __ptext215:
 50408                           	opt callstack 0
 50409  002A2C                     _UART2_tx_vect_isr:
 50410                           	opt callstack 4
 50411                           
 50412                           ; BSR set to: 0
 50413                           ;incstack = 0
 50414  002A2C  EE14  F336         	lfsr	1,___inthi_sp
 50415                           
 50416                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 50417  002A30  0100               	movlb	0	; () banked
 50418  002A32  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50419  002A34  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50420  002A36  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50421  002A38  B4D8               	btfsc	status,2,c
 50422  002A3A  0011               	retfie		f
 50423                           
 50424                           ; BSR set to: 0
 50425                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 50426  002A3C  D801               	call	i2u1398_48
 50427  002A3E  0011               	retfie		f
 50428  002A40                     i2u1398_48:
 50429  002A40  0005               	push	
 50430  002A42  6EFA               	movwf	pclath,c
 50431  002A44  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50432  002A46  6EFD               	movwf	tosl,c
 50433  002A48  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50434  002A4A  6EFE               	movwf	tosh,c
 50435  002A4C  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50436  002A4E  6EFF               	movwf	tosu,c
 50437  002A50  50FA               	movf	pclath,w,c
 50438  002A52  0012               	return		;indir
 50439  002A54                     __end_of_UART2_tx_vect_isr:
 50440                           	opt callstack 0
 50441                           
 50442 ;; *************** function _UART2_Transmit_ISR *****************
 50443 ;; Defined at:
 50444 ;;		line 213 in file "mcc_generated_files/uart2.c"
 50445 ;; Parameters:    Size  Location     Type
 50446 ;;		None
 50447 ;; Auto vars:     Size  Location     Type
 50448 ;;		None
 50449 ;; Return value:  Size  Location     Type
 50450 ;;                  1  [STACK] void 
 50451 ;; Registers used:
 50452 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50453 ;; Tracked objects:
 50454 ;;		On entry : 3F/0
 50455 ;;		On exit  : 3B/39
 50456 ;;		Unchanged: 0/0
 50457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50462 ;;Total ram usage:        0 bytes
 50463 ;; Hardware stack levels used:    1
 50464 ;; This function calls:
 50465 ;;		Nothing
 50466 ;; This function is called by:
 50467 ;;		_UART2_Initialize
 50468 ;;		_UART2_tx_vect_isr
 50469 ;; This function uses a reentrant model
 50470 ;;
 50471                           
 50472                           	psect	text216
 50473  0027CC                     __ptext216:
 50474                           	opt callstack 0
 50475  0027CC                     _UART2_Transmit_ISR:
 50476                           	opt callstack 4
 50477                           
 50478                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 50479                           
 50480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50481                           ;incstack = 0
 50482  0027CC  0E40               	movlw	64
 50483  0027CE  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 50484  0027D0  D010               	goto	l675
 50485                           
 50486                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 50487  0027D2  0E00               	movlw	low _uart2TxBuffer
 50488  0027D4  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 50489  0027D6  6ED9               	movwf	fsr2l,c
 50490  0027D8  6ADA               	clrf	fsr2h,c
 50491  0027DA  0E04               	movlw	high _uart2TxBuffer
 50492  0027DC  22DA               	addwfc	fsr2h,f,c
 50493  0027DE  50DF               	movf	indf2,w,c
 50494  0027E0  013D               	movlb	61	; () banked
 50495  0027E2  6FD2               	movwf	210,b	;volatile
 50496                           
 50497                           ; BSR set to: 61
 50498  0027E4  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 50499                           
 50500                           ; BSR set to: 61
 50501                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 50502  0027E6  0E3F               	movlw	63
 50503  0027E8  6456               	cpfsgt	_uart2TxTail^0,c
 50504  0027EA  D001               	goto	l14055
 50505                           
 50506                           ; BSR set to: 61
 50507                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 50508  0027EC  6A56               	clrf	_uart2TxTail^0,c	;volatile
 50509  0027EE                     l14055:
 50510                           
 50511                           ; BSR set to: 61
 50512                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 50513  0027EE  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 50514                           
 50515                           ;mcc_generated_files/uart2.c: 224:     }
 50516  0027F0  0012               	return	
 50517  0027F2                     l675:
 50518                           
 50519                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 50520  0027F2  0139               	movlb	57	; () banked
 50521  0027F4  9796               	bcf	150,3,b	;volatile
 50522                           
 50523                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 50524  0027F6  0012               	return		;funcret
 50525  0027F8                     __end_of_UART2_Transmit_ISR:
 50526                           	opt callstack 0
 50527                           
 50528 ;; *************** function _UART2_rx_vect_isr *****************
 50529 ;; Defined at:
 50530 ;;		line 203 in file "mcc_generated_files/uart2.c"
 50531 ;; Parameters:    Size  Location     Type
 50532 ;;		None
 50533 ;; Auto vars:     Size  Location     Type
 50534 ;;		None
 50535 ;; Return value:  Size  Location     Type
 50536 ;;                  1    wreg      void 
 50537 ;; Registers used:
 50538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50539 ;; Tracked objects:
 50540 ;;		On entry : 0/0
 50541 ;;		On exit  : 0/0
 50542 ;;		Unchanged: 0/0
 50543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50548 ;;Total ram usage:        0 bytes
 50549 ;; Hardware stack levels used:    1
 50550 ;; Hardware stack levels required when called:    1
 50551 ;; This function calls:
 50552 ;;		Absolute function
 50553 ;;		_UART2_Receive_ISR
 50554 ;; This function is called by:
 50555 ;;		Interrupt level 2
 50556 ;; This function uses a non-reentrant model
 50557 ;;
 50558                           
 50559                           	psect	text217
 50560  002A54                     __ptext217:
 50561                           	opt callstack 0
 50562  002A54                     _UART2_rx_vect_isr:
 50563                           	opt callstack 4
 50564                           
 50565                           ;incstack = 0
 50566  002A54  EE14  F336         	lfsr	1,___inthi_sp
 50567                           
 50568                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 50569  002A58  0100               	movlb	0	; () banked
 50570  002A5A  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50571  002A5C  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50572  002A5E  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50573  002A60  B4D8               	btfsc	status,2,c
 50574  002A62  0011               	retfie		f
 50575                           
 50576                           ; BSR set to: 0
 50577                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 50578  002A64  D801               	call	i2u1400_48
 50579  002A66  0011               	retfie		f
 50580  002A68                     i2u1400_48:
 50581  002A68  0005               	push	
 50582  002A6A  6EFA               	movwf	pclath,c
 50583  002A6C  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50584  002A6E  6EFD               	movwf	tosl,c
 50585  002A70  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50586  002A72  6EFE               	movwf	tosh,c
 50587  002A74  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50588  002A76  6EFF               	movwf	tosu,c
 50589  002A78  50FA               	movf	pclath,w,c
 50590  002A7A  0012               	return		;indir
 50591  002A7C                     __end_of_UART2_rx_vect_isr:
 50592                           	opt callstack 0
 50593                           
 50594 ;; *************** function _UART2_Receive_ISR *****************
 50595 ;; Defined at:
 50596 ;;		line 233 in file "mcc_generated_files/uart2.c"
 50597 ;; Parameters:    Size  Location     Type
 50598 ;;		None
 50599 ;; Auto vars:     Size  Location     Type
 50600 ;;		None
 50601 ;; Return value:  Size  Location     Type
 50602 ;;                  1  [STACK] void 
 50603 ;; Registers used:
 50604 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50605 ;; Tracked objects:
 50606 ;;		On entry : 3F/0
 50607 ;;		On exit  : 3F/0
 50608 ;;		Unchanged: 0/0
 50609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50614 ;;Total ram usage:        0 bytes
 50615 ;; Hardware stack levels used:    1
 50616 ;; This function calls:
 50617 ;;		Nothing
 50618 ;; This function is called by:
 50619 ;;		_UART2_Initialize
 50620 ;;		_UART2_rx_vect_isr
 50621 ;; This function uses a reentrant model
 50622 ;;
 50623                           
 50624                           	psect	text218
 50625  002BFC                     __ptext218:
 50626                           	opt callstack 0
 50627  002BFC                     _UART2_Receive_ISR:
 50628                           	opt callstack 4
 50629                           
 50630                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 50631                           
 50632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50633                           ;incstack = 0
 50634  002BFC  0E00               	movlw	low _uart2RxBuffer
 50635  002BFE  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 50636  002C00  6ED9               	movwf	fsr2l,c
 50637  002C02  6ADA               	clrf	fsr2h,c
 50638  002C04  0E06               	movlw	high _uart2RxBuffer
 50639  002C06  22DA               	addwfc	fsr2h,f,c
 50640  002C08  006F F743 FFDF     	movff	15824,indf2	;volatile
 50641  002C0E  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 50642                           
 50643                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 50644  002C10  2854               	incf	_uart2RxHead^0,w,c
 50645  002C12  B4D8               	btfsc	status,2,c
 50646                           
 50647                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 50648  002C14  6A54               	clrf	_uart2RxHead^0,c	;volatile
 50649                           
 50650                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 50651  002C16  0100               	movlb	0	; () banked
 50652  002C18  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 50653                           
 50654                           ; BSR set to: 0
 50655                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50656  002C1A  0012               	return		;funcret
 50657  002C1C                     __end_of_UART2_Receive_ISR:
 50658                           	opt callstack 0
 50659                           
 50660 ;; *************** function _TMR6_ISR *****************
 50661 ;; Defined at:
 50662 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 50663 ;; Parameters:    Size  Location     Type
 50664 ;;		None
 50665 ;; Auto vars:     Size  Location     Type
 50666 ;;		None
 50667 ;; Return value:  Size  Location     Type
 50668 ;;                  1    wreg      void 
 50669 ;; Registers used:
 50670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50671 ;; Tracked objects:
 50672 ;;		On entry : 0/0
 50673 ;;		On exit  : 0/0
 50674 ;;		Unchanged: 0/0
 50675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50680 ;;Total ram usage:        1 bytes
 50681 ;; Hardware stack levels used:    1
 50682 ;; Hardware stack levels required when called:    2
 50683 ;; This function calls:
 50684 ;;		_TMR6_CallBack
 50685 ;; This function is called by:
 50686 ;;		Interrupt level 2
 50687 ;; This function uses a non-reentrant model
 50688 ;;
 50689                           
 50690                           	psect	text219
 50691  002CB0                     __ptext219:
 50692                           	opt callstack 0
 50693  002CB0                     _TMR6_ISR:
 50694                           	opt callstack 3
 50695                           
 50696                           ; BSR set to: 0
 50697                           ;incstack = 0
 50698  002CB0  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 50699  002CB6  EE14  F336         	lfsr	1,___inthi_sp
 50700                           
 50701                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 50702  002CBA  0139               	movlb	57	; () banked
 50703  002CBC  91A9               	bcf	169,0,b	;volatile
 50704                           
 50705                           ; BSR set to: 57
 50706                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 50707  002CBE  EC98  F015         	call	_TMR6_CallBack	;wreg free
 50708  002CC2  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 50709  002CC8  0011               	retfie		f
 50710  002CCA                     __end_of_TMR6_ISR:
 50711                           	opt callstack 0
 50712                           
 50713 ;; *************** function _TMR6_CallBack *****************
 50714 ;; Defined at:
 50715 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 50716 ;; Parameters:    Size  Location     Type
 50717 ;;		None
 50718 ;; Auto vars:     Size  Location     Type
 50719 ;;		None
 50720 ;; Return value:  Size  Location     Type
 50721 ;;                  1  [STACK] void 
 50722 ;; Registers used:
 50723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50724 ;; Tracked objects:
 50725 ;;		On entry : 3F/39
 50726 ;;		On exit  : 0/0
 50727 ;;		Unchanged: 0/0
 50728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50733 ;;Total ram usage:        0 bytes
 50734 ;; Hardware stack levels used:    1
 50735 ;; Hardware stack levels required when called:    1
 50736 ;; This function calls:
 50737 ;;		Absolute function
 50738 ;;		_TMR6_DefaultInterruptHandler
 50739 ;; This function is called by:
 50740 ;;		_TMR6_ISR
 50741 ;; This function uses a reentrant model
 50742 ;;
 50743                           
 50744                           	psect	text220
 50745  002B30                     __ptext220:
 50746                           	opt callstack 0
 50747  002B30                     _TMR6_CallBack:
 50748                           	opt callstack 3
 50749                           
 50750                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 50751                           
 50752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50753                           ;incstack = 0
 50754  002B30  0100               	movlb	0	; () banked
 50755  002B32  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50756  002B34  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50757  002B36  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50758  002B38  B4D8               	btfsc	status,2,c
 50759  002B3A  0012               	return	
 50760                           
 50761                           ; BSR set to: 0
 50762                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 50763  002B3C  D801               	call	u1330_48
 50764  002B3E  0012               	return	
 50765  002B40                     u1330_48:
 50766  002B40  0005               	push	
 50767  002B42  6EFA               	movwf	pclath,c
 50768  002B44  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50769  002B46  6EFD               	movwf	tosl,c
 50770  002B48  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50771  002B4A  6EFE               	movwf	tosh,c
 50772  002B4C  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50773  002B4E  6EFF               	movwf	tosu,c
 50774  002B50  50FA               	movf	pclath,w,c
 50775  002B52  0012               	return		;indir
 50776  002B54                     __end_of_TMR6_CallBack:
 50777                           	opt callstack 0
 50778                           
 50779 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 50780 ;; Defined at:
 50781 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 50782 ;; Parameters:    Size  Location     Type
 50783 ;;		None
 50784 ;; Auto vars:     Size  Location     Type
 50785 ;;  i               1  [STACK] unsigned char 
 50786 ;; Return value:  Size  Location     Type
 50787 ;;                  1  [STACK] void 
 50788 ;; Registers used:
 50789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 50790 ;; Tracked objects:
 50791 ;;		On entry : 3F/0
 50792 ;;		On exit  : 0/0
 50793 ;;		Unchanged: 0/0
 50794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50799 ;;Total ram usage:        0 bytes
 50800 ;; Hardware stack levels used:    1
 50801 ;; This function calls:
 50802 ;;		Nothing
 50803 ;; This function is called by:
 50804 ;;		_TMR6_Initialize
 50805 ;;		_TMR6_CallBack
 50806 ;; This function uses a reentrant model
 50807 ;;
 50808                           
 50809                           	psect	text221
 50810  002020                     __ptext221:
 50811                           	opt callstack 0
 50812  002020                     _TMR6_DefaultInterruptHandler:
 50813                           	opt callstack 0
 50814                           
 50815                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50816  002020  52E6               	movf	postinc1,f,c
 50817                           
 50818                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 50819                           ;stkvar	_i @ sp[(-1)+0]
 50820                           
 50821                           ;incstack = 0
 50822  002022  0EFF               	movlw	-1
 50823  002024  6AE3               	clrf	plusw1,c
 50824  002026                     l13421:
 50825                           
 50826                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 50827                           ;stkvar	_i @ sp[(-1)+0]
 50828  002026  0EFF               	movlw	-1
 50829  002028  50E3               	movf	plusw1,w,c
 50830  00202A  0D02               	mullw	2
 50831  00202C  0EBC               	movlw	low _tickCount
 50832  00202E  24F3               	addwf	243,w,c
 50833  002030  6ED9               	movwf	fsr2l,c
 50834  002032  0E02               	movlw	high _tickCount
 50835  002034  20F4               	addwfc	prodh,w,c
 50836  002036  6EDA               	movwf	fsr2h,c
 50837  002038  50DE               	movf	postinc2,w,c
 50838  00203A  10DE               	iorwf	postinc2,w,c
 50839  00203C  B4D8               	btfsc	status,2,c
 50840  00203E  D00C               	goto	l13425
 50841                           
 50842                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 50843                           ;stkvar	_i @ sp[(-1)+0]
 50844  002040  0EFF               	movlw	-1
 50845  002042  50E3               	movf	plusw1,w,c
 50846  002044  0D02               	mullw	2
 50847  002046  0EBC               	movlw	low _tickCount
 50848  002048  24F3               	addwf	243,w,c
 50849  00204A  6ED9               	movwf	fsr2l,c
 50850  00204C  0E02               	movlw	high _tickCount
 50851  00204E  20F4               	addwfc	prodh,w,c
 50852  002050  6EDA               	movwf	fsr2h,c
 50853  002052  06DE               	decf	postinc2,f,c
 50854  002054  0E00               	movlw	0
 50855  002056  5ADD               	subwfb	postdec2,f,c
 50856  002058                     l13425:
 50857                           
 50858                           ;mcc_generated_files/tmr6.c: 207:  }
 50859                           ;stkvar	_i @ sp[(-1)+0]
 50860  002058  0EFF               	movlw	-1
 50861  00205A  2AE3               	incf	plusw1,f,c
 50862                           
 50863                           ;stkvar	_i @ sp[(-1)+0]
 50864  00205C  0EFF               	movlw	-1
 50865  00205E  006F FF8C  F02A    	movff	plusw1,btemp
 50866  002064  0E0C               	movlw	12
 50867  002066  642A               	cpfsgt	btemp^0,c
 50868  002068  D7DE               	goto	l13421
 50869                           
 50870                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50871  00206A  52E5               	movf	postdec1,f,c
 50872  00206C  0012               	return		;funcret
 50873  00206E                     __end_of_TMR6_DefaultInterruptHandler:
 50874                           	opt callstack 0
 50875                           
 50876 ;; *************** function _DMA1_DMASCNT_ISR *****************
 50877 ;; Defined at:
 50878 ;;		line 126 in file "mcc_generated_files/dma1.c"
 50879 ;; Parameters:    Size  Location     Type
 50880 ;;		None
 50881 ;; Auto vars:     Size  Location     Type
 50882 ;;		None
 50883 ;; Return value:  Size  Location     Type
 50884 ;;                  1    wreg      void 
 50885 ;; Registers used:
 50886 ;;		None
 50887 ;; Tracked objects:
 50888 ;;		On entry : 0/0
 50889 ;;		On exit  : 3F/0
 50890 ;;		Unchanged: 0/0
 50891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50896 ;;Total ram usage:        0 bytes
 50897 ;; Hardware stack levels used:    1
 50898 ;; This function calls:
 50899 ;;		Nothing
 50900 ;; This function is called by:
 50901 ;;		Interrupt level 2
 50902 ;; This function uses a non-reentrant model
 50903 ;;
 50904                           
 50905                           	psect	text222
 50906  002E14                     __ptext222:
 50907                           	opt callstack 0
 50908  002E14                     _DMA1_DMASCNT_ISR:
 50909                           	opt callstack 5
 50910                           
 50911                           ;incstack = 0
 50912  002E14  EE14  F336         	lfsr	1,___inthi_sp
 50913                           
 50914                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 50915  002E18  0139               	movlb	57	; () banked
 50916  002E1A  91A2               	bcf	162,0,b	;volatile
 50917                           
 50918                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 50919  002E1C  0100               	movlb	0	; () banked
 50920  002E1E  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 50921                           
 50922                           ; BSR set to: 0
 50923  002E20  0011               	retfie		f
 50924  002E22                     __end_of_DMA1_DMASCNT_ISR:
 50925                           	opt callstack 0
 50926                           
 50927 ;; *************** function _DMA1_DMADCNT_ISR *****************
 50928 ;; Defined at:
 50929 ;;		line 133 in file "mcc_generated_files/dma1.c"
 50930 ;; Parameters:    Size  Location     Type
 50931 ;;		None
 50932 ;; Auto vars:     Size  Location     Type
 50933 ;;		None
 50934 ;; Return value:  Size  Location     Type
 50935 ;;                  1    wreg      void 
 50936 ;; Registers used:
 50937 ;;		None
 50938 ;; Tracked objects:
 50939 ;;		On entry : 0/0
 50940 ;;		On exit  : 3F/39
 50941 ;;		Unchanged: 0/0
 50942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50947 ;;Total ram usage:        0 bytes
 50948 ;; Hardware stack levels used:    1
 50949 ;; This function calls:
 50950 ;;		Nothing
 50951 ;; This function is called by:
 50952 ;;		Interrupt level 2
 50953 ;; This function uses a non-reentrant model
 50954 ;;
 50955                           
 50956                           	psect	text223
 50957  002E38                     __ptext223:
 50958                           	opt callstack 0
 50959  002E38                     _DMA1_DMADCNT_ISR:
 50960                           	opt callstack 5
 50961                           
 50962                           ; BSR set to: 0
 50963                           ;incstack = 0
 50964  002E38  EE14  F336         	lfsr	1,___inthi_sp
 50965                           
 50966                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 50967  002E3C  0139               	movlb	57	; () banked
 50968  002E3E  93A2               	bcf	162,1,b	;volatile
 50969                           
 50970                           ; BSR set to: 57
 50971  002E40  0011               	retfie		f
 50972  002E42                     __end_of_DMA1_DMADCNT_ISR:
 50973                           	opt callstack 0
 50974                           
 50975 ;; *************** function _DMA1_DMAA_ISR *****************
 50976 ;; Defined at:
 50977 ;;		line 143 in file "mcc_generated_files/dma1.c"
 50978 ;; Parameters:    Size  Location     Type
 50979 ;;		None
 50980 ;; Auto vars:     Size  Location     Type
 50981 ;;		None
 50982 ;; Return value:  Size  Location     Type
 50983 ;;                  1    wreg      void 
 50984 ;; Registers used:
 50985 ;;		None
 50986 ;; Tracked objects:
 50987 ;;		On entry : 0/0
 50988 ;;		On exit  : 3F/39
 50989 ;;		Unchanged: 0/0
 50990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50995 ;;Total ram usage:        0 bytes
 50996 ;; Hardware stack levels used:    1
 50997 ;; This function calls:
 50998 ;;		Nothing
 50999 ;; This function is called by:
 51000 ;;		Interrupt level 2
 51001 ;; This function uses a non-reentrant model
 51002 ;;
 51003                           
 51004                           	psect	text224
 51005  002E44                     __ptext224:
 51006                           	opt callstack 0
 51007  002E44                     _DMA1_DMAA_ISR:
 51008                           	opt callstack 5
 51009                           
 51010                           ; BSR set to: 57
 51011                           ;incstack = 0
 51012  002E44  EE14  F336         	lfsr	1,___inthi_sp
 51013                           
 51014                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 51015  002E48  0139               	movlb	57	; () banked
 51016  002E4A  97A2               	bcf	162,3,b	;volatile
 51017                           
 51018                           ; BSR set to: 57
 51019  002E4C  0011               	retfie		f
 51020  002E4E                     __end_of_DMA1_DMAA_ISR:
 51021                           	opt callstack 0
 51022                           
 51023 ;; *************** function _DMA1_DMAOR_ISR *****************
 51024 ;; Defined at:
 51025 ;;		line 154 in file "mcc_generated_files/dma1.c"
 51026 ;; Parameters:    Size  Location     Type
 51027 ;;		None
 51028 ;; Auto vars:     Size  Location     Type
 51029 ;;		None
 51030 ;; Return value:  Size  Location     Type
 51031 ;;                  1    wreg      void 
 51032 ;; Registers used:
 51033 ;;		None
 51034 ;; Tracked objects:
 51035 ;;		On entry : 0/0
 51036 ;;		On exit  : 3F/39
 51037 ;;		Unchanged: 0/0
 51038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51043 ;;Total ram usage:        0 bytes
 51044 ;; Hardware stack levels used:    1
 51045 ;; This function calls:
 51046 ;;		Nothing
 51047 ;; This function is called by:
 51048 ;;		Interrupt level 2
 51049 ;; This function uses a non-reentrant model
 51050 ;;
 51051                           
 51052                           	psect	text225
 51053  002E50                     __ptext225:
 51054                           	opt callstack 0
 51055  002E50                     _DMA1_DMAOR_ISR:
 51056                           	opt callstack 5
 51057                           
 51058                           ; BSR set to: 57
 51059                           ;incstack = 0
 51060  002E50  EE14  F336         	lfsr	1,___inthi_sp
 51061                           
 51062                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 51063  002E54  0139               	movlb	57	; () banked
 51064  002E56  95A2               	bcf	162,2,b	;volatile
 51065                           
 51066                           ; BSR set to: 57
 51067  002E58  0011               	retfie		f
 51068  002E5A                     __end_of_DMA1_DMAOR_ISR:
 51069                           	opt callstack 0
 51070                           
 51071                           ;
 51072                           ; Interrupt Vector Table @ 0x8
 51073                           ;
 51074                           
 51075                           	psect	ivt0x8
 51076  000008                     __pivt0x8:
 51077                           	opt callstack 0
 51078  000008                     ivt0x8_base:
 51079                           	opt callstack 0
 51080                           
 51081                           ; Vector 0 : SWINT
 51082  000008  0BA8               	dw	_Default_ISR shr (0+2)
 51083                           
 51084                           ; Vector 1 : HLVD
 51085  00000A  0BA8               	dw	_Default_ISR shr (0+2)
 51086                           
 51087                           ; Vector 2 : OSF
 51088  00000C  0BA8               	dw	_Default_ISR shr (0+2)
 51089                           
 51090                           ; Vector 3 : CSW
 51091  00000E  0BA8               	dw	_Default_ISR shr (0+2)
 51092                           
 51093                           ; Vector 4 : NVM
 51094  000010  0BA8               	dw	_Default_ISR shr (0+2)
 51095                           
 51096                           ; Vector 5 : SCAN
 51097  000012  0BA8               	dw	_Default_ISR shr (0+2)
 51098                           
 51099                           ; Vector 6 : CRC
 51100  000014  0BA8               	dw	_Default_ISR shr (0+2)
 51101                           
 51102                           ; Vector 7 : IOC
 51103  000016  0BA8               	dw	_Default_ISR shr (0+2)
 51104                           
 51105                           ; Vector 8 : INT0
 51106  000018  0B81               	dw	_INT0_ISR shr (0+2)
 51107                           
 51108                           ; Vector 9 : ZCD
 51109  00001A  0BA8               	dw	_Default_ISR shr (0+2)
 51110                           
 51111                           ; Vector 10 : AD
 51112  00001C  09E8               	dw	_ADCC_ISR shr (0+2)
 51113                           
 51114                           ; Vector 11 : ADT
 51115  00001E  0665               	dw	_ADCC_ThresholdISR shr (0+2)
 51116                           
 51117                           ; Vector 12 : CMP1
 51118  000020  0BA8               	dw	_Default_ISR shr (0+2)
 51119                           
 51120                           ; Vector 13 : SMT1
 51121  000022  0BA8               	dw	_Default_ISR shr (0+2)
 51122                           
 51123                           ; Vector 14 : SMT1PRA
 51124  000024  0BA8               	dw	_Default_ISR shr (0+2)
 51125                           
 51126                           ; Vector 15 : SMT1PRW
 51127  000026  0BA8               	dw	_Default_ISR shr (0+2)
 51128                           
 51129                           ; Vector 16 : DMA1SCNT
 51130  000028  0B85               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 51131                           
 51132                           ; Vector 17 : DMA1DCNT
 51133  00002A  0B8E               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 51134                           
 51135                           ; Vector 18 : DMA1OR
 51136  00002C  0B94               	dw	_DMA1_DMAOR_ISR shr (0+2)
 51137                           
 51138                           ; Vector 19 : DMA1A
 51139  00002E  0B91               	dw	_DMA1_DMAA_ISR shr (0+2)
 51140                           
 51141                           ; Vector 20 : SPI1RX
 51142  000030  0BA8               	dw	_Default_ISR shr (0+2)
 51143                           
 51144                           ; Vector 21 : SPI1TX
 51145  000032  0BA8               	dw	_Default_ISR shr (0+2)
 51146                           
 51147                           ; Vector 22 : SPI1
 51148  000034  0BA8               	dw	_Default_ISR shr (0+2)
 51149                           
 51150                           ; Vector 23 : I2C1RX
 51151  000036  0BA8               	dw	_Default_ISR shr (0+2)
 51152                           
 51153                           ; Vector 24 : I2C1TX
 51154  000038  0BA8               	dw	_Default_ISR shr (0+2)
 51155                           
 51156                           ; Vector 25 : I2C1
 51157  00003A  0BA8               	dw	_Default_ISR shr (0+2)
 51158                           
 51159                           ; Vector 26 : I2C1E
 51160  00003C  0BA8               	dw	_Default_ISR shr (0+2)
 51161                           
 51162                           ; Vector 27 : U1RX
 51163  00003E  0A81               	dw	_UART1_rx_vect_isr shr (0+2)
 51164                           
 51165                           ; Vector 28 : U1TX
 51166  000040  0BA8               	dw	_Default_ISR shr (0+2)
 51167                           
 51168                           ; Vector 29 : U1E
 51169  000042  0BA8               	dw	_Default_ISR shr (0+2)
 51170                           
 51171                           ; Vector 30 : U1
 51172  000044  0BA8               	dw	_Default_ISR shr (0+2)
 51173                           
 51174                           ; Vector 31 : TMR0
 51175  000046  0BA8               	dw	_Default_ISR shr (0+2)
 51176                           
 51177                           ; Vector 32 : TMR1
 51178  000048  0BA8               	dw	_Default_ISR shr (0+2)
 51179                           
 51180                           ; Vector 33 : TMR1G
 51181  00004A  0BA8               	dw	_Default_ISR shr (0+2)
 51182                           
 51183                           ; Vector 34 : TMR2
 51184  00004C  0BA8               	dw	_Default_ISR shr (0+2)
 51185                           
 51186                           ; Vector 35 : CCP1
 51187  00004E  0BA8               	dw	_Default_ISR shr (0+2)
 51188                           
 51189                           ; Vector 36 : Undefined
 51190  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 51191                           
 51192                           ; Vector 37 : NCO1
 51193  000052  0BA8               	dw	_Default_ISR shr (0+2)
 51194                           
 51195                           ; Vector 38 : CWG1
 51196  000054  0BA8               	dw	_Default_ISR shr (0+2)
 51197                           
 51198                           ; Vector 39 : CLC1
 51199  000056  0BA8               	dw	_Default_ISR shr (0+2)
 51200                           
 51201                           ; Vector 40 : INT1
 51202  000058  090A               	dw	_INT1_ISR shr (0+2)
 51203                           
 51204                           ; Vector 41 : CMP2
 51205  00005A  0BA8               	dw	_Default_ISR shr (0+2)
 51206                           
 51207                           ; Vector 42 : DMA2SCNT
 51208  00005C  0BA8               	dw	_Default_ISR shr (0+2)
 51209                           
 51210                           ; Vector 43 : DMA2DCNT
 51211  00005E  0BA8               	dw	_Default_ISR shr (0+2)
 51212                           
 51213                           ; Vector 44 : DMA2OR
 51214  000060  0BA8               	dw	_Default_ISR shr (0+2)
 51215                           
 51216                           ; Vector 45 : DMA2A
 51217  000062  0BA8               	dw	_Default_ISR shr (0+2)
 51218                           
 51219                           ; Vector 46 : I2C2RX
 51220  000064  0BA8               	dw	_Default_ISR shr (0+2)
 51221                           
 51222                           ; Vector 47 : I2C2TX
 51223  000066  0BA8               	dw	_Default_ISR shr (0+2)
 51224                           
 51225                           ; Vector 48 : I2C2
 51226  000068  0BA8               	dw	_Default_ISR shr (0+2)
 51227                           
 51228                           ; Vector 49 : I2C2E
 51229  00006A  0BA8               	dw	_Default_ISR shr (0+2)
 51230                           
 51231                           ; Vector 50 : U2RX
 51232  00006C  0A95               	dw	_UART2_rx_vect_isr shr (0+2)
 51233                           
 51234                           ; Vector 51 : U2TX
 51235  00006E  0A8B               	dw	_UART2_tx_vect_isr shr (0+2)
 51236                           
 51237                           ; Vector 52 : U2E
 51238  000070  0BA8               	dw	_Default_ISR shr (0+2)
 51239                           
 51240                           ; Vector 53 : U2
 51241  000072  0BA8               	dw	_Default_ISR shr (0+2)
 51242                           
 51243                           ; Vector 54 : TMR3
 51244  000074  7B81               	dw	_TMR3_ISR shr (0+2)
 51245                           
 51246                           ; Vector 55 : TMR3G
 51247  000076  0BA8               	dw	_Default_ISR shr (0+2)
 51248                           
 51249                           ; Vector 56 : TMR4
 51250  000078  0BA8               	dw	_Default_ISR shr (0+2)
 51251                           
 51252                           ; Vector 57 : CCP2
 51253  00007A  0BA8               	dw	_Default_ISR shr (0+2)
 51254                           
 51255                           ; Vector 58 : Undefined
 51256  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 51257                           
 51258                           ; Vector 59 : CWG2
 51259  00007E  0BA8               	dw	_Default_ISR shr (0+2)
 51260                           
 51261                           ; Vector 60 : CLC2
 51262  000080  0BA8               	dw	_Default_ISR shr (0+2)
 51263                           
 51264                           ; Vector 61 : INT2
 51265  000082  0BA8               	dw	_Default_ISR shr (0+2)
 51266                           
 51267                           ; Vector 62 : Undefined
 51268  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 51269                           
 51270                           ; Vector 63 : Undefined
 51271  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 51272                           
 51273                           ; Vector 64 : Undefined
 51274  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 51275                           
 51276                           ; Vector 65 : Undefined
 51277  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 51278                           
 51279                           ; Vector 66 : Undefined
 51280  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 51281                           
 51282                           ; Vector 67 : Undefined
 51283  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 51284                           
 51285                           ; Vector 68 : Undefined
 51286  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 51287                           
 51288                           ; Vector 69 : Undefined
 51289  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 51290                           
 51291                           ; Vector 70 : TMR5
 51292  000094  77BE               	dw	_TMR5_ISR shr (0+2)
 51293                           
 51294                           ; Vector 71 : TMR5G
 51295  000096  0BA8               	dw	_Default_ISR shr (0+2)
 51296                           
 51297                           ; Vector 72 : TMR6
 51298  000098  0B2C               	dw	_TMR6_ISR shr (0+2)
 51299                           
 51300                           ; Vector 73 : CCP3
 51301  00009A  0BA8               	dw	_Default_ISR shr (0+2)
 51302                           
 51303                           ; Vector 74 : CWG3
 51304  00009C  0BA8               	dw	_Default_ISR shr (0+2)
 51305                           
 51306                           ; Vector 75 : CLC3
 51307  00009E  0BA8               	dw	_Default_ISR shr (0+2)
 51308                           
 51309                           ; Vector 76 : Undefined
 51310  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 51311                           
 51312                           ; Vector 77 : Undefined
 51313  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 51314                           
 51315                           ; Vector 78 : Undefined
 51316  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 51317                           
 51318                           ; Vector 79 : Undefined
 51319  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 51320                           
 51321                           ; Vector 80 : CCP4
 51322  0000A8  0BA8               	dw	_Default_ISR shr (0+2)
 51323                           
 51324                           ; Vector 81 : CLC4
 51325  0000AA  0BA8               	dw	_Default_ISR shr (0+2)
 51326  0000AC                     ivt0x8_undefint:
 51327                           	opt callstack 0
 51328  0000AC  00FF               	reset	
 51329                           
 51330                           	psect	text226
 51331  000000                     __ptext226:
 51332                           	opt callstack 0
 51333                           
 51334                           	psect	rparam
 51335  0000                     
 51336                           	psect	temp
 51337  00002A                     btemp:
 51338                           	opt callstack 0
 51339  00002A                     	ds	32
 51340  0000                     wtemp0	set	btemp
 51341  0000                     wtemp1	set	btemp+2
 51342  0000                     wtemp2	set	btemp+4
 51343  0000                     wtemp3	set	btemp+6
 51344  0000                     wtemp4	set	btemp+8
 51345  0000                     wtemp5	set	btemp+10
 51346  0000                     wtemp8	set	btemp+1
 51347  0000                     ttemp0	set	btemp
 51348  0000                     ttemp1	set	btemp+3
 51349  0000                     ttemp2	set	btemp+6
 51350  0000                     ttemp3	set	btemp+9
 51351  0000                     ttemp5	set	btemp+1
 51352  0000                     ttemp6	set	btemp+4
 51353  0000                     ttemp7	set	btemp+8
 51354  0000                     ltemp0	set	btemp
 51355  0000                     ltemp1	set	btemp+4
 51356  0000                     ltemp2	set	btemp+8
 51357  0000                     lltemp0	set	btemp
 51358  0000                     lltemp1	set	btemp+8
 51359  0000                     lltemp2	set	btemp+16
 51360  0000                     lltemp3	set	btemp+24
 51361                           tosu	equ	0x3FFF
 51362                           tosh	equ	0x3FFE
 51363                           tosl	equ	0x3FFD
 51364                           stkptr	equ	0x3FFC
 51365                           pclatu	equ	0x3FFB
 51366                           pclath	equ	0x3FFA
 51367                           pcl	equ	0x3FF9
 51368                           tblptru	equ	0x3FF8
 51369                           tblptrh	equ	0x3FF7
 51370                           tblptrl	equ	0x3FF6
 51371                           tablat	equ	0x3FF5
 51372                           prodh	equ	0x3FF4
 51373                           prodl	equ	0x3FF3
 51374                           indf0	equ	0x3FEF
 51375                           postinc0	equ	0x3FEE
 51376                           postdec0	equ	0x3FED
 51377                           preinc0	equ	0x3FEC
 51378                           plusw0	equ	0x3FEB
 51379                           fsr0h	equ	0x3FEA
 51380                           fsr0l	equ	0x3FE9
 51381                           wreg	equ	0x3FE8
 51382                           indf1	equ	0x3FE7
 51383                           postinc1	equ	0x3FE6
 51384                           postdec1	equ	0x3FE5
 51385                           preinc1	equ	0x3FE4
 51386                           plusw1	equ	0x3FE3
 51387                           fsr1h	equ	0x3FE2
 51388                           fsr1l	equ	0x3FE1
 51389                           bsr	equ	0x3FE0
 51390                           indf2	equ	0x3FDF
 51391                           postinc2	equ	0x3FDE
 51392                           postdec2	equ	0x3FDD
 51393                           preinc2	equ	0x3FDC
 51394                           plusw2	equ	0x3FDB
 51395                           fsr2h	equ	0x3FDA
 51396                           fsr2l	equ	0x3FD9
 51397                           status	equ	0x3FD8


Data Sizes:
    Strings     1602
    Constant    588
    Data        1216
    BSS         1791
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     249
    BANK2           256      0     250
    BANK3           256      0     247
    BANK4           256      0     198
    BANK5           256      0     171
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    C.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_142(CODE[1]), STR_102(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_143(CODE[1]), NULL(NULL[0]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK2[10]), r0(BANK2[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK2[10]), r0(BANK2[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), 
		 -> STR_118(CODE[3]), STR_114(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), 
		 -> STR_118(CODE[3]), STR_114(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), 
		 -> STR_99(CODE[21]), STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), 
		 -> STR_95(CODE[21]), STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), 
		 -> STR_91(CODE[15]), STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), 
		 -> STR_81(CODE[14]), STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), 
		 -> STR_77(CODE[21]), STR_76(CODE[21]), STR_75(CODE[21]), STR_74(CODE[21]), 
		 -> STR_73(CODE[21]), STR_72(CODE[21]), STR_71(CODE[21]), STR_70(CODE[21]), 
		 -> STR_69(CODE[21]), STR_68(CODE[18]), STR_67(CODE[21]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), 
		 -> STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[20]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[22]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[23]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[29]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), 
		 -> STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[17]), 
		 -> STR_29(CODE[16]), STR_28(CODE[16]), STR_27(CODE[21]), STR_26(CODE[21]), 
		 -> STR_25(CODE[21]), STR_24(CODE[14]), STR_23(CODE[26]), STR_22(CODE[26]), 
		 -> STR_21(CODE[22]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), 
		 -> STR_13(CODE[26]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), 
		 -> STR_99(CODE[21]), STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), 
		 -> STR_95(CODE[21]), STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), 
		 -> STR_91(CODE[15]), STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), 
		 -> STR_81(CODE[14]), STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), 
		 -> STR_77(CODE[21]), STR_76(CODE[21]), STR_75(CODE[21]), STR_74(CODE[21]), 
		 -> STR_73(CODE[21]), STR_72(CODE[21]), STR_71(CODE[21]), STR_70(CODE[21]), 
		 -> STR_69(CODE[21]), STR_68(CODE[18]), STR_67(CODE[21]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), 
		 -> STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[20]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[22]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[23]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[29]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), 
		 -> STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[17]), 
		 -> STR_29(CODE[16]), STR_28(CODE[16]), STR_27(CODE[21]), STR_26(CODE[21]), 
		 -> STR_25(CODE[21]), STR_24(CODE[14]), STR_23(CODE[26]), STR_22(CODE[26]), 
		 -> STR_21(CODE[22]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), 
		 -> STR_13(CODE[26]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_84(CODE[9]), STR_83(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_84(CODE[9]), STR_83(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_109(CODE[4]), STR_108(CODE[4]), STR_105(CODE[4]), STR_104(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_109(CODE[4]), STR_108(CODE[4]), STR_105(CODE[4]), STR_104(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_82(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_81(CODE[14]), STR_80(CODE[28]), 
		 -> STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[21]), STR_76(CODE[21]), 
		 -> STR_75(CODE[21]), STR_74(CODE[21]), STR_73(CODE[21]), STR_72(CODE[21]), 
		 -> STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[18]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[20]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[23]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[29]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[17]), STR_29(CODE[16]), STR_28(CODE[16]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[14]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7635_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[21]), 
		 -> STR_76(CODE[21]), STR_75(CODE[21]), STR_74(CODE[21]), STR_73(CODE[21]), 
		 -> STR_72(CODE[21]), STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), 
		 -> STR_68(CODE[18]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[20]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[23]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[29]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[17]), STR_29(CODE[16]), 
		 -> STR_28(CODE[16]), STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[14]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_141(CODE[37]), STR_140(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 337
		 -> C(BIGRAM[336]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[21]), 
		 -> STR_76(CODE[21]), STR_75(CODE[21]), STR_74(CODE[21]), STR_73(CODE[21]), 
		 -> STR_72(CODE[21]), STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), 
		 -> STR_68(CODE[18]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[20]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[23]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[29]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[17]), STR_29(CODE[16]), 
		 -> STR_28(CODE[16]), STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[14]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[21]), 
		 -> STR_76(CODE[21]), STR_75(CODE[21]), STR_74(CODE[21]), STR_73(CODE[21]), 
		 -> STR_72(CODE[21]), STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), 
		 -> STR_68(CODE[18]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[20]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[23]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[29]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[17]), STR_29(CODE[16]), 
		 -> STR_28(CODE[16]), STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[14]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_84(CODE[9]), 
		 -> STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_84(CODE[9]), 
		 -> STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_84(CODE[9]), STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), 
		 -> V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 337
		 -> C.hist(BIGRAM[113]), C(BIGRAM[336]), 

    R.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> R(BANK1[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> r_cal(BANK5[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_84(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_83(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    S3346tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  445744
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    2818
                            ___fldiv
                            ___flmul
                            ___fltol
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1495
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   85764
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   17597
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   17566
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   13567
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    2026
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2     124
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    4266
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      93
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    2179
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4     130
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    3196
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1456
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     610
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     161
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3689
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16     136
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     136
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     445
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2317
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     886
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     159
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                  17    17      0   69641
                             _WaitMs
                            ___fldiv
                           ___xxtofl
                    _cal_current_10A
                   _cal_current_zero
                     _clear_adc_scan
                       _clear_switch
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _clear_switch                                         1     0      1      66
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (2) _cal_current_10A                                     13     0     13     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  131570
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65501
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30564
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35087
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34761
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1464
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31725
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30339
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30186
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29794
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13922
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3260
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     433
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     445
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36013
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35923
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   35923
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30564
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30186
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29794
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13922
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3260
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     433
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     445
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___xxtofl
     _cal_current_10A
       _check_range
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _clear_switch
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fldiv
     ___flmul
     ___fltol
     _start_bsoc
     _stop_bsoc
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5D2      69       18.2%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      AB      15       66.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C6      13       77.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     62F      58        0.0%
DATA                 0      0     C01       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 01:48:02 2020

                         _SPI1_Exchange8bit 2C1C                    __end_of_set_display_info 2C94  
                                         _C 08FF                                           _D 0A4F  
                                         _H 01AB                                           _P 0094  
                                         _R 0100                                           _S 01B4  
                                         _T F87D                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 293A                __end_of_start_switch_handler 2BFC  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1E8A                                          _r0 02E8  
                                        _r1 02DE                                          _bp F9A5  
                    __end_of_FVR_Initialize 2E82                              _check_day_time A28E  
                               __CFG_LVP$ON 000000                                         l171 2D4C  
                                       l809 2C2A                                         l675 27F2  
                                       l942 1A4A                                         _GIE 01FE97  
                                       _abs 21D4                                         _pad FCEE  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 2CE2  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs 0486  
                             _INT0_CallBack 2B0C                           _update_adc_result 24A2  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 2AA0  
                              __CFG_ZCD$OFF 000000                                        l1004 23E0  
                                      l2102 18B6                                        l2023 1762  
                                      l2201 A5F8                                        l1500 14D4  
                                      l2205 A5F0                                        l2070 0960  
                                      l1271 2D74                                        l2039 0C3C  
                                      l1192 2420                                        l2064 1208  
                                      l3018 EB32                                        l1282 E886  
                                      l2139 DEEC                             _timer3ReloadVal 00C0  
                                      l1620 1DE0                                        l1284 E88C  
                                      l2405 BB94                                        l1461 02E8  
                                      l3303 8C1E                                        l1519 5380  
                                      l1455 005E                                        l2520 274E  
                                      l2248 1FCE                                        l2280 F87A  
                                      l3410 2214                                        l3402 E226  
                                      l2602 BC82                                        l2186 02B8  
                                      l4018 84EE                                        l4026 7002  
                                      l1474 0806                                        l2363 5DE4  
                                      l1484 0ACE                                        l1476 080C  
                                      l3270 7E78                                        l1494 0CD4  
                                      l2359 5AA6                                        l2623 AD02  
                                      l3415 FAB4                                        l1495 0EFE  
                                      l2464 FD4A                                        l1752 132E  
                                      l2289 D57A                                        l3258 7FE8  
                                      l1826 24F8                                        l2730 0588  
                                      l3514 CCCC                                        l3339 782C  
                                      l3451 C840                                        l1843 F0C2  
                                      l1835 D632                                        l1748 0EFE  
                                      l3540 F99A                                        l2484 96D8  
                                      l2564 202E                                        l1836 D78E  
                                      l2549 1B7E                                        l2638 9F18  
                      _ADCC_StartConversion 2D78                                        l1767 2564  
                                      l3379 D98C                                        l1883 2C90  
                                      l3822 15E0                                        l1983 95F4  
                                      l3807 D35A                                        l2688 47CC  
                                      l3930 D13A                                        l3835 155C  
                                      l2980 08A2                                        l3846 3820  
                                      l2991 EDFA                                        l2984 ED26  
                                      l3939 C34C                                        l3974 C0D0  
                                      l3966 BFEA                                        l9911 7A02  
                                      l9905 79BC                                        l9917 7A24  
                                      l9909 79D2                                        l9847 0FD2  
                                      STR_1 FE51                                        STR_2 FDFD  
                                      l9961 7BF4                                        l9881 78CC  
                                      l9849 0FF4                                        STR_3 FFD5  
                                      STR_4 FD7F                                        l9963 7C06  
                                      l9971 7C40                                        l9947 7B62  
                                      l9875 788C                                        STR_5 FB8C  
                                      STR_6 FB8C                                        l9957 7BD4  
                                      l9893 794A                                        l9885 78E2  
                                      STR_7 FB8C                                        STR_8 FB8C  
                                      l9991 7CEE                                        l9967 7C10  
                                      l9887 7912                                        STR_9 FB8C  
                                      l9995 7CF8                                        l9899 797C  
                                      l9989 7CDC                                        l9999 7D2A  
                                      _LATA 003FBA                                        _LATB 003FBB  
                                      _LATC 003FBC                                        _LATD 003FBD  
                                      _LATE 003FBE                                        _LATF 003FBF  
                                      _T2PR 003FAB                                        _T6PR 003F93  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      _PMD2 0039C2                                        _PMD3 0039C3  
                                      u8000 A8BC                                        _PMD4 0039C4  
                                      _PMD5 0039C5                                        u7210 1022  
                                      _PMD6 0039C6                                        _PMD7 0039C7  
                                      u8005 A8B2                                        u8030 2298  
                                      u7400 7C38                                        u7240 2708  
                                      u8040 229A                                        u7217 1014  
                                      u7410 7C58                                        u9010 089C  
                                      u7250 270A                                        u8050 150A  
                                      u9100 EA4A                                        u8060 150C  
                                      u7405 7C28                                        u7510 7E4A  
                                      u7350 7B88                                        u7360 7BA8  
                                      u8080 2738                                        u9200 E752  
                                      u7361 7BA2                                        u9105 EA40  
                                      u7610 7F34                                        u8090 273A  
                                      u9300 1F1E                                        u9220 E830  
                                      u7550 7EBE                                        u7470 7D20  
                                      u8510 8A52                                        u9070 2088  
                                      u9150 EAE8                                        u7615 7F24  
                                      u7640 7F54                                        u8600 8B72  
                                      u7800 21E8                                        u9080 E9FC  
                                      u9240 F63C                                        u7570 7ED8  
                                      u7378 7BAA                                        u8610 8BAE  
                                      u9170 EB12                                        u9090 EA10  
                                      u7810 E148                                        u9250 F66E  
                                      u7475 7D10                                        u8700 71B6  
                                      u7900 158E                                        u9085 E9F2  
                                      u9181 E6E6                                        u8550 8ADC  
                                      u7910 1590                                        u9190 E720  
                                      u9270 F726                                        u7815 E13E  
                                      u7680 26D8                                        u8810 7700  
                                      u9290 1EFE                                        u7930 A6B8  
                                      u7690 26DA                                        u8715 734A  
                                      u8820 773A                                        u7860 E216  
                                      u7940 A704                                        u8725 7412  
                                      u8830 7780                                        u8590 8B38  
                                      u7870 E218                                        u8815 76F0  
                                      u8735 75DA                                        u7855 E1F8  
                                      u7935 A6AE                                        u8770 76A4  
                                      _PLLR 01CEE0                                        u8595 8B28  
                                      u7980 A7E4                                        u7965 A73E  
                                      u8950 FC4C                                        u7966 A744  
                                      u7967 A752                                        u7985 A7DA  
                                      u8970 FCC0                     __end_of_display_history B8C0  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUD 003A71  
                                      _WPUE 003A81                                        _WPUF 003A91  
                          __end_of_ADCC_ISR 27CC                       __size_of___secs_to_tm 10D2  
                             __CFG_FCMEN$ON 000000                                _rule_to_secs 7FF2  
                                      _dbuf 0354                          __size_of_CRC_Start 0006  
                                      _cp_h F9B9                                        _cp_l F9B5  
                                      _atoi C5D6                                        _ctoa 145A  
                                      _main 0000                                        _dtoa 95FA  
                                      _nanf 1C5C                                        _lock 01E3  
                                      _seed 02F2                                        _prec 004C  
                                      _time 1D1E                                        _nout 00BA  
                                      _spin F92D                                        fsr0h 003FEA  
                                      fsr1h 003FE2                                        indf0 003FEF  
                                      fsr2h 003FDA                                        fsr0l 003FE9  
                                      indf1 003FE7                                        indf2 003FDF  
                                      fsr1l 003FE1                                        fsr2l 003FD9  
                                      _stoa BB98                                        btemp 002A  
                                      _utoa ACBE                                        _xtoa 9ED4  
                    __end_of_check_adc_scan 2E62                               ___fpclassifyf E09A  
                                      prodh 003FF4                                        prodl 003FF3  
                                      start 00AE                             _timer5ReloadVal 00C4  
                 __end_of_SPI1_Exchange8bit 2C3A                   __size_of_clear_hid_pflags 0066  
                           _TMR3_Initialize 2146                 __size_of_set_load_relay_one 0010  
               __size_of_set_load_relay_two 0010                               __CFG_CSWEN$ON 000000  
                            _SPI1STATUSbits 003D17                           _UART1_rx_vect_isr 2A04  
                              ___param_bank 000000                        display_history@bwait 0053  
                    __end_of_check_day_time A602                          ?_UART1_rx_vect_isr 0001  
                 __size_of_DATAEE_WriteByte 0068                            _update_hist_data 1850  
                          __end_of_INT0_ISR 2E12                            __end_of_INT1_ISR 2466  
            __size_of_OSCILLATOR_Initialize 0016                    __end_of_ringBufS_put_dma 0F06  
             __end_of_OSCILLATOR_Initialize 2D52                                       l10011 7E02  
                                     l10021 7E5C                                       l10013 7E28  
                                     l10031 7EAC                                       l10035 7EB8  
                                     l10061 7F44                                       l10045 7EE0  
                                     l10029 7E9A                                       l10213 15D0  
                                     l10071 7F70                                       l10049 7EE6  
                                     l10401 875A                                       l10241 A83E  
                                     l10083 7FC8                                       l10075 7F88  
                                     l10411 87E2                                       l10403 878A  
                                     l10171 2204                                       l10251 A944  
                                     l10243 A88E                                       l10227 A720  
                                     l10077 7F98                                       l10501 8AEA  
                                     l10421 8838                                       l10511 8B5E  
                                     l10423 8868                                       l10247 A8D6  
                                     l10417 8822                                       l12113 D848  
                                     l12105 D7DC                                       l10185 E1C4  
                                     l10531 8C02                                       l10523 8BCA  
                                     l10443 88FA                                       l10435 88E0  
                                     l12115 D856                                       l10195 E21E  
                                     l10517 8B9A                                       l10461 89C0  
                                     l10453 898A                                       l10429 88A6  
                                     l12125 D8B8                                       l12117 D86C  
                                     l10189 E1C8                                       l10269 154C  
                                     l13005 16A4                                       l10463 89D2  
                                     l10471 8A2A                                       l10391 8704  
                                     l12127 D8D6                                       l12119 D88A  
                                     l12071 EB72                                       l10641 763C  
                                     l10553 70A2                                       l10529 8BF2  
                                     l12137 D90A                                       l12129 D8EC  
                                     l12401 9446                                       l10635 7620  
                                     l10571 7170                                       l10555 70A8  
                                     l10547 7062                                       l10811 ED74  
                                     l10483 8A74                                       l12147 D96C  
                                     l10645 7662                                       l10573 7176  
                                     l10565 7130                                       l10557 70D8  
                                     l10805 ECE4                                       l10477 8A58  
                                     l10469 8A26                                       l10397 8744  
                                     l10655 76AC                                       l10583 71C8  
                                     l10575 71A6                                       l10823 EDF8  
                                     l10815 EDC2                                       l10487 8A9A  
                                     l12415 95C2                                       l12423 95D4  
                                     l10831 208C                                       l12511 10C0  
                                     l12503 105C                                       l12087 EC26  
                                     l12079 EBBA                                       l10673 776C  
                                     l10497 8AE4                                       l12409 9526  
                                     l12441 286A                                       l11553 C6B2  
                                     l11537 C5F0                                       l10841 EA1C  
                                     l10913 F6EE                                       l10905 F642  
                                     l12353 076A                                       l12361 07BC  
                                     l14043 2BD6                                       l10659 76B2  
                                     l11563 C794                                       l11555 C6CA  
                                     l11547 C686                                       l11539 C612  
                                     l10763 FC20                                       l10755 FBF6  
                                     l13421 2026                                       l10669 7726  
                                     l11573 C830                                       l11557 C6EE  
                                     l10781 FCD4                                       l10773 FCA0  
                                     l12357 07A8                                       PRLOCK 0039EF  
                                     l14055 27EE                                       l10687 77DA  
                                     l10679 7796                                       l12375 9170  
                                     l11559 C72C                                       l10759 FC08  
                                     l11591 D238                                       l13503 038A  
                                     l13425 2058                                       l14081 23C8  
                                     l10689 77F4                                       l12385 9296  
                                     l12369 9140                                       l10929 1F22  
                                     l10793 086C                                       l10865 EACA  
                                     l10857 EA9E                                       l10881 E726  
                                     l14321 B8EC                                       l10867 EAE0  
                                     l10859 EABA                                       l14323 B8F2  
                                     l14235 DBB8                                       l13621 DDB2  
                                     l12397 93AA                                       l12389 9378  
                                     l10797 08A0                                       l10789 082A  
                                     l16013 1BCC                                       l11589 D1CC  
                                     l10893 E7F8                                       l14333 B92E  
                                     l16023 1C8E                                       l14319 B8DC  
                                     l14263 DD24                                       l14247 DC6E  
                                     l14255 DD20                                       l12833 A59E  
                                     l13617 DD9E                                       l13609 DD72  
                                     l14601 9EC6                                       l16033 1E3A  
                                     l16017 1C04                                       l13633 11AC  
                                     l14345 B980                                       l14329 B922  
                                     l14249 DCA2                                       l13801 1738  
                                     l14099 2408                                       l12819 A498  
                                     l16107 23B6                                       l16211 BCF4  
                                     l14339 B958                                       l14275 1EBA  
                                     l16133 24EA                                       l16221 BDAE  
                                     l13645 11E2                                       l14365 BA00  
                                     l14357 B9DA                                       l14349 B98C  
                                     l13813 FB82                                       l13719 250E  
                                     l16135 2504                                       l16119 244E  
                                     l16071 2146                                       l16055 2026  
                                     l16047 1F5C                                       l16215 BD24  
                                     l16207 BCB8                                       l16303 9FDE  
                                     l17015 0DDC                                       l14551 0AE6  
                                     l13591 F276                                       l13841 F4EE  
                                     l15521 10F8                                       l16145 25A6  
                                     l16057 2048                                       l16225 BDDA  
                                     l17017 0E1E                                       l13657 1F94  
                                     l13497 02D8                                       l12881 E978  
                                     l17201 35B0                                       l17121 2AC2  
                                     l16401 C196                                       l13809 FB20  
                                     l14289 1892                                       l13843 F4F4  
                                     l14299 E6B2                                       l16171 26AE  
                                     l16155 25F6                                       l16083 21CE  
                                     l16091 2238                                       l16251 AD4E  
                                     l16243 ACF2                                       l14555 0B24  
                                     l13667 08D8                                       l12947 2784  
                                     l13595 F2EC                                       l15611 05DE  
                                     l16403 C1BC                                       l17051 69B2  
                                     l14387 BB5A                                       l18011 0592  
                                     l13861 F574                                       l13845 F502  
                                     l13853 F50A                                       l15509 F8B0  
                                     l15525 1136                                       l15701 CE66  
                                     l15605 068E                                       l16229 BE16  
                                     l16261 AF44                                       l12893 256E  
                                     l12877 E94E                                       l15621 F0DC  
                                     l17141 2E86                                       l17109 2816  
                                     l15533 FFA0                                       l17053 69D2  
                                     l13765 24C2                                       l14389 BB84  
                                     l12799 A3A2                                       l13855 F53C  
                                     l13839 F4DE                                       l16191 BC04  
                                     l16343 A244                                       l16319 A0D4  
                                     l16327 A15A                                       l13679 090E  
                                     l17135 2DFE                                       l17127 2BFE  
                                     l16431 B0E6                                       l16511 6302  
                                     l17063 6CB8                                       l17047 689C  
                                     l18103 0AE0                                       l18023 066C  
                                     l12985 1F5E                                       l15641 C3B8  
                                     l15721 F39C                                       l15553 B392  
                                     l17233 1216                                       l16361 E296  
                                     l15625 F182                                       l15529 FF1A  
                                     l16521 6378                                       l16513 630C  
                                     l16505 62D0                                       l17073 6D98  
                                     l17049 68BC                                       l18041 07FC  
                                     l15803 1478                                       l16099 22A4  
                                     l16283 9F08                                       l16603 390C  
                                     l17235 121E                                       l16355 E26A  
                                     l16443 B20C                                       l16427 B04C  
                                     l16419 C328                                       l16531 63F0  
                                     l17091 6F18                                       l18131 119E  
                                     l18115 0BE0                                       l13869 F5EE  
                                     l15805 14A4                                       l15653 C452  
                                     l15733 F3D2                                       l15901 1604  
                                     l16605 3946                                       l15573 B568  
                                     l15565 B4BA                                       l17237 1228  
                                     l17245 123C                                       l17181 3398  
                                     l17157 302E                                       l17149 2F5A  
                                     l16437 B168                                       l16533 63F8  
                                     l16525 63A6                                       l13981 0AB4  
                                     l13789 1720                                       l18141 1320  
                                     l18061 0872                                       l14783 1632  
                                     l15591 FD54                                       l15647 C40C  
                                     l15727 F3B2                                       l16295 9F7E  
                                     l16711 41C0                                       l16607 395C  
                                     l15559 B450                                       l17239 1236  
                                     l17247 1268                                       l16367 E2C6  
                                     l17167 30CC                                       l16439 B172  
                                     l16447 B298                                       l16463 1B5A  
                                     l17087 6EFA                                       l17415 F814  
                                     l18127 113C                                       l18143 134C  
                                     l18047 0810                                       l14777 1622  
                                     l17441 5534                                       l17433 5474  
                                     l15585 FD1A                                       l15665 C524  
                                     l15841 9730                                       l15921 172A  
                                     l16289 9F42                                       l16721 426E  
                                     l16625 3A8E                                       l17601 4906  
                                     l17193 34B6                                       l17185 33F8  
                                     l17177 318C                                       l17169 30D2  
                                     l16545 64B8                                       l16481 5F12  
                                     l17409 F7AE                                       l13977 0A38  
                                     l18209 1500                                       l18049 083E  
                                     l15595 FD90                                       l15851 9942  
                                     l15755 F4AC                                       l15747 F478  
                                     l15923 1740                                       l16731 4390  
                                     l16627 3AC8                                       l16379 E348  
                                     l15771 CFBE                                       l16539 6424  
                                     l17099 6FE6                                       l18067 0898  
                                     l18171 13FE                                       l17453 56A2  
                                     l17445 55A0                                       l17437 54C8  
                                     l15589 FD42                                       l15693 CDBA  
                                     l15685 CD32                                       l15837 9712  
                                     l15829 96C8                                       l15909 165A  
                                     l16741 4446                                       l16645 3C42  
                                     l16629 3ADE                                       l17269 FA74  
                                     l16485 5F3C                                       l18181 143C  
                                     l18157 13A6                                       l17463 58CE  
                                     l15599 FDDA                                       l15871 99F4  
                                     l15919 16FE                                       l15927 176C  
                                     l16663 3DC6                                       l16655 3CDA  
                                     l15767 CF7E                                       l16399 C17E  
                                     l16559 045C                                       l16495 6078  
                                     l17279 CAFE                                       l17481 5AD8  
                                     l17473 5A0E                                       l17457 56F6  
                                     l15953 18AA                                       l15937 1810  
                                     l15945 183E                                       l17641 4C36  
                                     l15785 D0FC                                       l16825 C062  
                                     l16817 BFD0                                       l16489 6042  
                                     l18097 0ABE                                       l17467 5948  
                                     l15875 9A30                                       l15963 19E6  
                                     l16755 45C2                                       l16691 4060  
                                     l16667 3E1A                                       l17299 EF8A  
                                     l16819 BFF4                                       l18195 1484  
                                     l18187 144E                                       l17493 5DDC  
                                     l17477 5AB6                                       l15981 1AA2  
                                     l15957 191A                                       l17717 52D6  
                                     l17645 4C44                                       l15789 D120  
                                     l16845 2490                                       l17741 D46C  
                                     l17725 D378                                       l18189 1466  
                                     l15975 1A68                                       l15959 1984  
                                     l16775 4754                                       l16687 402C  
                                     l16679 3F74                                       l17663 4CF0  
                                     l17639 4B8E                                       l17751 D544  
                                     l18199 14AA                                       l15889 15C0  
                                     l16769 46FA                                       l16785 4778  
                                     l17825 D602                                       l17593 48A4  
                                     l16961 8200                                       l15995 1B0A  
                                     l15987 1AA8                                       l15979 1A90  
                                     l16779 4758                                       l17659 4CDC  
                                     l15997 1B16                                       l17589 488E  
                                     l17839 D72A                                       l17679 4DF2  
                                     l16959 81AC                                       l17769 1846  
                                     l16977 8564                                       l17793 B8AC  
                                     l16995 0F5E                                       l17963 0302  
                                     l17957 02C0                                       l17893 0066  
                                     l17799 B8B0                                       l17895 0078  
                                     l17887 0040                                       l17889 0048  
                           __end_of___aldiv E3C4                             __end_of___aodiv C5D6  
                              _Volts_to_SOC 0A26                                       _ADCAP 003EF5  
                                     _ADACT 003EFE                             __end_of___almod ECA2  
                           __end_of___fladd 7FF2                                       _ADCLK 003EFF  
                           __end_of___aomod CF14                                       _ADPCH 003EF1  
                           __end_of___fldiv 8C28                                       _ADREF 003EFD  
                           __end_of___awdiv F4C6                             __end_of___flneg 20B6  
                                     STR_10 FEBA                                       STR_11 FF23  
                                     STR_20 FE7B                                       STR_12 FD6A  
                                     STR_21 FBA1                                       STR_13 FAE8  
                                     STR_30 FF86                                       STR_14 FBB7  
                                     STR_22 FAB4                                       STR_15 FC93  
                                     STR_31 FC7D                                       STR_23 FACE  
                                     STR_24 FF66                                       STR_32 FC67  
                                     STR_40 FBCD                                       STR_16 FB8B  
                                     STR_25 FF38                                       STR_17 FDA9  
                                     STR_33 FC51                                       STR_41 FBE3  
                             __CFG_WDTE$OFF 000000                                       STR_50 FCEB  
                                     STR_18 FDBE                                       STR_26 FD94  
                                     STR_34 FC3B                                       STR_42 FBF9  
                                     STR_51 FCEB                                       STR_19 FEE4  
                                     STR_27 FE90                                       STR_35 FC25  
                                     STR_43 FB19                                       STR_28 FF97  
                                     STR_52 FE66                                       STR_60 FD55  
                                     STR_36 FC0F                                       STR_44 FB5E  
                           __end_of___awmod FCEE                                       STR_61 FE27  
                                     STR_53 FDE8                                       STR_37 FCD5  
                                     STR_45 FA61                                       STR_70 FD2B  
                                     STR_62 FE66                                       STR_54 FDD3  
                                     STR_38 FCA9                                       STR_46 FB02  
                                     STR_63 FD55                                       STR_71 FF0E  
                                     STR_55 FF4D                                       STR_39 FCBF  
                                     STR_47 FB30                                       STR_80 FA7E  
                                     STR_72 FE66                                       STR_64 FEF9  
                                     STR_56 FEA5                                       STR_48 FB47  
                                     _ADRPT 003EEC                                       STR_81 FF66  
                                     STR_65 FE66                                       STR_73 FD40  
                                     STR_57 FD2B                                       STR_49 FCEB  
                                     STR_90 FFA7                                       STR_82 FFFC  
                                     STR_58 FF0E                                       STR_66 FE3C  
                                     STR_74 FE12                                       STR_67 FDD3  
                                     STR_75 FE66                                       STR_59 FE66  
                                     STR_91 FFA7                                       STR_83 FFB6  
                                     STR_76 FD55                                       STR_92 FFA7  
                                     STR_84 FFCC                                       STR_68 FF74  
                           __end_of___lbmod 10E8                                       STR_69 FEA5  
                                     STR_85 FF61                                       STR_77 FECF  
                                     STR_93 FA9A                                       STR_86 FF61  
                                     STR_94 FD01                                       STR_78 FA7E  
                                     STR_79 FA7E                                       STR_87 FFC2  
                                     STR_95 FD16                                       STR_88 FFC2  
                           __end_of___flmul 7836                                       STR_89 FFA7  
                           __end_of___flsub 2260                             __end_of___fltol EB3C  
                                     u11300 EBB4                                       u11310 EBD6  
                                     u10520 D266                                       u10450 C682  
                                     u12130 1A0A                                       u11330 EC4E  
                           __end_of___lodiv E858                                       u11420 D900  
                                     u10470 C7DA                                       u11350 EC78  
                                     u11270 EB6C                                       u10527 D258  
                                     u10480 C7DC                                       u10560 D300  
                                     u10570 D32E                                       u12410 16A0  
                                     u11610 075C                                       u12138 1A0C  
                                     u11290 EB9A                                       _U1P1H 003DED  
                                     u12155 1A5A                                       u12156 1A5C  
                                     _U1P2H 003DEF                                       u10565 D2FA  
                                     _U1P1L 003DEC                                       _U1P3H 003DF1  
                                     u10567 D2EC                                       u11615 0756  
                                     _T3CLK 003FA9                                       u11704 9392  
                                     u15000 96FE                                       u12344 E8FA  
                                     u12360 2DB6                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u12505 1B0E  
                                     u11705 938C                                       u10577 D320  
                                     u12345 E8F4                                       u12506 1B10  
                                     u15010 9956                                       u10930 2B5A  
                                     _U1P3L 003DF0                                       u11724 9460  
                                     u11644 915A                                       u12700 11DC  
                                     u11725 945A                                       u11645 9154  
                                     u15021 9986                                       u13501 1886  
                                     u11750 948A                                       u15030 999C  
                                     u15110 15EE                                       u13430 DD20  
                                     _U2P1L 003DD4                                       u12295 22D4  
                                     u15031 999A                                       u13511 18A8  
                                     u12480 1ADA                                       u11744 9482  
                                     u11664 918A                                       u15040 99B0  
                                     u16000 E292                                       _T3CON 003FA6  
                                     _U2P2L 003DD6                                       u11745 947C  
                                     u11665 9184                                       u13441 1E94  
                                     u12650 DD50                                       u14330 F8A4  
                                     u15050 99B4                                       u12730 08D4  
                                     u16010 E2C0                                       _U2P3L 003DD8  
                                     u12555 2DA4                                       u11684 91AC  
                                     u15140 16A8                                       u14420 B5DC  
                                     u12724 1FC2                                       u16020 E2E2  
                                     u12556 2DA6                                       u11685 91A6  
                                     u12725 1FBE                                       u12565 2D94  
                                     u14350 F920                                       u15070 99CA  
                                     u15230 1A22                                       u15150 16AA  
                                     u12750 0908                                       u12566 2D96  
                                     u14511 F0D4                                       _T5CLK 003F9D  
                                     u14600 C44C                                       u15400 1F2C  
                                     u12680 11A8                                       u16040 E370  
                                     u16120 B150                             __end_of___lomod F748  
                                     u12498 1ADC                                       u14610 C47E  
                                     u15330 1B5C                                       u17010 30CC  
                                     u14370 FFE4                                       u14531 F1F6  
                                     u14700 CD82                                       u15500 23F8  
                                     u15260 1A76                                       u15180 17BA  
                                     u16060 E39A                                       u16140 B298  
                                     u17100 CAF4                                       _T2HLT 003FAD  
                                     u12870 2BA4                                       u14630 C55C  
                                     u14710 CDB4                                       u14470 0708  
                                     u15190 17BC                                       u16070 C150  
                                     u16310 043E                                       u14560 C3B2  
                                     u14720 CDE6                                       u16400 3B26  
                                     u16240 6328                                       _T5CON 003F9A  
                                     u14650 C5AE                                       u14810 F3FE  
                                     u15290 1ADA                                       u16410 3B28  
                                     u17050 3480                                       u17210 F856  
                                     u17035 31AE                                       u16171 5E72  
                                     u12876 2BA6                                       u14580 C408  
                                     u14740 CE9E                                       u15700 BE3C  
                                     u16420 3B4E                                       u17060 352E  
                                     u16260 63C2                                       u16164 1B78  
                                     u14477 06FA                                       u17061 352A  
                                     u16165 1B72                                       u14830 F498  
                                     u16350 39A4                                       u17150 F78A  
                                     u14591 C412                                       u14760 CEF0  
                                     u14680 CD2C                                       u15560 25CC  
                                     u15720 ACD8                                       u15800 9EEE  
                                     u16520 411A                                       u16360 39A6  
                                     u16280 6496                                       _T6CON 003F94  
                                     u14930 962A                                       u16610 464A  
                                     u16530 411C                                       u16370 39CC  
                                     u16290 6498                                       u17090 CABE  
                                     u14940 962C                                       u15580 2682  
                                     u15660 BD1A                                       u15900 A156  
                                     u17420 4A4C                                       u17228 F858  
                                     u17180 F7F0                                       u15590 2684  
                                     u15670 BD60                                       u15910 A176  
                                     u15830 9FD6                                       u16470 3D2E  
                                     u17430 4A76                              __CFG_DEBUG$OFF 000000  
                                     u15751 AF86                                       u14960 969C  
                                     u15760 AF9C                                       u15840 A02A  
                                     u16720 8186                                       u17168 F78C  
                                     u15761 AF9A                                       u15921 A1A6  
                                     u15905 A138                                       u17425 4A3E  
                                     u15770 AFB0                                       u15930 A1BC  
                                     u15850 A02C                                       u16490 3EA2  
                                     u16730 8198                                       u15931 A1BA  
                                     u17435 4A68                                       u14980 96AE  
                                     u15780 AFB4                                       u15940 A1D0  
                                     u16660 BFA6                                       u15677 BD52  
                                     u15950 A1D4                                       u15870 A08A  
                                     u16590 449A                                       u16910 27B2  
                                     u17198 F7F2                                       u17710 041C  
                                     u15880 A08C                                       u17640 D77A  
                                     u17480 4F38                                       u16920 2802  
                                     u17650 D77C                                       u17490 4F62  
                                     u17730 069A                                       u16780 0F3E  
                                     u15980 E264                                       u17900 13C2  
                                     u17740 07C4                                       _T6HLT 003F95  
                                     u17485 4F2A                                       u17750 07C6  
                                     u17495 4F54                                       u16880 6E2C  
                _ADCC_ADTI_InterruptHandler 00A1                                       u17906 13C4  
                                     u17880 1396                                       u17890 13B0  
                                     _T2TMR 003FAA                                       u17886 1398  
                                     u17896 13B2                                       _U1UIR 003DF8  
                                     _T2RST 003FAF                                       _U1RXB 003DE8  
                                     _U2UIR 003DE0                                       _U2RXB 003DD0  
                                     _U2TXB 003DD2                                       _T6TMR 003F92  
                                     _T6RST 003F97                         ??_UART1_rx_vect_isr 0006  
                                     _ISRPR 0039F1                                       _OSCEN 0039DD  
                                     _TMR3H 003FA5                                       _TMR5H 003F99  
                                     _TMR3L 003FA4                                       _TMR5L 003F98  
                 __end_of_update_adc_result 24DC                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                                     _TRISD 003FC5                                       _TRISE 003FC6  
                                     _TRISF 003FC7                                 _Default_ISR 2EA0  
                       __size_of_CRC_IsBusy 0010                     __size_of_clear_adc_scan 0006  
                        _current_sensor_cal 47D6           __size_of_TMR3_SetInterruptHandler 0028  
                              ___secs_to_tm 2758           __size_of_TMR6_SetInterruptHandler 0028  
                           __end_of_asctime 913E                               __CFG_WRTB$OFF 000000  
                          __end_of_TMR3_ISR EF66                               __CFG_WRTC$OFF 000000  
                          _cal_current_zero 1180                                       ___gmt F9AD  
                             __CFG_WRTD$OFF 000000                            __end_of_TMR5_ISR E09A  
                           __end_of_getname B2FA                                _DMA1CON0bits 003BFC  
                          __end_of_TMR6_ISR 2CCA                                _DMA1CON1bits 003BFD  
                __size_of_send_lcd_data_dma 0046                             _DATAEE_ReadByte 2652  
                                     _fabsf 0D02                             __end_of_getrule C356  
                      __end_of_clear_switch 1FD2                                       _flags 004E  
                      __size_of_check_range 0080                   __size_of_CRC_ReverseValue 00CE  
                                     _r_cal 0500                    __size_of_calc_model_data 045A  
                              _DMA2CON0bits 003BDC                                _DMA2CON1bits 003BDD  
              __end_of_get_ac_charger_relay 2E04                                       _fputc F880  
                __size_of_send_lcd_cmd_long 0040                             __end_of_isalpha 22A4  
                                     _fputs 10E8                             __end_of_isdigit 2744  
                           __end_of_ivln2_h F9B5                                       _put2d F9A4  
                        __CFG_MCLRE$EXTMCLR 000000                                       _srand 2582  
                                     _width 004A                                       _putch 2C94  
              __end_of_set_ac_charger_relay 2DDA                             __end_of_islower 26E4  
                           __end_of_isspace 1F32                    _INT1_SetInterruptHandler 2962  
                           __end_of_set_dac 0C4E                             __end_of_isupper 2714  
                                     pclath 003FFA                                       tablat 003FF5  
                                     ltemp0 002A                                       ltemp1 002E  
                                     ltemp2 0032                    __size_of_DMA1_Initialize 006A  
                                     plusw0 003FEB                                       plusw1 003FE3  
                                     plusw2 003FDB                                       ttemp0 002A  
                                     ttemp1 002D                                       ttemp2 0030  
                                     ttemp3 0033                                       ttemp5 002B  
                                     ttemp6 002E                                       ttemp7 0032  
                                     status 003FD8         __end_of_UART1_SetRxInterruptHandler 28EA  
               _UART1_SetRxInterruptHandler 28C2                                       wtemp0 002A  
                                     wtemp1 002C                                       wtemp2 002E  
                                     wtemp3 0030                                       wtemp4 0032  
                                     wtemp5 0034                                       wtemp8 002B  
                           __end_of_sprintf FF0C                             __end_of_tolower 15EA  
                           __end_of_strncmp D364                             __end_of_toupper 1566  
                 __size_of_DMA1_DMADCNT_ISR 000A                   __end_of_UART1_rx_vect_isr 2A2C  
                  __size_of_SPI1_Initialize 0016                     __end_of_update_cal_data 1EE0  
                           _TMR5_Initialize 20FE                       __end_of_ringBufS_init 284A  
                           __initialization 00B6                           _UART2_rx_vect_isr 2A54  
                             ___localtime_r CA90                                __end_of_cp_h F9BD  
                              __end_of_cp_l F9B9                                __end_of_atoi C84A  
                              __end_of_ctoa 14E2                                __end_of_main 1514  
                              __end_of_dtoa 9A7A                                __end_of_nanf 1CBE  
                              __end_of_time 1D7C                                __end_of_spin F9A5  
                              __end_of_stoa BE56                                __end_of_utoa AFFE  
                              __end_of_xtoa A28E                              __CFG_SAFEN$OFF 000000  
                        ?_UART2_rx_vect_isr 0001                     __end_of_TMR2_Initialize 2CFA  
                  __size_of_cal_current_10A 00BE                       __end_of_send_lcd_data 2AA0  
                  __size_of_DMA2_Initialize 005A                  __end_of_check_enter_button 1850  
                         __end_of_CRC_Start 2E88                    _TMR5_SetInterruptHandler 2912  
                             __activetblptr 000003                   __size_of_DMA1_DMASCNT_ISR 000E  
                     _TMR3_InterruptHandler 0098                           _port_data_dma_ptr 2E2C  
                        esr_check@esr_state 00C6                         ??_UART2_rx_vect_isr 0006  
                                    INTCON0 003FD2        __size_of_UART2_SetRxInterruptHandler 0028  
                            __CFG_MVECEN$ON 000000                             _TMR6_Initialize 27F8  
                           _PWM8_Initialize 2D26                            _UART1_Initialize 20B6  
                         _UART2_tx_vect_isr 2A2C                          _UART2_Transmit_ISR 27CC  
                                    _ADACCU 003EEA                                      _ADACQH 003EF4  
                                    _ADACQL 003EF3                                      _ADCON0 003EF8  
                                    _ADCON1 003EF9                                      _ADCON2 003EFA  
                                    _ADCON3 003EFB                              _start_adc_scan 1B96  
                                    _ADLTHH 003EDF                                      _ADLTHL 003EDE  
                                    STR_102 FA3B                                      STR_103 F9BD  
                                    STR_112 FFED                                      STR_104 FFDA  
                                    STR_121 FFF0                                      STR_105 FFE2  
                                    STR_114 FFED                                      STR_123 FFF0  
                                    STR_131 FFF9                                      STR_116 FFF3  
                                    STR_108 FFDE                                      STR_140 FB75  
                                    STR_133 FFF9                                      STR_109 FFE6  
                                    STR_141 FA3C                                      STR_118 FFF3  
                                    STR_126 FFF6                                      STR_135 FFEA  
                                    STR_128 FFF6                                      STR_137 FFEA  
                                    _ADPREH 003EF7                                      _ADPREL 003EF6  
                                    _DMA1PR 0039F3                                      _DMA2PR 0039F4  
                                    _ADSTAT 003EFC                                      _ADUTHH 003EE1  
                                    _ADUTHL 003EE0                          _PWM8_LoadDutyValue 22A4  
                                    _ANSELA 003A40                                      _ANSELB 003A50  
                                    _ANSELC 003A60                                      _ANSELD 003A70  
                                    _ANSELE 003A80                                      _ANSELF 003A90  
                        ?_UART2_tx_vect_isr 0001                                      _U1CON0 003DF2  
                                    _U1CON1 003DF3                                      _U1CON2 003DF4  
                                    _T3GATE 003FA8                                      _U1BRGH 003DF6  
                                    _U1FIFO 003DF7                                      _T3GCON 003FA7  
                                    _U2CON0 003DDA                                      _U2CON1 003DDB  
                                    _U1BRGL 003DF5                                      _U2CON2 003DDC  
                                    _U2BRGH 003DDE                                      _U2FIFO 003DDF  
                                    _U2BRGL 003DDD                                      _T5GATE 003F9C  
                                    _T5GCON 003F9B                                      _MAINPR 0039F2  
                                    _RC3PPS 003A13                                      _RD1PPS 003A19  
                                    i1l1021 DFEA                                      _RB6PPS 003A0E  
                                    i1l1209 EECE                        _start_switch_handler 2BDC  
                                    _RC5PPS 003A15                                      _ODCONA 003A42  
                                    _ODCONB 003A52                                      _ODCONC 003A62  
                                    _RC6PPS 003A16                                      _ODCOND 003A72  
                                    _ODCONE 003A82                                      _ODCONF 003A92  
                   __end_of_TMR3_Initialize 218E                              __CFG_WDTCCS$SC 000000  
                                    _FVRCON 003EC1                            _mode_lamp_bright 2DE8  
                                    _SCANPR 0039F7                                      _IVTADH 00389E  
                                    _IVTADL 00389D                                      _IVTADU 00389F  
              __size_of_eaDogM_WriteCommand 000E                                      _OSCFRQ 0039DF  
                                    _NVMDAT 0039E3                        __size_of_hid_display 021C  
                          __end_of___xxtofl D996       __end_of_ADCC_DischargeSampleCapacitor 2E6A  
    __size_of_ADCC_DischargeSampleCapacitor 0008               _ADCC_DischargeSampleCapacitor 2E62  
                  __end_of_send_lcd_cmd_dma 2C58                             _TMR3_WriteTimer 23E6  
                       ??_UART2_tx_vect_isr 0006                   __end_of_UART2_rx_vect_isr 2A7C  
                __size_of_SPI1_Exchange8bit 001E                      __size_of_DMA1_DMAA_ISR 000A  
                   __size_of___secs_to_zone 08A2                              __CFG_XINST$OFF 000000  
                         _CLKREF_Initialize 2E22                            _UART2_Initialize 1CBE  
                                    _WaitMs 254C                             _conv_raw_result 913E  
                              _CCPTMRS1bits 003F5F        __size_of_ADCC_SetADIInterruptHandler 0028  
                          __end_of_do_tzset C0D6                                      ___flge ECA2  
                                    ___fleq 07E8                                      ___lmul 0570  
                                    ___omul F0C6                           _ADCC_ThresholdISR 1994  
                            __CFG_STVREN$ON 000000                                      _crcObj 00E2  
                            _ringBufS_flush 12A4                                      _efgtoa 1514  
                                    _getoff CF14                                      _getint FF0C  
                                    _floorf A602                           dac_spi_control@S0 00CB  
                         dac_spi_control@S1 00CA                           dac_spi_control@S2 00C9  
                         dac_spi_control@SB 00C7                           dac_spi_control@SC 00C8  
                        ?_ADCC_ThresholdISR 0001                                      _memset B2FA  
                                    _pclock 00DA                        __size_of_help_button 0038  
                                    clear_0 0128                                      clear_1 013C  
                                    clear_2 014E                                      clear_3 015A  
                                    clear_4 0166                                      clear_5 0172  
                                    clear_6 017E                                      clear_7 018A  
                                    clear_8 0196                                      _t_mbmc 00BC  
                 __end_of_port_data_dma_ptr 2E36                      __size_of_read_cal_data 01CA  
                                    _printf 1BFA                          _eaDogM_WriteString 0F06  
                   __end_of_DATAEE_ReadByte 2684                                      _strcpy 0646  
                                 ?_ADCC_ISR 0001                                      _strlen 0FAC  
                        __size_of_TimerDone 0028                                __pdataBIGRAM 06FF  
                           _ADCC_Initialize 1928                              _PMD_Initialize 2D52  
                __size_of_update_adc_result 003A                   __end_of_UART2_tx_vect_isr 2A54  
                                    lltemp0 002A                                      lltemp1 0032  
                                    lltemp2 003A                                      lltemp3 0042  
                       ??_ADCC_ThresholdISR 0001                      __end_of_start_adc_scan 1BFA  
                              __mediumconst F770                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 1E30                            __end_of_spinners 039A  
                          __end_of_vfprintf 0E5C                                  _StartTimer 2366  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 2146  
                         _SYSTEM_Initialize 1FD2                                  ___daylight 00B8  
                                __accesstop 0060                     __end_of__initialization 01A8  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                      __end_of_display_help 2E7A                        __end_of_display_info 2E72  
                 __end_of_CLKREF_Initialize 2E2C                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 23A6  
                     _set_temp_display_help 2DBA                            _clear_hid_pflags 1A66  
                     __end_of_TMR3_CallBack 2B0C                   __end_of_ADCC_ThresholdISR 19FE  
                        __size_of_calc_bsoc 0A6E                      __end_of_ringBufS_flush 1336  
                            __pcstackCOMRAM 0001                                  ___inthi_sp 1336  
                                ___intlo_sp 199B                                __pidataBANK1 0C4E  
                              __pidataBANK2 096A                               __end_of___gmt F9B1  
               __size_of_send_port_data_dma 0052                               __end_of_fabsf 0DB0  
                                 ?_TMR3_ISR 0001                                   ?_TMR5_ISR 0001  
                                 ?_TMR6_ISR 0001                            _DATAEE_WriteByte 19FE  
                            ivt0x8_undefint 00AC                               __end_of_fputc F9A4  
                             __end_of_fputs 1180                        _get_ac_charger_relay 2DF6  
                             __end_of_put2d FABE                               __end_of_srand 25B6  
                     __end_of_TMR5_CallBack 2AE8                               __end_of_putch 2CAE  
                      _set_ac_charger_relay 2DCA                     __end_of_PWM8_Initialize 2D3C  
                   __end_of_TMR6_Initialize 2822                           _adc_int_t_handler 15EA  
                    __end_of_PMD_Initialize 2D66                                  __end_of_bp F9AD  
                                ___timezone 0070                                  ??_ADCC_ISR 0001  
                     __end_of_TMR6_CallBack 2B54                       __size_of_clear_switch 004E  
               __size_of_EXT_INT_Initialize 0034                    calc_bsoc@log_update_wait 0050  
                    __size_of_calc_ror_data 0186                               _DMA1_DMAA_ISR 2E44  
                     TMR3_ISR@CountCallBack 00BE                              _clear_adc_scan 2E88  
                        __size_of_hid_input 0138                          __end_of_CRC_IsBusy 2DBA  
                    __size_of_mode_lamp_dim 0018                            time@current_time 00D2  
                          _CRC_ReverseValue 071A                    _UART2_RxInterruptHandler 00AD  
                 __end_of_SYSTEM_Initialize 2020                             __CFG_PR1WAY$OFF 000000  
                           __CFG_IVT1WAY$ON 000000                     __end_of_TMR3_WriteTimer 2426  
                                __pbssBANK0 0060                                  __pbssBANK1 01B4  
                                __pbssBANK2 02BC                                  __pbssBANK3 0300  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                    __end_of_update_hist_data 18BE  
                                _check_help D580                               _read_cal_data DB70  
                   __end_of_conv_raw_result 95FA                          __size_of_esr_check 02D8  
                     _INT0_InterruptHandler 00B3                                  ??_INT0_ISR 0001  
                                ??_INT1_ISR 0007                       __end_of_days_in_month 1B96  
                         __end_of_TimerDone 2872                            _DMA1_DMADCNT_ISR 2E38  
                           _convert_dac_raw FABE                          __size_of_init_bsoc 0246  
                __size_of_UART2_rx_vect_isr 0028                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                        __size_of_lp_filter 01BC                          __size_of_localtime 0016  
                             _init_port_dma 2684                       __end_of_wait_lcd_done 2B76  
                  __end_of_cal_current_zero 1212            __end_of_TMR3_SetInterruptHandler 2962  
                              _clear_switch 1F84                             __CFG_PPS1WAY$ON 000000  
          __end_of_TMR6_SetInterruptHandler 2912                                  ??_TMR3_ISR 00E5  
                   __end_of_ADCC_Initialize 1992                                  ??_TMR5_ISR 000B  
                 __end_of_adc_int_t_handler 166C                                  ??_TMR6_ISR 0006  
                         __end_of___asfladd 17DE                                     _ADFLTRH 003EE7  
                                   _ADFLTRL 003EE6                                     _DMA1DSA 003BF0  
                                   _DMA2DSA 003BD0                                     _DMA1DSZ 003BEE  
                                   _DMA2DSZ 003BCE                                     _DMA1SSA 003BF9  
                                   _DMA2SSA 003BD9                          __size_of_set_dac_a 0034  
                        __size_of_set_dac_b 0034        __end_of_ADCC_SetADTIInterruptHandler 29DA  
     __size_of_ADCC_SetADTIInterruptHandler 0028                _ADCC_SetADTIInterruptHandler 29B2  
                                   _DMA1SSZ 003BF7                                     _DMA2SSZ 003BD7  
                __size_of_port_data_dma_ptr 000A                                     _ADSTPTH 003EE5  
                                   _ADSTPTL 003EE4                                     _CRCACCH 003963  
                                   _CRCACCL 003962                     __size_of_load_hist_data 01DA  
                                   _CRCDATH 003961                                     _CRCDATL 003960  
                         _UART1_Receive_ISR 2BBA                                     _CRCCON0 003968  
                                   _CRCCON1 003969                                     _CLKRCLK 003CE6  
                                   _CLKRCON 003CE5                      __end_of_clear_adc_scan 2E8E  
                                   _CRCXORH 003967                                     _CRCXORL 003966  
                                   u1220_20 A3C4                              ?_DMA1_DMAA_ISR 0001  
                          _DMA1_DMASCNT_ISR 2E14                                     _U1ERRIE 003DFA  
                        __size_of_set_vterm 001E                                     u1243_20 2E00  
                                   u1330_48 2B40                                     u1322_48 2B1C  
                                   _U1ERRIR 003DF9                                     u1180_25 2DD4  
                                   u1180_26 2DD6                                     u1324_28 2AB0  
                                   _U2ERRIE 003DE2                                     u1254_20 251C  
                                   u1333_28 2AD4                                     u1254_26 251E  
                                   _U2ERRIR 003DE1                                     u1290_20 F4FE  
                                   u1290_21 F4F8                                     u1294_24 F5E4  
                                   u1294_25 F5E0                                     u1288_28 F4E4  
                         _CRC_8BitDataWrite 2D66                                     u1731_20 59FE  
                                   _INT0PPS 003AC0                                     u1733_20 5AC8  
                       __CFG_PWRTS$PWRT_OFF 000000                                     _INT1PPS 003AC1  
                                   u1389_44 1652                                     u1389_45 164C  
                              ?_Default_ISR 0001                                     u1738_28 2AF8  
                __size_of_UART2_tx_vect_isr 0028                                     _U1RXPPS 003AE5  
                                   _U2RXPPS 003AE8                             _dac_spi_control 16EC  
                                   _OSCCON1 0039D9                                     _OSCCON3 0039DB  
                                   _IVTLOCK 003FD4                          __size_of_vfpfcnvrt 0FAC  
                                   _SPI1CLK 003D1C                                     _SPI1RXB 003D10  
                                   _NVMADRH 0039E1                                     _NVMADRL 0039E0  
                         __end_of_calc_bsoc 5DF8                                     _SPI1TXB 003D11  
                                   _OSCTUNE 0039DE                                     _NVMCON2 0039E6  
                                   _PWM8DCH 003F61                                     _PWM8DCL 003F60  
                                   _PWM8CON 003F62                                     _SLRCONA 003A43  
                                   _SLRCONB 003A53                                     _SLRCONC 003A63  
                                   _SLRCOND 003A73                                     _SLRCONE 003A83  
                                   _SLRCONF 003A93                          __size_of_zi_read32 00F6  
                                _get_switch 2772                          __size_of_start_lcd 0006  
                   __size_of___year_to_secs 0972                     __end_of_TMR5_WriteTimer 23E6  
                   __size_of_switch_handler 0142                          __size_of_stop_bsoc 0006  
                __end_of_set_load_relay_one 2DAA                  __end_of_set_load_relay_two 2D9A  
         __size_of_INT0_SetInterruptHandler 0028                  __size_of_CLKREF_Initialize 000A  
                             _calc_ror_data E552                              ___secs_to_zone 676A  
                   __size_of_DMA1_DMAOR_ISR 000A                                     __Hparam 0000  
                __size_of_ADCC_ThresholdISR 006A                               _mode_lamp_dim 2CCA  
                                   __Lparam 0000                    __end_of_UART1_Initialize 20FE  
                         __end_of_hid_input F880                             __size_of_WaitMs 0036  
                                   ___aldiv E230                             __size_of___flge 0162  
                           __size_of___fleq 00C4                                     ___aodiv C356  
                                   ___almod EB3C                                     ___fladd 7836  
                                   ___aomod CCD4                                     ___fldiv 86AE  
                                   ___awdiv F378                                     ___flneg 206E  
                           __size_of___lmul 00D6                                     ___awmod FBD6  
                           __size_of___omul 015A                                     ___lbmod 104E  
                                   ___flmul 700C                                     ___flsub 221A  
                                   ___fltol E9CA                                     ___lodiv E6D8  
                                   ___lomod F608                   __end_of_UART1_Receive_ISR 2BDC  
                           __size_of_efgtoa 1244                             __size_of_getoff 0230  
                           __size_of_getint 00F2                             __size_of_floorf 036C  
                      __end_of_init_display 0570                                     __pcinit 00B6  
                  __end_of_mode_lamp_bright 2DF6                             __size_of_memset 02EC  
                  __size_of_adc_int_handler 0002                         _eaDogM_WriteCommand 2DDA  
                                   __ramtop 2000                   __end_of_CRC_8BitDataWrite 2D78  
                                   __ptext0 0000                                     __ptext1 1850  
                                   __ptext2 1E8A                                     __ptext3 1D7C  
                                   __ptext4 2BDC                                     __ptext5 2582  
                                   __ptext6 25B6                                     __ptext7 25EA  
                                   __ptext8 FABE                                     __ptext9 0B98  
                         __end_of_esr_check BB98                           _UART2_Receive_ISR 2BFC  
                                   _asctime 8C28                             __size_of_printf 0062  
                                   _getname AFFE                             __CFG_WRTAPP$OFF 000000  
                           __size_of_strcpy 00D4                             __size_of_strlen 00A2  
                                   _getrule C0D6                                     _dst_off 00B6  
                     _OSCILLATOR_Initialize 2D3C                                __size_of_abs 0046  
                              __size_of_pad 0114                           __end_of_init_bsoc CA90  
                                   _isalpha 2260                                     _isdigit 2714  
                                   _ivln2_h F9B1                                     us923999 E842  
                                 _T3CONbits 003FA6                                     us928999 F738  
                                   _mode_sw 00CC                           __end_of_lp_filter DEF6  
                         __end_of_localtime 2D10                                     _islower 26B4  
                                   _isspace 1EE0                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 2466                                   _T5CONbits 003F9A  
                                   _set_dac 0B98                    __end_of_UART2_Initialize 1D1E  
                                   _isupper 26E4                                   _CRC_Start 2E82  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf FE02                                     _tolower 1566  
                     __size_of_display_help 0008                                     _utctime 01E7  
                   __end_of_convert_dac_raw FBD6                       __size_of_display_info 0008  
                                   _strncmp D144                                     _toupper 14E2  
                      end_of_initialization 01A8                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 17DE  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 261E  
                         __end_of_set_dac_b 25EA                      __end_of___secs_to_zone 700C  
       __end_of_UART2_SetRxInterruptHandler 28C2                 _UART2_SetRxInterruptHandler 289A  
                                 i1u1766_20 EEC4                                   i2u1400_48 2A68  
                   check_day_time@day_delay 0051                           __end_of_set_vterm 2C76  
                                 i2u1392_48 27B8                                   i2u1394_48 19CA  
                                 i2u1394_49 19DE                                   i2u1396_48 2A18  
                                 i2u1398_48 2A40                           __end_of_vfpfcnvrt 47D6  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 02A4  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 2E9A                   __end_of_UART2_Receive_ISR 2C1C  
                            wdtdelay@dcount 0090                     __end_of_dac_spi_control 1766  
               __size_of_current_sensor_cal 0BB4                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00B0  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 2EA0  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 293A  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 28EA  
                              _display_help 2E72                       _TMR5_InterruptHandler 009B  
                              _display_info 2E6A        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 1ACC                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 2A02                 _ADCC_SetADIInterruptHandler 29DA  
                                asctime@buf 03C4                                  _update_lcd EF66  
                           _calc_model_data 9A7A                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 1D7C  
                  __end_of_DATAEE_WriteByte 1A66                             _DMA1_Initialize 18BE  
                       __end_of_check_range 16EC                                  _start_bsoc 2B98  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 2D10                       __end_of_get_vterm_ptr 2772  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 02DA                    __end_of_CRC_ReverseValue 07E8  
                            __end_of_WaitMs 2582                __end_of_INTERRUPT_Initialize 1B32  
                                _vterm_dump E3C4                              __end_of___flge EE04  
                            __end_of___fleq 08AC                             _cal_current_10A 08AC  
      __end_of_INT0_DefaultInterruptHandler 2EA8       __size_of_INT0_DefaultInterruptHandler 0002  
              _INT0_DefaultInterruptHandler 2EA6                  __size_of_UART1_Receive_ISR 0022  
                           _DMA2_Initialize 1E30                              __end_of___lmul 0646  
                            __end_of___omul F220                               __pidataBIGRAM A96E  
                            _load_hist_data D996                              __end_of_efgtoa 2758  
                __size_of_CRC_8BitDataWrite 0012                           __size_of_TMR3_ISR 0162  
                            __end_of_getoff D144                           __size_of_TMR5_ISR 01A2  
                            __end_of_getint FFFE                           __size_of_TMR6_ISR 001A  
                       __size_of_check_help 0212                              __end_of_floorf A96E  
               __size_of_UART2_Transmit_ISR 002C                                  floorf@F524 0074  
                            __end_of_memset B5E6  __end_of___month_to_secs@secs_through_month F871  
        ___month_to_secs@secs_through_month F841                              __end_of_printf 1C5C  
                  __end_of_DMA1_DMADCNT_ISR 2E42                 __size_of_PWM8_LoadDutyValue 0042  
                     __end_of_INT0_CallBack 2B30                              __end_of_strcpy 071A  
                            __end_of_strlen 104E                         start_initialization 00B6  
                   __size_of_write_cal_data 0158        __end_of_TMR5_DefaultInterruptHandler 254C  
     __size_of_TMR5_DefaultInterruptHandler 0038                _TMR5_DefaultInterruptHandler 2514  
           __size_of_PIN_MANAGER_Initialize 0092                                 __end_of_abs 221A  
                     __end_of_INT1_CallBack 2AC4                   __size_of_set_display_info 001E  
                               __end_of_pad FE02                        __size_of_Default_ISR 0006  
                   __size_of_CRC_Initialize 0092                              ___year_to_secs 5DF8  
                      __end_of_send_lcd_cmd 2366                              _switch_handler F4C6  
             __size_of_ADCC_StartConversion 0012                                  ivt0x8_base 0008  
                             _uart1RxBuffer 02D6                       __end_of___fpclassifyf E230  
                             _uart2RxBuffer 0600                    __end_of_DMA1_DMASCNT_ISR 2E22  
                             _uart2TxBuffer 0400                              _DMA1_DMAOR_ISR 2E50  
                       __end_of_hid_display D580                  __end_of_send_port_data_dma 1F84  
                          __CFG_LPBOREN$OFF 000000                       __size_of_init_display 00EA  
               __size_of_eaDogM_WriteString 00A6             __end_of_CRC_CalculatedResultGet E9CA  
                                 _TimerDone 284A                               _ringBufS_init 2822  
                    __end_of_load_hist_data DB70                                 __pdataBANK1 0100  
                               __pdataBANK2 0200                  __size_of_UART2_Receive_ISR 0020  
                       __size_of_get_switch 002C                  __end_of_EXT_INT_Initialize 2652  
                  __size_of_update_cal_data 0056                     __end_of_calc_model_data 9ED4  
                             _send_lcd_data 2A7C                         __end_of_help_button 2514  
           __end_of_eaDogM_WriteStringAtPos 12A4                         __end_of_BVSOC_TABLE F841  
                                 ___asfladd 1766                        calc_model_data@bcror 0088  
                               __pbssBIGRAM 0A4F                     __end_of_DMA1_Initialize 1928  
                      calc_model_data@bvror 008C                                 __pbssCOMRAM 004A  
                               _check_range 166C            __end_of_INT0_SetInterruptHandler 29B2  
                    __end_of___year_to_secs 676A                               __pcstackBANK0 00E5  
                  __size_of_TMR2_Initialize 0018                      __size_of_TMR3_CallBack 0024  
                    __end_of_switch_handler F608                                 _CRCCON0bits 003968  
                               _CRCCON1bits 003969                           __size_of___xxtofl 0204  
                   __end_of_SPI1_Initialize 2D26                    _UART1_RxInterruptHandler 00A7  
                  _UART2_TxInterruptHandler 00AA                                   __end_of_T F92D  
                          _convert_adc_data 0AE0                                   _calc_bsoc 538A  
                 __size_of_ringBufS_put_dma 00AA                                _init_display 0486  
                    __end_of_DMA1_DMAOR_ISR 2E5A                      __size_of_TMR5_CallBack 0024  
                         __size_of_do_tzset 0280                       _TMR6_InterruptHandler 009E  
                        calc_ror_data@bcror 0080                      __size_of_TMR6_CallBack 0024  
                   __end_of_cal_current_10A 096A                     __end_of_DMA2_Initialize 1E8A  
                        calc_ror_data@bvror 0084                      _PIN_MANAGER_Initialize 1336  
                     __end_of___localtime_r CCD4                    __size_of_TMR3_Initialize 0048  
                      __end_of_wait_lcd_set 2E94                         __size_of_scan_trans 003C  
                             __pmediumconst F770                                   __ptext100 E6D8  
                                 __ptext101 D144                                   __ptext110 206E  
                                 __ptext102 BB98                                   __ptext111 07E8  
                                 __ptext103 1514                                   __ptext200 538A  
                                 __ptext120 0FAC                                   __ptext112 FBD6  
                                 __ptext104 1566                                   __ptext201 1F32  
                                 __ptext121 10E8                                   __ptext113 F378  
                                 __ptext105 26E4                                   __ptext210 2EA8  
                                 __ptext202 2E2C                                   __ptext130 2C76  
                                 __ptext122 F880                                   __ptext114 95FA  
                                 __ptext106 0646                                   __ptext211 2EAA  
                                 __ptext203 1766                                   __ptext131 2CCA  
                                 __ptext123 2C94                                   __ptext115 21D4  
                                 __ptext107 A602                                   __ptext220 2B30  
                                 __ptext212 1994                                   __ptext204 2E04  
                                 __ptext140 E552                                   __ptext132 2DE8  
                                 __ptext124 0E5C                                   __ptext116 CCD4  
                                 __ptext108 E09A                                   __ptext221 2020  
                                 __ptext213 2A04                                   __ptext205 2B0C  
                                 __ptext141 0D02                                   __ptext133 22A4  
                                 __ptext125 C5D6                                   __ptext117 C356  
                                 __ptext109 E9CA                                   __ptext222 2E14  
                                 __ptext214 2BBA                                   __ptext206 2EA6  
                                 __ptext150 2B98                                   __ptext142 913E  
                                 __ptext134 24DC                                   __ptext126 1EE0  
                                 __ptext118 145A                                   __ptext223 2E38  
                                 __ptext215 2A2C                                   __ptext207 2EA0  
                                 __ptext151 DD3A                                   __ptext143 1C5C  
                                 __ptext135 284A                                   __ptext127 2714  
                                 __ptext119 FCEE                                   __ptext224 2E44  
                                 __ptext216 27CC                                   __ptext208 27A0  
                                 __ptext160 28C2                                   __ptext152 221A  
                                 __ptext144 2B76                                   __ptext136 2366  
                                 __ptext128 2C58                                   __ptext225 2E50  
                                 __ptext217 2A54                                   __ptext209 15EA  
                                 __ptext161 27F8                                   __ptext153 7836  
                                 __ptext145 D792                                   __ptext137 2E6A  
                                 __ptext129 2DBA                                   __ptext226 0000  
                                 __ptext218 2BFC                                   __ptext170 2D52  
                                 __ptext162 28EA                                   __ptext154 700C  
                                 __ptext146 86AE                                   __ptext138 2E72  
                                 __ptext219 2CB0                                   __ptext171 1336  
                                 __ptext163 20FE                                   __ptext155 1FD2  
                                 __ptext147 ECA2                                   __ptext139 17DE  
                                 __ptext180 13C8                                   __ptext172 2D3C  
                                 __ptext164 2912                                   __ptext156 1CBE  
                                 __ptext148 9A7A                                   __ptext181 2E22  
                                 __ptext173 1ACC                                   __ptext165 2146  
                                 __ptext157 2872                                   __ptext149 2E9A  
                                 __ptext190 23A6                                   __ptext182 1928  
                                 __ptext174 2E7A                                   __ptext166 293A  
                                 __ptext158 289A                                   __ptext191 2AC4  
                                 __ptext183 29B2                                   __ptext175 261E  
                                 __ptext167 2CE2                                   __ptext159 20B6  
                                 __ptext192 2514                                   __ptext184 29DA  
                                 __ptext176 2962                                   __ptext168 2D10  
                                 __ptext193 A28E                                   __ptext185 2428  
                                 __ptext177 298A                                   __ptext169 2D26  
                                 __ptext194 2DCA                                   __ptext186 2AA0  
                                 __ptext178 1E30                                   __ptext195 2DF6  
                                 __ptext187 FFFE                                   __ptext179 18BE  
                                 __ptext196 EE04                                   __ptext188 F4C6  
                                 __ptext197 23E6                                   __ptext189 DEF8  
                                 __ptext198 2AE8                                   __ptext199 DEF6  
                                 _hid_input F748                          __end_of_StartTimer 23A6  
                        _set_load_relay_one 2D9A                          _set_load_relay_two 2D8A  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 27A0  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check B8C0  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc C84A                      __size_of_wait_lcd_done 0022  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter DD3A  
                                 _localtime 2CFA                                 _hid_display D364  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 1ACC                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2E04                                    _INT1_ISR 2428  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 25EA  
                                 _set_dac_b 25B6                                   _ring_buf1 0483  
                                 _ring_buf2 0440                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 2AE8  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                                   _set_vterm 2C58  
                       __size_of_update_lcd 0160                                 _help_button 24DC  
                                  _TMR3_ISR EE04                                 _BVSOC_TABLE F771  
                                  _TMR5_ISR DEF8                                    _TMR6_ISR 2CB0  
        __end_of___secs_to_tm@days_in_month F87D                  ___secs_to_tm@days_in_month F871  
                                 _port_data 06FF                         __size_of_static_soc 005A  
                                 _vfpfcnvrt 382A                                _SPI1INTFbits 003D1A  
                       __size_of_start_bsoc 0022                               _TMR5_CallBack 2AC4  
                                _ADCON0bits 003EF8                                   _zi_read32 01AE  
                        __end_of_check_help D792                                   _start_lcd 2E94  
                   __size_of_FVR_Initialize 0008                   __size_of_send_lcd_cmd_dma 001E  
                             _TMR6_CallBack 2B30                              _write_cal_data F220  
                     __size_of_send_lcd_cmd 0040           __size_of_TMR5_SetInterruptHandler 0028  
                                 _stop_bsoc 2E9A                            _set_display_info 2C76  
                  __size_of_PWM8_Initialize 0016                    __size_of_TMR6_Initialize 002A  
                            _CRC_Initialize 13C8                                 _INTCON0bits 003FD2  
                                 copy_data0 00CA                                   copy_data1 00F0  
                                 copy_data2 0112            __size_of_CRC_CalculatedResultGet 0172  
                  _INT0_SetInterruptHandler 298A                         __size_of_vterm_dump 018E  
       __end_of_UART2_SetTxInterruptHandler 289A                 _UART2_SetTxInterruptHandler 2872  
                             _days_in_month 1B32                                _uart1RxCount 00D0  
                              _uart2RxCount 00CD                                    __Hrparam 0000  
          __size_of_eaDogM_WriteStringAtPos 0092                     __CFG_RSTOSC$EXTOSC_4PLL 000000  
                  __size_of_TMR3_WriteTimer 0040                                    __Lrparam 0000  
                   __size_of_check_adc_scan 0008                          __CFG_BOREN$SBORDIS 000000  
                __end_of_current_sensor_cal 538A                    __size_of_conv_raw_result 04BC  
                             _wait_lcd_done 2B54                                _send_lcd_cmd 2326  
                          __size_of___aldiv 0194                            __size_of___aodiv 0280  
                          __size_of___almod 0166                            __size_of___fladd 07BC  
             __size_of_get_ac_charger_relay 000E                            __size_of___aomod 0240  
                           _adc_int_handler 2EAA                            __size_of___fldiv 057A  
                          __size_of___awdiv 014E                            __size_of___flneg 0048  
                          __size_of___awmod 0118                            __size_of___lbmod 009A  
                          __size_of___flmul 082A                            __size_of___flsub 0046  
                          __size_of___fltol 0172                            __size_of___lodiv 0180  
                          __size_of___lomod 0140               __size_of_set_ac_charger_relay 0010  
                        __end_of_get_switch 279E                        __end_of_rule_to_secs 86AE  
                   __size_of_check_day_time 0374                      __end_of_write_cal_data F378  
                     __end_of_DMA1_DMAA_ISR 2E4E                          ___fpclassifyf@F463 007C  
      __size_of_UART1_SetRxInterruptHandler 0028                            __size_of_asctime 0516  
                                  ___tzname 006C                            __size_of_getname 02FC  
                           lp_filter@smooth 0300                                    ___xxtofl D792  
                    __end_of_CRC_Initialize 145A                           ?_DMA1_DMADCNT_ISR 0001  
                          __size_of_getrule 0280                 __size_of_check_enter_button 0072  
                  __size_of_ADCC_Initialize 006A                 __end_of_eaDogM_WriteCommand 2DE8  
                          __size_of_isalpha 0044                            __size_of_isdigit 0030  
                                  __pivt0x8 0008                            __size_of_islower 0030  
                          __size_of_isspace 0052                          ??_DMA1_DMADCNT_ISR 0007  
                          __size_of_set_dac 00B6                                    __ptext10 16EC  
                                  __ptext11 DB70                                    __ptext20 2822  
                                  __ptext12 2652                                    __ptext21 C84A  
                                  __ptext13 D996                                    __ptext30 2DDA  
                                  __ptext22 0A26                                    __ptext14 2684  
                                  __ptext31 B5E6                                    __ptext23 D364  
                                  __ptext15 0486                                    __ptext40 5DF8  
                                  __ptext32 1D1E                                    __ptext24 F748  
                                  __ptext16 2A7C                                    __ptext41 039A  
                                  __ptext33 2CFA                                    __ptext25 B8C0  
                                  __ptext17 22E6                                    __ptext50 EB3C  
                                  __ptext42 BE56                                    __ptext34 CA90  
                                  __ptext26 24A2                                    __ptext18 2326  
                                  __ptext51 E230                                    __ptext43 C0D6  
                                  __ptext35 676A                                    __ptext27 2E5A  
                                  __ptext19 2C1C                                    __ptext60 E858  
                                  __ptext52 8C28                                    __ptext44 CF14  
                                  __ptext36 2466                                    __ptext28 2D8A  
                                  __ptext61 071A                                    __ptext53 F9A4  
                                  __ptext45 FF0C                                    __ptext37 01AE  
                                  __ptext29 2D9A                                    __ptext70 1180  
                                  __ptext62 2D66                                    __ptext54 104E  
                                  __ptext46 AFFE                                    __ptext38 7FF2  
                                  __ptext71 08AC                                    __ptext63 1B96  
                                  __ptext55 47D6                                    __ptext47 2758  
                                  __ptext39 1B32                                    __ptext80 EF66  
                                  __ptext72 166C                                    __ptext64 2D78  
                                  __ptext56 F220                                    __ptext48 F0C6  
                                  __ptext81 1212                                    __ptext73 0AE0  
                                  __ptext65 2E62                                    __ptext57 19FE  
                                  __ptext49 0570                                    __ptext90 B2FA  
                                  __ptext82 2C3A                                    __ptext74 1A66  
                                  __ptext66 02A4                                    __ptext58 2E82  
                                  __ptext91 1BFA                                    __ptext83 2B54  
                                  __ptext75 D580                                    __ptext67 2772  
                                  __ptext59 2DAA                                    __ptext92 0DB0  
                                  __ptext84 1DD6                                    __ptext76 E3C4  
                                  __ptext68 1F84                                    __ptext93 382A  
                                  __ptext85 218E                                    __ptext77 FE02  
                                  __ptext69 2E88                                    __ptext94 9ED4  
                                  __ptext86 0F06                                    __ptext78 2744  
                                  __ptext95 14E2                                    __ptext87 2E8E  
                                  __ptext79 254C                                    __ptext96 26B4  
                                  __ptext88 2E94                                    __ptext97 2260  
                                  __ptext89 12A4                                    __ptext98 ACBE  
                                  __ptext99 F608                            __size_of_isupper 0030  
                                  _do_tzset BE56                       __end_of_read_cal_data DD3A  
                          __size_of_sprintf 010A                            __size_of_tolower 0084  
                                  us1178999 1D6E                                    us1454999 F20A  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                                  us1561999 BBAA                                    us1466999 C5C0  
                                  us1492999 9614                                    us1477999 CF02  
                                  us1573999 AD24                            _ringBufS_put_dma 0E5C  
                                  us1582999 9F54                                    us1677999 8698  
                                  _dst_name 01EB                        __end_of_Volts_to_SOC 0AE0  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 1514                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 2DAA  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 26B4                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 382A                    __size_of_TMR5_WriteTimer 0040  
                 _ADCC_ADI_InterruptHandler 00A4                                   stoa@F1166 0200  
                        ??_DMA1_DMASCNT_ISR 0007                __end_of_ADCC_StartConversion 2D8A  
                        __end_of_scan_trans 24A2                                    _spi_link 0060  
                                  _std_name 01F2                                    _wdtdelay 1DD6  
                __end_of_UART2_Transmit_ISR 27F8                                    _spinners 02A4  
                                  _vfprintf 0DB0                    __end_of_convert_adc_data 0B98  
                 __size_of_update_hist_data 006E                  __end_of_PWM8_LoadDutyValue 22E6  
      __end_of_TMR3_DefaultInterruptHandler DEF8       __size_of_TMR3_DefaultInterruptHandler 0002  
              _TMR3_DefaultInterruptHandler DEF6        __end_of_INT1_DefaultInterruptHandler 0000  
     __size_of_INT1_DefaultInterruptHandler 0002                _INT1_DefaultInterruptHandler FFFE  
                        _send_port_data_dma 1F32                               ??_Default_ISR 0001  
                               _uart1RxHead 0057                      __size_of_get_vterm_ptr 002E  
                               _uart2RxHead 0054                                 _uart1RxTail 00D1  
                            _get_raw_result 2B76                                 _NVMCON1bits 0039E5  
                               _uart2TxHead 00CF                                 _uart2RxTail 00CE  
                                 spinners@s 01DD                                 _uart2TxTail 0056  
                 __size_of_cal_current_zero 0092                                _wait_lcd_set 2E8E  
                        _EXT_INT_Initialize 261E        __end_of_TMR6_DefaultInterruptHandler 206E  
     __size_of_TMR6_DefaultInterruptHandler 004E                _TMR6_DefaultInterruptHandler 2020  
                         _send_lcd_data_dma 218E        __end_of_ADCC_DefaultInterruptHandler 2EAA  
     __size_of_ADCC_DefaultInterruptHandler 0002                _ADCC_DefaultInterruptHandler 2EA8  
                                  intlevel1 0000                                    intlevel2 0000  
                           ___month_to_secs 039A                           _send_lcd_cmd_long 22E6  
            __size_of_set_temp_display_help 0010               __end_of_set_temp_display_help 2DCA  
                     __end_of_calc_ror_data E6D8                           __CFG_CLKOUTEN$OFF 000000  
                __end_of_eaDogM_WriteString 0FAC                       __end_of_mode_lamp_dim 2CE2  
                   __end_of_adc_int_handler 2EAC                    __size_of_convert_dac_raw 0118  
                           _display_history B5E6                      __size_of_INT0_CallBack 0024  
                                _SPI1SCKPPS 003ADE                                  _SPI1SDIPPS 003ADF  
                    __size_of_INT1_CallBack 0024                          __end_of_update_lcd F0C6  
                    _uart2TxBufferRemaining 0055                          __end_of_static_soc 1DD6  
                        __end_of_start_bsoc 2BBA                              _FVR_Initialize 2E7A  
                    __end_of_get_raw_result 2B98                            _send_lcd_cmd_dma 2C3A  
                    __size_of___fpclassifyf 0196                       TMR5_ISR@CountCallBack 00C2  
          __end_of_INT1_SetInterruptHandler 298A                   __size_of_UART1_Initialize 0048  
                  __size_of_dac_spi_control 007A                   __end_of_send_lcd_data_dma 21D4  
                          ??_DMA1_DMAOR_ISR 0007                     _CRC_CalculatedResultGet E858  
                 __end_of_send_lcd_cmd_long 2326                     __size_of_start_adc_scan 0064  
                       __end_of_Default_ISR 2EA6              __end_of_PIN_MANAGER_Initialize 13C8  
                 __size_of_mode_lamp_bright 000E                          __end_of_vterm_dump E552  
                   _eaDogM_WriteStringAtPos 1212                               _get_vterm_ptr 2744  
                            _check_adc_scan 2E5A                   __size_of_UART2_Initialize 0060  
                     __size_of_rule_to_secs 06BC  
