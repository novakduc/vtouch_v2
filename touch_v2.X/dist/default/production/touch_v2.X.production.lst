

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec  6 00:35:21 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=4,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=4,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=4,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=4,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=4,class=CODE,delta=1
   166                           	psect	text142,global,reloc=4,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=4,class=CODE,delta=1
   171                           	psect	text147,global,reloc=4,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=4,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=4,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   187                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   188                           	psect	text162,global,reloc=4,class=CODE,delta=1
   189                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   190                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   191  0000                     
   192                           ; Version 2.10
   193                           ; Generated 31/07/2019 GMT
   194                           ; 
   195                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution.
   209                           ; 
   210                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   211                           ;        software without specific prior written permission.
   212                           ; 
   213                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   214                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   215                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   216                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   217                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   218                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   219                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   220                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   221                           ; 
   222                           ; 
   223                           ; Code-generator required, PIC18F57K42 Definitions
   224                           ; 
   225                           ; SFR Addresses
   226  0000                     
   227 ;;_k	offset	0
   228 ;;_j	offset	1
   229 ;;_i	offset	2
   230 ;;_inp_index	offset	3
   231 ;;_mode	offset	4
   232 ;;_channel	offset=-1 (param)
   233 ;;_s	offset=-2 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_cmd	offset=-1 (param)
   236 ;;_data	offset=-1 (param)
   237 ;;__this	offset=-2 (param)
   238 ;;_h	offset=-1 (param)
   239 ;;_h	offset=-1 (param)
   240 ;;_i	offset=-1 (param)
   241 ;;_cmd	offset=-1 (param)
   242 ;;_i	offset	0
   243 ;;_chan	offset=-1 (param)
   244 ;;_to_what	offset=-2 (param)
   245 ;;_u	offset	0
   246 ;;_s	offset=-2 (param)
   247 ;;_index	offset=-1 (param)
   248 ;;_arg	offset	0
   249 ;;_exp	offset	4
   250 ;;_sign	offset=-1 (param)
   251 ;;_val	offset=-5 (param)
   252 ;;_h	offset=-1 (param)
   253 ;;_flipper	offset=-1 (param)
   254 ;;_f	offset	0
   255 ;;_ap	offset	6
   256 ;;_s	offset=-3 (param)
   257 ;;_fmt	offset=-5 (param)
   258 ;;_line	offset=-1 (param)
   259 ;;_vterm	offset=-2 (param)
   260 ;;_numMilliseconds	offset=-2 (param)
   261 ;;_vterm	offset=-1 (param)
   262 ;;_r	offset=-1 (param)
   263 ;;_c	offset=-2 (param)
   264 ;;_strPtr	offset=-4 (param)
   265 ;;_strPtr	offset=-1 (param)
   266 ;;_delay	offset=-4 (param)
   267 ;;_strPtr	offset=-2 (param)
   268 ;;__this	offset=-2 (param)
   269 ;;_clearBuffer	offset=-3 (param)
   270 ;;_s	offset	0
   271 ;;_k	offset	2
   272 ;;_dest	offset=-2 (param)
   273 ;;_c	offset=-4 (param)
   274 ;;_n	offset=-6 (param)
   275 ;;_ap	offset	0
   276 ;;_fmt	offset=-3 (param)
   277 ;;_cfmt	offset	0
   278 ;;_fp	offset=-2 (param)
   279 ;;_fmt	offset=-4 (param)
   280 ;;_ap	offset=-6 (param)
   281 ;;_vfpfcnvrt$5036	offset	0
   282 ;;_vfpfcnvrt$5042	offset	2
   283 ;;_vfpfcnvrt$5035	offset	4
   284 ;;_llu	offset	6
   285 ;;_ll	offset	14
   286 ;;_f	offset	22
   287 ;;_ct	offset	26
   288 ;;_cp	offset	29
   289 ;;_c	offset	31
   290 ;;_fp	offset=-2 (param)
   291 ;;_fmt	offset=-4 (param)
   292 ;;_ap	offset=-6 (param)
   293 ;;_xtoa$5021	offset	0
   294 ;;_xtoa$5020	offset	2
   295 ;;_n	offset	4
   296 ;;_c	offset	12
   297 ;;_i	offset	14
   298 ;;_w	offset	16
   299 ;;_p	offset	18
   300 ;;_fp	offset=-2 (param)
   301 ;;_d	offset=-10 (param)
   302 ;;_x	offset=-11 (param)
   303 ;;_toupper$5681	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_c	offset=-2 (param)
   307 ;;_r	offset	0
   308 ;;_l	offset	2
   309 ;;__l	offset=-2 (param)
   310 ;;__r	offset=-4 (param)
   311 ;;_n	offset=-6 (param)
   312 ;;_nuls	offset	0
   313 ;;_l	offset	7
   314 ;;_p	offset	9
   315 ;;_cp	offset	11
   316 ;;_w	offset	13
   317 ;;_i	offset	15
   318 ;;_fp	offset=-2 (param)
   319 ;;_s	offset=-4 (param)
   320 ;;_efgtoa$5000	offset	0
   321 ;;_efgtoa$4999	offset	2
   322 ;;_efgtoa$4998	offset	4
   323 ;;_efgtoa$4994	offset	6
   324 ;;_efgtoa$4990	offset	8
   325 ;;_efgtoa$4989	offset	10
   326 ;;_u	offset	12
   327 ;;_g	offset	16
   328 ;;_l	offset	20
   329 ;;_h	offset	24
   330 ;;_ou	offset	28
   331 ;;_n	offset	32
   332 ;;_e	offset	34
   333 ;;_i	offset	36
   334 ;;_w	offset	38
   335 ;;_p	offset	40
   336 ;;_sign	offset	42
   337 ;;_d	offset	44
   338 ;;_ne	offset	46
   339 ;;_m	offset	48
   340 ;;_pp	offset	50
   341 ;;_t	offset	52
   342 ;;_mode	offset	54
   343 ;;_nmode	offset	55
   344 ;;_fp	offset=-2 (param)
   345 ;;_f	offset=-6 (param)
   346 ;;_c	offset=-7 (param)
   347 ;;_tolower$5666	offset	0
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_d	offset	0
   351 ;;_s	offset	2
   352 ;;_dest	offset=-2 (param)
   353 ;;_src	offset=-4 (param)
   354 ;;_u	offset	0
   355 ;;_m	offset	4
   356 ;;_e	offset	8
   357 ;;_x	offset=-4 (param)
   358 ;;_u	offset	0
   359 ;;_e	offset	4
   360 ;;_x	offset=-4 (param)
   361 ;;_exp1	offset	0
   362 ;;_sign1	offset	1
   363 ;;_f1	offset=-4 (param)
   364 ;;_f1	offset=-4 (param)
   365 ;;_ff1	offset=-4 (param)
   366 ;;_ff2	offset=-8 (param)
   367 ;;_ff1	offset=-4 (param)
   368 ;;_ff2	offset=-8 (param)
   369 ;;_grs	offset	0
   370 ;;_rem	offset	4
   371 ;;_new_exp	offset	8
   372 ;;_aexp	offset	10
   373 ;;_bexp	offset	11
   374 ;;_sign	offset	12
   375 ;;_b	offset=-4 (param)
   376 ;;_a	offset=-8 (param)
   377 ;;_sign	offset	0
   378 ;;_counter	offset	1
   379 ;;_dividend	offset=-2 (param)
   380 ;;_divisor	offset=-4 (param)
   381 ;;_quotient	offset	0
   382 ;;_sign	offset	2
   383 ;;_counter	offset	3
   384 ;;_dividend	offset=-2 (param)
   385 ;;_divisor	offset=-4 (param)
   386 ;;_dtoa$4966	offset	0
   387 ;;_n	offset	2
   388 ;;_i	offset	10
   389 ;;_s	offset	12
   390 ;;_w	offset	14
   391 ;;_p	offset	16
   392 ;;_fp	offset=-2 (param)
   393 ;;_d	offset=-10 (param)
   394 ;;_a	offset=-2 (param)
   395 ;;_sign	offset	0
   396 ;;_counter	offset	1
   397 ;;_dividend	offset=-8 (param)
   398 ;;_divisor	offset=-16 (param)
   399 ;;_quotient	offset	0
   400 ;;_sign	offset	8
   401 ;;_counter	offset	9
   402 ;;_dividend	offset=-8 (param)
   403 ;;_divisor	offset=-16 (param)
   404 ;;_w	offset	0
   405 ;;_fp	offset=-2 (param)
   406 ;;_c	offset=-3 (param)
   407 ;;_w	offset	0
   408 ;;_i	offset	2
   409 ;;_fp	offset=-2 (param)
   410 ;;_buf	offset=-4 (param)
   411 ;;_p	offset=-6 (param)
   412 ;;_a	offset	0
   413 ;;_s	offset=-2 (param)
   414 ;;_i	offset	0
   415 ;;_c	offset	2
   416 ;;_s	offset=-2 (param)
   417 ;;_fp	offset=-4 (param)
   418 ;;_c	offset=-2 (param)
   419 ;;_fp	offset=-4 (param)
   420 ;;_c	offset=-1 (param)
   421 ;;__this	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_atoi$5519	offset	0
   424 ;;_atoi$5517	offset	2
   425 ;;_atoi$5518	offset	4
   426 ;;_n	offset	5
   427 ;;_neg	offset	7
   428 ;;_s	offset=-2 (param)
   429 ;;_isspace$5557	offset	0
   430 ;;_c	offset=-2 (param)
   431 ;;_c	offset=-2 (param)
   432 ;;_vterm	offset=-1 (param)
   433 ;;_new_response_info	offset=-1 (param)
   434 ;;_new_response_info	offset=-1 (param)
   435 ;;_level	offset=-2 (param)
   436 ;;_dutyValue	offset=-2 (param)
   437 ;;_timer	offset=-1 (param)
   438 ;;_timer	offset=-1 (param)
   439 ;;_count	offset=-3 (param)
   440 ;;_h	offset=-1 (param)
   441 ;;_lp_speed	offset	0
   442 ;;_new	offset=-4 (param)
   443 ;;_bn	offset=-5 (param)
   444 ;;_slow	offset=-6 (param)
   445 ;;_b	offset=-4 (param)
   446 ;;_a	offset=-8 (param)
   447 ;;_grs	offset	0
   448 ;;_bexp	offset	1
   449 ;;_aexp	offset	2
   450 ;;_signs	offset	3
   451 ;;_b	offset=-4 (param)
   452 ;;_a	offset=-8 (param)
   453 ;;_prod	offset	0
   454 ;;_grs	offset	4
   455 ;;_temp	offset	8
   456 ;;_bexp	offset	10
   457 ;;_aexp	offset	11
   458 ;;_sign	offset	12
   459 ;;_b	offset=-4 (param)
   460 ;;_a	offset=-8 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_InterruptHandler	offset=-3 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_state	offset	0
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_InterruptHandler	offset=-3 (param)
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_i	offset	0
   474 ;;_sw_value	offset	1
   475 ;;_timerVal	offset=-2 (param)
   476 ;;_timerVal	offset=-2 (param)
   477 ;;_exp1	offset	0
   478 ;;_sign1	offset	1
   479 ;;_f1	offset=-4 (param)
   480 ;;_prod	offset	0
   481 ;;_grs	offset	4
   482 ;;_temp	offset	8
   483 ;;_bexp	offset	10
   484 ;;_aexp	offset	11
   485 ;;_sign	offset	12
   486 ;;_b	offset=-4 (param)
   487 ;;_a	offset=-8 (param)
   488 ;;_ff1	offset=-4 (param)
   489 ;;_ff2	offset=-8 (param)
   490 ;;_grs	offset	0
   491 ;;_rem	offset	4
   492 ;;_new_exp	offset	8
   493 ;;_aexp	offset	10
   494 ;;_bexp	offset	11
   495 ;;_sign	offset	12
   496 ;;_b	offset=-4 (param)
   497 ;;_a	offset=-8 (param)
   498 ;;_grs	offset	0
   499 ;;_bexp	offset	1
   500 ;;_aexp	offset	2
   501 ;;_signs	offset	3
   502 ;;_b	offset=-4 (param)
   503 ;;_a	offset=-8 (param)
   504 ;;_channel	offset=-1 (param)
   505 ;;_i	offset	0
   506                           
   507                           	psect	idataBANK0
   508  018CA2                     __pidataBANK0:
   509                           	opt callstack 0
   510                           
   511                           ;initializer for _R
   512  018CA2  0000               	dw	0
   513  018CA4  0000               	dw	0
   514  018CA6  0000               	dw	0
   515  018CA8  0000               	dw	0
   516  018CAA  0000               	dw	0
   517  018CAC  0000               	dw	0
   518  018CAE  0000               	dw	0
   519  018CB0  0000               	dw	0
   520  018CB2  0000               	dw	0
   521  018CB4  0000               	dw	0
   522  018CB6  0000               	dw	0
   523  018CB8  0000               	dw	0
   524  018CBA  0000               	dw	0
   525  018CBC  0000               	dw	0
   526  018CBE  0000               	dw	0
   527  018CC0  0000               	dw	0
   528  018CC2  0F67               	dw	3943
   529  018CC4  0F8F               	dw	3983
   530  018CC6  00                 	db	0
   531  018CC7  0000               	dw	0
   532  018CC9  00                 	db	0
   533                           
   534                           ;initializer for stoa@F1166
   535  018CCA  28                 	db	40
   536  018CCB  6E                 	db	110
   537  018CCC  75                 	db	117
   538  018CCD  6C                 	db	108
   539  018CCE  6C                 	db	108
   540  018CCF  29                 	db	41
   541  018CD0  00                 	db	0
   542                           
   543                           ;initializer for _H
   544  018CD1  00                 	db	0
   545  018CD2  00                 	db	0
   546  018CD3  01                 	db	1
   547  018CD4  00                 	db	0
   548  018CD5  01                 	db	1
   549  018CD6  00                 	db	0
   550  018CD7  00                 	db	0
   551                           
   552                           	psect	idataBANK1
   553  017BBE                     __pidataBANK1:
   554                           	opt callstack 0
   555                           
   556                           ;initializer for _C
   557  017BBE  0000               	dw	0
   558  017BC0  0000               	dw	0
   559  017BC2  0000               	dw	0
   560  017BC4  0000               	dw	0
   561  017BC6  0000               	dw	0
   562  017BC8  0000               	dw	0
   563  017BCA  0000               	dw	0
   564  017BCC  0000               	dw	0
   565  017BCE  0000               	dw	0
   566  017BD0  0000               	dw	0
   567  017BD2  0000               	dw	0
   568  017BD4  0000               	dw	0
   569  017BD6  0000               	dw	0
   570  017BD8  0000               	dw	0
   571  017BDA  0000               	dw	0
   572  017BDC  0000               	dw	0
   573  017BDE  0000               	dw	0
   574  017BE0  0000               	dw	0
   575  017BE2  0000               	dw	0
   576  017BE4  0000               	dw	0
   577  017BE6  0000               	dw	0
   578  017BE8  0000               	dw	0
   579  017BEA  0000               	dw	0
   580  017BEC  0000               	dw	0
   581  017BEE  0000               	dw	0
   582  017BF0  0000               	dw	0
   583  017BF2  0000               	dw	0
   584  017BF4  0000               	dw	0
   585  017BF6  0000               	dw	0
   586  017BF8  0000               	dw	0
   587  017BFA  0000               	dw	0
   588  017BFC  0000               	dw	0
   589  017BFE  0000               	dw	0
   590  017C00  0000               	dw	0
   591  017C02  0000               	dw	0
   592  017C04  0000               	dw	0
   593  017C06  0000               	dw	0
   594  017C08  0000               	dw	0
   595  017C0A  0000               	dw	0
   596  017C0C  0000               	dw	0
   597  017C0E  0000               	dw	0
   598  017C10  0000               	dw	0
   599  017C12  0000               	dw	0
   600  017C14  0000               	dw	0
   601  017C16  0000               	dw	0
   602  017C18  0000               	dw	0
   603  017C1A  0000               	dw	0
   604  017C1C  0000               	dw	0
   605  017C1E  0000               	dw	0
   606  017C20  0000               	dw	0
   607  017C22  0000               	dw	0
   608  017C24  0000               	dw	0
   609  017C26  0000               	dw	0
   610  017C28  0000               	dw	0
   611  017C2A  0000               	dw	0
   612  017C2C  0000               	dw	0
   613  017C2E  0000               	dw	0
   614  017C30  0000               	dw	0
   615  017C32  0000               	dw	0
   616  017C34  0000               	dw	0
   617  017C36  0000               	dw	0
   618  017C38  0000               	dw	0
   619  017C3A  0000               	dw	0
   620  017C3C  42FA               	dw	17146
   621  017C3E  00                 	db	0
   622  017C3F  00                 	db	0
   623  017C40  00                 	db	0
   624  017C41  00                 	db	0
   625  017C42  00                 	db	0
   626  017C43  00                 	db	0
   627  017C44  00                 	db	0
   628  017C45  00                 	db	0
   629  017C46  00                 	db	0
   630  017C47  00                 	db	0
   631  017C48  00                 	db	0
   632  017C49  00                 	db	0
   633  017C4A  00                 	db	0
   634  017C4B  00                 	db	0
   635  017C4C  00                 	db	0
   636  017C4D  00                 	db	0
   637  017C4E  00                 	db	0
   638  017C4F  00                 	db	0
   639  017C50  00                 	db	0
   640  017C51  00                 	db	0
   641  017C52  00                 	db	0
   642  017C53  00                 	db	0
   643  017C54  00                 	db	0
   644  017C55  00                 	db	0
   645  017C56  00                 	db	0
   646  017C57  00                 	db	0
   647  017C58  00                 	db	0
   648  017C59  00                 	db	0
   649  017C5A  00                 	db	0
   650  017C5B  00                 	db	0
   651  017C5C  00                 	db	0
   652  017C5D  00                 	db	0
   653  017C5E  00                 	db	0
   654  017C5F  00                 	db	0
   655  017C60  00                 	db	0
   656  017C61  00                 	db	0
   657  017C62  00                 	db	0
   658                           
   659                           ;initializer for _port_data
   660  017C63  FF                 	db	255
   661  017C64  00                 	db	0
   662  017C65  FF                 	db	255
   663  017C66  00                 	db	0
   664  017C67  FF                 	db	255
   665  017C68  00                 	db	0
   666  017C69  FF                 	db	255
   667  017C6A  00                 	db	0
   668  017C6B  FF                 	db	255
   669  017C6C  00                 	db	0
   670  017C6D  FF                 	db	255
   671  017C6E  00                 	db	0
   672  017C6F  FF                 	db	255
   673  017C70  00                 	db	0
   674  017C71  FF                 	db	255
   675  017C72  00                 	db	0
   676                           
   677                           	psect	idataBANK2
   678  017A4A                     __pidataBANK2:
   679                           	opt callstack 0
   680                           
   681                           ;initializer for _V
   682  017A4A  00                 	db	0
   683  017A4B  00                 	db	0
   684  017A4C  00                 	db	0
   685  017A4D  00                 	db	0
   686  017A4E  00                 	db	0
   687  017A4F  00                 	db	0
   688  017A50  00                 	db	0
   689  017A51  00                 	db	0
   690  017A52  00                 	db	0
   691  017A53  00                 	db	0
   692  017A54  00                 	db	0
   693  017A55  00                 	db	0
   694  017A56  00                 	db	0
   695  017A57  00                 	db	0
   696  017A58  00                 	db	0
   697  017A59  00                 	db	0
   698  017A5A  00                 	db	0
   699  017A5B  00                 	db	0
   700  017A5C  00                 	db	0
   701  017A5D  00                 	db	0
   702  017A5E  00                 	db	0
   703  017A5F  00                 	db	0
   704  017A60  00                 	db	0
   705  017A61  00                 	db	0
   706  017A62  00                 	db	0
   707  017A63  00                 	db	0
   708  017A64  00                 	db	0
   709  017A65  00                 	db	0
   710  017A66  00                 	db	0
   711  017A67  00                 	db	0
   712  017A68  00                 	db	0
   713  017A69  00                 	db	0
   714  017A6A  00                 	db	0
   715  017A6B  00                 	db	0
   716  017A6C  00                 	db	0
   717  017A6D  00                 	db	0
   718  017A6E  00                 	db	0
   719  017A6F  00                 	db	0
   720  017A70  00                 	db	0
   721  017A71  00                 	db	0
   722  017A72  00                 	db	0
   723  017A73  00                 	db	0
   724  017A74  00                 	db	0
   725  017A75  00                 	db	0
   726  017A76  00                 	db	0
   727  017A77  00                 	db	0
   728  017A78  00                 	db	0
   729  017A79  00                 	db	0
   730  017A7A  00                 	db	0
   731  017A7B  00                 	db	0
   732  017A7C  00                 	db	0
   733  017A7D  00                 	db	0
   734  017A7E  00                 	db	0
   735  017A7F  00                 	db	0
   736  017A80  00                 	db	0
   737  017A81  00                 	db	0
   738  017A82  00                 	db	0
   739  017A83  00                 	db	0
   740  017A84  00                 	db	0
   741  017A85  00                 	db	0
   742  017A86  00                 	db	0
   743  017A87  00                 	db	0
   744  017A88  00                 	db	0
   745  017A89  00                 	db	0
   746  017A8A  00                 	db	0
   747  017A8B  00                 	db	0
   748  017A8C  00                 	db	0
   749  017A8D  00                 	db	0
   750  017A8E  00                 	db	0
   751  017A8F  00                 	db	0
   752  017A90  00                 	db	0
   753  017A91  00                 	db	0
   754  017A92  00                 	db	0
   755  017A93  00                 	db	0
   756  017A94  00                 	db	0
   757  017A95  00                 	db	0
   758  017A96  00                 	db	0
   759  017A97  00                 	db	0
   760  017A98  00                 	db	0
   761  017A99  00                 	db	0
   762  017A9A  00                 	db	0
   763  017A9B  00                 	db	0
   764  017A9C  00                 	db	0
   765  017A9D  00                 	db	0
   766  017A9E  00                 	db	0
   767  017A9F  00                 	db	0
   768  017AA0  00                 	db	0
   769  017AA1  00                 	db	0
   770  017AA2  00                 	db	0
   771  017AA3  00                 	db	0
   772  017AA4  00                 	db	0
   773  017AA5  00                 	db	0
   774  017AA6  00                 	db	0
   775  017AA7  00                 	db	0
   776  017AA8  00                 	db	0
   777  017AA9  00                 	db	0
   778  017AAA  00                 	db	0
   779  017AAB  00                 	db	0
   780  017AAC  00                 	db	0
   781  017AAD  00                 	db	0
   782  017AAE  00                 	db	0
   783  017AAF  00                 	db	0
   784  017AB0  00                 	db	0
   785  017AB1  00                 	db	0
   786  017AB2  00                 	db	0
   787  017AB3  00                 	db	0
   788  017AB4  00                 	db	0
   789  017AB5  00                 	db	0
   790  017AB6  00                 	db	0
   791  017AB7  00                 	db	0
   792  017AB8  00                 	db	0
   793  017AB9  00                 	db	0
   794  017ABA  00                 	db	0
   795  017ABB  00                 	db	0
   796  017ABC  00                 	db	0
   797  017ABD  00                 	db	0
   798  017ABE  00                 	db	0
   799  017ABF  00                 	db	0
   800  017AC0  00                 	db	0
   801  017AC1  00                 	db	0
   802  017AC2  00                 	db	0
   803  017AC3  00                 	db	0
   804  017AC4  00                 	db	0
   805  017AC5  00                 	db	0
   806  017AC6  00                 	db	0
   807  017AC7  00                 	db	0
   808  017AC8  00                 	db	0
   809  017AC9  00                 	db	0
   810  017ACA  00                 	db	0
   811  017ACB  0000               	dw	0
   812  017ACD  0000               	dw	0
   813  017ACF  0000               	dw	0
   814  017AD1  0000               	dw	0
   815  017AD3  00                 	db	0
   816  017AD4  00                 	db	0
   817  017AD5  00                 	db	0
   818  017AD6  00                 	db	0
   819  017AD7  00                 	db	0
   820  017AD8  00                 	db	0
   821  017AD9  0000               	dw	0
   822  017ADB  0000               	dw	0
   823  017ADD  0000               	dw	0
   824  017ADF  0000               	dw	0
   825  017AE1  0000               	dw	0
   826  017AE3  0000               	dw	0
   827  017AE5  00                 	db	0
   828  017AE6  00                 	db	0
   829  017AE7  00                 	db	0
   830  017AE8  00                 	db	0
   831  017AE9  00                 	db	0
   832  017AEA  00                 	db	0
   833  017AEB  00                 	db	0
   834  017AEC  00                 	db	0
   835  017AED  00                 	db	0
   836  017AEE  00                 	db	0
   837  017AEF  0000               	dw	0
   838  017AF1  0000               	dw	0
   839  017AF3  2D                 	db	45
   840  017AF4  00                 	db	0
   841  017AF5  00                 	db	0
   842  017AF6  0000               	dw	0
   843  017AF8  0000               	dw	0
   844  017AFA  0000               	dw	0
   845  017AFC  0000               	dw	0
   846  017AFE  0000               	dw	0
   847  017B00  0000               	dw	0
   848  017B02  0000               	dw	0
   849  017B04  0000               	dw	0
   850                           
   851                           	psect	mediumconst
   852  00FDB0                     __pmediumconst:
   853                           	opt callstack 0
   854  00FDB0  00                 	db	0
   855  00FDB1                     _T:
   856                           	opt callstack 0
   857  00FDB1  63                 	db	99
   858  00FDB2  6F                 	db	111
   859  00FDB3  6D                 	db	109
   860  00FDB4  6D                 	db	109
   861  00FDB5  61                 	db	97
   862  00FDB6  6E                 	db	110
   863  00FDB7  64                 	db	100
   864  00FDB8  73                 	db	115
   865  00FDB9  20                 	db	32
   866  00FDBA  31                 	db	49
   867  00FDBB  00                 	db	0
   868  00FDBC  00                 	db	0
   869  00FDBD  00                 	db	0
   870  00FDBE  00                 	db	0
   871  00FDBF  00                 	db	0
   872  00FDC0  00                 	db	0
   873  00FDC1  00                 	db	0
   874  00FDC2  00                 	db	0
   875  00FDC3  64                 	db	100
   876  00FDC4  69                 	db	105
   877  00FDC5  73                 	db	115
   878  00FDC6  70                 	db	112
   879  00FDC7  6C                 	db	108
   880  00FDC8  61                 	db	97
   881  00FDC9  79                 	db	121
   882  00FDCA  73                 	db	115
   883  00FDCB  20                 	db	32
   884  00FDCC  31                 	db	49
   885  00FDCD  00                 	db	0
   886  00FDCE  00                 	db	0
   887  00FDCF  00                 	db	0
   888  00FDD0  00                 	db	0
   889  00FDD1  00                 	db	0
   890  00FDD2  00                 	db	0
   891  00FDD3  00                 	db	0
   892  00FDD4  00                 	db	0
   893  00FDD5  63                 	db	99
   894  00FDD6  6F                 	db	111
   895  00FDD7  6D                 	db	109
   896  00FDD8  6D                 	db	109
   897  00FDD9  61                 	db	97
   898  00FDDA  6E                 	db	110
   899  00FDDB  64                 	db	100
   900  00FDDC  73                 	db	115
   901  00FDDD  20                 	db	32
   902  00FDDE  32                 	db	50
   903  00FDDF  00                 	db	0
   904  00FDE0  00                 	db	0
   905  00FDE1  00                 	db	0
   906  00FDE2  00                 	db	0
   907  00FDE3  00                 	db	0
   908  00FDE4  00                 	db	0
   909  00FDE5  00                 	db	0
   910  00FDE6  00                 	db	0
   911  00FDE7  64                 	db	100
   912  00FDE8  69                 	db	105
   913  00FDE9  73                 	db	115
   914  00FDEA  70                 	db	112
   915  00FDEB  6C                 	db	108
   916  00FDEC  61                 	db	97
   917  00FDED  79                 	db	121
   918  00FDEE  73                 	db	115
   919  00FDEF  20                 	db	32
   920  00FDF0  32                 	db	50
   921  00FDF1  00                 	db	0
   922  00FDF2  00                 	db	0
   923  00FDF3  00                 	db	0
   924  00FDF4  00                 	db	0
   925  00FDF5  00                 	db	0
   926  00FDF6  00                 	db	0
   927  00FDF7  00                 	db	0
   928  00FDF8  00                 	db	0
   929  00FDF9  63                 	db	99
   930  00FDFA  6F                 	db	111
   931  00FDFB  6D                 	db	109
   932  00FDFC  6D                 	db	109
   933  00FDFD  61                 	db	97
   934  00FDFE  6E                 	db	110
   935  00FDFF  64                 	db	100
   936  00FE00  73                 	db	115
   937  00FE01  20                 	db	32
   938  00FE02  33                 	db	51
   939  00FE03  00                 	db	0
   940  00FE04  00                 	db	0
   941  00FE05  00                 	db	0
   942  00FE06  00                 	db	0
   943  00FE07  00                 	db	0
   944  00FE08  00                 	db	0
   945  00FE09  00                 	db	0
   946  00FE0A  00                 	db	0
   947  00FE0B  64                 	db	100
   948  00FE0C  69                 	db	105
   949  00FE0D  73                 	db	115
   950  00FE0E  70                 	db	112
   951  00FE0F  6C                 	db	108
   952  00FE10  61                 	db	97
   953  00FE11  79                 	db	121
   954  00FE12  73                 	db	115
   955  00FE13  20                 	db	32
   956  00FE14  33                 	db	51
   957  00FE15  00                 	db	0
   958  00FE16  00                 	db	0
   959  00FE17  00                 	db	0
   960  00FE18  00                 	db	0
   961  00FE19  00                 	db	0
   962  00FE1A  00                 	db	0
   963  00FE1B  00                 	db	0
   964  00FE1C  00                 	db	0
   965  00FE1D  63                 	db	99
   966  00FE1E  6F                 	db	111
   967  00FE1F  6D                 	db	109
   968  00FE20  6D                 	db	109
   969  00FE21  61                 	db	97
   970  00FE22  6E                 	db	110
   971  00FE23  64                 	db	100
   972  00FE24  73                 	db	115
   973  00FE25  20                 	db	32
   974  00FE26  34                 	db	52
   975  00FE27  00                 	db	0
   976  00FE28  00                 	db	0
   977  00FE29  00                 	db	0
   978  00FE2A  00                 	db	0
   979  00FE2B  00                 	db	0
   980  00FE2C  00                 	db	0
   981  00FE2D  00                 	db	0
   982  00FE2E  00                 	db	0
   983  00FE2F  64                 	db	100
   984  00FE30  69                 	db	105
   985  00FE31  73                 	db	115
   986  00FE32  70                 	db	112
   987  00FE33  6C                 	db	108
   988  00FE34  61                 	db	97
   989  00FE35  79                 	db	121
   990  00FE36  73                 	db	115
   991  00FE37  20                 	db	32
   992  00FE38  34                 	db	52
   993  00FE39  00                 	db	0
   994  00FE3A  00                 	db	0
   995  00FE3B  00                 	db	0
   996  00FE3C  00                 	db	0
   997  00FE3D  00                 	db	0
   998  00FE3E  00                 	db	0
   999  00FE3F  00                 	db	0
  1000  00FE40  00                 	db	0
  1001  00FE41                     __end_of_T:
  1002                           	opt callstack 0
  1003  0000                     _IVTADL	set	14493
  1004  0000                     _IVTADH	set	14494
  1005  0000                     _IVTADU	set	14495
  1006  0000                     _PIR6bits	set	14758
  1007  0000                     _PIR4bits	set	14756
  1008  0000                     _PIE8bits	set	14744
  1009  0000                     _PIR8bits	set	14760
  1010  0000                     _SCANPR	set	14839
  1011  0000                     _DMA2PR	set	14836
  1012  0000                     _DMA1PR	set	14835
  1013  0000                     _MAINPR	set	14834
  1014  0000                     _ISRPR	set	14833
  1015  0000                     _PIE2bits	set	14738
  1016  0000                     _PIR2bits	set	14754
  1017  0000                     _PIE9bits	set	14745
  1018  0000                     _PIR9bits	set	14761
  1019  0000                     _PIE6bits	set	14742
  1020  0000                     _PIE3bits	set	14739
  1021  0000                     _PMD7	set	14791
  1022  0000                     _PMD6	set	14790
  1023  0000                     _PMD5	set	14789
  1024  0000                     _PMD4	set	14788
  1025  0000                     _PMD3	set	14787
  1026  0000                     _PMD2	set	14786
  1027  0000                     _PMD1	set	14785
  1028  0000                     _PMD0	set	14784
  1029  0000                     _OSCTUNE	set	14814
  1030  0000                     _OSCFRQ	set	14815
  1031  0000                     _OSCEN	set	14813
  1032  0000                     _OSCCON3	set	14811
  1033  0000                     _OSCCON1	set	14809
  1034  0000                     _IPR8bits	set	14728
  1035  0000                     _IPR9bits	set	14729
  1036  0000                     _IPR5bits	set	14725
  1037  0000                     _IPR1bits	set	14721
  1038  0000                     _IPR3bits	set	14723
  1039  0000                     _IPR6bits	set	14726
  1040  0000                     _IPR2bits	set	14722
  1041  0000                     _PIE5bits	set	14741
  1042  0000                     _PIE1bits	set	14737
  1043  0000                     _PIR5bits	set	14757
  1044  0000                     _PIR1bits	set	14753
  1045  0000                     _PLLR	set	118496
  1046  0000                     _SPI1SDIPPS	set	15071
  1047  0000                     _U1RXPPS	set	15077
  1048  0000                     _RC6PPS	set	14870
  1049  0000                     _RC5PPS	set	14869
  1050  0000                     _INT1PPS	set	15041
  1051  0000                     _RD1PPS	set	14873
  1052  0000                     _INT0PPS	set	15040
  1053  0000                     _RC3PPS	set	14867
  1054  0000                     _RB6PPS	set	14862
  1055  0000                     _SPI1SCKPPS	set	15070
  1056  0000                     _U2RXPPS	set	15080
  1057  0000                     _SLRCONF	set	14995
  1058  0000                     _SLRCONE	set	14979
  1059  0000                     _SLRCOND	set	14963
  1060  0000                     _SLRCONC	set	14947
  1061  0000                     _SLRCONB	set	14931
  1062  0000                     _SLRCONA	set	14915
  1063  0000                     _ODCOND	set	14962
  1064  0000                     _ODCONC	set	14946
  1065  0000                     _ODCONB	set	14930
  1066  0000                     _ODCONA	set	14914
  1067  0000                     _ODCONF	set	14994
  1068  0000                     _ODCONE	set	14978
  1069  0000                     _WPUC	set	14945
  1070  0000                     _WPUA	set	14913
  1071  0000                     _WPUB	set	14929
  1072  0000                     _WPUE	set	14977
  1073  0000                     _WPUF	set	14993
  1074  0000                     _WPUD	set	14961
  1075  0000                     _ANSELA	set	14912
  1076  0000                     _ANSELF	set	14992
  1077  0000                     _ANSELE	set	14976
  1078  0000                     _ANSELB	set	14928
  1079  0000                     _ANSELC	set	14944
  1080  0000                     _ANSELD	set	14960
  1081  0000                     _DMA2SSA	set	15321
  1082  0000                     _DMA1SSA	set	15353
  1083  0000                     _DMA2DSZ	set	15310
  1084  0000                     _DMA2SSZ	set	15319
  1085  0000                     _DMA2DSA	set	15312
  1086  0000                     _DMA1DSZ	set	15342
  1087  0000                     _DMA1SSZ	set	15351
  1088  0000                     _DMA1DSA	set	15344
  1089  0000                     _DMA1CON0bits	set	15356
  1090  0000                     _DMA1CON1bits	set	15357
  1091  0000                     _DMA2CON0	set	15324
  1092  0000                     _DMA2AIRQ	set	15326
  1093  0000                     _DMA2SIRQ	set	15327
  1094  0000                     _DMA2CON1	set	15325
  1095  0000                     _DMA1CON0	set	15356
  1096  0000                     _DMA1AIRQ	set	15358
  1097  0000                     _DMA1SIRQ	set	15359
  1098  0000                     _DMA1CON1	set	15357
  1099  0000                     _CLKRCON	set	15589
  1100  0000                     _CLKRCLK	set	15590
  1101  0000                     _SPI1INTFbits	set	15642
  1102  0000                     _SPI1RXB	set	15632
  1103  0000                     _SPI1TXB	set	15633
  1104  0000                     _SPI1TCNTL	set	15634
  1105  0000                     _SPI1CON0	set	15636
  1106  0000                     _SPI1CLK	set	15644
  1107  0000                     _SPI1BAUD	set	15641
  1108  0000                     _SPI1CON2	set	15638
  1109  0000                     _SPI1CON1	set	15637
  1110  0000                     _U2RXB	set	15824
  1111  0000                     _U2TXB	set	15826
  1112  0000                     _U2ERRIE	set	15842
  1113  0000                     _U2ERRIR	set	15841
  1114  0000                     _U2UIR	set	15840
  1115  0000                     _U2FIFO	set	15839
  1116  0000                     _U2BRGH	set	15838
  1117  0000                     _U2BRGL	set	15837
  1118  0000                     _U2CON2	set	15836
  1119  0000                     _U2CON1	set	15835
  1120  0000                     _U2CON0	set	15834
  1121  0000                     _U2P3L	set	15832
  1122  0000                     _U2P2L	set	15830
  1123  0000                     _U2P1L	set	15828
  1124  0000                     _U1RXB	set	15848
  1125  0000                     _U1TXB	set	15850
  1126  0000                     _U1ERRIE	set	15866
  1127  0000                     _U1ERRIR	set	15865
  1128  0000                     _U1UIR	set	15864
  1129  0000                     _U1FIFO	set	15863
  1130  0000                     _U1BRGH	set	15862
  1131  0000                     _U1BRGL	set	15861
  1132  0000                     _U1CON2	set	15860
  1133  0000                     _U1CON1	set	15859
  1134  0000                     _U1CON0	set	15858
  1135  0000                     _U1P3H	set	15857
  1136  0000                     _U1P3L	set	15856
  1137  0000                     _U1P2H	set	15855
  1138  0000                     _U1P2L	set	15854
  1139  0000                     _U1P1H	set	15853
  1140  0000                     _U1P1L	set	15852
  1141  0000                     _FVRCON	set	16065
  1142  0000                     _ADFLTRL	set	16102
  1143  0000                     _ADFLTRH	set	16103
  1144  0000                     _ADCON0bits	set	16120
  1145  0000                     _ADCON0	set	16120
  1146  0000                     _ADCLK	set	16127
  1147  0000                     _ADACT	set	16126
  1148  0000                     _ADREF	set	16125
  1149  0000                     _ADSTAT	set	16124
  1150  0000                     _ADCON3	set	16123
  1151  0000                     _ADCON2	set	16122
  1152  0000                     _ADCON1	set	16121
  1153  0000                     _ADPREH	set	16119
  1154  0000                     _ADPREL	set	16118
  1155  0000                     _ADCAP	set	16117
  1156  0000                     _ADACQH	set	16116
  1157  0000                     _ADACQL	set	16115
  1158  0000                     _ADPCH	set	16113
  1159  0000                     _ADRPT	set	16108
  1160  0000                     _ADACCU	set	16106
  1161  0000                     _ADSTPTH	set	16101
  1162  0000                     _ADSTPTL	set	16100
  1163  0000                     _ADUTHH	set	16097
  1164  0000                     _ADUTHL	set	16096
  1165  0000                     _ADLTHH	set	16095
  1166  0000                     _ADLTHL	set	16094
  1167  0000                     _CCPTMRS1bits	set	16223
  1168  0000                     _PORTFbits	set	16335
  1169  0000                     _LATCbits	set	16316
  1170  0000                     _LATDbits	set	16317
  1171  0000                     _PORTBbits	set	16331
  1172  0000                     _T3CONbits	set	16294
  1173  0000                     _T3CON	set	16294
  1174  0000                     _TMR3L	set	16292
  1175  0000                     _TMR3H	set	16293
  1176  0000                     _T3CLK	set	16297
  1177  0000                     _T3GATE	set	16296
  1178  0000                     _T3GCON	set	16295
  1179  0000                     _T2CON	set	16300
  1180  0000                     _T2TMR	set	16298
  1181  0000                     _T2PR	set	16299
  1182  0000                     _T2RST	set	16303
  1183  0000                     _T2HLT	set	16301
  1184  0000                     _T2CLKCON	set	16302
  1185  0000                     _PWM8DCL	set	16224
  1186  0000                     _PWM8DCH	set	16225
  1187  0000                     _PWM8CON	set	16226
  1188  0000                     _LATEbits	set	16318
  1189  0000                     _T5CONbits	set	16282
  1190  0000                     _T5CON	set	16282
  1191  0000                     _TMR5L	set	16280
  1192  0000                     _TMR5H	set	16281
  1193  0000                     _T5CLK	set	16285
  1194  0000                     _T5GATE	set	16284
  1195  0000                     _T5GCON	set	16283
  1196  0000                     _T6CON	set	16276
  1197  0000                     _T6TMR	set	16274
  1198  0000                     _T6PR	set	16275
  1199  0000                     _T6RST	set	16279
  1200  0000                     _T6HLT	set	16277
  1201  0000                     _T6CLKCON	set	16278
  1202  0000                     _TRISD	set	16325
  1203  0000                     _TRISC	set	16324
  1204  0000                     _TRISB	set	16323
  1205  0000                     _TRISA	set	16322
  1206  0000                     _TRISF	set	16327
  1207  0000                     _TRISE	set	16326
  1208  0000                     _LATC	set	16316
  1209  0000                     _LATB	set	16315
  1210  0000                     _LATF	set	16319
  1211  0000                     _LATA	set	16314
  1212  0000                     _LATD	set	16317
  1213  0000                     _LATE	set	16318
  1214  0000                     _IVTLOCKbits	set	16340
  1215  0000                     _IVTLOCK	set	16340
  1216  0000                     _INTCON0bits	set	16338
  1217  0000                     _GIE	set	130711
  1218  00FE41                     
  1219                           ; BSR set to: 57
  1220  00FE41  20                 	db	32
  1221  00FE42  4D                 	db	77	;'M'
  1222  00FE43  65                 	db	101	;'e'
  1223  00FE44  73                 	db	115	;'s'
  1224  00FE45  67                 	db	103	;'g'
  1225  00FE46  20                 	db	32
  1226  00FE47  25                 	db	37
  1227  00FE48  64                 	db	100	;'d'
  1228  00FE49  20                 	db	32
  1229  00FE4A  53                 	db	83	;'S'
  1230  00FE4B  74                 	db	116	;'t'
  1231  00FE4C  61                 	db	97	;'a'
  1232  00FE4D  63                 	db	99	;'c'
  1233  00FE4E  6B                 	db	107	;'k'
  1234  00FE4F  20                 	db	32
  1235  00FE50  25                 	db	37
  1236  00FE51  64                 	db	100	;'d'
  1237  00FE52  20                 	db	32
  1238  00FE53  20                 	db	32
  1239  00FE54  20                 	db	32
  1240  00FE55  20                 	db	32
  1241  00FE56  20                 	db	32
  1242  00FE57  20                 	db	32
  1243  00FE58  00                 	db	0
  1244  00FE59                     STR_19:
  1245                           
  1246                           ; BSR set to: 57
  1247  00FE59  42                 	db	66	;'B'
  1248  00FE5A  41                 	db	65	;'A'
  1249  00FE5B  48                 	db	72	;'H'
  1250  00FE5C  20                 	db	32
  1251  00FE5D  25                 	db	37
  1252  00FE5E  33                 	db	51	;'3'
  1253  00FE5F  2E                 	db	46
  1254  00FE60  32                 	db	50	;'2'
  1255  00FE61  66                 	db	102	;'f'
  1256  00FE62  20                 	db	32
  1257  00FE63  50                 	db	80	;'P'
  1258  00FE64  25                 	db	37
  1259  00FE65  33                 	db	51	;'3'
  1260  00FE66  2E                 	db	46
  1261  00FE67  32                 	db	50	;'2'
  1262  00FE68  66                 	db	102	;'f'
  1263  00FE69  20                 	db	32
  1264  00FE6A  20                 	db	32
  1265  00FE6B  20                 	db	32
  1266  00FE6C  00                 	db	0
  1267  00FE6D                     STR_39:
  1268                           
  1269                           ; BSR set to: 57
  1270  00FE6D  20                 	db	32
  1271  00FE6E  20                 	db	32
  1272  00FE6F  20                 	db	32
  1273  00FE70  20                 	db	32
  1274  00FE71  20                 	db	32
  1275  00FE72  20                 	db	32
  1276  00FE73  20                 	db	32
  1277  00FE74  20                 	db	32
  1278  00FE75  20                 	db	32
  1279  00FE76  20                 	db	32
  1280  00FE77  20                 	db	32
  1281  00FE78  20                 	db	32
  1282  00FE79  20                 	db	32
  1283  00FE7A  20                 	db	32
  1284  00FE7B  20                 	db	32
  1285  00FE7C  20                 	db	32
  1286  00FE7D  20                 	db	32
  1287  00FE7E  20                 	db	32
  1288  00FE7F  00                 	db	0
  1289  00FE80                     STR_29:
  1290                           
  1291                           ; BSR set to: 57
  1292  00FE80  48                 	db	72	;'H'
  1293  00FE81  45                 	db	69	;'E'
  1294  00FE82  4C                 	db	76	;'L'
  1295  00FE83  50                 	db	80	;'P'
  1296  00FE84  20                 	db	32
  1297  00FE85  25                 	db	37
  1298  00FE86  73                 	db	115	;'s'
  1299  00FE87  20                 	db	32
  1300  00FE88  20                 	db	32
  1301  00FE89  20                 	db	32
  1302  00FE8A  20                 	db	32
  1303  00FE8B  20                 	db	32
  1304  00FE8C  20                 	db	32
  1305  00FE8D  20                 	db	32
  1306  00FE8E  20                 	db	32
  1307  00FE8F  20                 	db	32
  1308  00FE90  20                 	db	32
  1309  00FE91  20                 	db	32
  1310  00FE92  00                 	db	0
  1311  00FE93                     
  1312                           ; BSR set to: 57
  1313  00FE93  44                 	db	68	;'D'
  1314  00FE94  49                 	db	73	;'I'
  1315  00FE95  53                 	db	83	;'S'
  1316  00FE96  50                 	db	80	;'P'
  1317  00FE97  4C                 	db	76	;'L'
  1318  00FE98  41                 	db	65	;'A'
  1319  00FE99  59                 	db	89	;'Y'
  1320  00FE9A  20                 	db	32
  1321  00FE9B  25                 	db	37
  1322  00FE9C  73                 	db	115	;'s'
  1323  00FE9D  20                 	db	32
  1324  00FE9E  20                 	db	32
  1325  00FE9F  20                 	db	32
  1326  00FEA0  20                 	db	32
  1327  00FEA1  20                 	db	32
  1328  00FEA2  20                 	db	32
  1329  00FEA3  20                 	db	32
  1330  00FEA4  20                 	db	32
  1331  00FEA5  00                 	db	0
  1332  00FEA6                     STR_20:
  1333                           
  1334                           ; BSR set to: 57
  1335  00FEA6  53                 	db	83	;'S'
  1336  00FEA7  4F                 	db	79	;'O'
  1337  00FEA8  43                 	db	67	;'C'
  1338  00FEA9  20                 	db	32
  1339  00FEAA  25                 	db	37
  1340  00FEAB  64                 	db	100	;'d'
  1341  00FEAC  20                 	db	32
  1342  00FEAD  52                 	db	82	;'R'
  1343  00FEAE  55                 	db	85	;'U'
  1344  00FEAF  4E                 	db	78	;'N'
  1345  00FEB0  20                 	db	32
  1346  00FEB1  25                 	db	37
  1347  00FEB2  64                 	db	100	;'d'
  1348  00FEB3  20                 	db	32
  1349  00FEB4  20                 	db	32
  1350  00FEB5  20                 	db	32
  1351  00FEB6  20                 	db	32
  1352  00FEB7  20                 	db	32
  1353  00FEB8  00                 	db	0
  1354  00FEB9                     STR_12:
  1355                           
  1356                           ; BSR set to: 57
  1357  00FEB9  50                 	db	80	;'P'
  1358  00FEBA  56                 	db	86	;'V'
  1359  00FEBB  20                 	db	32
  1360  00FEBC  20                 	db	32
  1361  00FEBD  20                 	db	32
  1362  00FEBE  50                 	db	80	;'P'
  1363  00FEBF  57                 	db	87	;'W'
  1364  00FEC0  52                 	db	82	;'R'
  1365  00FEC1  20                 	db	32
  1366  00FEC2  25                 	db	37
  1367  00FEC3  33                 	db	51	;'3'
  1368  00FEC4  2E                 	db	46
  1369  00FEC5  32                 	db	50	;'2'
  1370  00FEC6  66                 	db	102	;'f'
  1371  00FEC7  20                 	db	32
  1372  00FEC8  20                 	db	32
  1373  00FEC9  20                 	db	32
  1374  00FECA  20                 	db	32
  1375  00FECB  00                 	db	0
  1376  00FECC                     STR_14:
  1377                           
  1378                           ; BSR set to: 57
  1379  00FECC  49                 	db	73	;'I'
  1380  00FECD  4E                 	db	78	;'N'
  1381  00FECE  56                 	db	86	;'V'
  1382  00FECF  20                 	db	32
  1383  00FED0  20                 	db	32
  1384  00FED1  50                 	db	80	;'P'
  1385  00FED2  57                 	db	87	;'W'
  1386  00FED3  52                 	db	82	;'R'
  1387  00FED4  20                 	db	32
  1388  00FED5  25                 	db	37
  1389  00FED6  33                 	db	51	;'3'
  1390  00FED7  2E                 	db	46
  1391  00FED8  32                 	db	50	;'2'
  1392  00FED9  66                 	db	102	;'f'
  1393  00FEDA  20                 	db	32
  1394  00FEDB  20                 	db	32
  1395  00FEDC  20                 	db	32
  1396  00FEDD  20                 	db	32
  1397  00FEDE  00                 	db	0
  1398  00FEDF                     STR_13:
  1399                           
  1400                           ; BSR set to: 57
  1401  00FEDF  4C                 	db	76	;'L'
  1402  00FEE0  4F                 	db	79	;'O'
  1403  00FEE1  41                 	db	65	;'A'
  1404  00FEE2  44                 	db	68	;'D'
  1405  00FEE3  20                 	db	32
  1406  00FEE4  50                 	db	80	;'P'
  1407  00FEE5  57                 	db	87	;'W'
  1408  00FEE6  52                 	db	82	;'R'
  1409  00FEE7  20                 	db	32
  1410  00FEE8  25                 	db	37
  1411  00FEE9  33                 	db	51	;'3'
  1412  00FEEA  2E                 	db	46
  1413  00FEEB  32                 	db	50	;'2'
  1414  00FEEC  66                 	db	102	;'f'
  1415  00FEED  20                 	db	32
  1416  00FEEE  20                 	db	32
  1417  00FEEF  20                 	db	32
  1418  00FEF0  20                 	db	32
  1419  00FEF1  00                 	db	0
  1420  00FEF2                     STR_18:
  1421                           
  1422                           ; BSR set to: 57
  1423  00FEF2  42                 	db	66	;'B'
  1424  00FEF3  41                 	db	65	;'A'
  1425  00FEF4  54                 	db	84	;'T'
  1426  00FEF5  54                 	db	84	;'T'
  1427  00FEF6  20                 	db	32
  1428  00FEF7  50                 	db	80	;'P'
  1429  00FEF8  57                 	db	87	;'W'
  1430  00FEF9  52                 	db	82	;'R'
  1431  00FEFA  20                 	db	32
  1432  00FEFB  25                 	db	37
  1433  00FEFC  33                 	db	51	;'3'
  1434  00FEFD  2E                 	db	46
  1435  00FEFE  32                 	db	50	;'2'
  1436  00FEFF  66                 	db	102	;'f'
  1437  00FF00  20                 	db	32
  1438  00FF01  20                 	db	32
  1439  00FF02  20                 	db	32
  1440  00FF03  20                 	db	32
  1441  00FF04  00                 	db	0
  1442  00FF05                     STR_16:
  1443                           
  1444                           ; BSR set to: 57
  1445  00FF05  42                 	db	66	;'B'
  1446  00FF06  56                 	db	86	;'V'
  1447  00FF07  20                 	db	32
  1448  00FF08  25                 	db	37
  1449  00FF09  32                 	db	50	;'2'
  1450  00FF0A  2E                 	db	46
  1451  00FF0B  32                 	db	50	;'2'
  1452  00FF0C  66                 	db	102	;'f'
  1453  00FF0D  20                 	db	32
  1454  00FF0E  42                 	db	66	;'B'
  1455  00FF0F  41                 	db	65	;'A'
  1456  00FF10  20                 	db	32
  1457  00FF11  25                 	db	37
  1458  00FF12  32                 	db	50	;'2'
  1459  00FF13  2E                 	db	46
  1460  00FF14  32                 	db	50	;'2'
  1461  00FF15  66                 	db	102	;'f'
  1462  00FF16  20                 	db	32
  1463  00FF17  00                 	db	0
  1464  00FF18                     STR_17:
  1465                           
  1466                           ; BSR set to: 57
  1467  00FF18  43                 	db	67	;'C'
  1468  00FF19  56                 	db	86	;'V'
  1469  00FF1A  20                 	db	32
  1470  00FF1B  25                 	db	37
  1471  00FF1C  32                 	db	50	;'2'
  1472  00FF1D  2E                 	db	46
  1473  00FF1E  32                 	db	50	;'2'
  1474  00FF1F  66                 	db	102	;'f'
  1475  00FF20  20                 	db	32
  1476  00FF21  4C                 	db	76	;'L'
  1477  00FF22  41                 	db	65	;'A'
  1478  00FF23  20                 	db	32
  1479  00FF24  25                 	db	37
  1480  00FF25  32                 	db	50	;'2'
  1481  00FF26  2E                 	db	46
  1482  00FF27  32                 	db	50	;'2'
  1483  00FF28  66                 	db	102	;'f'
  1484  00FF29  20                 	db	32
  1485  00FF2A  00                 	db	0
  1486  00FF2B                     STR_15:
  1487                           
  1488                           ; BSR set to: 57
  1489  00FF2B  50                 	db	80	;'P'
  1490  00FF2C  56                 	db	86	;'V'
  1491  00FF2D  20                 	db	32
  1492  00FF2E  25                 	db	37
  1493  00FF2F  32                 	db	50	;'2'
  1494  00FF30  2E                 	db	46
  1495  00FF31  32                 	db	50	;'2'
  1496  00FF32  66                 	db	102	;'f'
  1497  00FF33  20                 	db	32
  1498  00FF34  50                 	db	80	;'P'
  1499  00FF35  41                 	db	65	;'A'
  1500  00FF36  20                 	db	32
  1501  00FF37  25                 	db	37
  1502  00FF38  32                 	db	50	;'2'
  1503  00FF39  2E                 	db	46
  1504  00FF3A  32                 	db	50	;'2'
  1505  00FF3B  66                 	db	102	;'f'
  1506  00FF3C  20                 	db	32
  1507  00FF3D  00                 	db	0
  1508  00FF3E                     STR_8:
  1509                           
  1510                           ; BSR set to: 57
  1511  00FF3E  20                 	db	32
  1512  00FF3F  56                 	db	86	;'V'
  1513  00FF40  54                 	db	84	;'T'
  1514  00FF41  45                 	db	69	;'E'
  1515  00FF42  52                 	db	82	;'R'
  1516  00FF43  4D                 	db	77	;'M'
  1517  00FF44  20                 	db	32
  1518  00FF45  23                 	db	35
  1519  00FF46  32                 	db	50	;'2'
  1520  00FF47  20                 	db	32
  1521  00FF48  20                 	db	32
  1522  00FF49  20                 	db	32
  1523  00FF4A  20                 	db	32
  1524  00FF4B  20                 	db	32
  1525  00FF4C  20                 	db	32
  1526  00FF4D  20                 	db	32
  1527  00FF4E  00                 	db	0
  1528  00FF4F                     STR_4:
  1529                           
  1530                           ; BSR set to: 57
  1531  00FF4F  20                 	db	32
  1532  00FF50  4E                 	db	78	;'N'
  1533  00FF51  53                 	db	83	;'S'
  1534  00FF52  41                 	db	65	;'A'
  1535  00FF53  53                 	db	83	;'S'
  1536  00FF54  50                 	db	80	;'P'
  1537  00FF55  4F                 	db	79	;'O'
  1538  00FF56  4F                 	db	79	;'O'
  1539  00FF57  4B                 	db	75	;'K'
  1540  00FF58  20                 	db	32
  1541  00FF59  20                 	db	32
  1542  00FF5A  20                 	db	32
  1543  00FF5B  20                 	db	32
  1544  00FF5C  20                 	db	32
  1545  00FF5D  20                 	db	32
  1546  00FF5E  20                 	db	32
  1547  00FF5F  00                 	db	0
  1548  00FF60                     STR_1:
  1549                           
  1550                           ; BSR set to: 57
  1551  00FF60  20                 	db	32
  1552  00FF61  4D                 	db	77	;'M'
  1553  00FF62  42                 	db	66	;'B'
  1554  00FF63  4D                 	db	77	;'M'
  1555  00FF64  43                 	db	67	;'C'
  1556  00FF65  20                 	db	32
  1557  00FF66  53                 	db	83	;'S'
  1558  00FF67  4F                 	db	79	;'O'
  1559  00FF68  4C                 	db	76	;'L'
  1560  00FF69  41                 	db	65	;'A'
  1561  00FF6A  52                 	db	82	;'R'
  1562  00FF6B  4D                 	db	77	;'M'
  1563  00FF6C  4F                 	db	79	;'O'
  1564  00FF6D  4E                 	db	78	;'N'
  1565  00FF6E  20                 	db	32
  1566  00FF6F  20                 	db	32
  1567  00FF70  00                 	db	0
  1568  00FF71                     STR_5:
  1569                           
  1570                           ; BSR set to: 57
  1571  00FF71  20                 	db	32
  1572  00FF72  53                 	db	83	;'S'
  1573  00FF73  45                 	db	69	;'E'
  1574  00FF74  51                 	db	81	;'Q'
  1575  00FF75  55                 	db	85	;'U'
  1576  00FF76  45                 	db	69	;'E'
  1577  00FF77  4E                 	db	78	;'N'
  1578  00FF78  43                 	db	67	;'C'
  1579  00FF79  45                 	db	69	;'E'
  1580  00FF7A  20                 	db	32
  1581  00FF7B  54                 	db	84	;'T'
  1582  00FF7C  45                 	db	69	;'E'
  1583  00FF7D  53                 	db	83	;'S'
  1584  00FF7E  54                 	db	84	;'T'
  1585  00FF7F  20                 	db	32
  1586  00FF80  20                 	db	32
  1587  00FF81  00                 	db	0
  1588  00FF82                     STR_11:
  1589                           
  1590                           ; BSR set to: 57
  1591  00FF82  25                 	db	37
  1592  00FF83  64                 	db	100	;'d'
  1593  00FF84  20                 	db	32
  1594  00FF85  25                 	db	37
  1595  00FF86  32                 	db	50	;'2'
  1596  00FF87  2E                 	db	46
  1597  00FF88  34                 	db	52	;'4'
  1598  00FF89  66                 	db	102	;'f'
  1599  00FF8A  2C                 	db	44
  1600  00FF8B  20                 	db	32
  1601  00FF8C  25                 	db	37
  1602  00FF8D  64                 	db	100	;'d'
  1603  00FF8E  20                 	db	32
  1604  00FF8F  20                 	db	32
  1605  00FF90  20                 	db	32
  1606  00FF91  23                 	db	35
  1607  00FF92  00                 	db	0
  1608  00FF93                     STR_9:
  1609                           
  1610                           ; BSR set to: 57
  1611  00FF93  25                 	db	37
  1612  00FF94  64                 	db	100	;'d'
  1613  00FF95  20                 	db	32
  1614  00FF96  25                 	db	37
  1615  00FF97  32                 	db	50	;'2'
  1616  00FF98  2E                 	db	46
  1617  00FF99  34                 	db	52	;'4'
  1618  00FF9A  66                 	db	102	;'f'
  1619  00FF9B  20                 	db	32
  1620  00FF9C  20                 	db	32
  1621  00FF9D  20                 	db	32
  1622  00FF9E  25                 	db	37
  1623  00FF9F  64                 	db	100	;'d'
  1624  00FFA0  20                 	db	32
  1625  00FFA1  20                 	db	32
  1626  00FFA2  00                 	db	0
  1627  00FFA3                     STR_33:
  1628                           
  1629                           ; BSR set to: 57
  1630  00FFA3  76                 	db	118	;'v'
  1631  00FFA4  74                 	db	116	;'t'
  1632  00FFA5  65                 	db	101	;'e'
  1633  00FFA6  72                 	db	114	;'r'
  1634  00FFA7  6D                 	db	109	;'m'
  1635  00FFA8  20                 	db	32
  1636  00FFA9  25                 	db	37
  1637  00FFAA  78                 	db	120	;'x'
  1638  00FFAB  3A                 	db	58	;':'
  1639  00FFAC  25                 	db	37
  1640  00FFAD  78                 	db	120	;'x'
  1641  00FFAE  20                 	db	32
  1642  00FFAF  20                 	db	32
  1643  00FFB0  20                 	db	32
  1644  00FFB1  00                 	db	0
  1645  00FFB2                     STR_2:
  1646                           
  1647                           ; BSR set to: 57
  1648  00FFB2  20                 	db	32
  1649  00FFB3  56                 	db	86	;'V'
  1650  00FFB4  65                 	db	101	;'e'
  1651  00FFB5  72                 	db	114	;'r'
  1652  00FFB6  73                 	db	115	;'s'
  1653  00FFB7  69                 	db	105	;'i'
  1654  00FFB8  6F                 	db	111	;'o'
  1655  00FFB9  6E                 	db	110	;'n'
  1656  00FFBA  20                 	db	32
  1657  00FFBB  25                 	db	37
  1658  00FFBC  73                 	db	115	;'s'
  1659  00FFBD  20                 	db	32
  1660  00FFBE  20                 	db	32
  1661  00FFBF  20                 	db	32
  1662  00FFC0  00                 	db	0
  1663  00FFC1                     STR_27:
  1664                           
  1665                           ; BSR set to: 57
  1666  00FFC1  44                 	db	68	;'D'
  1667  00FFC2  65                 	db	101	;'e'
  1668  00FFC3  63                 	db	99	;'c'
  1669  00FFC4  20                 	db	32
  1670  00FFC5  20                 	db	32
  1671  00FFC6  34                 	db	52	;'4'
  1672  00FFC7  20                 	db	32
  1673  00FFC8  32                 	db	50	;'2'
  1674  00FFC9  30                 	db	48	;'0'
  1675  00FFCA  31                 	db	49	;'1'
  1676  00FFCB  39                 	db	57	;'9'
  1677  00FFCC  00                 	db	0
  1678  00FFCD                     STR_31:
  1679                           
  1680                           ; BSR set to: 57
  1681  00FFCD  25                 	db	37
  1682  00FFCE  73                 	db	115	;'s'
  1683  00FFCF  20                 	db	32
  1684  00FFD0  20                 	db	32
  1685  00FFD1  20                 	db	32
  1686  00FFD2  20                 	db	32
  1687  00FFD3  20                 	db	32
  1688  00FFD4  20                 	db	32
  1689  00FFD5  20                 	db	32
  1690  00FFD6  00                 	db	0
  1691  00FFD7                     STR_28:
  1692                           
  1693                           ; BSR set to: 57
  1694  00FFD7  32                 	db	50	;'2'
  1695  00FFD8  32                 	db	50	;'2'
  1696  00FFD9  3A                 	db	58	;':'
  1697  00FFDA  31                 	db	49	;'1'
  1698  00FFDB  31                 	db	49	;'1'
  1699  00FFDC  3A                 	db	58	;':'
  1700  00FFDD  32                 	db	50	;'2'
  1701  00FFDE  37                 	db	55	;'7'
  1702  00FFDF  00                 	db	0
  1703  00FFE0                     STR_3:
  1704                           
  1705                           ; BSR set to: 57
  1706  00FFE0  30                 	db	48	;'0'
  1707  00FFE1  2E                 	db	46
  1708  00FFE2  39                 	db	57	;'9'
  1709  00FFE3  39                 	db	57	;'9'
  1710  00FFE4  38                 	db	56	;'8'
  1711  00FFE5  00                 	db	0
  1712  00FFE6                     STR_46:
  1713                           
  1714                           ; BSR set to: 57
  1715  00FFE6  49                 	db	73	;'I'
  1716  00FFE7  4E                 	db	78	;'N'
  1717  00FFE8  46                 	db	70	;'F'
  1718  00FFE9  00                 	db	0
  1719  00FFEA                     STR_50:
  1720                           
  1721                           ; BSR set to: 57
  1722  00FFEA  4E                 	db	78	;'N'
  1723  00FFEB  41                 	db	65	;'A'
  1724  00FFEC  4E                 	db	78	;'N'
  1725  00FFED  00                 	db	0
  1726  00FFEE                     STR_47:
  1727                           
  1728                           ; BSR set to: 57
  1729  00FFEE  69                 	db	105	;'i'
  1730  00FFEF  6E                 	db	110	;'n'
  1731  00FFF0  66                 	db	102	;'f'
  1732  00FFF1  00                 	db	0
  1733  00FFF2                     STR_51:
  1734                           
  1735                           ; BSR set to: 57
  1736  00FFF2  6E                 	db	110	;'n'
  1737  00FFF3  61                 	db	97	;'a'
  1738  00FFF4  6E                 	db	110	;'n'
  1739  00FFF5  00                 	db	0
  1740  00FFF6                     STR_54:
  1741                           
  1742                           ; BSR set to: 57
  1743  00FFF6  6C                 	db	108	;'l'
  1744  00FFF7  66                 	db	102	;'f'
  1745  00FFF8  00                 	db	0
  1746  00FFF9                     STR_25:
  1747                           
  1748                           ; BSR set to: 57
  1749  00FFF9  25                 	db	37
  1750  00FFFA  63                 	db	99	;'c'
  1751  00FFFB  00                 	db	0
  1752  00FFFC                     STR_24:
  1753                           
  1754                           ; BSR set to: 57
  1755  00FFFC  25                 	db	37
  1756  00FFFD  73                 	db	115	;'s'
  1757  00FFFE  00                 	db	0
  1758  0000                     
  1759                           ; #config settings
  1760  00FFFF  00                 	db	0	; dummy byte at the end
  1761  0000                     
  1762                           	psect	cinit
  1763  0175FC                     __pcinit:
  1764                           	opt callstack 0
  1765  0175FC                     start_initialization:
  1766                           	opt callstack 0
  1767  0175FC                     __initialization:
  1768                           	opt callstack 0
  1769                           
  1770                           ; Initialize objects allocated to BANK2 (188 bytes)
  1771                           ; load TBLPTR registers with __pidataBANK2
  1772  0175FC  0E4A               	movlw	low __pidataBANK2
  1773  0175FE  6EF6               	movwf	tblptrl,c
  1774  017600  0E7A               	movlw	high __pidataBANK2
  1775  017602  6EF7               	movwf	tblptrh,c
  1776  017604  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1777  017606  6EF8               	movwf	tblptru,c
  1778  017608  EE00  F200         	lfsr	0,__pdataBANK2
  1779  01760C  EE20 F0BC          	lfsr	2,188
  1780  017610                     copy_data0:
  1781  017610  0009               	tblrd		*+
  1782  017612  006F FFD7 FFEE     	movff	tablat,postinc0
  1783  017618  50DD               	movf	postdec2,w,c
  1784  01761A  50D9               	movf	fsr2l,w,c
  1785  01761C  E1F9               	bnz	copy_data0
  1786                           
  1787                           ; Initialize objects allocated to BANK1 (181 bytes)
  1788                           ; load TBLPTR registers with __pidataBANK1
  1789  01761E  0EBE               	movlw	low __pidataBANK1
  1790  017620  6EF6               	movwf	tblptrl,c
  1791  017622  0E7B               	movlw	high __pidataBANK1
  1792  017624  6EF7               	movwf	tblptrh,c
  1793  017626  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1794  017628  6EF8               	movwf	tblptru,c
  1795  01762A  EE00  F100         	lfsr	0,__pdataBANK1
  1796  01762E  EE20 F0B5          	lfsr	2,181
  1797  017632                     copy_data1:
  1798  017632  0009               	tblrd		*+
  1799  017634  006F FFD7 FFEE     	movff	tablat,postinc0
  1800  01763A  50DD               	movf	postdec2,w,c
  1801  01763C  50D9               	movf	fsr2l,w,c
  1802  01763E  E1F9               	bnz	copy_data1
  1803                           
  1804                           ; Initialize objects allocated to BANK0 (54 bytes)
  1805                           ; load TBLPTR registers with __pidataBANK0
  1806  017640  0EA2               	movlw	low __pidataBANK0
  1807  017642  6EF6               	movwf	tblptrl,c
  1808  017644  0E8C               	movlw	high __pidataBANK0
  1809  017646  6EF7               	movwf	tblptrh,c
  1810  017648  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1811  01764A  6EF8               	movwf	tblptru,c
  1812  01764C  EE00  F0C3         	lfsr	0,__pdataBANK0
  1813  017650  EE20 F036          	lfsr	2,54
  1814  017654                     copy_data2:
  1815  017654  0009               	tblrd		*+
  1816  017656  006F FFD7 FFEE     	movff	tablat,postinc0
  1817  01765C  50DD               	movf	postdec2,w,c
  1818  01765E  50D9               	movf	fsr2l,w,c
  1819  017660  E1F9               	bnz	copy_data2
  1820                           
  1821                           ; Clear objects allocated to BIGRAM (290 bytes)
  1822  017662  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  1823  017666  EE20 F122          	lfsr	2,290
  1824  01766A                     clear_0:
  1825  01766A  6AEE               	clrf	postinc0,c
  1826  01766C  50DD               	movf	postdec2,w,c
  1827  01766E  50D9               	movf	fsr2l,w,c
  1828  017670  E1FC               	bnz	clear_0
  1829  017672  50DA               	movf	fsr2h,w,c
  1830  017674  E1FA               	bnz	clear_0
  1831                           
  1832                           ; Clear objects allocated to BANK6 (255 bytes)
  1833  017676  EE01  F200         	lfsr	0,__pbssBANK6
  1834  01767A  EE20 F0FF          	lfsr	2,255
  1835  01767E                     clear_1:
  1836  01767E  6AEE               	clrf	postinc0,c
  1837  017680  50DD               	movf	postdec2,w,c
  1838  017682  50D9               	movf	fsr2l,w,c
  1839  017684  E1FC               	bnz	clear_1
  1840  017686  50DA               	movf	fsr2h,w,c
  1841  017688  E1FA               	bnz	clear_1
  1842                           
  1843                           ; Clear objects allocated to BANK5 (255 bytes)
  1844  01768A  EE01  F100         	lfsr	0,__pbssBANK5
  1845  01768E  EE20 F0FF          	lfsr	2,255
  1846  017692                     clear_2:
  1847  017692  6AEE               	clrf	postinc0,c
  1848  017694  50DD               	movf	postdec2,w,c
  1849  017696  50D9               	movf	fsr2l,w,c
  1850  017698  E1FC               	bnz	clear_2
  1851  01769A  50DA               	movf	fsr2h,w,c
  1852  01769C  E1FA               	bnz	clear_2
  1853                           
  1854                           ; Clear objects allocated to BANK4 (134 bytes)
  1855  01769E  EE01  F000         	lfsr	0,__pbssBANK4
  1856  0176A2  0E86               	movlw	134
  1857  0176A4                     clear_3:
  1858  0176A4  6AEE               	clrf	postinc0,c
  1859  0176A6  06E8               	decf	wreg,f,c
  1860  0176A8  E1FD               	bnz	clear_3
  1861                           
  1862                           ; Clear objects allocated to BANK3 (228 bytes)
  1863  0176AA  EE00  F300         	lfsr	0,__pbssBANK3
  1864  0176AE  0EE4               	movlw	228
  1865  0176B0                     clear_4:
  1866  0176B0  6AEE               	clrf	postinc0,c
  1867  0176B2  06E8               	decf	wreg,f,c
  1868  0176B4  E1FD               	bnz	clear_4
  1869                           
  1870                           ; Clear objects allocated to BANK2 (64 bytes)
  1871  0176B6  EE00  F2BC         	lfsr	0,__pbssBANK2
  1872  0176BA  0E40               	movlw	64
  1873  0176BC                     clear_5:
  1874  0176BC  6AEE               	clrf	postinc0,c
  1875  0176BE  06E8               	decf	wreg,f,c
  1876  0176C0  E1FD               	bnz	clear_5
  1877                           
  1878                           ; Clear objects allocated to BANK1 (32 bytes)
  1879  0176C2  EE00  F1B5         	lfsr	0,__pbssBANK1
  1880  0176C6  0E20               	movlw	32
  1881  0176C8                     clear_6:
  1882  0176C8  6AEE               	clrf	postinc0,c
  1883  0176CA  06E8               	decf	wreg,f,c
  1884  0176CC  E1FD               	bnz	clear_6
  1885                           
  1886                           ; Clear objects allocated to BANK0 (99 bytes)
  1887  0176CE  EE00  F060         	lfsr	0,__pbssBANK0
  1888  0176D2  0E63               	movlw	99
  1889  0176D4                     clear_7:
  1890  0176D4  6AEE               	clrf	postinc0,c
  1891  0176D6  06E8               	decf	wreg,f,c
  1892  0176D8  E1FD               	bnz	clear_7
  1893                           
  1894                           ; Clear objects allocated to COMRAM (36 bytes)
  1895  0176DA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1896  0176DE  0E24               	movlw	36
  1897  0176E0                     clear_8:
  1898  0176E0  6AEE               	clrf	postinc0,c
  1899  0176E2  06E8               	decf	wreg,f,c
  1900  0176E4  E1FD               	bnz	clear_8
  1901                           
  1902                           ;
  1903                           ; Setup IVTBASE
  1904                           ;
  1905  0176E6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1906  0176E8  6ED5               	movwf	213,c
  1907  0176EA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1908  0176EC  6ED6               	movwf	214,c
  1909  0176EE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1910  0176F0  6ED7               	movwf	215,c
  1911  0176F2                     end_of_initialization:
  1912                           	opt callstack 0
  1913  0176F2                     __end_of__initialization:
  1914                           	opt callstack 0
  1915  0176F2  0100               	movlb	0
  1916  0176F4  EFC1  F08E         	goto	_main	;jump to C main() function
  1917                           
  1918                           	psect	bssCOMRAM
  1919  000001                     __pbssCOMRAM:
  1920                           	opt callstack 0
  1921  000001                     _UART2_RxInterruptHandler:
  1922                           	opt callstack 0
  1923  000001                     	ds	3
  1924  000004                     _INT1_InterruptHandler:
  1925                           	opt callstack 0
  1926  000004                     	ds	3
  1927  000007                     _INT0_InterruptHandler:
  1928                           	opt callstack 0
  1929  000007                     	ds	3
  1930  00000A                     _width:
  1931                           	opt callstack 0
  1932  00000A                     	ds	2
  1933  00000C                     _prec:
  1934                           	opt callstack 0
  1935  00000C                     	ds	2
  1936  00000E                     _flags:
  1937                           	opt callstack 0
  1938  00000E                     	ds	2
  1939  000010                     TMR3_ISR@CountCallBack:
  1940                           	opt callstack 0
  1941  000010                     	ds	2
  1942  000012                     _timer3ReloadVal:
  1943                           	opt callstack 0
  1944  000012                     	ds	2
  1945  000014                     TMR5_ISR@CountCallBack:
  1946                           	opt callstack 0
  1947  000014                     	ds	2
  1948  000016                     _timer5ReloadVal:
  1949                           	opt callstack 0
  1950  000016                     	ds	2
  1951  000018                     _mode_sw:
  1952                           	opt callstack 0
  1953  000018                     	ds	1
  1954  000019                     _uart2RxCount:
  1955                           	opt callstack 0
  1956  000019                     	ds	1
  1957  00001A                     _uart2RxTail:
  1958                           	opt callstack 0
  1959  00001A                     	ds	1
  1960  00001B                     _uart2RxHead:
  1961                           	opt callstack 0
  1962  00001B                     	ds	1
  1963  00001C                     _uart2TxBufferRemaining:
  1964                           	opt callstack 0
  1965  00001C                     	ds	1
  1966  00001D                     _uart2TxTail:
  1967                           	opt callstack 0
  1968  00001D                     	ds	1
  1969  00001E                     _uart2TxHead:
  1970                           	opt callstack 0
  1971  00001E                     	ds	1
  1972  00001F                     _uart1RxCount:
  1973                           	opt callstack 0
  1974  00001F                     	ds	1
  1975  000020                     _uart1RxTail:
  1976                           	opt callstack 0
  1977  000020                     	ds	1
  1978  000021                     _uart1RxHead:
  1979                           	opt callstack 0
  1980  000021                     	ds	1
  1981  000022                     _uart1TxBufferRemaining:
  1982                           	opt callstack 0
  1983  000022                     	ds	1
  1984  000023                     _uart1TxTail:
  1985                           	opt callstack 0
  1986  000023                     	ds	1
  1987  000024                     _uart1TxHead:
  1988                           	opt callstack 0
  1989  000024                     	ds	1
  1990                           
  1991                           	psect	bssBANK0
  1992  000060                     __pbssBANK0:
  1993                           	opt callstack 0
  1994  000060                     _S:
  1995                           	opt callstack 0
  1996  000060                     	ds	41
  1997  000089                     _spi_link:
  1998                           	opt callstack 0
  1999  000089                     	ds	12
  2000  000095                     floorf@F524:
  2001                           	opt callstack 0
  2002  000095                     	ds	4
  2003  000099                     ___fpclassifyf@F463:
  2004                           	opt callstack 0
  2005  000099                     	ds	4
  2006  00009D                     _utctime:
  2007                           	opt callstack 0
  2008  00009D                     	ds	4
  2009  0000A1                     wdtdelay@dcount:
  2010                           	opt callstack 0
  2011  0000A1                     	ds	4
  2012  0000A5                     _P:
  2013                           	opt callstack 0
  2014  0000A5                     	ds	4
  2015  0000A9                     _TMR3_InterruptHandler:
  2016                           	opt callstack 0
  2017  0000A9                     	ds	3
  2018  0000AC                     _TMR5_InterruptHandler:
  2019                           	opt callstack 0
  2020  0000AC                     	ds	3
  2021  0000AF                     _TMR6_InterruptHandler:
  2022                           	opt callstack 0
  2023  0000AF                     	ds	3
  2024  0000B2                     _ADCC_ADTI_InterruptHandler:
  2025                           	opt callstack 0
  2026  0000B2                     	ds	3
  2027  0000B5                     _ADCC_ADI_InterruptHandler:
  2028                           	opt callstack 0
  2029  0000B5                     	ds	3
  2030  0000B8                     _UART1_TxInterruptHandler:
  2031                           	opt callstack 0
  2032  0000B8                     	ds	3
  2033  0000BB                     _UART1_RxInterruptHandler:
  2034                           	opt callstack 0
  2035  0000BB                     	ds	3
  2036  0000BE                     _UART2_TxInterruptHandler:
  2037                           	opt callstack 0
  2038  0000BE                     	ds	3
  2039  0000C1                     _nout:
  2040                           	opt callstack 0
  2041  0000C1                     	ds	2
  2042                           
  2043                           	psect	dataBANK0
  2044  0000C3                     __pdataBANK0:
  2045                           	opt callstack 0
  2046  0000C3                     _R:
  2047                           	opt callstack 0
  2048  0000C3                     	ds	40
  2049  0000EB                     stoa@F1166:
  2050                           	opt callstack 0
  2051  0000EB                     	ds	7
  2052  0000F2                     _H:
  2053                           	opt callstack 0
  2054  0000F2                     	ds	7
  2055                           
  2056                           	psect	bssBANK1
  2057  0001B5                     __pbssBANK1:
  2058                           	opt callstack 0
  2059  0001B5                     _tickCount:
  2060                           	opt callstack 0
  2061  0001B5                     	ds	24
  2062  0001CD                     _seed:
  2063                           	opt callstack 0
  2064  0001CD                     	ds	8
  2065                           
  2066                           	psect	dataBANK1
  2067  000100                     __pdataBANK1:
  2068                           	opt callstack 0
  2069  000100                     _C:
  2070                           	opt callstack 0
  2071  000100                     	ds	165
  2072  0001A5                     _port_data:
  2073                           	opt callstack 0
  2074  0001A5                     	ds	16
  2075                           
  2076                           	psect	bssBANK2
  2077  0002BC                     __pbssBANK2:
  2078                           	opt callstack 0
  2079  0002BC                     _uart1TxBuffer:
  2080                           	opt callstack 0
  2081  0002BC                     	ds	64
  2082                           
  2083                           	psect	dataBANK2
  2084  000200                     __pdataBANK2:
  2085                           	opt callstack 0
  2086  000200                     _V:
  2087                           	opt callstack 0
  2088  000200                     	ds	188
  2089                           
  2090                           	psect	bssBANK3
  2091  000300                     __pbssBANK3:
  2092                           	opt callstack 0
  2093  000300                     lp_filter@smooth:
  2094                           	opt callstack 0
  2095  000300                     	ds	84
  2096  000354                     _uart2TxBuffer:
  2097                           	opt callstack 0
  2098  000354                     	ds	64
  2099  000394                     _dbuf:
  2100                           	opt callstack 0
  2101  000394                     	ds	80
  2102                           
  2103                           	psect	bssBANK4
  2104  000400                     __pbssBANK4:
  2105                           	opt callstack 0
  2106  000400                     _ring_buf2:
  2107                           	opt callstack 0
  2108  000400                     	ds	67
  2109  000443                     _ring_buf1:
  2110                           	opt callstack 0
  2111  000443                     	ds	67
  2112                           
  2113                           	psect	bssBANK5
  2114  000500                     __pbssBANK5:
  2115                           	opt callstack 0
  2116  000500                     _uart1RxBuffer:
  2117                           	opt callstack 0
  2118  000500                     	ds	255
  2119                           
  2120                           	psect	bssBANK6
  2121  000600                     __pbssBANK6:
  2122                           	opt callstack 0
  2123  000600                     _uart2RxBuffer:
  2124                           	opt callstack 0
  2125  000600                     	ds	255
  2126                           
  2127                           	psect	bssBIGRAM
  2128  0006FF                     __pbssBIGRAM:
  2129                           	opt callstack 0
  2130  0006FF                     _D:
  2131                           	opt callstack 0
  2132  0006FF                     	ds	290
  2133                           
  2134                           	psect	cstackBANK1
  2135  0001D5                     __pcstackBANK1:
  2136                           	opt callstack 0
  2137  0001D5                     ??_TMR3_ISR:
  2138                           
  2139                           ; 1 bytes @ 0x0
  2140  0001D5                     	ds	13
  2141                           
  2142                           	psect	cstackCOMRAM
  2143  000045                     __pcstackCOMRAM:
  2144                           	opt callstack 0
  2145  000045                     ??_ADCC_ThresholdISR:
  2146  000045                     
  2147                           ; 1 bytes @ 0x0
  2148  000045                     	ds	5
  2149  00004A                     ??_TMR6_ISR:
  2150                           
  2151                           ; 1 bytes @ 0x5
  2152  00004A                     	ds	1
  2153  00004B                     ??_INT1_ISR:
  2154  00004B                     
  2155                           ; 1 bytes @ 0x6
  2156  00004B                     	ds	4
  2157  00004F                     ??_TMR5_ISR:
  2158                           
  2159                           ; 1 bytes @ 0xA
  2160  00004F                     	ds	4
  2161                           
  2162 ;;
  2163 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2164 ;;
  2165 ;; *************** function _main *****************
  2166 ;; Defined at:
  2167 ;;		line 171 in file "main.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  k               1  [STACK] unsigned char 
  2172 ;;  j               1  [STACK] unsigned char 
  2173 ;;  i               1  [STACK] unsigned char 
  2174 ;;  inp_index       1  [STACK] unsigned char 
  2175 ;;  mode            1  [STACK] enum E17022
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1  [STACK] void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels required when called:   20
  2191 ;; This function calls:
  2192 ;;		_SYSTEM_Initialize
  2193 ;;		_StartTimer
  2194 ;;		_TimerDone
  2195 ;;		_WaitMs
  2196 ;;		_calc_model_data
  2197 ;;		_check_adc_scan
  2198 ;;		_check_enter_button
  2199 ;;		_check_help
  2200 ;;		_clear_adc_scan
  2201 ;;		_clear_hid_pflags
  2202 ;;		_convert_adc_data
  2203 ;;		_eaDogM_WriteCommand
  2204 ;;		_get_raw_result
  2205 ;;		_get_switch
  2206 ;;		_get_vterm_ptr
  2207 ;;		_hid_display
  2208 ;;		_init_bsoc
  2209 ;;		_init_display
  2210 ;;		_lp_filter
  2211 ;;		_mode_lamp_dim
  2212 ;;		_set_display_info
  2213 ;;		_set_vterm
  2214 ;;		_sprintf
  2215 ;;		_srand
  2216 ;;		_start_adc_scan
  2217 ;;		_start_switch_handler
  2218 ;;		_static_soc
  2219 ;;		_update_lcd
  2220 ;; This function is called by:
  2221 ;;		Startup code after reset
  2222 ;; This function uses a reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text0
  2226  011D82                     __ptext0:
  2227                           	opt callstack 0
  2228  011D82                     _main:
  2229                           	opt callstack 0
  2230                           
  2231                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2232  011D82  0E05               	movlw	5
  2233  011D84  26E1               	addwf	fsr1l,f,c
  2234  011D86  0E00               	movlw	0
  2235  011D88  22E2               	addwfc	fsr1h,f,c
  2236                           
  2237                           ;main.c: 173:  UI_STATES mode;;main.c: 174:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2238                           ;stkvar	_inp_index @ sp[(-5)+3]
  2239                           
  2240                           ;incstack = 0
  2241  011D8A  0EFE               	movlw	-2
  2242  011D8C  6AE3               	clrf	plusw1,c
  2243                           
  2244                           ;stkvar	_i @ sp[(-5)+2]
  2245  011D8E  0EFD               	movlw	-3
  2246  011D90  6AE3               	clrf	plusw1,c
  2247                           
  2248                           ;stkvar	_j @ sp[(-5)+1]
  2249  011D92  0EFC               	movlw	-4
  2250  011D94  6AE3               	clrf	plusw1,c
  2251  011D96  2AE3               	incf	plusw1,f,c
  2252                           
  2253                           ;stkvar	_k @ sp[(-5)+0]
  2254  011D98  0EFB               	movlw	-5
  2255  011D9A  6AE3               	clrf	plusw1,c
  2256  011D9C  82E3               	bsf	plusw1,1,c
  2257                           
  2258                           ;main.c: 177:  SYSTEM_Initialize();
  2259  011D9E  EC7E  F0C4         	call	_SYSTEM_Initialize	;wreg free
  2260                           
  2261                           ; BSR set to: 60
  2262                           ;main.c: 180:  (INTCON0bits.GIEH = 1);
  2263  011DA2  8ED2               	bsf	210,7,c	;volatile
  2264                           
  2265                           ; BSR set to: 60
  2266                           ;main.c: 183:  (INTCON0bits.GIEL = 1);
  2267  011DA4  8CD2               	bsf	210,6,c	;volatile
  2268                           
  2269                           ; BSR set to: 60
  2270                           ;main.c: 185:  V.ui_state = UI_STATE_INIT;
  2271  011DA6  0102               	movlb	2	; () banked
  2272  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2273                           
  2274                           ; BSR set to: 2
  2275                           ;main.c: 190:  WaitMs(300);
  2276  011DAA  0E2C               	movlw	44
  2277  011DAC  6EE6               	movwf	postinc1,c
  2278  011DAE  0E01               	movlw	1
  2279  011DB0  6EE6               	movwf	postinc1,c
  2280  011DB2  EC6C  F0C6         	call	_WaitMs	;wreg free
  2281                           
  2282                           ;main.c: 191:  if (PORTBbits.RB0) {
  2283  011DB6  A0CB               	btfss	203,0,c	;volatile
  2284  011DB8  D004               	goto	l11079
  2285                           
  2286                           ;main.c: 192:   mode = UI_STATE_HOST;
  2287                           ;stkvar	_mode @ sp[(-5)+4]
  2288  011DBA  0EFF               	movlw	-1
  2289  011DBC  6AE3               	clrf	plusw1,c
  2290  011DBE  2AE3               	incf	plusw1,f,c
  2291                           
  2292                           ;main.c: 193:  } else {
  2293  011DC0  D004               	goto	l11081
  2294  011DC2                     l11079:
  2295                           
  2296                           ;main.c: 194:   mode = UI_STATE_LOG;
  2297                           ;stkvar	_mode @ sp[(-5)+4]
  2298  011DC2  0EFF               	movlw	-1
  2299  011DC4  6AE3               	clrf	plusw1,c
  2300  011DC6  80E3               	bsf	plusw1,0,c
  2301  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2302  011DCA                     l11081:
  2303                           
  2304                           ;main.c: 197:  if (mode == UI_STATE_HOST) {
  2305                           ;stkvar	_mode @ sp[(-5)+4]
  2306  011DCA  0EFF               	movlw	-1
  2307  011DCC  04E3               	decf	plusw1,w,c
  2308  011DCE  A4D8               	btfss	status,2,c
  2309  011DD0  D007               	goto	l1338
  2310                           
  2311                           ;main.c: 198:   do { LATDbits.LATD0 = 1; } while(0);
  2312  011DD2  80BD               	bsf	189,0,c	;volatile
  2313                           
  2314                           ;main.c: 199:   V.mode_pwm = 70;
  2315  011DD4  0E00               	movlw	0
  2316  011DD6  0102               	movlb	2	; () banked
  2317  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2318  011DDA  0E46               	movlw	70
  2319  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2320                           
  2321                           ;main.c: 200:  } else {
  2322  011DDE  D004               	goto	l11085
  2323  011DE0                     l1338:
  2324  011DE0  90BD               	bcf	189,0,c	;volatile
  2325                           
  2326                           ;main.c: 202:   V.mode_pwm = 0;
  2327  011DE2  0102               	movlb	2	; () banked
  2328  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2329  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2330  011DE8                     l11085:
  2331                           
  2332                           ; BSR set to: 2
  2333                           ;main.c: 204:  mode_lamp_dim(V.mode_pwm);
  2334  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2335  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2336  011DF4  EC59  F0CA         	call	_mode_lamp_dim	;wreg free
  2337  011DF8  D0D4               	goto	l11133
  2338  011DFA                     l11087:
  2339                           
  2340                           ; BSR set to: 2
  2341                           ;main.c: 215:    init_display();
  2342  011DFA  EC7C  F0BB         	call	_init_display	;wreg free
  2343                           
  2344                           ; BSR set to: 61
  2345                           ;main.c: 216:    eaDogM_WriteCommand(0b00001100);
  2346  011DFE  0E0C               	movlw	12
  2347  011E00  6EE6               	movwf	postinc1,c
  2348  011E02  ECB6  F0CA         	call	_eaDogM_WriteCommand	;wreg free
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 218:    V.ui_state = mode;
  2352                           ;stkvar	_mode @ sp[(-5)+4]
  2353  011E06  0EFF               	movlw	-1
  2354  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;main.c: 219:    srand(1957);
  2358  011E0E  0EA5               	movlw	165
  2359  011E10  6EE6               	movwf	postinc1,c
  2360  011E12  0E07               	movlw	7
  2361  011E14  6EE6               	movwf	postinc1,c
  2362  011E16  ECBC  F0C6         	call	_srand	;wreg free
  2363                           
  2364                           ; BSR set to: 1
  2365                           ;main.c: 220:    set_vterm(0);
  2366  011E1A  0E00               	movlw	0
  2367  011E1C  6EE6               	movwf	postinc1,c
  2368  011E1E  ECF4  F0C9         	call	_set_vterm	;wreg free
  2369                           
  2370                           ;main.c: 221:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2371  011E22  0E60               	movlw	low STR_1
  2372  011E24  6EE6               	movwf	postinc1,c
  2373  011E26  0EFF               	movlw	high STR_1
  2374  011E28  6EE6               	movwf	postinc1,c
  2375  011E2A  0E00               	movlw	0
  2376  011E2C  6EE6               	movwf	postinc1,c
  2377  011E2E  0E00               	movlw	0
  2378  011E30  6EE6               	movwf	postinc1,c
  2379  011E32  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2380  011E36  0060  F097  FFE6   	movff	btemp,postinc1
  2381  011E3C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2382  011E42  0E04               	movlw	4
  2383  011E44  6EE6               	movwf	postinc1,c
  2384  011E46  ECF8  F0B9         	call	_sprintf	;wreg free
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;main.c: 222:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.998");
  2388  011E4A  0EE0               	movlw	low STR_3
  2389  011E4C  6EE6               	movwf	postinc1,c
  2390  011E4E  0EFF               	movlw	high STR_3
  2391  011E50  6EE6               	movwf	postinc1,c
  2392  011E52  0EB2               	movlw	low STR_2
  2393  011E54  6EE6               	movwf	postinc1,c
  2394  011E56  0EFF               	movlw	high STR_2
  2395  011E58  6EE6               	movwf	postinc1,c
  2396  011E5A  0E00               	movlw	0
  2397  011E5C  6EE6               	movwf	postinc1,c
  2398  011E5E  0E01               	movlw	1
  2399  011E60  6EE6               	movwf	postinc1,c
  2400  011E62  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2401  011E66  0060  F097  FFE6   	movff	btemp,postinc1
  2402  011E6C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2403  011E72  0E06               	movlw	6
  2404  011E74  6EE6               	movwf	postinc1,c
  2405  011E76  ECF8  F0B9         	call	_sprintf	;wreg free
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;main.c: 223:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2409  011E7A  0E4F               	movlw	low STR_4
  2410  011E7C  6EE6               	movwf	postinc1,c
  2411  011E7E  0EFF               	movlw	high STR_4
  2412  011E80  6EE6               	movwf	postinc1,c
  2413  011E82  0E00               	movlw	0
  2414  011E84  6EE6               	movwf	postinc1,c
  2415  011E86  0E02               	movlw	2
  2416  011E88  6EE6               	movwf	postinc1,c
  2417  011E8A  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2418  011E8E  0060  F097  FFE6   	movff	btemp,postinc1
  2419  011E94  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2420  011E9A  0E04               	movlw	4
  2421  011E9C  6EE6               	movwf	postinc1,c
  2422  011E9E  ECF8  F0B9         	call	_sprintf	;wreg free
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;main.c: 224:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2426  011EA2  0E71               	movlw	low STR_5
  2427  011EA4  6EE6               	movwf	postinc1,c
  2428  011EA6  0EFF               	movlw	high STR_5
  2429  011EA8  6EE6               	movwf	postinc1,c
  2430  011EAA  0E02               	movlw	2
  2431  011EAC  6EE6               	movwf	postinc1,c
  2432  011EAE  0E00               	movlw	0
  2433  011EB0  6EE6               	movwf	postinc1,c
  2434  011EB2  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2435  011EB6  0060  F097  FFE6   	movff	btemp,postinc1
  2436  011EBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2437  011EC2  0E04               	movlw	4
  2438  011EC4  6EE6               	movwf	postinc1,c
  2439  011EC6  ECF8  F0B9         	call	_sprintf	;wreg free
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;main.c: 225:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.998");
  2443  011ECA  0EE0               	movlw	low STR_3
  2444  011ECC  6EE6               	movwf	postinc1,c
  2445  011ECE  0EFF               	movlw	high STR_3
  2446  011ED0  6EE6               	movwf	postinc1,c
  2447  011ED2  0EB2               	movlw	low STR_2
  2448  011ED4  6EE6               	movwf	postinc1,c
  2449  011ED6  0EFF               	movlw	high STR_2
  2450  011ED8  6EE6               	movwf	postinc1,c
  2451  011EDA  0E02               	movlw	2
  2452  011EDC  6EE6               	movwf	postinc1,c
  2453  011EDE  0E01               	movlw	1
  2454  011EE0  6EE6               	movwf	postinc1,c
  2455  011EE2  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2456  011EE6  0060  F097  FFE6   	movff	btemp,postinc1
  2457  011EEC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2458  011EF2  0E06               	movlw	6
  2459  011EF4  6EE6               	movwf	postinc1,c
  2460  011EF6  ECF8  F0B9         	call	_sprintf	;wreg free
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;main.c: 226:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2464  011EFA  0E3E               	movlw	low STR_8
  2465  011EFC  6EE6               	movwf	postinc1,c
  2466  011EFE  0EFF               	movlw	high STR_8
  2467  011F00  6EE6               	movwf	postinc1,c
  2468  011F02  0E02               	movlw	2
  2469  011F04  6EE6               	movwf	postinc1,c
  2470  011F06  0E02               	movlw	2
  2471  011F08  6EE6               	movwf	postinc1,c
  2472  011F0A  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2473  011F0E  0060  F097  FFE6   	movff	btemp,postinc1
  2474  011F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2475  011F1A  0E04               	movlw	4
  2476  011F1C  6EE6               	movwf	postinc1,c
  2477  011F1E  ECF8  F0B9         	call	_sprintf	;wreg free
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;main.c: 227:    update_lcd(0);
  2481  011F22  0E00               	movlw	0
  2482  011F24  6EE6               	movwf	postinc1,c
  2483  011F26  EC70  F0B9         	call	_update_lcd	;wreg free
  2484                           
  2485                           ;main.c: 228:    WaitMs(3000);
  2486  011F2A  0EB8               	movlw	184
  2487  011F2C  6EE6               	movwf	postinc1,c
  2488  011F2E  0E0B               	movlw	11
  2489  011F30  6EE6               	movwf	postinc1,c
  2490  011F32  EC6C  F0C6         	call	_WaitMs	;wreg free
  2491                           
  2492                           ;main.c: 229:    StartTimer(TMR_DISPLAY, 250);
  2493  011F36  0EFA               	movlw	250
  2494  011F38  6EE6               	movwf	postinc1,c
  2495  011F3A  0E00               	movlw	0
  2496  011F3C  6EE6               	movwf	postinc1,c
  2497  011F3E  0E0A               	movlw	10
  2498  011F40  6EE6               	movwf	postinc1,c
  2499  011F42  EC96  F0C5         	call	_StartTimer	;wreg free
  2500                           
  2501                           ;main.c: 230:    StartTimer(TMR_ADC, 200);
  2502  011F46  0EC8               	movlw	200
  2503  011F48  6EE6               	movwf	postinc1,c
  2504  011F4A  0E00               	movlw	0
  2505  011F4C  6EE6               	movwf	postinc1,c
  2506  011F4E  0E01               	movlw	1
  2507  011F50  6EE6               	movwf	postinc1,c
  2508  011F52  EC96  F0C5         	call	_StartTimer	;wreg free
  2509                           
  2510                           ;main.c: 231:    StartTimer(TMR_INFO, 3000);
  2511  011F56  0EB8               	movlw	184
  2512  011F58  6EE6               	movwf	postinc1,c
  2513  011F5A  0E0B               	movlw	11
  2514  011F5C  6EE6               	movwf	postinc1,c
  2515  011F5E  0E07               	movlw	7
  2516  011F60  6EE6               	movwf	postinc1,c
  2517  011F62  EC96  F0C5         	call	_StartTimer	;wreg free
  2518                           
  2519                           ;main.c: 232:    StartTimer(TMR_FLIPPER, 1500);
  2520  011F66  0EDC               	movlw	220
  2521  011F68  6EE6               	movwf	postinc1,c
  2522  011F6A  0E05               	movlw	5
  2523  011F6C  6EE6               	movwf	postinc1,c
  2524  011F6E  0E0B               	movlw	11
  2525  011F70  6EE6               	movwf	postinc1,c
  2526  011F72  EC96  F0C5         	call	_StartTimer	;wreg free
  2527                           
  2528                           ;main.c: 233:    StartTimer(TMR_HELPDIS, 3000);
  2529  011F76  0EB8               	movlw	184
  2530  011F78  6EE6               	movwf	postinc1,c
  2531  011F7A  0E0B               	movlw	11
  2532  011F7C  6EE6               	movwf	postinc1,c
  2533  011F7E  0E09               	movlw	9
  2534  011F80  6EE6               	movwf	postinc1,c
  2535  011F82  EC96  F0C5         	call	_StartTimer	;wreg free
  2536                           
  2537                           ;main.c: 235:    start_adc_scan();
  2538  011F86  EC89  F0C2         	call	_start_adc_scan	;wreg free
  2539                           
  2540                           ;main.c: 236:    start_switch_handler();
  2541  011F8A  ECC6  F0C9         	call	_start_switch_handler	;wreg free
  2542                           
  2543                           ; BSR set to: 57
  2544                           ;main.c: 237:    static_soc();
  2545  011F8E  ECA2  F0C6         	call	_static_soc	;wreg free
  2546                           
  2547                           ; BSR set to: 1
  2548                           ;main.c: 238:    init_bsoc();
  2549  011F92  ECA5  F0CA         	call	_init_bsoc	;wreg free
  2550                           
  2551                           ;main.c: 240:    break;
  2552  011F96  D01C               	goto	l11135
  2553  011F98                     l1346:
  2554                           
  2555                           ; BSR set to: 2
  2556                           ;main.c: 246:    P.SYSTEM_STABLE = 1;
  2557  011F98  0100               	movlb	0	; () banked
  2558  011F9A  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  2559                           
  2560                           ;main.c: 247:    break;
  2561  011F9C  D019               	goto	l11135
  2562  011F9E                     l1348:
  2563                           
  2564                           ; BSR set to: 2
  2565                           ;main.c: 250:    V.ui_state = UI_STATE_INIT;
  2566  011F9E  6B00               	clrf	_V& (0+255),b	;volatile
  2567                           
  2568                           ;main.c: 251:    break;
  2569  011FA0  D017               	goto	l11135
  2570  011FA2                     l11133:
  2571  011FA2  0102               	movlb	2	; () banked
  2572  011FA4  5100               	movf	_V& (0+255),w,b	;volatile
  2573  011FA6  6E2F               	movwf	(btemp+10)^0,c
  2574  011FA8  6A30               	clrf	(btemp+11)^0,c
  2575                           
  2576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2577                           ; Switch size 1, requested type "simple"
  2578                           ; Number of cases is 1, Range of values is 0 to 0
  2579                           ; switch strategies available:
  2580                           ; Name         Instructions Cycles
  2581                           ; simple_byte            4     3 (average)
  2582                           ;	Chosen strategy is simple_byte
  2583  011FAA  5030               	movf	(btemp+11)^0,w,c
  2584  011FAC  0A00               	xorlw	0	; case 0
  2585  011FAE  A4D8               	btfss	status,2,c
  2586  011FB0  D7F6               	goto	l1348
  2587                           
  2588                           ; BSR set to: 2
  2589                           ; Switch size 1, requested type "simple"
  2590                           ; Number of cases is 5, Range of values is 0 to 5
  2591                           ; switch strategies available:
  2592                           ; Name         Instructions Cycles
  2593                           ; simple_byte           16     9 (average)
  2594                           ;	Chosen strategy is simple_byte
  2595  011FB2  502F               	movf	(btemp+10)^0,w,c
  2596  011FB4  0A00               	xorlw	0	; case 0
  2597  011FB6  B4D8               	btfsc	status,2,c
  2598  011FB8  D720               	goto	l11087
  2599  011FBA  0A01               	xorlw	1	; case 1
  2600  011FBC  B4D8               	btfsc	status,2,c
  2601  011FBE  D008               	goto	l11135
  2602  011FC0  0A02               	xorlw	2	; case 3
  2603  011FC2  B4D8               	btfsc	status,2,c
  2604  011FC4  D005               	goto	l11135
  2605  011FC6  0A07               	xorlw	7	; case 4
  2606  011FC8  B4D8               	btfsc	status,2,c
  2607  011FCA  D7E6               	goto	l1346
  2608  011FCC  0A01               	xorlw	1	; case 5
  2609  011FCE  D7E7               	goto	l1348
  2610  011FD0                     l11135:
  2611                           
  2612                           ;main.c: 254:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2613  011FD0  0E01               	movlw	1
  2614  011FD2  6EE6               	movwf	postinc1,c
  2615  011FD4  ECF7  F0C7         	call	_TimerDone	;wreg free
  2616  011FD8  5025               	movf	btemp^0,w,c
  2617  011FDA  B4D8               	btfsc	status,2,c
  2618  011FDC  D013               	goto	l11147
  2619  011FDE  ECF5  F0CA         	call	_check_adc_scan	;wreg free
  2620  011FE2  5025               	movf	btemp^0,w,c
  2621  011FE4  B4D8               	btfsc	status,2,c
  2622  011FE6  D00E               	goto	l11147
  2623                           
  2624                           ;main.c: 258:    convert_adc_data();
  2625  011FE8  EC83  F0BD         	call	_convert_adc_data	;wreg free
  2626                           
  2627                           ;main.c: 262:    clear_adc_scan();
  2628  011FEC  ECFD  F0CA         	call	_clear_adc_scan	;wreg free
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;main.c: 263:    start_adc_scan();
  2632  011FF0  EC89  F0C2         	call	_start_adc_scan	;wreg free
  2633                           
  2634                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  2635  011FF4  0EC8               	movlw	200
  2636  011FF6  6EE6               	movwf	postinc1,c
  2637  011FF8  0E00               	movlw	0
  2638  011FFA  6EE6               	movwf	postinc1,c
  2639  011FFC  0E01               	movlw	1
  2640  011FFE  6EE6               	movwf	postinc1,c
  2641  012000  EC96  F0C5         	call	_StartTimer	;wreg free
  2642  012004                     l11147:
  2643                           
  2644                           ;main.c: 271:   if (TimerDone(TMR_DISPLAY)) {
  2645                           
  2646                           ;main.c: 267:   if (V.ticks) {
  2647  012004  0E0A               	movlw	10
  2648  012006  6EE6               	movwf	postinc1,c
  2649  012008  ECF7  F0C7         	call	_TimerDone	;wreg free
  2650  01200C  5025               	movf	btemp^0,w,c
  2651  01200E  B4D8               	btfsc	status,2,c
  2652  012010  D27F               	goto	l11189
  2653                           
  2654                           ;main.c: 272:    if (TimerDone(TMR_HELPDIS)) {
  2655  012012  0E09               	movlw	9
  2656  012014  6EE6               	movwf	postinc1,c
  2657  012016  ECF7  F0C7         	call	_TimerDone	;wreg free
  2658  01201A  5025               	movf	btemp^0,w,c
  2659  01201C  B4D8               	btfsc	status,2,c
  2660  01201E  D004               	goto	l11155
  2661                           
  2662                           ;main.c: 273:     set_display_info(DIS_STR);
  2663  012020  0E00               	movlw	0
  2664  012022  6EE6               	movwf	postinc1,c
  2665  012024  EC03  F0CA         	call	_set_display_info	;wreg free
  2666  012028                     l11155:
  2667                           
  2668                           ;main.c: 275:    calc_model_data();
  2669  012028  EC8C  F0A9         	call	_calc_model_data	;wreg free
  2670                           
  2671                           ; BSR set to: 1
  2672                           ;main.c: 282:     hid_display(&H);
  2673                           
  2674                           ;main.c: 277:    if (0) {
  2675  01202C  0EF2               	movlw	_H& (0+255)
  2676  01202E  6EE6               	movwf	postinc1,c
  2677  012030  EC7D  F0BA         	call	_hid_display	;wreg free
  2678                           
  2679                           ;main.c: 283:     switch (H.hid_display) {
  2680  012034  D248               	goto	l11181
  2681  012036                     l1356:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;main.c: 285:      V.calib = 0;
  2685  012036  0102               	movlb	2	; () banked
  2686  012038  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2687                           
  2688                           ; BSR set to: 2
  2689                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2690  01203A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2691  012040  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2692  012046  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2693  01204C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2694  012052  0EB9               	movlw	low STR_12
  2695  012054  6EE6               	movwf	postinc1,c
  2696  012056  0EFE               	movlw	high STR_12
  2697  012058  6EE6               	movwf	postinc1,c
  2698  01205A  0E00               	movlw	0
  2699  01205C  6EE6               	movwf	postinc1,c
  2700  01205E  0E00               	movlw	0
  2701  012060  6EE6               	movwf	postinc1,c
  2702  012062  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2703  012066  0060  F097  FFE6   	movff	btemp,postinc1
  2704  01206C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2705  012072  0E08               	movlw	8
  2706  012074  6EE6               	movwf	postinc1,c
  2707  012076  ECF8  F0B9         	call	_sprintf	;wreg free
  2708                           
  2709                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2710  01207A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2711  012080  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2712  012086  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2713  01208C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2714  012092  0EDF               	movlw	low STR_13
  2715  012094  6EE6               	movwf	postinc1,c
  2716  012096  0EFE               	movlw	high STR_13
  2717  012098  6EE6               	movwf	postinc1,c
  2718  01209A  0E00               	movlw	0
  2719  01209C  6EE6               	movwf	postinc1,c
  2720  01209E  0E01               	movlw	1
  2721  0120A0  6EE6               	movwf	postinc1,c
  2722  0120A2  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2723  0120A6  0060  F097  FFE6   	movff	btemp,postinc1
  2724  0120AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2725  0120B2  0E08               	movlw	8
  2726  0120B4  6EE6               	movwf	postinc1,c
  2727  0120B6  ECF8  F0B9         	call	_sprintf	;wreg free
  2728                           
  2729                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2730  0120BA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2731  0120C0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2732  0120C6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2733  0120CC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2734  0120D2  0ECC               	movlw	low STR_14
  2735  0120D4  6EE6               	movwf	postinc1,c
  2736  0120D6  0EFE               	movlw	high STR_14
  2737  0120D8  6EE6               	movwf	postinc1,c
  2738  0120DA  0E00               	movlw	0
  2739  0120DC  6EE6               	movwf	postinc1,c
  2740  0120DE  0E02               	movlw	2
  2741  0120E0  6EE6               	movwf	postinc1,c
  2742  0120E2  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2743  0120E6  0060  F097  FFE6   	movff	btemp,postinc1
  2744  0120EC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2745  0120F2  0E08               	movlw	8
  2746  0120F4  6EE6               	movwf	postinc1,c
  2747  0120F6  ECF8  F0B9         	call	_sprintf	;wreg free
  2748                           
  2749                           ;main.c: 289:      break;
  2750  0120FA  D1FA               	goto	l11183
  2751  0120FC                     l1358:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;main.c: 291:      V.calib = 0;
  2755  0120FC  0102               	movlb	2	; () banked
  2756  0120FE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2757                           
  2758                           ; BSR set to: 2
  2759                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2760  012100  0060  F413  FFE6   	movff	_C+4,postinc1
  2761  012106  0060  F417  FFE6   	movff	_C+5,postinc1
  2762  01210C  0060  F41B  FFE6   	movff	_C+6,postinc1
  2763  012112  0060  F41F  FFE6   	movff	_C+7,postinc1
  2764  012118  0060  F453  FFE6   	movff	_C+20,postinc1
  2765  01211E  0060  F457  FFE6   	movff	_C+21,postinc1
  2766  012124  0060  F45B  FFE6   	movff	_C+22,postinc1
  2767  01212A  0060  F45F  FFE6   	movff	_C+23,postinc1
  2768  012130  0E2B               	movlw	low STR_15
  2769  012132  6EE6               	movwf	postinc1,c
  2770  012134  0EFF               	movlw	high STR_15
  2771  012136  6EE6               	movwf	postinc1,c
  2772  012138  0E00               	movlw	0
  2773  01213A  6EE6               	movwf	postinc1,c
  2774  01213C  0E00               	movlw	0
  2775  01213E  6EE6               	movwf	postinc1,c
  2776  012140  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2777  012144  0060  F097  FFE6   	movff	btemp,postinc1
  2778  01214A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2779  012150  0E0C               	movlw	12
  2780  012152  6EE6               	movwf	postinc1,c
  2781  012154  ECF8  F0B9         	call	_sprintf	;wreg free
  2782                           
  2783                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2784  012158  0060  F403  FFE6   	movff	_C,postinc1
  2785  01215E  0060  F407  FFE6   	movff	_C+1,postinc1
  2786  012164  0060  F40B  FFE6   	movff	_C+2,postinc1
  2787  01216A  0060  F40F  FFE6   	movff	_C+3,postinc1
  2788  012170  0060  F443  FFE6   	movff	_C+16,postinc1
  2789  012176  0060  F447  FFE6   	movff	_C+17,postinc1
  2790  01217C  0060  F44B  FFE6   	movff	_C+18,postinc1
  2791  012182  0060  F44F  FFE6   	movff	_C+19,postinc1
  2792  012188  0E05               	movlw	low STR_16
  2793  01218A  6EE6               	movwf	postinc1,c
  2794  01218C  0EFF               	movlw	high STR_16
  2795  01218E  6EE6               	movwf	postinc1,c
  2796  012190  0E00               	movlw	0
  2797  012192  6EE6               	movwf	postinc1,c
  2798  012194  0E01               	movlw	1
  2799  012196  6EE6               	movwf	postinc1,c
  2800  012198  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2801  01219C  0060  F097  FFE6   	movff	btemp,postinc1
  2802  0121A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2803  0121A8  0E0C               	movlw	12
  2804  0121AA  6EE6               	movwf	postinc1,c
  2805  0121AC  ECF8  F0B9         	call	_sprintf	;wreg free
  2806                           
  2807                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2808  0121B0  0060  F503  FFE6   	movff	_C+64,postinc1
  2809  0121B6  0060  F507  FFE6   	movff	_C+65,postinc1
  2810  0121BC  0060  F50B  FFE6   	movff	_C+66,postinc1
  2811  0121C2  0060  F50F  FFE6   	movff	_C+67,postinc1
  2812  0121C8  0060  F423  FFE6   	movff	_C+8,postinc1
  2813  0121CE  0060  F427  FFE6   	movff	_C+9,postinc1
  2814  0121D4  0060  F42B  FFE6   	movff	_C+10,postinc1
  2815  0121DA  0060  F42F  FFE6   	movff	_C+11,postinc1
  2816  0121E0  0E18               	movlw	low STR_17
  2817  0121E2  6EE6               	movwf	postinc1,c
  2818  0121E4  0EFF               	movlw	high STR_17
  2819  0121E6  6EE6               	movwf	postinc1,c
  2820  0121E8  0E00               	movlw	0
  2821  0121EA  6EE6               	movwf	postinc1,c
  2822  0121EC  0E02               	movlw	2
  2823  0121EE  6EE6               	movwf	postinc1,c
  2824  0121F0  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2825  0121F4  0060  F097  FFE6   	movff	btemp,postinc1
  2826  0121FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2827  012200  0E0C               	movlw	12
  2828  012202  6EE6               	movwf	postinc1,c
  2829  012204  ECF8  F0B9         	call	_sprintf	;wreg free
  2830                           
  2831                           ;main.c: 295:      break;
  2832  012208  D173               	goto	l11183
  2833  01220A                     l1359:
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;main.c: 297:      V.calib = 0;
  2837  01220A  0102               	movlb	2	; () banked
  2838  01220C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2839                           
  2840                           ; BSR set to: 2
  2841                           ;main.c: 298:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  2842  01220E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2843  012214  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2844  01221A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2845  012220  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2846  012226  0EF2               	movlw	low STR_18
  2847  012228  6EE6               	movwf	postinc1,c
  2848  01222A  0EFE               	movlw	high STR_18
  2849  01222C  6EE6               	movwf	postinc1,c
  2850  01222E  0E00               	movlw	0
  2851  012230  6EE6               	movwf	postinc1,c
  2852  012232  0E00               	movlw	0
  2853  012234  6EE6               	movwf	postinc1,c
  2854  012236  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2855  01223A  0060  F097  FFE6   	movff	btemp,postinc1
  2856  012240  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2857  012246  0E08               	movlw	8
  2858  012248  6EE6               	movwf	postinc1,c
  2859  01224A  ECF8  F0B9         	call	_sprintf	;wreg free
  2860                           
  2861                           ;main.c: 299:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  2862  01224E  0060  F623  FFE6   	movff	_C+136,postinc1
  2863  012254  0060  F627  FFE6   	movff	_C+137,postinc1
  2864  01225A  0060  F62B  FFE6   	movff	_C+138,postinc1
  2865  012260  0060  F62F  FFE6   	movff	_C+139,postinc1
  2866  012266  0060  F613  FFE6   	movff	_C+132,postinc1
  2867  01226C  0060  F617  FFE6   	movff	_C+133,postinc1
  2868  012272  0060  F61B  FFE6   	movff	_C+134,postinc1
  2869  012278  0060  F61F  FFE6   	movff	_C+135,postinc1
  2870  01227E  0E59               	movlw	low STR_19
  2871  012280  6EE6               	movwf	postinc1,c
  2872  012282  0EFE               	movlw	high STR_19
  2873  012284  6EE6               	movwf	postinc1,c
  2874  012286  0E00               	movlw	0
  2875  012288  6EE6               	movwf	postinc1,c
  2876  01228A  0E01               	movlw	1
  2877  01228C  6EE6               	movwf	postinc1,c
  2878  01228E  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2879  012292  0060  F097  FFE6   	movff	btemp,postinc1
  2880  012298  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2881  01229E  0E0C               	movlw	12
  2882  0122A0  6EE6               	movwf	postinc1,c
  2883  0122A2  ECF8  F0B9         	call	_sprintf	;wreg free
  2884                           
  2885                           ;main.c: 300:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  2886  0122A6  0060  F683  FFE6   	movff	_C+160,postinc1
  2887  0122AC  0060  F687  FFE6   	movff	_C+161,postinc1
  2888  0122B2  0060  F68B  FFE6   	movff	_C+162,postinc1
  2889  0122B8  0060  F68F  FFE6   	movff	_C+163,postinc1
  2890  0122BE  0EA6               	movlw	low STR_20
  2891  0122C0  6EE6               	movwf	postinc1,c
  2892  0122C2  0EFE               	movlw	high STR_20
  2893  0122C4  6EE6               	movwf	postinc1,c
  2894  0122C6  0E00               	movlw	0
  2895  0122C8  6EE6               	movwf	postinc1,c
  2896  0122CA  0E02               	movlw	2
  2897  0122CC  6EE6               	movwf	postinc1,c
  2898  0122CE  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  2899  0122D2  0060  F097  FFE6   	movff	btemp,postinc1
  2900  0122D8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2901  0122DE  0E08               	movlw	8
  2902  0122E0  6EE6               	movwf	postinc1,c
  2903  0122E2  ECF8  F0B9         	call	_sprintf	;wreg free
  2904                           
  2905                           ;main.c: 301:      break;
  2906  0122E6  D104               	goto	l11183
  2907  0122E8                     l11167:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;main.c: 303:      if (!V.calib) {
  2911  0122E8  0102               	movlb	2	; () banked
  2912  0122EA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2913  0122EC  A4D8               	btfss	status,2,c
  2914  0122EE  D02D               	goto	l11171
  2915                           
  2916                           ; BSR set to: 2
  2917                           ;main.c: 304:       lp_filter(0.0, i, -1);
  2918  0122F0  0EFF               	movlw	255
  2919  0122F2  6EE6               	movwf	postinc1,c
  2920                           
  2921                           ;stkvar	_i @ sp[(-6)+2]
  2922  0122F4  0EFC               	movlw	-4
  2923  0122F6  50E3               	movf	plusw1,w,c
  2924  0122F8  6EE6               	movwf	postinc1,c
  2925  0122FA  0E00               	movlw	0
  2926  0122FC  6EE6               	movwf	postinc1,c
  2927  0122FE  0E00               	movlw	0
  2928  012300  6EE6               	movwf	postinc1,c
  2929  012302  0E00               	movlw	0
  2930  012304  6EE6               	movwf	postinc1,c
  2931  012306  0E00               	movlw	0
  2932  012308  6EE6               	movwf	postinc1,c
  2933  01230A  ECE1  F0B2         	call	_lp_filter	;wreg free
  2934                           
  2935                           ;main.c: 305:       lp_filter(0.0, j, -1);
  2936  01230E  0EFF               	movlw	255
  2937  012310  6EE6               	movwf	postinc1,c
  2938                           
  2939                           ;stkvar	_j @ sp[(-6)+1]
  2940  012312  0EFB               	movlw	-5
  2941  012314  50E3               	movf	plusw1,w,c
  2942  012316  6EE6               	movwf	postinc1,c
  2943  012318  0E00               	movlw	0
  2944  01231A  6EE6               	movwf	postinc1,c
  2945  01231C  0E00               	movlw	0
  2946  01231E  6EE6               	movwf	postinc1,c
  2947  012320  0E00               	movlw	0
  2948  012322  6EE6               	movwf	postinc1,c
  2949  012324  0E00               	movlw	0
  2950  012326  6EE6               	movwf	postinc1,c
  2951  012328  ECE1  F0B2         	call	_lp_filter	;wreg free
  2952                           
  2953                           ;main.c: 306:       lp_filter(0.0, k, -1);
  2954  01232C  0EFF               	movlw	255
  2955  01232E  6EE6               	movwf	postinc1,c
  2956                           
  2957                           ;stkvar	_k @ sp[(-6)+0]
  2958  012330  0EFA               	movlw	-6
  2959  012332  50E3               	movf	plusw1,w,c
  2960  012334  6EE6               	movwf	postinc1,c
  2961  012336  0E00               	movlw	0
  2962  012338  6EE6               	movwf	postinc1,c
  2963  01233A  0E00               	movlw	0
  2964  01233C  6EE6               	movwf	postinc1,c
  2965  01233E  0E00               	movlw	0
  2966  012340  6EE6               	movwf	postinc1,c
  2967  012342  0E00               	movlw	0
  2968  012344  6EE6               	movwf	postinc1,c
  2969  012346  ECE1  F0B2         	call	_lp_filter	;wreg free
  2970  01234A                     l11171:
  2971                           
  2972                           ;main.c: 308:      V.calib = 1;
  2973  01234A  0E01               	movlw	1
  2974  01234C  0102               	movlb	2	; () banked
  2975  01234E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2976                           
  2977                           ; BSR set to: 2
  2978                           ;main.c: 309:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2979  012350  0E02               	movlw	2
  2980  012352  6EE6               	movwf	postinc1,c
  2981  012354  ECE3  F0C7         	call	_get_switch	;wreg free
  2982  012358  5025               	movf	btemp^0,w,c
  2983  01235A  6EE6               	movwf	postinc1,c
  2984  01235C  0E00               	movlw	0
  2985  01235E  6EE6               	movwf	postinc1,c
  2986                           
  2987                           ;stkvar	_i @ sp[(-7)+2]
  2988  012360  0EFB               	movlw	-5
  2989  012362  50E3               	movf	plusw1,w,c
  2990  012364  0D04               	mullw	4
  2991  012366  0E00               	movlw	low _C
  2992  012368  24F3               	addwf	243,w,c
  2993  01236A  6ED9               	movwf	fsr2l,c
  2994  01236C  0E01               	movlw	high _C
  2995  01236E  20F4               	addwfc	prodh,w,c
  2996  012370  6EDA               	movwf	fsr2h,c
  2997  012372  006F FF7B FFE6     	movff	postinc2,postinc1
  2998  012378  006F FF7B FFE6     	movff	postinc2,postinc1
  2999  01237E  006F FF7B FFE6     	movff	postinc2,postinc1
  3000  012384  006F FF7B FFE6     	movff	postinc2,postinc1
  3001                           
  3002                           ;stkvar	_i @ sp[(-11)+2]
  3003  01238A  0EF7               	movlw	-9
  3004  01238C  50E3               	movf	plusw1,w,c
  3005  01238E  6EE6               	movwf	postinc1,c
  3006  012390  ECE5  F0C9         	call	_get_raw_result	;wreg free
  3007  012394  0060  F097  FFE6   	movff	btemp,postinc1
  3008  01239A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3009  0123A0  0E93               	movlw	low STR_9
  3010  0123A2  6EE6               	movwf	postinc1,c
  3011  0123A4  0EFF               	movlw	high STR_9
  3012  0123A6  6EE6               	movwf	postinc1,c
  3013  0123A8  0E00               	movlw	0
  3014  0123AA  6EE6               	movwf	postinc1,c
  3015  0123AC  0E00               	movlw	0
  3016  0123AE  6EE6               	movwf	postinc1,c
  3017  0123B0  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  3018  0123B4  0060  F097  FFE6   	movff	btemp,postinc1
  3019  0123BA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3020  0123C0  0E0C               	movlw	12
  3021  0123C2  6EE6               	movwf	postinc1,c
  3022  0123C4  ECF8  F0B9         	call	_sprintf	;wreg free
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;main.c: 310:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3026  0123C8  0E03               	movlw	3
  3027  0123CA  6EE6               	movwf	postinc1,c
  3028  0123CC  ECE3  F0C7         	call	_get_switch	;wreg free
  3029  0123D0  5025               	movf	btemp^0,w,c
  3030  0123D2  6EE6               	movwf	postinc1,c
  3031  0123D4  0E00               	movlw	0
  3032  0123D6  6EE6               	movwf	postinc1,c
  3033                           
  3034                           ;stkvar	_j @ sp[(-7)+1]
  3035  0123D8  0EFA               	movlw	-6
  3036  0123DA  50E3               	movf	plusw1,w,c
  3037  0123DC  0D04               	mullw	4
  3038  0123DE  0E00               	movlw	low _C
  3039  0123E0  24F3               	addwf	243,w,c
  3040  0123E2  6ED9               	movwf	fsr2l,c
  3041  0123E4  0E01               	movlw	high _C
  3042  0123E6  20F4               	addwfc	prodh,w,c
  3043  0123E8  6EDA               	movwf	fsr2h,c
  3044  0123EA  006F FF7B FFE6     	movff	postinc2,postinc1
  3045  0123F0  006F FF7B FFE6     	movff	postinc2,postinc1
  3046  0123F6  006F FF7B FFE6     	movff	postinc2,postinc1
  3047  0123FC  006F FF7B FFE6     	movff	postinc2,postinc1
  3048                           
  3049                           ;stkvar	_j @ sp[(-11)+1]
  3050  012402  0EF6               	movlw	-10
  3051  012404  50E3               	movf	plusw1,w,c
  3052  012406  6EE6               	movwf	postinc1,c
  3053  012408  ECE5  F0C9         	call	_get_raw_result	;wreg free
  3054  01240C  0060  F097  FFE6   	movff	btemp,postinc1
  3055  012412  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3056  012418  0E93               	movlw	low STR_9
  3057  01241A  6EE6               	movwf	postinc1,c
  3058  01241C  0EFF               	movlw	high STR_9
  3059  01241E  6EE6               	movwf	postinc1,c
  3060  012420  0E00               	movlw	0
  3061  012422  6EE6               	movwf	postinc1,c
  3062  012424  0E01               	movlw	1
  3063  012426  6EE6               	movwf	postinc1,c
  3064  012428  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  3065  01242C  0060  F097  FFE6   	movff	btemp,postinc1
  3066  012432  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3067  012438  0E0C               	movlw	12
  3068  01243A  6EE6               	movwf	postinc1,c
  3069  01243C  ECF8  F0B9         	call	_sprintf	;wreg free
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;main.c: 311:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3073                           ;stkvar	_inp_index @ sp[(-5)+3]
  3074  012440  0EFE               	movlw	-2
  3075  012442  50E3               	movf	plusw1,w,c
  3076  012444  6E2F               	movwf	(btemp+10)^0,c
  3077  012446  6A30               	clrf	(btemp+11)^0,c
  3078  012448  0E01               	movlw	1
  3079  01244A  262F               	addwf	(btemp+10)^0,f,c
  3080  01244C  0E00               	movlw	0
  3081  01244E  2230               	addwfc	(btemp+11)^0,f,c
  3082  012450  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  3083  012456  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  3084                           
  3085                           ;stkvar	_k @ sp[(-7)+0]
  3086  01245C  0EF9               	movlw	-7
  3087  01245E  50E3               	movf	plusw1,w,c
  3088  012460  0D04               	mullw	4
  3089  012462  0E00               	movlw	low _C
  3090  012464  24F3               	addwf	243,w,c
  3091  012466  6ED9               	movwf	fsr2l,c
  3092  012468  0E01               	movlw	high _C
  3093  01246A  20F4               	addwfc	prodh,w,c
  3094  01246C  6EDA               	movwf	fsr2h,c
  3095  01246E  006F FF7B FFE6     	movff	postinc2,postinc1
  3096  012474  006F FF7B FFE6     	movff	postinc2,postinc1
  3097  01247A  006F FF7B FFE6     	movff	postinc2,postinc1
  3098  012480  006F FF7B FFE6     	movff	postinc2,postinc1
  3099                           
  3100                           ;stkvar	_k @ sp[(-11)+0]
  3101  012486  0EF5               	movlw	-11
  3102  012488  50E3               	movf	plusw1,w,c
  3103  01248A  6EE6               	movwf	postinc1,c
  3104  01248C  ECE5  F0C9         	call	_get_raw_result	;wreg free
  3105  012490  0060  F097  FFE6   	movff	btemp,postinc1
  3106  012496  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3107  01249C  0E82               	movlw	low STR_11
  3108  01249E  6EE6               	movwf	postinc1,c
  3109  0124A0  0EFF               	movlw	high STR_11
  3110  0124A2  6EE6               	movwf	postinc1,c
  3111  0124A4  0E00               	movlw	0
  3112  0124A6  6EE6               	movwf	postinc1,c
  3113  0124A8  0E02               	movlw	2
  3114  0124AA  6EE6               	movwf	postinc1,c
  3115  0124AC  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  3116  0124B0  0060  F097  FFE6   	movff	btemp,postinc1
  3117  0124B6  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3118  0124BC  0E0C               	movlw	12
  3119  0124BE  6EE6               	movwf	postinc1,c
  3120  0124C0  ECF8  F0B9         	call	_sprintf	;wreg free
  3121                           
  3122                           ;main.c: 312:      break;
  3123  0124C4  D015               	goto	l11183
  3124  0124C6                     l11181:
  3125  0124C6  0100               	movlb	0	; () banked
  3126  0124C8  51F2               	movf	_H& (0+255),w,b
  3127  0124CA  6E2F               	movwf	(btemp+10)^0,c
  3128  0124CC  6A30               	clrf	(btemp+11)^0,c
  3129                           
  3130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3131                           ; Switch size 1, requested type "simple"
  3132                           ; Number of cases is 1, Range of values is 0 to 0
  3133                           ; switch strategies available:
  3134                           ; Name         Instructions Cycles
  3135                           ; simple_byte            4     3 (average)
  3136                           ;	Chosen strategy is simple_byte
  3137  0124CE  5030               	movf	(btemp+11)^0,w,c
  3138  0124D0  0A00               	xorlw	0	; case 0
  3139  0124D2  A4D8               	btfss	status,2,c
  3140  0124D4  D00D               	goto	l11183
  3141                           
  3142                           ; BSR set to: 0
  3143                           ; Switch size 1, requested type "simple"
  3144                           ; Number of cases is 4, Range of values is 0 to 3
  3145                           ; switch strategies available:
  3146                           ; Name         Instructions Cycles
  3147                           ; simple_byte           13     7 (average)
  3148                           ;	Chosen strategy is simple_byte
  3149  0124D6  502F               	movf	(btemp+10)^0,w,c
  3150  0124D8  0A00               	xorlw	0	; case 0
  3151  0124DA  B4D8               	btfsc	status,2,c
  3152  0124DC  D60F               	goto	l1358
  3153  0124DE  0A01               	xorlw	1	; case 1
  3154  0124E0  B4D8               	btfsc	status,2,c
  3155  0124E2  D5A9               	goto	l1356
  3156  0124E4  0A03               	xorlw	3	; case 2
  3157  0124E6  B4D8               	btfsc	status,2,c
  3158  0124E8  D690               	goto	l1359
  3159  0124EA  0A01               	xorlw	1	; case 3
  3160  0124EC  B4D8               	btfsc	status,2,c
  3161  0124EE  D6FC               	goto	l11167
  3162  0124F0                     l11183:
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;main.c: 316:     clear_hid_pflags(&H);
  3166  0124F0  0EF2               	movlw	_H& (0+255)
  3167  0124F2  6EE6               	movwf	postinc1,c
  3168  0124F4  EC4B  F0C9         	call	_clear_hid_pflags	;wreg free
  3169                           
  3170                           ;main.c: 318:    StartTimer(TMR_DISPLAY, 250);
  3171  0124F8  0EFA               	movlw	250
  3172  0124FA  6EE6               	movwf	postinc1,c
  3173  0124FC  0E00               	movlw	0
  3174  0124FE  6EE6               	movwf	postinc1,c
  3175  012500  0E0A               	movlw	10
  3176  012502  6EE6               	movwf	postinc1,c
  3177  012504  EC96  F0C5         	call	_StartTimer	;wreg free
  3178                           
  3179                           ;main.c: 319:    update_lcd(0);
  3180  012508  0E00               	movlw	0
  3181  01250A  6EE6               	movwf	postinc1,c
  3182  01250C  EC70  F0B9         	call	_update_lcd	;wreg free
  3183  012510                     l11189:
  3184                           
  3185                           ;main.c: 325:   check_help(V.flipper);
  3186  012510  0102               	movlb	2	; () banked
  3187  012512  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3188  012514  6EE6               	movwf	postinc1,c
  3189  012516  ECF2  F0AF         	call	_check_help	;wreg free
  3190                           
  3191                           ;main.c: 327:   if (check_enter_button(&H)) {
  3192  01251A  0EF2               	movlw	_H& (0+255)
  3193  01251C  6EE6               	movwf	postinc1,c
  3194  01251E  ECB6  F0C5         	call	_check_enter_button	;wreg free
  3195  012522  5025               	movf	btemp^0,w,c
  3196  012524  B4D8               	btfsc	status,2,c
  3197  012526  D062               	goto	l1363
  3198                           
  3199                           ;main.c: 328:    V.calib = 0;
  3200  012528  0102               	movlb	2	; () banked
  3201  01252A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3202                           
  3203                           ; BSR set to: 2
  3204                           ;main.c: 329:    inp_index += 3;
  3205                           ;stkvar	_inp_index @ sp[(-5)+3]
  3206  01252C  0EFE               	movlw	-2
  3207  01252E  006F FF8C  F025    	movff	plusw1,btemp
  3208  012534  0E03               	movlw	3
  3209  012536  2625               	addwf	btemp^0,f,c
  3210  012538  0EFE               	movlw	-2
  3211  01253A  0060  F097  FFE3   	movff	btemp,plusw1
  3212                           
  3213                           ;main.c: 330:    if (inp_index > 9)
  3214                           ;stkvar	_inp_index @ sp[(-5)+3]
  3215  012540  0EFE               	movlw	-2
  3216  012542  006F FF8C  F025    	movff	plusw1,btemp
  3217  012548  0E09               	movlw	9
  3218  01254A  6425               	cpfsgt	btemp^0,c
  3219  01254C  D03A               	goto	l11217
  3220                           
  3221                           ; BSR set to: 2
  3222                           ;main.c: 331:     inp_index = 0;
  3223                           ;stkvar	_inp_index @ sp[(-5)+3]
  3224  01254E  0EFE               	movlw	-2
  3225  012550  6AE3               	clrf	plusw1,c
  3226  012552  D037               	goto	l11217
  3227  012554                     l11199:
  3228                           
  3229                           ; BSR set to: 2
  3230                           ;main.c: 334:     i = C_BATT;
  3231                           ;stkvar	_i @ sp[(-5)+2]
  3232  012554  0EFD               	movlw	-3
  3233  012556  6AE3               	clrf	plusw1,c
  3234                           
  3235                           ; BSR set to: 2
  3236                           ;main.c: 335:     j = C_PV;
  3237                           ;stkvar	_j @ sp[(-5)+1]
  3238  012558  0EFC               	movlw	-4
  3239  01255A  6AE3               	clrf	plusw1,c
  3240  01255C  2AE3               	incf	plusw1,f,c
  3241                           
  3242                           ; BSR set to: 2
  3243                           ;main.c: 336:     k = V_CC;
  3244                           ;stkvar	_k @ sp[(-5)+0]
  3245  01255E  0EFB               	movlw	-5
  3246  012560  6AE3               	clrf	plusw1,c
  3247  012562  82E3               	bsf	plusw1,1,c
  3248                           
  3249                           ;main.c: 337:     break;
  3250  012564  D043               	goto	l1363
  3251  012566                     l11205:
  3252                           
  3253                           ; BSR set to: 2
  3254                           ;main.c: 339:     i = V_BAT;
  3255                           ;stkvar	_i @ sp[(-5)+2]
  3256  012566  0EFD               	movlw	-3
  3257  012568  6AE3               	clrf	plusw1,c
  3258  01256A  84E3               	bsf	plusw1,2,c
  3259                           
  3260                           ;main.c: 340:     j = V_PV;
  3261                           ;stkvar	_j @ sp[(-5)+1]
  3262  01256C  0EFC               	movlw	-4
  3263  01256E  6AE3               	clrf	plusw1,c
  3264  012570  80E3               	bsf	plusw1,0,c
  3265  012572  84E3               	bsf	plusw1,2,c	;indir
  3266                           
  3267                           ;main.c: 341:     k = V_CBUS;
  3268                           ;stkvar	_k @ sp[(-5)+0]
  3269  012574  0EFB               	movlw	-5
  3270  012576  6AE3               	clrf	plusw1,c
  3271  012578  82E3               	bsf	plusw1,1,c
  3272  01257A  84E3               	bsf	plusw1,2,c	;indir
  3273                           
  3274                           ;main.c: 342:     break;
  3275  01257C  D037               	goto	l1363
  3276  01257E                     l11207:
  3277                           
  3278                           ; BSR set to: 2
  3279                           ;main.c: 344:     i = V_BBAT;
  3280                           ;stkvar	_i @ sp[(-5)+2]
  3281  01257E  0EFD               	movlw	-3
  3282  012580  6AE3               	clrf	plusw1,c
  3283  012582  82E3               	bsf	plusw1,1,c
  3284  012584  86E3               	bsf	plusw1,3,c	;indir
  3285                           
  3286                           ; BSR set to: 2
  3287                           ;main.c: 345:     j = V_TEMP;
  3288  012586  0E0B               	movlw	11
  3289  012588  6E30               	movwf	(btemp+11)^0,c
  3290                           
  3291                           ;stkvar	_j @ sp[(-5)+1]
  3292  01258A  0EFC               	movlw	-4
  3293  01258C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3294                           
  3295                           ; BSR set to: 2
  3296                           ;main.c: 346:     k = V_INVERTER;
  3297                           ;stkvar	_k @ sp[(-5)+0]
  3298  012592  0EFB               	movlw	-5
  3299  012594  6AE3               	clrf	plusw1,c
  3300  012596  84E3               	bsf	plusw1,2,c
  3301  012598  86E3               	bsf	plusw1,3,c	;indir
  3302                           
  3303                           ;main.c: 347:     break;
  3304  01259A  D028               	goto	l1363
  3305  01259C                     l11213:
  3306                           
  3307                           ; BSR set to: 2
  3308                           ;main.c: 349:     i = channel_ANB5;
  3309  01259C  0E0D               	movlw	13
  3310  01259E  6E30               	movwf	(btemp+11)^0,c
  3311                           
  3312                           ;stkvar	_i @ sp[(-5)+2]
  3313  0125A0  0EFD               	movlw	-3
  3314  0125A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3315                           
  3316                           ;main.c: 350:     j = channel_ANB5;
  3317  0125A8  0E0D               	movlw	13
  3318  0125AA  6E30               	movwf	(btemp+11)^0,c
  3319                           
  3320                           ;stkvar	_j @ sp[(-5)+1]
  3321  0125AC  0EFC               	movlw	-4
  3322  0125AE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3323                           
  3324                           ;main.c: 351:     k = channel_ANB5;
  3325  0125B4  0E0D               	movlw	13
  3326  0125B6  6E30               	movwf	(btemp+11)^0,c
  3327                           
  3328                           ;stkvar	_k @ sp[(-5)+0]
  3329  0125B8  0EFB               	movlw	-5
  3330  0125BA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3331                           
  3332                           ;main.c: 352:     break;
  3333  0125C0  D015               	goto	l1363
  3334  0125C2                     l11217:
  3335                           
  3336                           ; BSR set to: 2
  3337                           ;stkvar	_inp_index @ sp[(-5)+3]
  3338  0125C2  0EFE               	movlw	-2
  3339  0125C4  50E3               	movf	plusw1,w,c
  3340  0125C6  6E2F               	movwf	(btemp+10)^0,c
  3341  0125C8  6A30               	clrf	(btemp+11)^0,c
  3342                           
  3343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3344                           ; Switch size 1, requested type "simple"
  3345                           ; Number of cases is 1, Range of values is 0 to 0
  3346                           ; switch strategies available:
  3347                           ; Name         Instructions Cycles
  3348                           ; simple_byte            4     3 (average)
  3349                           ;	Chosen strategy is simple_byte
  3350  0125CA  5030               	movf	(btemp+11)^0,w,c
  3351  0125CC  0A00               	xorlw	0	; case 0
  3352  0125CE  A4D8               	btfss	status,2,c
  3353  0125D0  D00D               	goto	l1363
  3354                           
  3355                           ; BSR set to: 2
  3356                           ; Switch size 1, requested type "simple"
  3357                           ; Number of cases is 4, Range of values is 0 to 9
  3358                           ; switch strategies available:
  3359                           ; Name         Instructions Cycles
  3360                           ; simple_byte           13     7 (average)
  3361                           ;	Chosen strategy is simple_byte
  3362  0125D2  502F               	movf	(btemp+10)^0,w,c
  3363  0125D4  0A00               	xorlw	0	; case 0
  3364  0125D6  B4D8               	btfsc	status,2,c
  3365  0125D8  D7BD               	goto	l11199
  3366  0125DA  0A03               	xorlw	3	; case 3
  3367  0125DC  B4D8               	btfsc	status,2,c
  3368  0125DE  D7C3               	goto	l11205
  3369  0125E0  0A05               	xorlw	5	; case 6
  3370  0125E2  B4D8               	btfsc	status,2,c
  3371  0125E4  D7CC               	goto	l11207
  3372  0125E6  0A0F               	xorlw	15	; case 9
  3373  0125E8  B4D8               	btfsc	status,2,c
  3374  0125EA  D7D8               	goto	l11213
  3375  0125EC                     l1363:
  3376                           
  3377                           ;main.c: 361:   if (V.set_sequ) {
  3378  0125EC  0102               	movlb	2	; () banked
  3379  0125EE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3380  0125F0  D4D8               	goto	l11133
  3381                           
  3382                           ; BSR set to: 2
  3383                           ;main.c: 362:    if (TimerDone(TMR_INFO)) {
  3384  0125F2  0E07               	movlw	7
  3385  0125F4  6EE6               	movwf	postinc1,c
  3386  0125F6  ECF7  F0C7         	call	_TimerDone	;wreg free
  3387  0125FA  5025               	movf	btemp^0,w,c
  3388  0125FC  B4D8               	btfsc	status,2,c
  3389  0125FE  D00B               	goto	l11227
  3390                           
  3391                           ;main.c: 363:     V.set_sequ = 0;
  3392  012600  0102               	movlb	2	; () banked
  3393  012602  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3394                           
  3395                           ; BSR set to: 2
  3396                           ;main.c: 364:     set_vterm(0);
  3397  012604  0E00               	movlw	0
  3398  012606  6EE6               	movwf	postinc1,c
  3399  012608  ECF4  F0C9         	call	_set_vterm	;wreg free
  3400                           
  3401                           ;main.c: 365:     update_lcd(0);
  3402  01260C  0E00               	movlw	0
  3403  01260E  6EE6               	movwf	postinc1,c
  3404  012610  EC70  F0B9         	call	_update_lcd	;wreg free
  3405                           
  3406                           ;main.c: 366:    } else {
  3407  012614  D4C6               	goto	l11133
  3408  012616                     l11227:
  3409                           
  3410                           ;main.c: 367:     set_vterm(2);
  3411  012616  0E02               	movlw	2
  3412  012618  6EE6               	movwf	postinc1,c
  3413  01261A  ECF4  F0C9         	call	_set_vterm	;wreg free
  3414                           
  3415                           ;main.c: 368:     update_lcd(2);
  3416  01261E  0E02               	movlw	2
  3417  012620  6EE6               	movwf	postinc1,c
  3418  012622  EC70  F0B9         	call	_update_lcd	;wreg free
  3419  012626  D4BD               	goto	l11133
  3420  012628                     __end_of_main:
  3421                           	opt callstack 0
  3422                           
  3423 ;; *************** function _static_soc *****************
  3424 ;; Defined at:
  3425 ;;		line 84 in file "mbmc.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1  [STACK] void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2
  3434 ;; Tracked objects:
  3435 ;;		On entry : 3F/39
  3436 ;;		On exit  : 3F/1
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3443 ;;Total ram usage:        0 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    7
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_main
  3450 ;; This function uses a reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text1
  3454  018D44                     __ptext1:
  3455                           	opt callstack 0
  3456  018D44                     _static_soc:
  3457                           	opt callstack 23
  3458                           
  3459                           ;mbmc.c: 86:  C.static_ah = C.bank_ah;
  3460                           
  3461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3462                           ;incstack = 0
  3463  018D44  C17C  F180         	movff	_C+124,_C+128	;volatile
  3464  018D48  C17D  F181         	movff	_C+125,_C+129	;volatile
  3465  018D4C  C17E  F182         	movff	_C+126,_C+130	;volatile
  3466  018D50  C17F  F183         	movff	_C+127,_C+131	;volatile
  3467                           
  3468                           ;mbmc.c: 87:  C.runtime = 120;
  3469  018D54  0E00               	movlw	0
  3470  018D56  0101               	movlb	1	; () banked
  3471  018D58  6FA1               	movwf	(_C+161)& (0+255),b	;volatile
  3472  018D5A  0E78               	movlw	120
  3473  018D5C  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
  3474                           
  3475                           ;mbmc.c: 88:  C.soc = 100;
  3476  018D5E  0E00               	movlw	0
  3477  018D60  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
  3478  018D62  0E64               	movlw	100
  3479  018D64  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
  3480                           
  3481                           ; BSR set to: 1
  3482                           ;mbmc.c: 89:  C.dynamic_ah = C.static_ah;
  3483  018D66  C180  F184         	movff	_C+128,_C+132	;volatile
  3484  018D6A  C181  F185         	movff	_C+129,_C+133	;volatile
  3485  018D6E  C182  F186         	movff	_C+130,_C+134	;volatile
  3486  018D72  C183  F187         	movff	_C+131,_C+135	;volatile
  3487                           
  3488                           ; BSR set to: 1
  3489                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3490  018D76  0012               	return		;funcret
  3491  018D78                     __end_of_static_soc:
  3492                           	opt callstack 0
  3493                           
  3494 ;; *************** function _start_switch_handler *****************
  3495 ;; Defined at:
  3496 ;;		line 119 in file "dio.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1  [STACK] void 
  3503 ;; Registers used:
  3504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3505 ;; Tracked objects:
  3506 ;;		On entry : 1/0
  3507 ;;		On exit  : 3F/39
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    8
  3517 ;; This function calls:
  3518 ;;		_INT1_SetInterruptHandler
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text2
  3525  01938C                     __ptext2:
  3526                           	opt callstack 0
  3527  01938C                     _start_switch_handler:
  3528                           	opt callstack 22
  3529                           
  3530                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3531                           
  3532                           ; BSR set to: 1
  3533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3534                           ;incstack = 0
  3535  01938C  0139               	movlb	57	; () banked
  3536  01938E  9195               	bcf	149,0,b	;volatile
  3537                           
  3538                           ; BSR set to: 57
  3539                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3540  019390  0E68               	movlw	low _switch_handler
  3541  019392  6EE6               	movwf	postinc1,c
  3542  019394  0E6E               	movlw	high _switch_handler
  3543  019396  6EE6               	movwf	postinc1,c
  3544  019398  0E01               	movlw	low (_switch_handler shr (0+16))
  3545  01939A  6EE6               	movwf	postinc1,c
  3546  01939C  EC97  F0C8         	call	_INT1_SetInterruptHandler	;wreg free
  3547                           
  3548                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3549  0193A0  0E02               	movlw	2
  3550  0193A2  0100               	movlb	0	; () banked
  3551  0193A4  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3555  0193A6  0139               	movlb	57	; () banked
  3556  0193A8  8195               	bsf	149,0,b	;volatile
  3557                           
  3558                           ; BSR set to: 57
  3559                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3560  0193AA  0012               	return		;funcret
  3561  0193AC                     __end_of_start_switch_handler:
  3562                           	opt callstack 0
  3563                           
  3564 ;; *************** function _start_adc_scan *****************
  3565 ;; Defined at:
  3566 ;;		line 33 in file "daq.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1  [STACK] _Bool 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 1/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    8
  3587 ;; This function calls:
  3588 ;;		_ADCC_DischargeSampleCapacitor
  3589 ;;		_ADCC_SetADIInterruptHandler
  3590 ;;		_ADCC_SetADTIInterruptHandler
  3591 ;;		_ADCC_StartConversion
  3592 ;; This function is called by:
  3593 ;;		_main
  3594 ;; This function uses a reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text3
  3598  018512                     __ptext3:
  3599                           	opt callstack 0
  3600  018512                     _start_adc_scan:
  3601                           	opt callstack 22
  3602                           
  3603                           ;daq.c: 35:  if (R.done)
  3604                           
  3605                           ; BSR set to: 57
  3606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3607                           ;incstack = 0
  3608  018512  0100               	movlb	0	; () banked
  3609  018514  51EA               	movf	(_R+39)& (0+255),w,b	;volatile
  3610  018516  A4D8               	btfss	status,2,c
  3611  018518  0012               	return	
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;daq.c: 38:  R.scan_index = 0;
  3615  01851A  6BE7               	clrf	(_R+36)& (0+255),b	;volatile
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3619  01851C  013A               	movlb	58	; () banked
  3620  01851E  5140               	movf	64,w,b	;volatile
  3621  018520  006E F940  F025    	movff	14928,btemp	;volatile
  3622  018526  6A26               	clrf	(btemp+1)^0,c
  3623  018528  0060  F094  F026   	movff	btemp,btemp+1
  3624  01852E  6A25               	clrf	btemp^0,c
  3625  018530  2625               	addwf	btemp^0,f,c
  3626  018532  0E00               	movlw	0
  3627  018534  2226               	addwfc	(btemp+1)^0,f,c
  3628  018536  0E77               	movlw	119
  3629  018538  1425               	andwf	btemp^0,w,c
  3630  01853A  0100               	movlb	0	; () banked
  3631  01853C  6FE8               	movwf	(_R+37)& (0+255),b	;volatile
  3632  01853E  0E3C               	movlw	60
  3633  018540  1426               	andwf	(btemp+1)^0,w,c
  3634  018542  6FE9               	movwf	(_R+38)& (0+255),b	;volatile
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3638  018544  0E22               	movlw	low _adc_int_handler
  3639  018546  6EE6               	movwf	postinc1,c
  3640  018548  0E96               	movlw	high _adc_int_handler
  3641  01854A  6EE6               	movwf	postinc1,c
  3642  01854C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3643  01854E  6EE6               	movwf	postinc1,c
  3644  018550  ECD3  F0C8         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3645                           
  3646                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3647  018554  0EEE               	movlw	low _adc_int_t_handler
  3648  018556  6EE6               	movwf	postinc1,c
  3649  018558  0E82               	movlw	high _adc_int_t_handler
  3650  01855A  6EE6               	movwf	postinc1,c
  3651  01855C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3652  01855E  6EE6               	movwf	postinc1,c
  3653  018560  ECBF  F0C8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3654                           
  3655                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3656  018564  ECE9  F0CA         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3657                           
  3658                           ; BSR set to: 62
  3659                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3660  018568  0100               	movlb	0	; () banked
  3661  01856A  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
  3662  01856C  0B0F               	andlw	15
  3663  01856E  6EE6               	movwf	postinc1,c
  3664  018570  EC9C  F0CA         	call	_ADCC_StartConversion	;wreg free
  3665                           
  3666                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3667  018574  0012               	return		;funcret
  3668  018576                     __end_of_start_adc_scan:
  3669                           	opt callstack 0
  3670                           
  3671 ;; *************** function _ADCC_StartConversion *****************
  3672 ;; Defined at:
  3673 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  channel         1  [STACK] enum E16136
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1  [STACK] void 
  3680 ;; Registers used:
  3681 ;;		fsr1l, fsr1h
  3682 ;; Tracked objects:
  3683 ;;		On entry : 3F/0
  3684 ;;		On exit  : 3F/3E
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    7
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_start_adc_scan
  3698 ;;		_adc_int_t_handler
  3699 ;; This function uses a reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text4
  3703  019538                     __ptext4:
  3704                           	opt callstack 0
  3705  019538                     _ADCC_StartConversion:
  3706                           	opt callstack 4
  3707                           
  3708                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3709                           ;stkvar	_channel @ sp[(0)+-1]
  3710                           
  3711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3712                           ;incstack = 0
  3713  019538  0EFF               	movlw	-1
  3714  01953A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3715                           
  3716                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3717  019540  013E               	movlb	62	; () banked
  3718  019542  8FF8               	bsf	248,7,b	;volatile
  3719                           
  3720                           ; BSR set to: 62
  3721                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3722  019544  81F8               	bsf	248,0,b	;volatile
  3723                           
  3724                           ; BSR set to: 62
  3725                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3726  019546  52E5               	movf	postdec1,f,c
  3727  019548  0012               	return		;funcret
  3728  01954A                     __end_of_ADCC_StartConversion:
  3729                           	opt callstack 0
  3730                           
  3731 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3732 ;; Defined at:
  3733 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1  [STACK] void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 3F/3E
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    7
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_start_adc_scan
  3758 ;;		_adc_int_t_handler
  3759 ;; This function uses a reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text5
  3763  0195D2                     __ptext5:
  3764                           	opt callstack 0
  3765  0195D2                     _ADCC_DischargeSampleCapacitor:
  3766                           	opt callstack 4
  3767                           
  3768                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3769                           
  3770                           ; BSR set to: 62
  3771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3772                           ;incstack = 0
  3773  0195D2  0E3B               	movlw	59
  3774  0195D4  013E               	movlb	62	; () banked
  3775  0195D6  6FF1               	movwf	241,b	;volatile
  3776                           
  3777                           ; BSR set to: 62
  3778                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3779  0195D8  0012               	return		;funcret
  3780  0195DA                     __end_of_ADCC_DischargeSampleCapacitor:
  3781                           	opt callstack 0
  3782                           
  3783 ;; *************** function _srand *****************
  3784 ;; Defined at:
  3785 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  s               2  [STACK] unsigned int 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1  [STACK] void 
  3792 ;; Registers used:
  3793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3794 ;; Tracked objects:
  3795 ;;		On entry : 3F/0
  3796 ;;		On exit  : 3F/1
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    7
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_main
  3810 ;; This function uses a reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text6
  3814  018D78                     __ptext6:
  3815                           	opt callstack 0
  3816  018D78                     _srand:
  3817                           	opt callstack 23
  3818                           
  3819                           ;stkvar	_s @ sp[(0)+-2]
  3820                           
  3821                           ; BSR set to: 62
  3822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3823                           ;incstack = 0
  3824  018D78  0EFE               	movlw	-2
  3825  018D7A  50E3               	movf	plusw1,w,c
  3826  018D7C  0FFF               	addlw	255
  3827  018D7E  6E2F               	movwf	(btemp+10)^0,c
  3828  018D80  0EFF               	movlw	-1
  3829  018D82  006F FF8C  F030    	movff	plusw1,btemp+11
  3830  018D88  0EFF               	movlw	255
  3831  018D8A  2230               	addwfc	(btemp+11)^0,f,c
  3832  018D8C  0060  F0BC  F1CD   	movff	btemp+10,_seed
  3833  018D92  0060  F0C0  F1CE   	movff	btemp+11,_seed+1
  3834  018D98  0101               	movlb	1	; () banked
  3835  018D9A  6BCF               	clrf	(_seed+2)& (0+255),b
  3836  018D9C  6BD0               	clrf	(_seed+3)& (0+255),b
  3837  018D9E  6BD1               	clrf	(_seed+4)& (0+255),b
  3838  018DA0  6BD2               	clrf	(_seed+5)& (0+255),b
  3839  018DA2  6BD3               	clrf	(_seed+6)& (0+255),b
  3840  018DA4  6BD4               	clrf	(_seed+7)& (0+255),b
  3841                           
  3842                           ; BSR set to: 1
  3843                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3844  018DA6  52E5               	movf	postdec1,f,c
  3845  018DA8  52E5               	movf	postdec1,f,c
  3846  018DAA  0012               	return		;funcret
  3847  018DAC                     __end_of_srand:
  3848                           	opt callstack 0
  3849                           
  3850 ;; *************** function _init_display *****************
  3851 ;; Defined at:
  3852 ;;		line 37 in file "eadog.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1  [STACK] void 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/2
  3863 ;;		On exit  : 3F/3D
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3870 ;;Total ram usage:        0 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    9
  3873 ;; This function calls:
  3874 ;;		_ringBufS_init
  3875 ;;		_send_lcd_cmd
  3876 ;;		_send_lcd_cmd_long
  3877 ;;		_wdtdelay
  3878 ;; This function is called by:
  3879 ;;		_main
  3880 ;; This function uses a reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text7
  3884  0176F8                     __ptext7:
  3885                           	opt callstack 0
  3886  0176F8                     _init_display:
  3887                           	opt callstack 21
  3888                           
  3889                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3890                           
  3891                           ; BSR set to: 1
  3892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3893                           ;incstack = 0
  3894  0176F8  0E43               	movlw	low _ring_buf1
  3895  0176FA  0100               	movlb	0	; () banked
  3896  0176FC  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3897  0176FE  0E04               	movlw	high _ring_buf1
  3898  017700  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3899                           
  3900                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3901  017702  0E00               	movlw	low _ring_buf2
  3902  017704  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3903  017706  0E04               	movlw	high _ring_buf2
  3904  017708  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3908  01770A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  3909  017710  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  3910  017716  ECCF  F0C7         	call	_ringBufS_init	;wreg free
  3911                           
  3912                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3913  01771A  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  3914  017720  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  3915  017726  ECCF  F0C7         	call	_ringBufS_init	;wreg free
  3916                           
  3917                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3918  01772A  84BE               	bsf	190,2,c	;volatile
  3919  01772C  84BC               	bsf	188,2,c	;volatile
  3920                           
  3921                           ;eadog.c: 58:  wdtdelay(350000);
  3922  01772E  0E30               	movlw	48
  3923  017730  6EE6               	movwf	postinc1,c
  3924  017732  0E57               	movlw	87
  3925  017734  6EE6               	movwf	postinc1,c
  3926  017736  0E05               	movlw	5
  3927  017738  6EE6               	movwf	postinc1,c
  3928  01773A  0E00               	movlw	0
  3929  01773C  6EE6               	movwf	postinc1,c
  3930  01773E  EC7E  F0C3         	call	_wdtdelay	;wreg free
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;eadog.c: 59:  send_lcd_cmd(0x39);
  3934  017742  0E39               	movlw	57
  3935  017744  6EE6               	movwf	postinc1,c
  3936  017746  ECBB  F0C7         	call	_send_lcd_cmd	;wreg free
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;eadog.c: 60:  send_lcd_cmd(0x1d);
  3940  01774A  0E1D               	movlw	29
  3941  01774C  6EE6               	movwf	postinc1,c
  3942  01774E  ECBB  F0C7         	call	_send_lcd_cmd	;wreg free
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;eadog.c: 61:  send_lcd_cmd(0x50);
  3946  017752  0E50               	movlw	80
  3947  017754  6EE6               	movwf	postinc1,c
  3948  017756  ECBB  F0C7         	call	_send_lcd_cmd	;wreg free
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;eadog.c: 62:  send_lcd_cmd(0x6c);
  3952  01775A  0E6C               	movlw	108
  3953  01775C  6EE6               	movwf	postinc1,c
  3954  01775E  ECBB  F0C7         	call	_send_lcd_cmd	;wreg free
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;eadog.c: 63:  send_lcd_cmd(0x76);
  3958  017762  0E76               	movlw	118
  3959  017764  6EE6               	movwf	postinc1,c
  3960  017766  ECBB  F0C7         	call	_send_lcd_cmd	;wreg free
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;eadog.c: 64:  send_lcd_cmd_long(0x38);
  3964  01776A  0E38               	movlw	56
  3965  01776C  6EE6               	movwf	postinc1,c
  3966  01776E  ECA7  F0C7         	call	_send_lcd_cmd_long	;wreg free
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;eadog.c: 65:  send_lcd_cmd(0x0f);
  3970  017772  0E0F               	movlw	15
  3971  017774  6EE6               	movwf	postinc1,c
  3972  017776  ECBB  F0C7         	call	_send_lcd_cmd	;wreg free
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;eadog.c: 66:  send_lcd_cmd_long(0x01);
  3976  01777A  0E01               	movlw	1
  3977  01777C  6EE6               	movwf	postinc1,c
  3978  01777E  ECA7  F0C7         	call	_send_lcd_cmd_long	;wreg free
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;eadog.c: 67:  send_lcd_cmd(0x02);
  3982  017782  0E02               	movlw	2
  3983  017784  6EE6               	movwf	postinc1,c
  3984  017786  ECBB  F0C7         	call	_send_lcd_cmd	;wreg free
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;eadog.c: 68:  send_lcd_cmd(0x06);
  3988  01778A  0E06               	movlw	6
  3989  01778C  6EE6               	movwf	postinc1,c
  3990  01778E  ECBB  F0C7         	call	_send_lcd_cmd	;wreg free
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;eadog.c: 69:  wdtdelay(30);
  3994  017792  0E1E               	movlw	30
  3995  017794  6EE6               	movwf	postinc1,c
  3996  017796  0E00               	movlw	0
  3997  017798  6EE6               	movwf	postinc1,c
  3998  01779A  0E00               	movlw	0
  3999  01779C  6EE6               	movwf	postinc1,c
  4000  01779E  0E00               	movlw	0
  4001  0177A0  6EE6               	movwf	postinc1,c
  4002  0177A2  EC7E  F0C3         	call	_wdtdelay	;wreg free
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;eadog.c: 70:  SPI1CON2 = 0x02;
  4006  0177A6  0E02               	movlw	2
  4007  0177A8  013D               	movlb	61	; () banked
  4008  0177AA  6F16               	movwf	22,b	;volatile
  4009                           
  4010                           ; BSR set to: 61
  4011                           ;eadog.c: 71:  SPI1CON1 = 0x40;
  4012  0177AC  0E40               	movlw	64
  4013  0177AE  6F15               	movwf	21,b	;volatile
  4014                           
  4015                           ; BSR set to: 61
  4016                           ;eadog.c: 72:  SPI1CON0 = 0x83;
  4017  0177B0  0E83               	movlw	131
  4018  0177B2  6F14               	movwf	20,b	;volatile
  4019                           
  4020                           ; BSR set to: 61
  4021                           ;eadog.c: 74:  SPI1INTFbits.SPI1TXUIF = 0;
  4022  0177B4  931A               	bcf	26,1,b	;volatile
  4023                           
  4024                           ; BSR set to: 61
  4025                           ;eadog.c: 75:  DMA1CON1bits.DMODE = 0;
  4026  0177B6  0E3F               	movlw	-193
  4027  0177B8  013B               	movlb	59	; () banked
  4028  0177BA  17FD               	andwf	253,f,b	;volatile
  4029                           
  4030                           ; BSR set to: 59
  4031                           ;eadog.c: 76:  DMA1CON1bits.DSTP = 0;
  4032  0177BC  9BFD               	bcf	253,5,b	;volatile
  4033                           
  4034                           ; BSR set to: 59
  4035                           ;eadog.c: 77:  DMA1CON1bits.SMODE = 1;
  4036  0177BE  51FD               	movf	253,w,b	;volatile
  4037  0177C0  0BF9               	andlw	-7
  4038  0177C2  0902               	iorlw	2
  4039  0177C4  6FFD               	movwf	253,b	;volatile
  4040                           
  4041                           ; BSR set to: 59
  4042                           ;eadog.c: 78:  DMA1CON1bits.SMR = 0;
  4043  0177C6  0EE7               	movlw	-25
  4044  0177C8  17FD               	andwf	253,f,b	;volatile
  4045                           
  4046                           ; BSR set to: 59
  4047                           ;eadog.c: 79:  DMA1CON1bits.SSTP = 1;
  4048  0177CA  81FD               	bsf	253,0,b	;volatile
  4049                           
  4050                           ; BSR set to: 59
  4051                           ;eadog.c: 80:  DMA1SSA = (uint32_t) & ring_buf1;
  4052  0177CC  0E43               	movlw	low _ring_buf1
  4053  0177CE  6FF9               	movwf	249,b	;volatile
  4054  0177D0  0E04               	movlw	high _ring_buf1
  4055  0177D2  6FFA               	movwf	250,b	;volatile
  4056  0177D4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4057  0177D6  6FFB               	movwf	251,b	;volatile
  4058                           
  4059                           ; BSR set to: 59
  4060                           ;eadog.c: 81:  DMA1CON0bits.DGO = 0;
  4061  0177D8  9BFC               	bcf	252,5,b	;volatile
  4062                           
  4063                           ; BSR set to: 59
  4064                           ;eadog.c: 82:  SPI1INTFbits.SPI1TXUIF = 1;
  4065  0177DA  013D               	movlb	61	; () banked
  4066  0177DC  831A               	bsf	26,1,b	;volatile
  4067                           
  4068                           ; BSR set to: 61
  4069                           ;eadog.c: 83:  LATEbits.LATE2 = 0;
  4070  0177DE  94BE               	bcf	190,2,c	;volatile
  4071                           
  4072                           ; BSR set to: 61
  4073                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4074  0177E0  0012               	return		;funcret
  4075  0177E2                     __end_of_init_display:
  4076                           	opt callstack 0
  4077                           
  4078 ;; *************** function _send_lcd_cmd_long *****************
  4079 ;; Defined at:
  4080 ;;		line 127 in file "eadog.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  cmd             1  [STACK] const unsigned char 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1  [STACK] void 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4089 ;; Tracked objects:
  4090 ;;		On entry : 3F/0
  4091 ;;		On exit  : 3F/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    8
  4101 ;; This function calls:
  4102 ;;		_SPI1_Exchange8bit
  4103 ;;		_wdtdelay
  4104 ;; This function is called by:
  4105 ;;		_init_display
  4106 ;; This function uses a reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text8
  4110  018F4E                     __ptext8:
  4111                           	opt callstack 0
  4112  018F4E                     _send_lcd_cmd_long:
  4113                           	opt callstack 21
  4114                           
  4115                           ; BSR set to: 61
  4116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4117                           ;incstack = 0
  4118                           ;eadog.c: 127: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 128: {;eadog.c:
      +                           129:  do { LATCbits.LATC1 = 0; } while(0);
  4119  018F4E  92BC               	bcf	188,1,c	;volatile
  4120                           
  4121                           ;eadog.c: 130:  do { LATCbits.LATC2 = 0; } while(0);
  4122  018F50  94BC               	bcf	188,2,c	;volatile
  4123                           
  4124                           ;eadog.c: 131:  SPI1_Exchange8bit(cmd);
  4125                           ;stkvar	_cmd @ sp[(0)+-1]
  4126  018F52  0EFF               	movlw	-1
  4127  018F54  50E3               	movf	plusw1,w,c
  4128  018F56  6EE6               	movwf	postinc1,c
  4129  018F58  ECD6  F0C9         	call	_SPI1_Exchange8bit	;wreg free
  4130                           
  4131                           ; BSR set to: 57
  4132                           ;eadog.c: 132:  wdtdelay(800);
  4133  018F5C  0E20               	movlw	32
  4134  018F5E  6EE6               	movwf	postinc1,c
  4135  018F60  0E03               	movlw	3
  4136  018F62  6EE6               	movwf	postinc1,c
  4137  018F64  0E00               	movlw	0
  4138  018F66  6EE6               	movwf	postinc1,c
  4139  018F68  0E00               	movlw	0
  4140  018F6A  6EE6               	movwf	postinc1,c
  4141  018F6C  EC7E  F0C3         	call	_wdtdelay	;wreg free
  4142                           
  4143                           ; BSR set to: 0
  4144  018F70  82BC               	bsf	188,1,c	;volatile
  4145                           
  4146                           ; BSR set to: 0
  4147                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4148  018F72  52E5               	movf	postdec1,f,c
  4149  018F74  0012               	return		;funcret
  4150  018F76                     __end_of_send_lcd_cmd_long:
  4151                           	opt callstack 0
  4152                           
  4153 ;; *************** function _send_lcd_cmd *****************
  4154 ;; Defined at:
  4155 ;;		line 115 in file "eadog.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  cmd             1  [STACK] const unsigned char 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1  [STACK] void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4164 ;; Tracked objects:
  4165 ;;		On entry : 3F/0
  4166 ;;		On exit  : 3F/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    8
  4176 ;; This function calls:
  4177 ;;		_SPI1_Exchange8bit
  4178 ;;		_wdtdelay
  4179 ;; This function is called by:
  4180 ;;		_init_display
  4181 ;; This function uses a reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text9
  4185  018F76                     __ptext9:
  4186                           	opt callstack 0
  4187  018F76                     _send_lcd_cmd:
  4188                           	opt callstack 21
  4189                           
  4190                           ; BSR set to: 0
  4191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4192                           ;incstack = 0
  4193                           ;eadog.c: 115: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 116: {;eadog.c: 117:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4194  018F76  92BC               	bcf	188,1,c	;volatile
  4195                           
  4196                           ;eadog.c: 118:  do { LATCbits.LATC2 = 0; } while(0);
  4197  018F78  94BC               	bcf	188,2,c	;volatile
  4198                           
  4199                           ;eadog.c: 119:  SPI1_Exchange8bit(cmd);
  4200                           ;stkvar	_cmd @ sp[(0)+-1]
  4201  018F7A  0EFF               	movlw	-1
  4202  018F7C  50E3               	movf	plusw1,w,c
  4203  018F7E  6EE6               	movwf	postinc1,c
  4204  018F80  ECD6  F0C9         	call	_SPI1_Exchange8bit	;wreg free
  4205                           
  4206                           ; BSR set to: 57
  4207                           ;eadog.c: 120:  wdtdelay(30);
  4208  018F84  0E1E               	movlw	30
  4209  018F86  6EE6               	movwf	postinc1,c
  4210  018F88  0E00               	movlw	0
  4211  018F8A  6EE6               	movwf	postinc1,c
  4212  018F8C  0E00               	movlw	0
  4213  018F8E  6EE6               	movwf	postinc1,c
  4214  018F90  0E00               	movlw	0
  4215  018F92  6EE6               	movwf	postinc1,c
  4216  018F94  EC7E  F0C3         	call	_wdtdelay	;wreg free
  4217                           
  4218                           ; BSR set to: 0
  4219  018F98  82BC               	bsf	188,1,c	;volatile
  4220                           
  4221                           ; BSR set to: 0
  4222                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4223  018F9A  52E5               	movf	postdec1,f,c
  4224  018F9C  0012               	return		;funcret
  4225  018F9E                     __end_of_send_lcd_cmd:
  4226                           	opt callstack 0
  4227                           
  4228 ;; *************** function _SPI1_Exchange8bit *****************
  4229 ;; Defined at:
  4230 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  data            1  [STACK] unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1  [STACK] unsigned char 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 3F/39
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4248 ;;Total ram usage:        0 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    7
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_send_lcd_cmd
  4255 ;;		_send_lcd_cmd_long
  4256 ;; This function uses a reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text10
  4260  0193AC                     __ptext10:
  4261                           	opt callstack 0
  4262  0193AC                     _SPI1_Exchange8bit:
  4263                           	opt callstack 21
  4264                           
  4265                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4266                           
  4267                           ; BSR set to: 0
  4268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4269                           ;incstack = 0
  4270  0193AC  0E01               	movlw	1
  4271  0193AE  013D               	movlb	61	; () banked
  4272  0193B0  6F12               	movwf	18,b	;volatile
  4273                           
  4274                           ; BSR set to: 61
  4275                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4276                           ;stkvar	_data @ sp[(0)+-1]
  4277  0193B2  0EFF               	movlw	-1
  4278  0193B4  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4279  0193BA                     l837:
  4280                           
  4281                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4282  0193BA  0139               	movlb	57	; () banked
  4283  0193BC  A9A2               	btfss	162,4,b	;volatile
  4284  0193BE  D7FD               	goto	l837
  4285                           
  4286                           ; BSR set to: 57
  4287                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4288  0193C0  006F F440  F025    	movff	15632,btemp	;volatile
  4289                           
  4290                           ; BSR set to: 57
  4291                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4292  0193C6  52E5               	movf	postdec1,f,c
  4293  0193C8  0012               	return		;funcret
  4294  0193CA                     __end_of_SPI1_Exchange8bit:
  4295                           	opt callstack 0
  4296                           
  4297 ;; *************** function _ringBufS_init *****************
  4298 ;; Defined at:
  4299 ;;		line 22 in file "ringbufs.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  _this           2  [STACK] PTR volatile struct ring
  4302 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1  [STACK] void 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4318 ;;Total ram usage:        0 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    8
  4321 ;; This function calls:
  4322 ;;		_memset
  4323 ;; This function is called by:
  4324 ;;		_init_display
  4325 ;; This function uses a reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text11
  4329  018F9E                     __ptext11:
  4330                           	opt callstack 0
  4331  018F9E                     _ringBufS_init:
  4332                           	opt callstack 21
  4333                           
  4334                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4335                           
  4336                           ; BSR set to: 57
  4337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4338                           ;incstack = 0
  4339  018F9E  0E43               	movlw	67
  4340  018FA0  6EE6               	movwf	postinc1,c
  4341  018FA2  0E00               	movlw	0
  4342  018FA4  6EE6               	movwf	postinc1,c
  4343  018FA6  0E00               	movlw	0
  4344  018FA8  6EE6               	movwf	postinc1,c
  4345  018FAA  0E00               	movlw	0
  4346  018FAC  6EE6               	movwf	postinc1,c
  4347                           
  4348                           ;stkvar	__this @ sp[(-4)+-2]
  4349  018FAE  0EFA               	movlw	-6
  4350  018FB0  006F FF8F FFE6     	movff	plusw1,postinc1
  4351  018FB6  006F FF8F FFE6     	movff	plusw1,postinc1
  4352  018FBC  EC16  F0A8         	call	_memset	;wreg free
  4353                           
  4354                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4355  018FC0  52E5               	movf	postdec1,f,c
  4356  018FC2  52E5               	movf	postdec1,f,c
  4357  018FC4  0012               	return		;funcret
  4358  018FC6                     __end_of_ringBufS_init:
  4359                           	opt callstack 0
  4360                           
  4361 ;; *************** function _init_bsoc *****************
  4362 ;; Defined at:
  4363 ;;		line 36 in file "bsoc.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1  [STACK] void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  4372 ;; Tracked objects:
  4373 ;;		On entry : 3F/1
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    8
  4384 ;; This function calls:
  4385 ;;		_TMR3_SetInterruptHandler
  4386 ;; This function is called by:
  4387 ;;		_main
  4388 ;; This function uses a reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text12
  4392  01954A                     __ptext12:
  4393                           	opt callstack 0
  4394  01954A                     _init_bsoc:
  4395                           	opt callstack 22
  4396                           
  4397                           ;bsoc.c: 38:  TMR3_SetInterruptHandler(calc_bsoc);
  4398                           
  4399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4400                           ;incstack = 0
  4401  01954A  0EB4               	movlw	low _calc_bsoc
  4402  01954C  6EE6               	movwf	postinc1,c
  4403  01954E  0E44               	movlw	high _calc_bsoc
  4404  019550  6EE6               	movwf	postinc1,c
  4405  019552  0E01               	movlw	low (_calc_bsoc shr (0+16))
  4406  019554  6EE6               	movwf	postinc1,c
  4407  019556  EC83  F0C8         	call	_TMR3_SetInterruptHandler	;wreg free
  4408                           
  4409                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4410  01955A  0012               	return		;funcret
  4411  01955C                     __end_of_init_bsoc:
  4412                           	opt callstack 0
  4413                           
  4414 ;; *************** function _hid_display *****************
  4415 ;; Defined at:
  4416 ;;		line 17 in file "hid.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  h               1  [STACK] PTR struct H_data
  4419 ;;		 -> H(7), 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1  [STACK] PTR struct H_data
  4424 ;; Registers used:
  4425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4426 ;; Tracked objects:
  4427 ;;		On entry : 3F/1
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4435 ;;Total ram usage:        0 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    9
  4438 ;; This function calls:
  4439 ;;		_hid_input
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text13
  4446  0174FA                     __ptext13:
  4447                           	opt callstack 0
  4448  0174FA                     _hid_display:
  4449                           	opt callstack 21
  4450                           
  4451                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4452                           ;stkvar	_h @ sp[(0)+-1]
  4453                           
  4454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4455                           ;incstack = 0
  4456  0174FA  0EFF               	movlw	-1
  4457  0174FC  50E3               	movf	plusw1,w,c
  4458  0174FE  6EE6               	movwf	postinc1,c
  4459  017500  EC67  F0C0         	call	_hid_input	;wreg free
  4460                           
  4461                           ;hid.c: 21:  switch (h->h_state) {
  4462  017504  D066               	goto	l9507
  4463  017506                     l9485:
  4464                           
  4465                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4466                           ;stkvar	_h @ sp[(0)+-1]
  4467  017506  0EFF               	movlw	-1
  4468  017508  50E3               	movf	plusw1,w,c
  4469  01750A  6ED9               	movwf	fsr2l,c
  4470  01750C  6ADA               	clrf	fsr2h,c
  4471  01750E  0E01               	movlw	1
  4472  017510  26D9               	addwf	fsr2l,f,c
  4473  017512  0E01               	movlw	1
  4474  017514  6EDF               	movwf	indf2,c
  4475                           
  4476                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4477                           ;stkvar	_h @ sp[(0)+-1]
  4478  017516  0EFF               	movlw	-1
  4479  017518  50E3               	movf	plusw1,w,c
  4480  01751A  6ED9               	movwf	fsr2l,c
  4481  01751C  6ADA               	clrf	fsr2h,c
  4482  01751E  0E00               	movlw	0
  4483  017520  6EDF               	movwf	indf2,c
  4484                           
  4485                           ;hid.c: 25:   h->wait_enter = 1;
  4486                           ;stkvar	_h @ sp[(0)+-1]
  4487  017522  0EFF               	movlw	-1
  4488  017524  50E3               	movf	plusw1,w,c
  4489  017526  6ED9               	movwf	fsr2l,c
  4490  017528  6ADA               	clrf	fsr2h,c
  4491  01752A  0E04               	movlw	4
  4492  01752C  26D9               	addwf	fsr2l,f,c
  4493  01752E  0E01               	movlw	1
  4494  017530  6EDF               	movwf	indf2,c
  4495                           
  4496                           ;hid.c: 26:   h->wait_select = 1;
  4497                           ;stkvar	_h @ sp[(0)+-1]
  4498  017532  0EFF               	movlw	-1
  4499  017534  50E3               	movf	plusw1,w,c
  4500  017536  6ED9               	movwf	fsr2l,c
  4501  017538  6ADA               	clrf	fsr2h,c
  4502  01753A  0E02               	movlw	2
  4503  01753C  26D9               	addwf	fsr2l,f,c
  4504  01753E  0E01               	movlw	1
  4505  017540  6EDF               	movwf	indf2,c
  4506                           
  4507                           ;hid.c: 27:   h->select_p = SW_OFF;
  4508                           ;stkvar	_h @ sp[(0)+-1]
  4509  017542  0EFF               	movlw	-1
  4510  017544  50E3               	movf	plusw1,w,c
  4511  017546  6ED9               	movwf	fsr2l,c
  4512  017548  6ADA               	clrf	fsr2h,c
  4513  01754A  0E03               	movlw	3
  4514  01754C  26D9               	addwf	fsr2l,f,c
  4515  01754E  0E00               	movlw	0
  4516  017550  6EDF               	movwf	indf2,c
  4517                           
  4518                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4519                           ;stkvar	_h @ sp[(0)+-1]
  4520  017552  0EFF               	movlw	-1
  4521  017554  50E3               	movf	plusw1,w,c
  4522  017556  6ED9               	movwf	fsr2l,c
  4523  017558  6ADA               	clrf	fsr2h,c
  4524  01755A  0E05               	movlw	5
  4525  01755C  26D9               	addwf	fsr2l,f,c
  4526  01755E  0E00               	movlw	0
  4527  017560  D036               	goto	L1
  4528  017562                     l9497:
  4529                           
  4530                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4531                           ;stkvar	_h @ sp[(0)+-1]
  4532  017562  0EFF               	movlw	-1
  4533  017564  50E3               	movf	plusw1,w,c
  4534  017566  6ED9               	movwf	fsr2l,c
  4535  017568  6ADA               	clrf	fsr2h,c
  4536  01756A  0E02               	movlw	2
  4537  01756C  26D9               	addwf	fsr2l,f,c
  4538  01756E  50DF               	movf	indf2,w,c
  4539  017570  A4D8               	btfss	status,2,c
  4540  017572  D042               	goto	l1894
  4541                           
  4542                           ;stkvar	_h @ sp[(0)+-1]
  4543  017574  0EFF               	movlw	-1
  4544  017576  50E3               	movf	plusw1,w,c
  4545  017578  6ED9               	movwf	fsr2l,c
  4546  01757A  6ADA               	clrf	fsr2h,c
  4547  01757C  0E03               	movlw	3
  4548  01757E  26D9               	addwf	fsr2l,f,c
  4549  017580  50DF               	movf	indf2,w,c
  4550  017582  A4D8               	btfss	status,2,c
  4551  017584  D039               	goto	l1894
  4552                           
  4553                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4554                           ;stkvar	_h @ sp[(0)+-1]
  4555  017586  0EFF               	movlw	-1
  4556  017588  50E3               	movf	plusw1,w,c
  4557  01758A  6ED9               	movwf	fsr2l,c
  4558  01758C  6ADA               	clrf	fsr2h,c
  4559  01758E  0E06               	movlw	6
  4560  017590  26D9               	addwf	fsr2l,f,c
  4561                           
  4562                           ;stkvar	_h @ sp[(0)+-1]
  4563  017592  0EFF               	movlw	-1
  4564  017594  50E3               	movf	plusw1,w,c
  4565  017596  6EE9               	movwf	fsr0l,c
  4566  017598  6AEA               	clrf	fsr0h,c
  4567  01759A  0E06               	movlw	6
  4568  01759C  26E9               	addwf	fsr0l,f,c
  4569  01759E  2AEF               	incf	indf0,f,c
  4570  0175A0  50EF               	movf	indf0,w,c
  4571  0175A2  0B03               	andlw	3
  4572  0175A4  6EDF               	movwf	indf2,c
  4573                           
  4574                           ;hid.c: 34:    h->hid_display = h->sequence;
  4575                           ;stkvar	_h @ sp[(0)+-1]
  4576  0175A6  0EFF               	movlw	-1
  4577  0175A8  50E3               	movf	plusw1,w,c
  4578  0175AA  6ED9               	movwf	fsr2l,c
  4579  0175AC  6ADA               	clrf	fsr2h,c
  4580  0175AE  0E06               	movlw	6
  4581  0175B0  26D9               	addwf	fsr2l,f,c
  4582                           
  4583                           ;stkvar	_h @ sp[(0)+-1]
  4584  0175B2  0EFF               	movlw	-1
  4585  0175B4  50E3               	movf	plusw1,w,c
  4586  0175B6  6EE9               	movwf	fsr0l,c
  4587  0175B8  6AEA               	clrf	fsr0h,c
  4588  0175BA  006F FF7F FFEF     	movff	indf2,indf0
  4589                           
  4590                           ;hid.c: 35:    h->wait_select = 1;
  4591                           ;stkvar	_h @ sp[(0)+-1]
  4592  0175C0  0EFF               	movlw	-1
  4593  0175C2  50E3               	movf	plusw1,w,c
  4594  0175C4  6ED9               	movwf	fsr2l,c
  4595  0175C6  6ADA               	clrf	fsr2h,c
  4596  0175C8  0E02               	movlw	2
  4597  0175CA  26D9               	addwf	fsr2l,f,c
  4598  0175CC  0E01               	movlw	1
  4599  0175CE                     L1:
  4600  0175CE  6EDF               	movwf	indf2,c
  4601  0175D0  D013               	goto	l1894
  4602  0175D2                     l9507:
  4603                           
  4604                           ;stkvar	_h @ sp[(0)+-1]
  4605  0175D2  0EFF               	movlw	-1
  4606  0175D4  50E3               	movf	plusw1,w,c
  4607  0175D6  6ED9               	movwf	fsr2l,c
  4608  0175D8  6ADA               	clrf	fsr2h,c
  4609  0175DA  0E01               	movlw	1
  4610  0175DC  26D9               	addwf	fsr2l,f,c
  4611  0175DE  50DF               	movf	indf2,w,c
  4612  0175E0  6E2F               	movwf	(btemp+10)^0,c
  4613  0175E2  6A30               	clrf	(btemp+11)^0,c
  4614                           
  4615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4616                           ; Switch size 1, requested type "simple"
  4617                           ; Number of cases is 1, Range of values is 0 to 0
  4618                           ; switch strategies available:
  4619                           ; Name         Instructions Cycles
  4620                           ; simple_byte            4     3 (average)
  4621                           ;	Chosen strategy is simple_byte
  4622  0175E4  5030               	movf	(btemp+11)^0,w,c
  4623  0175E6  0A00               	xorlw	0	; case 0
  4624  0175E8  A4D8               	btfss	status,2,c
  4625  0175EA  D7BB               	goto	l9497
  4626                           
  4627                           ; Switch size 1, requested type "simple"
  4628                           ; Number of cases is 2, Range of values is 0 to 1
  4629                           ; switch strategies available:
  4630                           ; Name         Instructions Cycles
  4631                           ; simple_byte            7     4 (average)
  4632                           ;	Chosen strategy is simple_byte
  4633  0175EC  502F               	movf	(btemp+10)^0,w,c
  4634  0175EE  0A00               	xorlw	0	; case 0
  4635  0175F0  B4D8               	btfsc	status,2,c
  4636  0175F2  D789               	goto	l9485
  4637  0175F4  0A01               	xorlw	1	; case 1
  4638  0175F6  D7B5               	goto	l9497
  4639  0175F8                     l1894:
  4640                           
  4641                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4642  0175F8  52E5               	movf	postdec1,f,c
  4643  0175FA  0012               	return		;funcret
  4644  0175FC                     __end_of_hid_display:
  4645                           	opt callstack 0
  4646                           
  4647 ;; *************** function _hid_input *****************
  4648 ;; Defined at:
  4649 ;;		line 3 in file "hid.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  h               1  [STACK] PTR struct H_data
  4652 ;;		 -> H(7), 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1  [STACK] PTR struct H_data
  4657 ;; Registers used:
  4658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/1
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    8
  4671 ;; This function calls:
  4672 ;;		_get_switch
  4673 ;; This function is called by:
  4674 ;;		_hid_display
  4675 ;; This function uses a reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text14
  4679  0180CE                     __ptext14:
  4680                           	opt callstack 0
  4681  0180CE                     _hid_input:
  4682                           	opt callstack 21
  4683                           
  4684                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4685                           
  4686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4687                           ;incstack = 0
  4688  0180CE  0E02               	movlw	2
  4689  0180D0  6EE6               	movwf	postinc1,c
  4690  0180D2  ECE3  F0C7         	call	_get_switch	;wreg free
  4691  0180D6  5025               	movf	btemp^0,w,c
  4692  0180D8  B4D8               	btfsc	status,2,c
  4693  0180DA  D01C               	goto	l9201
  4694                           
  4695                           ;hid.c: 6:   h->wait_select = 0;
  4696                           ;stkvar	_h @ sp[(0)+-1]
  4697  0180DC  0EFF               	movlw	-1
  4698  0180DE  50E3               	movf	plusw1,w,c
  4699  0180E0  6ED9               	movwf	fsr2l,c
  4700  0180E2  6ADA               	clrf	fsr2h,c
  4701  0180E4  0E02               	movlw	2
  4702  0180E6  26D9               	addwf	fsr2l,f,c
  4703  0180E8  0E00               	movlw	0
  4704  0180EA  6EDF               	movwf	indf2,c
  4705                           
  4706                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4707  0180EC  0E02               	movlw	2
  4708  0180EE  6EE6               	movwf	postinc1,c
  4709  0180F0  ECE3  F0C7         	call	_get_switch	;wreg free
  4710  0180F4  5025               	movf	btemp^0,w,c
  4711  0180F6  B4D8               	btfsc	status,2,c
  4712  0180F8  D003               	goto	u8560
  4713  0180FA  6A30               	clrf	(btemp+11)^0,c
  4714  0180FC  2A30               	incf	(btemp+11)^0,f,c
  4715  0180FE  D001               	goto	u8578
  4716  018100                     u8560:
  4717  018100  6A30               	clrf	(btemp+11)^0,c
  4718  018102                     u8578:
  4719                           
  4720                           ;stkvar	_h @ sp[(0)+-1]
  4721  018102  0EFF               	movlw	-1
  4722  018104  50E3               	movf	plusw1,w,c
  4723  018106  6ED9               	movwf	fsr2l,c
  4724  018108  6ADA               	clrf	fsr2h,c
  4725  01810A  0E03               	movlw	3
  4726  01810C  26D9               	addwf	fsr2l,f,c
  4727  01810E  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4728  018114                     l9201:
  4729                           
  4730                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4731  018114  0E03               	movlw	3
  4732  018116  6EE6               	movwf	postinc1,c
  4733  018118  ECE3  F0C7         	call	_get_switch	;wreg free
  4734  01811C  5025               	movf	btemp^0,w,c
  4735  01811E  B4D8               	btfsc	status,2,c
  4736  018120  D01C               	goto	l1885
  4737                           
  4738                           ;hid.c: 11:   h->wait_enter = 0;
  4739                           ;stkvar	_h @ sp[(0)+-1]
  4740  018122  0EFF               	movlw	-1
  4741  018124  50E3               	movf	plusw1,w,c
  4742  018126  6ED9               	movwf	fsr2l,c
  4743  018128  6ADA               	clrf	fsr2h,c
  4744  01812A  0E04               	movlw	4
  4745  01812C  26D9               	addwf	fsr2l,f,c
  4746  01812E  0E00               	movlw	0
  4747  018130  6EDF               	movwf	indf2,c
  4748                           
  4749                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4750  018132  0E03               	movlw	3
  4751  018134  6EE6               	movwf	postinc1,c
  4752  018136  ECE3  F0C7         	call	_get_switch	;wreg free
  4753  01813A  5025               	movf	btemp^0,w,c
  4754  01813C  B4D8               	btfsc	status,2,c
  4755  01813E  D003               	goto	u8590
  4756  018140  6A30               	clrf	(btemp+11)^0,c
  4757  018142  2A30               	incf	(btemp+11)^0,f,c
  4758  018144  D001               	goto	u8608
  4759  018146                     u8590:
  4760  018146  6A30               	clrf	(btemp+11)^0,c
  4761  018148                     u8608:
  4762                           
  4763                           ;stkvar	_h @ sp[(0)+-1]
  4764  018148  0EFF               	movlw	-1
  4765  01814A  50E3               	movf	plusw1,w,c
  4766  01814C  6ED9               	movwf	fsr2l,c
  4767  01814E  6ADA               	clrf	fsr2h,c
  4768  018150  0E05               	movlw	5
  4769  018152  26D9               	addwf	fsr2l,f,c
  4770  018154  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4771  01815A                     l1885:
  4772                           
  4773                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4774  01815A  52E5               	movf	postdec1,f,c
  4775  01815C  0012               	return		;funcret
  4776  01815E                     __end_of_hid_input:
  4777                           	opt callstack 0
  4778                           
  4779 ;; *************** function _get_switch *****************
  4780 ;; Defined at:
  4781 ;;		line 18 in file "dio.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  i               1  [STACK] unsigned char 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1  [STACK] enum E17030
  4788 ;; Registers used:
  4789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/2
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4799 ;;Total ram usage:        0 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    7
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_main
  4806 ;;		_hid_input
  4807 ;; This function uses a reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text15
  4811  018FC6                     __ptext15:
  4812                           	opt callstack 0
  4813  018FC6                     _get_switch:
  4814                           	opt callstack 21
  4815                           
  4816                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4817                           ;stkvar	_i @ sp[(0)+-1]
  4818                           
  4819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4820                           ;incstack = 0
  4821  018FC6  0EFF               	movlw	-1
  4822  018FC8  006F FF8C  F025    	movff	plusw1,btemp
  4823  018FCE  0E03               	movlw	3
  4824  018FD0  6425               	cpfsgt	btemp^0,c
  4825  018FD2  D002               	goto	l7901
  4826                           
  4827                           ;dio.c: 21:   return SW_OFF;
  4828  018FD4  0E00               	movlw	0
  4829  018FD6  D008               	goto	L2
  4830  018FD8                     l7901:
  4831                           
  4832                           ;dio.c: 23:  return S.button[i].sw;
  4833                           ;stkvar	_i @ sp[(0)+-1]
  4834  018FD8  0EFF               	movlw	-1
  4835  018FDA  50E3               	movf	plusw1,w,c
  4836  018FDC  0D05               	mullw	5
  4837  018FDE  50F3               	movf	243,w,c
  4838  018FE0  0F60               	addlw	low _S
  4839  018FE2  6ED9               	movwf	fsr2l,c
  4840  018FE4  6ADA               	clrf	fsr2h,c
  4841  018FE6  50DF               	movf	indf2,w,c
  4842  018FE8                     L2:
  4843  018FE8  6E25               	movwf	btemp^0,c
  4844                           
  4845                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4846  018FEA  52E5               	movf	postdec1,f,c
  4847  018FEC  0012               	return		;funcret
  4848  018FEE                     __end_of_get_switch:
  4849                           	opt callstack 0
  4850                           
  4851 ;; *************** function _eaDogM_WriteCommand *****************
  4852 ;; Defined at:
  4853 ;;		line 173 in file "eadog.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  cmd             1  [STACK] const unsigned char 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1  [STACK] void 
  4860 ;; Registers used:
  4861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4862 ;; Tracked objects:
  4863 ;;		On entry : 3F/3D
  4864 ;;		On exit  : 3F/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:   17
  4874 ;; This function calls:
  4875 ;;		_send_lcd_cmd_dma
  4876 ;; This function is called by:
  4877 ;;		_main
  4878 ;; This function uses a reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text16
  4882  01956C                     __ptext16:
  4883                           	opt callstack 0
  4884  01956C                     _eaDogM_WriteCommand:
  4885                           	opt callstack 13
  4886                           
  4887                           ;eadog.c: 173: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 174: {;eadog.c: 175:
      +                            send_lcd_cmd_dma(cmd);
  4888                           ;stkvar	_cmd @ sp[(0)+-1]
  4889                           
  4890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4891                           ;incstack = 0
  4892  01956C  0EFF               	movlw	-1
  4893  01956E  50E3               	movf	plusw1,w,c
  4894  019570  6EE6               	movwf	postinc1,c
  4895  019572  EC05  F0C4         	call	_send_lcd_cmd_dma	;wreg free
  4896                           
  4897                           ; BSR set to: 0
  4898                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4899  019576  52E5               	movf	postdec1,f,c
  4900  019578  0012               	return		;funcret
  4901  01957A                     __end_of_eaDogM_WriteCommand:
  4902                           	opt callstack 0
  4903                           
  4904 ;; *************** function _convert_adc_data *****************
  4905 ;; Defined at:
  4906 ;;		line 40 in file "mbmc.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  i               1  [STACK] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1  [STACK] void 
  4913 ;; Registers used:
  4914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/1
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4924 ;;Total ram usage:        0 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:   10
  4927 ;; This function calls:
  4928 ;;		_conv_raw_result
  4929 ;;		_lp_filter
  4930 ;; This function is called by:
  4931 ;;		_main
  4932 ;; This function uses a reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text17
  4936  017B06                     __ptext17:
  4937                           	opt callstack 0
  4938  017B06                     _convert_adc_data:
  4939                           	opt callstack 0
  4940                           
  4941                           ; BSR set to: 0
  4942                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4943  017B06  52E6               	movf	postinc1,f,c
  4944                           
  4945                           ;mbmc.c: 42:  uint8_t i = 0;
  4946                           ;stkvar	_i @ sp[(-1)+0]
  4947                           
  4948                           ;incstack = 0
  4949  017B08  0EFF               	movlw	-1
  4950  017B0A  6AE3               	clrf	plusw1,c
  4951  017B0C                     l9457:
  4952                           
  4953                           ;mbmc.c: 45:   if (V.calib) {
  4954  017B0C  0102               	movlb	2	; () banked
  4955  017B0E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4956  017B10  B4D8               	btfsc	status,2,c
  4957  017B12  D01B               	goto	l9461
  4958                           
  4959                           ; BSR set to: 2
  4960                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4961  017B14  0E01               	movlw	1
  4962  017B16  6EE6               	movwf	postinc1,c
  4963                           
  4964                           ;stkvar	_i @ sp[(-2)+0]
  4965  017B18  0EFE               	movlw	-2
  4966  017B1A  50E3               	movf	plusw1,w,c
  4967  017B1C  6EE6               	movwf	postinc1,c
  4968  017B1E  0E01               	movlw	1
  4969  017B20  6EE6               	movwf	postinc1,c
  4970                           
  4971                           ;stkvar	_i @ sp[(-4)+0]
  4972  017B22  0EFC               	movlw	-4
  4973  017B24  50E3               	movf	plusw1,w,c
  4974  017B26  6EE6               	movwf	postinc1,c
  4975  017B28  ECC4  F09D         	call	_conv_raw_result	;wreg free
  4976  017B2C  0060  F097  FFE6   	movff	btemp,postinc1
  4977  017B32  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4978  017B38  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4979  017B3E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4980  017B44  ECE1  F0B2         	call	_lp_filter	;wreg free
  4981  017B48  D01A               	goto	L3
  4982  017B4A                     l9461:
  4983                           
  4984                           ; BSR set to: 2
  4985                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4986  017B4A  0E00               	movlw	0
  4987  017B4C  6EE6               	movwf	postinc1,c
  4988                           
  4989                           ;stkvar	_i @ sp[(-2)+0]
  4990  017B4E  0EFE               	movlw	-2
  4991  017B50  50E3               	movf	plusw1,w,c
  4992  017B52  6EE6               	movwf	postinc1,c
  4993  017B54  0E00               	movlw	0
  4994  017B56  6EE6               	movwf	postinc1,c
  4995                           
  4996                           ;stkvar	_i @ sp[(-4)+0]
  4997  017B58  0EFC               	movlw	-4
  4998  017B5A  50E3               	movf	plusw1,w,c
  4999  017B5C  6EE6               	movwf	postinc1,c
  5000  017B5E  ECC4  F09D         	call	_conv_raw_result	;wreg free
  5001  017B62  0060  F097  FFE6   	movff	btemp,postinc1
  5002  017B68  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5003  017B6E  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5004  017B74  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5005  017B7A  ECE1  F0B2         	call	_lp_filter	;wreg free
  5006  017B7E                     L3:
  5007                           
  5008                           ;stkvar	_i @ sp[(-1)+0]
  5009  017B7E  0EFF               	movlw	-1
  5010  017B80  50E3               	movf	plusw1,w,c
  5011  017B82  0D04               	mullw	4
  5012  017B84  0E00               	movlw	low _C
  5013  017B86  24F3               	addwf	243,w,c
  5014  017B88  6ED9               	movwf	fsr2l,c
  5015  017B8A  0E01               	movlw	high _C
  5016  017B8C  20F4               	addwfc	prodh,w,c
  5017  017B8E  6EDA               	movwf	fsr2h,c
  5018  017B90  0060  F097  FFDE   	movff	btemp,postinc2
  5019  017B96  0060  F09B  FFDE   	movff	btemp+1,postinc2
  5020  017B9C  0060  F09F  FFDE   	movff	btemp+2,postinc2
  5021  017BA2  0060  F0A3  FFDE   	movff	btemp+3,postinc2
  5022                           
  5023                           ;mbmc.c: 50:  } while (++i < 16);
  5024                           ;stkvar	_i @ sp[(-1)+0]
  5025  017BA8  0EFF               	movlw	-1
  5026  017BAA  2AE3               	incf	plusw1,f,c
  5027  017BAC  0EFF               	movlw	-1
  5028  017BAE  006F FF8C  F025    	movff	plusw1,btemp
  5029  017BB4  0E0F               	movlw	15
  5030  017BB6  6425               	cpfsgt	btemp^0,c
  5031  017BB8  D7A9               	goto	l9457
  5032                           
  5033                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  5034  017BBA  52E5               	movf	postdec1,f,c
  5035  017BBC  0012               	return		;funcret
  5036  017BBE                     __end_of_convert_adc_data:
  5037                           	opt callstack 0
  5038                           
  5039 ;; *************** function _conv_raw_result *****************
  5040 ;; Defined at:
  5041 ;;		line 80 in file "daq.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  chan            1  [STACK] const enum E16136
  5044 ;;  to_what         1  [STACK] const enum E16198
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  4  [STACK] float 
  5049 ;; Registers used:
  5050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5051 ;; Tracked objects:
  5052 ;;		On entry : 3F/2
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5060 ;;Total ram usage:        0 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    9
  5063 ;; This function calls:
  5064 ;;		___fldiv
  5065 ;;		___flmul
  5066 ;;		___flsub
  5067 ;;		___xxtofl
  5068 ;;		_get_raw_result
  5069 ;;		_nanf
  5070 ;; This function is called by:
  5071 ;;		_convert_adc_data
  5072 ;; This function uses a reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text18
  5076  013B88                     __ptext18:
  5077                           	opt callstack 0
  5078  013B88                     _conv_raw_result:
  5079                           	opt callstack 20
  5080                           
  5081                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  5082                           
  5083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5084                           ;incstack = 0
  5085  013B88  D242               	goto	l9135
  5086  013B8A                     l9081:
  5087                           
  5088                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  5089                           ;stkvar	_chan @ sp[(0)+-1]
  5090  013B8A  0EFF               	movlw	-1
  5091  013B8C  006F FF8C  F030    	movff	plusw1,btemp+11
  5092  013B92  0E77               	movlw	119
  5093  013B94  6E2D               	movwf	(btemp+8)^0,c
  5094  013B96  0E3C               	movlw	60
  5095  013B98  6E2E               	movwf	(btemp+9)^0,c
  5096  013B9A  2A30               	incf	(btemp+11)^0,f,c
  5097  013B9C  D003               	goto	u8334
  5098  013B9E                     u8335:
  5099  013B9E  342E               	rlcf	(btemp+9)^0,w,c
  5100  013BA0  322E               	rrcf	(btemp+9)^0,f,c
  5101  013BA2  322D               	rrcf	(btemp+8)^0,f,c
  5102  013BA4                     u8334:
  5103  013BA4  2E30               	decfsz	(btemp+11)^0,f,c
  5104  013BA6  D7FB               	goto	u8335
  5105  013BA8  B02D               	btfsc	(btemp+8)^0,0,c
  5106  013BAA  D007               	goto	l9087
  5107                           
  5108                           ;daq.c: 86:    return nanf("");
  5109  013BAC  0E7F               	movlw	low (STR_39+18)
  5110  013BAE  6EE6               	movwf	postinc1,c
  5111  013BB0  0EFE               	movlw	high (STR_39+18)
  5112  013BB2  6EE6               	movwf	postinc1,c
  5113  013BB4  ECED  F0C2         	call	_nanf	;wreg free
  5114  013BB8  D23A               	goto	l1765
  5115  013BBA                     l9087:
  5116                           
  5117                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  5118                           ;stkvar	_chan @ sp[(0)+-1]
  5119  013BBA  0EFF               	movlw	-1
  5120  013BBC  006F FF8C  F030    	movff	plusw1,btemp+11
  5121  013BC2  0E03               	movlw	3
  5122  013BC4  6E2D               	movwf	(btemp+8)^0,c
  5123  013BC6  0E00               	movlw	0
  5124  013BC8  6E2E               	movwf	(btemp+9)^0,c
  5125  013BCA  2A30               	incf	(btemp+11)^0,f,c
  5126  013BCC  D003               	goto	u8354
  5127  013BCE                     u8355:
  5128  013BCE  342E               	rlcf	(btemp+9)^0,w,c
  5129  013BD0  322E               	rrcf	(btemp+9)^0,f,c
  5130  013BD2  322D               	rrcf	(btemp+8)^0,f,c
  5131  013BD4                     u8354:
  5132  013BD4  2E30               	decfsz	(btemp+11)^0,f,c
  5133  013BD6  D7FB               	goto	u8355
  5134  013BD8  A02D               	btfss	(btemp+8)^0,0,c
  5135  013BDA  D0EB               	goto	l9101
  5136                           
  5137                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  5138                           ;stkvar	_chan @ sp[(0)+-1]
  5139  013BDC  0EFF               	movlw	-1
  5140  013BDE  006F FF8C  F030    	movff	plusw1,btemp+11
  5141  013BE4  0E01               	movlw	1
  5142  013BE6  6E2D               	movwf	(btemp+8)^0,c
  5143  013BE8  0E00               	movlw	0
  5144  013BEA  6E2E               	movwf	(btemp+9)^0,c
  5145  013BEC  2A30               	incf	(btemp+11)^0,f,c
  5146  013BEE  D003               	goto	u8374
  5147  013BF0                     u8375:
  5148  013BF0  342E               	rlcf	(btemp+9)^0,w,c
  5149  013BF2  322E               	rrcf	(btemp+9)^0,f,c
  5150  013BF4  322D               	rrcf	(btemp+8)^0,f,c
  5151  013BF6                     u8374:
  5152  013BF6  2E30               	decfsz	(btemp+11)^0,f,c
  5153  013BF8  D7FB               	goto	u8375
  5154  013BFA  A02D               	btfss	(btemp+8)^0,0,c
  5155  013BFC  D06D               	goto	l9097
  5156                           
  5157                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  5158  013BFE  0E7B               	movlw	123
  5159  013C00  6EE6               	movwf	postinc1,c
  5160  013C02  0E14               	movlw	20
  5161  013C04  6EE6               	movwf	postinc1,c
  5162  013C06  0EAE               	movlw	174
  5163  013C08  6EE6               	movwf	postinc1,c
  5164  013C0A  0E3D               	movlw	61
  5165  013C0C  6EE6               	movwf	postinc1,c
  5166  013C0E  0060  F38C  F02D   	movff	_R+32,btemp+8	;volatile
  5167  013C14  0060  F390  F02E   	movff	_R+33,btemp+9	;volatile
  5168  013C1A  0E00               	movlw	0
  5169  013C1C  BE2E               	btfsc	(btemp+9)^0,7,c
  5170  013C1E  0EFF               	movlw	255
  5171  013C20  6E2F               	movwf	(btemp+10)^0,c
  5172  013C22  6E30               	movwf	(btemp+11)^0,c
  5173  013C24  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5174  013C2A  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5175  013C30  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5176  013C36  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5177  013C3C  0E01               	movlw	1
  5178  013C3E  6EE6               	movwf	postinc1,c
  5179  013C40  ECFB  F0B0         	call	___xxtofl	;wreg free
  5180  013C44  0060  F097  FFE6   	movff	btemp,postinc1
  5181  013C4A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5182  013C50  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5183  013C56  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5184                           
  5185                           ;stkvar	_chan @ sp[(-8)+-1]
  5186  013C5C  0EF7               	movlw	-9
  5187  013C5E  50E3               	movf	plusw1,w,c
  5188  013C60  6EE6               	movwf	postinc1,c
  5189  013C62  ECE5  F0C9         	call	_get_raw_result	;wreg free
  5190  013C66  0060  F094  F02F   	movff	btemp,btemp+10
  5191  013C6C  0060  F098  F030   	movff	btemp+1,btemp+11
  5192  013C72  502F               	movf	(btemp+10)^0,w,c
  5193  013C74  6E29               	movwf	(btemp+4)^0,c
  5194  013C76  5030               	movf	(btemp+11)^0,w,c
  5195  013C78  6E2A               	movwf	(btemp+5)^0,c
  5196  013C7A  6A2B               	clrf	(btemp+6)^0,c
  5197  013C7C  6A2C               	clrf	(btemp+7)^0,c
  5198  013C7E  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5199  013C84  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5200  013C8A  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5201  013C90  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5202  013C96  0E00               	movlw	0
  5203  013C98  6EE6               	movwf	postinc1,c
  5204  013C9A  ECFB  F0B0         	call	___xxtofl	;wreg free
  5205  013C9E  0060  F097  FFE6   	movff	btemp,postinc1
  5206  013CA4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5207  013CAA  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5208  013CB0  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5209  013CB6  ECEA  F0C4         	call	___flsub	;wreg free
  5210  013CBA  0060  F097  FFE6   	movff	btemp,postinc1
  5211  013CC0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5212  013CC6  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5213  013CCC  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5214  013CD2  EC14  F093         	call	___flmul	;wreg free
  5215  013CD6  D1AB               	goto	l1765
  5216  013CD8                     l9097:
  5217                           
  5218                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5219  013CD8  0E29               	movlw	41
  5220  013CDA  6EE6               	movwf	postinc1,c
  5221  013CDC  0E5C               	movlw	92
  5222  013CDE  6EE6               	movwf	postinc1,c
  5223  013CE0  0E0F               	movlw	15
  5224  013CE2  6EE6               	movwf	postinc1,c
  5225  013CE4  0E3D               	movlw	61
  5226  013CE6  6EE6               	movwf	postinc1,c
  5227  013CE8  0060  F394  F02D   	movff	_R+34,btemp+8	;volatile
  5228  013CEE  0060  F398  F02E   	movff	_R+35,btemp+9	;volatile
  5229  013CF4  0E00               	movlw	0
  5230  013CF6  BE2E               	btfsc	(btemp+9)^0,7,c
  5231  013CF8  0EFF               	movlw	255
  5232  013CFA  6E2F               	movwf	(btemp+10)^0,c
  5233  013CFC  6E30               	movwf	(btemp+11)^0,c
  5234  013CFE  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5235  013D04  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5236  013D0A  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5237  013D10  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5238  013D16  0E01               	movlw	1
  5239  013D18  6EE6               	movwf	postinc1,c
  5240  013D1A  ECFB  F0B0         	call	___xxtofl	;wreg free
  5241  013D1E  0060  F097  FFE6   	movff	btemp,postinc1
  5242  013D24  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5243  013D2A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5244  013D30  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5245                           
  5246                           ;stkvar	_chan @ sp[(-8)+-1]
  5247  013D36  0EF7               	movlw	-9
  5248  013D38  50E3               	movf	plusw1,w,c
  5249  013D3A  6EE6               	movwf	postinc1,c
  5250  013D3C  ECE5  F0C9         	call	_get_raw_result	;wreg free
  5251  013D40  0060  F094  F02F   	movff	btemp,btemp+10
  5252  013D46  0060  F098  F030   	movff	btemp+1,btemp+11
  5253  013D4C  502F               	movf	(btemp+10)^0,w,c
  5254  013D4E  6E29               	movwf	(btemp+4)^0,c
  5255  013D50  5030               	movf	(btemp+11)^0,w,c
  5256  013D52  6E2A               	movwf	(btemp+5)^0,c
  5257  013D54  6A2B               	clrf	(btemp+6)^0,c
  5258  013D56  6A2C               	clrf	(btemp+7)^0,c
  5259  013D58  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5260  013D5E  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5261  013D64  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5262  013D6A  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5263  013D70  0E00               	movlw	0
  5264  013D72  6EE6               	movwf	postinc1,c
  5265  013D74  ECFB  F0B0         	call	___xxtofl	;wreg free
  5266  013D78  0060  F097  FFE6   	movff	btemp,postinc1
  5267  013D7E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5268  013D84  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5269  013D8A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5270  013D90  ECEA  F0C4         	call	___flsub	;wreg free
  5271  013D94  0060  F097  FFE6   	movff	btemp,postinc1
  5272  013D9A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5273  013DA0  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5274  013DA6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5275  013DAC  EC14  F093         	call	___flmul	;wreg free
  5276  013DB0  D13E               	goto	l1765
  5277  013DB2                     l9101:
  5278                           
  5279                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5280                           ;stkvar	_chan @ sp[(0)+-1]
  5281  013DB2  0EFF               	movlw	-1
  5282  013DB4  006F FF8C  F030    	movff	plusw1,btemp+11
  5283  013DBA  0E00               	movlw	0
  5284  013DBC  6E2D               	movwf	(btemp+8)^0,c
  5285  013DBE  0E08               	movlw	8
  5286  013DC0  6E2E               	movwf	(btemp+9)^0,c
  5287  013DC2  2A30               	incf	(btemp+11)^0,f,c
  5288  013DC4  D003               	goto	u8394
  5289  013DC6                     u8395:
  5290  013DC6  342E               	rlcf	(btemp+9)^0,w,c
  5291  013DC8  322E               	rrcf	(btemp+9)^0,f,c
  5292  013DCA  322D               	rrcf	(btemp+8)^0,f,c
  5293  013DCC                     u8394:
  5294  013DCC  2E30               	decfsz	(btemp+11)^0,f,c
  5295  013DCE  D7FB               	goto	u8395
  5296  013DD0  A02D               	btfss	(btemp+8)^0,0,c
  5297  013DD2  D008               	goto	l9109
  5298                           
  5299                           ;daq.c: 96:     return 25.0;
  5300  013DD4  0E00               	movlw	0
  5301  013DD6  6E25               	movwf	btemp^0,c
  5302  013DD8  0E00               	movlw	0
  5303  013DDA  6E26               	movwf	(btemp+1)^0,c
  5304  013DDC  0EC8               	movlw	200
  5305  013DDE  6E27               	movwf	(btemp+2)^0,c
  5306  013DE0  0E41               	movlw	65
  5307  013DE2  D113               	goto	L4
  5308  013DE4                     l9109:
  5309                           
  5310                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5311  013DE4  0E00               	movlw	0
  5312  013DE6  6EE6               	movwf	postinc1,c
  5313  013DE8  0E00               	movlw	0
  5314  013DEA  6EE6               	movwf	postinc1,c
  5315  013DEC  0E7A               	movlw	122
  5316  013DEE  6EE6               	movwf	postinc1,c
  5317  013DF0  0E44               	movlw	68
  5318  013DF2  6EE6               	movwf	postinc1,c
  5319  013DF4  0E61               	movlw	97
  5320  013DF6  6EE6               	movwf	postinc1,c
  5321  013DF8  0E03               	movlw	3
  5322  013DFA  6EE6               	movwf	postinc1,c
  5323  013DFC  0E84               	movlw	132
  5324  013DFE  6EE6               	movwf	postinc1,c
  5325  013E00  0E40               	movlw	64
  5326  013E02  6EE6               	movwf	postinc1,c
  5327                           
  5328                           ;stkvar	_chan @ sp[(-8)+-1]
  5329  013E04  0EF7               	movlw	-9
  5330  013E06  50E3               	movf	plusw1,w,c
  5331  013E08  6EE6               	movwf	postinc1,c
  5332  013E0A  ECE5  F0C9         	call	_get_raw_result	;wreg free
  5333  013E0E  0060  F094  F02F   	movff	btemp,btemp+10
  5334  013E14  0060  F098  F030   	movff	btemp+1,btemp+11
  5335  013E1A  502F               	movf	(btemp+10)^0,w,c
  5336  013E1C  6E29               	movwf	(btemp+4)^0,c
  5337  013E1E  5030               	movf	(btemp+11)^0,w,c
  5338  013E20  6E2A               	movwf	(btemp+5)^0,c
  5339  013E22  6A2B               	clrf	(btemp+6)^0,c
  5340  013E24  6A2C               	clrf	(btemp+7)^0,c
  5341  013E26  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5342  013E2C  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5343  013E32  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5344  013E38  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5345  013E3E  0E00               	movlw	0
  5346  013E40  6EE6               	movwf	postinc1,c
  5347  013E42  ECFB  F0B0         	call	___xxtofl	;wreg free
  5348  013E46  0060  F097  FFE6   	movff	btemp,postinc1
  5349  013E4C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5350  013E52  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5351  013E58  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5352  013E5E  EC14  F093         	call	___flmul	;wreg free
  5353  013E62  0060  F097  FFE6   	movff	btemp,postinc1
  5354  013E68  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5355  013E6E  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5356  013E74  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5357  013E7A  EC07  F09B         	call	___fldiv	;wreg free
  5358  013E7E  D0D7               	goto	l1765
  5359  013E80                     l9113:
  5360                           
  5361                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5362                           ;stkvar	_chan @ sp[(0)+-1]
  5363  013E80  0EFF               	movlw	-1
  5364  013E82  006F FF8C  F030    	movff	plusw1,btemp+11
  5365  013E88  0E03               	movlw	3
  5366  013E8A  6E2D               	movwf	(btemp+8)^0,c
  5367  013E8C  0E00               	movlw	0
  5368  013E8E  6E2E               	movwf	(btemp+9)^0,c
  5369  013E90  2A30               	incf	(btemp+11)^0,f,c
  5370  013E92  D003               	goto	u8414
  5371  013E94                     u8415:
  5372  013E94  342E               	rlcf	(btemp+9)^0,w,c
  5373  013E96  322E               	rrcf	(btemp+9)^0,f,c
  5374  013E98  322D               	rrcf	(btemp+8)^0,f,c
  5375  013E9A                     u8414:
  5376  013E9A  2E30               	decfsz	(btemp+11)^0,f,c
  5377  013E9C  D7FB               	goto	u8415
  5378  013E9E  B02D               	btfsc	(btemp+8)^0,0,c
  5379  013EA0  D011               	goto	u8440
  5380                           
  5381                           ;stkvar	_chan @ sp[(0)+-1]
  5382  013EA2  0EFF               	movlw	-1
  5383  013EA4  006F FF8C  F030    	movff	plusw1,btemp+11
  5384  013EAA  0E00               	movlw	0
  5385  013EAC  6E2D               	movwf	(btemp+8)^0,c
  5386  013EAE  0E08               	movlw	8
  5387  013EB0  6E2E               	movwf	(btemp+9)^0,c
  5388  013EB2  2A30               	incf	(btemp+11)^0,f,c
  5389  013EB4  D003               	goto	u8434
  5390  013EB6                     u8435:
  5391  013EB6  342E               	rlcf	(btemp+9)^0,w,c
  5392  013EB8  322E               	rrcf	(btemp+9)^0,f,c
  5393  013EBA  322D               	rrcf	(btemp+8)^0,f,c
  5394  013EBC                     u8434:
  5395  013EBC  2E30               	decfsz	(btemp+11)^0,f,c
  5396  013EBE  D7FB               	goto	u8435
  5397  013EC0  A02D               	btfss	(btemp+8)^0,0,c
  5398  013EC2  D04E               	goto	l9121
  5399  013EC4                     u8440:
  5400                           
  5401                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5402  013EC4  0E00               	movlw	0
  5403  013EC6  6EE6               	movwf	postinc1,c
  5404  013EC8  0E00               	movlw	0
  5405  013ECA  6EE6               	movwf	postinc1,c
  5406  013ECC  0E7A               	movlw	122
  5407  013ECE  6EE6               	movwf	postinc1,c
  5408  013ED0  0E44               	movlw	68
  5409  013ED2  6EE6               	movwf	postinc1,c
  5410  013ED4  0E00               	movlw	0
  5411  013ED6  6EE6               	movwf	postinc1,c
  5412  013ED8  0E00               	movlw	0
  5413  013EDA  6EE6               	movwf	postinc1,c
  5414  013EDC  0E20               	movlw	32
  5415  013EDE  6EE6               	movwf	postinc1,c
  5416  013EE0  0E3F               	movlw	63
  5417  013EE2  6EE6               	movwf	postinc1,c
  5418                           
  5419                           ;stkvar	_chan @ sp[(-8)+-1]
  5420  013EE4  0EF7               	movlw	-9
  5421  013EE6  50E3               	movf	plusw1,w,c
  5422  013EE8  6EE6               	movwf	postinc1,c
  5423  013EEA  ECE5  F0C9         	call	_get_raw_result	;wreg free
  5424  013EEE  0060  F094  F02F   	movff	btemp,btemp+10
  5425  013EF4  0060  F098  F030   	movff	btemp+1,btemp+11
  5426  013EFA  502F               	movf	(btemp+10)^0,w,c
  5427  013EFC  6E29               	movwf	(btemp+4)^0,c
  5428  013EFE  5030               	movf	(btemp+11)^0,w,c
  5429  013F00  6E2A               	movwf	(btemp+5)^0,c
  5430  013F02  6A2B               	clrf	(btemp+6)^0,c
  5431  013F04  6A2C               	clrf	(btemp+7)^0,c
  5432  013F06  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5433  013F0C  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5434  013F12  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5435  013F18  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5436  013F1E  0E00               	movlw	0
  5437  013F20  6EE6               	movwf	postinc1,c
  5438  013F22  ECFB  F0B0         	call	___xxtofl	;wreg free
  5439  013F26  0060  F097  FFE6   	movff	btemp,postinc1
  5440  013F2C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5441  013F32  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5442  013F38  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5443  013F3E  EC14  F093         	call	___flmul	;wreg free
  5444  013F42  0060  F097  FFE6   	movff	btemp,postinc1
  5445  013F48  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5446  013F4E  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5447  013F54  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5448  013F5A  EC07  F09B         	call	___fldiv	;wreg free
  5449  013F5E  D067               	goto	l1765
  5450  013F60                     l9121:
  5451                           
  5452                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5453  013F60  0E00               	movlw	0
  5454  013F62  6EE6               	movwf	postinc1,c
  5455  013F64  0E00               	movlw	0
  5456  013F66  6EE6               	movwf	postinc1,c
  5457  013F68  0E7A               	movlw	122
  5458  013F6A  6EE6               	movwf	postinc1,c
  5459  013F6C  0E44               	movlw	68
  5460  013F6E  6EE6               	movwf	postinc1,c
  5461  013F70  0E61               	movlw	97
  5462  013F72  6EE6               	movwf	postinc1,c
  5463  013F74  0E03               	movlw	3
  5464  013F76  6EE6               	movwf	postinc1,c
  5465  013F78  0E84               	movlw	132
  5466  013F7A  6EE6               	movwf	postinc1,c
  5467  013F7C  0E40               	movlw	64
  5468  013F7E  6EE6               	movwf	postinc1,c
  5469                           
  5470                           ;stkvar	_chan @ sp[(-8)+-1]
  5471  013F80  0EF7               	movlw	-9
  5472  013F82  50E3               	movf	plusw1,w,c
  5473  013F84  6EE6               	movwf	postinc1,c
  5474  013F86  ECE5  F0C9         	call	_get_raw_result	;wreg free
  5475  013F8A  0060  F094  F02F   	movff	btemp,btemp+10
  5476  013F90  0060  F098  F030   	movff	btemp+1,btemp+11
  5477  013F96  502F               	movf	(btemp+10)^0,w,c
  5478  013F98  6E29               	movwf	(btemp+4)^0,c
  5479  013F9A  5030               	movf	(btemp+11)^0,w,c
  5480  013F9C  6E2A               	movwf	(btemp+5)^0,c
  5481  013F9E  6A2B               	clrf	(btemp+6)^0,c
  5482  013FA0  6A2C               	clrf	(btemp+7)^0,c
  5483  013FA2  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5484  013FA8  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5485  013FAE  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5486  013FB4  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5487  013FBA  0E00               	movlw	0
  5488  013FBC  6EE6               	movwf	postinc1,c
  5489  013FBE  ECFB  F0B0         	call	___xxtofl	;wreg free
  5490  013FC2  0060  F097  FFE6   	movff	btemp,postinc1
  5491  013FC8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5492  013FCE  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5493  013FD4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5494  013FDA  EC14  F093         	call	___flmul	;wreg free
  5495  013FDE  0060  F097  FFE6   	movff	btemp,postinc1
  5496  013FE4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5497  013FEA  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5498  013FF0  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5499  013FF6  EC07  F09B         	call	___fldiv	;wreg free
  5500  013FFA  D019               	goto	l1765
  5501  013FFC                     l9127:
  5502                           
  5503                           ;daq.c: 109:   return 0.0;
  5504  013FFC  0E00               	movlw	0
  5505  013FFE  6E25               	movwf	btemp^0,c
  5506  014000  0E00               	movlw	0
  5507  014002  6E26               	movwf	(btemp+1)^0,c
  5508  014004  0E00               	movlw	0
  5509  014006  6E27               	movwf	(btemp+2)^0,c
  5510  014008  0E00               	movlw	0
  5511  01400A                     L4:
  5512  01400A  6E28               	movwf	(btemp+3)^0,c
  5513  01400C  D010               	goto	l1765
  5514  01400E                     l9135:
  5515                           
  5516                           ;stkvar	_to_what @ sp[(0)+-2]
  5517  01400E  0EFE               	movlw	-2
  5518  014010  50E3               	movf	plusw1,w,c
  5519  014012  6E2F               	movwf	(btemp+10)^0,c
  5520  014014  6A30               	clrf	(btemp+11)^0,c
  5521                           
  5522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5523                           ; Switch size 1, requested type "simple"
  5524                           ; Number of cases is 1, Range of values is 0 to 0
  5525                           ; switch strategies available:
  5526                           ; Name         Instructions Cycles
  5527                           ; simple_byte            4     3 (average)
  5528                           ;	Chosen strategy is simple_byte
  5529  014016  5030               	movf	(btemp+11)^0,w,c
  5530  014018  0A00               	xorlw	0	; case 0
  5531  01401A  A4D8               	btfss	status,2,c
  5532  01401C  D7EF               	goto	l9127
  5533                           
  5534                           ; Switch size 1, requested type "simple"
  5535                           ; Number of cases is 2, Range of values is 0 to 1
  5536                           ; switch strategies available:
  5537                           ; Name         Instructions Cycles
  5538                           ; simple_byte            7     4 (average)
  5539                           ;	Chosen strategy is simple_byte
  5540  01401E  502F               	movf	(btemp+10)^0,w,c
  5541  014020  0A00               	xorlw	0	; case 0
  5542  014022  B4D8               	btfsc	status,2,c
  5543  014024  D5B2               	goto	l9081
  5544  014026  0A01               	xorlw	1	; case 1
  5545  014028  B4D8               	btfsc	status,2,c
  5546  01402A  D72A               	goto	l9113
  5547  01402C  D7E7               	goto	l9127
  5548  01402E                     l1765:
  5549                           
  5550                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5551  01402E  52E5               	movf	postdec1,f,c
  5552  014030  52E5               	movf	postdec1,f,c
  5553  014032  0012               	return		;funcret
  5554  014034                     __end_of_conv_raw_result:
  5555                           	opt callstack 0
  5556                           
  5557 ;; *************** function _nanf *****************
  5558 ;; Defined at:
  5559 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  s               2  [STACK] PTR const unsigned char 
  5562 ;;		 -> STR_45(1), 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  u               4  [STACK] struct .
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  4  [STACK] float 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/2
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5578 ;;Total ram usage:        0 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    7
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_conv_raw_result
  5585 ;; This function uses a reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text19
  5589  0185DA                     __ptext19:
  5590                           	opt callstack 0
  5591  0185DA                     _nanf:
  5592                           	opt callstack 0
  5593                           
  5594                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5595  0185DA  52E6               	movf	postinc1,f,c
  5596  0185DC  52E6               	movf	postinc1,f,c
  5597  0185DE  52E6               	movf	postinc1,f,c
  5598  0185E0  52E6               	movf	postinc1,f,c
  5599                           
  5600                           ;incstack = 0
  5601  0185E2  0EFF               	movlw	255
  5602  0185E4  6E2D               	movwf	(btemp+8)^0,c
  5603  0185E6  0EFF               	movlw	255
  5604  0185E8  6E2E               	movwf	(btemp+9)^0,c
  5605  0185EA  0EFF               	movlw	255
  5606  0185EC  6E2F               	movwf	(btemp+10)^0,c
  5607  0185EE  0E7F               	movlw	127
  5608  0185F0  6E30               	movwf	(btemp+11)^0,c
  5609                           
  5610                           ;stkvar	_u @ sp[(-4)+0]
  5611  0185F2  0EFC               	movlw	-4
  5612  0185F4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5613  0185FA  0EFD               	movlw	-3
  5614  0185FC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5615  018602  0EFE               	movlw	-2
  5616  018604  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5617  01860A  0EFF               	movlw	-1
  5618  01860C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5619                           
  5620                           ;stkvar	_u @ sp[(-4)+0]
  5621  018612  0EFC               	movlw	-4
  5622  018614  006F FF8C  F025    	movff	plusw1,btemp
  5623  01861A  0EFD               	movlw	-3
  5624  01861C  006F FF8C  F026    	movff	plusw1,btemp+1
  5625  018622  0EFE               	movlw	-2
  5626  018624  006F FF8C  F027    	movff	plusw1,btemp+2
  5627  01862A  0EFF               	movlw	-1
  5628  01862C  006F FF8C  F028    	movff	plusw1,btemp+3
  5629                           
  5630                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5631  018632  0EFA               	movlw	250
  5632  018634  26E1               	addwf	fsr1l,f,c
  5633  018636  0EFF               	movlw	255
  5634  018638  22E2               	addwfc	fsr1h,f,c
  5635  01863A  0012               	return		;funcret
  5636  01863C                     __end_of_nanf:
  5637                           	opt callstack 0
  5638                           
  5639 ;; *************** function _get_raw_result *****************
  5640 ;; Defined at:
  5641 ;;		line 72 in file "daq.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  index           1  [STACK] const enum E16136
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  2  [STACK] unsigned short 
  5648 ;; Registers used:
  5649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/2
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; Hardware stack levels required when called:    7
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_main
  5666 ;;		_conv_raw_result
  5667 ;; This function uses a reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text20
  5671  0193CA                     __ptext20:
  5672                           	opt callstack 0
  5673  0193CA                     _get_raw_result:
  5674                           	opt callstack 23
  5675                           
  5676                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5677                           ;stkvar	_index @ sp[(0)+-1]
  5678                           
  5679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5680                           ;incstack = 0
  5681  0193CA  0EFF               	movlw	-1
  5682  0193CC  50E3               	movf	plusw1,w,c
  5683  0193CE  0D02               	mullw	2
  5684  0193D0  50F3               	movf	243,w,c
  5685  0193D2  0FC3               	addlw	low _R
  5686  0193D4  6ED9               	movwf	fsr2l,c
  5687  0193D6  6ADA               	clrf	fsr2h,c
  5688  0193D8  006F FF78  F025    	movff	postinc2,btemp
  5689  0193DE  006F FF74  F026    	movff	postdec2,btemp+1
  5690                           
  5691                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5692  0193E4  52E5               	movf	postdec1,f,c
  5693  0193E6  0012               	return		;funcret
  5694  0193E8                     __end_of_get_raw_result:
  5695                           	opt callstack 0
  5696                           
  5697 ;; *************** function ___xxtofl *****************
  5698 ;; Defined at:
  5699 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  sign            1  [STACK] unsigned char 
  5702 ;;  val             4  [STACK] long 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  arg             4  [STACK] unsigned long 
  5705 ;;  exp             1  [STACK] unsigned char 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  4  [STACK] unsigned char 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/2
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5719 ;;Total ram usage:        0 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    7
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_conv_raw_result
  5726 ;; This function uses a reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text21
  5730  0161F6                     __ptext21:
  5731                           	opt callstack 0
  5732  0161F6                     ___xxtofl:
  5733                           	opt callstack 0
  5734                           
  5735                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5736  0161F6  0E05               	movlw	5
  5737  0161F8  26E1               	addwf	fsr1l,f,c
  5738  0161FA  0E00               	movlw	0
  5739  0161FC  22E2               	addwfc	fsr1h,f,c
  5740                           
  5741                           ;stkvar	_sign @ sp[(-5)+-1]
  5742                           
  5743                           ;incstack = 0
  5744  0161FE  0EFA               	movlw	-6
  5745  016200  50E3               	movf	plusw1,w,c
  5746  016202  B4D8               	btfsc	status,2,c
  5747  016204  D01D               	goto	l8519
  5748                           
  5749                           ;stkvar	_val @ sp[(-5)+-5]
  5750  016206  0EF9               	movlw	-7
  5751  016208  AEE3               	btfss	plusw1,7,c
  5752  01620A  D01A               	goto	l8519
  5753                           
  5754                           ;stkvar	_val @ sp[(-5)+-5]
  5755  01620C  0EF6               	movlw	-10
  5756  01620E  006F FF8C  F02D    	movff	plusw1,btemp+8
  5757  016214  0EF7               	movlw	-9
  5758  016216  006F FF8C  F02E    	movff	plusw1,btemp+9
  5759  01621C  0EF8               	movlw	-8
  5760  01621E  006F FF8C  F02F    	movff	plusw1,btemp+10
  5761  016224  0EF9               	movlw	-7
  5762  016226  006F FF8C  F030    	movff	plusw1,btemp+11
  5763  01622C  1E2D               	comf	(btemp+8)^0,f,c
  5764  01622E  1E2E               	comf	(btemp+9)^0,f,c
  5765  016230  1E2F               	comf	(btemp+10)^0,f,c
  5766  016232  1E30               	comf	(btemp+11)^0,f,c
  5767  016234  2A2D               	incf	(btemp+8)^0,f,c
  5768  016236  0E00               	movlw	0
  5769  016238  222E               	addwfc	(btemp+9)^0,f,c
  5770  01623A  222F               	addwfc	(btemp+10)^0,f,c
  5771  01623C  2230               	addwfc	(btemp+11)^0,f,c
  5772  01623E  D010               	goto	L5
  5773  016240                     l8519:
  5774                           
  5775                           ;stkvar	_val @ sp[(-5)+-5]
  5776  016240  0EF6               	movlw	-10
  5777  016242  006F FF8C  F02D    	movff	plusw1,btemp+8
  5778  016248  0EF7               	movlw	-9
  5779  01624A  006F FF8C  F02E    	movff	plusw1,btemp+9
  5780  016250  0EF8               	movlw	-8
  5781  016252  006F FF8C  F02F    	movff	plusw1,btemp+10
  5782  016258  0EF9               	movlw	-7
  5783  01625A  006F FF8C  F030    	movff	plusw1,btemp+11
  5784  016260                     L5:
  5785                           
  5786                           ;stkvar	_arg @ sp[(-5)+0]
  5787  016260  0EFB               	movlw	-5
  5788  016262  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5789  016268  0EFC               	movlw	-4
  5790  01626A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5791  016270  0EFD               	movlw	-3
  5792  016272  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5793  016278  0EFE               	movlw	-2
  5794  01627A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5795                           
  5796                           ;stkvar	_val @ sp[(-5)+-5]
  5797  016280  0EF6               	movlw	-10
  5798  016282  50E3               	movf	plusw1,w,c
  5799  016284  E113               	bnz	l8527
  5800  016286  0EF7               	movlw	-9
  5801  016288  50E3               	movf	plusw1,w,c
  5802  01628A  E110               	bnz	l8527
  5803  01628C  0EF8               	movlw	-8
  5804  01628E  50E3               	movf	plusw1,w,c
  5805  016290  E10D               	bnz	l8527
  5806  016292  0EF9               	movlw	-7
  5807  016294  50E3               	movf	plusw1,w,c
  5808  016296  A4D8               	btfss	status,2,c
  5809  016298  D009               	goto	l8527
  5810  01629A  0E00               	movlw	0
  5811  01629C  6E25               	movwf	btemp^0,c
  5812  01629E  0E00               	movlw	0
  5813  0162A0  6E26               	movwf	(btemp+1)^0,c
  5814  0162A2  0E00               	movlw	0
  5815  0162A4  6E27               	movwf	(btemp+2)^0,c
  5816  0162A6  0E00               	movlw	0
  5817  0162A8  6E28               	movwf	(btemp+3)^0,c
  5818  0162AA  D0A2               	goto	l2882
  5819  0162AC                     l8527:
  5820  0162AC  0E96               	movlw	150
  5821  0162AE  6E30               	movwf	(btemp+11)^0,c
  5822                           
  5823                           ;stkvar	_exp @ sp[(-5)+4]
  5824  0162B0  0EFF               	movlw	-1
  5825  0162B2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5826  0162B8  D00B               	goto	l8531
  5827  0162BA                     l8529:
  5828                           
  5829                           ;stkvar	_exp @ sp[(-5)+4]
  5830  0162BA  0EFF               	movlw	-1
  5831  0162BC  2AE3               	incf	plusw1,f,c
  5832                           
  5833                           ;stkvar	_arg @ sp[(-5)+0]
  5834  0162BE  90D8               	bcf	status,0,c
  5835  0162C0  0EFE               	movlw	-2
  5836  0162C2  32E3               	rrcf	plusw1,f,c
  5837  0162C4  0EFD               	movlw	-3
  5838  0162C6  32E3               	rrcf	plusw1,f,c
  5839  0162C8  0EFC               	movlw	-4
  5840  0162CA  32E3               	rrcf	plusw1,f,c
  5841  0162CC  0EFB               	movlw	-5
  5842  0162CE  32E3               	rrcf	plusw1,f,c
  5843  0162D0                     l8531:
  5844                           
  5845                           ;stkvar	_arg @ sp[(-5)+0]
  5846  0162D0  50E1               	movf	fsr1l,w,c
  5847  0162D2  0FFB               	addlw	-5
  5848  0162D4  6ED9               	movwf	fsr2l,c
  5849  0162D6  50E2               	movf	fsr1h,w,c
  5850  0162D8  6EDA               	movwf	fsr2h,c
  5851  0162DA  0EFF               	movlw	255
  5852  0162DC  22DA               	addwfc	fsr2h,f,c
  5853  0162DE  52DE               	movf	postinc2,f,c
  5854  0162E0  52DE               	movf	postinc2,f,c
  5855  0162E2  52DE               	movf	postinc2,f,c
  5856  0162E4  0EFE               	movlw	254
  5857  0162E6  14DD               	andwf	postdec2,w,c
  5858  0162E8  B4D8               	btfsc	status,2,c
  5859  0162EA  D018               	goto	l8539
  5860  0162EC  D7E6               	goto	l8529
  5861  0162EE                     l8533:
  5862                           
  5863                           ;stkvar	_exp @ sp[(-5)+4]
  5864  0162EE  0EFF               	movlw	-1
  5865  0162F0  2AE3               	incf	plusw1,f,c
  5866                           
  5867                           ;stkvar	_arg @ sp[(-5)+0]
  5868  0162F2  50E1               	movf	fsr1l,w,c
  5869  0162F4  0FFB               	addlw	-5
  5870  0162F6  6ED9               	movwf	fsr2l,c
  5871  0162F8  50E2               	movf	fsr1h,w,c
  5872  0162FA  6EDA               	movwf	fsr2h,c
  5873  0162FC  0EFF               	movlw	255
  5874  0162FE  22DA               	addwfc	fsr2h,f,c
  5875  016300  2ADE               	incf	postinc2,f,c
  5876  016302  0E00               	movlw	0
  5877  016304  22DE               	addwfc	postinc2,f,c
  5878  016306  22DE               	addwfc	postinc2,f,c
  5879  016308  22DE               	addwfc	postinc2,f,c
  5880                           
  5881                           ;stkvar	_arg @ sp[(-5)+0]
  5882  01630A  90D8               	bcf	status,0,c
  5883  01630C  0EFE               	movlw	-2
  5884  01630E  32E3               	rrcf	plusw1,f,c
  5885  016310  0EFD               	movlw	-3
  5886  016312  32E3               	rrcf	plusw1,f,c
  5887  016314  0EFC               	movlw	-4
  5888  016316  32E3               	rrcf	plusw1,f,c
  5889  016318  0EFB               	movlw	-5
  5890  01631A  32E3               	rrcf	plusw1,f,c
  5891  01631C                     l8539:
  5892                           
  5893                           ;stkvar	_arg @ sp[(-5)+0]
  5894  01631C  50E1               	movf	fsr1l,w,c
  5895  01631E  0FFB               	addlw	-5
  5896  016320  6ED9               	movwf	fsr2l,c
  5897  016322  50E2               	movf	fsr1h,w,c
  5898  016324  6EDA               	movwf	fsr2h,c
  5899  016326  0EFF               	movlw	255
  5900  016328  22DA               	addwfc	fsr2h,f,c
  5901  01632A  52DE               	movf	postinc2,f,c
  5902  01632C  52DE               	movf	postinc2,f,c
  5903  01632E  52DE               	movf	postinc2,f,c
  5904  016330  0EFF               	movlw	255
  5905  016332  14DD               	andwf	postdec2,w,c
  5906  016334  B4D8               	btfsc	status,2,c
  5907  016336  D00C               	goto	l8543
  5908  016338  D7DA               	goto	l8533
  5909  01633A                     l8541:
  5910                           
  5911                           ;stkvar	_exp @ sp[(-5)+4]
  5912  01633A  0EFF               	movlw	-1
  5913  01633C  06E3               	decf	plusw1,f,c
  5914                           
  5915                           ;stkvar	_arg @ sp[(-5)+0]
  5916  01633E  90D8               	bcf	status,0,c
  5917  016340  0EFB               	movlw	-5
  5918  016342  36E3               	rlcf	plusw1,f,c
  5919  016344  0EFC               	movlw	-4
  5920  016346  36E3               	rlcf	plusw1,f,c
  5921  016348  0EFD               	movlw	-3
  5922  01634A  36E3               	rlcf	plusw1,f,c
  5923  01634C  0EFE               	movlw	-2
  5924  01634E  36E3               	rlcf	plusw1,f,c
  5925  016350                     l8543:
  5926                           
  5927                           ;stkvar	_arg @ sp[(-5)+0]
  5928  016350  0EFD               	movlw	-3
  5929  016352  BEE3               	btfsc	plusw1,7,c
  5930  016354  D007               	goto	u8130
  5931                           
  5932                           ;stkvar	_exp @ sp[(-5)+4]
  5933  016356  0EFF               	movlw	-1
  5934  016358  006F FF8C  F025    	movff	plusw1,btemp
  5935  01635E  0E02               	movlw	2
  5936  016360  6025               	cpfslt	btemp^0,c
  5937  016362  D7EB               	goto	l8541
  5938  016364                     u8130:
  5939                           
  5940                           ;stkvar	_exp @ sp[(-5)+4]
  5941  016364  0EFF               	movlw	-1
  5942  016366  B0E3               	btfsc	plusw1,0,c
  5943  016368  D002               	goto	l8551
  5944                           
  5945                           ;stkvar	_arg @ sp[(-5)+0]
  5946  01636A  0EFD               	movlw	-3
  5947  01636C  9EE3               	bcf	plusw1,7,c
  5948  01636E                     l8551:
  5949                           
  5950                           ;stkvar	_exp @ sp[(-5)+4]
  5951  01636E  50E1               	movf	fsr1l,w,c
  5952  016370  0FFF               	addlw	-1
  5953  016372  6ED9               	movwf	fsr2l,c
  5954  016374  50E2               	movf	fsr1h,w,c
  5955  016376  6EDA               	movwf	fsr2h,c
  5956  016378  0EFF               	movlw	255
  5957  01637A  22DA               	addwfc	fsr2h,f,c
  5958  01637C  90D8               	bcf	status,0,c
  5959  01637E  32DF               	rrcf	indf2,f,c
  5960                           
  5961                           ;stkvar	_exp @ sp[(-5)+4]
  5962  016380  0EFF               	movlw	-1
  5963  016382  006F FF8C  F030    	movff	plusw1,btemp+11
  5964  016388  0060  F0C0  F029   	movff	btemp+11,btemp+4
  5965  01638E  6A2A               	clrf	(btemp+5)^0,c
  5966  016390  6A2B               	clrf	(btemp+6)^0,c
  5967  016392  6A2C               	clrf	(btemp+7)^0,c
  5968  016394  0060  F0A4  F02C   	movff	btemp+4,btemp+7
  5969  01639A  6A2B               	clrf	(btemp+6)^0,c
  5970  01639C  6A2A               	clrf	(btemp+5)^0,c
  5971  01639E  6A29               	clrf	(btemp+4)^0,c
  5972                           
  5973                           ;stkvar	_arg @ sp[(-5)+0]
  5974  0163A0  50E1               	movf	fsr1l,w,c
  5975  0163A2  0FFB               	addlw	-5
  5976  0163A4  6ED9               	movwf	fsr2l,c
  5977  0163A6  50E2               	movf	fsr1h,w,c
  5978  0163A8  6EDA               	movwf	fsr2h,c
  5979  0163AA  0EFF               	movlw	255
  5980  0163AC  22DA               	addwfc	fsr2h,f,c
  5981  0163AE  5029               	movf	(btemp+4)^0,w,c
  5982  0163B0  12DE               	iorwf	postinc2,f,c
  5983  0163B2  502A               	movf	(btemp+5)^0,w,c
  5984  0163B4  12DE               	iorwf	postinc2,f,c
  5985  0163B6  502B               	movf	(btemp+6)^0,w,c
  5986  0163B8  12DE               	iorwf	postinc2,f,c
  5987  0163BA  502C               	movf	(btemp+7)^0,w,c
  5988  0163BC  12DE               	iorwf	postinc2,f,c
  5989                           
  5990                           ;stkvar	_sign @ sp[(-5)+-1]
  5991  0163BE  0EFA               	movlw	-6
  5992  0163C0  50E3               	movf	plusw1,w,c
  5993  0163C2  B4D8               	btfsc	status,2,c
  5994  0163C4  D005               	goto	l8561
  5995                           
  5996                           ;stkvar	_val @ sp[(-5)+-5]
  5997  0163C6  0EF9               	movlw	-7
  5998  0163C8  AEE3               	btfss	plusw1,7,c
  5999  0163CA  D002               	goto	l8561
  6000                           
  6001                           ;stkvar	_arg @ sp[(-5)+0]
  6002  0163CC  0EFE               	movlw	-2
  6003  0163CE  8EE3               	bsf	plusw1,7,c
  6004  0163D0                     l8561:
  6005                           
  6006                           ;stkvar	_arg @ sp[(-5)+0]
  6007  0163D0  0EFB               	movlw	-5
  6008  0163D2  006F FF8C  F025    	movff	plusw1,btemp
  6009  0163D8  0EFC               	movlw	-4
  6010  0163DA  006F FF8C  F026    	movff	plusw1,btemp+1
  6011  0163E0  0EFD               	movlw	-3
  6012  0163E2  006F FF8C  F027    	movff	plusw1,btemp+2
  6013  0163E8  0EFE               	movlw	-2
  6014  0163EA  006F FF8C  F028    	movff	plusw1,btemp+3
  6015  0163F0                     l2882:
  6016                           
  6017                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6018  0163F0  0EF6               	movlw	246
  6019  0163F2  26E1               	addwf	fsr1l,f,c
  6020  0163F4  0EFF               	movlw	255
  6021  0163F6  22E2               	addwfc	fsr1h,f,c
  6022  0163F8  0012               	return		;funcret
  6023  0163FA                     __end_of___xxtofl:
  6024                           	opt callstack 0
  6025                           
  6026 ;; *************** function _clear_hid_pflags *****************
  6027 ;; Defined at:
  6028 ;;		line 51 in file "hid.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  h               1  [STACK] PTR struct H_data
  6031 ;;		 -> H(7), 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  1  [STACK] void 
  6036 ;; Registers used:
  6037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6038 ;; Tracked objects:
  6039 ;;		On entry : 3F/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6047 ;;Total ram usage:        0 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; Hardware stack levels required when called:    7
  6050 ;; This function calls:
  6051 ;;		Nothing
  6052 ;; This function is called by:
  6053 ;;		_main
  6054 ;; This function uses a reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text22
  6058  019296                     __ptext22:
  6059                           	opt callstack 0
  6060  019296                     _clear_hid_pflags:
  6061                           	opt callstack 23
  6062                           
  6063                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6064                           ;stkvar	_h @ sp[(0)+-1]
  6065                           
  6066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6067                           ;incstack = 0
  6068  019296  0EFF               	movlw	-1
  6069  019298  50E3               	movf	plusw1,w,c
  6070  01929A  6ED9               	movwf	fsr2l,c
  6071  01929C  6ADA               	clrf	fsr2h,c
  6072  01929E  0E03               	movlw	3
  6073  0192A0  26D9               	addwf	fsr2l,f,c
  6074  0192A2  0E00               	movlw	0
  6075  0192A4  6EDF               	movwf	indf2,c
  6076                           
  6077                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6078                           ;stkvar	_h @ sp[(0)+-1]
  6079  0192A6  0EFF               	movlw	-1
  6080  0192A8  50E3               	movf	plusw1,w,c
  6081  0192AA  6ED9               	movwf	fsr2l,c
  6082  0192AC  6ADA               	clrf	fsr2h,c
  6083  0192AE  0E05               	movlw	5
  6084  0192B0  26D9               	addwf	fsr2l,f,c
  6085  0192B2  0E00               	movlw	0
  6086  0192B4  6EDF               	movwf	indf2,c
  6087                           
  6088                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6089  0192B6  52E5               	movf	postdec1,f,c
  6090  0192B8  0012               	return		;funcret
  6091  0192BA                     __end_of_clear_hid_pflags:
  6092                           	opt callstack 0
  6093                           
  6094 ;; *************** function _clear_adc_scan *****************
  6095 ;; Defined at:
  6096 ;;		line 64 in file "daq.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;		None
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1  [STACK] void 
  6103 ;; Registers used:
  6104 ;;		None
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/1
  6107 ;;		On exit  : 3F/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;Total ram usage:        0 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    7
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_main
  6121 ;; This function uses a reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text23
  6125  0195FA                     __ptext23:
  6126                           	opt callstack 0
  6127  0195FA                     _clear_adc_scan:
  6128                           	opt callstack 23
  6129                           
  6130                           ;daq.c: 66:  R.done = 0;
  6131                           
  6132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6133                           ;incstack = 0
  6134  0195FA  0100               	movlb	0	; () banked
  6135  0195FC  6BEA               	clrf	(_R+39)& (0+255),b	;volatile
  6136                           
  6137                           ; BSR set to: 0
  6138                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6139  0195FE  0012               	return		;funcret
  6140  019600                     __end_of_clear_adc_scan:
  6141                           	opt callstack 0
  6142                           
  6143 ;; *************** function _check_help *****************
  6144 ;; Defined at:
  6145 ;;		line 40 in file "mconfig.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  flipper         1  [STACK] const _Bool 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  estatus         1    0        _Bool 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1  [STACK] _Bool 
  6152 ;; Registers used:
  6153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6154 ;; Tracked objects:
  6155 ;;		On entry : 3F/2
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:   19
  6166 ;; This function calls:
  6167 ;;		_StartTimer
  6168 ;;		_TimerDone
  6169 ;;		_display_help
  6170 ;;		_display_info
  6171 ;;		_get_vterm_ptr
  6172 ;;		_help_button
  6173 ;;		_mode_lamp_bright
  6174 ;;		_mode_lamp_dim
  6175 ;;		_set_display_info
  6176 ;;		_set_temp_display_help
  6177 ;;		_set_vterm
  6178 ;;		_sprintf
  6179 ;;		_update_lcd
  6180 ;;		_vterm_dump
  6181 ;; This function is called by:
  6182 ;;		_main
  6183 ;; This function uses a reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text24
  6187  015FE4                     __ptext24:
  6188                           	opt callstack 0
  6189  015FE4                     _check_help:
  6190                           	opt callstack 11
  6191                           
  6192                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6193                           
  6194                           ; BSR set to: 0
  6195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6196                           ;incstack = 0
  6197  015FE4  EC35  F0C6         	call	_help_button	;wreg free
  6198  015FE8  5025               	movf	btemp^0,w,c
  6199  015FEA  B4D8               	btfsc	status,2,c
  6200  015FEC  D0D0               	goto	l11031
  6201  015FEE  ECED  F0CA         	call	_display_info	;wreg free
  6202  015FF2  0425               	decf	btemp^0,w,c
  6203  015FF4  B4D8               	btfsc	status,2,c
  6204  015FF6  D0CB               	goto	l11031
  6205                           
  6206                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6207  015FF8  0EDC               	movlw	220
  6208  015FFA  6EE6               	movwf	postinc1,c
  6209  015FFC  0E05               	movlw	5
  6210  015FFE  6EE6               	movwf	postinc1,c
  6211  016000  0E0B               	movlw	11
  6212  016002  6EE6               	movwf	postinc1,c
  6213  016004  EC96  F0C5         	call	_StartTimer	;wreg free
  6214                           
  6215                           ;mconfig.c: 48:   if (V.debug)
  6216  016008  0102               	movlb	2	; () banked
  6217  01600A  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6218                           
  6219                           ; BSR set to: 2
  6220                           ;mconfig.c: 49:    vterm_dump();
  6221  01600C  EC9D  F0B6         	call	_vterm_dump	;wreg free
  6222                           
  6223                           ;mconfig.c: 51:   set_vterm(1);
  6224  016010  0E01               	movlw	1
  6225  016012  6EE6               	movwf	postinc1,c
  6226  016014  ECF4  F0C9         	call	_set_vterm	;wreg free
  6227                           
  6228                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6229  016018  ECED  F0CA         	call	_display_info	;wreg free
  6230  01601C  5025               	movf	btemp^0,w,c
  6231  01601E  6EE6               	movwf	postinc1,c
  6232  016020  ECAE  F0CA         	call	_set_temp_display_help	;wreg free
  6233                           
  6234                           ; BSR set to: 2
  6235                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6236  016024  0E01               	movlw	1
  6237  016026  6EE6               	movwf	postinc1,c
  6238  016028  EC03  F0CA         	call	_set_display_info	;wreg free
  6239                           
  6240                           ;mconfig.c: 54:   if (flipper) {
  6241                           ;stkvar	_flipper @ sp[(0)+-1]
  6242  01602C  0EFF               	movlw	-1
  6243  01602E  50E3               	movf	plusw1,w,c
  6244  016030  B4D8               	btfsc	status,2,c
  6245  016032  D019               	goto	l11017
  6246                           
  6247                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6248  016034  0EC1               	movlw	low STR_27
  6249  016036  6EE6               	movwf	postinc1,c
  6250  016038  0EFF               	movlw	high STR_27
  6251  01603A  6EE6               	movwf	postinc1,c
  6252  01603C  0E80               	movlw	low STR_29
  6253  01603E  6EE6               	movwf	postinc1,c
  6254  016040  0EFE               	movlw	high STR_29
  6255  016042  6EE6               	movwf	postinc1,c
  6256  016044  0E01               	movlw	1
  6257  016046  6EE6               	movwf	postinc1,c
  6258  016048  0E00               	movlw	0
  6259  01604A  6EE6               	movwf	postinc1,c
  6260  01604C  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6261  016050  0060  F097  FFE6   	movff	btemp,postinc1
  6262  016056  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6263  01605C  0E06               	movlw	6
  6264  01605E  6EE6               	movwf	postinc1,c
  6265  016060  ECF8  F0B9         	call	_sprintf	;wreg free
  6266                           
  6267                           ;mconfig.c: 56:   } else {
  6268  016064  D018               	goto	l1669
  6269  016066                     l11017:
  6270                           
  6271                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6272  016066  0ED7               	movlw	low STR_28
  6273  016068  6EE6               	movwf	postinc1,c
  6274  01606A  0EFF               	movlw	high STR_28
  6275  01606C  6EE6               	movwf	postinc1,c
  6276  01606E  0E80               	movlw	low STR_29
  6277  016070  6EE6               	movwf	postinc1,c
  6278  016072  0EFE               	movlw	high STR_29
  6279  016074  6EE6               	movwf	postinc1,c
  6280  016076  0E01               	movlw	1
  6281  016078  6EE6               	movwf	postinc1,c
  6282  01607A  0E00               	movlw	0
  6283  01607C  6EE6               	movwf	postinc1,c
  6284  01607E  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6285  016082  0060  F097  FFE6   	movff	btemp,postinc1
  6286  016088  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6287  01608E  0E06               	movlw	6
  6288  016090  6EE6               	movwf	postinc1,c
  6289  016092  ECF8  F0B9         	call	_sprintf	;wreg free
  6290  016096                     l1669:
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6294  016096  0102               	movlb	2	; () banked
  6295  016098  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6296  01609A  32E8               	rrcf	wreg,f,c
  6297  01609C  32E8               	rrcf	wreg,f,c
  6298  01609E  0B03               	andlw	3
  6299  0160A0  0D24               	mullw	36
  6300  0160A2  0E12               	movlw	18
  6301  0160A4  26F3               	addwf	243,f,c
  6302  0160A6  0E00               	movlw	0
  6303  0160A8  22F4               	addwfc	244,f,c
  6304  0160AA  0EB1               	movlw	low _T
  6305  0160AC  6E2F               	movwf	(btemp+10)^0,c
  6306  0160AE  0EFD               	movlw	high _T
  6307  0160B0  6E30               	movwf	(btemp+11)^0,c
  6308  0160B2  50F3               	movf	243,w,c
  6309  0160B4  262F               	addwf	(btemp+10)^0,f,c
  6310  0160B6  50F4               	movf	244,w,c
  6311  0160B8  2230               	addwfc	(btemp+11)^0,f,c
  6312  0160BA  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6313  0160C0  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6314  0160C6  0ECD               	movlw	low STR_31
  6315  0160C8  6EE6               	movwf	postinc1,c
  6316  0160CA  0EFF               	movlw	high STR_31
  6317  0160CC  6EE6               	movwf	postinc1,c
  6318  0160CE  0E01               	movlw	1
  6319  0160D0  6EE6               	movwf	postinc1,c
  6320  0160D2  0E01               	movlw	1
  6321  0160D4  6EE6               	movwf	postinc1,c
  6322  0160D6  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6323  0160DA  0060  F097  FFE6   	movff	btemp,postinc1
  6324  0160E0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6325  0160E6  0E06               	movlw	6
  6326  0160E8  6EE6               	movwf	postinc1,c
  6327  0160EA  ECF8  F0B9         	call	_sprintf	;wreg free
  6328                           
  6329                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6330  0160EE  0102               	movlb	2	; () banked
  6331  0160F0  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6332  0160F2  32E8               	rrcf	wreg,f,c
  6333  0160F4  32E8               	rrcf	wreg,f,c
  6334  0160F6  0B03               	andlw	3
  6335  0160F8  0D24               	mullw	36
  6336  0160FA  0EB1               	movlw	low _T
  6337  0160FC  6E2F               	movwf	(btemp+10)^0,c
  6338  0160FE  0EFD               	movlw	high _T
  6339  016100  6E30               	movwf	(btemp+11)^0,c
  6340  016102  50F3               	movf	243,w,c
  6341  016104  262F               	addwf	(btemp+10)^0,f,c
  6342  016106  50F4               	movf	244,w,c
  6343  016108  2230               	addwfc	(btemp+11)^0,f,c
  6344  01610A  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6345  016110  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6346  016116  0ECD               	movlw	low STR_31
  6347  016118  6EE6               	movwf	postinc1,c
  6348  01611A  0EFF               	movlw	high STR_31
  6349  01611C  6EE6               	movwf	postinc1,c
  6350  01611E  0E01               	movlw	1
  6351  016120  6EE6               	movwf	postinc1,c
  6352  016122  0E02               	movlw	2
  6353  016124  6EE6               	movwf	postinc1,c
  6354  016126  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6355  01612A  0060  F097  FFE6   	movff	btemp,postinc1
  6356  016130  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6357  016136  0E06               	movlw	6
  6358  016138  6EE6               	movwf	postinc1,c
  6359  01613A  ECF8  F0B9         	call	_sprintf	;wreg free
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;mconfig.c: 61:   V.help_id++;
  6363  01613E  EE20  F29B         	lfsr	2,_V+155	;volatile
  6364  016142  38DF               	swapf	223,w,c
  6365  016144  6E30               	movwf	(btemp+11)^0,c
  6366  016146  3230               	rrcf	(btemp+11)^0,f,c
  6367  016148  3030               	rrcf	(btemp+11)^0,w,c
  6368  01614A  0B03               	andlw	3
  6369  01614C  6E30               	movwf	(btemp+11)^0,c
  6370  01614E  2A30               	incf	(btemp+11)^0,f,c
  6371  016150  3A30               	swapf	(btemp+11)^0,f,c
  6372  016152  3630               	rlcf	(btemp+11)^0,f,c
  6373  016154  3630               	rlcf	(btemp+11)^0,f,c
  6374  016156  50DF               	movf	223,w,c
  6375  016158  1830               	xorwf	(btemp+11)^0,w,c
  6376  01615A  0B3F               	andlw	-193
  6377  01615C  1830               	xorwf	(btemp+11)^0,w,c
  6378  01615E  6EDF               	movwf	223,c
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6382  016160  0EB8               	movlw	184
  6383  016162  6EE6               	movwf	postinc1,c
  6384  016164  0E0B               	movlw	11
  6385  016166  6EE6               	movwf	postinc1,c
  6386  016168  0E09               	movlw	9
  6387  01616A  6EE6               	movwf	postinc1,c
  6388  01616C  EC96  F0C5         	call	_StartTimer	;wreg free
  6389                           
  6390                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6391  016170  0EB8               	movlw	184
  6392  016172  6EE6               	movwf	postinc1,c
  6393  016174  0E0B               	movlw	11
  6394  016176  6EE6               	movwf	postinc1,c
  6395  016178  0E07               	movlw	7
  6396  01617A  6EE6               	movwf	postinc1,c
  6397  01617C  EC96  F0C5         	call	_StartTimer	;wreg free
  6398                           
  6399                           ;mconfig.c: 64:   mode_lamp_bright();
  6400  016180  ECBD  F0CA         	call	_mode_lamp_bright	;wreg free
  6401                           
  6402                           ;mconfig.c: 65:   update_lcd(1);
  6403  016184  0E01               	movlw	1
  6404  016186  6EE6               	movwf	postinc1,c
  6405  016188  EC70  F0B9         	call	_update_lcd	;wreg free
  6406                           
  6407                           ;mconfig.c: 67:  } else {
  6408  01618C  D032               	goto	l1670
  6409  01618E                     l11031:
  6410                           
  6411                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6412  01618E  0E09               	movlw	9
  6413  016190  6EE6               	movwf	postinc1,c
  6414  016192  ECF7  F0C7         	call	_TimerDone	;wreg free
  6415  016196  5025               	movf	btemp^0,w,c
  6416  016198  B4D8               	btfsc	status,2,c
  6417  01619A  D02B               	goto	l1670
  6418                           
  6419                           ;mconfig.c: 69:    set_vterm(0);
  6420  01619C  0E00               	movlw	0
  6421  01619E  6EE6               	movwf	postinc1,c
  6422  0161A0  ECF4  F0C9         	call	_set_vterm	;wreg free
  6423                           
  6424                           ;mconfig.c: 70:    V.help = 0;
  6425  0161A4  0102               	movlb	2	; () banked
  6426  0161A6  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6427                           
  6428                           ; BSR set to: 2
  6429                           ;mconfig.c: 71:    set_display_info(display_help());
  6430  0161A8  ECF1  F0CA         	call	_display_help	;wreg free
  6431  0161AC  5025               	movf	btemp^0,w,c
  6432  0161AE  6EE6               	movwf	postinc1,c
  6433  0161B0  EC03  F0CA         	call	_set_display_info	;wreg free
  6434                           
  6435                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6436  0161B4  0060  FA57  FFE6   	movff	_V+149,postinc1
  6437  0161BA  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6438  0161C0  EC59  F0CA         	call	_mode_lamp_dim	;wreg free
  6439                           
  6440                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6441  0161C4  0E0B               	movlw	11
  6442  0161C6  6EE6               	movwf	postinc1,c
  6443  0161C8  ECF7  F0C7         	call	_TimerDone	;wreg free
  6444  0161CC  5025               	movf	btemp^0,w,c
  6445  0161CE  B4D8               	btfsc	status,2,c
  6446  0161D0  D010               	goto	l1670
  6447                           
  6448                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6449  0161D2  0102               	movlb	2	; () banked
  6450  0161D4  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6451  0161D6  A4D8               	btfss	status,2,c
  6452  0161D8  D002               	goto	u10770
  6453  0161DA  0E01               	movlw	1
  6454  0161DC  D001               	goto	u10780
  6455  0161DE                     u10770:
  6456  0161DE  0E00               	movlw	0
  6457  0161E0                     u10780:
  6458  0161E0  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6459                           
  6460                           ; BSR set to: 2
  6461                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6462  0161E2  0EDC               	movlw	220
  6463  0161E4  6EE6               	movwf	postinc1,c
  6464  0161E6  0E05               	movlw	5
  6465  0161E8  6EE6               	movwf	postinc1,c
  6466  0161EA  0E0B               	movlw	11
  6467  0161EC  6EE6               	movwf	postinc1,c
  6468  0161EE  EC96  F0C5         	call	_StartTimer	;wreg free
  6469  0161F2                     l1670:
  6470                           
  6471                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6472  0161F2  52E5               	movf	postdec1,f,c
  6473  0161F4  0012               	return		;funcret
  6474  0161F6                     __end_of_check_help:
  6475                           	opt callstack 0
  6476                           
  6477 ;; *************** function _vterm_dump *****************
  6478 ;; Defined at:
  6479 ;;		line 121 in file "mconfig.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1  [STACK] void 
  6486 ;; Registers used:
  6487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6488 ;; Tracked objects:
  6489 ;;		On entry : 3F/2
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6497 ;;Total ram usage:        0 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:   18
  6500 ;; This function calls:
  6501 ;;		_WaitMs
  6502 ;;		_eaDogM_WriteStringAtPos
  6503 ;;		_get_vterm_ptr
  6504 ;;		_sprintf
  6505 ;;		_wait_lcd_done
  6506 ;; This function is called by:
  6507 ;;		_check_help
  6508 ;; This function uses a reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text25
  6512  016D3A                     __ptext25:
  6513                           	opt callstack 0
  6514  016D3A                     _vterm_dump:
  6515                           	opt callstack 11
  6516                           
  6517                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6518                           
  6519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6520                           ;incstack = 0
  6521  016D3A  0E01               	movlw	1
  6522  016D3C  6EE6               	movwf	postinc1,c
  6523  016D3E  0E00               	movlw	0
  6524  016D40  6EE6               	movwf	postinc1,c
  6525  016D42  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6526  016D46  0060  F097  FFE6   	movff	btemp,postinc1
  6527  016D4C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6528  016D52  0E00               	movlw	0
  6529  016D54  6EE6               	movwf	postinc1,c
  6530  016D56  0E00               	movlw	0
  6531  016D58  6EE6               	movwf	postinc1,c
  6532  016D5A  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6533  016D5E  0060  F097  FFE6   	movff	btemp,postinc1
  6534  016D64  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6535  016D6A  0EA3               	movlw	low STR_33
  6536  016D6C  6EE6               	movwf	postinc1,c
  6537  016D6E  0EFF               	movlw	high STR_33
  6538  016D70  6EE6               	movwf	postinc1,c
  6539  016D72  0E01               	movlw	low (_V+1)
  6540  016D74  6EE6               	movwf	postinc1,c
  6541  016D76  0E02               	movlw	high (_V+1)
  6542  016D78  6EE6               	movwf	postinc1,c
  6543  016D7A  0E08               	movlw	8
  6544  016D7C  6EE6               	movwf	postinc1,c
  6545  016D7E  ECF8  F0B9         	call	_sprintf	;wreg free
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;mconfig.c: 124:  wait_lcd_done();
  6549  016D82  EC30  F0CA         	call	_wait_lcd_done	;wreg free
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6553  016D86  0E01               	movlw	low (_V+1)
  6554  016D88  6EE6               	movwf	postinc1,c
  6555  016D8A  0E02               	movlw	high (_V+1)
  6556  016D8C  6EE6               	movwf	postinc1,c
  6557  016D8E  0E00               	movlw	0
  6558  016D90  6EE6               	movwf	postinc1,c
  6559  016D92  0E00               	movlw	0
  6560  016D94  6EE6               	movwf	postinc1,c
  6561  016D96  EC87  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6562                           
  6563                           ; BSR set to: 59
  6564                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6565  016D9A  0E01               	movlw	1
  6566  016D9C  6EE6               	movwf	postinc1,c
  6567  016D9E  0E01               	movlw	1
  6568  016DA0  6EE6               	movwf	postinc1,c
  6569  016DA2  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6570  016DA6  0060  F097  FFE6   	movff	btemp,postinc1
  6571  016DAC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6572  016DB2  0E00               	movlw	0
  6573  016DB4  6EE6               	movwf	postinc1,c
  6574  016DB6  0E01               	movlw	1
  6575  016DB8  6EE6               	movwf	postinc1,c
  6576  016DBA  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6577  016DBE  0060  F097  FFE6   	movff	btemp,postinc1
  6578  016DC4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6579  016DCA  0EA3               	movlw	low STR_33
  6580  016DCC  6EE6               	movwf	postinc1,c
  6581  016DCE  0EFF               	movlw	high STR_33
  6582  016DD0  6EE6               	movwf	postinc1,c
  6583  016DD2  0E01               	movlw	low (_V+1)
  6584  016DD4  6EE6               	movwf	postinc1,c
  6585  016DD6  0E02               	movlw	high (_V+1)
  6586  016DD8  6EE6               	movwf	postinc1,c
  6587  016DDA  0E08               	movlw	8
  6588  016DDC  6EE6               	movwf	postinc1,c
  6589  016DDE  ECF8  F0B9         	call	_sprintf	;wreg free
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;mconfig.c: 127:  wait_lcd_done();
  6593  016DE2  EC30  F0CA         	call	_wait_lcd_done	;wreg free
  6594                           
  6595                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6596  016DE6  0E01               	movlw	low (_V+1)
  6597  016DE8  6EE6               	movwf	postinc1,c
  6598  016DEA  0E02               	movlw	high (_V+1)
  6599  016DEC  6EE6               	movwf	postinc1,c
  6600  016DEE  0E00               	movlw	0
  6601  016DF0  6EE6               	movwf	postinc1,c
  6602  016DF2  0E01               	movlw	1
  6603  016DF4  6EE6               	movwf	postinc1,c
  6604  016DF6  EC87  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6605                           
  6606                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6607  016DFA  0E01               	movlw	1
  6608  016DFC  6EE6               	movwf	postinc1,c
  6609  016DFE  0E02               	movlw	2
  6610  016E00  6EE6               	movwf	postinc1,c
  6611  016E02  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6612  016E06  0060  F097  FFE6   	movff	btemp,postinc1
  6613  016E0C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6614  016E12  0E00               	movlw	0
  6615  016E14  6EE6               	movwf	postinc1,c
  6616  016E16  0E02               	movlw	2
  6617  016E18  6EE6               	movwf	postinc1,c
  6618  016E1A  EC38  F0C7         	call	_get_vterm_ptr	;wreg free
  6619  016E1E  0060  F097  FFE6   	movff	btemp,postinc1
  6620  016E24  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6621  016E2A  0EA3               	movlw	low STR_33
  6622  016E2C  6EE6               	movwf	postinc1,c
  6623  016E2E  0EFF               	movlw	high STR_33
  6624  016E30  6EE6               	movwf	postinc1,c
  6625  016E32  0E01               	movlw	low (_V+1)
  6626  016E34  6EE6               	movwf	postinc1,c
  6627  016E36  0E02               	movlw	high (_V+1)
  6628  016E38  6EE6               	movwf	postinc1,c
  6629  016E3A  0E08               	movlw	8
  6630  016E3C  6EE6               	movwf	postinc1,c
  6631  016E3E  ECF8  F0B9         	call	_sprintf	;wreg free
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;mconfig.c: 130:  wait_lcd_done();
  6635  016E42  EC30  F0CA         	call	_wait_lcd_done	;wreg free
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6639  016E46  0E01               	movlw	low (_V+1)
  6640  016E48  6EE6               	movwf	postinc1,c
  6641  016E4A  0E02               	movlw	high (_V+1)
  6642  016E4C  6EE6               	movwf	postinc1,c
  6643  016E4E  0E00               	movlw	0
  6644  016E50  6EE6               	movwf	postinc1,c
  6645  016E52  0E02               	movlw	2
  6646  016E54  6EE6               	movwf	postinc1,c
  6647  016E56  EC87  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6648                           
  6649                           ; BSR set to: 59
  6650                           ;mconfig.c: 132:  WaitMs(3000);
  6651  016E5A  0EB8               	movlw	184
  6652  016E5C  6EE6               	movwf	postinc1,c
  6653  016E5E  0E0B               	movlw	11
  6654  016E60  6EE6               	movwf	postinc1,c
  6655  016E62  EC6C  F0C6         	call	_WaitMs	;wreg free
  6656                           
  6657                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6658  016E66  0012               	return		;funcret
  6659  016E68                     __end_of_vterm_dump:
  6660                           	opt callstack 0
  6661                           
  6662 ;; *************** function _sprintf *****************
  6663 ;; Defined at:
  6664 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  s               2  [STACK] PTR unsigned char 
  6667 ;;		 -> D.lcd(288), D(290), V(188), 
  6668 ;;  fmt             2  [STACK] PTR const unsigned char 
  6669 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6670 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6671 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6672 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6673 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6674 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  6675 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6676 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6677 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6678 ;;		 -> STR_1(17), 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;  f               6  [STACK] struct _IO_FILE
  6681 ;;  ap              2  [STACK] PTR void [1]
  6682 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6683 ;;  ret             2    0        int 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  2  [STACK] int 
  6686 ;; Registers used:
  6687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/1
  6690 ;;		On exit  : 3F/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6697 ;;Total ram usage:        0 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:   15
  6700 ;; This function calls:
  6701 ;;		_vfprintf
  6702 ;; This function is called by:
  6703 ;;		_main
  6704 ;;		_check_help
  6705 ;;		_vterm_dump
  6706 ;; This function uses a reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text26
  6710  0173F0                     __ptext26:
  6711                           	opt callstack 0
  6712  0173F0                     _sprintf:
  6713                           	opt callstack 0
  6714                           
  6715                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6716  0173F0  0E08               	movlw	8
  6717  0173F2  26E1               	addwf	fsr1l,f,c
  6718  0173F4  0E00               	movlw	0
  6719  0173F6  22E2               	addwfc	fsr1h,f,c
  6720                           
  6721                           ;incstack = 0
  6722  0173F8  0EFE               	movlw	254
  6723  0173FA  6E2F               	movwf	(btemp+10)^0,c
  6724  0173FC  0EFF               	movlw	255
  6725  0173FE  6E30               	movwf	(btemp+11)^0,c
  6726                           
  6727                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6728  017400  0EF5               	movlw	245
  6729  017402  24E1               	addwf	fsr1l,w,c
  6730  017404  6E2D               	movwf	(btemp+8)^0,c
  6731  017406  0EFF               	movlw	255
  6732  017408  20E2               	addwfc	fsr1h,w,c
  6733  01740A  6E2E               	movwf	(btemp+9)^0,c
  6734  01740C  502F               	movf	(btemp+10)^0,w,c
  6735  01740E  262D               	addwf	(btemp+8)^0,f,c
  6736  017410  5030               	movf	(btemp+11)^0,w,c
  6737  017412  222E               	addwfc	(btemp+9)^0,f,c
  6738                           
  6739                           ;stkvar	_ap @ sp[(-8)+6]
  6740  017414  0EFF               	movlw	-1
  6741  017416  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  6742  01741C  0EFE               	movlw	-2
  6743  01741E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  6744                           
  6745                           ;stkvar	_s @ sp[(-8)+-3]
  6746  017424  0EF5               	movlw	-11
  6747  017426  006F FF8C  F02F    	movff	plusw1,btemp+10
  6748  01742C  0EF6               	movlw	-10
  6749  01742E  006F FF8C  F030    	movff	plusw1,btemp+11
  6750                           
  6751                           ;stkvar	_f @ sp[(-8)+0]
  6752  017434  0EF9               	movlw	-7
  6753  017436  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  6754  01743C  0EF8               	movlw	-8
  6755  01743E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  6756                           
  6757                           ;stkvar	_f @ sp[(-8)+0]
  6758  017444  0EFA               	movlw	250
  6759  017446  24E1               	addwf	fsr1l,w,c
  6760  017448  6ED9               	movwf	fsr2l,c
  6761  01744A  0EFF               	movlw	255
  6762  01744C  20E2               	addwfc	fsr1h,w,c
  6763  01744E  6EDA               	movwf	fsr2h,c
  6764  017450  0E00               	movlw	0
  6765  017452  6EDE               	movwf	postinc2,c
  6766  017454  0E00               	movlw	0
  6767  017456  6EDD               	movwf	postdec2,c
  6768                           
  6769                           ;stkvar	_f @ sp[(-8)+0]
  6770  017458  0EFC               	movlw	252
  6771  01745A  24E1               	addwf	fsr1l,w,c
  6772  01745C  6ED9               	movwf	fsr2l,c
  6773  01745E  0EFF               	movlw	255
  6774  017460  20E2               	addwfc	fsr1h,w,c
  6775  017462  6EDA               	movwf	fsr2h,c
  6776  017464  0E00               	movlw	0
  6777  017466  6EDE               	movwf	postinc2,c
  6778  017468  0E00               	movlw	0
  6779  01746A  6EDD               	movwf	postdec2,c
  6780                           
  6781                           ;stkvar	_ap @ sp[(-8)+6]
  6782  01746C  0EFE               	movlw	254
  6783  01746E  24E1               	addwf	fsr1l,w,c
  6784  017470  6E25               	movwf	btemp^0,c
  6785  017472  0EFF               	movlw	255
  6786  017474  20E2               	addwfc	fsr1h,w,c
  6787  017476  6E26               	movwf	(btemp+1)^0,c
  6788  017478  0060  F097  FFE6   	movff	btemp,postinc1
  6789  01747E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6790                           
  6791                           ;stkvar	_fmt @ sp[(-10)+-5]
  6792  017484  0EF1               	movlw	-15
  6793  017486  006F FF8F FFE6     	movff	plusw1,postinc1
  6794  01748C  006F FF8F FFE6     	movff	plusw1,postinc1
  6795                           
  6796                           ;stkvar	_f @ sp[(-12)+0]
  6797  017492  0EF4               	movlw	244
  6798  017494  24E1               	addwf	fsr1l,w,c
  6799  017496  6E25               	movwf	btemp^0,c
  6800  017498  0EFF               	movlw	255
  6801  01749A  20E2               	addwfc	fsr1h,w,c
  6802  01749C  6E26               	movwf	(btemp+1)^0,c
  6803  01749E  0060  F097  FFE6   	movff	btemp,postinc1
  6804  0174A4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6805  0174AA  EC3A  F0BE         	call	_vfprintf	;wreg free
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;stkvar	_f @ sp[(-8)+0]
  6809  0174AE  0EFA               	movlw	250
  6810  0174B0  24E1               	addwf	fsr1l,w,c
  6811  0174B2  6ED9               	movwf	fsr2l,c
  6812  0174B4  0EFF               	movlw	255
  6813  0174B6  20E2               	addwfc	fsr1h,w,c
  6814  0174B8  6EDA               	movwf	fsr2h,c
  6815  0174BA  006F FF78  F02F    	movff	postinc2,btemp+10
  6816  0174C0  006F FF74  F030    	movff	postdec2,btemp+11
  6817                           
  6818                           ;stkvar	_s @ sp[(-8)+-3]
  6819  0174C6  0EF5               	movlw	-11
  6820  0174C8  006F FF8C  F02D    	movff	plusw1,btemp+8
  6821  0174CE  0EF6               	movlw	-10
  6822  0174D0  006F FF8C  F02E    	movff	plusw1,btemp+9
  6823  0174D6  502F               	movf	(btemp+10)^0,w,c
  6824  0174D8  242D               	addwf	(btemp+8)^0,w,c
  6825  0174DA  6ED9               	movwf	fsr2l,c
  6826  0174DC  5030               	movf	(btemp+11)^0,w,c
  6827  0174DE  202E               	addwfc	(btemp+9)^0,w,c
  6828  0174E0  6EDA               	movwf	fsr2h,c
  6829  0174E2  0E00               	movlw	0
  6830  0174E4  6EDF               	movwf	indf2,c
  6831                           
  6832                           ; BSR set to: 0
  6833                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6834  0174E6  0EF8               	movlw	248
  6835  0174E8  26E1               	addwf	fsr1l,f,c
  6836  0174EA  0EFF               	movlw	255
  6837  0174EC  22E2               	addwfc	fsr1h,f,c
  6838  0174EE  52E5               	movf	postdec1,f,c
  6839  0174F0  50E7               	movf	indf1,w,c
  6840  0174F2  5EE1               	subwf	fsr1l,f,c
  6841  0174F4  0E00               	movlw	0
  6842  0174F6  5AE2               	subwfb	fsr1h,f,c
  6843  0174F8  0012               	return		;funcret
  6844  0174FA                     __end_of_sprintf:
  6845                           	opt callstack 0
  6846                           
  6847 ;; *************** function _get_vterm_ptr *****************
  6848 ;; Defined at:
  6849 ;;		line 116 in file "mconfig.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  line            1  [STACK] const unsigned char 
  6852 ;;  vterm           1  [STACK] const unsigned char 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  2  [STACK] PTR unsigned char 
  6857 ;; Registers used:
  6858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/1
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6868 ;;Total ram usage:        0 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    7
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_main
  6875 ;;		_check_help
  6876 ;;		_vterm_dump
  6877 ;; This function uses a reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text27
  6881  018E70                     __ptext27:
  6882                           	opt callstack 0
  6883  018E70                     _get_vterm_ptr:
  6884                           	opt callstack 23
  6885                           
  6886                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6887                           ;stkvar	_vterm @ sp[(0)+-2]
  6888                           
  6889                           ; BSR set to: 0
  6890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6891                           ;incstack = 0
  6892  018E70  0EFE               	movlw	-2
  6893  018E72  50E3               	movf	plusw1,w,c
  6894  018E74  0B03               	andlw	3
  6895  018E76  0D48               	mullw	72
  6896  018E78  0EFF               	movlw	low _D
  6897  018E7A  6E25               	movwf	btemp^0,c
  6898  018E7C  0E06               	movlw	high _D
  6899  018E7E  6E26               	movwf	(btemp+1)^0,c
  6900  018E80  50F3               	movf	243,w,c
  6901  018E82  2625               	addwf	btemp^0,f,c
  6902  018E84  50F4               	movf	244,w,c
  6903  018E86  2226               	addwfc	(btemp+1)^0,f,c
  6904                           
  6905                           ;stkvar	_line @ sp[(0)+-1]
  6906  018E88  0EFF               	movlw	-1
  6907  018E8A  50E3               	movf	plusw1,w,c
  6908  018E8C  0B03               	andlw	3
  6909  018E8E  0D18               	mullw	24
  6910  018E90  50F3               	movf	243,w,c
  6911  018E92  2625               	addwf	btemp^0,f,c
  6912  018E94  50F4               	movf	244,w,c
  6913  018E96  2226               	addwfc	(btemp+1)^0,f,c
  6914                           
  6915                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6916  018E98  52E5               	movf	postdec1,f,c
  6917  018E9A  52E5               	movf	postdec1,f,c
  6918  018E9C  0012               	return		;funcret
  6919  018E9E                     __end_of_get_vterm_ptr:
  6920                           	opt callstack 0
  6921                           
  6922 ;; *************** function _WaitMs *****************
  6923 ;; Defined at:
  6924 ;;		line 32 in file "timers.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  numMilliseco    2  [STACK] const unsigned short 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1  [STACK] void 
  6931 ;; Registers used:
  6932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/2
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6942 ;;Total ram usage:        0 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    8
  6945 ;; This function calls:
  6946 ;;		_StartTimer
  6947 ;;		_TimerDone
  6948 ;; This function is called by:
  6949 ;;		_main
  6950 ;;		_vterm_dump
  6951 ;; This function uses a reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text28
  6955  018CD8                     __ptext28:
  6956                           	opt callstack 0
  6957  018CD8                     _WaitMs:
  6958                           	opt callstack 20
  6959                           
  6960                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6961                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6962                           
  6963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6964                           ;incstack = 0
  6965  018CD8  0EFE               	movlw	-2
  6966  018CDA  006F FF8F FFE6     	movff	plusw1,postinc1
  6967  018CE0  006F FF8F FFE6     	movff	plusw1,postinc1
  6968  018CE6  0E00               	movlw	0
  6969  018CE8  6EE6               	movwf	postinc1,c
  6970  018CEA  EC96  F0C5         	call	_StartTimer	;wreg free
  6971                           
  6972                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6973  018CEE  D005               	goto	l7871
  6974  018CF0                     l1599:
  6975                           
  6976                           ;timers.c: 36:   __nop();
  6977  018CF0  F000               	nop	
  6978                           
  6979                           ;timers.c: 37:   __nop();
  6980  018CF2  F000               	nop	
  6981                           
  6982                           ;timers.c: 38:   __nop();
  6983  018CF4  F000               	nop	
  6984                           
  6985                           ;timers.c: 39:   __nop();
  6986  018CF6  F000               	nop	
  6987  018CF8  0004               	clrwdt		;# 
  6988  018CFA                     l7871:
  6989                           
  6990                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6991  018CFA  0E00               	movlw	0
  6992  018CFC  6EE6               	movwf	postinc1,c
  6993  018CFE  ECF7  F0C7         	call	_TimerDone	;wreg free
  6994  018D02  5025               	movf	btemp^0,w,c
  6995  018D04  B4D8               	btfsc	status,2,c
  6996  018D06  D7F4               	goto	l1599
  6997                           
  6998                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6999  018D08  52E5               	movf	postdec1,f,c
  7000  018D0A  52E5               	movf	postdec1,f,c
  7001  018D0C  0012               	return		;funcret
  7002  018D0E                     __end_of_WaitMs:
  7003                           	opt callstack 0
  7004                           
  7005 ;; *************** function _update_lcd *****************
  7006 ;; Defined at:
  7007 ;;		line 85 in file "mconfig.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  vterm           1  [STACK] unsigned char 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1  [STACK] unsigned char 
  7014 ;; Registers used:
  7015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7025 ;;Total ram usage:        0 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; Hardware stack levels required when called:   18
  7028 ;; This function calls:
  7029 ;;		_eaDogM_WriteStringAtPos
  7030 ;;		_wait_lcd_done
  7031 ;; This function is called by:
  7032 ;;		_main
  7033 ;;		_check_help
  7034 ;; This function uses a reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text29
  7038  0172E0                     __ptext29:
  7039                           	opt callstack 0
  7040  0172E0                     _update_lcd:
  7041                           	opt callstack 12
  7042                           
  7043                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7044                           ;stkvar	_vterm @ sp[(0)+-1]
  7045                           
  7046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7047                           ;incstack = 0
  7048  0172E0  0EFF               	movlw	-1
  7049  0172E2  006F FF8C  F025    	movff	plusw1,btemp
  7050  0172E8  0E03               	movlw	3
  7051  0172EA  1625               	andwf	btemp^0,f,c
  7052  0172EC  0EFF               	movlw	-1
  7053  0172EE  0060  F097  FFE3   	movff	btemp,plusw1
  7054                           
  7055                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7056  0172F4  EE22  F01F         	lfsr	2,_D+288
  7057  0172F8  A0DF               	btfss	indf2,0,c
  7058  0172FA  D004               	goto	l10897
  7059                           
  7060                           ;stkvar	_vterm @ sp[(0)+-1]
  7061  0172FC  0EFF               	movlw	-1
  7062  0172FE  50E3               	movf	plusw1,w,c
  7063  017300  B4D8               	btfsc	status,2,c
  7064  017302  D074               	goto	l1677
  7065  017304                     l10897:
  7066                           
  7067                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7068                           ;stkvar	_vterm @ sp[(0)+-1]
  7069  017304  0EFF               	movlw	-1
  7070  017306  50E3               	movf	plusw1,w,c
  7071  017308  0D48               	mullw	72
  7072  01730A  0E0F               	movlw	low (_D+16)
  7073  01730C  24F3               	addwf	243,w,c
  7074  01730E  6ED9               	movwf	fsr2l,c
  7075  017310  0E07               	movlw	high (_D+16)
  7076  017312  20F4               	addwfc	prodh,w,c
  7077  017314  6EDA               	movwf	fsr2h,c
  7078  017316  0E00               	movlw	0
  7079  017318  6EDF               	movwf	indf2,c
  7080                           
  7081                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7082                           ;stkvar	_vterm @ sp[(0)+-1]
  7083  01731A  0EFF               	movlw	-1
  7084  01731C  50E3               	movf	plusw1,w,c
  7085  01731E  0D48               	mullw	72
  7086  017320  0E27               	movlw	low (_D+40)
  7087  017322  24F3               	addwf	243,w,c
  7088  017324  6ED9               	movwf	fsr2l,c
  7089  017326  0E07               	movlw	high (_D+40)
  7090  017328  20F4               	addwfc	prodh,w,c
  7091  01732A  6EDA               	movwf	fsr2h,c
  7092  01732C  0E00               	movlw	0
  7093  01732E  6EDF               	movwf	indf2,c
  7094                           
  7095                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7096                           ;stkvar	_vterm @ sp[(0)+-1]
  7097  017330  0EFF               	movlw	-1
  7098  017332  50E3               	movf	plusw1,w,c
  7099  017334  0D48               	mullw	72
  7100  017336  0E3F               	movlw	low (_D+64)
  7101  017338  24F3               	addwf	243,w,c
  7102  01733A  6ED9               	movwf	fsr2l,c
  7103  01733C  0E07               	movlw	high (_D+64)
  7104  01733E  20F4               	addwfc	prodh,w,c
  7105  017340  6EDA               	movwf	fsr2h,c
  7106  017342  0E00               	movlw	0
  7107  017344  6EDF               	movwf	indf2,c
  7108                           
  7109                           ;mconfig.c: 95:  wait_lcd_done();
  7110  017346  EC30  F0CA         	call	_wait_lcd_done	;wreg free
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7114                           ;stkvar	_vterm @ sp[(0)+-1]
  7115  01734A  0EFF               	movlw	-1
  7116  01734C  50E3               	movf	plusw1,w,c
  7117  01734E  0D48               	mullw	72
  7118  017350  0EFF               	movlw	low _D
  7119  017352  6E2F               	movwf	(btemp+10)^0,c
  7120  017354  0E06               	movlw	high _D
  7121  017356  6E30               	movwf	(btemp+11)^0,c
  7122  017358  50F3               	movf	243,w,c
  7123  01735A  262F               	addwf	(btemp+10)^0,f,c
  7124  01735C  50F4               	movf	244,w,c
  7125  01735E  2230               	addwfc	(btemp+11)^0,f,c
  7126  017360  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7127  017366  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7128  01736C  0E00               	movlw	0
  7129  01736E  6EE6               	movwf	postinc1,c
  7130  017370  0E00               	movlw	0
  7131  017372  6EE6               	movwf	postinc1,c
  7132  017374  EC87  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7133                           
  7134                           ; BSR set to: 59
  7135                           ;mconfig.c: 97:  wait_lcd_done();
  7136  017378  EC30  F0CA         	call	_wait_lcd_done	;wreg free
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7140                           ;stkvar	_vterm @ sp[(0)+-1]
  7141  01737C  0EFF               	movlw	-1
  7142  01737E  50E3               	movf	plusw1,w,c
  7143  017380  0D48               	mullw	72
  7144  017382  0EFF               	movlw	low _D
  7145  017384  6E2F               	movwf	(btemp+10)^0,c
  7146  017386  0E06               	movlw	high _D
  7147  017388  6E30               	movwf	(btemp+11)^0,c
  7148  01738A  0E18               	movlw	24
  7149  01738C  262F               	addwf	(btemp+10)^0,f,c
  7150  01738E  0E00               	movlw	0
  7151  017390  2230               	addwfc	(btemp+11)^0,f,c
  7152  017392  50F3               	movf	243,w,c
  7153  017394  262F               	addwf	(btemp+10)^0,f,c
  7154  017396  50F4               	movf	244,w,c
  7155  017398  2230               	addwfc	(btemp+11)^0,f,c
  7156  01739A  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7157  0173A0  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7158  0173A6  0E00               	movlw	0
  7159  0173A8  6EE6               	movwf	postinc1,c
  7160  0173AA  0E01               	movlw	1
  7161  0173AC  6EE6               	movwf	postinc1,c
  7162  0173AE  EC87  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7163                           
  7164                           ; BSR set to: 59
  7165                           ;mconfig.c: 99:  wait_lcd_done();
  7166  0173B2  EC30  F0CA         	call	_wait_lcd_done	;wreg free
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7170                           ;stkvar	_vterm @ sp[(0)+-1]
  7171  0173B6  0EFF               	movlw	-1
  7172  0173B8  50E3               	movf	plusw1,w,c
  7173  0173BA  0D48               	mullw	72
  7174  0173BC  0EFF               	movlw	low _D
  7175  0173BE  6E2F               	movwf	(btemp+10)^0,c
  7176  0173C0  0E06               	movlw	high _D
  7177  0173C2  6E30               	movwf	(btemp+11)^0,c
  7178  0173C4  0E30               	movlw	48
  7179  0173C6  262F               	addwf	(btemp+10)^0,f,c
  7180  0173C8  0E00               	movlw	0
  7181  0173CA  2230               	addwfc	(btemp+11)^0,f,c
  7182  0173CC  50F3               	movf	243,w,c
  7183  0173CE  262F               	addwf	(btemp+10)^0,f,c
  7184  0173D0  50F4               	movf	244,w,c
  7185  0173D2  2230               	addwfc	(btemp+11)^0,f,c
  7186  0173D4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7187  0173DA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7188  0173E0  0E00               	movlw	0
  7189  0173E2  6EE6               	movwf	postinc1,c
  7190  0173E4  0E02               	movlw	2
  7191  0173E6  6EE6               	movwf	postinc1,c
  7192  0173E8  EC87  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7193  0173EC                     l1677:
  7194                           
  7195                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7196  0173EC  52E5               	movf	postdec1,f,c
  7197  0173EE  0012               	return		;funcret
  7198  0173F0                     __end_of_update_lcd:
  7199                           	opt callstack 0
  7200                           
  7201 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7202 ;; Defined at:
  7203 ;;		line 265 in file "eadog.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  r               1  [STACK] const unsigned char 
  7206 ;;  c               1  [STACK] const unsigned char 
  7207 ;;  strPtr          2  [STACK] PTR unsigned char 
  7208 ;;		 -> D.lcd(288), D(290), V(188), 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;		None
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  1  [STACK] void 
  7213 ;; Registers used:
  7214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7215 ;; Tracked objects:
  7216 ;;		On entry : 3F/0
  7217 ;;		On exit  : 3F/3B
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7224 ;;Total ram usage:        0 bytes
  7225 ;; Hardware stack levels used:    1
  7226 ;; Hardware stack levels required when called:   17
  7227 ;; This function calls:
  7228 ;;		_eaDogM_WriteString
  7229 ;;		_send_lcd_cmd_dma
  7230 ;; This function is called by:
  7231 ;;		_update_lcd
  7232 ;;		_vterm_dump
  7233 ;; This function uses a reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text30
  7237  018D0E                     __ptext30:
  7238                           	opt callstack 0
  7239  018D0E                     _eaDogM_WriteStringAtPos:
  7240                           	opt callstack 12
  7241                           
  7242                           ;eadog.c: 265: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 266: {;eadog.c: 267:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7243                           ;stkvar	_c @ sp[(0)+-2]
  7244                           
  7245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7246                           ;incstack = 0
  7247  018D0E  0EFE               	movlw	-2
  7248  018D10  006F FF8C  F030    	movff	plusw1,btemp+11
  7249                           
  7250                           ;stkvar	_r @ sp[(0)+-1]
  7251  018D16  0EFF               	movlw	-1
  7252  018D18  50E3               	movf	plusw1,w,c
  7253  018D1A  0D10               	mullw	16
  7254  018D1C  50F3               	movf	243,w,c
  7255  018D1E  2430               	addwf	(btemp+11)^0,w,c
  7256  018D20  0F80               	addlw	128
  7257  018D22  6EE6               	movwf	postinc1,c
  7258  018D24  EC05  F0C4         	call	_send_lcd_cmd_dma	;wreg free
  7259                           
  7260                           ;eadog.c: 268:  eaDogM_WriteString(strPtr);
  7261                           ;stkvar	_strPtr @ sp[(0)+-4]
  7262  018D28  0EFC               	movlw	-4
  7263  018D2A  006F FF8F FFE6     	movff	plusw1,postinc1
  7264  018D30  006F FF8F FFE6     	movff	plusw1,postinc1
  7265  018D36  ECE5  F0BE         	call	_eaDogM_WriteString	;wreg free
  7266                           
  7267                           ; BSR set to: 59
  7268                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7269  018D3A  52E5               	movf	postdec1,f,c
  7270  018D3C  52E5               	movf	postdec1,f,c
  7271  018D3E  52E5               	movf	postdec1,f,c
  7272  018D40  52E5               	movf	postdec1,f,c
  7273  018D42  0012               	return		;funcret
  7274  018D44                     __end_of_eaDogM_WriteStringAtPos:
  7275                           	opt callstack 0
  7276                           
  7277 ;; *************** function _send_lcd_cmd_dma *****************
  7278 ;; Defined at:
  7279 ;;		line 218 in file "eadog.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  strPtr          1  [STACK] unsigned char 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;		None
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1  [STACK] void 
  7286 ;; Registers used:
  7287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/3D
  7290 ;;		On exit  : 3F/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7297 ;;Total ram usage:        0 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; Hardware stack levels required when called:   16
  7300 ;; This function calls:
  7301 ;;		_printf
  7302 ;;		_ringBufS_flush
  7303 ;;		_start_lcd
  7304 ;;		_wait_lcd_done
  7305 ;;		_wait_lcd_set
  7306 ;; This function is called by:
  7307 ;;		_eaDogM_WriteCommand
  7308 ;;		_eaDogM_WriteStringAtPos
  7309 ;; This function uses a reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text31
  7313  01880A                     __ptext31:
  7314                           	opt callstack 0
  7315  01880A                     _send_lcd_cmd_dma:
  7316                           	opt callstack 12
  7317                           
  7318                           ;eadog.c: 218: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 219: {;eadog.c: 221:  wait
      +                          _lcd_set();
  7319                           
  7320                           ; BSR set to: 59
  7321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7322                           ;incstack = 0
  7323  01880A  EC00  F0CB         	call	_wait_lcd_set	;wreg free
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;eadog.c: 223:  ringBufS_flush(spi_link.tx1a, 0);
  7327  01880E  0E00               	movlw	0
  7328  018810  6EE6               	movwf	postinc1,c
  7329  018812  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7330  018818  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7331  01881E  ECD5  F0BF         	call	_ringBufS_flush	;wreg free
  7332  018822  92BC               	bcf	188,1,c	;volatile
  7333  018824  94BC               	bcf	188,2,c	;volatile
  7334                           
  7335                           ;eadog.c: 226:  DMA1CON0bits.EN = 0;
  7336  018826  013B               	movlb	59	; () banked
  7337  018828  9FFC               	bcf	252,7,b	;volatile
  7338                           
  7339                           ; BSR set to: 59
  7340                           ;eadog.c: 227:  DMA1SSZ = 1;
  7341  01882A  0E00               	movlw	0
  7342  01882C  6FF8               	movwf	248,b	;volatile
  7343  01882E  0E01               	movlw	1
  7344  018830  6FF7               	movwf	247,b	;volatile
  7345                           
  7346                           ; BSR set to: 59
  7347                           ;eadog.c: 228:  DMA1CON0bits.EN = 1;
  7348  018832  8FFC               	bsf	252,7,b	;volatile
  7349                           
  7350                           ; BSR set to: 59
  7351                           ;eadog.c: 229:  printf("%c", strPtr);
  7352                           ;stkvar	_strPtr @ sp[(0)+-1]
  7353  018834  0EFF               	movlw	-1
  7354  018836  50E3               	movf	plusw1,w,c
  7355  018838  6EE6               	movwf	postinc1,c
  7356  01883A  0E00               	movlw	0
  7357  01883C  6EE6               	movwf	postinc1,c
  7358  01883E  0EF9               	movlw	low STR_25
  7359  018840  6EE6               	movwf	postinc1,c
  7360  018842  0EFF               	movlw	high STR_25
  7361  018844  6EE6               	movwf	postinc1,c
  7362  018846  0E04               	movlw	4
  7363  018848  6EE6               	movwf	postinc1,c
  7364  01884A  EC1E  F0C3         	call	_printf	;wreg free
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;eadog.c: 230:  start_lcd();
  7368  01884E  EC03  F0CB         	call	_start_lcd	;wreg free
  7369                           
  7370                           ; BSR set to: 59
  7371                           ;eadog.c: 231:  wait_lcd_done();
  7372  018852  EC30  F0CA         	call	_wait_lcd_done	;wreg free
  7373                           
  7374                           ; BSR set to: 0
  7375  018856  82BC               	bsf	188,1,c	;volatile
  7376                           
  7377                           ; BSR set to: 0
  7378                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7379  018858  52E5               	movf	postdec1,f,c
  7380  01885A  0012               	return		;funcret
  7381  01885C                     __end_of_send_lcd_cmd_dma:
  7382                           	opt callstack 0
  7383                           
  7384 ;; *************** function _wait_lcd_done *****************
  7385 ;; Defined at:
  7386 ;;		line 154 in file "eadog.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;		None
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1  [STACK] void 
  7393 ;; Registers used:
  7394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 3F/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7404 ;;Total ram usage:        0 bytes
  7405 ;; Hardware stack levels used:    1
  7406 ;; Hardware stack levels required when called:    8
  7407 ;; This function calls:
  7408 ;;		_wdtdelay
  7409 ;; This function is called by:
  7410 ;;		_send_lcd_cmd_dma
  7411 ;;		_update_lcd
  7412 ;;		_vterm_dump
  7413 ;; This function uses a reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text32
  7417  019460                     __ptext32:
  7418                           	opt callstack 0
  7419  019460                     _wait_lcd_done:
  7420                           	opt callstack 21
  7421                           
  7422                           ;eadog.c: 156:  while (spi_link.LCD_DATA);
  7423                           
  7424                           ; BSR set to: 0
  7425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7426                           ;incstack = 0
  7427  019460  0100               	movlb	0	; () banked
  7428  019462  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  7429  019464  D7FD               	goto	_wait_lcd_done
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;eadog.c: 157:  wdtdelay(50);
  7433  019466  0E32               	movlw	50
  7434  019468  6EE6               	movwf	postinc1,c
  7435  01946A  0E00               	movlw	0
  7436  01946C  6EE6               	movwf	postinc1,c
  7437  01946E  0E00               	movlw	0
  7438  019470  6EE6               	movwf	postinc1,c
  7439  019472  0E00               	movlw	0
  7440  019474  6EE6               	movwf	postinc1,c
  7441  019476  EC7E  F0C3         	call	_wdtdelay	;wreg free
  7442                           
  7443                           ; BSR set to: 0
  7444                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7445  01947A  0012               	return		;funcret
  7446  01947C                     __end_of_wait_lcd_done:
  7447                           	opt callstack 0
  7448                           
  7449 ;; *************** function _wdtdelay *****************
  7450 ;; Defined at:
  7451 ;;		line 22 in file "eadog.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  delay           4  [STACK] const unsigned long 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1  [STACK] void 
  7458 ;; Registers used:
  7459 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 3F/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7469 ;;Total ram usage:        0 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:    7
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		_init_display
  7476 ;;		_send_lcd_cmd
  7477 ;;		_send_lcd_cmd_long
  7478 ;;		_wait_lcd_done
  7479 ;; This function uses a reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text33
  7483  0186FC                     __ptext33:
  7484                           	opt callstack 0
  7485  0186FC                     _wdtdelay:
  7486                           	opt callstack 21
  7487                           
  7488                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7489                           
  7490                           ; BSR set to: 0
  7491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7492                           ;incstack = 0
  7493  0186FC  0100               	movlb	0	; () banked
  7494  0186FE  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  7495  018700  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7496  018702  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7497  018704  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7498  018706                     l1444:
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;eadog.c: 27:   __nop();
  7502  018706  F000               	nop	
  7503  018708  0004               	clrwdt		;# 
  7504                           
  7505                           ;eadog.c: 29:  };
  7506  01870A  0E01               	movlw	1
  7507  01870C  0100               	movlb	0	; () banked
  7508  01870E  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  7509  018710  0E00               	movlw	0
  7510  018712  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7511  018714  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7512  018716  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;stkvar	_delay @ sp[(0)+-4]
  7516  018718  0EFC               	movlw	-4
  7517  01871A  006F FF8C  F025    	movff	plusw1,btemp
  7518  018720  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  7519  018722  5C25               	subwf	btemp^0,w,c
  7520  018724  0EFD               	movlw	-3
  7521  018726  006F FF8C  F025    	movff	plusw1,btemp
  7522  01872C  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7523  01872E  5825               	subwfb	btemp^0,w,c
  7524  018730  0EFE               	movlw	-2
  7525  018732  006F FF8C  F025    	movff	plusw1,btemp
  7526  018738  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7527  01873A  5825               	subwfb	btemp^0,w,c
  7528  01873C  0EFF               	movlw	-1
  7529  01873E  006F FF8C  F025    	movff	plusw1,btemp
  7530  018744  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7531  018746  5825               	subwfb	btemp^0,w,c
  7532  018748  B0D8               	btfsc	status,0,c
  7533  01874A  D7DD               	goto	l1444
  7534                           
  7535                           ; BSR set to: 0
  7536                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7537  01874C  52E5               	movf	postdec1,f,c
  7538  01874E  52E5               	movf	postdec1,f,c
  7539  018750  52E5               	movf	postdec1,f,c
  7540  018752  52E5               	movf	postdec1,f,c
  7541  018754  0012               	return		;funcret
  7542  018756                     __end_of_wdtdelay:
  7543                           	opt callstack 0
  7544                           
  7545 ;; *************** function _eaDogM_WriteString *****************
  7546 ;; Defined at:
  7547 ;;		line 197 in file "eadog.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;  strPtr          2  [STACK] PTR unsigned char 
  7550 ;;		 -> D.lcd(288), D(290), V(188), 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  1  [STACK] void 
  7555 ;; Registers used:
  7556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7557 ;; Tracked objects:
  7558 ;;		On entry : 3F/0
  7559 ;;		On exit  : 3F/3B
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7566 ;;Total ram usage:        0 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:   16
  7569 ;; This function calls:
  7570 ;;		_printf
  7571 ;;		_ringBufS_flush
  7572 ;;		_start_lcd
  7573 ;;		_strlen
  7574 ;;		_wait_lcd_set
  7575 ;; This function is called by:
  7576 ;;		_eaDogM_WriteStringAtPos
  7577 ;; This function uses a reentrant model
  7578 ;;
  7579                           
  7580                           	psect	text34
  7581  017DCA                     __ptext34:
  7582                           	opt callstack 0
  7583  017DCA                     _eaDogM_WriteString:
  7584                           	opt callstack 12
  7585                           
  7586                           ;eadog.c: 197: void eaDogM_WriteString(char *strPtr);eadog.c: 198: {;eadog.c: 200:  wait
      +                          _lcd_set();
  7587                           
  7588                           ; BSR set to: 0
  7589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7590                           ;incstack = 0
  7591  017DCA  EC00  F0CB         	call	_wait_lcd_set	;wreg free
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;eadog.c: 202:  ringBufS_flush(spi_link.tx1a, 0);
  7595  017DCE  0E00               	movlw	0
  7596  017DD0  6EE6               	movwf	postinc1,c
  7597  017DD2  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7598  017DD8  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7599  017DDE  ECD5  F0BF         	call	_ringBufS_flush	;wreg free
  7600  017DE2  94BC               	bcf	188,2,c	;volatile
  7601                           
  7602                           ;eadog.c: 204:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7603                           ;stkvar	_strPtr @ sp[(0)+-2]
  7604  017DE4  0EFE               	movlw	-2
  7605  017DE6  006F FF8F FFE6     	movff	plusw1,postinc1
  7606  017DEC  006F FF8F FFE6     	movff	plusw1,postinc1
  7607  017DF2  EC38  F0BF         	call	_strlen	;wreg free
  7608  017DF6  5026               	movf	(btemp+1)^0,w,c
  7609  017DF8  E104               	bnz	u10680
  7610  017DFA  0E41               	movlw	65
  7611  017DFC  5C25               	subwf	btemp^0,w,c
  7612  017DFE  A0D8               	btfss	status,0,c
  7613  017E00  D010               	goto	l10863
  7614  017E02                     u10680:
  7615                           
  7616                           ;stkvar	_strPtr @ sp[(0)+-2]
  7617  017E02  0EFE               	movlw	-2
  7618  017E04  006F FF8C  F02F    	movff	plusw1,btemp+10
  7619  017E0A  0EFF               	movlw	-1
  7620  017E0C  006F FF8C  F030    	movff	plusw1,btemp+11
  7621  017E12  0E40               	movlw	64
  7622  017E14  242F               	addwf	(btemp+10)^0,w,c
  7623  017E16  6ED9               	movwf	fsr2l,c
  7624  017E18  0E00               	movlw	0
  7625  017E1A  2030               	addwfc	(btemp+11)^0,w,c
  7626  017E1C  6EDA               	movwf	fsr2h,c
  7627  017E1E  0E00               	movlw	0
  7628  017E20  6EDF               	movwf	indf2,c
  7629  017E22                     l10863:
  7630                           
  7631                           ;eadog.c: 205:  DMA1CON0bits.EN = 0;
  7632  017E22  013B               	movlb	59	; () banked
  7633  017E24  9FFC               	bcf	252,7,b	;volatile
  7634                           
  7635                           ; BSR set to: 59
  7636                           ;eadog.c: 206:  DMA1SSZ = strlen(strPtr);
  7637                           ;stkvar	_strPtr @ sp[(0)+-2]
  7638  017E26  0EFE               	movlw	-2
  7639  017E28  006F FF8F FFE6     	movff	plusw1,postinc1
  7640  017E2E  006F FF8F FFE6     	movff	plusw1,postinc1
  7641  017E34  EC38  F0BF         	call	_strlen	;wreg free
  7642  017E38  0060  F097  FBF7   	movff	btemp,15351	;volatile
  7643  017E3E  0060  F09B  FBF8   	movff	btemp+1,15352	;volatile
  7644                           
  7645                           ;eadog.c: 207:  DMA1CON0bits.EN = 1;
  7646  017E44  013B               	movlb	59	; () banked
  7647  017E46  8FFC               	bsf	252,7,b	;volatile
  7648                           
  7649                           ; BSR set to: 59
  7650                           ;eadog.c: 208:  printf("%s", strPtr);
  7651                           ;stkvar	_strPtr @ sp[(0)+-2]
  7652  017E48  0EFE               	movlw	-2
  7653  017E4A  006F FF8F FFE6     	movff	plusw1,postinc1
  7654  017E50  006F FF8F FFE6     	movff	plusw1,postinc1
  7655  017E56  0EFC               	movlw	low STR_24
  7656  017E58  6EE6               	movwf	postinc1,c
  7657  017E5A  0EFF               	movlw	high STR_24
  7658  017E5C  6EE6               	movwf	postinc1,c
  7659  017E5E  0E04               	movlw	4
  7660  017E60  6EE6               	movwf	postinc1,c
  7661  017E62  EC1E  F0C3         	call	_printf	;wreg free
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;eadog.c: 209:  start_lcd();
  7665  017E66  EC03  F0CB         	call	_start_lcd	;wreg free
  7666                           
  7667                           ; BSR set to: 59
  7668                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7669  017E6A  52E5               	movf	postdec1,f,c
  7670  017E6C  52E5               	movf	postdec1,f,c
  7671  017E6E  0012               	return		;funcret
  7672  017E70                     __end_of_eaDogM_WriteString:
  7673                           	opt callstack 0
  7674                           
  7675 ;; *************** function _wait_lcd_set *****************
  7676 ;; Defined at:
  7677 ;;		line 144 in file "eadog.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1  [STACK] void 
  7684 ;; Registers used:
  7685 ;;		None
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/3D
  7688 ;;		On exit  : 3F/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7695 ;;Total ram usage:        0 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:    7
  7698 ;; This function calls:
  7699 ;;		Nothing
  7700 ;; This function is called by:
  7701 ;;		_eaDogM_WriteString
  7702 ;;		_send_lcd_cmd_dma
  7703 ;; This function uses a reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text35
  7707  019600                     __ptext35:
  7708                           	opt callstack 0
  7709  019600                     _wait_lcd_set:
  7710                           	opt callstack 20
  7711                           
  7712                           ;eadog.c: 146:  spi_link.LCD_DATA = 1;
  7713                           
  7714                           ; BSR set to: 59
  7715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7716                           ;incstack = 0
  7717  019600  0100               	movlb	0	; () banked
  7718  019602  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  7719                           
  7720                           ; BSR set to: 0
  7721                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7722  019604  0012               	return		;funcret
  7723  019606                     __end_of_wait_lcd_set:
  7724                           	opt callstack 0
  7725                           
  7726 ;; *************** function _start_lcd *****************
  7727 ;; Defined at:
  7728 ;;		line 139 in file "eadog.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;		None
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1  [STACK] void 
  7735 ;; Registers used:
  7736 ;;		None
  7737 ;; Tracked objects:
  7738 ;;		On entry : 3F/0
  7739 ;;		On exit  : 3F/3B
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7746 ;;Total ram usage:        0 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    7
  7749 ;; This function calls:
  7750 ;;		Nothing
  7751 ;; This function is called by:
  7752 ;;		_eaDogM_WriteString
  7753 ;;		_send_lcd_cmd_dma
  7754 ;; This function uses a reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text36
  7758  019606                     __ptext36:
  7759                           	opt callstack 0
  7760  019606                     _start_lcd:
  7761                           	opt callstack 20
  7762                           
  7763                           ;eadog.c: 141:  DMA1CON0bits.DMA1SIRQEN = 1;
  7764                           
  7765                           ; BSR set to: 0
  7766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7767                           ;incstack = 0
  7768  019606  013B               	movlb	59	; () banked
  7769  019608  8DFC               	bsf	252,6,b	;volatile
  7770                           
  7771                           ; BSR set to: 59
  7772                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7773  01960A  0012               	return		;funcret
  7774  01960C                     __end_of_start_lcd:
  7775                           	opt callstack 0
  7776                           
  7777 ;; *************** function _ringBufS_flush *****************
  7778 ;; Defined at:
  7779 ;;		line 76 in file "ringbufs.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7782 ;;		 -> ring_buf1(67), 
  7783 ;;  clearBuffer     1  [STACK] const char 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;		None
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  1  [STACK] void 
  7788 ;; Registers used:
  7789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7790 ;; Tracked objects:
  7791 ;;		On entry : 3F/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7799 ;;Total ram usage:        0 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; Hardware stack levels required when called:    8
  7802 ;; This function calls:
  7803 ;;		_memset
  7804 ;; This function is called by:
  7805 ;;		_eaDogM_WriteString
  7806 ;;		_send_lcd_cmd_dma
  7807 ;; This function uses a reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text37
  7811  017FAA                     __ptext37:
  7812                           	opt callstack 0
  7813  017FAA                     _ringBufS_flush:
  7814                           	opt callstack 19
  7815                           
  7816                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7817                           ;stkvar	__this @ sp[(0)+-2]
  7818                           
  7819                           ; BSR set to: 59
  7820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7821                           ;incstack = 0
  7822  017FAA  0EFE               	movlw	-2
  7823  017FAC  006F FF8C  F02F    	movff	plusw1,btemp+10
  7824  017FB2  0EFF               	movlw	-1
  7825  017FB4  006F FF8C  F030    	movff	plusw1,btemp+11
  7826  017FBA  0E42               	movlw	66
  7827  017FBC  242F               	addwf	(btemp+10)^0,w,c
  7828  017FBE  6ED9               	movwf	fsr2l,c
  7829  017FC0  0E00               	movlw	0
  7830  017FC2  2030               	addwfc	(btemp+11)^0,w,c
  7831  017FC4  6EDA               	movwf	fsr2h,c
  7832  017FC6  0E00               	movlw	0
  7833  017FC8  6EDF               	movwf	indf2,c
  7834                           
  7835                           ;ringbufs.c: 79:  _this->head = 0;
  7836                           ;stkvar	__this @ sp[(0)+-2]
  7837  017FCA  0EFE               	movlw	-2
  7838  017FCC  006F FF8C  F02F    	movff	plusw1,btemp+10
  7839  017FD2  0EFF               	movlw	-1
  7840  017FD4  006F FF8C  F030    	movff	plusw1,btemp+11
  7841  017FDA  0E40               	movlw	64
  7842  017FDC  242F               	addwf	(btemp+10)^0,w,c
  7843  017FDE  6ED9               	movwf	fsr2l,c
  7844  017FE0  0E00               	movlw	0
  7845  017FE2  2030               	addwfc	(btemp+11)^0,w,c
  7846  017FE4  6EDA               	movwf	fsr2h,c
  7847  017FE6  0E00               	movlw	0
  7848  017FE8  6EDF               	movwf	indf2,c
  7849                           
  7850                           ;ringbufs.c: 80:  _this->tail = 0;
  7851                           ;stkvar	__this @ sp[(0)+-2]
  7852  017FEA  0EFE               	movlw	-2
  7853  017FEC  006F FF8C  F02F    	movff	plusw1,btemp+10
  7854  017FF2  0EFF               	movlw	-1
  7855  017FF4  006F FF8C  F030    	movff	plusw1,btemp+11
  7856  017FFA  0E41               	movlw	65
  7857  017FFC  242F               	addwf	(btemp+10)^0,w,c
  7858  017FFE  6ED9               	movwf	fsr2l,c
  7859  018000  0E00               	movlw	0
  7860  018002  2030               	addwfc	(btemp+11)^0,w,c
  7861  018004  6EDA               	movwf	fsr2h,c
  7862  018006  0E00               	movlw	0
  7863  018008  6EDF               	movwf	indf2,c
  7864                           
  7865                           ;ringbufs.c: 81:  if (clearBuffer) {
  7866                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7867  01800A  0EFD               	movlw	-3
  7868  01800C  50E3               	movf	plusw1,w,c
  7869  01800E  B4D8               	btfsc	status,2,c
  7870  018010  D011               	goto	l1584
  7871                           
  7872                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7873  018012  0E40               	movlw	64
  7874  018014  6EE6               	movwf	postinc1,c
  7875  018016  0E00               	movlw	0
  7876  018018  6EE6               	movwf	postinc1,c
  7877  01801A  0E00               	movlw	0
  7878  01801C  6EE6               	movwf	postinc1,c
  7879  01801E  0E00               	movlw	0
  7880  018020  6EE6               	movwf	postinc1,c
  7881                           
  7882                           ;stkvar	__this @ sp[(-4)+-2]
  7883  018022  0EFA               	movlw	-6
  7884  018024  006F FF8F FFE6     	movff	plusw1,postinc1
  7885  01802A  006F FF8F FFE6     	movff	plusw1,postinc1
  7886  018030  EC16  F0A8         	call	_memset	;wreg free
  7887  018034                     l1584:
  7888                           
  7889                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7890  018034  52E5               	movf	postdec1,f,c
  7891  018036  52E5               	movf	postdec1,f,c
  7892  018038  52E5               	movf	postdec1,f,c
  7893  01803A  0012               	return		;funcret
  7894  01803C                     __end_of_ringBufS_flush:
  7895                           	opt callstack 0
  7896                           
  7897 ;; *************** function _memset *****************
  7898 ;; Defined at:
  7899 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  dest            2  [STACK] PTR void 
  7902 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7903 ;;  c               2  [STACK] int 
  7904 ;;  n               2  [STACK] unsigned int 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  s               2  [STACK] PTR unsigned char 
  7907 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7908 ;;  k               2  [STACK] unsigned int 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  2  [STACK] PTR void 
  7911 ;; Registers used:
  7912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7922 ;;Total ram usage:        0 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    7
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_ringBufS_init
  7929 ;;		_ringBufS_flush
  7930 ;; This function uses a reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text38
  7934  01502C                     __ptext38:
  7935                           	opt callstack 0
  7936  01502C                     _memset:
  7937                           	opt callstack 0
  7938                           
  7939                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7940  01502C  52E6               	movf	postinc1,f,c
  7941  01502E  52E6               	movf	postinc1,f,c
  7942  015030  52E6               	movf	postinc1,f,c
  7943  015032  52E6               	movf	postinc1,f,c
  7944                           
  7945                           ;stkvar	_dest @ sp[(-4)+-2]
  7946                           
  7947                           ;incstack = 0
  7948  015034  0EFA               	movlw	-6
  7949  015036  006F FF8C  F02F    	movff	plusw1,btemp+10
  7950  01503C  0EFB               	movlw	-5
  7951  01503E  006F FF8C  F030    	movff	plusw1,btemp+11
  7952                           
  7953                           ;stkvar	_s @ sp[(-4)+0]
  7954  015044  0EFD               	movlw	-3
  7955  015046  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  7956  01504C  0EFC               	movlw	-4
  7957  01504E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  7958                           
  7959                           ;stkvar	_n @ sp[(-4)+-6]
  7960  015054  0EF6               	movlw	-10
  7961  015056  006F FF8C  F025    	movff	plusw1,btemp
  7962  01505C  0EF7               	movlw	-9
  7963  01505E  50E3               	movf	plusw1,w,c
  7964  015060  1025               	iorwf	btemp^0,w,c
  7965  015062  B4D8               	btfsc	status,2,c
  7966  015064  D154               	goto	u10650
  7967                           
  7968                           ;stkvar	_c @ sp[(-4)+-4]
  7969                           ;stkvar	_s @ sp[(-4)+0]
  7970  015066  0EFC               	movlw	-4
  7971  015068  006F FF8F FFD9     	movff	plusw1,fsr2l
  7972  01506E  0EFD               	movlw	-3
  7973  015070  006F FF8F FFDA     	movff	plusw1,fsr2h
  7974  015076  0EF8               	movlw	-8
  7975  015078  006F FF8F FFDF     	movff	plusw1,indf2
  7976                           
  7977                           ;stkvar	_c @ sp[(-4)+-4]
  7978                           ;stkvar	_n @ sp[(-4)+-6]
  7979                           ;stkvar	_s @ sp[(-4)+0]
  7980  01507E  0EFC               	movlw	-4
  7981  015080  006F FF8C  F02F    	movff	plusw1,btemp+10
  7982  015086  0EFD               	movlw	-3
  7983  015088  006F FF8C  F030    	movff	plusw1,btemp+11
  7984  01508E  0EF6               	movlw	-10
  7985  015090  50E3               	movf	plusw1,w,c
  7986  015092  262F               	addwf	(btemp+10)^0,f,c
  7987  015094  0EF7               	movlw	-9
  7988  015096  50E3               	movf	plusw1,w,c
  7989  015098  2230               	addwfc	(btemp+11)^0,f,c
  7990  01509A  0EFF               	movlw	255
  7991  01509C  242F               	addwf	(btemp+10)^0,w,c
  7992  01509E  6ED9               	movwf	fsr2l,c
  7993  0150A0  0EFF               	movlw	255
  7994  0150A2  2030               	addwfc	(btemp+11)^0,w,c
  7995  0150A4  6EDA               	movwf	fsr2h,c
  7996  0150A6  0EF8               	movlw	-8
  7997  0150A8  006F FF8F FFDF     	movff	plusw1,indf2
  7998                           
  7999                           ;stkvar	_n @ sp[(-4)+-6]
  8000  0150AE  0EF7               	movlw	-9
  8001  0150B0  50E3               	movf	plusw1,w,c
  8002  0150B2  E108               	bnz	l10779
  8003  0150B4  0EF6               	movlw	-10
  8004  0150B6  006F FF8C  F025    	movff	plusw1,btemp
  8005  0150BC  0E03               	movlw	3
  8006  0150BE  5E25               	subwf	btemp^0,f,c
  8007  0150C0  A0D8               	btfss	status,0,c
  8008  0150C2  D125               	goto	u10650
  8009  0150C4                     l10779:
  8010                           
  8011                           ;stkvar	_c @ sp[(-4)+-4]
  8012                           ;stkvar	_s @ sp[(-4)+0]
  8013  0150C4  0EFC               	movlw	-4
  8014  0150C6  006F FF8C  F02F    	movff	plusw1,btemp+10
  8015  0150CC  0EFD               	movlw	-3
  8016  0150CE  006F FF8C  F030    	movff	plusw1,btemp+11
  8017  0150D4  0E01               	movlw	1
  8018  0150D6  242F               	addwf	(btemp+10)^0,w,c
  8019  0150D8  6ED9               	movwf	fsr2l,c
  8020  0150DA  0E00               	movlw	0
  8021  0150DC  2030               	addwfc	(btemp+11)^0,w,c
  8022  0150DE  6EDA               	movwf	fsr2h,c
  8023  0150E0  0EF8               	movlw	-8
  8024  0150E2  006F FF8F FFDF     	movff	plusw1,indf2
  8025                           
  8026                           ;stkvar	_c @ sp[(-4)+-4]
  8027                           ;stkvar	_s @ sp[(-4)+0]
  8028  0150E8  0EFC               	movlw	-4
  8029  0150EA  006F FF8C  F02F    	movff	plusw1,btemp+10
  8030  0150F0  0EFD               	movlw	-3
  8031  0150F2  006F FF8C  F030    	movff	plusw1,btemp+11
  8032  0150F8  0E02               	movlw	2
  8033  0150FA  242F               	addwf	(btemp+10)^0,w,c
  8034  0150FC  6ED9               	movwf	fsr2l,c
  8035  0150FE  0E00               	movlw	0
  8036  015100  2030               	addwfc	(btemp+11)^0,w,c
  8037  015102  6EDA               	movwf	fsr2h,c
  8038  015104  0EF8               	movlw	-8
  8039  015106  006F FF8F FFDF     	movff	plusw1,indf2
  8040                           
  8041                           ;stkvar	_c @ sp[(-4)+-4]
  8042                           ;stkvar	_n @ sp[(-4)+-6]
  8043                           ;stkvar	_s @ sp[(-4)+0]
  8044  01510C  0EFC               	movlw	-4
  8045  01510E  006F FF8C  F02F    	movff	plusw1,btemp+10
  8046  015114  0EFD               	movlw	-3
  8047  015116  006F FF8C  F030    	movff	plusw1,btemp+11
  8048  01511C  0EF6               	movlw	-10
  8049  01511E  50E3               	movf	plusw1,w,c
  8050  015120  262F               	addwf	(btemp+10)^0,f,c
  8051  015122  0EF7               	movlw	-9
  8052  015124  50E3               	movf	plusw1,w,c
  8053  015126  2230               	addwfc	(btemp+11)^0,f,c
  8054  015128  0EFE               	movlw	254
  8055  01512A  242F               	addwf	(btemp+10)^0,w,c
  8056  01512C  6ED9               	movwf	fsr2l,c
  8057  01512E  0EFF               	movlw	255
  8058  015130  2030               	addwfc	(btemp+11)^0,w,c
  8059  015132  6EDA               	movwf	fsr2h,c
  8060  015134  0EF8               	movlw	-8
  8061  015136  006F FF8F FFDF     	movff	plusw1,indf2
  8062                           
  8063                           ;stkvar	_c @ sp[(-4)+-4]
  8064                           ;stkvar	_n @ sp[(-4)+-6]
  8065                           ;stkvar	_s @ sp[(-4)+0]
  8066  01513C  0EFC               	movlw	-4
  8067  01513E  006F FF8C  F02F    	movff	plusw1,btemp+10
  8068  015144  0EFD               	movlw	-3
  8069  015146  006F FF8C  F030    	movff	plusw1,btemp+11
  8070  01514C  0EF6               	movlw	-10
  8071  01514E  50E3               	movf	plusw1,w,c
  8072  015150  262F               	addwf	(btemp+10)^0,f,c
  8073  015152  0EF7               	movlw	-9
  8074  015154  50E3               	movf	plusw1,w,c
  8075  015156  2230               	addwfc	(btemp+11)^0,f,c
  8076  015158  0EFD               	movlw	253
  8077  01515A  242F               	addwf	(btemp+10)^0,w,c
  8078  01515C  6ED9               	movwf	fsr2l,c
  8079  01515E  0EFF               	movlw	255
  8080  015160  2030               	addwfc	(btemp+11)^0,w,c
  8081  015162  6EDA               	movwf	fsr2h,c
  8082  015164  0EF8               	movlw	-8
  8083  015166  006F FF8F FFDF     	movff	plusw1,indf2
  8084                           
  8085                           ;stkvar	_n @ sp[(-4)+-6]
  8086  01516C  0EF7               	movlw	-9
  8087  01516E  50E3               	movf	plusw1,w,c
  8088  015170  E108               	bnz	l10785
  8089  015172  0EF6               	movlw	-10
  8090  015174  006F FF8C  F025    	movff	plusw1,btemp
  8091  01517A  0E07               	movlw	7
  8092  01517C  5E25               	subwf	btemp^0,f,c
  8093  01517E  A0D8               	btfss	status,0,c
  8094  015180  D0C6               	goto	u10650
  8095  015182                     l10785:
  8096                           
  8097                           ;stkvar	_c @ sp[(-4)+-4]
  8098                           ;stkvar	_s @ sp[(-4)+0]
  8099  015182  0EFC               	movlw	-4
  8100  015184  006F FF8C  F02F    	movff	plusw1,btemp+10
  8101  01518A  0EFD               	movlw	-3
  8102  01518C  006F FF8C  F030    	movff	plusw1,btemp+11
  8103  015192  0E03               	movlw	3
  8104  015194  242F               	addwf	(btemp+10)^0,w,c
  8105  015196  6ED9               	movwf	fsr2l,c
  8106  015198  0E00               	movlw	0
  8107  01519A  2030               	addwfc	(btemp+11)^0,w,c
  8108  01519C  6EDA               	movwf	fsr2h,c
  8109  01519E  0EF8               	movlw	-8
  8110  0151A0  006F FF8F FFDF     	movff	plusw1,indf2
  8111                           
  8112                           ;stkvar	_c @ sp[(-4)+-4]
  8113                           ;stkvar	_n @ sp[(-4)+-6]
  8114                           ;stkvar	_s @ sp[(-4)+0]
  8115  0151A6  0EFC               	movlw	-4
  8116  0151A8  006F FF8C  F02F    	movff	plusw1,btemp+10
  8117  0151AE  0EFD               	movlw	-3
  8118  0151B0  006F FF8C  F030    	movff	plusw1,btemp+11
  8119  0151B6  0EF6               	movlw	-10
  8120  0151B8  50E3               	movf	plusw1,w,c
  8121  0151BA  262F               	addwf	(btemp+10)^0,f,c
  8122  0151BC  0EF7               	movlw	-9
  8123  0151BE  50E3               	movf	plusw1,w,c
  8124  0151C0  2230               	addwfc	(btemp+11)^0,f,c
  8125  0151C2  0EFC               	movlw	252
  8126  0151C4  242F               	addwf	(btemp+10)^0,w,c
  8127  0151C6  6ED9               	movwf	fsr2l,c
  8128  0151C8  0EFF               	movlw	255
  8129  0151CA  2030               	addwfc	(btemp+11)^0,w,c
  8130  0151CC  6EDA               	movwf	fsr2h,c
  8131  0151CE  0EF8               	movlw	-8
  8132  0151D0  006F FF8F FFDF     	movff	plusw1,indf2
  8133                           
  8134                           ;stkvar	_n @ sp[(-4)+-6]
  8135  0151D6  0EF7               	movlw	-9
  8136  0151D8  50E3               	movf	plusw1,w,c
  8137  0151DA  E108               	bnz	l10791
  8138  0151DC  0EF6               	movlw	-10
  8139  0151DE  006F FF8C  F025    	movff	plusw1,btemp
  8140  0151E4  0E09               	movlw	9
  8141  0151E6  5E25               	subwf	btemp^0,f,c
  8142  0151E8  A0D8               	btfss	status,0,c
  8143  0151EA  D091               	goto	u10650
  8144  0151EC                     l10791:
  8145                           
  8146                           ;stkvar	_s @ sp[(-4)+0]
  8147  0151EC  0EFC               	movlw	-4
  8148  0151EE  006F FF8C  F02F    	movff	plusw1,btemp+10
  8149  0151F4  1E2F               	comf	(btemp+10)^0,f,c
  8150  0151F6  0EFD               	movlw	-3
  8151  0151F8  006F FF8C  F030    	movff	plusw1,btemp+11
  8152  0151FE  1E30               	comf	(btemp+11)^0,f,c
  8153  015200  2A2F               	incf	(btemp+10)^0,f,c
  8154  015202  B4D8               	btfsc	status,2,c
  8155  015204  2A30               	incf	(btemp+11)^0,f,c
  8156  015206  0E03               	movlw	3
  8157  015208  162F               	andwf	(btemp+10)^0,f,c
  8158  01520A  0E00               	movlw	0
  8159  01520C  1630               	andwf	(btemp+11)^0,f,c
  8160                           
  8161                           ;stkvar	_k @ sp[(-4)+2]
  8162  01520E  0EFE               	movlw	-2
  8163  015210  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8164  015216  0EFF               	movlw	-1
  8165  015218  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8166                           
  8167                           ;stkvar	_k @ sp[(-4)+2]
  8168                           ;stkvar	_s @ sp[(-4)+0]
  8169  01521E  0EFC               	movlw	-4
  8170  015220  50E3               	movf	plusw1,w,c
  8171  015222  6E25               	movwf	btemp^0,c
  8172  015224  0EFE               	movlw	-2
  8173  015226  50E3               	movf	plusw1,w,c
  8174  015228  2625               	addwf	btemp^0,f,c
  8175  01522A  0EFC               	movlw	-4
  8176  01522C  0060  F097  FFE3   	movff	btemp,plusw1
  8177  015232  0EFD               	movlw	-3
  8178  015234  50E3               	movf	plusw1,w,c
  8179  015236  6E25               	movwf	btemp^0,c
  8180  015238  0EFF               	movlw	-1
  8181  01523A  50E3               	movf	plusw1,w,c
  8182  01523C  2225               	addwfc	btemp^0,f,c
  8183  01523E  0EFD               	movlw	-3
  8184  015240  0060  F097  FFE3   	movff	btemp,plusw1
  8185                           
  8186                           ;stkvar	_k @ sp[(-4)+2]
  8187                           ;stkvar	_n @ sp[(-4)+-6]
  8188  015246  0EF6               	movlw	-10
  8189  015248  50E3               	movf	plusw1,w,c
  8190  01524A  6E25               	movwf	btemp^0,c
  8191  01524C  0EFE               	movlw	-2
  8192  01524E  50E3               	movf	plusw1,w,c
  8193  015250  5E25               	subwf	btemp^0,f,c
  8194  015252  0EF6               	movlw	-10
  8195  015254  0060  F097  FFE3   	movff	btemp,plusw1
  8196  01525A  0EF7               	movlw	-9
  8197  01525C  50E3               	movf	plusw1,w,c
  8198  01525E  6E25               	movwf	btemp^0,c
  8199  015260  0EFF               	movlw	-1
  8200  015262  50E3               	movf	plusw1,w,c
  8201  015264  5A25               	subwfb	btemp^0,f,c
  8202  015266  0EF7               	movlw	-9
  8203  015268  0060  F097  FFE3   	movff	btemp,plusw1
  8204  01526E  0EFC               	movlw	252
  8205  015270  6E2F               	movwf	(btemp+10)^0,c
  8206  015272  0EFF               	movlw	255
  8207  015274  6E30               	movwf	(btemp+11)^0,c
  8208                           
  8209                           ;stkvar	_n @ sp[(-4)+-6]
  8210  015276  0EF6               	movlw	-10
  8211  015278  006F FF8C  F025    	movff	plusw1,btemp
  8212  01527E  502F               	movf	(btemp+10)^0,w,c
  8213  015280  1625               	andwf	btemp^0,f,c
  8214  015282  0EF6               	movlw	-10
  8215  015284  0060  F097  FFE3   	movff	btemp,plusw1
  8216  01528A  0EF7               	movlw	-9
  8217  01528C  006F FF8C  F025    	movff	plusw1,btemp
  8218  015292  5030               	movf	(btemp+11)^0,w,c
  8219  015294  1625               	andwf	btemp^0,f,c
  8220  015296  0EF7               	movlw	-9
  8221  015298  D02E               	goto	L6
  8222  01529A                     l10799:
  8223                           
  8224                           ;stkvar	_c @ sp[(-4)+-4]
  8225                           ;stkvar	_s @ sp[(-4)+0]
  8226  01529A  0EFC               	movlw	-4
  8227  01529C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8228  0152A2  0EFD               	movlw	-3
  8229  0152A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8230  0152AA  0EF8               	movlw	-8
  8231  0152AC  006F FF8F FFDF     	movff	plusw1,indf2
  8232                           
  8233                           ;stkvar	_n @ sp[(-4)+-6]
  8234  0152B2  0EF6               	movlw	-10
  8235  0152B4  006F FF8C  F025    	movff	plusw1,btemp
  8236  0152BA  0E01               	movlw	1
  8237  0152BC  5E25               	subwf	btemp^0,f,c
  8238  0152BE  0EF6               	movlw	-10
  8239  0152C0  0060  F097  FFE3   	movff	btemp,plusw1
  8240  0152C6  0EF7               	movlw	-9
  8241  0152C8  006F FF8C  F025    	movff	plusw1,btemp
  8242  0152CE  0E00               	movlw	0
  8243  0152D0  5A25               	subwfb	btemp^0,f,c
  8244  0152D2  0EF7               	movlw	-9
  8245  0152D4  0060  F097  FFE3   	movff	btemp,plusw1
  8246                           
  8247                           ;stkvar	_s @ sp[(-4)+0]
  8248  0152DA  0EFC               	movlw	-4
  8249  0152DC  50E3               	movf	plusw1,w,c
  8250  0152DE  0F01               	addlw	1
  8251  0152E0  6E25               	movwf	btemp^0,c
  8252  0152E2  0EFC               	movlw	-4
  8253  0152E4  0060  F097  FFE3   	movff	btemp,plusw1
  8254  0152EA  6A25               	clrf	btemp^0,c
  8255  0152EC  0EFD               	movlw	-3
  8256  0152EE  50E3               	movf	plusw1,w,c
  8257  0152F0  2025               	addwfc	btemp^0,w,c
  8258  0152F2  6E25               	movwf	btemp^0,c
  8259  0152F4  0EFD               	movlw	-3
  8260  0152F6                     L6:
  8261  0152F6  0060  F097  FFE3   	movff	btemp,plusw1
  8262                           
  8263                           ;stkvar	_n @ sp[(-4)+-6]
  8264  0152FC  0EF6               	movlw	-10
  8265  0152FE  006F FF8C  F025    	movff	plusw1,btemp
  8266  015304  0EF7               	movlw	-9
  8267  015306  50E3               	movf	plusw1,w,c
  8268  015308  1025               	iorwf	btemp^0,w,c
  8269  01530A  A4D8               	btfss	status,2,c
  8270  01530C  D7C6               	goto	l10799
  8271  01530E                     u10650:
  8272                           
  8273                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8274  01530E  0EF6               	movlw	246
  8275  015310  26E1               	addwf	fsr1l,f,c
  8276  015312  0EFF               	movlw	255
  8277  015314  22E2               	addwfc	fsr1h,f,c
  8278  015316  0012               	return		;funcret
  8279  015318                     __end_of_memset:
  8280                           	opt callstack 0
  8281                           
  8282 ;; *************** function _printf *****************
  8283 ;; Defined at:
  8284 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  fmt             2  [STACK] PTR const unsigned char 
  8287 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  ap              2  [STACK] PTR void [1]
  8290 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8291 ;;  ret             2    0        int 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  2  [STACK] int 
  8294 ;; Registers used:
  8295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8296 ;; Tracked objects:
  8297 ;;		On entry : 3F/3B
  8298 ;;		On exit  : 3F/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8305 ;;Total ram usage:        0 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:   15
  8308 ;; This function calls:
  8309 ;;		_vfprintf
  8310 ;; This function is called by:
  8311 ;;		_eaDogM_WriteString
  8312 ;;		_send_lcd_cmd_dma
  8313 ;; This function uses a reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text39
  8317  01863C                     __ptext39:
  8318                           	opt callstack 0
  8319  01863C                     _printf:
  8320                           	opt callstack 0
  8321                           
  8322                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8323  01863C  52E6               	movf	postinc1,f,c
  8324  01863E  52E6               	movf	postinc1,f,c
  8325                           
  8326                           ;stkvar	?_printf @ sp[(-2)+-3]
  8327                           
  8328                           ;incstack = 0
  8329  018640  0EFB               	movlw	251
  8330  018642  24E1               	addwf	fsr1l,w,c
  8331  018644  6E2F               	movwf	(btemp+10)^0,c
  8332  018646  0EFF               	movlw	255
  8333  018648  20E2               	addwfc	fsr1h,w,c
  8334  01864A  6E30               	movwf	(btemp+11)^0,c
  8335                           
  8336                           ;stkvar	_ap @ sp[(-2)+0]
  8337  01864C  0EFF               	movlw	-1
  8338  01864E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8339  018654  0EFE               	movlw	-2
  8340  018656  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8341                           
  8342                           ;stkvar	_ap @ sp[(-2)+0]
  8343  01865C  0EFE               	movlw	254
  8344  01865E  24E1               	addwf	fsr1l,w,c
  8345  018660  6E25               	movwf	btemp^0,c
  8346  018662  0EFF               	movlw	255
  8347  018664  20E2               	addwfc	fsr1h,w,c
  8348  018666  6E26               	movwf	(btemp+1)^0,c
  8349  018668  0060  F097  FFE6   	movff	btemp,postinc1
  8350  01866E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8351                           
  8352                           ;stkvar	_fmt @ sp[(-4)+-3]
  8353  018674  0EF9               	movlw	-7
  8354  018676  006F FF8F FFE6     	movff	plusw1,postinc1
  8355  01867C  006F FF8F FFE6     	movff	plusw1,postinc1
  8356  018682  0E00               	movlw	0
  8357  018684  6EE6               	movwf	postinc1,c
  8358  018686  0E00               	movlw	0
  8359  018688  6EE6               	movwf	postinc1,c
  8360  01868A  EC3A  F0BE         	call	_vfprintf	;wreg free
  8361                           
  8362                           ; BSR set to: 0
  8363                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8364  01868E  52E5               	movf	postdec1,f,c
  8365  018690  52E5               	movf	postdec1,f,c
  8366  018692  52E5               	movf	postdec1,f,c
  8367  018694  50E7               	movf	indf1,w,c
  8368  018696  5EE1               	subwf	fsr1l,f,c
  8369  018698  0E00               	movlw	0
  8370  01869A  5AE2               	subwfb	fsr1h,f,c
  8371  01869C  0012               	return		;funcret
  8372  01869E                     __end_of_printf:
  8373                           	opt callstack 0
  8374                           
  8375 ;; *************** function _vfprintf *****************
  8376 ;; Defined at:
  8377 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8380 ;;		 -> f(6), NULL(0), 
  8381 ;;  fmt             2  [STACK] PTR const unsigned char 
  8382 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8383 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8384 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8385 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8386 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8387 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8388 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8389 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8390 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8391 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8392 ;;  ap              2  [STACK] PTR PTR void 
  8393 ;;		 -> ap(2), ap(2), 
  8394 ;; Auto vars:     Size  Location     Type
  8395 ;;  cfmt            2  [STACK] PTR unsigned char 
  8396 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8397 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8398 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8399 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8400 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8401 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8402 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8403 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8404 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8405 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  2  [STACK] int 
  8408 ;; Registers used:
  8409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/1
  8412 ;;		On exit  : 3F/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8419 ;;Total ram usage:        0 bytes
  8420 ;; Hardware stack levels used:    1
  8421 ;; Hardware stack levels required when called:   14
  8422 ;; This function calls:
  8423 ;;		_vfpfcnvrt
  8424 ;; This function is called by:
  8425 ;;		_sprintf
  8426 ;;		_printf
  8427 ;; This function uses a reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text40
  8431  017C74                     __ptext40:
  8432                           	opt callstack 0
  8433  017C74                     _vfprintf:
  8434                           	opt callstack 0
  8435                           
  8436                           ; BSR set to: 0
  8437                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8438  017C74  52E6               	movf	postinc1,f,c
  8439  017C76  52E6               	movf	postinc1,f,c
  8440                           
  8441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8442                           ;stkvar	_fmt @ sp[(-2)+-4]
  8443                           
  8444                           ;incstack = 0
  8445  017C78  0EFA               	movlw	-6
  8446  017C7A  006F FF8C  F02F    	movff	plusw1,btemp+10
  8447  017C80  0EFB               	movlw	-5
  8448  017C82  006F FF8C  F030    	movff	plusw1,btemp+11
  8449                           
  8450                           ;stkvar	_cfmt @ sp[(-2)+0]
  8451  017C88  0EFF               	movlw	-1
  8452  017C8A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8453  017C90  0EFE               	movlw	-2
  8454  017C92  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8455                           
  8456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8457  017C98  0100               	movlb	0	; () banked
  8458  017C9A  6BC1               	clrf	_nout& (0+255),b
  8459  017C9C  6BC2               	clrf	(_nout+1)& (0+255),b
  8460                           
  8461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8462  017C9E  D021               	goto	l10813
  8463  017CA0                     l10811:
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8467                           ;stkvar	_ap @ sp[(-2)+-6]
  8468  017CA0  0EF8               	movlw	-8
  8469  017CA2  006F FF8F FFE6     	movff	plusw1,postinc1
  8470  017CA8  006F FF8F FFE6     	movff	plusw1,postinc1
  8471                           
  8472                           ;stkvar	_cfmt @ sp[(-4)+0]
  8473  017CAE  0EFC               	movlw	252
  8474  017CB0  24E1               	addwf	fsr1l,w,c
  8475  017CB2  6E25               	movwf	btemp^0,c
  8476  017CB4  0EFF               	movlw	255
  8477  017CB6  20E2               	addwfc	fsr1h,w,c
  8478  017CB8  6E26               	movwf	(btemp+1)^0,c
  8479  017CBA  0060  F097  FFE6   	movff	btemp,postinc1
  8480  017CC0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8481                           
  8482                           ;stkvar	_fp @ sp[(-6)+-2]
  8483  017CC6  0EF8               	movlw	-8
  8484  017CC8  006F FF8F FFE6     	movff	plusw1,postinc1
  8485  017CCE  006F FF8F FFE6     	movff	plusw1,postinc1
  8486  017CD4  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8487  017CD8  5025               	movf	btemp^0,w,c
  8488  017CDA  0100               	movlb	0	; () banked
  8489  017CDC  27C1               	addwf	_nout& (0+255),f,b
  8490  017CDE  5026               	movf	(btemp+1)^0,w,c
  8491  017CE0  23C2               	addwfc	(_nout+1)& (0+255),f,b
  8492  017CE2                     l10813:
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8496                           ;stkvar	_cfmt @ sp[(-2)+0]
  8497  017CE2  50E1               	movf	fsr1l,w,c
  8498  017CE4  0FFE               	addlw	-2
  8499  017CE6  6ED9               	movwf	fsr2l,c
  8500  017CE8  50E2               	movf	fsr1h,w,c
  8501  017CEA  6EDA               	movwf	fsr2h,c
  8502  017CEC  0EFF               	movlw	255
  8503  017CEE  22DA               	addwfc	fsr2h,f,c
  8504  017CF0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8505  017CF6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8506  017CFC                     	if	0	;tblptru may be non-zero
  8507  017CFC                     	endif
  8508  017CFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8509  017CFC  0E00               	movlw	low (__mediumconst shr (0+16))
  8510  017CFE  6EF8               	movwf	tblptru,c
  8511  017D00                     	endif
  8512  017D00  0008               	tblrd		*
  8513  017D02  50F5               	movf	tablat,w,c
  8514  017D04  0900               	iorlw	0
  8515  017D06  A4D8               	btfss	status,2,c
  8516  017D08  D7CB               	goto	l10811
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8520  017D0A  0060  F304  F025   	movff	_nout,btemp
  8521  017D10  0060  F308  F026   	movff	_nout+1,btemp+1
  8522                           
  8523                           ; BSR set to: 0
  8524                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8525  017D16  0EF8               	movlw	248
  8526  017D18  26E1               	addwf	fsr1l,f,c
  8527  017D1A  0EFF               	movlw	255
  8528  017D1C  22E2               	addwfc	fsr1h,f,c
  8529  017D1E  0012               	return		;funcret
  8530  017D20                     __end_of_vfprintf:
  8531                           	opt callstack 0
  8532                           
  8533 ;; *************** function _vfpfcnvrt *****************
  8534 ;; Defined at:
  8535 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8538 ;;		 -> f(6), NULL(0), 
  8539 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8540 ;;		 -> cfmt(2), 
  8541 ;;  ap              2  [STACK] PTR PTR void 
  8542 ;;		 -> ap(2), ap(2), 
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;  llu             8  [STACK] unsigned long long 
  8545 ;;  ll              8  [STACK] long long 
  8546 ;;  f               4  [STACK] long long 
  8547 ;;  ct              3  [STACK] unsigned char [3]
  8548 ;;  vp              3    0        PTR void 
  8549 ;;  cp              2  [STACK] PTR unsigned char 
  8550 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8551 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8552 ;;		 -> STR_3(6), V(188), 
  8553 ;;  i               2    0        int 
  8554 ;;  done            2    0        int 
  8555 ;;  c               1  [STACK] unsigned char 
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  2  [STACK] int 
  8558 ;; Registers used:
  8559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:   13
  8572 ;; This function calls:
  8573 ;;		_atoi
  8574 ;;		_ctoa
  8575 ;;		_dtoa
  8576 ;;		_efgtoa
  8577 ;;		_fputc
  8578 ;;		_isdigit
  8579 ;;		_isupper
  8580 ;;		_stoa
  8581 ;;		_strncmp
  8582 ;;		_tolower
  8583 ;;		_xtoa
  8584 ;; This function is called by:
  8585 ;;		_vfprintf
  8586 ;; This function uses a reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text41
  8590  011244                     __ptext41:
  8591                           	opt callstack 0
  8592  011244                     _vfpfcnvrt:
  8593                           	opt callstack 0
  8594                           
  8595                           ; BSR set to: 0
  8596                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8597  011244  0E20               	movlw	32
  8598  011246  26E1               	addwf	fsr1l,f,c
  8599  011248  0E00               	movlw	0
  8600  01124A  22E2               	addwfc	fsr1h,f,c
  8601                           
  8602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8603                           ;stkvar	_fmt @ sp[(-32)+-4]
  8604                           
  8605                           ;incstack = 0
  8606  01124C  0EDC               	movlw	-36
  8607  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8608  011254  0EDD               	movlw	-35
  8609  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8610  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8611  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8612  011268                     	if	0	;tblptru may be non-zero
  8613  011268                     	endif
  8614  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8615  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8616  01126A  6EF8               	movwf	tblptru,c
  8617  01126C                     	endif
  8618  01126C  0008               	tblrd		*
  8619  01126E  50F5               	movf	tablat,w,c
  8620  011270  0A25               	xorlw	37
  8621  011272  A4D8               	btfss	status,2,c
  8622  011274  EF92  F08E         	goto	l10757
  8623                           
  8624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8625                           ;stkvar	_fmt @ sp[(-32)+-4]
  8626  011278  0EDC               	movlw	-36
  8627  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8628  011280  0EDD               	movlw	-35
  8629  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8630  011288  2ADE               	incf	postinc2,f,c
  8631  01128A  0E00               	movlw	0
  8632  01128C  22DD               	addwfc	postdec2,f,c
  8633                           
  8634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8635  01128E  6A0A               	clrf	_width^0,c
  8636  011290  6A0B               	clrf	(_width+1)^0,c
  8637  011292  6A0E               	clrf	_flags^0,c
  8638  011294  6A0F               	clrf	(_flags+1)^0,c
  8639                           
  8640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8641  011296  680C               	setf	_prec^0,c
  8642  011298  680D               	setf	(_prec+1)^0,c
  8643                           
  8644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8645                           ;stkvar	_fmt @ sp[(-32)+-4]
  8646  01129A  0EDC               	movlw	-36
  8647  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8648  0112A2  0EDD               	movlw	-35
  8649  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8650  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8651  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8652  0112B6                     	if	0	;tblptru may be non-zero
  8653  0112B6                     	endif
  8654  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8655  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8656  0112B8  6EF8               	movwf	tblptru,c
  8657  0112BA                     	endif
  8658  0112BA  0008               	tblrd		*
  8659  0112BC  50F5               	movf	tablat,w,c
  8660  0112BE  0A2A               	xorlw	42
  8661  0112C0  A4D8               	btfss	status,2,c
  8662  0112C2  D031               	goto	l10621
  8663                           
  8664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8665                           ;stkvar	_fmt @ sp[(-32)+-4]
  8666  0112C4  0EDC               	movlw	-36
  8667  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8668  0112CC  0EDD               	movlw	-35
  8669  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8670  0112D4  2ADE               	incf	postinc2,f,c
  8671  0112D6  0E00               	movlw	0
  8672  0112D8  22DD               	addwfc	postdec2,f,c
  8673                           
  8674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8675                           ;stkvar	_ap @ sp[(-32)+-6]
  8676  0112DA  0EDA               	movlw	-38
  8677  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8678  0112E2  0EDB               	movlw	-37
  8679  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8680  0112EA  0E02               	movlw	2
  8681  0112EC  5EDE               	subwf	postinc2,f,c
  8682  0112EE  0E00               	movlw	0
  8683  0112F0  5ADD               	subwfb	postdec2,f,c
  8684  0112F2  006F FF78  F02F    	movff	postinc2,btemp+10
  8685  0112F8  006F FF74  F030    	movff	postdec2,btemp+11
  8686  0112FE  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8687  011304  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8688  01130A  006F FF78  F00A    	movff	postinc2,_width
  8689  011310  006F FF74  F00B    	movff	postdec2,_width+1
  8690                           
  8691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8692  011316  AE0B               	btfss	(_width+1)^0,7,c
  8693  011318  D066               	goto	u10410
  8694                           
  8695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8696  01131A  800E               	bsf	_flags^0,0,c
  8697                           
  8698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8699  01131C  6C0A               	negf	_width^0,c
  8700  01131E  1E0B               	comf	(_width+1)^0,f,c
  8701  011320  B0D8               	btfsc	status,0,c
  8702  011322  2A0B               	incf	(_width+1)^0,f,c
  8703  011324  D060               	goto	u10410
  8704  011326                     l10621:
  8705                           
  8706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8707                           ;stkvar	_fmt @ sp[(-32)+-4]
  8708  011326  0EDC               	movlw	-36
  8709  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8710  01132E  0EDD               	movlw	-35
  8711  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8712  011336  006F FF78  F02F    	movff	postinc2,btemp+10
  8713  01133C  006F FF74  F030    	movff	postdec2,btemp+11
  8714  011342  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8715  011348  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8716  01134E  EC98  F0AD         	call	_atoi	;wreg free
  8717  011352  0060  F094  F00A   	movff	btemp,_width
  8718  011358  0060  F098  F00B   	movff	btemp+1,_width+1
  8719                           
  8720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8721  01135E  D00B               	goto	l10625
  8722  011360                     l10623:
  8723                           
  8724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8725                           ;stkvar	_fmt @ sp[(-32)+-4]
  8726  011360  0EDC               	movlw	-36
  8727  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8728  011368  0EDD               	movlw	-35
  8729  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8730  011370  2ADE               	incf	postinc2,f,c
  8731  011372  0E00               	movlw	0
  8732  011374  22DD               	addwfc	postdec2,f,c
  8733  011376                     l10625:
  8734  011376  0ED0               	movlw	208
  8735  011378  6E2F               	movwf	(btemp+10)^0,c
  8736  01137A  0EFF               	movlw	255
  8737  01137C  6E30               	movwf	(btemp+11)^0,c
  8738                           
  8739                           ;stkvar	_fmt @ sp[(-32)+-4]
  8740  01137E  0EDC               	movlw	-36
  8741  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8742  011386  0EDD               	movlw	-35
  8743  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8744  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8745  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8746  01139A                     	if	0	;tblptru may be non-zero
  8747  01139A                     	endif
  8748  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8749  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8750  01139C  6EF8               	movwf	tblptru,c
  8751  01139E                     	endif
  8752  01139E  0008               	tblrd		*
  8753  0113A0  50F5               	movf	tablat,w,c
  8754  0113A2  6E2D               	movwf	(btemp+8)^0,c
  8755  0113A4  6A2E               	clrf	(btemp+9)^0,c
  8756  0113A6  502F               	movf	(btemp+10)^0,w,c
  8757  0113A8  262D               	addwf	(btemp+8)^0,f,c
  8758  0113AA  5030               	movf	(btemp+11)^0,w,c
  8759  0113AC  222E               	addwfc	(btemp+9)^0,f,c
  8760  0113AE  502E               	movf	(btemp+9)^0,w,c
  8761  0113B0  E106               	bnz	u10390
  8762  0113B2  0E0A               	movlw	10
  8763  0113B4  5C2D               	subwf	(btemp+8)^0,w,c
  8764  0113B6  B0D8               	btfsc	status,0,c
  8765  0113B8  D002               	goto	u10390
  8766  0113BA  0E01               	movlw	1
  8767  0113BC  D001               	goto	u10400
  8768  0113BE                     u10390:
  8769  0113BE  0E00               	movlw	0
  8770  0113C0                     u10400:
  8771  0113C0  6E2F               	movwf	(btemp+10)^0,c
  8772  0113C2  6A30               	clrf	(btemp+11)^0,c
  8773                           
  8774                           ;stkvar	_vfpfcnvrt$5035 @ sp[(-32)+4]
  8775  0113C4  0EE4               	movlw	-28
  8776  0113C6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8777  0113CC  0EE5               	movlw	-27
  8778  0113CE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8779                           
  8780                           ;stkvar	_vfpfcnvrt$5035 @ sp[(-32)+4]
  8781  0113D4  0EE4               	movlw	-28
  8782  0113D6  006F FF8C  F025    	movff	plusw1,btemp
  8783  0113DC  0EE5               	movlw	-27
  8784  0113DE  50E3               	movf	plusw1,w,c
  8785  0113E0  1025               	iorwf	btemp^0,w,c
  8786  0113E2  A4D8               	btfss	status,2,c
  8787  0113E4  D7BD               	goto	l10623
  8788  0113E6                     u10410:
  8789                           
  8790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8791                           ;stkvar	_fmt @ sp[(-32)+-4]
  8792  0113E6  0EDC               	movlw	-36
  8793  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8794  0113EE  0EDD               	movlw	-35
  8795  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8796  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8797  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8798  011402                     	if	0	;tblptru may be non-zero
  8799  011402                     	endif
  8800  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8801  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8802  011404  6EF8               	movwf	tblptru,c
  8803  011406                     	endif
  8804  011406  0008               	tblrd		*
  8805  011408  50F5               	movf	tablat,w,c
  8806  01140A  0A2E               	xorlw	46
  8807  01140C  A4D8               	btfss	status,2,c
  8808  01140E  D0AC               	goto	u10460
  8809                           
  8810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8811  011410  6A0C               	clrf	_prec^0,c
  8812  011412  6A0D               	clrf	(_prec+1)^0,c
  8813                           
  8814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8815                           ;stkvar	_fmt @ sp[(-32)+-4]
  8816  011414  0EDC               	movlw	-36
  8817  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8818  01141C  0EDD               	movlw	-35
  8819  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8820  011424  2ADE               	incf	postinc2,f,c
  8821  011426  0E00               	movlw	0
  8822  011428  22DD               	addwfc	postdec2,f,c
  8823                           
  8824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8825                           ;stkvar	_fmt @ sp[(-32)+-4]
  8826  01142A  0EDC               	movlw	-36
  8827  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8828  011432  0EDD               	movlw	-35
  8829  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8830  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8831  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8832  011446                     	if	0	;tblptru may be non-zero
  8833  011446                     	endif
  8834  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8835  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8836  011448  6EF8               	movwf	tblptru,c
  8837  01144A                     	endif
  8838  01144A  0008               	tblrd		*
  8839  01144C  50F5               	movf	tablat,w,c
  8840  01144E  0A2A               	xorlw	42
  8841  011450  A4D8               	btfss	status,2,c
  8842  011452  D02A               	goto	l10643
  8843                           
  8844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8845                           ;stkvar	_fmt @ sp[(-32)+-4]
  8846  011454  0EDC               	movlw	-36
  8847  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8848  01145C  0EDD               	movlw	-35
  8849  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8850  011464  2ADE               	incf	postinc2,f,c
  8851  011466  0E00               	movlw	0
  8852  011468  22DD               	addwfc	postdec2,f,c
  8853                           
  8854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8855                           ;stkvar	_ap @ sp[(-32)+-6]
  8856  01146A  0EDA               	movlw	-38
  8857  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8858  011472  0EDB               	movlw	-37
  8859  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8860  01147A  0E02               	movlw	2
  8861  01147C  5EDE               	subwf	postinc2,f,c
  8862  01147E  0E00               	movlw	0
  8863  011480  5ADD               	subwfb	postdec2,f,c
  8864  011482  006F FF78  F02F    	movff	postinc2,btemp+10
  8865  011488  006F FF74  F030    	movff	postdec2,btemp+11
  8866  01148E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8867  011494  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8868  01149A  006F FF78  F00C    	movff	postinc2,_prec
  8869  0114A0  006F FF74  F00D    	movff	postdec2,_prec+1
  8870                           
  8871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8872  0114A6  D060               	goto	u10460
  8873  0114A8                     l10643:
  8874                           
  8875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8876                           ;stkvar	_fmt @ sp[(-32)+-4]
  8877  0114A8  0EDC               	movlw	-36
  8878  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8879  0114B0  0EDD               	movlw	-35
  8880  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8881  0114B8  006F FF78  F02F    	movff	postinc2,btemp+10
  8882  0114BE  006F FF74  F030    	movff	postdec2,btemp+11
  8883  0114C4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8884  0114CA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8885  0114D0  EC98  F0AD         	call	_atoi	;wreg free
  8886  0114D4  0060  F094  F00C   	movff	btemp,_prec
  8887  0114DA  0060  F098  F00D   	movff	btemp+1,_prec+1
  8888                           
  8889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8890  0114E0  D00B               	goto	l10647
  8891  0114E2                     l10645:
  8892                           
  8893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8894                           ;stkvar	_fmt @ sp[(-32)+-4]
  8895  0114E2  0EDC               	movlw	-36
  8896  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8897  0114EA  0EDD               	movlw	-35
  8898  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8899  0114F2  2ADE               	incf	postinc2,f,c
  8900  0114F4  0E00               	movlw	0
  8901  0114F6  22DD               	addwfc	postdec2,f,c
  8902  0114F8                     l10647:
  8903  0114F8  0ED0               	movlw	208
  8904  0114FA  6E2F               	movwf	(btemp+10)^0,c
  8905  0114FC  0EFF               	movlw	255
  8906  0114FE  6E30               	movwf	(btemp+11)^0,c
  8907                           
  8908                           ;stkvar	_fmt @ sp[(-32)+-4]
  8909  011500  0EDC               	movlw	-36
  8910  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8911  011508  0EDD               	movlw	-35
  8912  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8913  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8914  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8915  01151C                     	if	0	;tblptru may be non-zero
  8916  01151C                     	endif
  8917  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8918  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8919  01151E  6EF8               	movwf	tblptru,c
  8920  011520                     	endif
  8921  011520  0008               	tblrd		*
  8922  011522  50F5               	movf	tablat,w,c
  8923  011524  6E2D               	movwf	(btemp+8)^0,c
  8924  011526  6A2E               	clrf	(btemp+9)^0,c
  8925  011528  502F               	movf	(btemp+10)^0,w,c
  8926  01152A  262D               	addwf	(btemp+8)^0,f,c
  8927  01152C  5030               	movf	(btemp+11)^0,w,c
  8928  01152E  222E               	addwfc	(btemp+9)^0,f,c
  8929  011530  502E               	movf	(btemp+9)^0,w,c
  8930  011532  E106               	bnz	u10440
  8931  011534  0E0A               	movlw	10
  8932  011536  5C2D               	subwf	(btemp+8)^0,w,c
  8933  011538  B0D8               	btfsc	status,0,c
  8934  01153A  D002               	goto	u10440
  8935  01153C  0E01               	movlw	1
  8936  01153E  D001               	goto	u10450
  8937  011540                     u10440:
  8938  011540  0E00               	movlw	0
  8939  011542                     u10450:
  8940  011542  6E2F               	movwf	(btemp+10)^0,c
  8941  011544  6A30               	clrf	(btemp+11)^0,c
  8942                           
  8943                           ;stkvar	_vfpfcnvrt$5036 @ sp[(-32)+0]
  8944  011546  0EE0               	movlw	-32
  8945  011548  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8946  01154E  0EE1               	movlw	-31
  8947  011550  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8948                           
  8949                           ;stkvar	_vfpfcnvrt$5036 @ sp[(-32)+0]
  8950  011556  0EE0               	movlw	-32
  8951  011558  006F FF8C  F025    	movff	plusw1,btemp
  8952  01155E  0EE1               	movlw	-31
  8953  011560  50E3               	movf	plusw1,w,c
  8954  011562  1025               	iorwf	btemp^0,w,c
  8955  011564  A4D8               	btfss	status,2,c
  8956  011566  D7BD               	goto	l10645
  8957  011568                     u10460:
  8958                           
  8959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8960                           ;stkvar	_fmt @ sp[(-32)+-4]
  8961  011568  0EDC               	movlw	-36
  8962  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8963  011570  0EDD               	movlw	-35
  8964  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8965  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8966  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8967  011584                     	if	0	;tblptru may be non-zero
  8968  011584                     	endif
  8969  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8970  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8971  011586  6EF8               	movwf	tblptru,c
  8972  011588                     	endif
  8973  011588  0008               	tblrd		*
  8974  01158A  50F5               	movf	tablat,w,c
  8975  01158C  6EE6               	movwf	postinc1,c
  8976  01158E  0E00               	movlw	0
  8977  011590  6EE6               	movwf	postinc1,c
  8978  011592  EC35  F0C1         	call	_tolower	;wreg free
  8979                           
  8980                           ;stkvar	_ct @ sp[(-32)+26]
  8981  011596  0EFA               	movlw	-6
  8982  011598  0060  F097  FFE3   	movff	btemp,plusw1
  8983                           
  8984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8985                           ;stkvar	_ct @ sp[(-32)+26]
  8986  01159E  0EFA               	movlw	-6
  8987  0115A0  50E3               	movf	plusw1,w,c
  8988  0115A2  B4D8               	btfsc	status,2,c
  8989  0115A4  D05B               	goto	l10663
  8990                           
  8991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8992                           ;stkvar	_ct @ sp[(-32)+26]
  8993  0115A6  0EFB               	movlw	251
  8994  0115A8  24E1               	addwf	fsr1l,w,c
  8995  0115AA  6ED9               	movwf	fsr2l,c
  8996  0115AC  0EFF               	movlw	255
  8997  0115AE  20E2               	addwfc	fsr1h,w,c
  8998  0115B0  6EDA               	movwf	fsr2h,c
  8999                           
  9000                           ;stkvar	_fmt @ sp[(-32)+-4]
  9001  0115B2  0EDC               	movlw	-36
  9002  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9003  0115BA  0EDD               	movlw	-35
  9004  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9005  0115C2  006F FFB8  F02F    	movff	postinc0,btemp+10
  9006  0115C8  006F FFB4  F030    	movff	postdec0,btemp+11
  9007  0115CE  0E01               	movlw	1
  9008  0115D0  262F               	addwf	(btemp+10)^0,f,c
  9009  0115D2  0E00               	movlw	0
  9010  0115D4  2230               	addwfc	(btemp+11)^0,f,c
  9011  0115D6  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9012  0115DC  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9013  0115E2                     	if	0	;tblptru may be non-zero
  9014  0115E2                     	endif
  9015  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9016  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9017  0115E4  6EF8               	movwf	tblptru,c
  9018  0115E6                     	endif
  9019  0115E6  0008               	tblrd		*
  9020  0115E8  50F5               	movf	tablat,w,c
  9021  0115EA  6EE6               	movwf	postinc1,c
  9022  0115EC  0E00               	movlw	0
  9023  0115EE  6EE6               	movwf	postinc1,c
  9024  0115F0  EC35  F0C1         	call	_tolower	;wreg free
  9025  0115F4  5025               	movf	btemp^0,w,c
  9026  0115F6  6EDF               	movwf	indf2,c
  9027                           
  9028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9029                           ;stkvar	_ct @ sp[(-32)+26]
  9030  0115F8  0EFB               	movlw	251
  9031  0115FA  24E1               	addwf	fsr1l,w,c
  9032  0115FC  6ED9               	movwf	fsr2l,c
  9033  0115FE  0EFF               	movlw	255
  9034  011600  20E2               	addwfc	fsr1h,w,c
  9035  011602  6EDA               	movwf	fsr2h,c
  9036  011604  50DF               	movf	indf2,w,c
  9037  011606  B4D8               	btfsc	status,2,c
  9038  011608  D029               	goto	l10663
  9039                           
  9040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9041                           ;stkvar	_ct @ sp[(-32)+26]
  9042  01160A  0EFC               	movlw	252
  9043  01160C  24E1               	addwf	fsr1l,w,c
  9044  01160E  6ED9               	movwf	fsr2l,c
  9045  011610  0EFF               	movlw	255
  9046  011612  20E2               	addwfc	fsr1h,w,c
  9047  011614  6EDA               	movwf	fsr2h,c
  9048                           
  9049                           ;stkvar	_fmt @ sp[(-32)+-4]
  9050  011616  0EDC               	movlw	-36
  9051  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9052  01161E  0EDD               	movlw	-35
  9053  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9054  011626  006F FFB8  F02F    	movff	postinc0,btemp+10
  9055  01162C  006F FFB4  F030    	movff	postdec0,btemp+11
  9056  011632  0E02               	movlw	2
  9057  011634  262F               	addwf	(btemp+10)^0,f,c
  9058  011636  0E00               	movlw	0
  9059  011638  2230               	addwfc	(btemp+11)^0,f,c
  9060  01163A  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9061  011640  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9062  011646                     	if	0	;tblptru may be non-zero
  9063  011646                     	endif
  9064  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9065  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9066  011648  6EF8               	movwf	tblptru,c
  9067  01164A                     	endif
  9068  01164A  0008               	tblrd		*
  9069  01164C  50F5               	movf	tablat,w,c
  9070  01164E  6EE6               	movwf	postinc1,c
  9071  011650  0E00               	movlw	0
  9072  011652  6EE6               	movwf	postinc1,c
  9073  011654  EC35  F0C1         	call	_tolower	;wreg free
  9074  011658  5025               	movf	btemp^0,w,c
  9075  01165A  6EDF               	movwf	indf2,c
  9076  01165C                     l10663:
  9077                           
  9078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9079                           ;stkvar	_fmt @ sp[(-32)+-4]
  9080  01165C  0EDC               	movlw	-36
  9081  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9082  011664  0EDD               	movlw	-35
  9083  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9084  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9085  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9086  011678                     	if	0	;tblptru may be non-zero
  9087  011678                     	endif
  9088  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9089  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9090  01167A  6EF8               	movwf	tblptru,c
  9091  01167C                     	endif
  9092  01167C  0008               	tblrd		*
  9093  01167E  50F5               	movf	tablat,w,c
  9094  011680  0A63               	xorlw	99
  9095  011682  A4D8               	btfss	status,2,c
  9096  011684  D036               	goto	l10673
  9097                           
  9098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9099                           ;stkvar	_fmt @ sp[(-32)+-4]
  9100  011686  0EDC               	movlw	-36
  9101  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9102  01168E  0EDD               	movlw	-35
  9103  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9104  011696  2ADE               	incf	postinc2,f,c
  9105  011698  0E00               	movlw	0
  9106  01169A  22DD               	addwfc	postdec2,f,c
  9107                           
  9108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9109                           ;stkvar	_ap @ sp[(-32)+-6]
  9110  01169C  0EDA               	movlw	-38
  9111  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9112  0116A4  0EDB               	movlw	-37
  9113  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9114  0116AC  0E02               	movlw	2
  9115  0116AE  5EDE               	subwf	postinc2,f,c
  9116  0116B0  0E00               	movlw	0
  9117  0116B2  5ADD               	subwfb	postdec2,f,c
  9118  0116B4  006F FF78  F02F    	movff	postinc2,btemp+10
  9119  0116BA  006F FF74  F030    	movff	postdec2,btemp+11
  9120  0116C0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9121  0116C6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9122  0116CC  50DF               	movf	indf2,w,c
  9123  0116CE  6E30               	movwf	(btemp+11)^0,c
  9124                           
  9125                           ;stkvar	_c @ sp[(-32)+31]
  9126  0116D0  0EFF               	movlw	-1
  9127  0116D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9128                           
  9129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9130                           ;stkvar	_c @ sp[(-32)+31]
  9131  0116D8  0EFF               	movlw	-1
  9132  0116DA  50E3               	movf	plusw1,w,c
  9133  0116DC  6EE6               	movwf	postinc1,c
  9134                           
  9135                           ;stkvar	_fp @ sp[(-33)+-2]
  9136  0116DE  0EDD               	movlw	-35
  9137  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9138  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9139  0116EC  ECAF  F0C0         	call	_ctoa	;wreg free
  9140  0116F0  D343               	goto	l2199
  9141  0116F2                     l10673:
  9142                           
  9143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9144                           ;stkvar	_fmt @ sp[(-32)+-4]
  9145  0116F2  0EDC               	movlw	-36
  9146  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9147  0116FA  0EDD               	movlw	-35
  9148  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9149  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  9150  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  9151  01170E                     	if	0	;tblptru may be non-zero
  9152  01170E                     	endif
  9153  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9154  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  9155  011710  6EF8               	movwf	tblptru,c
  9156  011712                     	endif
  9157  011712  0008               	tblrd		*
  9158  011714  50F5               	movf	tablat,w,c
  9159  011716  0A64               	xorlw	100
  9160  011718  B4D8               	btfsc	status,2,c
  9161  01171A  D015               	goto	u10510
  9162                           
  9163                           ;stkvar	_fmt @ sp[(-32)+-4]
  9164  01171C  0EDC               	movlw	-36
  9165  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9166  011724  0EDD               	movlw	-35
  9167  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  9168  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9169  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  9170  011738                     	if	0	;tblptru may be non-zero
  9171  011738                     	endif
  9172  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9173  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9174  01173A  6EF8               	movwf	tblptru,c
  9175  01173C                     	endif
  9176  01173C  0008               	tblrd		*
  9177  01173E  50F5               	movf	tablat,w,c
  9178  011740  0A69               	xorlw	105
  9179  011742  A4D8               	btfss	status,2,c
  9180  011744  D075               	goto	l10685
  9181  011746                     u10510:
  9182                           
  9183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9184                           ;stkvar	_fmt @ sp[(-32)+-4]
  9185  011746  0EDC               	movlw	-36
  9186  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9187  01174E  0EDD               	movlw	-35
  9188  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9189  011756  2ADE               	incf	postinc2,f,c
  9190  011758  0E00               	movlw	0
  9191  01175A  22DD               	addwfc	postdec2,f,c
  9192                           
  9193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9194                           ;stkvar	_ap @ sp[(-32)+-6]
  9195  01175C  0EDA               	movlw	-38
  9196  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9197  011764  0EDB               	movlw	-37
  9198  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9199  01176C  0E02               	movlw	2
  9200  01176E  5EDE               	subwf	postinc2,f,c
  9201  011770  0E00               	movlw	0
  9202  011772  5ADD               	subwfb	postdec2,f,c
  9203  011774  006F FF78  F02F    	movff	postinc2,btemp+10
  9204  01177A  006F FF74  F030    	movff	postdec2,btemp+11
  9205  011780  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9206  011786  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9207  01178C  006F FF78  F02F    	movff	postinc2,btemp+10
  9208  011792  006F FF74  F030    	movff	postdec2,btemp+11
  9209                           
  9210                           ;stkvar	_ll @ sp[(-32)+14]
  9211  011798  0EEE               	movlw	-18
  9212  01179A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9213  0117A0  0EEF               	movlw	-17
  9214  0117A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9215  0117A8  6A25               	clrf	btemp^0,c
  9216  0117AA  BEE3               	btfsc	plusw1,7,c
  9217  0117AC  6825               	setf	btemp^0,c
  9218  0117AE  0EF0               	movlw	-16
  9219  0117B0  0060  F097  FFE3   	movff	btemp,plusw1
  9220  0117B6  0EF1               	movlw	-15
  9221  0117B8  0060  F097  FFE3   	movff	btemp,plusw1
  9222  0117BE  0EF2               	movlw	-14
  9223  0117C0  0060  F097  FFE3   	movff	btemp,plusw1
  9224  0117C6  0EF3               	movlw	-13
  9225  0117C8  0060  F097  FFE3   	movff	btemp,plusw1
  9226  0117CE  0EF4               	movlw	-12
  9227  0117D0  0060  F097  FFE3   	movff	btemp,plusw1
  9228  0117D6  0EF5               	movlw	-11
  9229  0117D8  0060  F097  FFE3   	movff	btemp,plusw1
  9230                           
  9231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9232                           ;stkvar	_ll @ sp[(-32)+14]
  9233  0117DE  50E1               	movf	fsr1l,w,c
  9234  0117E0  0FEE               	addlw	-18
  9235  0117E2  6ED9               	movwf	fsr2l,c
  9236  0117E4  50E2               	movf	fsr1h,w,c
  9237  0117E6  6EDA               	movwf	fsr2h,c
  9238  0117E8  0EFF               	movlw	255
  9239  0117EA  22DA               	addwfc	fsr2h,f,c
  9240  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9241  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9242  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9243  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9244  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9245  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9246  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9247  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9248                           
  9249                           ;stkvar	_fp @ sp[(-40)+-2]
  9250  01181C  0ED6               	movlw	-42
  9251  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9252  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9253  01182A  EC1A  F0A0         	call	_dtoa	;wreg free
  9254  01182E  D2A4               	goto	l2199
  9255  011830                     l10685:
  9256                           
  9257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9258                           ;stkvar	_ct @ sp[(-32)+26]
  9259  011830  0EFA               	movlw	-6
  9260  011832  006F FF8C  F025    	movff	plusw1,btemp
  9261  011838  0E66               	movlw	102
  9262  01183A  1825               	xorwf	btemp^0,w,c
  9263  01183C  A4D8               	btfss	status,2,c
  9264  01183E  D06E               	goto	l10697
  9265                           
  9266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9267                           ;stkvar	_fmt @ sp[(-32)+-4]
  9268  011840  0EDC               	movlw	-36
  9269  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9270  011848  0EDD               	movlw	-35
  9271  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9272  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9273  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9274  01185C                     	if	0	;tblptru may be non-zero
  9275  01185C                     	endif
  9276  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9277  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9278  01185E  6EF8               	movwf	tblptru,c
  9279  011860                     	endif
  9280                           
  9281                           ;stkvar	_c @ sp[(-32)+31]
  9282  011860  0008               	tblrd		*
  9283  011862  0EFF               	movlw	-1
  9284  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9285                           
  9286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9287                           ;stkvar	_fmt @ sp[(-32)+-4]
  9288  01186A  0EDC               	movlw	-36
  9289  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9290  011872  0EDD               	movlw	-35
  9291  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9292  01187A  2ADE               	incf	postinc2,f,c
  9293  01187C  0E00               	movlw	0
  9294  01187E  22DD               	addwfc	postdec2,f,c
  9295                           
  9296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9297                           ;stkvar	_ap @ sp[(-32)+-6]
  9298  011880  0EDA               	movlw	-38
  9299  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9300  011888  0EDB               	movlw	-37
  9301  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9302  011890  0E04               	movlw	4
  9303  011892  5EDE               	subwf	postinc2,f,c
  9304  011894  0E00               	movlw	0
  9305  011896  5ADD               	subwfb	postdec2,f,c
  9306  011898  006F FF78  F02F    	movff	postinc2,btemp+10
  9307  01189E  006F FF74  F030    	movff	postdec2,btemp+11
  9308  0118A4  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9309  0118AA  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9310  0118B0  006F FF78  F02D    	movff	postinc2,btemp+8
  9311  0118B6  006F FF78  F02E    	movff	postinc2,btemp+9
  9312  0118BC  006F FF78  F02F    	movff	postinc2,btemp+10
  9313  0118C2  006F FF78  F030    	movff	postinc2,btemp+11
  9314                           
  9315                           ;stkvar	_f @ sp[(-32)+22]
  9316  0118C8  0EF6               	movlw	-10
  9317  0118CA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9318  0118D0  0EF7               	movlw	-9
  9319  0118D2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9320  0118D8  0EF8               	movlw	-8
  9321  0118DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9322  0118E0  0EF9               	movlw	-7
  9323  0118E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9324  0118E8                     l10693:
  9325                           
  9326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9327                           ;stkvar	_c @ sp[(-32)+31]
  9328  0118E8  0EFF               	movlw	-1
  9329  0118EA  50E3               	movf	plusw1,w,c
  9330  0118EC  6EE6               	movwf	postinc1,c
  9331                           
  9332                           ;stkvar	_f @ sp[(-33)+22]
  9333  0118EE  0EF5               	movlw	-11
  9334  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9335  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9336  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9337  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9338                           
  9339                           ;stkvar	_fp @ sp[(-37)+-2]
  9340  011908  0ED9               	movlw	-39
  9341  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9342  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9343  011916  EC00  F080         	call	_efgtoa	;wreg free
  9344  01191A  D22E               	goto	l2199
  9345  01191C                     l10697:
  9346                           
  9347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9348  01191C  0E02               	movlw	2
  9349  01191E  6EE6               	movwf	postinc1,c
  9350  011920  0E00               	movlw	0
  9351  011922  6EE6               	movwf	postinc1,c
  9352  011924  0EF6               	movlw	low STR_54
  9353  011926  6EE6               	movwf	postinc1,c
  9354  011928  0EFF               	movlw	high STR_54
  9355  01192A  6EE6               	movwf	postinc1,c
  9356                           
  9357                           ;stkvar	_ct @ sp[(-36)+26]
  9358  01192C  0EF6               	movlw	246
  9359  01192E  24E1               	addwf	fsr1l,w,c
  9360  011930  6E25               	movwf	btemp^0,c
  9361  011932  0EFF               	movlw	255
  9362  011934  20E2               	addwfc	fsr1h,w,c
  9363  011936  6E26               	movwf	(btemp+1)^0,c
  9364  011938  0060  F097  FFE6   	movff	btemp,postinc1
  9365  01193E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  9366  011944  ECFD  F0B1         	call	_strncmp	;wreg free
  9367  011948  5025               	movf	btemp^0,w,c
  9368  01194A  1026               	iorwf	(btemp+1)^0,w,c
  9369  01194C  A4D8               	btfss	status,2,c
  9370  01194E  D096               	goto	l10717
  9371                           
  9372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9373                           ;stkvar	_fmt @ sp[(-32)+-4]
  9374  011950  0EDC               	movlw	-36
  9375  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9376  011958  0EDD               	movlw	-35
  9377  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9378  011960  006F FF78  F02F    	movff	postinc2,btemp+10
  9379  011966  006F FF74  F030    	movff	postdec2,btemp+11
  9380  01196C  0E01               	movlw	1
  9381  01196E  262F               	addwf	(btemp+10)^0,f,c
  9382  011970  0E00               	movlw	0
  9383  011972  2230               	addwfc	(btemp+11)^0,f,c
  9384  011974  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9385  01197A  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9386  011980                     	if	0	;tblptru may be non-zero
  9387  011980                     	endif
  9388  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9389  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9390  011982  6EF8               	movwf	tblptru,c
  9391  011984                     	endif
  9392                           
  9393                           ;stkvar	_c @ sp[(-32)+31]
  9394  011984  0008               	tblrd		*
  9395  011986  0EFF               	movlw	-1
  9396  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9397  01198E  0EBF               	movlw	191
  9398  011990  6E2F               	movwf	(btemp+10)^0,c
  9399  011992  0EFF               	movlw	255
  9400  011994  6E30               	movwf	(btemp+11)^0,c
  9401                           
  9402                           ;stkvar	_fmt @ sp[(-32)+-4]
  9403  011996  0EDC               	movlw	-36
  9404  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9405  01199E  0EDD               	movlw	-35
  9406  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9407  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9408  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9409  0119B2                     	if	0	;tblptru may be non-zero
  9410  0119B2                     	endif
  9411  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9412  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9413  0119B4  6EF8               	movwf	tblptru,c
  9414  0119B6                     	endif
  9415  0119B6  0008               	tblrd		*
  9416  0119B8  50F5               	movf	tablat,w,c
  9417  0119BA  6E2D               	movwf	(btemp+8)^0,c
  9418  0119BC  6A2E               	clrf	(btemp+9)^0,c
  9419  0119BE  502F               	movf	(btemp+10)^0,w,c
  9420  0119C0  262D               	addwf	(btemp+8)^0,f,c
  9421  0119C2  5030               	movf	(btemp+11)^0,w,c
  9422  0119C4  222E               	addwfc	(btemp+9)^0,f,c
  9423  0119C6  502E               	movf	(btemp+9)^0,w,c
  9424  0119C8  E106               	bnz	u10540
  9425  0119CA  0E1A               	movlw	26
  9426  0119CC  5C2D               	subwf	(btemp+8)^0,w,c
  9427  0119CE  B0D8               	btfsc	status,0,c
  9428  0119D0  D002               	goto	u10540
  9429  0119D2  0E01               	movlw	1
  9430  0119D4  D001               	goto	u10550
  9431  0119D6                     u10540:
  9432  0119D6  0E00               	movlw	0
  9433  0119D8                     u10550:
  9434  0119D8  6E2F               	movwf	(btemp+10)^0,c
  9435  0119DA  6A30               	clrf	(btemp+11)^0,c
  9436                           
  9437                           ;stkvar	_vfpfcnvrt$5042 @ sp[(-32)+2]
  9438  0119DC  0EE2               	movlw	-30
  9439  0119DE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9440  0119E4  0EE3               	movlw	-29
  9441  0119E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9442                           
  9443                           ;stkvar	_vfpfcnvrt$5042 @ sp[(-32)+2]
  9444  0119EC  0EE2               	movlw	-30
  9445  0119EE  006F FF8C  F025    	movff	plusw1,btemp
  9446  0119F4  0EE3               	movlw	-29
  9447  0119F6  50E3               	movf	plusw1,w,c
  9448  0119F8  1025               	iorwf	btemp^0,w,c
  9449                           
  9450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9451                           ;stkvar	_ap @ sp[(-32)+-6]
  9452                           
  9453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9454                           
  9455                           ;stkvar	_f @ sp[(-32)+22]
  9456                           
  9457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9458                           ;stkvar	_ap @ sp[(-32)+-6]
  9459  0119FA  0EDA               	movlw	-38
  9460  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9461  011A02  0EDB               	movlw	-37
  9462  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9463  011A0A  0E04               	movlw	4
  9464  011A0C  5EDE               	subwf	postinc2,f,c
  9465  011A0E  0E00               	movlw	0
  9466  011A10  5ADD               	subwfb	postdec2,f,c
  9467  011A12  006F FF78  F02F    	movff	postinc2,btemp+10
  9468  011A18  006F FF74  F030    	movff	postdec2,btemp+11
  9469  011A1E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9470  011A24  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9471  011A2A  006F FF78  F02D    	movff	postinc2,btemp+8
  9472  011A30  006F FF78  F02E    	movff	postinc2,btemp+9
  9473  011A36  006F FF78  F02F    	movff	postinc2,btemp+10
  9474  011A3C  006F FF78  F030    	movff	postinc2,btemp+11
  9475                           
  9476                           ;stkvar	_f @ sp[(-32)+22]
  9477  011A42  0EF6               	movlw	-10
  9478  011A44  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9479  011A4A  0EF7               	movlw	-9
  9480  011A4C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9481  011A52  0EF8               	movlw	-8
  9482  011A54  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9483  011A5A  0EF9               	movlw	-7
  9484  011A5C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9485                           
  9486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9487                           ;stkvar	_fmt @ sp[(-32)+-4]
  9488  011A62  0EDC               	movlw	-36
  9489  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9490  011A6A  0EDD               	movlw	-35
  9491  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9492  011A72  0E02               	movlw	2
  9493  011A74  26DE               	addwf	postinc2,f,c
  9494  011A76  0E00               	movlw	0
  9495  011A78  22DD               	addwfc	postdec2,f,c
  9496  011A7A  D736               	goto	l10693
  9497  011A7C                     l10717:
  9498                           
  9499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9500                           ;stkvar	_fmt @ sp[(-32)+-4]
  9501  011A7C  0EDC               	movlw	-36
  9502  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9503  011A84  0EDD               	movlw	-35
  9504  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9505  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9506  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9507  011A98                     	if	0	;tblptru may be non-zero
  9508  011A98                     	endif
  9509  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9510  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9511  011A9A  6EF8               	movwf	tblptru,c
  9512  011A9C                     	endif
  9513  011A9C  0008               	tblrd		*
  9514  011A9E  50F5               	movf	tablat,w,c
  9515  011AA0  0A73               	xorlw	115
  9516  011AA2  A4D8               	btfss	status,2,c
  9517  011AA4  D042               	goto	l10727
  9518                           
  9519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9520                           ;stkvar	_fmt @ sp[(-32)+-4]
  9521  011AA6  0EDC               	movlw	-36
  9522  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9523  011AAE  0EDD               	movlw	-35
  9524  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9525  011AB6  2ADE               	incf	postinc2,f,c
  9526  011AB8  0E00               	movlw	0
  9527  011ABA  22DD               	addwfc	postdec2,f,c
  9528                           
  9529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9530                           ;stkvar	_ap @ sp[(-32)+-6]
  9531  011ABC  0EDA               	movlw	-38
  9532  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9533  011AC4  0EDB               	movlw	-37
  9534  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9535  011ACC  0E02               	movlw	2
  9536  011ACE  5EDE               	subwf	postinc2,f,c
  9537  011AD0  0E00               	movlw	0
  9538  011AD2  5ADD               	subwfb	postdec2,f,c
  9539  011AD4  006F FF78  F02F    	movff	postinc2,btemp+10
  9540  011ADA  006F FF74  F030    	movff	postdec2,btemp+11
  9541  011AE0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9542  011AE6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9543  011AEC  006F FF78  F02F    	movff	postinc2,btemp+10
  9544  011AF2  006F FF74  F030    	movff	postdec2,btemp+11
  9545                           
  9546                           ;stkvar	_cp @ sp[(-32)+29]
  9547  011AF8  0EFE               	movlw	-2
  9548  011AFA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9549  011B00  0EFD               	movlw	-3
  9550  011B02  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9551                           
  9552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9553                           ;stkvar	_cp @ sp[(-32)+29]
  9554  011B08  0EFD               	movlw	-3
  9555  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9556  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9557                           
  9558                           ;stkvar	_fp @ sp[(-34)+-2]
  9559  011B16  0EDC               	movlw	-36
  9560  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9561  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9562  011B24  ECF9  F0AA         	call	_stoa	;wreg free
  9563  011B28  D127               	goto	l2199
  9564  011B2A                     l10727:
  9565                           
  9566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9567                           ;stkvar	_fmt @ sp[(-32)+-4]
  9568  011B2A  0EDC               	movlw	-36
  9569  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9570  011B32  0EDD               	movlw	-35
  9571  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9572  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9573  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9574  011B46                     	if	0	;tblptru may be non-zero
  9575  011B46                     	endif
  9576  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9577  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9578  011B48  6EF8               	movwf	tblptru,c
  9579  011B4A                     	endif
  9580  011B4A  0008               	tblrd		*
  9581  011B4C  50F5               	movf	tablat,w,c
  9582  011B4E  0A78               	xorlw	120
  9583  011B50  B4D8               	btfsc	status,2,c
  9584  011B52  D015               	goto	u10590
  9585                           
  9586                           ;stkvar	_fmt @ sp[(-32)+-4]
  9587  011B54  0EDC               	movlw	-36
  9588  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9589  011B5C  0EDD               	movlw	-35
  9590  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9591  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9592  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9593  011B70                     	if	0	;tblptru may be non-zero
  9594  011B70                     	endif
  9595  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9596  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9597  011B72  6EF8               	movwf	tblptru,c
  9598  011B74                     	endif
  9599  011B74  0008               	tblrd		*
  9600  011B76  50F5               	movf	tablat,w,c
  9601  011B78  0A58               	xorlw	88
  9602  011B7A  A4D8               	btfss	status,2,c
  9603  011B7C  D094               	goto	l10741
  9604  011B7E                     u10590:
  9605                           
  9606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9607                           ;stkvar	_fmt @ sp[(-32)+-4]
  9608  011B7E  0EDC               	movlw	-36
  9609  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9610  011B86  0EDD               	movlw	-35
  9611  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9612  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9613  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9614  011B9A                     	if	0	;tblptru may be non-zero
  9615  011B9A                     	endif
  9616  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9617  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9618  011B9C  6EF8               	movwf	tblptru,c
  9619  011B9E                     	endif
  9620                           
  9621                           ;stkvar	_c @ sp[(-32)+31]
  9622  011B9E  0008               	tblrd		*
  9623  011BA0  0EFF               	movlw	-1
  9624  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9625                           
  9626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9627                           ;stkvar	_fmt @ sp[(-32)+-4]
  9628  011BA8  0EDC               	movlw	-36
  9629  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9630  011BB0  0EDD               	movlw	-35
  9631  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9632  011BB8  2ADE               	incf	postinc2,f,c
  9633  011BBA  0E00               	movlw	0
  9634  011BBC  22DD               	addwfc	postdec2,f,c
  9635                           
  9636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9637                           ;stkvar	_ap @ sp[(-32)+-6]
  9638  011BBE  0EDA               	movlw	-38
  9639  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9640  011BC6  0EDB               	movlw	-37
  9641  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9642  011BCE  0E02               	movlw	2
  9643  011BD0  5EDE               	subwf	postinc2,f,c
  9644  011BD2  0E00               	movlw	0
  9645  011BD4  5ADD               	subwfb	postdec2,f,c
  9646  011BD6  006F FF78  F02F    	movff	postinc2,btemp+10
  9647  011BDC  006F FF74  F030    	movff	postdec2,btemp+11
  9648  011BE2  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9649  011BE8  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9650  011BEE  006F FF78  F02F    	movff	postinc2,btemp+10
  9651  011BF4  006F FF74  F030    	movff	postdec2,btemp+11
  9652  011BFA  502F               	movf	(btemp+10)^0,w,c
  9653  011BFC  6E35               	movwf	(btemp+16)^0,c
  9654  011BFE  5030               	movf	(btemp+11)^0,w,c
  9655  011C00  6E36               	movwf	(btemp+17)^0,c
  9656  011C02  6A37               	clrf	(btemp+18)^0,c
  9657  011C04  6A38               	clrf	(btemp+19)^0,c
  9658  011C06  6A39               	clrf	(btemp+20)^0,c
  9659  011C08  6A3A               	clrf	(btemp+21)^0,c
  9660  011C0A  6A3B               	clrf	(btemp+22)^0,c
  9661  011C0C  6A3C               	clrf	(btemp+23)^0,c
  9662                           
  9663                           ;stkvar	_llu @ sp[(-32)+6]
  9664  011C0E  0EE6               	movlw	-26
  9665  011C10  0060  F0D7  FFE3   	movff	btemp+16,plusw1
  9666  011C16  0EE7               	movlw	-25
  9667  011C18  0060  F0DB  FFE3   	movff	btemp+17,plusw1
  9668  011C1E  0EE8               	movlw	-24
  9669  011C20  0060  F0DF  FFE3   	movff	btemp+18,plusw1
  9670  011C26  0EE9               	movlw	-23
  9671  011C28  0060  F0E3  FFE3   	movff	btemp+19,plusw1
  9672  011C2E  0EEA               	movlw	-22
  9673  011C30  0060  F0E7  FFE3   	movff	btemp+20,plusw1
  9674  011C36  0EEB               	movlw	-21
  9675  011C38  0060  F0EB  FFE3   	movff	btemp+21,plusw1
  9676  011C3E  0EEC               	movlw	-20
  9677  011C40  0060  F0EF  FFE3   	movff	btemp+22,plusw1
  9678  011C46  0EED               	movlw	-19
  9679  011C48  0060  F0F3  FFE3   	movff	btemp+23,plusw1
  9680                           
  9681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9682                           ;stkvar	_c @ sp[(-32)+31]
  9683  011C4E  0EFF               	movlw	-1
  9684  011C50  50E3               	movf	plusw1,w,c
  9685  011C52  6EE6               	movwf	postinc1,c
  9686                           
  9687                           ;stkvar	_llu @ sp[(-33)+6]
  9688  011C54  50E1               	movf	fsr1l,w,c
  9689  011C56  0FE5               	addlw	-27
  9690  011C58  6ED9               	movwf	fsr2l,c
  9691  011C5A  50E2               	movf	fsr1h,w,c
  9692  011C5C  6EDA               	movwf	fsr2h,c
  9693  011C5E  0EFF               	movlw	255
  9694  011C60  22DA               	addwfc	fsr2h,f,c
  9695  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9696  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9697  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9698  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9699  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9700  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9701  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9702  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9703                           
  9704                           ;stkvar	_fp @ sp[(-41)+-2]
  9705  011C92  0ED5               	movlw	-43
  9706  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9707  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9708  011CA0  EC83  F0A4         	call	_xtoa	;wreg free
  9709  011CA4  D069               	goto	l2199
  9710  011CA6                     l10741:
  9711                           
  9712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9713                           ;stkvar	_fmt @ sp[(-32)+-4]
  9714  011CA6  0EDC               	movlw	-36
  9715  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9716  011CAE  0EDD               	movlw	-35
  9717  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9718  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9719  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9720  011CC2                     	if	0	;tblptru may be non-zero
  9721  011CC2                     	endif
  9722  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9723  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9724  011CC4  6EF8               	movwf	tblptru,c
  9725  011CC6                     	endif
  9726  011CC6  0008               	tblrd		*
  9727  011CC8  50F5               	movf	tablat,w,c
  9728  011CCA  0A25               	xorlw	37
  9729  011CCC  A4D8               	btfss	status,2,c
  9730  011CCE  D01A               	goto	l10751
  9731                           
  9732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9733                           ;stkvar	_fmt @ sp[(-32)+-4]
  9734  011CD0  0EDC               	movlw	-36
  9735  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9736  011CD8  0EDD               	movlw	-35
  9737  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9738  011CE0  2ADE               	incf	postinc2,f,c
  9739  011CE2  0E00               	movlw	0
  9740  011CE4  22DD               	addwfc	postdec2,f,c
  9741                           
  9742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9743                           ;stkvar	_fp @ sp[(-32)+-2]
  9744  011CE6  0EDE               	movlw	-34
  9745  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9746  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9747  011CF4  0E25               	movlw	37
  9748  011CF6  6EE6               	movwf	postinc1,c
  9749  011CF8  0E00               	movlw	0
  9750  011CFA  6EE6               	movwf	postinc1,c
  9751  011CFC  ECC8  F0B7         	call	_fputc	;wreg free
  9752  011D00                     l10747:
  9753                           
  9754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9755  011D00  0E01               	movlw	1
  9756  011D02  D00C               	goto	L7
  9757  011D04                     l10751:
  9758                           
  9759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9760                           ;stkvar	_fmt @ sp[(-32)+-4]
  9761  011D04  0EDC               	movlw	-36
  9762  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9763  011D0C  0EDD               	movlw	-35
  9764  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9765  011D14  2ADE               	incf	postinc2,f,c
  9766  011D16  0E00               	movlw	0
  9767  011D18  22DD               	addwfc	postdec2,f,c
  9768                           
  9769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9770  011D1A  0E00               	movlw	0
  9771  011D1C                     L7:
  9772  011D1C  6E25               	movwf	btemp^0,c
  9773  011D1E  0E00               	movlw	0
  9774  011D20  6E26               	movwf	(btemp+1)^0,c
  9775  011D22  D02A               	goto	l2199
  9776  011D24                     l10757:
  9777                           
  9778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9779                           ;stkvar	_fp @ sp[(-32)+-2]
  9780  011D24  0EDE               	movlw	-34
  9781  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9782  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9783                           
  9784                           ;stkvar	_fmt @ sp[(-34)+-4]
  9785  011D32  0EDA               	movlw	-38
  9786  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9787  011D3A  0EDB               	movlw	-37
  9788  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9789  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9790  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9791  011D4E                     	if	0	;tblptru may be non-zero
  9792  011D4E                     	endif
  9793  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9794  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9795  011D50  6EF8               	movwf	tblptru,c
  9796  011D52                     	endif
  9797  011D52  0008               	tblrd		*
  9798  011D54  50F5               	movf	tablat,w,c
  9799  011D56  6EE6               	movwf	postinc1,c
  9800  011D58  0E00               	movlw	0
  9801  011D5A  6EE6               	movwf	postinc1,c
  9802  011D5C  ECC8  F0B7         	call	_fputc	;wreg free
  9803                           
  9804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9805                           ;stkvar	_fmt @ sp[(-32)+-4]
  9806  011D60  0EDC               	movlw	-36
  9807  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9808  011D68  0EDD               	movlw	-35
  9809  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9810  011D70  2ADE               	incf	postinc2,f,c
  9811  011D72  0E00               	movlw	0
  9812  011D74  22DD               	addwfc	postdec2,f,c
  9813  011D76  D7C4               	goto	l10747
  9814  011D78                     l2199:
  9815                           
  9816                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9817  011D78  0EDA               	movlw	218
  9818  011D7A  26E1               	addwf	fsr1l,f,c
  9819  011D7C  0EFF               	movlw	255
  9820  011D7E  22E2               	addwfc	fsr1h,f,c
  9821  011D80  0012               	return		;funcret
  9822  011D82                     __end_of_vfpfcnvrt:
  9823                           	opt callstack 0
  9824                           
  9825 ;; *************** function _xtoa *****************
  9826 ;; Defined at:
  9827 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9830 ;;		 -> f(6), NULL(0), 
  9831 ;;  d               8  [STACK] unsigned long long 
  9832 ;;  x               1  [STACK] unsigned char 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  n               8  [STACK] unsigned long long 
  9835 ;;  c               2  [STACK] int 
  9836 ;;  i               2  [STACK] int 
  9837 ;;  w               2  [STACK] int 
  9838 ;;  p               2  [STACK] int 
  9839 ;; Return value:  Size  Location     Type
  9840 ;;                  2  [STACK] int 
  9841 ;; Registers used:
  9842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9852 ;;Total ram usage:        0 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; Hardware stack levels required when called:   12
  9855 ;; This function calls:
  9856 ;;		_isalpha
  9857 ;;		_isupper
  9858 ;;		_pad
  9859 ;;		_toupper
  9860 ;; This function is called by:
  9861 ;;		_vfpfcnvrt
  9862 ;; This function uses a reentrant model
  9863 ;;
  9864                           
  9865                           	psect	text42
  9866  014906                     __ptext42:
  9867                           	opt callstack 0
  9868  014906                     _xtoa:
  9869                           	opt callstack 0
  9870                           
  9871                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9872  014906  0E14               	movlw	20
  9873  014908  26E1               	addwf	fsr1l,f,c
  9874  01490A  0E00               	movlw	0
  9875  01490C  22E2               	addwfc	fsr1h,f,c
  9876                           
  9877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9878                           
  9879                           ;incstack = 0
  9880  01490E  AE0D               	btfss	(_prec+1)^0,7,c
  9881                           
  9882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9883  014910  920E               	bcf	_flags^0,1,c
  9884                           
  9885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9886  014912  BE0D               	btfsc	(_prec+1)^0,7,c
  9887  014914  D005               	goto	u10190
  9888  014916  500D               	movf	(_prec+1)^0,w,c
  9889  014918  E110               	bnz	l10539
  9890  01491A  040C               	decf	_prec^0,w,c
  9891  01491C  B0D8               	btfsc	status,0,c
  9892  01491E  D00D               	goto	l10539
  9893  014920                     u10190:
  9894  014920  0E01               	movlw	1
  9895  014922  6E2F               	movwf	(btemp+10)^0,c
  9896  014924  0E00               	movlw	0
  9897  014926  6E30               	movwf	(btemp+11)^0,c
  9898                           
  9899                           ;stkvar	_p @ sp[(-20)+18]
  9900  014928  0EFE               	movlw	-2
  9901  01492A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9902  014930  0EFF               	movlw	-1
  9903  014932  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9904  014938  D008               	goto	l2149
  9905  01493A                     l10539:
  9906                           
  9907                           ;stkvar	_p @ sp[(-20)+18]
  9908  01493A  0EFE               	movlw	-2
  9909  01493C  0060  F033  FFE3   	movff	_prec,plusw1
  9910  014942  0EFF               	movlw	-1
  9911  014944  0060  F037  FFE3   	movff	_prec+1,plusw1
  9912  01494A                     l2149:
  9913                           
  9914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9915                           ;stkvar	_w @ sp[(-20)+16]
  9916  01494A  0EFC               	movlw	-4
  9917  01494C  0060  F02B  FFE3   	movff	_width,plusw1
  9918  014952  0EFD               	movlw	-3
  9919  014954  0060  F02F  FFE3   	movff	_width+1,plusw1
  9920                           
  9921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9922  01495A  A80E               	btfss	_flags^0,4,c
  9923  01495C  D00B               	goto	l10545
  9924                           
  9925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9926                           ;stkvar	_w @ sp[(-20)+16]
  9927  01495E  50E1               	movf	fsr1l,w,c
  9928  014960  0FFC               	addlw	-4
  9929  014962  6ED9               	movwf	fsr2l,c
  9930  014964  50E2               	movf	fsr1h,w,c
  9931  014966  6EDA               	movwf	fsr2h,c
  9932  014968  0EFF               	movlw	255
  9933  01496A  22DA               	addwfc	fsr2h,f,c
  9934  01496C  0EFE               	movlw	254
  9935  01496E  26DE               	addwf	postinc2,f,c
  9936  014970  0EFF               	movlw	255
  9937  014972  22DD               	addwfc	postdec2,f,c
  9938  014974                     l10545:
  9939                           
  9940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9941                           ;stkvar	_d @ sp[(-20)+-10]
  9942  014974  0EE2               	movlw	226
  9943  014976  24E1               	addwf	fsr1l,w,c
  9944  014978  6ED9               	movwf	fsr2l,c
  9945  01497A  0EFF               	movlw	255
  9946  01497C  20E2               	addwfc	fsr1h,w,c
  9947  01497E  6EDA               	movwf	fsr2h,c
  9948                           
  9949                           ;stkvar	_n @ sp[(-20)+4]
  9950  014980  0E08               	movlw	8
  9951  014982  6E25               	movwf	btemp^0,c
  9952  014984  0EF0               	movlw	-16
  9953  014986                     us1021999:
  9954  014986  006F FF7B FFE3     	movff	postinc2,plusw1
  9955  01498C  28E8               	incf	wreg,w,c
  9956  01498E  2E25               	decfsz	btemp^0,f,c
  9957  014990  D7FA               	bra	us1021999
  9958                           
  9959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9960  014992  0E4F               	movlw	79
  9961  014994  6E2F               	movwf	(btemp+10)^0,c
  9962  014996  0E00               	movlw	0
  9963  014998  6E30               	movwf	(btemp+11)^0,c
  9964                           
  9965                           ;stkvar	_i @ sp[(-20)+14]
  9966  01499A  0EFA               	movlw	-6
  9967  01499C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9968  0149A2  0EFB               	movlw	-5
  9969  0149A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9970                           
  9971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9972  0149AA  0103               	movlb	3	; () banked
  9973  0149AC  6BE3               	clrf	(_dbuf+79)& (0+255),b
  9974                           
  9975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9976  0149AE  D0EE               	goto	l10583
  9977  0149B0                     l10551:
  9978                           
  9979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9980                           ;stkvar	_i @ sp[(-20)+14]
  9981  0149B0  50E1               	movf	fsr1l,w,c
  9982  0149B2  0FFA               	addlw	-6
  9983  0149B4  6ED9               	movwf	fsr2l,c
  9984  0149B6  50E2               	movf	fsr1h,w,c
  9985  0149B8  6EDA               	movwf	fsr2h,c
  9986  0149BA  0EFF               	movlw	255
  9987  0149BC  22DA               	addwfc	fsr2h,f,c
  9988  0149BE  06DE               	decf	postinc2,f,c
  9989  0149C0  0E00               	movlw	0
  9990  0149C2  5ADD               	subwfb	postdec2,f,c
  9991                           
  9992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9993                           ;stkvar	_n @ sp[(-20)+4]
  9994  0149C4  0EF0               	movlw	-16
  9995  0149C6  006F FF8C  F02F    	movff	plusw1,btemp+10
  9996  0149CC  0EF1               	movlw	-15
  9997  0149CE  006F FF8C  F030    	movff	plusw1,btemp+11
  9998  0149D4  0E0F               	movlw	15
  9999  0149D6  162F               	andwf	(btemp+10)^0,f,c
 10000  0149D8  0E00               	movlw	0
 10001  0149DA  1630               	andwf	(btemp+11)^0,f,c
 10002                           
 10003                           ;stkvar	_c @ sp[(-20)+12]
 10004  0149DC  0EF8               	movlw	-8
 10005  0149DE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10006  0149E4  0EF9               	movlw	-7
 10007  0149E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10008                           
 10009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 10010                           ;stkvar	_c @ sp[(-20)+12]
 10011  0149EC  0EF9               	movlw	-7
 10012  0149EE  BEE3               	btfsc	plusw1,7,c
 10013  0149F0  D00F               	goto	l10559
 10014  0149F2  0EF9               	movlw	-7
 10015  0149F4  50E3               	movf	plusw1,w,c
 10016  0149F6  E108               	bnz	u10220
 10017  0149F8  0EF8               	movlw	-8
 10018  0149FA  006F FF8C  F025    	movff	plusw1,btemp
 10019  014A00  0E0A               	movlw	10
 10020  014A02  5E25               	subwf	btemp^0,f,c
 10021  014A04  A0D8               	btfss	status,0,c
 10022  014A06  D004               	goto	l10559
 10023  014A08                     u10220:
 10024                           
 10025                           ;stkvar	_c @ sp[(-20)+12]
 10026  014A08  0EF8               	movlw	-8
 10027  014A0A  50E3               	movf	plusw1,w,c
 10028  014A0C  0F57               	addlw	87
 10029  014A0E  D003               	goto	L8
 10030  014A10                     l10559:
 10031                           
 10032                           ;stkvar	_c @ sp[(-20)+12]
 10033  014A10  0EF8               	movlw	-8
 10034  014A12  50E3               	movf	plusw1,w,c
 10035  014A14  0F30               	addlw	48
 10036  014A16                     L8:
 10037  014A16  6E2F               	movwf	(btemp+10)^0,c
 10038  014A18  0EF9               	movlw	-7
 10039  014A1A  006F FF8C  F030    	movff	plusw1,btemp+11
 10040  014A20  0E00               	movlw	0
 10041  014A22  2230               	addwfc	(btemp+11)^0,f,c
 10042                           
 10043                           ;stkvar	_c @ sp[(-20)+12]
 10044  014A24  0EF8               	movlw	-8
 10045  014A26  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10046  014A2C  0EF9               	movlw	-7
 10047  014A2E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10048  014A34  0EBF               	movlw	191
 10049  014A36  6E2F               	movwf	(btemp+10)^0,c
 10050  014A38  0EFF               	movlw	255
 10051  014A3A  6E30               	movwf	(btemp+11)^0,c
 10052                           
 10053                           ;stkvar	_x @ sp[(-20)+-11]
 10054  014A3C  0EE1               	movlw	-31
 10055  014A3E  50E3               	movf	plusw1,w,c
 10056  014A40  6E2D               	movwf	(btemp+8)^0,c
 10057  014A42  6A2E               	clrf	(btemp+9)^0,c
 10058  014A44  502F               	movf	(btemp+10)^0,w,c
 10059  014A46  262D               	addwf	(btemp+8)^0,f,c
 10060  014A48  5030               	movf	(btemp+11)^0,w,c
 10061  014A4A  222E               	addwfc	(btemp+9)^0,f,c
 10062  014A4C  502E               	movf	(btemp+9)^0,w,c
 10063  014A4E  E106               	bnz	u10230
 10064  014A50  0E1A               	movlw	26
 10065  014A52  5C2D               	subwf	(btemp+8)^0,w,c
 10066  014A54  B0D8               	btfsc	status,0,c
 10067  014A56  D002               	goto	u10230
 10068  014A58  0E01               	movlw	1
 10069  014A5A  D001               	goto	u10240
 10070  014A5C                     u10230:
 10071  014A5C  0E00               	movlw	0
 10072  014A5E                     u10240:
 10073  014A5E  6E2F               	movwf	(btemp+10)^0,c
 10074  014A60  6A30               	clrf	(btemp+11)^0,c
 10075                           
 10076                           ;stkvar	_xtoa$5020 @ sp[(-20)+2]
 10077  014A62  0EEE               	movlw	-18
 10078  014A64  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10079  014A6A  0EEF               	movlw	-17
 10080  014A6C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10081                           
 10082                           ;stkvar	_xtoa$5020 @ sp[(-20)+2]
 10083  014A72  0EEE               	movlw	-18
 10084  014A74  006F FF8C  F025    	movff	plusw1,btemp
 10085  014A7A  0EEF               	movlw	-17
 10086  014A7C  50E3               	movf	plusw1,w,c
 10087  014A7E  1025               	iorwf	btemp^0,w,c
 10088  014A80  B4D8               	btfsc	status,2,c
 10089  014A82  D041               	goto	l10575
 10090  014A84  0E9F               	movlw	159
 10091  014A86  6E2F               	movwf	(btemp+10)^0,c
 10092  014A88  0EFF               	movlw	255
 10093  014A8A  6E30               	movwf	(btemp+11)^0,c
 10094                           
 10095                           ;stkvar	_c @ sp[(-20)+12]
 10096  014A8C  0EF8               	movlw	-8
 10097  014A8E  006F FF8C  F02D    	movff	plusw1,btemp+8
 10098  014A94  0EF9               	movlw	-7
 10099  014A96  006F FF8C  F02E    	movff	plusw1,btemp+9
 10100  014A9C  0E20               	movlw	32
 10101  014A9E  122D               	iorwf	(btemp+8)^0,f,c
 10102  014AA0  0E00               	movlw	0
 10103  014AA2  122E               	iorwf	(btemp+9)^0,f,c
 10104  014AA4  502F               	movf	(btemp+10)^0,w,c
 10105  014AA6  262D               	addwf	(btemp+8)^0,f,c
 10106  014AA8  5030               	movf	(btemp+11)^0,w,c
 10107  014AAA  222E               	addwfc	(btemp+9)^0,f,c
 10108  014AAC  502E               	movf	(btemp+9)^0,w,c
 10109  014AAE  E106               	bnz	u10260
 10110  014AB0  0E1A               	movlw	26
 10111  014AB2  5C2D               	subwf	(btemp+8)^0,w,c
 10112  014AB4  B0D8               	btfsc	status,0,c
 10113  014AB6  D002               	goto	u10260
 10114  014AB8  0E01               	movlw	1
 10115  014ABA  D001               	goto	u10270
 10116  014ABC                     u10260:
 10117  014ABC  0E00               	movlw	0
 10118  014ABE                     u10270:
 10119  014ABE  6E2F               	movwf	(btemp+10)^0,c
 10120  014AC0  6A30               	clrf	(btemp+11)^0,c
 10121                           
 10122                           ;stkvar	_xtoa$5021 @ sp[(-20)+0]
 10123  014AC2  0EEC               	movlw	-20
 10124  014AC4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10125  014ACA  0EED               	movlw	-19
 10126  014ACC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10127                           
 10128                           ;stkvar	_xtoa$5021 @ sp[(-20)+0]
 10129  014AD2  0EEC               	movlw	-20
 10130  014AD4  006F FF8C  F025    	movff	plusw1,btemp
 10131  014ADA  0EED               	movlw	-19
 10132  014ADC  50E3               	movf	plusw1,w,c
 10133  014ADE  1025               	iorwf	btemp^0,w,c
 10134  014AE0  B4D8               	btfsc	status,2,c
 10135  014AE2  D011               	goto	l10575
 10136                           
 10137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 10138                           ;stkvar	_c @ sp[(-20)+12]
 10139  014AE4  0EF8               	movlw	-8
 10140  014AE6  006F FF8F FFE6     	movff	plusw1,postinc1
 10141  014AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 10142  014AF2  ECF3  F0C0         	call	_toupper	;wreg free
 10143                           
 10144                           ;stkvar	_c @ sp[(-20)+12]
 10145  014AF6  0EF8               	movlw	-8
 10146  014AF8  0060  F097  FFE3   	movff	btemp,plusw1
 10147  014AFE  0EF9               	movlw	-7
 10148  014B00  0060  F09B  FFE3   	movff	btemp+1,plusw1
 10149  014B06                     l10575:
 10150                           
 10151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 10152                           ;stkvar	_c @ sp[(-20)+12]
 10153                           ;stkvar	_i @ sp[(-20)+14]
 10154  014B06  0EFA               	movlw	-6
 10155  014B08  006F FF8C  F02F    	movff	plusw1,btemp+10
 10156  014B0E  0EFB               	movlw	-5
 10157  014B10  006F FF8C  F030    	movff	plusw1,btemp+11
 10158  014B16  0E94               	movlw	low _dbuf
 10159  014B18  242F               	addwf	(btemp+10)^0,w,c
 10160  014B1A  6ED9               	movwf	fsr2l,c
 10161  014B1C  0E03               	movlw	high _dbuf
 10162  014B1E  2030               	addwfc	(btemp+11)^0,w,c
 10163  014B20  6EDA               	movwf	fsr2h,c
 10164  014B22  0EF8               	movlw	-8
 10165  014B24  006F FF8F FFDF     	movff	plusw1,indf2
 10166                           
 10167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 10168                           ;stkvar	_p @ sp[(-20)+18]
 10169  014B2A  50E1               	movf	fsr1l,w,c
 10170  014B2C  0FFE               	addlw	-2
 10171  014B2E  6ED9               	movwf	fsr2l,c
 10172  014B30  50E2               	movf	fsr1h,w,c
 10173  014B32  6EDA               	movwf	fsr2h,c
 10174  014B34  0EFF               	movlw	255
 10175  014B36  22DA               	addwfc	fsr2h,f,c
 10176  014B38  06DE               	decf	postinc2,f,c
 10177  014B3A  0E00               	movlw	0
 10178  014B3C  5ADD               	subwfb	postdec2,f,c
 10179                           
 10180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10181                           ;stkvar	_w @ sp[(-20)+16]
 10182  014B3E  50E1               	movf	fsr1l,w,c
 10183  014B40  0FFC               	addlw	-4
 10184  014B42  6ED9               	movwf	fsr2l,c
 10185  014B44  50E2               	movf	fsr1h,w,c
 10186  014B46  6EDA               	movwf	fsr2h,c
 10187  014B48  0EFF               	movlw	255
 10188  014B4A  22DA               	addwfc	fsr2h,f,c
 10189  014B4C  06DE               	decf	postinc2,f,c
 10190  014B4E  0E00               	movlw	0
 10191  014B50  5ADD               	subwfb	postdec2,f,c
 10192                           
 10193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10194  014B52  0E04               	movlw	4
 10195  014B54  6E30               	movwf	(btemp+11)^0,c
 10196                           
 10197                           ;stkvar	_n @ sp[(-20)+4]
 10198  014B56  50E1               	movf	fsr1l,w,c
 10199  014B58  0FF0               	addlw	-16
 10200  014B5A  6ED9               	movwf	fsr2l,c
 10201  014B5C  50E2               	movf	fsr1h,w,c
 10202  014B5E  6EDA               	movwf	fsr2h,c
 10203  014B60  0EFF               	movlw	255
 10204  014B62  22DA               	addwfc	fsr2h,f,c
 10205  014B64  2830               	incf	(btemp+11)^0,w,c
 10206  014B66  52DE               	movf	postinc2,f,c
 10207  014B68  D00F               	goto	u10290
 10208  014B6A                     u10295:
 10209  014B6A  52DE               	movf	postinc2,f,c
 10210  014B6C  52DE               	movf	postinc2,f,c
 10211  014B6E  52DE               	movf	postinc2,f,c
 10212  014B70  52DE               	movf	postinc2,f,c
 10213  014B72  52DE               	movf	postinc2,f,c
 10214  014B74  52DE               	movf	postinc2,f,c
 10215  014B76  90D8               	bcf	status,0,c
 10216  014B78  32DD               	rrcf	postdec2,f,c
 10217  014B7A  32DD               	rrcf	postdec2,f,c
 10218  014B7C  32DD               	rrcf	postdec2,f,c
 10219  014B7E  32DD               	rrcf	postdec2,f,c
 10220  014B80  32DD               	rrcf	postdec2,f,c
 10221  014B82  32DD               	rrcf	postdec2,f,c
 10222  014B84  32DD               	rrcf	postdec2,f,c
 10223  014B86  32DE               	rrcf	postinc2,f,c
 10224  014B88                     u10290:
 10225  014B88  2EE8               	decfsz	wreg,f,c
 10226  014B8A  D7EF               	goto	u10295
 10227  014B8C                     l10583:
 10228                           
 10229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10230                           ;stkvar	_i @ sp[(-20)+14]
 10231  014B8C  0EFB               	movlw	-5
 10232  014B8E  BEE3               	btfsc	plusw1,7,c
 10233  014B90  D03A               	goto	u10340
 10234  014B92  0EFB               	movlw	-5
 10235  014B94  50E3               	movf	plusw1,w,c
 10236  014B96  E108               	bnz	u10300
 10237  014B98  0EFA               	movlw	-6
 10238  014B9A  006F FF8C  F025    	movff	plusw1,btemp
 10239  014BA0  0E02               	movlw	2
 10240  014BA2  5E25               	subwf	btemp^0,f,c
 10241  014BA4  A0D8               	btfss	status,0,c
 10242  014BA6  D02F               	goto	u10340
 10243  014BA8                     u10300:
 10244                           
 10245                           ;stkvar	_n @ sp[(-20)+4]
 10246  014BA8  0EF0               	movlw	-16
 10247  014BAA  50E3               	movf	plusw1,w,c
 10248  014BAC  E115               	bnz	u10311
 10249  014BAE  0EF1               	movlw	-15
 10250  014BB0  50E3               	movf	plusw1,w,c
 10251  014BB2  E112               	bnz	u10311
 10252  014BB4  0EF2               	movlw	-14
 10253  014BB6  50E3               	movf	plusw1,w,c
 10254  014BB8  E10F               	bnz	u10311
 10255  014BBA  0EF3               	movlw	-13
 10256  014BBC  50E3               	movf	plusw1,w,c
 10257  014BBE  E10C               	bnz	u10311
 10258  014BC0  0EF4               	movlw	-12
 10259  014BC2  50E3               	movf	plusw1,w,c
 10260  014BC4  E109               	bnz	u10311
 10261  014BC6  0EF5               	movlw	-11
 10262  014BC8  50E3               	movf	plusw1,w,c
 10263  014BCA  E106               	bnz	u10311
 10264  014BCC  0EF6               	movlw	-10
 10265  014BCE  50E3               	movf	plusw1,w,c
 10266  014BD0  E103               	bnz	u10311
 10267  014BD2  0EF7               	movlw	-9
 10268  014BD4  50E3               	movf	plusw1,w,c
 10269  014BD6  A4D8               	btfss	status,2,c
 10270  014BD8                     u10311:
 10271  014BD8  D6EB               	goto	l10551
 10272                           
 10273                           ;stkvar	_p @ sp[(-20)+18]
 10274  014BDA  0EFF               	movlw	-1
 10275  014BDC  BEE3               	btfsc	plusw1,7,c
 10276  014BDE  D007               	goto	u10320
 10277  014BE0  0EFF               	movlw	-1
 10278  014BE2  50E3               	movf	plusw1,w,c
 10279  014BE4  E103               	bnz	u10321
 10280  014BE6  0EFE               	movlw	-2
 10281  014BE8  04E3               	decf	plusw1,w,c
 10282  014BEA  B0D8               	btfsc	status,0,c
 10283  014BEC                     u10321:
 10284  014BEC  D6E1               	goto	l10551
 10285  014BEE                     u10320:
 10286                           
 10287                           ;stkvar	_w @ sp[(-20)+16]
 10288  014BEE  0EFD               	movlw	-3
 10289  014BF0  BEE3               	btfsc	plusw1,7,c
 10290  014BF2  D009               	goto	u10340
 10291  014BF4  0EFD               	movlw	-3
 10292  014BF6  50E3               	movf	plusw1,w,c
 10293  014BF8  E104               	bnz	u10330
 10294  014BFA  0EFC               	movlw	-4
 10295  014BFC  04E3               	decf	plusw1,w,c
 10296  014BFE  A0D8               	btfss	status,0,c
 10297  014C00  D002               	goto	u10340
 10298  014C02                     u10330:
 10299  014C02  B20E               	btfsc	_flags^0,1,c
 10300  014C04  D6D5               	goto	l10551
 10301  014C06                     u10340:
 10302                           
 10303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10304  014C06  A80E               	btfss	_flags^0,4,c
 10305  014C08  D036               	goto	l10599
 10306                           
 10307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10308                           ;stkvar	_i @ sp[(-20)+14]
 10309  014C0A  50E1               	movf	fsr1l,w,c
 10310  014C0C  0FFA               	addlw	-6
 10311  014C0E  6ED9               	movwf	fsr2l,c
 10312  014C10  50E2               	movf	fsr1h,w,c
 10313  014C12  6EDA               	movwf	fsr2h,c
 10314  014C14  0EFF               	movlw	255
 10315  014C16  22DA               	addwfc	fsr2h,f,c
 10316  014C18  06DE               	decf	postinc2,f,c
 10317  014C1A  0E00               	movlw	0
 10318  014C1C  5ADD               	subwfb	postdec2,f,c
 10319                           
 10320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10321                           ;stkvar	_x @ sp[(-20)+-11]
 10322                           ;stkvar	_i @ sp[(-20)+14]
 10323  014C1E  0EFA               	movlw	-6
 10324  014C20  006F FF8C  F02F    	movff	plusw1,btemp+10
 10325  014C26  0EFB               	movlw	-5
 10326  014C28  006F FF8C  F030    	movff	plusw1,btemp+11
 10327  014C2E  0E94               	movlw	low _dbuf
 10328  014C30  242F               	addwf	(btemp+10)^0,w,c
 10329  014C32  6ED9               	movwf	fsr2l,c
 10330  014C34  0E03               	movlw	high _dbuf
 10331  014C36  2030               	addwfc	(btemp+11)^0,w,c
 10332  014C38  6EDA               	movwf	fsr2h,c
 10333  014C3A  0EE1               	movlw	-31
 10334  014C3C  006F FF8F FFDF     	movff	plusw1,indf2
 10335                           
 10336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10337                           ;stkvar	_i @ sp[(-20)+14]
 10338  014C42  50E1               	movf	fsr1l,w,c
 10339  014C44  0FFA               	addlw	-6
 10340  014C46  6ED9               	movwf	fsr2l,c
 10341  014C48  50E2               	movf	fsr1h,w,c
 10342  014C4A  6EDA               	movwf	fsr2h,c
 10343  014C4C  0EFF               	movlw	255
 10344  014C4E  22DA               	addwfc	fsr2h,f,c
 10345  014C50  06DE               	decf	postinc2,f,c
 10346  014C52  0E00               	movlw	0
 10347  014C54  5ADD               	subwfb	postdec2,f,c
 10348                           
 10349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10350                           ;stkvar	_i @ sp[(-20)+14]
 10351  014C56  0EFA               	movlw	-6
 10352  014C58  006F FF8C  F02F    	movff	plusw1,btemp+10
 10353  014C5E  0EFB               	movlw	-5
 10354  014C60  006F FF8C  F030    	movff	plusw1,btemp+11
 10355  014C66  0E94               	movlw	low _dbuf
 10356  014C68  242F               	addwf	(btemp+10)^0,w,c
 10357  014C6A  6ED9               	movwf	fsr2l,c
 10358  014C6C  0E03               	movlw	high _dbuf
 10359  014C6E  2030               	addwfc	(btemp+11)^0,w,c
 10360  014C70  6EDA               	movwf	fsr2h,c
 10361  014C72  0E30               	movlw	48
 10362  014C74  6EDF               	movwf	indf2,c
 10363  014C76                     l10599:
 10364                           
 10365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10366                           ;stkvar	_w @ sp[(-20)+16]
 10367  014C76  0EFC               	movlw	-4
 10368  014C78  006F FF8F FFE6     	movff	plusw1,postinc1
 10369  014C7E  006F FF8F FFE6     	movff	plusw1,postinc1
 10370                           
 10371                           ;stkvar	_i @ sp[(-22)+14]
 10372  014C84  0E94               	movlw	low _dbuf
 10373  014C86  6E2F               	movwf	(btemp+10)^0,c
 10374  014C88  0E03               	movlw	high _dbuf
 10375  014C8A  6E30               	movwf	(btemp+11)^0,c
 10376  014C8C  0EF8               	movlw	-8
 10377  014C8E  50E3               	movf	plusw1,w,c
 10378  014C90  262F               	addwf	(btemp+10)^0,f,c
 10379  014C92  0EF9               	movlw	-7
 10380  014C94  50E3               	movf	plusw1,w,c
 10381  014C96  2230               	addwfc	(btemp+11)^0,f,c
 10382  014C98  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 10383  014C9E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 10384                           
 10385                           ;stkvar	_fp @ sp[(-24)+-2]
 10386  014CA4  0EE6               	movlw	-26
 10387  014CA6  006F FF8F FFE6     	movff	plusw1,postinc1
 10388  014CAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10389  014CB2  ECE6  F0B8         	call	_pad	;wreg free
 10390                           
 10391                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10392  014CB6  0EE1               	movlw	225
 10393  014CB8  26E1               	addwf	fsr1l,f,c
 10394  014CBA  0EFF               	movlw	255
 10395  014CBC  22E2               	addwfc	fsr1h,f,c
 10396  014CBE  0012               	return		;funcret
 10397  014CC0                     __end_of_xtoa:
 10398                           	opt callstack 0
 10399                           
 10400 ;; *************** function _toupper *****************
 10401 ;; Defined at:
 10402 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  c               2  [STACK] int 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;		None
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  2  [STACK] int 
 10409 ;; Registers used:
 10410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/3
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10420 ;;Total ram usage:        0 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; Hardware stack levels required when called:    8
 10423 ;; This function calls:
 10424 ;;		_islower
 10425 ;; This function is called by:
 10426 ;;		_xtoa
 10427 ;; This function uses a reentrant model
 10428 ;;
 10429                           
 10430                           	psect	text43
 10431  0181E6                     __ptext43:
 10432                           	opt callstack 0
 10433  0181E6                     _toupper:
 10434                           	opt callstack 0
 10435                           
 10436                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10437  0181E6  52E6               	movf	postinc1,f,c
 10438  0181E8  52E6               	movf	postinc1,f,c
 10439                           
 10440                           ;stkvar	_c @ sp[(-2)+-2]
 10441                           
 10442                           ;incstack = 0
 10443  0181EA  0EFC               	movlw	-4
 10444  0181EC  50E3               	movf	plusw1,w,c
 10445  0181EE  0F9F               	addlw	159
 10446  0181F0  6E2F               	movwf	(btemp+10)^0,c
 10447  0181F2  0EFD               	movlw	-3
 10448  0181F4  006F FF8C  F030    	movff	plusw1,btemp+11
 10449  0181FA  0EFF               	movlw	255
 10450  0181FC  2230               	addwfc	(btemp+11)^0,f,c
 10451  0181FE  5030               	movf	(btemp+11)^0,w,c
 10452  018200  E106               	bnz	u5060
 10453  018202  0E1A               	movlw	26
 10454  018204  5C2F               	subwf	(btemp+10)^0,w,c
 10455  018206  B0D8               	btfsc	status,0,c
 10456  018208  D002               	goto	u5060
 10457  01820A  0E01               	movlw	1
 10458  01820C  D001               	goto	u5070
 10459  01820E                     u5060:
 10460  01820E  0E00               	movlw	0
 10461  018210                     u5070:
 10462  018210  6E2F               	movwf	(btemp+10)^0,c
 10463  018212  6A30               	clrf	(btemp+11)^0,c
 10464                           
 10465                           ;stkvar	_toupper$5681 @ sp[(-2)+0]
 10466  018214  0EFE               	movlw	-2
 10467  018216  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10468  01821C  0EFF               	movlw	-1
 10469  01821E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10470                           
 10471                           ;stkvar	_toupper$5681 @ sp[(-2)+0]
 10472  018224  0EFE               	movlw	-2
 10473  018226  006F FF8C  F025    	movff	plusw1,btemp
 10474  01822C  0EFF               	movlw	-1
 10475  01822E  50E3               	movf	plusw1,w,c
 10476  018230  1025               	iorwf	btemp^0,w,c
 10477  018232  B4D8               	btfsc	status,2,c
 10478  018234  D00D               	goto	l6743
 10479                           
 10480                           ;stkvar	_c @ sp[(-2)+-2]
 10481  018236  0EFC               	movlw	-4
 10482  018238  006F FF8C  F025    	movff	plusw1,btemp
 10483  01823E  0EFD               	movlw	-3
 10484  018240  006F FF8C  F026    	movff	plusw1,btemp+1
 10485  018246  0E5F               	movlw	95
 10486  018248  1625               	andwf	btemp^0,f,c
 10487  01824A  0E00               	movlw	0
 10488  01824C  1626               	andwf	(btemp+1)^0,f,c
 10489  01824E  D008               	goto	l3082
 10490  018250                     l6743:
 10491                           
 10492                           ;stkvar	_c @ sp[(-2)+-2]
 10493  018250  0EFC               	movlw	-4
 10494  018252  006F FF8C  F025    	movff	plusw1,btemp
 10495  018258  0EFD               	movlw	-3
 10496  01825A  006F FF8C  F026    	movff	plusw1,btemp+1
 10497  018260                     l3082:
 10498                           
 10499                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10500  018260  52E5               	movf	postdec1,f,c
 10501  018262  52E5               	movf	postdec1,f,c
 10502  018264  52E5               	movf	postdec1,f,c
 10503  018266  52E5               	movf	postdec1,f,c
 10504  018268  0012               	return		;funcret
 10505  01826A                     __end_of_toupper:
 10506                           	opt callstack 0
 10507                           
 10508 ;; *************** function _islower *****************
 10509 ;; Defined at:
 10510 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;  c               2  [STACK] int 
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;		None
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  2  [STACK] int 
 10517 ;; Registers used:
 10518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/0
 10521 ;;		On exit  : 0/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10528 ;;Total ram usage:        0 bytes
 10529 ;; Hardware stack levels used:    1
 10530 ;; Hardware stack levels required when called:    7
 10531 ;; This function calls:
 10532 ;;		Nothing
 10533 ;; This function is called by:
 10534 ;;		_toupper
 10535 ;; This function uses a reentrant model
 10536 ;;
 10537                           
 10538                           	psect	text44
 10539  018DE0                     __ptext44:
 10540                           	opt callstack 0
 10541  018DE0                     _islower:
 10542                           	opt callstack 15
 10543                           
 10544                           ;stkvar	_c @ sp[(0)+-2]
 10545                           
 10546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10547                           ;incstack = 0
 10548  018DE0  0EFE               	movlw	-2
 10549  018DE2  50E3               	movf	plusw1,w,c
 10550  018DE4  0F9F               	addlw	159
 10551  018DE6  6E2F               	movwf	(btemp+10)^0,c
 10552  018DE8  0EFF               	movlw	-1
 10553  018DEA  006F FF8C  F030    	movff	plusw1,btemp+11
 10554  018DF0  0EFF               	movlw	255
 10555  018DF2  2230               	addwfc	(btemp+11)^0,f,c
 10556  018DF4  5030               	movf	(btemp+11)^0,w,c
 10557  018DF6  E106               	bnz	u4750
 10558  018DF8  0E1A               	movlw	26
 10559  018DFA  5C2F               	subwf	(btemp+10)^0,w,c
 10560  018DFC  B0D8               	btfsc	status,0,c
 10561  018DFE  D002               	goto	u4750
 10562  018E00  0E01               	movlw	1
 10563  018E02  D001               	goto	u4760
 10564  018E04                     u4750:
 10565  018E04  0E00               	movlw	0
 10566  018E06                     u4760:
 10567  018E06  6E25               	movwf	btemp^0,c
 10568  018E08  6A26               	clrf	(btemp+1)^0,c
 10569                           
 10570                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10571  018E0A  52E5               	movf	postdec1,f,c
 10572  018E0C  52E5               	movf	postdec1,f,c
 10573  018E0E  0012               	return		;funcret
 10574  018E10                     __end_of_islower:
 10575                           	opt callstack 0
 10576                           
 10577 ;; *************** function _isalpha *****************
 10578 ;; Defined at:
 10579 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;  c               2  [STACK] int 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  2  [STACK] int 
 10586 ;; Registers used:
 10587 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10597 ;;Total ram usage:        0 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; Hardware stack levels required when called:    7
 10600 ;; This function calls:
 10601 ;;		Nothing
 10602 ;; This function is called by:
 10603 ;;		_xtoa
 10604 ;; This function uses a reentrant model
 10605 ;;
 10606                           
 10607                           	psect	text45
 10608  018AA6                     __ptext45:
 10609                           	opt callstack 0
 10610  018AA6                     _isalpha:
 10611                           	opt callstack 16
 10612                           
 10613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10614                           ;incstack = 0
 10615  018AA6  0E9F               	movlw	159
 10616  018AA8  6E2F               	movwf	(btemp+10)^0,c
 10617  018AAA  0EFF               	movlw	255
 10618  018AAC  6E30               	movwf	(btemp+11)^0,c
 10619                           
 10620                           ;stkvar	_c @ sp[(0)+-2]
 10621  018AAE  0EFE               	movlw	-2
 10622  018AB0  006F FF8C  F02D    	movff	plusw1,btemp+8
 10623  018AB6  0EFF               	movlw	-1
 10624  018AB8  006F FF8C  F02E    	movff	plusw1,btemp+9
 10625  018ABE  0E20               	movlw	32
 10626  018AC0  122D               	iorwf	(btemp+8)^0,f,c
 10627  018AC2  0E00               	movlw	0
 10628  018AC4  122E               	iorwf	(btemp+9)^0,f,c
 10629  018AC6  502F               	movf	(btemp+10)^0,w,c
 10630  018AC8  262D               	addwf	(btemp+8)^0,f,c
 10631  018ACA  5030               	movf	(btemp+11)^0,w,c
 10632  018ACC  222E               	addwfc	(btemp+9)^0,f,c
 10633  018ACE  502E               	movf	(btemp+9)^0,w,c
 10634  018AD0  E106               	bnz	u5040
 10635  018AD2  0E1A               	movlw	26
 10636  018AD4  5C2D               	subwf	(btemp+8)^0,w,c
 10637  018AD6  B0D8               	btfsc	status,0,c
 10638  018AD8  D002               	goto	u5040
 10639  018ADA  0E01               	movlw	1
 10640  018ADC  D001               	goto	u5050
 10641  018ADE                     u5040:
 10642  018ADE  0E00               	movlw	0
 10643  018AE0                     u5050:
 10644  018AE0  6E25               	movwf	btemp^0,c
 10645  018AE2  6A26               	clrf	(btemp+1)^0,c
 10646                           
 10647                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10648  018AE4  52E5               	movf	postdec1,f,c
 10649  018AE6  52E5               	movf	postdec1,f,c
 10650  018AE8  0012               	return		;funcret
 10651  018AEA                     __end_of_isalpha:
 10652                           	opt callstack 0
 10653                           
 10654 ;; *************** function _strncmp *****************
 10655 ;; Defined at:
 10656 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;  _l              2  [STACK] PTR const unsigned char 
 10659 ;;		 -> ct(3), 
 10660 ;;  _r              2  [STACK] PTR const unsigned char 
 10661 ;;		 -> STR_56(3), 
 10662 ;;  n               2  [STACK] unsigned int 
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;  r               2  [STACK] PTR const unsigned char 
 10665 ;;		 -> STR_56(3), 
 10666 ;;  l               2  [STACK] PTR const unsigned char 
 10667 ;;		 -> ct(3), 
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  2  [STACK] int 
 10670 ;; Registers used:
 10671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10681 ;;Total ram usage:        0 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    7
 10684 ;; This function calls:
 10685 ;;		Nothing
 10686 ;; This function is called by:
 10687 ;;		_vfpfcnvrt
 10688 ;; This function uses a reentrant model
 10689 ;;
 10690                           
 10691                           	psect	text46
 10692  0163FA                     __ptext46:
 10693                           	opt callstack 0
 10694  0163FA                     _strncmp:
 10695                           	opt callstack 0
 10696                           
 10697                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10698  0163FA  52E6               	movf	postinc1,f,c
 10699  0163FC  52E6               	movf	postinc1,f,c
 10700  0163FE  52E6               	movf	postinc1,f,c
 10701  016400  52E6               	movf	postinc1,f,c
 10702                           
 10703                           ;stkvar	__l @ sp[(-4)+-2]
 10704                           
 10705                           ;incstack = 0
 10706  016402  0EFA               	movlw	-6
 10707  016404  006F FF8C  F02F    	movff	plusw1,btemp+10
 10708  01640A  0EFB               	movlw	-5
 10709  01640C  006F FF8C  F030    	movff	plusw1,btemp+11
 10710                           
 10711                           ;stkvar	_l @ sp[(-4)+2]
 10712  016412  0EFF               	movlw	-1
 10713  016414  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10714  01641A  0EFE               	movlw	-2
 10715  01641C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10716                           
 10717                           ;stkvar	__r @ sp[(-4)+-4]
 10718  016422  0EF8               	movlw	-8
 10719  016424  006F FF8C  F02F    	movff	plusw1,btemp+10
 10720  01642A  0EF9               	movlw	-7
 10721  01642C  006F FF8C  F030    	movff	plusw1,btemp+11
 10722                           
 10723                           ;stkvar	_r @ sp[(-4)+0]
 10724  016432  0EFD               	movlw	-3
 10725  016434  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10726  01643A  0EFC               	movlw	-4
 10727  01643C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10728                           
 10729                           ;stkvar	_n @ sp[(-4)+-6]
 10730  016442  0EF6               	movlw	-10
 10731  016444  006F FF8C  F025    	movff	plusw1,btemp
 10732  01644A  0E01               	movlw	1
 10733  01644C  5E25               	subwf	btemp^0,f,c
 10734  01644E  0EF6               	movlw	-10
 10735  016450  0060  F097  FFE3   	movff	btemp,plusw1
 10736  016456  0EF7               	movlw	-9
 10737  016458  006F FF8C  F025    	movff	plusw1,btemp
 10738  01645E  0E00               	movlw	0
 10739  016460  5A25               	subwfb	btemp^0,f,c
 10740  016462  0EF7               	movlw	-9
 10741  016464  0060  F097  FFE3   	movff	btemp,plusw1
 10742  01646A  0EF6               	movlw	-10
 10743  01646C  28E3               	incf	plusw1,w,c
 10744  01646E  E13F               	bnz	l7521
 10745  016470  0EF7               	movlw	-9
 10746  016472  28E3               	incf	plusw1,w,c
 10747  016474  A4D8               	btfss	status,2,c
 10748  016476  D03B               	goto	l7521
 10749  016478  0E00               	movlw	0
 10750  01647A  6E25               	movwf	btemp^0,c
 10751  01647C  0E00               	movlw	0
 10752  01647E  6E26               	movwf	(btemp+1)^0,c
 10753  016480  D09B               	goto	l3054
 10754  016482                     l7519:
 10755                           
 10756                           ;stkvar	_l @ sp[(-4)+2]
 10757  016482  0EFE               	movlw	-2
 10758  016484  50E3               	movf	plusw1,w,c
 10759  016486  0F01               	addlw	1
 10760  016488  6E25               	movwf	btemp^0,c
 10761  01648A  0EFE               	movlw	-2
 10762  01648C  0060  F097  FFE3   	movff	btemp,plusw1
 10763  016492  6A25               	clrf	btemp^0,c
 10764  016494  0EFF               	movlw	-1
 10765  016496  50E3               	movf	plusw1,w,c
 10766  016498  2025               	addwfc	btemp^0,w,c
 10767  01649A  6E25               	movwf	btemp^0,c
 10768  01649C  0EFF               	movlw	-1
 10769  01649E  0060  F097  FFE3   	movff	btemp,plusw1
 10770                           
 10771                           ;stkvar	_r @ sp[(-4)+0]
 10772  0164A4  0EFC               	movlw	-4
 10773  0164A6  50E3               	movf	plusw1,w,c
 10774  0164A8  0F01               	addlw	1
 10775  0164AA  6E25               	movwf	btemp^0,c
 10776  0164AC  0EFC               	movlw	-4
 10777  0164AE  0060  F097  FFE3   	movff	btemp,plusw1
 10778  0164B4  6A25               	clrf	btemp^0,c
 10779  0164B6  0EFD               	movlw	-3
 10780  0164B8  50E3               	movf	plusw1,w,c
 10781  0164BA  2025               	addwfc	btemp^0,w,c
 10782  0164BC  6E25               	movwf	btemp^0,c
 10783  0164BE  0EFD               	movlw	-3
 10784  0164C0  0060  F097  FFE3   	movff	btemp,plusw1
 10785                           
 10786                           ;stkvar	_n @ sp[(-4)+-6]
 10787  0164C6  0EF6               	movlw	-10
 10788  0164C8  006F FF8C  F025    	movff	plusw1,btemp
 10789  0164CE  0E01               	movlw	1
 10790  0164D0  5E25               	subwf	btemp^0,f,c
 10791  0164D2  0EF6               	movlw	-10
 10792  0164D4  0060  F097  FFE3   	movff	btemp,plusw1
 10793  0164DA  0EF7               	movlw	-9
 10794  0164DC  006F FF8C  F025    	movff	plusw1,btemp
 10795  0164E2  0E00               	movlw	0
 10796  0164E4  5A25               	subwfb	btemp^0,f,c
 10797  0164E6  0EF7               	movlw	-9
 10798  0164E8  0060  F097  FFE3   	movff	btemp,plusw1
 10799  0164EE                     l7521:
 10800                           
 10801                           ;stkvar	_l @ sp[(-4)+2]
 10802  0164EE  0EFE               	movlw	-2
 10803  0164F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10804  0164F6  0EFF               	movlw	-1
 10805  0164F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10806  0164FE  50DF               	movf	indf2,w,c
 10807  016500  B4D8               	btfsc	status,2,c
 10808  016502  D03B               	goto	u6630
 10809                           
 10810                           ;stkvar	_r @ sp[(-4)+0]
 10811  016504  50E1               	movf	fsr1l,w,c
 10812  016506  0FFC               	addlw	-4
 10813  016508  6ED9               	movwf	fsr2l,c
 10814  01650A  50E2               	movf	fsr1h,w,c
 10815  01650C  6EDA               	movwf	fsr2h,c
 10816  01650E  0EFF               	movlw	255
 10817  016510  22DA               	addwfc	fsr2h,f,c
 10818  016512  006F FF7B FFF6     	movff	postinc2,tblptrl
 10819  016518  006F FF77 FFF7     	movff	postdec2,tblptrh
 10820  01651E                     	if	0	;tblptru may be non-zero
 10821  01651E                     	endif
 10822  01651E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10823  01651E  0E00               	movlw	low (__mediumconst shr (0+16))
 10824  016520  6EF8               	movwf	tblptru,c
 10825  016522                     	endif
 10826  016522  0008               	tblrd		*
 10827  016524  50F5               	movf	tablat,w,c
 10828  016526  0900               	iorlw	0
 10829  016528  B4D8               	btfsc	status,2,c
 10830  01652A  D027               	goto	u6630
 10831                           
 10832                           ;stkvar	_n @ sp[(-4)+-6]
 10833  01652C  0EF6               	movlw	-10
 10834  01652E  006F FF8C  F025    	movff	plusw1,btemp
 10835  016534  0EF7               	movlw	-9
 10836  016536  50E3               	movf	plusw1,w,c
 10837  016538  1025               	iorwf	btemp^0,w,c
 10838  01653A  B4D8               	btfsc	status,2,c
 10839  01653C  D01E               	goto	u6630
 10840                           
 10841                           ;stkvar	_l @ sp[(-4)+2]
 10842  01653E  0EFE               	movlw	-2
 10843  016540  006F FF8F FFD9     	movff	plusw1,fsr2l
 10844  016546  0EFF               	movlw	-1
 10845  016548  006F FF8F FFDA     	movff	plusw1,fsr2h
 10846  01654E  50DF               	movf	indf2,w,c
 10847  016550  6E30               	movwf	(btemp+11)^0,c
 10848                           
 10849                           ;stkvar	_r @ sp[(-4)+0]
 10850  016552  50E1               	movf	fsr1l,w,c
 10851  016554  0FFC               	addlw	-4
 10852  016556  6ED9               	movwf	fsr2l,c
 10853  016558  50E2               	movf	fsr1h,w,c
 10854  01655A  6EDA               	movwf	fsr2h,c
 10855  01655C  0EFF               	movlw	255
 10856  01655E  22DA               	addwfc	fsr2h,f,c
 10857  016560  006F FF7B FFF6     	movff	postinc2,tblptrl
 10858  016566  006F FF77 FFF7     	movff	postdec2,tblptrh
 10859  01656C                     	if	0	;tblptru may be non-zero
 10860  01656C                     	endif
 10861  01656C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10862  01656C  0E00               	movlw	low (__mediumconst shr (0+16))
 10863  01656E  6EF8               	movwf	tblptru,c
 10864  016570                     	endif
 10865  016570  0008               	tblrd		*
 10866  016572  50F5               	movf	tablat,w,c
 10867  016574  1830               	xorwf	(btemp+11)^0,w,c
 10868  016576  B4D8               	btfsc	status,2,c
 10869  016578  D784               	goto	l7519
 10870  01657A                     u6630:
 10871                           
 10872                           ;stkvar	_l @ sp[(-4)+2]
 10873  01657A  0EFE               	movlw	-2
 10874  01657C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10875  016582  0EFF               	movlw	-1
 10876  016584  006F FF8F FFDA     	movff	plusw1,fsr2h
 10877  01658A  50DF               	movf	indf2,w,c
 10878  01658C  6E25               	movwf	btemp^0,c
 10879  01658E  6A26               	clrf	(btemp+1)^0,c
 10880                           
 10881                           ;stkvar	_r @ sp[(-4)+0]
 10882  016590  50E1               	movf	fsr1l,w,c
 10883  016592  0FFC               	addlw	-4
 10884  016594  6ED9               	movwf	fsr2l,c
 10885  016596  50E2               	movf	fsr1h,w,c
 10886  016598  6EDA               	movwf	fsr2h,c
 10887  01659A  0EFF               	movlw	255
 10888  01659C  22DA               	addwfc	fsr2h,f,c
 10889  01659E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10890  0165A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 10891  0165AA                     	if	0	;tblptru may be non-zero
 10892  0165AA                     	endif
 10893  0165AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10894  0165AA  0E00               	movlw	low (__mediumconst shr (0+16))
 10895  0165AC  6EF8               	movwf	tblptru,c
 10896  0165AE                     	endif
 10897  0165AE  0008               	tblrd		*
 10898  0165B0  50F5               	movf	tablat,w,c
 10899  0165B2  5E25               	subwf	btemp^0,f,c
 10900  0165B4  0E00               	movlw	0
 10901  0165B6  5A26               	subwfb	(btemp+1)^0,f,c
 10902  0165B8                     l3054:
 10903                           
 10904                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10905  0165B8  0EF6               	movlw	246
 10906  0165BA  26E1               	addwf	fsr1l,f,c
 10907  0165BC  0EFF               	movlw	255
 10908  0165BE  22E2               	addwfc	fsr1h,f,c
 10909  0165C0  0012               	return		;funcret
 10910  0165C2                     __end_of_strncmp:
 10911                           	opt callstack 0
 10912                           
 10913 ;; *************** function _stoa *****************
 10914 ;; Defined at:
 10915 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10918 ;;		 -> f(6), NULL(0), 
 10919 ;;  s               2  [STACK] PTR unsigned char 
 10920 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10921 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 10922 ;;		 -> STR_3(6), V(188), 
 10923 ;; Auto vars:     Size  Location     Type
 10924 ;;  nuls            7  [STACK] unsigned char [7]
 10925 ;;  l               2  [STACK] int 
 10926 ;;  p               2  [STACK] int 
 10927 ;;  cp              2  [STACK] PTR unsigned char 
 10928 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10929 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 10930 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10931 ;;  w               2  [STACK] int 
 10932 ;;  i               2  [STACK] int 
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  2  [STACK] int 
 10935 ;; Registers used:
 10936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10946 ;;Total ram usage:        0 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; Hardware stack levels required when called:   10
 10949 ;; This function calls:
 10950 ;;		_fputc
 10951 ;;		_strlen
 10952 ;; This function is called by:
 10953 ;;		_vfpfcnvrt
 10954 ;; This function uses a reentrant model
 10955 ;;
 10956                           
 10957                           	psect	text47
 10958  0155F2                     __ptext47:
 10959                           	opt callstack 0
 10960  0155F2                     _stoa:
 10961                           	opt callstack 0
 10962                           
 10963                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10964  0155F2  0E11               	movlw	17
 10965  0155F4  26E1               	addwf	fsr1l,f,c
 10966  0155F6  0E00               	movlw	0
 10967  0155F8  22E2               	addwfc	fsr1h,f,c
 10968                           
 10969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10970                           
 10971                           ;incstack = 0
 10972  0155FA  EE20  F0EB         	lfsr	2,stoa@F1166
 10973                           
 10974                           ;stkvar	_nuls @ sp[(-17)+0]
 10975  0155FE  0E07               	movlw	7
 10976  015600  6E25               	movwf	btemp^0,c
 10977  015602  0EEF               	movlw	-17
 10978  015604                     us1008999:
 10979  015604  006F FF7B FFE3     	movff	postinc2,plusw1
 10980  01560A  28E8               	incf	wreg,w,c
 10981  01560C  2E25               	decfsz	btemp^0,f,c
 10982  01560E  D7FA               	bra	us1008999
 10983                           
 10984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10985                           ;stkvar	_s @ sp[(-17)+-4]
 10986  015610  0EEB               	movlw	-21
 10987  015612  006F FF8C  F02F    	movff	plusw1,btemp+10
 10988  015618  0EEC               	movlw	-20
 10989  01561A  006F FF8C  F030    	movff	plusw1,btemp+11
 10990                           
 10991                           ;stkvar	_cp @ sp[(-17)+11]
 10992  015620  0EFB               	movlw	-5
 10993  015622  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10994  015628  0EFA               	movlw	-6
 10995  01562A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10996                           
 10997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10998                           ;stkvar	_cp @ sp[(-17)+11]
 10999  015630  0EFA               	movlw	-6
 11000  015632  006F FF8C  F025    	movff	plusw1,btemp
 11001  015638  0EFB               	movlw	-5
 11002  01563A  50E3               	movf	plusw1,w,c
 11003  01563C  1025               	iorwf	btemp^0,w,c
 11004  01563E  A4D8               	btfss	status,2,c
 11005  015640  D00E               	goto	l10487
 11006                           
 11007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 11008                           ;stkvar	_nuls @ sp[(-17)+0]
 11009  015642  0EEF               	movlw	239
 11010  015644  24E1               	addwf	fsr1l,w,c
 11011  015646  6E2F               	movwf	(btemp+10)^0,c
 11012  015648  0EFF               	movlw	255
 11013  01564A  20E2               	addwfc	fsr1h,w,c
 11014  01564C  6E30               	movwf	(btemp+11)^0,c
 11015                           
 11016                           ;stkvar	_cp @ sp[(-17)+11]
 11017  01564E  0EFB               	movlw	-5
 11018  015650  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11019  015656  0EFA               	movlw	-6
 11020  015658  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11021  01565E                     l10487:
 11022                           
 11023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11024                           ;stkvar	_cp @ sp[(-17)+11]
 11025  01565E  0EFA               	movlw	-6
 11026  015660  006F FF8F FFE6     	movff	plusw1,postinc1
 11027  015666  006F FF8F FFE6     	movff	plusw1,postinc1
 11028  01566C  EC38  F0BF         	call	_strlen	;wreg free
 11029                           
 11030                           ;stkvar	_l @ sp[(-17)+7]
 11031  015670  0EF6               	movlw	-10
 11032  015672  0060  F097  FFE3   	movff	btemp,plusw1
 11033  015678  0EF7               	movlw	-9
 11034  01567A  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11035                           
 11036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11037                           ;stkvar	_p @ sp[(-17)+9]
 11038  015680  0EF8               	movlw	-8
 11039  015682  0060  F033  FFE3   	movff	_prec,plusw1
 11040  015688  0EF9               	movlw	-7
 11041  01568A  0060  F037  FFE3   	movff	_prec+1,plusw1
 11042                           
 11043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11044                           ;stkvar	_p @ sp[(-17)+9]
 11045  015690  0EF9               	movlw	-7
 11046  015692  BEE3               	btfsc	plusw1,7,c
 11047  015694  D023               	goto	l2128
 11048                           
 11049                           ;stkvar	_l @ sp[(-17)+7]
 11050                           ;stkvar	_p @ sp[(-17)+9]
 11051  015696  50E1               	movf	fsr1l,w,c
 11052  015698  0FF8               	addlw	-8
 11053  01569A  6ED9               	movwf	fsr2l,c
 11054  01569C  50E2               	movf	fsr1h,w,c
 11055  01569E  6EDA               	movwf	fsr2h,c
 11056  0156A0  0EFF               	movlw	255
 11057  0156A2  22DA               	addwfc	fsr2h,f,c
 11058  0156A4  0EF6               	movlw	-10
 11059  0156A6  50E3               	movf	plusw1,w,c
 11060  0156A8  5CDE               	subwf	postinc2,w,c
 11061  0156AA  50DE               	movf	postinc2,w,c
 11062  0156AC  0A80               	xorlw	128
 11063  0156AE  6E25               	movwf	btemp^0,c
 11064  0156B0  0EF7               	movlw	-9
 11065  0156B2  50E3               	movf	plusw1,w,c
 11066  0156B4  0A80               	xorlw	128
 11067  0156B6  5825               	subwfb	btemp^0,w,c
 11068  0156B8  B0D8               	btfsc	status,0,c
 11069  0156BA  D010               	goto	l2128
 11070                           
 11071                           ;stkvar	_p @ sp[(-17)+9]
 11072                           ;stkvar	_l @ sp[(-17)+7]
 11073  0156BC  0EF8               	movlw	-8
 11074  0156BE  006F FF8C  F025    	movff	plusw1,btemp
 11075  0156C4  0EF6               	movlw	-10
 11076  0156C6  0060  F097  FFE3   	movff	btemp,plusw1
 11077  0156CC  0EF9               	movlw	-7
 11078  0156CE  006F FF8C  F025    	movff	plusw1,btemp
 11079  0156D4  0EF7               	movlw	-9
 11080  0156D6  0060  F097  FFE3   	movff	btemp,plusw1
 11081  0156DC                     l2128:
 11082                           
 11083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11084                           ;stkvar	_l @ sp[(-17)+7]
 11085                           ;stkvar	_p @ sp[(-17)+9]
 11086  0156DC  0EF6               	movlw	-10
 11087  0156DE  006F FF8C  F025    	movff	plusw1,btemp
 11088  0156E4  0EF8               	movlw	-8
 11089  0156E6  0060  F097  FFE3   	movff	btemp,plusw1
 11090  0156EC  0EF7               	movlw	-9
 11091  0156EE  006F FF8C  F025    	movff	plusw1,btemp
 11092  0156F4  0EF9               	movlw	-7
 11093  0156F6  0060  F097  FFE3   	movff	btemp,plusw1
 11094                           
 11095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11096                           ;stkvar	_w @ sp[(-17)+13]
 11097  0156FC  0EFC               	movlw	-4
 11098  0156FE  0060  F02B  FFE3   	movff	_width,plusw1
 11099  015704  0EFD               	movlw	-3
 11100  015706  0060  F02F  FFE3   	movff	_width+1,plusw1
 11101                           
 11102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11103  01570C  A00E               	btfss	_flags^0,0,c
 11104  01570E  D01F               	goto	l10507
 11105  015710  D031               	goto	u10130
 11106  015712                     l10503:
 11107                           
 11108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11109                           ;stkvar	_fp @ sp[(-17)+-2]
 11110  015712  0EED               	movlw	-19
 11111  015714  006F FF8F FFE6     	movff	plusw1,postinc1
 11112  01571A  006F FF8F FFE6     	movff	plusw1,postinc1
 11113  015720  0E20               	movlw	32
 11114  015722  6EE6               	movwf	postinc1,c
 11115  015724  0E00               	movlw	0
 11116  015726  6EE6               	movwf	postinc1,c
 11117  015728  ECC8  F0B7         	call	_fputc	;wreg free
 11118                           
 11119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11120                           ;stkvar	_l @ sp[(-17)+7]
 11121  01572C  0EF6               	movlw	-10
 11122  01572E  50E3               	movf	plusw1,w,c
 11123  015730  0F01               	addlw	1
 11124  015732  6E25               	movwf	btemp^0,c
 11125  015734  0EF6               	movlw	-10
 11126  015736  0060  F097  FFE3   	movff	btemp,plusw1
 11127  01573C  6A25               	clrf	btemp^0,c
 11128  01573E  0EF7               	movlw	-9
 11129  015740  50E3               	movf	plusw1,w,c
 11130  015742  2025               	addwfc	btemp^0,w,c
 11131  015744  6E25               	movwf	btemp^0,c
 11132  015746  0EF7               	movlw	-9
 11133  015748  0060  F097  FFE3   	movff	btemp,plusw1
 11134  01574E                     l10507:
 11135                           
 11136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11137                           ;stkvar	_w @ sp[(-17)+13]
 11138                           ;stkvar	_l @ sp[(-17)+7]
 11139  01574E  50E1               	movf	fsr1l,w,c
 11140  015750  0FF6               	addlw	-10
 11141  015752  6ED9               	movwf	fsr2l,c
 11142  015754  50E2               	movf	fsr1h,w,c
 11143  015756  6EDA               	movwf	fsr2h,c
 11144  015758  0EFF               	movlw	255
 11145  01575A  22DA               	addwfc	fsr2h,f,c
 11146  01575C  0EFC               	movlw	-4
 11147  01575E  50E3               	movf	plusw1,w,c
 11148  015760  5CDE               	subwf	postinc2,w,c
 11149  015762  50DE               	movf	postinc2,w,c
 11150  015764  0A80               	xorlw	128
 11151  015766  6E25               	movwf	btemp^0,c
 11152  015768  0EFD               	movlw	-3
 11153  01576A  50E3               	movf	plusw1,w,c
 11154  01576C  0A80               	xorlw	128
 11155  01576E  5825               	subwfb	btemp^0,w,c
 11156  015770  A0D8               	btfss	status,0,c
 11157  015772  D7CF               	goto	l10503
 11158  015774                     u10130:
 11159                           
 11160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11161                           ;stkvar	_i @ sp[(-17)+15]
 11162  015774  0EFE               	movlw	-2
 11163  015776  6AE3               	clrf	plusw1,c
 11164  015778  0EFF               	movlw	-1
 11165  01577A  6AE3               	clrf	plusw1,c
 11166                           
 11167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11168  01577C  D045               	goto	l10517
 11169  01577E                     l10511:
 11170                           
 11171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11172                           ;stkvar	_fp @ sp[(-17)+-2]
 11173  01577E  0EED               	movlw	-19
 11174  015780  006F FF8F FFE6     	movff	plusw1,postinc1
 11175  015786  006F FF8F FFE6     	movff	plusw1,postinc1
 11176                           
 11177                           ;stkvar	_cp @ sp[(-19)+11]
 11178  01578C  0EF8               	movlw	-8
 11179  01578E  006F FF8F FFF6     	movff	plusw1,tblptrl
 11180  015794  0EF9               	movlw	-7
 11181  015796  006F FF8F FFF7     	movff	plusw1,tblptrh
 11182  01579C  0E00               	movlw	low (__mediumconst shr (0+16))
 11183  01579E  6EF8               	movwf	tblptru,c
 11184  0157A0  0E1F               	movlw	(high __ramtop+-1)
 11185  0157A2  64F7               	cpfsgt	tblptrh,c
 11186  0157A4  D003               	bra	u10147
 11187  0157A6  0008               	tblrd		*
 11188  0157A8  50F5               	movf	tablat,w,c
 11189  0157AA  D007               	bra	u10140
 11190  0157AC                     u10147:
 11191  0157AC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11192  0157B2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11193  0157B8  50EF               	movf	indf0,w,c
 11194  0157BA                     u10140:
 11195  0157BA  6EE6               	movwf	postinc1,c
 11196  0157BC  0E00               	movlw	0
 11197  0157BE  6EE6               	movwf	postinc1,c
 11198  0157C0  ECC8  F0B7         	call	_fputc	;wreg free
 11199                           
 11200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11201                           ;stkvar	_cp @ sp[(-17)+11]
 11202  0157C4  0EFA               	movlw	-6
 11203  0157C6  50E3               	movf	plusw1,w,c
 11204  0157C8  0F01               	addlw	1
 11205  0157CA  6E25               	movwf	btemp^0,c
 11206  0157CC  0EFA               	movlw	-6
 11207  0157CE  0060  F097  FFE3   	movff	btemp,plusw1
 11208  0157D4  6A25               	clrf	btemp^0,c
 11209  0157D6  0EFB               	movlw	-5
 11210  0157D8  50E3               	movf	plusw1,w,c
 11211  0157DA  2025               	addwfc	btemp^0,w,c
 11212  0157DC  6E25               	movwf	btemp^0,c
 11213  0157DE  0EFB               	movlw	-5
 11214  0157E0  0060  F097  FFE3   	movff	btemp,plusw1
 11215                           
 11216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11217                           ;stkvar	_i @ sp[(-17)+15]
 11218  0157E6  0EFE               	movlw	-2
 11219  0157E8  50E3               	movf	plusw1,w,c
 11220  0157EA  0F01               	addlw	1
 11221  0157EC  6E25               	movwf	btemp^0,c
 11222  0157EE  0EFE               	movlw	-2
 11223  0157F0  0060  F097  FFE3   	movff	btemp,plusw1
 11224  0157F6  6A25               	clrf	btemp^0,c
 11225  0157F8  0EFF               	movlw	-1
 11226  0157FA  50E3               	movf	plusw1,w,c
 11227  0157FC  2025               	addwfc	btemp^0,w,c
 11228  0157FE  6E25               	movwf	btemp^0,c
 11229  015800  0EFF               	movlw	-1
 11230  015802  0060  F097  FFE3   	movff	btemp,plusw1
 11231  015808                     l10517:
 11232                           
 11233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11234                           ;stkvar	_p @ sp[(-17)+9]
 11235                           ;stkvar	_i @ sp[(-17)+15]
 11236  015808  50E1               	movf	fsr1l,w,c
 11237  01580A  0FFE               	addlw	-2
 11238  01580C  6ED9               	movwf	fsr2l,c
 11239  01580E  50E2               	movf	fsr1h,w,c
 11240  015810  6EDA               	movwf	fsr2h,c
 11241  015812  0EFF               	movlw	255
 11242  015814  22DA               	addwfc	fsr2h,f,c
 11243  015816  0EF8               	movlw	-8
 11244  015818  50E3               	movf	plusw1,w,c
 11245  01581A  5CDE               	subwf	postinc2,w,c
 11246  01581C  50DE               	movf	postinc2,w,c
 11247  01581E  0A80               	xorlw	128
 11248  015820  6E25               	movwf	btemp^0,c
 11249  015822  0EF9               	movlw	-7
 11250  015824  50E3               	movf	plusw1,w,c
 11251  015826  0A80               	xorlw	128
 11252  015828  5825               	subwfb	btemp^0,w,c
 11253  01582A  A0D8               	btfss	status,0,c
 11254  01582C  D7A8               	goto	l10511
 11255                           
 11256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11257  01582E  B00E               	btfsc	_flags^0,0,c
 11258  015830  D01F               	goto	l10525
 11259  015832  D031               	goto	u10170
 11260  015834                     l10521:
 11261                           
 11262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11263                           ;stkvar	_fp @ sp[(-17)+-2]
 11264  015834  0EED               	movlw	-19
 11265  015836  006F FF8F FFE6     	movff	plusw1,postinc1
 11266  01583C  006F FF8F FFE6     	movff	plusw1,postinc1
 11267  015842  0E20               	movlw	32
 11268  015844  6EE6               	movwf	postinc1,c
 11269  015846  0E00               	movlw	0
 11270  015848  6EE6               	movwf	postinc1,c
 11271  01584A  ECC8  F0B7         	call	_fputc	;wreg free
 11272                           
 11273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11274                           ;stkvar	_l @ sp[(-17)+7]
 11275  01584E  0EF6               	movlw	-10
 11276  015850  50E3               	movf	plusw1,w,c
 11277  015852  0F01               	addlw	1
 11278  015854  6E25               	movwf	btemp^0,c
 11279  015856  0EF6               	movlw	-10
 11280  015858  0060  F097  FFE3   	movff	btemp,plusw1
 11281  01585E  6A25               	clrf	btemp^0,c
 11282  015860  0EF7               	movlw	-9
 11283  015862  50E3               	movf	plusw1,w,c
 11284  015864  2025               	addwfc	btemp^0,w,c
 11285  015866  6E25               	movwf	btemp^0,c
 11286  015868  0EF7               	movlw	-9
 11287  01586A  0060  F097  FFE3   	movff	btemp,plusw1
 11288  015870                     l10525:
 11289                           
 11290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11291                           ;stkvar	_w @ sp[(-17)+13]
 11292                           ;stkvar	_l @ sp[(-17)+7]
 11293  015870  50E1               	movf	fsr1l,w,c
 11294  015872  0FF6               	addlw	-10
 11295  015874  6ED9               	movwf	fsr2l,c
 11296  015876  50E2               	movf	fsr1h,w,c
 11297  015878  6EDA               	movwf	fsr2h,c
 11298  01587A  0EFF               	movlw	255
 11299  01587C  22DA               	addwfc	fsr2h,f,c
 11300  01587E  0EFC               	movlw	-4
 11301  015880  50E3               	movf	plusw1,w,c
 11302  015882  5CDE               	subwf	postinc2,w,c
 11303  015884  50DE               	movf	postinc2,w,c
 11304  015886  0A80               	xorlw	128
 11305  015888  6E25               	movwf	btemp^0,c
 11306  01588A  0EFD               	movlw	-3
 11307  01588C  50E3               	movf	plusw1,w,c
 11308  01588E  0A80               	xorlw	128
 11309  015890  5825               	subwfb	btemp^0,w,c
 11310  015892  A0D8               	btfss	status,0,c
 11311  015894  D7CF               	goto	l10521
 11312  015896                     u10170:
 11313                           
 11314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11315                           ;stkvar	_l @ sp[(-17)+7]
 11316  015896  0EF6               	movlw	-10
 11317  015898  006F FF8C  F025    	movff	plusw1,btemp
 11318  01589E  0EF7               	movlw	-9
 11319  0158A0  006F FF8C  F026    	movff	plusw1,btemp+1
 11320                           
 11321                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11322  0158A6  0EEB               	movlw	235
 11323  0158A8  26E1               	addwf	fsr1l,f,c
 11324  0158AA  0EFF               	movlw	255
 11325  0158AC  22E2               	addwfc	fsr1h,f,c
 11326  0158AE  0012               	return		;funcret
 11327  0158B0                     __end_of_stoa:
 11328                           	opt callstack 0
 11329                           
 11330 ;; *************** function _efgtoa *****************
 11331 ;; Defined at:
 11332 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11335 ;;		 -> f(6), NULL(0), 
 11336 ;;  f               4  [STACK] PTR struct _IO_FILE
 11337 ;;  c               1  [STACK] unsigned char 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  u               4  [STACK] unsigned char 
 11340 ;;  g               4  [STACK] unsigned char 
 11341 ;;  l               4  [STACK] unsigned char 
 11342 ;;  h               4  [STACK] unsigned char 
 11343 ;;  ou              4  [STACK] unsigned char 
 11344 ;;  n               2  [STACK] int 
 11345 ;;  e               2  [STACK] int 
 11346 ;;  i               2  [STACK] int 
 11347 ;;  w               2  [STACK] int 
 11348 ;;  p               2  [STACK] int 
 11349 ;;  sign            2  [STACK] int 
 11350 ;;  d               2  [STACK] int 
 11351 ;;  ne              2  [STACK] int 
 11352 ;;  m               2  [STACK] int 
 11353 ;;  pp              2  [STACK] int 
 11354 ;;  t               2  [STACK] int 
 11355 ;;  mode            1  [STACK] unsigned char 
 11356 ;;  nmode           1  [STACK] unsigned char 
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  2  [STACK] int 
 11359 ;; Registers used:
 11360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11361 ;; Tracked objects:
 11362 ;;		On entry : 0/0
 11363 ;;		On exit  : 0/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11370 ;;Total ram usage:        0 bytes
 11371 ;; Hardware stack levels used:    1
 11372 ;; Hardware stack levels required when called:   12
 11373 ;; This function calls:
 11374 ;;		___awdiv
 11375 ;;		___awmod
 11376 ;;		___fladd
 11377 ;;		___fldiv
 11378 ;;		___fleq
 11379 ;;		___flge
 11380 ;;		___flmul
 11381 ;;		___flneg
 11382 ;;		___flsub
 11383 ;;		___fltol
 11384 ;;		___fpclassifyf
 11385 ;;		_floorf
 11386 ;;		_isupper
 11387 ;;		_pad
 11388 ;;		_strcpy
 11389 ;;		_tolower
 11390 ;; This function is called by:
 11391 ;;		_vfpfcnvrt
 11392 ;; This function uses a reentrant model
 11393 ;;
 11394                           
 11395                           	psect	text48
 11396  010000                     __ptext48:
 11397                           	opt callstack 0
 11398  010000                     _efgtoa:
 11399                           	opt callstack 0
 11400                           
 11401                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11402  010000  0E38               	movlw	56
 11403  010002  26E1               	addwf	fsr1l,f,c
 11404  010004  0E00               	movlw	0
 11405  010006  22E2               	addwfc	fsr1h,f,c
 11406                           
 11407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11408                           ;stkvar	_sign @ sp[(-56)+42]
 11409                           
 11410                           ;incstack = 0
 11411  010008  0EF2               	movlw	-14
 11412  01000A  6AE3               	clrf	plusw1,c
 11413  01000C  0EF3               	movlw	-13
 11414  01000E  6AE3               	clrf	plusw1,c
 11415                           
 11416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11417                           ;stkvar	_f @ sp[(-56)+-6]
 11418  010010  0EC2               	movlw	-62
 11419  010012  006F FF8C  F02D    	movff	plusw1,btemp+8
 11420  010018  0EC3               	movlw	-61
 11421  01001A  006F FF8C  F02E    	movff	plusw1,btemp+9
 11422  010020  0EC4               	movlw	-60
 11423  010022  006F FF8C  F02F    	movff	plusw1,btemp+10
 11424  010028  0EC5               	movlw	-59
 11425  01002A  006F FF8C  F030    	movff	plusw1,btemp+11
 11426                           
 11427                           ;stkvar	_g @ sp[(-56)+16]
 11428  010030  0ED8               	movlw	-40
 11429  010032  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11430  010038  0ED9               	movlw	-39
 11431  01003A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11432  010040  0EDA               	movlw	-38
 11433  010042  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11434  010048  0EDB               	movlw	-37
 11435  01004A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11436                           
 11437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11438                           ;stkvar	_g @ sp[(-56)+16]
 11439  010050  0EDB               	movlw	-37
 11440  010052  AEE3               	btfss	plusw1,7,c
 11441  010054  D02B               	goto	l10185
 11442                           
 11443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11444  010056  0E01               	movlw	1
 11445  010058  6E2F               	movwf	(btemp+10)^0,c
 11446  01005A  0E00               	movlw	0
 11447  01005C  6E30               	movwf	(btemp+11)^0,c
 11448                           
 11449                           ;stkvar	_sign @ sp[(-56)+42]
 11450  01005E  0EF2               	movlw	-14
 11451  010060  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11452  010066  0EF3               	movlw	-13
 11453  010068  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11454                           
 11455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11456                           ;stkvar	_g @ sp[(-56)+16]
 11457  01006E  0ED8               	movlw	-40
 11458  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11459  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11460  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11461  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11462  010088  ECA3  F0C4         	call	___flneg	;wreg free
 11463                           
 11464                           ;stkvar	_g @ sp[(-56)+16]
 11465  01008C  0ED8               	movlw	-40
 11466  01008E  0060  F097  FFE3   	movff	btemp,plusw1
 11467  010094  0ED9               	movlw	-39
 11468  010096  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11469  01009C  0EDA               	movlw	-38
 11470  01009E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11471  0100A4  0EDB               	movlw	-37
 11472  0100A6  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11473  0100AC                     l10185:
 11474                           
 11475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11476                           ;stkvar	_n @ sp[(-56)+32]
 11477  0100AC  0EE8               	movlw	-24
 11478  0100AE  6AE3               	clrf	plusw1,c
 11479  0100B0  0EE9               	movlw	-23
 11480  0100B2  6AE3               	clrf	plusw1,c
 11481                           
 11482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11483                           ;stkvar	_w @ sp[(-56)+38]
 11484  0100B4  0EEE               	movlw	-18
 11485  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 11486  0100BC  0EEF               	movlw	-17
 11487  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 11488                           
 11489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11490                           ;stkvar	_sign @ sp[(-56)+42]
 11491  0100C4  0EF2               	movlw	-14
 11492  0100C6  006F FF8C  F025    	movff	plusw1,btemp
 11493  0100CC  0EF3               	movlw	-13
 11494  0100CE  50E3               	movf	plusw1,w,c
 11495  0100D0  1025               	iorwf	btemp^0,w,c
 11496  0100D2  A4D8               	btfss	status,2,c
 11497  0100D4  D002               	goto	u9580
 11498  0100D6  A40E               	btfss	_flags^0,2,c
 11499  0100D8  D036               	goto	l10205
 11500  0100DA                     u9580:
 11501                           
 11502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11503                           ;stkvar	_sign @ sp[(-56)+42]
 11504  0100DA  0EF2               	movlw	-14
 11505  0100DC  006F FF8C  F025    	movff	plusw1,btemp
 11506  0100E2  0EF3               	movlw	-13
 11507  0100E4  50E3               	movf	plusw1,w,c
 11508  0100E6  1025               	iorwf	btemp^0,w,c
 11509  0100E8  A4D8               	btfss	status,2,c
 11510  0100EA  D002               	goto	l10197
 11511  0100EC  0E2B               	movlw	43
 11512  0100EE  D001               	goto	L9
 11513  0100F0                     l10197:
 11514  0100F0  0E2D               	movlw	45
 11515  0100F2                     L9:
 11516  0100F2  6E2F               	movwf	(btemp+10)^0,c
 11517  0100F4  0E00               	movlw	0
 11518  0100F6  6E30               	movwf	(btemp+11)^0,c
 11519                           
 11520                           ;stkvar	_efgtoa$4989 @ sp[(-56)+10]
 11521  0100F8  0ED2               	movlw	-46
 11522  0100FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11523  010100  0ED3               	movlw	-45
 11524  010102  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11525                           
 11526                           ;stkvar	_efgtoa$4989 @ sp[(-56)+10]
 11527  010108  0ED2               	movlw	-46
 11528  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 11529                           
 11530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11531                           ;stkvar	_n @ sp[(-56)+32]
 11532  010110  0EE8               	movlw	-24
 11533  010112  50E3               	movf	plusw1,w,c
 11534  010114  0F01               	addlw	1
 11535  010116  6E25               	movwf	btemp^0,c
 11536  010118  0EE8               	movlw	-24
 11537  01011A  0060  F097  FFE3   	movff	btemp,plusw1
 11538  010120  6A25               	clrf	btemp^0,c
 11539  010122  0EE9               	movlw	-23
 11540  010124  50E3               	movf	plusw1,w,c
 11541  010126  2025               	addwfc	btemp^0,w,c
 11542  010128  6E25               	movwf	btemp^0,c
 11543  01012A  0EE9               	movlw	-23
 11544  01012C  0060  F097  FFE3   	movff	btemp,plusw1
 11545                           
 11546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11547                           ;stkvar	_w @ sp[(-56)+38]
 11548  010132  50E1               	movf	fsr1l,w,c
 11549  010134  0FEE               	addlw	-18
 11550  010136  6ED9               	movwf	fsr2l,c
 11551  010138  50E2               	movf	fsr1h,w,c
 11552  01013A  6EDA               	movwf	fsr2h,c
 11553  01013C  0EFF               	movlw	255
 11554  01013E  22DA               	addwfc	fsr2h,f,c
 11555  010140  06DE               	decf	postinc2,f,c
 11556  010142  0E00               	movlw	0
 11557  010144  5ADD               	subwfb	postdec2,f,c
 11558  010146                     l10205:
 11559                           
 11560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11561                           ;stkvar	_g @ sp[(-56)+16]
 11562  010146  0ED8               	movlw	-40
 11563  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11564  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11565  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11566  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11567  010160  ECC1  F0B3         	call	___fpclassifyf	;wreg free
 11568  010164  0425               	decf	btemp^0,w,c
 11569  010166  1026               	iorwf	(btemp+1)^0,w,c
 11570  010168  A4D8               	btfss	status,2,c
 11571  01016A  D076               	goto	l10223
 11572  01016C  0EBF               	movlw	191
 11573  01016E  6E2F               	movwf	(btemp+10)^0,c
 11574  010170  0EFF               	movlw	255
 11575  010172  6E30               	movwf	(btemp+11)^0,c
 11576                           
 11577                           ;stkvar	_c @ sp[(-56)+-7]
 11578  010174  0EC1               	movlw	-63
 11579  010176  50E3               	movf	plusw1,w,c
 11580  010178  6E2D               	movwf	(btemp+8)^0,c
 11581  01017A  6A2E               	clrf	(btemp+9)^0,c
 11582  01017C  502F               	movf	(btemp+10)^0,w,c
 11583  01017E  262D               	addwf	(btemp+8)^0,f,c
 11584  010180  5030               	movf	(btemp+11)^0,w,c
 11585  010182  222E               	addwfc	(btemp+9)^0,f,c
 11586  010184  502E               	movf	(btemp+9)^0,w,c
 11587  010186  E106               	bnz	u9610
 11588  010188  0E1A               	movlw	26
 11589  01018A  5C2D               	subwf	(btemp+8)^0,w,c
 11590  01018C  B0D8               	btfsc	status,0,c
 11591  01018E  D002               	goto	u9610
 11592  010190  0E01               	movlw	1
 11593  010192  D001               	goto	u9620
 11594  010194                     u9610:
 11595  010194  0E00               	movlw	0
 11596  010196                     u9620:
 11597  010196  6E2F               	movwf	(btemp+10)^0,c
 11598  010198  6A30               	clrf	(btemp+11)^0,c
 11599                           
 11600                           ;stkvar	_efgtoa$4990 @ sp[(-56)+8]
 11601  01019A  0ED0               	movlw	-48
 11602  01019C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11603  0101A2  0ED1               	movlw	-47
 11604  0101A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11605                           
 11606                           ;stkvar	_efgtoa$4990 @ sp[(-56)+8]
 11607  0101AA  0ED0               	movlw	-48
 11608  0101AC  006F FF8C  F025    	movff	plusw1,btemp
 11609  0101B2  0ED1               	movlw	-47
 11610  0101B4  50E3               	movf	plusw1,w,c
 11611  0101B6  1025               	iorwf	btemp^0,w,c
 11612  0101B8  B4D8               	btfsc	status,2,c
 11613  0101BA  D017               	goto	l10215
 11614                           
 11615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11616  0101BC  0EE6               	movlw	low STR_46
 11617  0101BE  6EE6               	movwf	postinc1,c
 11618  0101C0  0EFF               	movlw	high STR_46
 11619  0101C2  6EE6               	movwf	postinc1,c
 11620                           
 11621                           ;stkvar	_n @ sp[(-58)+32]
 11622  0101C4  0E94               	movlw	low _dbuf
 11623  0101C6  6E2F               	movwf	(btemp+10)^0,c
 11624  0101C8  0E03               	movlw	high _dbuf
 11625  0101CA  6E30               	movwf	(btemp+11)^0,c
 11626  0101CC  0EE6               	movlw	-26
 11627  0101CE  50E3               	movf	plusw1,w,c
 11628  0101D0  262F               	addwf	(btemp+10)^0,f,c
 11629  0101D2  0EE7               	movlw	-25
 11630  0101D4  50E3               	movf	plusw1,w,c
 11631  0101D6  2230               	addwfc	(btemp+11)^0,f,c
 11632  0101D8  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11633  0101DE  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11634  0101E4  ECF1  F0BB         	call	_strcpy	;wreg free
 11635                           
 11636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11637  0101E8  D016               	goto	l10217
 11638  0101EA                     l10215:
 11639                           
 11640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11641  0101EA  0EEE               	movlw	low STR_47
 11642  0101EC  6EE6               	movwf	postinc1,c
 11643  0101EE  0EFF               	movlw	high STR_47
 11644  0101F0  6EE6               	movwf	postinc1,c
 11645                           
 11646                           ;stkvar	_n @ sp[(-58)+32]
 11647  0101F2  0E94               	movlw	low _dbuf
 11648  0101F4  6E2F               	movwf	(btemp+10)^0,c
 11649  0101F6  0E03               	movlw	high _dbuf
 11650  0101F8  6E30               	movwf	(btemp+11)^0,c
 11651  0101FA  0EE6               	movlw	-26
 11652  0101FC  50E3               	movf	plusw1,w,c
 11653  0101FE  262F               	addwf	(btemp+10)^0,f,c
 11654  010200  0EE7               	movlw	-25
 11655  010202  50E3               	movf	plusw1,w,c
 11656  010204  2230               	addwfc	(btemp+11)^0,f,c
 11657  010206  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11658  01020C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11659  010212  ECF1  F0BB         	call	_strcpy	;wreg free
 11660  010216                     l10217:
 11661                           
 11662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11663                           ;stkvar	_w @ sp[(-56)+38]
 11664  010216  50E1               	movf	fsr1l,w,c
 11665  010218  0FEE               	addlw	-18
 11666  01021A  6ED9               	movwf	fsr2l,c
 11667  01021C  50E2               	movf	fsr1h,w,c
 11668  01021E  6EDA               	movwf	fsr2h,c
 11669  010220  0EFF               	movlw	255
 11670  010222  22DA               	addwfc	fsr2h,f,c
 11671  010224  0EFD               	movlw	253
 11672  010226  26DE               	addwf	postinc2,f,c
 11673  010228  0EFF               	movlw	255
 11674  01022A  22DD               	addwfc	postdec2,f,c
 11675  01022C                     l10219:
 11676                           
 11677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11678                           ;stkvar	_w @ sp[(-56)+38]
 11679  01022C  0EEE               	movlw	-18
 11680  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11681  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11682  01023A  0E94               	movlw	low _dbuf
 11683  01023C  6EE6               	movwf	postinc1,c
 11684  01023E  0E03               	movlw	high _dbuf
 11685  010240  6EE6               	movwf	postinc1,c
 11686                           
 11687                           ;stkvar	_fp @ sp[(-60)+-2]
 11688  010242  0EC2               	movlw	-62
 11689  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11690  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11691  010250  ECE6  F0B8         	call	_pad	;wreg free
 11692  010254  EF1D  F089         	goto	l2046
 11693  010258                     l10223:
 11694                           
 11695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11696                           ;stkvar	_g @ sp[(-56)+16]
 11697  010258  0ED8               	movlw	-40
 11698  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11699  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11700  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11701  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11702  010272  ECC1  F0B3         	call	___fpclassifyf	;wreg free
 11703  010276  5025               	movf	btemp^0,w,c
 11704  010278  1026               	iorwf	(btemp+1)^0,w,c
 11705  01027A  A4D8               	btfss	status,2,c
 11706  01027C  D056               	goto	l10241
 11707  01027E  0EBF               	movlw	191
 11708  010280  6E2F               	movwf	(btemp+10)^0,c
 11709  010282  0EFF               	movlw	255
 11710  010284  6E30               	movwf	(btemp+11)^0,c
 11711                           
 11712                           ;stkvar	_c @ sp[(-56)+-7]
 11713  010286  0EC1               	movlw	-63
 11714  010288  50E3               	movf	plusw1,w,c
 11715  01028A  6E2D               	movwf	(btemp+8)^0,c
 11716  01028C  6A2E               	clrf	(btemp+9)^0,c
 11717  01028E  502F               	movf	(btemp+10)^0,w,c
 11718  010290  262D               	addwf	(btemp+8)^0,f,c
 11719  010292  5030               	movf	(btemp+11)^0,w,c
 11720  010294  222E               	addwfc	(btemp+9)^0,f,c
 11721  010296  502E               	movf	(btemp+9)^0,w,c
 11722  010298  E106               	bnz	u9650
 11723  01029A  0E1A               	movlw	26
 11724  01029C  5C2D               	subwf	(btemp+8)^0,w,c
 11725  01029E  B0D8               	btfsc	status,0,c
 11726  0102A0  D002               	goto	u9650
 11727  0102A2  0E01               	movlw	1
 11728  0102A4  D001               	goto	u9660
 11729  0102A6                     u9650:
 11730  0102A6  0E00               	movlw	0
 11731  0102A8                     u9660:
 11732  0102A8  6E2F               	movwf	(btemp+10)^0,c
 11733  0102AA  6A30               	clrf	(btemp+11)^0,c
 11734                           
 11735                           ;stkvar	_efgtoa$4994 @ sp[(-56)+6]
 11736  0102AC  0ECE               	movlw	-50
 11737  0102AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11738  0102B4  0ECF               	movlw	-49
 11739  0102B6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11740                           
 11741                           ;stkvar	_efgtoa$4994 @ sp[(-56)+6]
 11742  0102BC  0ECE               	movlw	-50
 11743  0102BE  006F FF8C  F025    	movff	plusw1,btemp
 11744  0102C4  0ECF               	movlw	-49
 11745  0102C6  50E3               	movf	plusw1,w,c
 11746  0102C8  1025               	iorwf	btemp^0,w,c
 11747  0102CA  B4D8               	btfsc	status,2,c
 11748  0102CC  D017               	goto	l10233
 11749                           
 11750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11751  0102CE  0EEA               	movlw	low STR_50
 11752  0102D0  6EE6               	movwf	postinc1,c
 11753  0102D2  0EFF               	movlw	high STR_50
 11754  0102D4  6EE6               	movwf	postinc1,c
 11755                           
 11756                           ;stkvar	_n @ sp[(-58)+32]
 11757  0102D6  0E94               	movlw	low _dbuf
 11758  0102D8  6E2F               	movwf	(btemp+10)^0,c
 11759  0102DA  0E03               	movlw	high _dbuf
 11760  0102DC  6E30               	movwf	(btemp+11)^0,c
 11761  0102DE  0EE6               	movlw	-26
 11762  0102E0  50E3               	movf	plusw1,w,c
 11763  0102E2  262F               	addwf	(btemp+10)^0,f,c
 11764  0102E4  0EE7               	movlw	-25
 11765  0102E6  50E3               	movf	plusw1,w,c
 11766  0102E8  2230               	addwfc	(btemp+11)^0,f,c
 11767  0102EA  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11768  0102F0  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11769  0102F6  ECF1  F0BB         	call	_strcpy	;wreg free
 11770                           
 11771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11772  0102FA  D78D               	goto	l10217
 11773  0102FC                     l10233:
 11774                           
 11775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11776  0102FC  0EF2               	movlw	low STR_51
 11777  0102FE  6EE6               	movwf	postinc1,c
 11778  010300  0EFF               	movlw	high STR_51
 11779  010302  6EE6               	movwf	postinc1,c
 11780                           
 11781                           ;stkvar	_n @ sp[(-58)+32]
 11782  010304  0E94               	movlw	low _dbuf
 11783  010306  6E2F               	movwf	(btemp+10)^0,c
 11784  010308  0E03               	movlw	high _dbuf
 11785  01030A  6E30               	movwf	(btemp+11)^0,c
 11786  01030C  0EE6               	movlw	-26
 11787  01030E  50E3               	movf	plusw1,w,c
 11788  010310  262F               	addwf	(btemp+10)^0,f,c
 11789  010312  0EE7               	movlw	-25
 11790  010314  50E3               	movf	plusw1,w,c
 11791  010316  2230               	addwfc	(btemp+11)^0,f,c
 11792  010318  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11793  01031E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11794  010324  ECF1  F0BB         	call	_strcpy	;wreg free
 11795  010328  D776               	goto	l10217
 11796  01032A                     l10241:
 11797                           
 11798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11799  01032A  0E00               	movlw	0
 11800  01032C  6E2D               	movwf	(btemp+8)^0,c
 11801  01032E  0E00               	movlw	0
 11802  010330  6E2E               	movwf	(btemp+9)^0,c
 11803  010332  0E80               	movlw	128
 11804  010334  6E2F               	movwf	(btemp+10)^0,c
 11805  010336  0E3F               	movlw	63
 11806  010338  6E30               	movwf	(btemp+11)^0,c
 11807                           
 11808                           ;stkvar	_u @ sp[(-56)+12]
 11809  01033A  0ED4               	movlw	-44
 11810  01033C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11811  010342  0ED5               	movlw	-43
 11812  010344  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11813  01034A  0ED6               	movlw	-42
 11814  01034C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11815  010352  0ED7               	movlw	-41
 11816  010354  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11817                           
 11818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11819                           ;stkvar	_e @ sp[(-56)+34]
 11820  01035A  0EEA               	movlw	-22
 11821  01035C  6AE3               	clrf	plusw1,c
 11822  01035E  0EEB               	movlw	-21
 11823  010360  6AE3               	clrf	plusw1,c
 11824                           
 11825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11826  010362  0E00               	movlw	0
 11827  010364  6EE6               	movwf	postinc1,c
 11828  010366  0E00               	movlw	0
 11829  010368  6EE6               	movwf	postinc1,c
 11830  01036A  0E00               	movlw	0
 11831  01036C  6EE6               	movwf	postinc1,c
 11832  01036E  0E00               	movlw	0
 11833  010370  6EE6               	movwf	postinc1,c
 11834                           
 11835                           ;stkvar	_g @ sp[(-60)+16]
 11836  010372  0ED4               	movlw	-44
 11837  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11838  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11839  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11840  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11841  01038C  ECC3  F0BC         	call	___fleq	;wreg free
 11842  010390  A025               	btfss	btemp& (0+255),0,c
 11843  010392  D039               	goto	l10253
 11844  010394  D0BC               	goto	u9700
 11845  010396                     l10249:
 11846                           
 11847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11848  010396  0E00               	movlw	0
 11849  010398  6EE6               	movwf	postinc1,c
 11850  01039A  0E00               	movlw	0
 11851  01039C  6EE6               	movwf	postinc1,c
 11852  01039E  0E20               	movlw	32
 11853  0103A0  6EE6               	movwf	postinc1,c
 11854  0103A2  0E41               	movlw	65
 11855  0103A4  6EE6               	movwf	postinc1,c
 11856                           
 11857                           ;stkvar	_u @ sp[(-60)+12]
 11858  0103A6  0ED0               	movlw	-48
 11859  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11860  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11861  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11862  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11863  0103C0  EC14  F093         	call	___flmul	;wreg free
 11864                           
 11865                           ;stkvar	_u @ sp[(-56)+12]
 11866  0103C4  0ED4               	movlw	-44
 11867  0103C6  0060  F097  FFE3   	movff	btemp,plusw1
 11868  0103CC  0ED5               	movlw	-43
 11869  0103CE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11870  0103D4  0ED6               	movlw	-42
 11871  0103D6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11872  0103DC  0ED7               	movlw	-41
 11873  0103DE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11874                           
 11875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11876                           ;stkvar	_e @ sp[(-56)+34]
 11877  0103E4  0EEA               	movlw	-22
 11878  0103E6  50E3               	movf	plusw1,w,c
 11879  0103E8  0F01               	addlw	1
 11880  0103EA  6E25               	movwf	btemp^0,c
 11881  0103EC  0EEA               	movlw	-22
 11882  0103EE  0060  F097  FFE3   	movff	btemp,plusw1
 11883  0103F4  6A25               	clrf	btemp^0,c
 11884  0103F6  0EEB               	movlw	-21
 11885  0103F8  50E3               	movf	plusw1,w,c
 11886  0103FA  2025               	addwfc	btemp^0,w,c
 11887  0103FC  6E25               	movwf	btemp^0,c
 11888  0103FE  0EEB               	movlw	-21
 11889  010400  0060  F097  FFE3   	movff	btemp,plusw1
 11890  010406                     l10253:
 11891                           
 11892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11893  010406  0E00               	movlw	0
 11894  010408  6EE6               	movwf	postinc1,c
 11895  01040A  0E00               	movlw	0
 11896  01040C  6EE6               	movwf	postinc1,c
 11897  01040E  0E20               	movlw	32
 11898  010410  6EE6               	movwf	postinc1,c
 11899  010412  0E41               	movlw	65
 11900  010414  6EE6               	movwf	postinc1,c
 11901                           
 11902                           ;stkvar	_u @ sp[(-60)+12]
 11903  010416  0ED0               	movlw	-48
 11904  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11905  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11906  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11907  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11908  010430  EC14  F093         	call	___flmul	;wreg free
 11909  010434  0060  F097  FFE6   	movff	btemp,postinc1
 11910  01043A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 11911  010440  0060  F09F  FFE6   	movff	btemp+2,postinc1
 11912  010446  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 11913                           
 11914                           ;stkvar	_g @ sp[(-60)+16]
 11915  01044C  0ED4               	movlw	-44
 11916  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11917  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11918  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11919  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11920  010466  EC45  F0B5         	call	___flge	;wreg free
 11921  01046A  A025               	btfss	btemp& (0+255),0,c
 11922  01046C  D032               	goto	l10259
 11923  01046E  D793               	goto	l10249
 11924  010470                     l10255:
 11925                           
 11926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11927  010470  0E00               	movlw	0
 11928  010472  6EE6               	movwf	postinc1,c
 11929  010474  0E00               	movlw	0
 11930  010476  6EE6               	movwf	postinc1,c
 11931  010478  0E20               	movlw	32
 11932  01047A  6EE6               	movwf	postinc1,c
 11933  01047C  0E41               	movlw	65
 11934  01047E  6EE6               	movwf	postinc1,c
 11935                           
 11936                           ;stkvar	_u @ sp[(-60)+12]
 11937  010480  0ED0               	movlw	-48
 11938  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11939  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11940  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11941  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11942  01049A  EC07  F09B         	call	___fldiv	;wreg free
 11943                           
 11944                           ;stkvar	_u @ sp[(-56)+12]
 11945  01049E  0ED4               	movlw	-44
 11946  0104A0  0060  F097  FFE3   	movff	btemp,plusw1
 11947  0104A6  0ED5               	movlw	-43
 11948  0104A8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11949  0104AE  0ED6               	movlw	-42
 11950  0104B0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11951  0104B6  0ED7               	movlw	-41
 11952  0104B8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11953                           
 11954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11955                           ;stkvar	_e @ sp[(-56)+34]
 11956  0104BE  50E1               	movf	fsr1l,w,c
 11957  0104C0  0FEA               	addlw	-22
 11958  0104C2  6ED9               	movwf	fsr2l,c
 11959  0104C4  50E2               	movf	fsr1h,w,c
 11960  0104C6  6EDA               	movwf	fsr2h,c
 11961  0104C8  0EFF               	movlw	255
 11962  0104CA  22DA               	addwfc	fsr2h,f,c
 11963  0104CC  06DE               	decf	postinc2,f,c
 11964  0104CE  0E00               	movlw	0
 11965  0104D0  5ADD               	subwfb	postdec2,f,c
 11966  0104D2                     l10259:
 11967                           
 11968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11969                           ;stkvar	_u @ sp[(-56)+12]
 11970  0104D2  0ED4               	movlw	-44
 11971  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11972  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11973  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11974  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11975                           
 11976                           ;stkvar	_g @ sp[(-60)+16]
 11977  0104EC  0ED4               	movlw	-44
 11978  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11979  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11980  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11981  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11982  010506  EC45  F0B5         	call	___flge	;wreg free
 11983  01050A  A025               	btfss	btemp& (0+255),0,c
 11984  01050C  D7B1               	goto	l10255
 11985  01050E                     u9700:
 11986                           
 11987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11988                           ;stkvar	_c @ sp[(-56)+-7]
 11989  01050E  0EC1               	movlw	-63
 11990  010510  50E3               	movf	plusw1,w,c
 11991  010512  6EE6               	movwf	postinc1,c
 11992  010514  0E00               	movlw	0
 11993  010516  6EE6               	movwf	postinc1,c
 11994  010518  EC35  F0C1         	call	_tolower	;wreg free
 11995                           
 11996                           ;stkvar	_mode @ sp[(-56)+54]
 11997  01051C  0EFE               	movlw	-2
 11998  01051E  0060  F097  FFE3   	movff	btemp,plusw1
 11999                           
 12000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 12001                           ;stkvar	_mode @ sp[(-56)+54]
 12002                           ;stkvar	_nmode @ sp[(-56)+55]
 12003  010524  0EFE               	movlw	-2
 12004  010526  006F FF8C  F025    	movff	plusw1,btemp
 12005  01052C  0EFF               	movlw	-1
 12006  01052E  0060  F097  FFE3   	movff	btemp,plusw1
 12007                           
 12008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 12009                           ;stkvar	_mode @ sp[(-56)+54]
 12010  010534  0EFE               	movlw	-2
 12011  010536  006F FF8C  F025    	movff	plusw1,btemp
 12012  01053C  0E67               	movlw	103
 12013  01053E  1825               	xorwf	btemp^0,w,c
 12014  010540  A4D8               	btfss	status,2,c
 12015  010542  D025               	goto	l10277
 12016                           
 12017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 12018  010544  500C               	movf	_prec^0,w,c
 12019  010546  100D               	iorwf	(_prec+1)^0,w,c
 12020  010548  A4D8               	btfss	status,2,c
 12021  01054A  D004               	goto	l10271
 12022                           
 12023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 12024  01054C  0E00               	movlw	0
 12025  01054E  6E0D               	movwf	(_prec+1)^0,c
 12026  010550  0E01               	movlw	1
 12027  010552  6E0C               	movwf	_prec^0,c
 12028  010554                     l10271:
 12029                           
 12030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 12031  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 12032  010556  D005               	goto	u9730
 12033  010558  500D               	movf	(_prec+1)^0,w,c
 12034  01055A  E110               	bnz	l10275
 12035  01055C  040C               	decf	_prec^0,w,c
 12036  01055E  B0D8               	btfsc	status,0,c
 12037  010560  D00D               	goto	l10275
 12038  010562                     u9730:
 12039  010562  0E06               	movlw	6
 12040  010564  6E2F               	movwf	(btemp+10)^0,c
 12041  010566  0E00               	movlw	0
 12042  010568  6E30               	movwf	(btemp+11)^0,c
 12043                           
 12044                           ;stkvar	_p @ sp[(-56)+40]
 12045  01056A  0EF0               	movlw	-16
 12046  01056C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12047  010572  0EF1               	movlw	-15
 12048  010574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12049  01057A  D00C               	goto	l10283
 12050  01057C                     l10275:
 12051                           
 12052                           ;stkvar	_p @ sp[(-56)+40]
 12053  01057C  0EF0               	movlw	-16
 12054  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 12055  010584  0EF1               	movlw	-15
 12056  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 12057  01058C  D003               	goto	l10283
 12058  01058E                     l10277:
 12059                           
 12060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12061  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 12062  010590  D7F5               	goto	l10275
 12063  010592  D7E7               	goto	u9730
 12064  010594                     l10283:
 12065                           
 12066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12067                           ;stkvar	_mode @ sp[(-56)+54]
 12068  010594  0EFE               	movlw	-2
 12069  010596  006F FF8C  F025    	movff	plusw1,btemp
 12070  01059C  0E67               	movlw	103
 12071  01059E  1825               	xorwf	btemp^0,w,c
 12072  0105A0  A4D8               	btfss	status,2,c
 12073  0105A2  D02F               	goto	l10293
 12074                           
 12075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12076                           ;stkvar	_e @ sp[(-56)+34]
 12077  0105A4  0EEB               	movlw	-21
 12078  0105A6  AEE3               	btfss	plusw1,7,c
 12079  0105A8  D00E               	goto	u9760
 12080  0105AA  0EEA               	movlw	-22
 12081  0105AC  006F FF8C  F025    	movff	plusw1,btemp
 12082  0105B2  0EFC               	movlw	252
 12083  0105B4  5E25               	subwf	btemp^0,f,c
 12084  0105B6  0EEB               	movlw	-21
 12085  0105B8  006F FF8C  F025    	movff	plusw1,btemp
 12086  0105BE  0EFF               	movlw	255
 12087  0105C0  5A25               	subwfb	btemp^0,f,c
 12088  0105C2  A0D8               	btfss	status,0,c
 12089  0105C4  D018               	goto	l10291
 12090  0105C6                     u9760:
 12091                           
 12092                           ;stkvar	_e @ sp[(-56)+34]
 12093                           ;stkvar	_p @ sp[(-56)+40]
 12094  0105C6  0EF0               	movlw	-16
 12095  0105C8  50E3               	movf	plusw1,w,c
 12096  0105CA  0FFF               	addlw	255
 12097  0105CC  6E2F               	movwf	(btemp+10)^0,c
 12098  0105CE  0EF1               	movlw	-15
 12099  0105D0  006F FF8C  F030    	movff	plusw1,btemp+11
 12100  0105D6  0EFF               	movlw	255
 12101  0105D8  2230               	addwfc	(btemp+11)^0,f,c
 12102  0105DA  0EEA               	movlw	-22
 12103  0105DC  50E3               	movf	plusw1,w,c
 12104  0105DE  5C2F               	subwf	(btemp+10)^0,w,c
 12105  0105E0  5030               	movf	(btemp+11)^0,w,c
 12106  0105E2  0A80               	xorlw	128
 12107  0105E4  6E25               	movwf	btemp^0,c
 12108  0105E6  0EEB               	movlw	-21
 12109  0105E8  50E3               	movf	plusw1,w,c
 12110  0105EA  0A80               	xorlw	128
 12111  0105EC  5825               	subwfb	btemp^0,w,c
 12112  0105EE  A0D8               	btfss	status,0,c
 12113  0105F0  D002               	goto	l10291
 12114                           
 12115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12116  0105F2  0E66               	movlw	102
 12117  0105F4  D001               	goto	L10
 12118  0105F6                     l10291:
 12119                           
 12120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12121  0105F6  0E65               	movlw	101
 12122  0105F8                     L10:
 12123  0105F8  6E30               	movwf	(btemp+11)^0,c
 12124                           
 12125                           ;stkvar	_nmode @ sp[(-56)+55]
 12126  0105FA  0EFF               	movlw	-1
 12127  0105FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12128  010602                     l10293:
 12129                           
 12130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12131                           ;stkvar	_p @ sp[(-56)+40]
 12132                           ;stkvar	_m @ sp[(-56)+48]
 12133  010602  0EF0               	movlw	-16
 12134  010604  006F FF8C  F025    	movff	plusw1,btemp
 12135  01060A  0EF8               	movlw	-8
 12136  01060C  0060  F097  FFE3   	movff	btemp,plusw1
 12137  010612  0EF1               	movlw	-15
 12138  010614  006F FF8C  F025    	movff	plusw1,btemp
 12139  01061A  0EF9               	movlw	-7
 12140  01061C  0060  F097  FFE3   	movff	btemp,plusw1
 12141                           
 12142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12143                           ;stkvar	_mode @ sp[(-56)+54]
 12144  010622  0EFE               	movlw	-2
 12145  010624  006F FF8C  F025    	movff	plusw1,btemp
 12146  01062A  0E67               	movlw	103
 12147  01062C  1825               	xorwf	btemp^0,w,c
 12148  01062E  A4D8               	btfss	status,2,c
 12149  010630  D00B               	goto	u9800
 12150                           
 12151                           ;stkvar	_nmode @ sp[(-56)+55]
 12152  010632  0EFF               	movlw	-1
 12153  010634  006F FF8C  F025    	movff	plusw1,btemp
 12154  01063A  0E66               	movlw	102
 12155  01063C  1825               	xorwf	btemp^0,w,c
 12156  01063E  A4D8               	btfss	status,2,c
 12157  010640  D014               	goto	l2075
 12158                           
 12159                           ;stkvar	_e @ sp[(-56)+34]
 12160  010642  0EEB               	movlw	-21
 12161  010644  AEE3               	btfss	plusw1,7,c
 12162  010646  D011               	goto	l2075
 12163  010648                     u9800:
 12164                           
 12165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12166                           ;stkvar	_m @ sp[(-56)+48]
 12167  010648  0EF8               	movlw	-8
 12168  01064A  50E3               	movf	plusw1,w,c
 12169  01064C  0F01               	addlw	1
 12170  01064E  6E25               	movwf	btemp^0,c
 12171  010650  0EF8               	movlw	-8
 12172  010652  0060  F097  FFE3   	movff	btemp,plusw1
 12173  010658  6A25               	clrf	btemp^0,c
 12174  01065A  0EF9               	movlw	-7
 12175  01065C  50E3               	movf	plusw1,w,c
 12176  01065E  2025               	addwfc	btemp^0,w,c
 12177  010660  6E25               	movwf	btemp^0,c
 12178  010662  0EF9               	movlw	-7
 12179  010664  0060  F097  FFE3   	movff	btemp,plusw1
 12180  01066A                     l2075:
 12181                           
 12182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12183                           ;stkvar	_nmode @ sp[(-56)+55]
 12184  01066A  0EFF               	movlw	-1
 12185  01066C  006F FF8C  F025    	movff	plusw1,btemp
 12186  010672  0E66               	movlw	102
 12187  010674  1825               	xorwf	btemp^0,w,c
 12188  010676  A4D8               	btfss	status,2,c
 12189  010678  D03B               	goto	l10313
 12190                           
 12191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12192                           ;stkvar	_e @ sp[(-56)+34]
 12193  01067A  0EEB               	movlw	-21
 12194  01067C  AEE3               	btfss	plusw1,7,c
 12195  01067E  D01C               	goto	l10309
 12196                           
 12197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12198  010680  0E00               	movlw	0
 12199  010682  6E2D               	movwf	(btemp+8)^0,c
 12200  010684  0E00               	movlw	0
 12201  010686  6E2E               	movwf	(btemp+9)^0,c
 12202  010688  0E80               	movlw	128
 12203  01068A  6E2F               	movwf	(btemp+10)^0,c
 12204  01068C  0E3F               	movlw	63
 12205  01068E  6E30               	movwf	(btemp+11)^0,c
 12206                           
 12207                           ;stkvar	_u @ sp[(-56)+12]
 12208  010690  0ED4               	movlw	-44
 12209  010692  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12210  010698  0ED5               	movlw	-43
 12211  01069A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12212  0106A0  0ED6               	movlw	-42
 12213  0106A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12214  0106A8  0ED7               	movlw	-41
 12215  0106AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12216                           
 12217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12218                           ;stkvar	_e @ sp[(-56)+34]
 12219  0106B0  0EEA               	movlw	-22
 12220  0106B2  6AE3               	clrf	plusw1,c
 12221  0106B4  0EEB               	movlw	-21
 12222  0106B6  6AE3               	clrf	plusw1,c
 12223  0106B8                     l10309:
 12224                           
 12225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12226                           ;stkvar	_mode @ sp[(-56)+54]
 12227  0106B8  0EFE               	movlw	-2
 12228  0106BA  006F FF8C  F025    	movff	plusw1,btemp
 12229  0106C0  0E67               	movlw	103
 12230  0106C2  1825               	xorwf	btemp^0,w,c
 12231  0106C4  B4D8               	btfsc	status,2,c
 12232  0106C6  D014               	goto	l10313
 12233                           
 12234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12235                           ;stkvar	_e @ sp[(-56)+34]
 12236                           ;stkvar	_m @ sp[(-56)+48]
 12237  0106C8  0EF8               	movlw	-8
 12238  0106CA  50E3               	movf	plusw1,w,c
 12239  0106CC  6E25               	movwf	btemp^0,c
 12240  0106CE  0EEA               	movlw	-22
 12241  0106D0  50E3               	movf	plusw1,w,c
 12242  0106D2  2625               	addwf	btemp^0,f,c
 12243  0106D4  0EF8               	movlw	-8
 12244  0106D6  0060  F097  FFE3   	movff	btemp,plusw1
 12245  0106DC  0EF9               	movlw	-7
 12246  0106DE  50E3               	movf	plusw1,w,c
 12247  0106E0  6E25               	movwf	btemp^0,c
 12248  0106E2  0EEB               	movlw	-21
 12249  0106E4  50E3               	movf	plusw1,w,c
 12250  0106E6  2225               	addwfc	btemp^0,f,c
 12251  0106E8  0EF9               	movlw	-7
 12252  0106EA  0060  F097  FFE3   	movff	btemp,plusw1
 12253  0106F0                     l10313:
 12254                           
 12255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12256                           ;stkvar	_i @ sp[(-56)+36]
 12257  0106F0  0EEC               	movlw	-20
 12258  0106F2  6AE3               	clrf	plusw1,c
 12259  0106F4  0EED               	movlw	-19
 12260  0106F6  6AE3               	clrf	plusw1,c
 12261                           
 12262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12263                           ;stkvar	_g @ sp[(-56)+16]
 12264  0106F8  0ED8               	movlw	-40
 12265  0106FA  006F FF8C  F02D    	movff	plusw1,btemp+8
 12266  010700  0ED9               	movlw	-39
 12267  010702  006F FF8C  F02E    	movff	plusw1,btemp+9
 12268  010708  0EDA               	movlw	-38
 12269  01070A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12270  010710  0EDB               	movlw	-37
 12271  010712  006F FF8C  F030    	movff	plusw1,btemp+11
 12272                           
 12273                           ;stkvar	_h @ sp[(-56)+24]
 12274  010718  0EE0               	movlw	-32
 12275  01071A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12276  010720  0EE1               	movlw	-31
 12277  010722  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12278  010728  0EE2               	movlw	-30
 12279  01072A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12280  010730  0EE3               	movlw	-29
 12281  010732  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12282                           
 12283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12284                           ;stkvar	_u @ sp[(-56)+12]
 12285  010738  0ED4               	movlw	-44
 12286  01073A  006F FF8C  F02D    	movff	plusw1,btemp+8
 12287  010740  0ED5               	movlw	-43
 12288  010742  006F FF8C  F02E    	movff	plusw1,btemp+9
 12289  010748  0ED6               	movlw	-42
 12290  01074A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12291  010750  0ED7               	movlw	-41
 12292  010752  006F FF8C  F030    	movff	plusw1,btemp+11
 12293                           
 12294                           ;stkvar	_ou @ sp[(-56)+28]
 12295  010758  0EE4               	movlw	-28
 12296  01075A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12297  010760  0EE5               	movlw	-27
 12298  010762  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12299  010768  0EE6               	movlw	-26
 12300  01076A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12301  010770  0EE7               	movlw	-25
 12302  010772  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12303                           
 12304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12305  010778  D0D6               	goto	l10329
 12306  01077A                     l10319:
 12307                           
 12308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12309                           ;stkvar	_u @ sp[(-56)+12]
 12310  01077A  0ED4               	movlw	-44
 12311  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12312  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12313  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12314  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12315                           
 12316                           ;stkvar	_h @ sp[(-60)+24]
 12317  010794  0EDC               	movlw	-36
 12318  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12319  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12320  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12321  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12322  0107AE  EC07  F09B         	call	___fldiv	;wreg free
 12323  0107B2  0060  F097  FFE6   	movff	btemp,postinc1
 12324  0107B8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12325  0107BE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12326  0107C4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12327  0107CA  EC60  F0A6         	call	_floorf	;wreg free
 12328                           
 12329                           ;stkvar	_l @ sp[(-56)+20]
 12330  0107CE  0EDC               	movlw	-36
 12331  0107D0  0060  F097  FFE3   	movff	btemp,plusw1
 12332  0107D6  0EDD               	movlw	-35
 12333  0107D8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12334  0107DE  0EDE               	movlw	-34
 12335  0107E0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12336  0107E6  0EDF               	movlw	-33
 12337  0107E8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12338                           
 12339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12340                           ;stkvar	_l @ sp[(-56)+20]
 12341  0107EE  0EDC               	movlw	-36
 12342  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12343  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12344  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12345  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12346  010808  EC8C  F0B4         	call	___fltol	;wreg free
 12347  01080C  0060  F094  F02F   	movff	btemp,btemp+10
 12348  010812  0060  F098  F030   	movff	btemp+1,btemp+11
 12349                           
 12350                           ;stkvar	_d @ sp[(-56)+44]
 12351  010818  0EF4               	movlw	-12
 12352  01081A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12353  010820  0EF5               	movlw	-11
 12354  010822  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12355                           
 12356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12357                           ;stkvar	_u @ sp[(-56)+12]
 12358  010828  0ED4               	movlw	-44
 12359  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12360  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12361  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12362  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12363                           
 12364                           ;stkvar	_l @ sp[(-60)+20]
 12365  010842  0ED8               	movlw	-40
 12366  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12367  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12368  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12369  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12370  01085C  EC14  F093         	call	___flmul	;wreg free
 12371  010860  0060  F097  FFE6   	movff	btemp,postinc1
 12372  010866  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12373  01086C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12374  010872  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12375                           
 12376                           ;stkvar	_h @ sp[(-60)+24]
 12377  010878  0EDC               	movlw	-36
 12378  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12379  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12380  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12381  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12382  010892  ECEA  F0C4         	call	___flsub	;wreg free
 12383                           
 12384                           ;stkvar	_h @ sp[(-56)+24]
 12385  010896  0EE0               	movlw	-32
 12386  010898  0060  F097  FFE3   	movff	btemp,plusw1
 12387  01089E  0EE1               	movlw	-31
 12388  0108A0  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12389  0108A6  0EE2               	movlw	-30
 12390  0108A8  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12391  0108AE  0EE3               	movlw	-29
 12392  0108B0  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12393                           
 12394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12395  0108B6  0E00               	movlw	0
 12396  0108B8  6EE6               	movwf	postinc1,c
 12397  0108BA  0E00               	movlw	0
 12398  0108BC  6EE6               	movwf	postinc1,c
 12399  0108BE  0E20               	movlw	32
 12400  0108C0  6EE6               	movwf	postinc1,c
 12401  0108C2  0E41               	movlw	65
 12402  0108C4  6EE6               	movwf	postinc1,c
 12403                           
 12404                           ;stkvar	_u @ sp[(-60)+12]
 12405  0108C6  0ED0               	movlw	-48
 12406  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12407  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12408  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12409  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12410  0108E0  EC07  F09B         	call	___fldiv	;wreg free
 12411                           
 12412                           ;stkvar	_u @ sp[(-56)+12]
 12413  0108E4  0ED4               	movlw	-44
 12414  0108E6  0060  F097  FFE3   	movff	btemp,plusw1
 12415  0108EC  0ED5               	movlw	-43
 12416  0108EE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12417  0108F4  0ED6               	movlw	-42
 12418  0108F6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12419  0108FC  0ED7               	movlw	-41
 12420  0108FE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12421                           
 12422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12423                           ;stkvar	_i @ sp[(-56)+36]
 12424  010904  0EEC               	movlw	-20
 12425  010906  50E3               	movf	plusw1,w,c
 12426  010908  0F01               	addlw	1
 12427  01090A  6E25               	movwf	btemp^0,c
 12428  01090C  0EEC               	movlw	-20
 12429  01090E  0060  F097  FFE3   	movff	btemp,plusw1
 12430  010914  6A25               	clrf	btemp^0,c
 12431  010916  0EED               	movlw	-19
 12432  010918  50E3               	movf	plusw1,w,c
 12433  01091A  2025               	addwfc	btemp^0,w,c
 12434  01091C  6E25               	movwf	btemp^0,c
 12435  01091E  0EED               	movlw	-19
 12436  010920  0060  F097  FFE3   	movff	btemp,plusw1
 12437  010926                     l10329:
 12438                           
 12439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12440                           ;stkvar	_m @ sp[(-56)+48]
 12441                           ;stkvar	_i @ sp[(-56)+36]
 12442  010926  50E1               	movf	fsr1l,w,c
 12443  010928  0FEC               	addlw	-20
 12444  01092A  6ED9               	movwf	fsr2l,c
 12445  01092C  50E2               	movf	fsr1h,w,c
 12446  01092E  6EDA               	movwf	fsr2h,c
 12447  010930  0EFF               	movlw	255
 12448  010932  22DA               	addwfc	fsr2h,f,c
 12449  010934  0EF8               	movlw	-8
 12450  010936  50E3               	movf	plusw1,w,c
 12451  010938  5CDE               	subwf	postinc2,w,c
 12452  01093A  50DE               	movf	postinc2,w,c
 12453  01093C  0A80               	xorlw	128
 12454  01093E  6E25               	movwf	btemp^0,c
 12455  010940  0EF9               	movlw	-7
 12456  010942  50E3               	movf	plusw1,w,c
 12457  010944  0A80               	xorlw	128
 12458  010946  5825               	subwfb	btemp^0,w,c
 12459  010948  A0D8               	btfss	status,0,c
 12460  01094A  D717               	goto	l10319
 12461                           
 12462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12463  01094C  0E00               	movlw	0
 12464  01094E  6EE6               	movwf	postinc1,c
 12465  010950  0E00               	movlw	0
 12466  010952  6EE6               	movwf	postinc1,c
 12467  010954  0EA0               	movlw	160
 12468  010956  6EE6               	movwf	postinc1,c
 12469  010958  0E40               	movlw	64
 12470  01095A  6EE6               	movwf	postinc1,c
 12471                           
 12472                           ;stkvar	_u @ sp[(-60)+12]
 12473  01095C  0ED0               	movlw	-48
 12474  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12475  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12476  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12477  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12478  010976  EC14  F093         	call	___flmul	;wreg free
 12479                           
 12480                           ;stkvar	_l @ sp[(-56)+20]
 12481  01097A  0EDC               	movlw	-36
 12482  01097C  0060  F097  FFE3   	movff	btemp,plusw1
 12483  010982  0EDD               	movlw	-35
 12484  010984  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12485  01098A  0EDE               	movlw	-34
 12486  01098C  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12487  010992  0EDF               	movlw	-33
 12488  010994  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12489                           
 12490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12491                           ;stkvar	_l @ sp[(-56)+20]
 12492  01099A  0EDC               	movlw	-36
 12493  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12494  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12495  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12496  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12497                           
 12498                           ;stkvar	_h @ sp[(-60)+24]
 12499  0109B4  0EDC               	movlw	-36
 12500  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12501  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12502  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12503  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12504  0109CE  EC45  F0B5         	call	___flge	;wreg free
 12505  0109D2  A025               	btfss	btemp& (0+255),0,c
 12506  0109D4  D021               	goto	u9870
 12507                           
 12508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12509                           ;stkvar	_l @ sp[(-56)+20]
 12510                           
 12511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12512                           
 12513                           ;stkvar	_l @ sp[(-56)+20]
 12514                           
 12515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12516  0109D6  0EDC               	movlw	-36
 12517  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12518  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12519  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12520  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12521                           
 12522                           ;stkvar	_h @ sp[(-60)+24]
 12523  0109F0  0EDC               	movlw	-36
 12524  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12525  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12526  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12527  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12528  010A0A  ECC3  F0BC         	call	___fleq	;wreg free
 12529  010A0E  A025               	btfss	btemp& (0+255),0,c
 12530  010A10  D01B               	goto	l10343
 12531                           
 12532                           ;stkvar	_d @ sp[(-56)+44]
 12533  010A12  0EF4               	movlw	-12
 12534  010A14  B0E3               	btfsc	plusw1,0,c
 12535  010A16  D018               	goto	l10343
 12536  010A18                     u9870:
 12537                           
 12538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12539  010A18  0E00               	movlw	0
 12540  010A1A  6E2D               	movwf	(btemp+8)^0,c
 12541  010A1C  0E00               	movlw	0
 12542  010A1E  6E2E               	movwf	(btemp+9)^0,c
 12543  010A20  0E00               	movlw	0
 12544  010A22  6E2F               	movwf	(btemp+10)^0,c
 12545  010A24  0E00               	movlw	0
 12546  010A26  6E30               	movwf	(btemp+11)^0,c
 12547                           
 12548                           ;stkvar	_l @ sp[(-56)+20]
 12549  010A28  0EDC               	movlw	-36
 12550  010A2A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12551  010A30  0EDD               	movlw	-35
 12552  010A32  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12553  010A38  0EDE               	movlw	-34
 12554  010A3A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12555  010A40  0EDF               	movlw	-33
 12556  010A42  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12557  010A48                     l10343:
 12558                           
 12559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12560                           ;stkvar	_l @ sp[(-56)+20]
 12561  010A48  0EDC               	movlw	-36
 12562  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12563  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12564  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12565  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12566                           
 12567                           ;stkvar	_g @ sp[(-60)+16]
 12568  010A62  0ED4               	movlw	-44
 12569  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12570  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12571  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12572  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12573  010A7C  EC29  F097         	call	___fladd	;wreg free
 12574                           
 12575                           ;stkvar	_h @ sp[(-56)+24]
 12576  010A80  0EE0               	movlw	-32
 12577  010A82  0060  F097  FFE3   	movff	btemp,plusw1
 12578  010A88  0EE1               	movlw	-31
 12579  010A8A  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12580  010A90  0EE2               	movlw	-30
 12581  010A92  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12582  010A98  0EE3               	movlw	-29
 12583  010A9A  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12584                           
 12585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12586                           ;stkvar	_ou @ sp[(-56)+28]
 12587  010AA0  0EE4               	movlw	-28
 12588  010AA2  006F FF8C  F02D    	movff	plusw1,btemp+8
 12589  010AA8  0EE5               	movlw	-27
 12590  010AAA  006F FF8C  F02E    	movff	plusw1,btemp+9
 12591  010AB0  0EE6               	movlw	-26
 12592  010AB2  006F FF8C  F02F    	movff	plusw1,btemp+10
 12593  010AB8  0EE7               	movlw	-25
 12594  010ABA  006F FF8C  F030    	movff	plusw1,btemp+11
 12595                           
 12596                           ;stkvar	_u @ sp[(-56)+12]
 12597  010AC0  0ED4               	movlw	-44
 12598  010AC2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12599  010AC8  0ED5               	movlw	-43
 12600  010ACA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12601  010AD0  0ED6               	movlw	-42
 12602  010AD2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12603  010AD8  0ED7               	movlw	-41
 12604  010ADA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12605                           
 12606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12607                           ;stkvar	_nmode @ sp[(-56)+55]
 12608  010AE0  0EFF               	movlw	-1
 12609  010AE2  006F FF8C  F025    	movff	plusw1,btemp
 12610  010AE8  0E65               	movlw	101
 12611  010AEA  1825               	xorwf	btemp^0,w,c
 12612  010AEC  B4D8               	btfsc	status,2,c
 12613  010AEE  D011               	goto	l10351
 12614                           
 12615                           ;stkvar	_e @ sp[(-56)+34]
 12616                           ;stkvar	_ne @ sp[(-56)+46]
 12617  010AF0  0EEA               	movlw	-22
 12618  010AF2  006F FF8C  F025    	movff	plusw1,btemp
 12619  010AF8  0EF6               	movlw	-10
 12620  010AFA  0060  F097  FFE3   	movff	btemp,plusw1
 12621  010B00  0EEB               	movlw	-21
 12622  010B02  006F FF8C  F025    	movff	plusw1,btemp
 12623  010B08  0EF7               	movlw	-9
 12624  010B0A  0060  F097  FFE3   	movff	btemp,plusw1
 12625  010B10  D004               	goto	l2090
 12626  010B12                     l10351:
 12627                           
 12628                           ;stkvar	_ne @ sp[(-56)+46]
 12629  010B12  0EF6               	movlw	-10
 12630  010B14  6AE3               	clrf	plusw1,c
 12631  010B16  0EF7               	movlw	-9
 12632  010B18  6AE3               	clrf	plusw1,c
 12633  010B1A                     l2090:
 12634                           
 12635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12636                           ;stkvar	_pp @ sp[(-56)+50]
 12637  010B1A  0EFA               	movlw	-6
 12638  010B1C  6AE3               	clrf	plusw1,c
 12639  010B1E  0EFB               	movlw	-5
 12640  010B20  6AE3               	clrf	plusw1,c
 12641                           
 12642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12643                           ;stkvar	_t @ sp[(-56)+52]
 12644  010B22  0EFC               	movlw	-4
 12645  010B24  6AE3               	clrf	plusw1,c
 12646  010B26  0EFD               	movlw	-3
 12647  010B28  6AE3               	clrf	plusw1,c
 12648                           
 12649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12650                           ;stkvar	_i @ sp[(-56)+36]
 12651  010B2A  0EEC               	movlw	-20
 12652  010B2C  6AE3               	clrf	plusw1,c
 12653  010B2E  0EED               	movlw	-19
 12654  010B30  6AE3               	clrf	plusw1,c
 12655                           
 12656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12657  010B32  D1B7               	goto	l10403
 12658  010B34                     l10353:
 12659                           
 12660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12661                           ;stkvar	_u @ sp[(-56)+12]
 12662  010B34  0ED4               	movlw	-44
 12663  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12664  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12665  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12666  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12667                           
 12668                           ;stkvar	_h @ sp[(-60)+24]
 12669  010B4E  0EDC               	movlw	-36
 12670  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12671  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12672  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12673  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12674  010B68  EC07  F09B         	call	___fldiv	;wreg free
 12675  010B6C  0060  F097  FFE6   	movff	btemp,postinc1
 12676  010B72  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12677  010B78  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12678  010B7E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12679  010B84  EC60  F0A6         	call	_floorf	;wreg free
 12680                           
 12681                           ;stkvar	_l @ sp[(-56)+20]
 12682  010B88  0EDC               	movlw	-36
 12683  010B8A  0060  F097  FFE3   	movff	btemp,plusw1
 12684  010B90  0EDD               	movlw	-35
 12685  010B92  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12686  010B98  0EDE               	movlw	-34
 12687  010B9A  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12688  010BA0  0EDF               	movlw	-33
 12689  010BA2  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12690                           
 12691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12692                           ;stkvar	_l @ sp[(-56)+20]
 12693  010BA8  0EDC               	movlw	-36
 12694  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12695  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12696  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12697  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12698  010BC2  EC8C  F0B4         	call	___fltol	;wreg free
 12699  010BC6  0060  F094  F02F   	movff	btemp,btemp+10
 12700  010BCC  0060  F098  F030   	movff	btemp+1,btemp+11
 12701                           
 12702                           ;stkvar	_d @ sp[(-56)+44]
 12703  010BD2  0EF4               	movlw	-12
 12704  010BD4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12705  010BDA  0EF5               	movlw	-11
 12706  010BDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12707                           
 12708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12709  010BE2  B80E               	btfsc	_flags^0,4,c
 12710  010BE4  D026               	goto	l10367
 12711                           
 12712                           ;stkvar	_d @ sp[(-56)+44]
 12713  010BE6  0EF4               	movlw	-12
 12714  010BE8  006F FF8C  F025    	movff	plusw1,btemp
 12715  010BEE  0EF5               	movlw	-11
 12716  010BF0  50E3               	movf	plusw1,w,c
 12717  010BF2  1025               	iorwf	btemp^0,w,c
 12718  010BF4  A4D8               	btfss	status,2,c
 12719  010BF6  D01D               	goto	l10367
 12720                           
 12721                           ;stkvar	_mode @ sp[(-56)+54]
 12722  010BF8  0EFE               	movlw	-2
 12723  010BFA  006F FF8C  F025    	movff	plusw1,btemp
 12724  010C00  0E67               	movlw	103
 12725  010C02  1825               	xorwf	btemp^0,w,c
 12726  010C04  A4D8               	btfss	status,2,c
 12727  010C06  D015               	goto	l10367
 12728                           
 12729                           ;stkvar	_ne @ sp[(-56)+46]
 12730  010C08  0EF7               	movlw	-9
 12731  010C0A  AEE3               	btfss	plusw1,7,c
 12732  010C0C  D012               	goto	l10367
 12733                           
 12734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12735                           ;stkvar	_t @ sp[(-56)+52]
 12736  010C0E  0EFC               	movlw	-4
 12737  010C10  50E3               	movf	plusw1,w,c
 12738  010C12  0F01               	addlw	1
 12739  010C14  6E25               	movwf	btemp^0,c
 12740  010C16  0EFC               	movlw	-4
 12741  010C18  0060  F097  FFE3   	movff	btemp,plusw1
 12742  010C1E  6A25               	clrf	btemp^0,c
 12743  010C20  0EFD               	movlw	-3
 12744  010C22  50E3               	movf	plusw1,w,c
 12745  010C24  2025               	addwfc	btemp^0,w,c
 12746  010C26  6E25               	movwf	btemp^0,c
 12747  010C28  0EFD               	movlw	-3
 12748  010C2A  0060  F097  FFE3   	movff	btemp,plusw1
 12749                           
 12750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12751  010C30  D0AF               	goto	l10395
 12752  010C32                     l10367:
 12753                           
 12754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12755                           ;stkvar	_pp @ sp[(-56)+50]
 12756  010C32  0EFA               	movlw	-6
 12757  010C34  006F FF8C  F025    	movff	plusw1,btemp
 12758  010C3A  0EFB               	movlw	-5
 12759  010C3C  50E3               	movf	plusw1,w,c
 12760  010C3E  1025               	iorwf	btemp^0,w,c
 12761  010C40  A4D8               	btfss	status,2,c
 12762  010C42  D070               	goto	l10387
 12763                           
 12764                           ;stkvar	_ne @ sp[(-56)+46]
 12765  010C44  0EF7               	movlw	-9
 12766  010C46  AEE3               	btfss	plusw1,7,c
 12767  010C48  D06D               	goto	l10387
 12768                           
 12769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12770                           ;stkvar	_n @ sp[(-56)+32]
 12771  010C4A  0EE8               	movlw	-24
 12772  010C4C  006F FF8C  F02F    	movff	plusw1,btemp+10
 12773  010C52  0EE9               	movlw	-23
 12774  010C54  006F FF8C  F030    	movff	plusw1,btemp+11
 12775  010C5A  0E94               	movlw	low _dbuf
 12776  010C5C  242F               	addwf	(btemp+10)^0,w,c
 12777  010C5E  6ED9               	movwf	fsr2l,c
 12778  010C60  0E03               	movlw	high _dbuf
 12779  010C62  2030               	addwfc	(btemp+11)^0,w,c
 12780  010C64  6EDA               	movwf	fsr2h,c
 12781  010C66  0E2E               	movlw	46
 12782  010C68  6EDF               	movwf	indf2,c
 12783                           
 12784                           ;stkvar	_n @ sp[(-56)+32]
 12785  010C6A  0EE8               	movlw	-24
 12786  010C6C  50E3               	movf	plusw1,w,c
 12787  010C6E  0F01               	addlw	1
 12788  010C70  6E25               	movwf	btemp^0,c
 12789  010C72  0EE8               	movlw	-24
 12790  010C74  0060  F097  FFE3   	movff	btemp,plusw1
 12791  010C7A  6A25               	clrf	btemp^0,c
 12792  010C7C  0EE9               	movlw	-23
 12793  010C7E  50E3               	movf	plusw1,w,c
 12794  010C80  2025               	addwfc	btemp^0,w,c
 12795  010C82  6E25               	movwf	btemp^0,c
 12796  010C84  0EE9               	movlw	-23
 12797  010C86  0060  F097  FFE3   	movff	btemp,plusw1
 12798                           
 12799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12800                           ;stkvar	_w @ sp[(-56)+38]
 12801  010C8C  50E1               	movf	fsr1l,w,c
 12802  010C8E  0FEE               	addlw	-18
 12803  010C90  6ED9               	movwf	fsr2l,c
 12804  010C92  50E2               	movf	fsr1h,w,c
 12805  010C94  6EDA               	movwf	fsr2h,c
 12806  010C96  0EFF               	movlw	255
 12807  010C98  22DA               	addwfc	fsr2h,f,c
 12808  010C9A  06DE               	decf	postinc2,f,c
 12809  010C9C  0E00               	movlw	0
 12810  010C9E  5ADD               	subwfb	postdec2,f,c
 12811                           
 12812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12813  010CA0  0E01               	movlw	1
 12814  010CA2  6E2F               	movwf	(btemp+10)^0,c
 12815  010CA4  0E00               	movlw	0
 12816  010CA6  6E30               	movwf	(btemp+11)^0,c
 12817                           
 12818                           ;stkvar	_pp @ sp[(-56)+50]
 12819  010CA8  0EFA               	movlw	-6
 12820  010CAA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12821  010CB0  0EFB               	movlw	-5
 12822  010CB2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12823  010CB8  D035               	goto	l10387
 12824  010CBA                     l10379:
 12825                           
 12826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12827                           ;stkvar	_n @ sp[(-56)+32]
 12828  010CBA  0EE8               	movlw	-24
 12829  010CBC  006F FF8C  F02F    	movff	plusw1,btemp+10
 12830  010CC2  0EE9               	movlw	-23
 12831  010CC4  006F FF8C  F030    	movff	plusw1,btemp+11
 12832  010CCA  0E94               	movlw	low _dbuf
 12833  010CCC  242F               	addwf	(btemp+10)^0,w,c
 12834  010CCE  6ED9               	movwf	fsr2l,c
 12835  010CD0  0E03               	movlw	high _dbuf
 12836  010CD2  2030               	addwfc	(btemp+11)^0,w,c
 12837  010CD4  6EDA               	movwf	fsr2h,c
 12838  010CD6  0E30               	movlw	48
 12839  010CD8  6EDF               	movwf	indf2,c
 12840                           
 12841                           ;stkvar	_n @ sp[(-56)+32]
 12842  010CDA  0EE8               	movlw	-24
 12843  010CDC  50E3               	movf	plusw1,w,c
 12844  010CDE  0F01               	addlw	1
 12845  010CE0  6E25               	movwf	btemp^0,c
 12846  010CE2  0EE8               	movlw	-24
 12847  010CE4  0060  F097  FFE3   	movff	btemp,plusw1
 12848  010CEA  6A25               	clrf	btemp^0,c
 12849  010CEC  0EE9               	movlw	-23
 12850  010CEE  50E3               	movf	plusw1,w,c
 12851  010CF0  2025               	addwfc	btemp^0,w,c
 12852  010CF2  6E25               	movwf	btemp^0,c
 12853  010CF4  0EE9               	movlw	-23
 12854  010CF6  0060  F097  FFE3   	movff	btemp,plusw1
 12855                           
 12856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12857                           ;stkvar	_w @ sp[(-56)+38]
 12858  010CFC  50E1               	movf	fsr1l,w,c
 12859  010CFE  0FEE               	addlw	-18
 12860  010D00  6ED9               	movwf	fsr2l,c
 12861  010D02  50E2               	movf	fsr1h,w,c
 12862  010D04  6EDA               	movwf	fsr2h,c
 12863  010D06  0EFF               	movlw	255
 12864  010D08  22DA               	addwfc	fsr2h,f,c
 12865  010D0A  06DE               	decf	postinc2,f,c
 12866  010D0C  0E00               	movlw	0
 12867  010D0E  5ADD               	subwfb	postdec2,f,c
 12868                           
 12869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12870                           ;stkvar	_t @ sp[(-56)+52]
 12871  010D10  50E1               	movf	fsr1l,w,c
 12872  010D12  0FFC               	addlw	-4
 12873  010D14  6ED9               	movwf	fsr2l,c
 12874  010D16  50E2               	movf	fsr1h,w,c
 12875  010D18  6EDA               	movwf	fsr2h,c
 12876  010D1A  0EFF               	movlw	255
 12877  010D1C  22DA               	addwfc	fsr2h,f,c
 12878  010D1E  06DE               	decf	postinc2,f,c
 12879  010D20  0E00               	movlw	0
 12880  010D22  5ADD               	subwfb	postdec2,f,c
 12881  010D24                     l10387:
 12882                           
 12883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12884                           ;stkvar	_t @ sp[(-56)+52]
 12885  010D24  0EFC               	movlw	-4
 12886  010D26  006F FF8C  F025    	movff	plusw1,btemp
 12887  010D2C  0EFD               	movlw	-3
 12888  010D2E  50E3               	movf	plusw1,w,c
 12889  010D30  1025               	iorwf	btemp^0,w,c
 12890  010D32  A4D8               	btfss	status,2,c
 12891  010D34  D7C2               	goto	l10379
 12892                           
 12893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12894                           ;stkvar	_n @ sp[(-56)+32]
 12895  010D36  0EE8               	movlw	-24
 12896  010D38  006F FF8C  F02F    	movff	plusw1,btemp+10
 12897  010D3E  0EE9               	movlw	-23
 12898  010D40  006F FF8C  F030    	movff	plusw1,btemp+11
 12899  010D46  0E94               	movlw	low _dbuf
 12900  010D48  242F               	addwf	(btemp+10)^0,w,c
 12901  010D4A  6ED9               	movwf	fsr2l,c
 12902  010D4C  0E03               	movlw	high _dbuf
 12903  010D4E  2030               	addwfc	(btemp+11)^0,w,c
 12904  010D50  6EDA               	movwf	fsr2h,c
 12905                           
 12906                           ;stkvar	_d @ sp[(-56)+44]
 12907  010D52  0EF4               	movlw	-12
 12908  010D54  50E3               	movf	plusw1,w,c
 12909  010D56  0F30               	addlw	48
 12910  010D58  6EDF               	movwf	indf2,c
 12911                           
 12912                           ;stkvar	_n @ sp[(-56)+32]
 12913  010D5A  0EE8               	movlw	-24
 12914  010D5C  50E3               	movf	plusw1,w,c
 12915  010D5E  0F01               	addlw	1
 12916  010D60  6E25               	movwf	btemp^0,c
 12917  010D62  0EE8               	movlw	-24
 12918  010D64  0060  F097  FFE3   	movff	btemp,plusw1
 12919  010D6A  6A25               	clrf	btemp^0,c
 12920  010D6C  0EE9               	movlw	-23
 12921  010D6E  50E3               	movf	plusw1,w,c
 12922  010D70  2025               	addwfc	btemp^0,w,c
 12923  010D72  6E25               	movwf	btemp^0,c
 12924  010D74  0EE9               	movlw	-23
 12925  010D76  0060  F097  FFE3   	movff	btemp,plusw1
 12926                           
 12927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12928                           ;stkvar	_w @ sp[(-56)+38]
 12929  010D7C  50E1               	movf	fsr1l,w,c
 12930  010D7E  0FEE               	addlw	-18
 12931  010D80  6ED9               	movwf	fsr2l,c
 12932  010D82  50E2               	movf	fsr1h,w,c
 12933  010D84  6EDA               	movwf	fsr2h,c
 12934  010D86  0EFF               	movlw	255
 12935  010D88  22DA               	addwfc	fsr2h,f,c
 12936  010D8A  06DE               	decf	postinc2,f,c
 12937  010D8C  0E00               	movlw	0
 12938  010D8E  5ADD               	subwfb	postdec2,f,c
 12939  010D90                     l10395:
 12940                           
 12941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12942                           ;stkvar	_u @ sp[(-56)+12]
 12943  010D90  0ED4               	movlw	-44
 12944  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12945  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12946  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12947  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12948                           
 12949                           ;stkvar	_l @ sp[(-60)+20]
 12950  010DAA  0ED8               	movlw	-40
 12951  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12952  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12953  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12954  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12955  010DC4  EC14  F093         	call	___flmul	;wreg free
 12956  010DC8  0060  F097  FFE6   	movff	btemp,postinc1
 12957  010DCE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12958  010DD4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12959  010DDA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12960                           
 12961                           ;stkvar	_h @ sp[(-60)+24]
 12962  010DE0  0EDC               	movlw	-36
 12963  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12964  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12965  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12966  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12967  010DFA  ECEA  F0C4         	call	___flsub	;wreg free
 12968                           
 12969                           ;stkvar	_h @ sp[(-56)+24]
 12970  010DFE  0EE0               	movlw	-32
 12971  010E00  0060  F097  FFE3   	movff	btemp,plusw1
 12972  010E06  0EE1               	movlw	-31
 12973  010E08  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12974  010E0E  0EE2               	movlw	-30
 12975  010E10  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12976  010E16  0EE3               	movlw	-29
 12977  010E18  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12978                           
 12979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12980  010E1E  0E00               	movlw	0
 12981  010E20  6EE6               	movwf	postinc1,c
 12982  010E22  0E00               	movlw	0
 12983  010E24  6EE6               	movwf	postinc1,c
 12984  010E26  0E20               	movlw	32
 12985  010E28  6EE6               	movwf	postinc1,c
 12986  010E2A  0E41               	movlw	65
 12987  010E2C  6EE6               	movwf	postinc1,c
 12988                           
 12989                           ;stkvar	_u @ sp[(-60)+12]
 12990  010E2E  0ED0               	movlw	-48
 12991  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12992  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12993  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12994  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12995  010E48  EC07  F09B         	call	___fldiv	;wreg free
 12996                           
 12997                           ;stkvar	_u @ sp[(-56)+12]
 12998  010E4C  0ED4               	movlw	-44
 12999  010E4E  0060  F097  FFE3   	movff	btemp,plusw1
 13000  010E54  0ED5               	movlw	-43
 13001  010E56  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13002  010E5C  0ED6               	movlw	-42
 13003  010E5E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 13004  010E64  0ED7               	movlw	-41
 13005  010E66  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 13006                           
 13007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 13008                           ;stkvar	_ne @ sp[(-56)+46]
 13009  010E6C  50E1               	movf	fsr1l,w,c
 13010  010E6E  0FF6               	addlw	-10
 13011  010E70  6ED9               	movwf	fsr2l,c
 13012  010E72  50E2               	movf	fsr1h,w,c
 13013  010E74  6EDA               	movwf	fsr2h,c
 13014  010E76  0EFF               	movlw	255
 13015  010E78  22DA               	addwfc	fsr2h,f,c
 13016  010E7A  06DE               	decf	postinc2,f,c
 13017  010E7C  0E00               	movlw	0
 13018  010E7E  5ADD               	subwfb	postdec2,f,c
 13019                           
 13020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 13021                           ;stkvar	_i @ sp[(-56)+36]
 13022  010E80  0EEC               	movlw	-20
 13023  010E82  50E3               	movf	plusw1,w,c
 13024  010E84  0F01               	addlw	1
 13025  010E86  6E25               	movwf	btemp^0,c
 13026  010E88  0EEC               	movlw	-20
 13027  010E8A  0060  F097  FFE3   	movff	btemp,plusw1
 13028  010E90  6A25               	clrf	btemp^0,c
 13029  010E92  0EED               	movlw	-19
 13030  010E94  50E3               	movf	plusw1,w,c
 13031  010E96  2025               	addwfc	btemp^0,w,c
 13032  010E98  6E25               	movwf	btemp^0,c
 13033  010E9A  0EED               	movlw	-19
 13034  010E9C  0060  F097  FFE3   	movff	btemp,plusw1
 13035  010EA2                     l10403:
 13036                           
 13037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13038                           ;stkvar	_m @ sp[(-56)+48]
 13039                           ;stkvar	_i @ sp[(-56)+36]
 13040  010EA2  50E1               	movf	fsr1l,w,c
 13041  010EA4  0FEC               	addlw	-20
 13042  010EA6  6ED9               	movwf	fsr2l,c
 13043  010EA8  50E2               	movf	fsr1h,w,c
 13044  010EAA  6EDA               	movwf	fsr2h,c
 13045  010EAC  0EFF               	movlw	255
 13046  010EAE  22DA               	addwfc	fsr2h,f,c
 13047  010EB0  0EF8               	movlw	-8
 13048  010EB2  50E3               	movf	plusw1,w,c
 13049  010EB4  5CDE               	subwf	postinc2,w,c
 13050  010EB6  50DE               	movf	postinc2,w,c
 13051  010EB8  0A80               	xorlw	128
 13052  010EBA  6E25               	movwf	btemp^0,c
 13053  010EBC  0EF9               	movlw	-7
 13054  010EBE  50E3               	movf	plusw1,w,c
 13055  010EC0  0A80               	xorlw	128
 13056  010EC2  5825               	subwfb	btemp^0,w,c
 13057  010EC4  B0D8               	btfsc	status,0,c
 13058  010EC6  D00E               	goto	u9970
 13059                           
 13060                           ;stkvar	_n @ sp[(-56)+32]
 13061  010EC8  0EE9               	movlw	-23
 13062  010ECA  BEE3               	btfsc	plusw1,7,c
 13063  010ECC  D633               	goto	l10353
 13064  010ECE  0EE9               	movlw	-23
 13065  010ED0  50E3               	movf	plusw1,w,c
 13066  010ED2  E108               	bnz	u9970
 13067  010ED4  0EE8               	movlw	-24
 13068  010ED6  006F FF8C  F025    	movff	plusw1,btemp
 13069  010EDC  0E4B               	movlw	75
 13070  010EDE  5E25               	subwf	btemp^0,f,c
 13071  010EE0  A0D8               	btfss	status,0,c
 13072  010EE2  D628               	goto	l10353
 13073  010EE4                     u9970:
 13074                           
 13075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13076                           ;stkvar	_pp @ sp[(-56)+50]
 13077  010EE4  0EFA               	movlw	-6
 13078  010EE6  006F FF8C  F025    	movff	plusw1,btemp
 13079  010EEC  0EFB               	movlw	-5
 13080  010EEE  50E3               	movf	plusw1,w,c
 13081  010EF0  1025               	iorwf	btemp^0,w,c
 13082  010EF2  B4D8               	btfsc	status,2,c
 13083  010EF4  A80E               	btfss	_flags^0,4,c
 13084  010EF6  D021               	goto	l10415
 13085                           
 13086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13087                           ;stkvar	_n @ sp[(-56)+32]
 13088  010EF8  0EE8               	movlw	-24
 13089  010EFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13090  010F00  0EE9               	movlw	-23
 13091  010F02  006F FF8C  F030    	movff	plusw1,btemp+11
 13092  010F08  0E94               	movlw	low _dbuf
 13093  010F0A  242F               	addwf	(btemp+10)^0,w,c
 13094  010F0C  6ED9               	movwf	fsr2l,c
 13095  010F0E  0E03               	movlw	high _dbuf
 13096  010F10  2030               	addwfc	(btemp+11)^0,w,c
 13097  010F12  6EDA               	movwf	fsr2h,c
 13098  010F14  0E2E               	movlw	46
 13099  010F16  6EDF               	movwf	indf2,c
 13100                           
 13101                           ;stkvar	_n @ sp[(-56)+32]
 13102  010F18  0EE8               	movlw	-24
 13103  010F1A  50E3               	movf	plusw1,w,c
 13104  010F1C  0F01               	addlw	1
 13105  010F1E  6E25               	movwf	btemp^0,c
 13106  010F20  0EE8               	movlw	-24
 13107  010F22  0060  F097  FFE3   	movff	btemp,plusw1
 13108  010F28  6A25               	clrf	btemp^0,c
 13109  010F2A  0EE9               	movlw	-23
 13110  010F2C  50E3               	movf	plusw1,w,c
 13111  010F2E  2025               	addwfc	btemp^0,w,c
 13112  010F30  6E25               	movwf	btemp^0,c
 13113  010F32  0EE9               	movlw	-23
 13114  010F34  0060  F097  FFE3   	movff	btemp,plusw1
 13115  010F3A                     l10415:
 13116                           
 13117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13118                           ;stkvar	_n @ sp[(-56)+32]
 13119  010F3A  0EE8               	movlw	-24
 13120  010F3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 13121  010F42  0EE9               	movlw	-23
 13122  010F44  006F FF8C  F030    	movff	plusw1,btemp+11
 13123  010F4A  0E94               	movlw	low _dbuf
 13124  010F4C  242F               	addwf	(btemp+10)^0,w,c
 13125  010F4E  6ED9               	movwf	fsr2l,c
 13126  010F50  0E03               	movlw	high _dbuf
 13127  010F52  2030               	addwfc	(btemp+11)^0,w,c
 13128  010F54  6EDA               	movwf	fsr2h,c
 13129  010F56  0E00               	movlw	0
 13130  010F58  6EDF               	movwf	indf2,c
 13131                           
 13132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13133                           ;stkvar	_nmode @ sp[(-56)+55]
 13134  010F5A  0EFF               	movlw	-1
 13135  010F5C  006F FF8C  F025    	movff	plusw1,btemp
 13136  010F62  0E65               	movlw	101
 13137  010F64  1825               	xorwf	btemp^0,w,c
 13138  010F66  A4D8               	btfss	status,2,c
 13139  010F68  EF16  F081         	goto	l10219
 13140                           
 13141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13142  010F6C  0E4F               	movlw	79
 13143  010F6E  6E2F               	movwf	(btemp+10)^0,c
 13144  010F70  0E00               	movlw	0
 13145  010F72  6E30               	movwf	(btemp+11)^0,c
 13146                           
 13147                           ;stkvar	_i @ sp[(-56)+36]
 13148  010F74  0EEC               	movlw	-20
 13149  010F76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13150  010F7C  0EED               	movlw	-19
 13151  010F7E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13152                           
 13153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13154                           ;stkvar	_i @ sp[(-56)+36]
 13155  010F84  0EEC               	movlw	-20
 13156  010F86  006F FF8C  F02F    	movff	plusw1,btemp+10
 13157  010F8C  0EED               	movlw	-19
 13158  010F8E  006F FF8C  F030    	movff	plusw1,btemp+11
 13159  010F94  0E94               	movlw	low _dbuf
 13160  010F96  242F               	addwf	(btemp+10)^0,w,c
 13161  010F98  6ED9               	movwf	fsr2l,c
 13162  010F9A  0E03               	movlw	high _dbuf
 13163  010F9C  2030               	addwfc	(btemp+11)^0,w,c
 13164  010F9E  6EDA               	movwf	fsr2h,c
 13165  010FA0  0E00               	movlw	0
 13166  010FA2  6EDF               	movwf	indf2,c
 13167                           
 13168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13169                           ;stkvar	_sign @ sp[(-56)+42]
 13170  010FA4  0EF2               	movlw	-14
 13171  010FA6  6AE3               	clrf	plusw1,c
 13172  010FA8  0EF3               	movlw	-13
 13173  010FAA  6AE3               	clrf	plusw1,c
 13174                           
 13175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13176                           ;stkvar	_e @ sp[(-56)+34]
 13177  010FAC  0EEB               	movlw	-21
 13178  010FAE  AEE3               	btfss	plusw1,7,c
 13179  010FB0  D012               	goto	l10429
 13180                           
 13181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13182  010FB2  0E01               	movlw	1
 13183  010FB4  6E2F               	movwf	(btemp+10)^0,c
 13184  010FB6  0E00               	movlw	0
 13185  010FB8  6E30               	movwf	(btemp+11)^0,c
 13186                           
 13187                           ;stkvar	_sign @ sp[(-56)+42]
 13188  010FBA  0EF2               	movlw	-14
 13189  010FBC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13190  010FC2  0EF3               	movlw	-13
 13191  010FC4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13192                           
 13193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13194                           ;stkvar	_e @ sp[(-56)+34]
 13195                           ;stkvar	_e @ sp[(-56)+34]
 13196  010FCA  0EEA               	movlw	-22
 13197  010FCC  6CE3               	negf	plusw1,c
 13198  010FCE  0EEB               	movlw	-21
 13199  010FD0  1EE3               	comf	plusw1,f,c
 13200  010FD2  B0D8               	btfsc	status,0,c
 13201  010FD4  2AE3               	incf	plusw1,f,c
 13202  010FD6                     l10429:
 13203                           
 13204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13205  010FD6  0E02               	movlw	2
 13206  010FD8  6E2F               	movwf	(btemp+10)^0,c
 13207  010FDA  0E00               	movlw	0
 13208  010FDC  6E30               	movwf	(btemp+11)^0,c
 13209                           
 13210                           ;stkvar	_p @ sp[(-56)+40]
 13211  010FDE  0EF0               	movlw	-16
 13212  010FE0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13213  010FE6  0EF1               	movlw	-15
 13214  010FE8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13215                           
 13216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13217  010FEE  D051               	goto	l10441
 13218  010FF0                     l10431:
 13219                           
 13220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13221                           ;stkvar	_i @ sp[(-56)+36]
 13222  010FF0  50E1               	movf	fsr1l,w,c
 13223  010FF2  0FEC               	addlw	-20
 13224  010FF4  6ED9               	movwf	fsr2l,c
 13225  010FF6  50E2               	movf	fsr1h,w,c
 13226  010FF8  6EDA               	movwf	fsr2h,c
 13227  010FFA  0EFF               	movlw	255
 13228  010FFC  22DA               	addwfc	fsr2h,f,c
 13229  010FFE  06DE               	decf	postinc2,f,c
 13230  011000  0E00               	movlw	0
 13231  011002  5ADD               	subwfb	postdec2,f,c
 13232                           
 13233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13234                           ;stkvar	_i @ sp[(-56)+36]
 13235  011004  0EEC               	movlw	-20
 13236  011006  006F FF8C  F02F    	movff	plusw1,btemp+10
 13237  01100C  0EED               	movlw	-19
 13238  01100E  006F FF8C  F030    	movff	plusw1,btemp+11
 13239  011014  0E94               	movlw	low _dbuf
 13240  011016  242F               	addwf	(btemp+10)^0,w,c
 13241  011018  6ED9               	movwf	fsr2l,c
 13242  01101A  0E03               	movlw	high _dbuf
 13243  01101C  2030               	addwfc	(btemp+11)^0,w,c
 13244  01101E  6EDA               	movwf	fsr2h,c
 13245  011020  0E0A               	movlw	10
 13246  011022  6EE6               	movwf	postinc1,c
 13247  011024  0E00               	movlw	0
 13248  011026  6EE6               	movwf	postinc1,c
 13249                           
 13250                           ;stkvar	_e @ sp[(-58)+34]
 13251  011028  0EE8               	movlw	-24
 13252  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13253  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13254  011036  EC5A  F0B8         	call	___awmod	;wreg free
 13255  01103A  5025               	movf	btemp^0,w,c
 13256  01103C  0F30               	addlw	48
 13257  01103E  6EDF               	movwf	indf2,c
 13258                           
 13259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13260  011040  0E0A               	movlw	10
 13261  011042  6EE6               	movwf	postinc1,c
 13262  011044  0E00               	movlw	0
 13263  011046  6EE6               	movwf	postinc1,c
 13264                           
 13265                           ;stkvar	_e @ sp[(-58)+34]
 13266  011048  0EE8               	movlw	-24
 13267  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13268  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13269  011056  ECF6  F0B5         	call	___awdiv	;wreg free
 13270                           
 13271                           ;stkvar	_e @ sp[(-56)+34]
 13272  01105A  0EEA               	movlw	-22
 13273  01105C  0060  F097  FFE3   	movff	btemp,plusw1
 13274  011062  0EEB               	movlw	-21
 13275  011064  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13276                           
 13277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13278                           ;stkvar	_p @ sp[(-56)+40]
 13279  01106A  50E1               	movf	fsr1l,w,c
 13280  01106C  0FF0               	addlw	-16
 13281  01106E  6ED9               	movwf	fsr2l,c
 13282  011070  50E2               	movf	fsr1h,w,c
 13283  011072  6EDA               	movwf	fsr2h,c
 13284  011074  0EFF               	movlw	255
 13285  011076  22DA               	addwfc	fsr2h,f,c
 13286  011078  06DE               	decf	postinc2,f,c
 13287  01107A  0E00               	movlw	0
 13288  01107C  5ADD               	subwfb	postdec2,f,c
 13289                           
 13290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13291                           ;stkvar	_w @ sp[(-56)+38]
 13292  01107E  50E1               	movf	fsr1l,w,c
 13293  011080  0FEE               	addlw	-18
 13294  011082  6ED9               	movwf	fsr2l,c
 13295  011084  50E2               	movf	fsr1h,w,c
 13296  011086  6EDA               	movwf	fsr2h,c
 13297  011088  0EFF               	movlw	255
 13298  01108A  22DA               	addwfc	fsr2h,f,c
 13299  01108C  06DE               	decf	postinc2,f,c
 13300  01108E  0E00               	movlw	0
 13301  011090  5ADD               	subwfb	postdec2,f,c
 13302  011092                     l10441:
 13303                           
 13304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13305                           ;stkvar	_e @ sp[(-56)+34]
 13306  011092  0EEA               	movlw	-22
 13307  011094  006F FF8C  F025    	movff	plusw1,btemp
 13308  01109A  0EEB               	movlw	-21
 13309  01109C  50E3               	movf	plusw1,w,c
 13310  01109E  1025               	iorwf	btemp^0,w,c
 13311  0110A0  A4D8               	btfss	status,2,c
 13312  0110A2  D7A6               	goto	l10431
 13313                           
 13314                           ;stkvar	_p @ sp[(-56)+40]
 13315  0110A4  0EF1               	movlw	-15
 13316  0110A6  BEE3               	btfsc	plusw1,7,c
 13317  0110A8  D007               	goto	u10030
 13318  0110AA  0EF1               	movlw	-15
 13319  0110AC  50E3               	movf	plusw1,w,c
 13320  0110AE  E1A0               	bnz	l10431
 13321  0110B0  0EF0               	movlw	-16
 13322  0110B2  04E3               	decf	plusw1,w,c
 13323  0110B4  B0D8               	btfsc	status,0,c
 13324  0110B6  D79C               	goto	l10431
 13325  0110B8                     u10030:
 13326                           
 13327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13328                           ;stkvar	_i @ sp[(-56)+36]
 13329  0110B8  50E1               	movf	fsr1l,w,c
 13330  0110BA  0FEC               	addlw	-20
 13331  0110BC  6ED9               	movwf	fsr2l,c
 13332  0110BE  50E2               	movf	fsr1h,w,c
 13333  0110C0  6EDA               	movwf	fsr2h,c
 13334  0110C2  0EFF               	movlw	255
 13335  0110C4  22DA               	addwfc	fsr2h,f,c
 13336  0110C6  06DE               	decf	postinc2,f,c
 13337  0110C8  0E00               	movlw	0
 13338  0110CA  5ADD               	subwfb	postdec2,f,c
 13339                           
 13340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13341                           ;stkvar	_sign @ sp[(-56)+42]
 13342  0110CC  0EF2               	movlw	-14
 13343  0110CE  006F FF8C  F025    	movff	plusw1,btemp
 13344  0110D4  0EF3               	movlw	-13
 13345  0110D6  50E3               	movf	plusw1,w,c
 13346  0110D8  1025               	iorwf	btemp^0,w,c
 13347  0110DA  A4D8               	btfss	status,2,c
 13348  0110DC  D002               	goto	l10451
 13349  0110DE  0E2B               	movlw	43
 13350  0110E0  D001               	goto	L11
 13351  0110E2                     l10451:
 13352  0110E2  0E2D               	movlw	45
 13353  0110E4                     L11:
 13354  0110E4  6E2F               	movwf	(btemp+10)^0,c
 13355  0110E6  0E00               	movlw	0
 13356  0110E8  6E30               	movwf	(btemp+11)^0,c
 13357                           
 13358                           ;stkvar	_efgtoa$4998 @ sp[(-56)+4]
 13359  0110EA  0ECC               	movlw	-52
 13360  0110EC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13361  0110F2  0ECD               	movlw	-51
 13362  0110F4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13363                           
 13364                           ;stkvar	_efgtoa$4998 @ sp[(-56)+4]
 13365                           ;stkvar	_i @ sp[(-56)+36]
 13366  0110FA  0EEC               	movlw	-20
 13367  0110FC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13368  011102  0EED               	movlw	-19
 13369  011104  006F FF8C  F030    	movff	plusw1,btemp+11
 13370  01110A  0E94               	movlw	low _dbuf
 13371  01110C  242F               	addwf	(btemp+10)^0,w,c
 13372  01110E  6ED9               	movwf	fsr2l,c
 13373  011110  0E03               	movlw	high _dbuf
 13374  011112  2030               	addwfc	(btemp+11)^0,w,c
 13375  011114  6EDA               	movwf	fsr2h,c
 13376  011116  0ECC               	movlw	-52
 13377  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13378                           
 13379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13380                           ;stkvar	_w @ sp[(-56)+38]
 13381  01111E  50E1               	movf	fsr1l,w,c
 13382  011120  0FEE               	addlw	-18
 13383  011122  6ED9               	movwf	fsr2l,c
 13384  011124  50E2               	movf	fsr1h,w,c
 13385  011126  6EDA               	movwf	fsr2h,c
 13386  011128  0EFF               	movlw	255
 13387  01112A  22DA               	addwfc	fsr2h,f,c
 13388  01112C  06DE               	decf	postinc2,f,c
 13389  01112E  0E00               	movlw	0
 13390  011130  5ADD               	subwfb	postdec2,f,c
 13391                           
 13392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13393                           ;stkvar	_i @ sp[(-56)+36]
 13394  011132  50E1               	movf	fsr1l,w,c
 13395  011134  0FEC               	addlw	-20
 13396  011136  6ED9               	movwf	fsr2l,c
 13397  011138  50E2               	movf	fsr1h,w,c
 13398  01113A  6EDA               	movwf	fsr2h,c
 13399  01113C  0EFF               	movlw	255
 13400  01113E  22DA               	addwfc	fsr2h,f,c
 13401  011140  06DE               	decf	postinc2,f,c
 13402  011142  0E00               	movlw	0
 13403  011144  5ADD               	subwfb	postdec2,f,c
 13404  011146  0EBF               	movlw	191
 13405  011148  6E2F               	movwf	(btemp+10)^0,c
 13406  01114A  0EFF               	movlw	255
 13407  01114C  6E30               	movwf	(btemp+11)^0,c
 13408                           
 13409                           ;stkvar	_c @ sp[(-56)+-7]
 13410  01114E  0EC1               	movlw	-63
 13411  011150  50E3               	movf	plusw1,w,c
 13412  011152  6E2D               	movwf	(btemp+8)^0,c
 13413  011154  6A2E               	clrf	(btemp+9)^0,c
 13414  011156  502F               	movf	(btemp+10)^0,w,c
 13415  011158  262D               	addwf	(btemp+8)^0,f,c
 13416  01115A  5030               	movf	(btemp+11)^0,w,c
 13417  01115C  222E               	addwfc	(btemp+9)^0,f,c
 13418  01115E  502E               	movf	(btemp+9)^0,w,c
 13419  011160  E106               	bnz	u10050
 13420  011162  0E1A               	movlw	26
 13421  011164  5C2D               	subwf	(btemp+8)^0,w,c
 13422  011166  B0D8               	btfsc	status,0,c
 13423  011168  D002               	goto	u10050
 13424  01116A  0E01               	movlw	1
 13425  01116C  D001               	goto	u10060
 13426  01116E                     u10050:
 13427  01116E  0E00               	movlw	0
 13428  011170                     u10060:
 13429  011170  6E2F               	movwf	(btemp+10)^0,c
 13430  011172  6A30               	clrf	(btemp+11)^0,c
 13431                           
 13432                           ;stkvar	_efgtoa$5000 @ sp[(-56)+0]
 13433  011174  0EC8               	movlw	-56
 13434  011176  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13435  01117C  0EC9               	movlw	-55
 13436  01117E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13437                           
 13438                           ;stkvar	_efgtoa$5000 @ sp[(-56)+0]
 13439  011184  0EC8               	movlw	-56
 13440  011186  006F FF8C  F025    	movff	plusw1,btemp
 13441  01118C  0EC9               	movlw	-55
 13442  01118E  50E3               	movf	plusw1,w,c
 13443  011190  1025               	iorwf	btemp^0,w,c
 13444  011192  A4D8               	btfss	status,2,c
 13445  011194  D002               	goto	l10467
 13446  011196  0E65               	movlw	101
 13447  011198  D001               	goto	L12
 13448  01119A                     l10467:
 13449  01119A  0E45               	movlw	69
 13450  01119C                     L12:
 13451  01119C  6E2F               	movwf	(btemp+10)^0,c
 13452  01119E  0E00               	movlw	0
 13453  0111A0  6E30               	movwf	(btemp+11)^0,c
 13454                           
 13455                           ;stkvar	_efgtoa$4999 @ sp[(-56)+2]
 13456  0111A2  0ECA               	movlw	-54
 13457  0111A4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13458  0111AA  0ECB               	movlw	-53
 13459  0111AC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13460                           
 13461                           ;stkvar	_efgtoa$4999 @ sp[(-56)+2]
 13462                           ;stkvar	_i @ sp[(-56)+36]
 13463  0111B2  0EEC               	movlw	-20
 13464  0111B4  006F FF8C  F02F    	movff	plusw1,btemp+10
 13465  0111BA  0EED               	movlw	-19
 13466  0111BC  006F FF8C  F030    	movff	plusw1,btemp+11
 13467  0111C2  0E94               	movlw	low _dbuf
 13468  0111C4  242F               	addwf	(btemp+10)^0,w,c
 13469  0111C6  6ED9               	movwf	fsr2l,c
 13470  0111C8  0E03               	movlw	high _dbuf
 13471  0111CA  2030               	addwfc	(btemp+11)^0,w,c
 13472  0111CC  6EDA               	movwf	fsr2h,c
 13473  0111CE  0ECA               	movlw	-54
 13474  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13475                           
 13476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13477                           ;stkvar	_w @ sp[(-56)+38]
 13478  0111D6  50E1               	movf	fsr1l,w,c
 13479  0111D8  0FEE               	addlw	-18
 13480  0111DA  6ED9               	movwf	fsr2l,c
 13481  0111DC  50E2               	movf	fsr1h,w,c
 13482  0111DE  6EDA               	movwf	fsr2h,c
 13483  0111E0  0EFF               	movlw	255
 13484  0111E2  22DA               	addwfc	fsr2h,f,c
 13485  0111E4  06DE               	decf	postinc2,f,c
 13486  0111E6  0E00               	movlw	0
 13487  0111E8  5ADD               	subwfb	postdec2,f,c
 13488                           
 13489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13490                           ;stkvar	_i @ sp[(-56)+36]
 13491  0111EA  0EEC               	movlw	-20
 13492  0111EC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13493  0111F2  0EED               	movlw	-19
 13494  0111F4  006F FF8C  F030    	movff	plusw1,btemp+11
 13495  0111FA  0E94               	movlw	low _dbuf
 13496  0111FC  242F               	addwf	(btemp+10)^0,w,c
 13497  0111FE  6E2D               	movwf	(btemp+8)^0,c
 13498  011200  0E03               	movlw	high _dbuf
 13499  011202  2030               	addwfc	(btemp+11)^0,w,c
 13500  011204  6E2E               	movwf	(btemp+9)^0,c
 13501  011206  0060  F0B7  FFE6   	movff	btemp+8,postinc1
 13502  01120C  0060  F0BB  FFE6   	movff	btemp+9,postinc1
 13503                           
 13504                           ;stkvar	_n @ sp[(-58)+32]
 13505  011212  0E94               	movlw	low _dbuf
 13506  011214  6E2F               	movwf	(btemp+10)^0,c
 13507  011216  0E03               	movlw	high _dbuf
 13508  011218  6E30               	movwf	(btemp+11)^0,c
 13509  01121A  0EE6               	movlw	-26
 13510  01121C  50E3               	movf	plusw1,w,c
 13511  01121E  262F               	addwf	(btemp+10)^0,f,c
 13512  011220  0EE7               	movlw	-25
 13513  011222  50E3               	movf	plusw1,w,c
 13514  011224  2230               	addwfc	(btemp+11)^0,f,c
 13515  011226  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 13516  01122C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 13517  011232  ECF1  F0BB         	call	_strcpy	;wreg free
 13518  011236  EF16  F081         	goto	l10219
 13519  01123A                     l2046:
 13520                           
 13521                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13522  01123A  0EC1               	movlw	193
 13523  01123C  26E1               	addwf	fsr1l,f,c
 13524  01123E  0EFF               	movlw	255
 13525  011240  22E2               	addwfc	fsr1h,f,c
 13526  011242  0012               	return		;funcret
 13527  011244                     __end_of_efgtoa:
 13528                           	opt callstack 0
 13529                           
 13530 ;; *************** function _tolower *****************
 13531 ;; Defined at:
 13532 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;  c               2  [STACK] int 
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;		None
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  2  [STACK] int 
 13539 ;; Registers used:
 13540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13550 ;;Total ram usage:        0 bytes
 13551 ;; Hardware stack levels used:    1
 13552 ;; Hardware stack levels required when called:    8
 13553 ;; This function calls:
 13554 ;;		_isupper
 13555 ;; This function is called by:
 13556 ;;		_efgtoa
 13557 ;;		_vfpfcnvrt
 13558 ;; This function uses a reentrant model
 13559 ;;
 13560                           
 13561                           	psect	text49
 13562  01826A                     __ptext49:
 13563                           	opt callstack 0
 13564  01826A                     _tolower:
 13565                           	opt callstack 0
 13566                           
 13567                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13568  01826A  52E6               	movf	postinc1,f,c
 13569  01826C  52E6               	movf	postinc1,f,c
 13570                           
 13571                           ;stkvar	_c @ sp[(-2)+-2]
 13572                           
 13573                           ;incstack = 0
 13574  01826E  0EFC               	movlw	-4
 13575  018270  50E3               	movf	plusw1,w,c
 13576  018272  0FBF               	addlw	191
 13577  018274  6E2F               	movwf	(btemp+10)^0,c
 13578  018276  0EFD               	movlw	-3
 13579  018278  006F FF8C  F030    	movff	plusw1,btemp+11
 13580  01827E  0EFF               	movlw	255
 13581  018280  2230               	addwfc	(btemp+11)^0,f,c
 13582  018282  5030               	movf	(btemp+11)^0,w,c
 13583  018284  E106               	bnz	u4910
 13584  018286  0E1A               	movlw	26
 13585  018288  5C2F               	subwf	(btemp+10)^0,w,c
 13586  01828A  B0D8               	btfsc	status,0,c
 13587  01828C  D002               	goto	u4910
 13588  01828E  0E01               	movlw	1
 13589  018290  D001               	goto	u4920
 13590  018292                     u4910:
 13591  018292  0E00               	movlw	0
 13592  018294                     u4920:
 13593  018294  6E2F               	movwf	(btemp+10)^0,c
 13594  018296  6A30               	clrf	(btemp+11)^0,c
 13595                           
 13596                           ;stkvar	_tolower$5666 @ sp[(-2)+0]
 13597  018298  0EFE               	movlw	-2
 13598  01829A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13599  0182A0  0EFF               	movlw	-1
 13600  0182A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13601                           
 13602                           ;stkvar	_tolower$5666 @ sp[(-2)+0]
 13603  0182A8  0EFE               	movlw	-2
 13604  0182AA  006F FF8C  F025    	movff	plusw1,btemp
 13605  0182B0  0EFF               	movlw	-1
 13606  0182B2  50E3               	movf	plusw1,w,c
 13607  0182B4  1025               	iorwf	btemp^0,w,c
 13608  0182B6  B4D8               	btfsc	status,2,c
 13609  0182B8  D00D               	goto	l6687
 13610                           
 13611                           ;stkvar	_c @ sp[(-2)+-2]
 13612  0182BA  0EFC               	movlw	-4
 13613  0182BC  006F FF8C  F025    	movff	plusw1,btemp
 13614  0182C2  0EFD               	movlw	-3
 13615  0182C4  006F FF8C  F026    	movff	plusw1,btemp+1
 13616  0182CA  0E20               	movlw	32
 13617  0182CC  1225               	iorwf	btemp^0,f,c
 13618  0182CE  0E00               	movlw	0
 13619  0182D0  1226               	iorwf	(btemp+1)^0,f,c
 13620  0182D2  D008               	goto	l3069
 13621  0182D4                     l6687:
 13622                           
 13623                           ;stkvar	_c @ sp[(-2)+-2]
 13624  0182D4  0EFC               	movlw	-4
 13625  0182D6  006F FF8C  F025    	movff	plusw1,btemp
 13626  0182DC  0EFD               	movlw	-3
 13627  0182DE  006F FF8C  F026    	movff	plusw1,btemp+1
 13628  0182E4                     l3069:
 13629                           
 13630                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13631  0182E4  52E5               	movf	postdec1,f,c
 13632  0182E6  52E5               	movf	postdec1,f,c
 13633  0182E8  52E5               	movf	postdec1,f,c
 13634  0182EA  52E5               	movf	postdec1,f,c
 13635  0182EC  0012               	return		;funcret
 13636  0182EE                     __end_of_tolower:
 13637                           	opt callstack 0
 13638                           
 13639 ;; *************** function _isupper *****************
 13640 ;; Defined at:
 13641 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13642 ;; Parameters:    Size  Location     Type
 13643 ;;  c               2  [STACK] int 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;		None
 13646 ;; Return value:  Size  Location     Type
 13647 ;;                  2  [STACK] int 
 13648 ;; Registers used:
 13649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13650 ;; Tracked objects:
 13651 ;;		On entry : 0/0
 13652 ;;		On exit  : 0/0
 13653 ;;		Unchanged: 0/0
 13654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13659 ;;Total ram usage:        0 bytes
 13660 ;; Hardware stack levels used:    1
 13661 ;; Hardware stack levels required when called:    7
 13662 ;; This function calls:
 13663 ;;		Nothing
 13664 ;; This function is called by:
 13665 ;;		_efgtoa
 13666 ;;		_xtoa
 13667 ;;		_vfpfcnvrt
 13668 ;;		_tolower
 13669 ;; This function uses a reentrant model
 13670 ;;
 13671                           
 13672                           	psect	text50
 13673  018E10                     __ptext50:
 13674                           	opt callstack 0
 13675  018E10                     _isupper:
 13676                           	opt callstack 16
 13677                           
 13678                           ;stkvar	_c @ sp[(0)+-2]
 13679                           
 13680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13681                           ;incstack = 0
 13682  018E10  0EFE               	movlw	-2
 13683  018E12  50E3               	movf	plusw1,w,c
 13684  018E14  0FBF               	addlw	191
 13685  018E16  6E2F               	movwf	(btemp+10)^0,c
 13686  018E18  0EFF               	movlw	-1
 13687  018E1A  006F FF8C  F030    	movff	plusw1,btemp+11
 13688  018E20  0EFF               	movlw	255
 13689  018E22  2230               	addwfc	(btemp+11)^0,f,c
 13690  018E24  5030               	movf	(btemp+11)^0,w,c
 13691  018E26  E106               	bnz	u4730
 13692  018E28  0E1A               	movlw	26
 13693  018E2A  5C2F               	subwf	(btemp+10)^0,w,c
 13694  018E2C  B0D8               	btfsc	status,0,c
 13695  018E2E  D002               	goto	u4730
 13696  018E30  0E01               	movlw	1
 13697  018E32  D001               	goto	u4740
 13698  018E34                     u4730:
 13699  018E34  0E00               	movlw	0
 13700  018E36                     u4740:
 13701  018E36  6E25               	movwf	btemp^0,c
 13702  018E38  6A26               	clrf	(btemp+1)^0,c
 13703                           
 13704                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13705  018E3A  52E5               	movf	postdec1,f,c
 13706  018E3C  52E5               	movf	postdec1,f,c
 13707  018E3E  0012               	return		;funcret
 13708  018E40                     __end_of_isupper:
 13709                           	opt callstack 0
 13710                           
 13711 ;; *************** function _strcpy *****************
 13712 ;; Defined at:
 13713 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13714 ;; Parameters:    Size  Location     Type
 13715 ;;  dest            2  [STACK] PTR unsigned char 
 13716 ;;		 -> dbuf(80), 
 13717 ;;  src             2  [STACK] PTR const unsigned char 
 13718 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13719 ;;		 -> dbuf(80), 
 13720 ;; Auto vars:     Size  Location     Type
 13721 ;;  d               2  [STACK] PTR unsigned char 
 13722 ;;		 -> dbuf(80), 
 13723 ;;  s               2  [STACK] PTR const unsigned char 
 13724 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13725 ;;		 -> dbuf(80), 
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  2  [STACK] PTR unsigned char 
 13728 ;; Registers used:
 13729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13739 ;;Total ram usage:        0 bytes
 13740 ;; Hardware stack levels used:    1
 13741 ;; Hardware stack levels required when called:    7
 13742 ;; This function calls:
 13743 ;;		Nothing
 13744 ;; This function is called by:
 13745 ;;		_efgtoa
 13746 ;; This function uses a reentrant model
 13747 ;;
 13748                           
 13749                           	psect	text51
 13750  0177E2                     __ptext51:
 13751                           	opt callstack 0
 13752  0177E2                     _strcpy:
 13753                           	opt callstack 0
 13754                           
 13755                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13756  0177E2  52E6               	movf	postinc1,f,c
 13757  0177E4  52E6               	movf	postinc1,f,c
 13758  0177E6  52E6               	movf	postinc1,f,c
 13759  0177E8  52E6               	movf	postinc1,f,c
 13760                           
 13761                           ;stkvar	_src @ sp[(-4)+-4]
 13762                           
 13763                           ;incstack = 0
 13764  0177EA  0EF8               	movlw	-8
 13765  0177EC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13766  0177F2  0EF9               	movlw	-7
 13767  0177F4  006F FF8C  F030    	movff	plusw1,btemp+11
 13768                           
 13769                           ;stkvar	_s @ sp[(-4)+2]
 13770  0177FA  0EFF               	movlw	-1
 13771  0177FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13772  017802  0EFE               	movlw	-2
 13773  017804  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13774                           
 13775                           ;stkvar	_dest @ sp[(-4)+-2]
 13776  01780A  0EFA               	movlw	-6
 13777  01780C  006F FF8C  F02F    	movff	plusw1,btemp+10
 13778  017812  0EFB               	movlw	-5
 13779  017814  006F FF8C  F030    	movff	plusw1,btemp+11
 13780                           
 13781                           ;stkvar	_d @ sp[(-4)+0]
 13782  01781A  0EFD               	movlw	-3
 13783  01781C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13784  017822  0EFC               	movlw	-4
 13785  017824  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13786  01782A                     l10093:
 13787                           
 13788                           ;stkvar	_s @ sp[(-4)+2]
 13789  01782A  50E1               	movf	fsr1l,w,c
 13790  01782C  0FFE               	addlw	-2
 13791  01782E  6ED9               	movwf	fsr2l,c
 13792  017830  50E2               	movf	fsr1h,w,c
 13793  017832  6EDA               	movwf	fsr2h,c
 13794  017834  0EFF               	movlw	255
 13795  017836  22DA               	addwfc	fsr2h,f,c
 13796  017838  006F FF7C  F02F    	movff	indf2,btemp+10
 13797  01783E  0E01               	movlw	1
 13798  017840  26DE               	addwf	postinc2,f,c
 13799  017842  006F FF7C  F030    	movff	indf2,btemp+11
 13800  017848  0E00               	movlw	0
 13801  01784A  22DD               	addwfc	postdec2,f,c
 13802  01784C  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
 13803  017852  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
 13804  017858  0E00               	movlw	low (__mediumconst shr (0+16))
 13805  01785A  6EF8               	movwf	tblptru,c
 13806                           
 13807                           ;stkvar	_d @ sp[(-4)+0]
 13808  01785C  50E1               	movf	fsr1l,w,c
 13809  01785E  0FFC               	addlw	-4
 13810  017860  6ED9               	movwf	fsr2l,c
 13811  017862  50E2               	movf	fsr1h,w,c
 13812  017864  6EDA               	movwf	fsr2h,c
 13813  017866  0EFF               	movlw	255
 13814  017868  22DA               	addwfc	fsr2h,f,c
 13815  01786A  006F FF7C  F02F    	movff	indf2,btemp+10
 13816  017870  0E01               	movlw	1
 13817  017872  26DE               	addwf	postinc2,f,c
 13818  017874  006F FF7C  F030    	movff	indf2,btemp+11
 13819  01787A  0E00               	movlw	0
 13820  01787C  22DD               	addwfc	postdec2,f,c
 13821  01787E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
 13822  017884  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
 13823  01788A  0E1F               	movlw	(high __ramtop+-1)
 13824  01788C  64F7               	cpfsgt	tblptrh,c
 13825  01788E  D003               	bra	u9367
 13826  017890  0008               	tblrd		*
 13827  017892  50F5               	movf	tablat,w,c
 13828  017894  D007               	bra	u9360
 13829  017896                     u9367:
 13830  017896  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13831  01789C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13832  0178A2  50EF               	movf	indf0,w,c
 13833  0178A4                     u9360:
 13834  0178A4  6EDF               	movwf	indf2,c
 13835  0178A6  50DF               	movf	indf2,w,c
 13836  0178A8  A4D8               	btfss	status,2,c
 13837  0178AA  D7BF               	goto	l10093
 13838                           
 13839                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13840  0178AC  0EF8               	movlw	248
 13841  0178AE  26E1               	addwf	fsr1l,f,c
 13842  0178B0  0EFF               	movlw	255
 13843  0178B2  22E2               	addwfc	fsr1h,f,c
 13844  0178B4  0012               	return		;funcret
 13845  0178B6                     __end_of_strcpy:
 13846                           	opt callstack 0
 13847                           
 13848 ;; *************** function _floorf *****************
 13849 ;; Defined at:
 13850 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13851 ;; Parameters:    Size  Location     Type
 13852 ;;  x               4  [STACK] float 
 13853 ;; Auto vars:     Size  Location     Type
 13854 ;;  u               4  [STACK] struct .
 13855 ;;  m               4  [STACK] unsigned long 
 13856 ;;  e               2  [STACK] int 
 13857 ;; Return value:  Size  Location     Type
 13858 ;;                  4  [STACK] float 
 13859 ;; Registers used:
 13860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13861 ;; Tracked objects:
 13862 ;;		On entry : 0/0
 13863 ;;		On exit  : 0/0
 13864 ;;		Unchanged: 0/0
 13865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13870 ;;Total ram usage:        0 bytes
 13871 ;; Hardware stack levels used:    1
 13872 ;; Hardware stack levels required when called:    7
 13873 ;; This function calls:
 13874 ;;		Nothing
 13875 ;; This function is called by:
 13876 ;;		_efgtoa
 13877 ;; This function uses a reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text52
 13881  014CC0                     __ptext52:
 13882                           	opt callstack 0
 13883  014CC0                     _floorf:
 13884                           	opt callstack 0
 13885                           
 13886                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13887  014CC0  0E0A               	movlw	10
 13888  014CC2  26E1               	addwf	fsr1l,f,c
 13889  014CC4  0E00               	movlw	0
 13890  014CC6  22E2               	addwfc	fsr1h,f,c
 13891                           
 13892                           ;incstack = 0
 13893  014CC8  0060  F254  F02D   	movff	floorf@F524,btemp+8
 13894  014CCE  0060  F258  F02E   	movff	floorf@F524+1,btemp+9
 13895  014CD4  0060  F25C  F02F   	movff	floorf@F524+2,btemp+10
 13896  014CDA  0060  F260  F030   	movff	floorf@F524+3,btemp+11
 13897                           
 13898                           ;stkvar	_u @ sp[(-10)+0]
 13899  014CE0  0EF6               	movlw	-10
 13900  014CE2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13901  014CE8  0EF7               	movlw	-9
 13902  014CEA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13903  014CF0  0EF8               	movlw	-8
 13904  014CF2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13905  014CF8  0EF9               	movlw	-7
 13906  014CFA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13907                           
 13908                           ;stkvar	_x @ sp[(-10)+-4]
 13909  014D00  0EF2               	movlw	-14
 13910  014D02  006F FF8C  F02D    	movff	plusw1,btemp+8
 13911  014D08  0EF3               	movlw	-13
 13912  014D0A  006F FF8C  F02E    	movff	plusw1,btemp+9
 13913  014D10  0EF4               	movlw	-12
 13914  014D12  006F FF8C  F02F    	movff	plusw1,btemp+10
 13915  014D18  0EF5               	movlw	-11
 13916  014D1A  006F FF8C  F030    	movff	plusw1,btemp+11
 13917                           
 13918                           ;stkvar	_u @ sp[(-10)+0]
 13919  014D20  0EF6               	movlw	-10
 13920  014D22  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13921  014D28  0EF7               	movlw	-9
 13922  014D2A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13923  014D30  0EF8               	movlw	-8
 13924  014D32  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13925  014D38  0EF9               	movlw	-7
 13926  014D3A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13927  014D40  0E81               	movlw	129
 13928  014D42  6E2F               	movwf	(btemp+10)^0,c
 13929  014D44  0EFF               	movlw	255
 13930  014D46  6E30               	movwf	(btemp+11)^0,c
 13931                           
 13932                           ;stkvar	_u @ sp[(-10)+0]
 13933  014D48  0EF6               	movlw	-10
 13934  014D4A  006F FF8C  F029    	movff	plusw1,btemp+4
 13935  014D50  0EF7               	movlw	-9
 13936  014D52  006F FF8C  F02A    	movff	plusw1,btemp+5
 13937  014D58  0EF8               	movlw	-8
 13938  014D5A  006F FF8C  F02B    	movff	plusw1,btemp+6
 13939  014D60  0EF9               	movlw	-7
 13940  014D62  006F FF8C  F02C    	movff	plusw1,btemp+7
 13941  014D68  0E18               	movlw	24
 13942  014D6A  D005               	goto	u4940
 13943  014D6C                     u4945:
 13944  014D6C  90D8               	bcf	status,0,c
 13945  014D6E  322C               	rrcf	(btemp+7)^0,f,c
 13946  014D70  322B               	rrcf	(btemp+6)^0,f,c
 13947  014D72  322A               	rrcf	(btemp+5)^0,f,c
 13948  014D74  3229               	rrcf	(btemp+4)^0,f,c
 13949  014D76                     u4940:
 13950  014D76  2EE8               	decfsz	wreg,f,c
 13951  014D78  D7F9               	goto	u4945
 13952  014D7A  0060  F0A4  F02D   	movff	btemp+4,btemp+8
 13953  014D80  0060  F0A8  F02E   	movff	btemp+5,btemp+9
 13954  014D86  0EFF               	movlw	255
 13955  014D88  162D               	andwf	(btemp+8)^0,f,c
 13956  014D8A  0E00               	movlw	0
 13957  014D8C  162E               	andwf	(btemp+9)^0,f,c
 13958  014D8E  502F               	movf	(btemp+10)^0,w,c
 13959  014D90  262D               	addwf	(btemp+8)^0,f,c
 13960  014D92  5030               	movf	(btemp+11)^0,w,c
 13961  014D94  222E               	addwfc	(btemp+9)^0,f,c
 13962                           
 13963                           ;stkvar	_e @ sp[(-10)+8]
 13964  014D96  0EFE               	movlw	-2
 13965  014D98  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13966  014D9E  0EFF               	movlw	-1
 13967  014DA0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13968                           
 13969                           ;stkvar	_e @ sp[(-10)+8]
 13970  014DA6  0EFF               	movlw	-1
 13971  014DA8  BEE3               	btfsc	plusw1,7,c
 13972  014DAA  D019               	goto	l6701
 13973  014DAC  0EFF               	movlw	-1
 13974  014DAE  50E3               	movf	plusw1,w,c
 13975  014DB0  E108               	bnz	u4950
 13976  014DB2  0EFE               	movlw	-2
 13977  014DB4  006F FF8C  F025    	movff	plusw1,btemp
 13978  014DBA  0E17               	movlw	23
 13979  014DBC  5E25               	subwf	btemp^0,f,c
 13980  014DBE  A0D8               	btfss	status,0,c
 13981  014DC0  D00E               	goto	l6701
 13982  014DC2                     u4950:
 13983                           
 13984                           ;stkvar	_x @ sp[(-10)+-4]
 13985  014DC2  0EF2               	movlw	-14
 13986  014DC4  006F FF8C  F025    	movff	plusw1,btemp
 13987  014DCA  0EF3               	movlw	-13
 13988  014DCC  006F FF8C  F026    	movff	plusw1,btemp+1
 13989  014DD2  0EF4               	movlw	-12
 13990  014DD4  006F FF8C  F027    	movff	plusw1,btemp+2
 13991  014DDA  0EF5               	movlw	-11
 13992  014DDC  D11F               	goto	L13
 13993  014DDE                     l6701:
 13994                           
 13995                           ;stkvar	_e @ sp[(-10)+8]
 13996  014DDE  0EFF               	movlw	-1
 13997  014DE0  BEE3               	btfsc	plusw1,7,c
 13998  014DE2  D0B4               	goto	l6717
 13999                           
 14000                           ;stkvar	_e @ sp[(-10)+8]
 14001  014DE4  0EFE               	movlw	-2
 14002  014DE6  006F FF8C  F030    	movff	plusw1,btemp+11
 14003  014DEC  0EFF               	movlw	255
 14004  014DEE  6E29               	movwf	(btemp+4)^0,c
 14005  014DF0  0EFF               	movlw	255
 14006  014DF2  6E2A               	movwf	(btemp+5)^0,c
 14007  014DF4  0E7F               	movlw	127
 14008  014DF6  6E2B               	movwf	(btemp+6)^0,c
 14009  014DF8  0E00               	movlw	0
 14010  014DFA  6E2C               	movwf	(btemp+7)^0,c
 14011  014DFC                     u4975:
 14012  014DFC  6630               	tstfsz	(btemp+11)^0,c
 14013  014DFE  D001               	goto	u4976
 14014  014E00  D007               	goto	u4977
 14015  014E02                     u4976:
 14016  014E02  342C               	rlcf	(btemp+7)^0,w,c
 14017  014E04  322C               	rrcf	(btemp+7)^0,f,c
 14018  014E06  322B               	rrcf	(btemp+6)^0,f,c
 14019  014E08  322A               	rrcf	(btemp+5)^0,f,c
 14020  014E0A  3229               	rrcf	(btemp+4)^0,f,c
 14021  014E0C  2E30               	decfsz	(btemp+11)^0,f,c
 14022  014E0E  D7F6               	goto	u4975
 14023  014E10                     u4977:
 14024                           
 14025                           ;stkvar	_m @ sp[(-10)+4]
 14026  014E10  0EFA               	movlw	-6
 14027  014E12  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 14028  014E18  0EFB               	movlw	-5
 14029  014E1A  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 14030  014E20  0EFC               	movlw	-4
 14031  014E22  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14032  014E28  0EFD               	movlw	-3
 14033  014E2A  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14034                           
 14035                           ;stkvar	_m @ sp[(-10)+4]
 14036                           ;stkvar	_u @ sp[(-10)+0]
 14037  014E30  0EF6               	movlw	-10
 14038  014E32  006F FF8C  F02D    	movff	plusw1,btemp+8
 14039  014E38  0EF7               	movlw	-9
 14040  014E3A  006F FF8C  F02E    	movff	plusw1,btemp+9
 14041  014E40  0EF8               	movlw	-8
 14042  014E42  006F FF8C  F02F    	movff	plusw1,btemp+10
 14043  014E48  0EF9               	movlw	-7
 14044  014E4A  006F FF8C  F030    	movff	plusw1,btemp+11
 14045  014E50  0EFA               	movlw	-6
 14046  014E52  50E3               	movf	plusw1,w,c
 14047  014E54  162D               	andwf	(btemp+8)^0,f,c
 14048  014E56  0EFB               	movlw	-5
 14049  014E58  50E3               	movf	plusw1,w,c
 14050  014E5A  162E               	andwf	(btemp+9)^0,f,c
 14051  014E5C  0EFC               	movlw	-4
 14052  014E5E  50E3               	movf	plusw1,w,c
 14053  014E60  162F               	andwf	(btemp+10)^0,f,c
 14054  014E62  0EFD               	movlw	-3
 14055  014E64  50E3               	movf	plusw1,w,c
 14056  014E66  1630               	andwf	(btemp+11)^0,f,c
 14057  014E68  502D               	movf	(btemp+8)^0,w,c
 14058  014E6A  102E               	iorwf	(btemp+9)^0,w,c
 14059  014E6C  102F               	iorwf	(btemp+10)^0,w,c
 14060  014E6E  1030               	iorwf	(btemp+11)^0,w,c
 14061  014E70  B4D8               	btfsc	status,2,c
 14062  014E72  D7A7               	goto	u4950
 14063                           
 14064                           ;stkvar	_u @ sp[(-10)+0]
 14065  014E74  0EF6               	movlw	-10
 14066  014E76  006F FF8C  F02D    	movff	plusw1,btemp+8
 14067  014E7C  0EF7               	movlw	-9
 14068  014E7E  006F FF8C  F02E    	movff	plusw1,btemp+9
 14069  014E84  0EF8               	movlw	-8
 14070  014E86  006F FF8C  F02F    	movff	plusw1,btemp+10
 14071  014E8C  0EF9               	movlw	-7
 14072  014E8E  006F FF8C  F030    	movff	plusw1,btemp+11
 14073  014E94  0E20               	movlw	32
 14074  014E96  D005               	goto	u4990
 14075  014E98                     u4995:
 14076  014E98  90D8               	bcf	status,0,c
 14077  014E9A  3230               	rrcf	(btemp+11)^0,f,c
 14078  014E9C  322F               	rrcf	(btemp+10)^0,f,c
 14079  014E9E  322E               	rrcf	(btemp+9)^0,f,c
 14080  014EA0  322D               	rrcf	(btemp+8)^0,f,c
 14081  014EA2                     u4990:
 14082  014EA2  2EE8               	decfsz	wreg,f,c
 14083  014EA4  D7F9               	goto	u4995
 14084  014EA6  502D               	movf	(btemp+8)^0,w,c
 14085  014EA8  B4D8               	btfsc	status,2,c
 14086  014EAA  D028               	goto	l6715
 14087                           
 14088                           ;stkvar	_m @ sp[(-10)+4]
 14089                           ;stkvar	_u @ sp[(-10)+0]
 14090  014EAC  0EF6               	movlw	-10
 14091  014EAE  50E3               	movf	plusw1,w,c
 14092  014EB0  6E25               	movwf	btemp^0,c
 14093  014EB2  0EFA               	movlw	-6
 14094  014EB4  50E3               	movf	plusw1,w,c
 14095  014EB6  2625               	addwf	btemp^0,f,c
 14096  014EB8  0EF6               	movlw	-10
 14097  014EBA  0060  F097  FFE3   	movff	btemp,plusw1
 14098  014EC0  0EF7               	movlw	-9
 14099  014EC2  50E3               	movf	plusw1,w,c
 14100  014EC4  6E25               	movwf	btemp^0,c
 14101  014EC6  0EFB               	movlw	-5
 14102  014EC8  50E3               	movf	plusw1,w,c
 14103  014ECA  2225               	addwfc	btemp^0,f,c
 14104  014ECC  0EF7               	movlw	-9
 14105  014ECE  0060  F097  FFE3   	movff	btemp,plusw1
 14106  014ED4  0EF8               	movlw	-8
 14107  014ED6  50E3               	movf	plusw1,w,c
 14108  014ED8  6E25               	movwf	btemp^0,c
 14109  014EDA  0EFC               	movlw	-4
 14110  014EDC  50E3               	movf	plusw1,w,c
 14111  014EDE  2225               	addwfc	btemp^0,f,c
 14112  014EE0  0EF8               	movlw	-8
 14113  014EE2  0060  F097  FFE3   	movff	btemp,plusw1
 14114  014EE8  0EF9               	movlw	-7
 14115  014EEA  50E3               	movf	plusw1,w,c
 14116  014EEC  6E25               	movwf	btemp^0,c
 14117  014EEE  0EFD               	movlw	-3
 14118  014EF0  50E3               	movf	plusw1,w,c
 14119  014EF2  2225               	addwfc	btemp^0,f,c
 14120  014EF4  0EF9               	movlw	-7
 14121  014EF6  0060  F097  FFE3   	movff	btemp,plusw1
 14122  014EFC                     l6715:
 14123                           
 14124                           ;stkvar	_m @ sp[(-10)+4]
 14125  014EFC  0EFA               	movlw	-6
 14126  014EFE  006F FF8C  F02D    	movff	plusw1,btemp+8
 14127  014F04  0EFB               	movlw	-5
 14128  014F06  006F FF8C  F02E    	movff	plusw1,btemp+9
 14129  014F0C  0EFC               	movlw	-4
 14130  014F0E  006F FF8C  F02F    	movff	plusw1,btemp+10
 14131  014F14  0EFD               	movlw	-3
 14132  014F16  006F FF8C  F030    	movff	plusw1,btemp+11
 14133  014F1C  1C2D               	comf	(btemp+8)^0,w,c
 14134  014F1E  6E29               	movwf	(btemp+4)^0,c
 14135  014F20  1C2E               	comf	(btemp+9)^0,w,c
 14136  014F22  6E2A               	movwf	(btemp+5)^0,c
 14137  014F24  1C2F               	comf	(btemp+10)^0,w,c
 14138  014F26  6E2B               	movwf	(btemp+6)^0,c
 14139  014F28  1C30               	comf	(btemp+11)^0,w,c
 14140  014F2A  6E2C               	movwf	(btemp+7)^0,c
 14141                           
 14142                           ;stkvar	_u @ sp[(-10)+0]
 14143  014F2C  50E1               	movf	fsr1l,w,c
 14144  014F2E  0FF6               	addlw	-10
 14145  014F30  6ED9               	movwf	fsr2l,c
 14146  014F32  50E2               	movf	fsr1h,w,c
 14147  014F34  6EDA               	movwf	fsr2h,c
 14148  014F36  0EFF               	movlw	255
 14149  014F38  22DA               	addwfc	fsr2h,f,c
 14150  014F3A  5029               	movf	(btemp+4)^0,w,c
 14151  014F3C  16DE               	andwf	postinc2,f,c
 14152  014F3E  502A               	movf	(btemp+5)^0,w,c
 14153  014F40  16DE               	andwf	postinc2,f,c
 14154  014F42  502B               	movf	(btemp+6)^0,w,c
 14155  014F44  16DE               	andwf	postinc2,f,c
 14156  014F46  502C               	movf	(btemp+7)^0,w,c
 14157  014F48  16DE               	andwf	postinc2,f,c
 14158  014F4A  D05B               	goto	l6725
 14159  014F4C                     l6717:
 14160                           
 14161                           ;stkvar	_u @ sp[(-10)+0]
 14162  014F4C  0EF6               	movlw	-10
 14163  014F4E  006F FF8C  F02D    	movff	plusw1,btemp+8
 14164  014F54  0EF7               	movlw	-9
 14165  014F56  006F FF8C  F02E    	movff	plusw1,btemp+9
 14166  014F5C  0EF8               	movlw	-8
 14167  014F5E  006F FF8C  F02F    	movff	plusw1,btemp+10
 14168  014F64  0EF9               	movlw	-7
 14169  014F66  006F FF8C  F030    	movff	plusw1,btemp+11
 14170  014F6C  0E20               	movlw	32
 14171  014F6E  D005               	goto	u5010
 14172  014F70                     u5015:
 14173  014F70  90D8               	bcf	status,0,c
 14174  014F72  3230               	rrcf	(btemp+11)^0,f,c
 14175  014F74  322F               	rrcf	(btemp+10)^0,f,c
 14176  014F76  322E               	rrcf	(btemp+9)^0,f,c
 14177  014F78  322D               	rrcf	(btemp+8)^0,f,c
 14178  014F7A                     u5010:
 14179  014F7A  2EE8               	decfsz	wreg,f,c
 14180  014F7C  D7F9               	goto	u5015
 14181  014F7E  662D               	tstfsz	(btemp+8)^0,c
 14182  014F80  D009               	goto	l6721
 14183                           
 14184                           ;stkvar	_u @ sp[(-10)+0]
 14185  014F82  0EF6               	movlw	-10
 14186  014F84  6AE3               	clrf	plusw1,c
 14187  014F86  0EF7               	movlw	-9
 14188  014F88  6AE3               	clrf	plusw1,c
 14189  014F8A  0EF8               	movlw	-8
 14190  014F8C  6AE3               	clrf	plusw1,c
 14191  014F8E  0EF9               	movlw	-7
 14192  014F90  6AE3               	clrf	plusw1,c
 14193  014F92  D037               	goto	l6725
 14194  014F94                     l6721:
 14195                           
 14196                           ;stkvar	_u @ sp[(-10)+0]
 14197  014F94  0EF6               	movlw	-10
 14198  014F96  006F FF8C  F02D    	movff	plusw1,btemp+8
 14199  014F9C  0EF7               	movlw	-9
 14200  014F9E  006F FF8C  F02E    	movff	plusw1,btemp+9
 14201  014FA4  0EF8               	movlw	-8
 14202  014FA6  006F FF8C  F02F    	movff	plusw1,btemp+10
 14203  014FAC  0EF9               	movlw	-7
 14204  014FAE  006F FF8C  F030    	movff	plusw1,btemp+11
 14205  014FB4  90D8               	bcf	status,0,c
 14206  014FB6  342D               	rlcf	(btemp+8)^0,w,c
 14207  014FB8  6E29               	movwf	(btemp+4)^0,c
 14208  014FBA  342E               	rlcf	(btemp+9)^0,w,c
 14209  014FBC  6E2A               	movwf	(btemp+5)^0,c
 14210  014FBE  342F               	rlcf	(btemp+10)^0,w,c
 14211  014FC0  6E2B               	movwf	(btemp+6)^0,c
 14212  014FC2  3430               	rlcf	(btemp+11)^0,w,c
 14213  014FC4  6E2C               	movwf	(btemp+7)^0,c
 14214  014FC6  5029               	movf	(btemp+4)^0,w,c
 14215  014FC8  102A               	iorwf	(btemp+5)^0,w,c
 14216  014FCA  102B               	iorwf	(btemp+6)^0,w,c
 14217  014FCC  102C               	iorwf	(btemp+7)^0,w,c
 14218  014FCE  B4D8               	btfsc	status,2,c
 14219  014FD0  D018               	goto	l6725
 14220  014FD2  0E00               	movlw	0
 14221  014FD4  6E2D               	movwf	(btemp+8)^0,c
 14222  014FD6  0E00               	movlw	0
 14223  014FD8  6E2E               	movwf	(btemp+9)^0,c
 14224  014FDA  0E80               	movlw	128
 14225  014FDC  6E2F               	movwf	(btemp+10)^0,c
 14226  014FDE  0EBF               	movlw	191
 14227  014FE0  6E30               	movwf	(btemp+11)^0,c
 14228                           
 14229                           ;stkvar	_u @ sp[(-10)+0]
 14230  014FE2  0EF6               	movlw	-10
 14231  014FE4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14232  014FEA  0EF7               	movlw	-9
 14233  014FEC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14234  014FF2  0EF8               	movlw	-8
 14235  014FF4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14236  014FFA  0EF9               	movlw	-7
 14237  014FFC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14238  015002                     l6725:
 14239                           
 14240                           ;stkvar	_u @ sp[(-10)+0]
 14241  015002  0EF6               	movlw	-10
 14242  015004  006F FF8C  F025    	movff	plusw1,btemp
 14243  01500A  0EF7               	movlw	-9
 14244  01500C  006F FF8C  F026    	movff	plusw1,btemp+1
 14245  015012  0EF8               	movlw	-8
 14246  015014  006F FF8C  F027    	movff	plusw1,btemp+2
 14247  01501A  0EF9               	movlw	-7
 14248  01501C                     L13:
 14249  01501C  006F FF8C  F028    	movff	plusw1,btemp+3
 14250                           
 14251                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14252  015022  0EF2               	movlw	242
 14253  015024  26E1               	addwf	fsr1l,f,c
 14254  015026  0EFF               	movlw	255
 14255  015028  22E2               	addwfc	fsr1h,f,c
 14256  01502A  0012               	return		;funcret
 14257  01502C                     __end_of_floorf:
 14258                           	opt callstack 0
 14259                           
 14260 ;; *************** function ___fpclassifyf *****************
 14261 ;; Defined at:
 14262 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14263 ;; Parameters:    Size  Location     Type
 14264 ;;  x               4  [STACK] float 
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;  u               4  [STACK] struct .
 14267 ;;  e               2  [STACK] int 
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  2  [STACK] int 
 14270 ;; Registers used:
 14271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14272 ;; Tracked objects:
 14273 ;;		On entry : 0/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14281 ;;Total ram usage:        0 bytes
 14282 ;; Hardware stack levels used:    1
 14283 ;; Hardware stack levels required when called:    7
 14284 ;; This function calls:
 14285 ;;		Nothing
 14286 ;; This function is called by:
 14287 ;;		_efgtoa
 14288 ;; This function uses a reentrant model
 14289 ;;
 14290                           
 14291                           	psect	text53
 14292  016782                     __ptext53:
 14293                           	opt callstack 0
 14294  016782                     ___fpclassifyf:
 14295                           	opt callstack 0
 14296                           
 14297                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14298  016782  0E06               	movlw	6
 14299  016784  26E1               	addwf	fsr1l,f,c
 14300  016786  0E00               	movlw	0
 14301  016788  22E2               	addwfc	fsr1h,f,c
 14302                           
 14303                           ;incstack = 0
 14304  01678A  0060  F264  F02D   	movff	___fpclassifyf@F463,btemp+8
 14305  016790  0060  F268  F02E   	movff	___fpclassifyf@F463+1,btemp+9
 14306  016796  0060  F26C  F02F   	movff	___fpclassifyf@F463+2,btemp+10
 14307  01679C  0060  F270  F030   	movff	___fpclassifyf@F463+3,btemp+11
 14308                           
 14309                           ;stkvar	_u @ sp[(-6)+0]
 14310  0167A2  0EFA               	movlw	-6
 14311  0167A4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14312  0167AA  0EFB               	movlw	-5
 14313  0167AC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14314  0167B2  0EFC               	movlw	-4
 14315  0167B4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14316  0167BA  0EFD               	movlw	-3
 14317  0167BC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14318                           
 14319                           ;stkvar	_x @ sp[(-6)+-4]
 14320  0167C2  0EF6               	movlw	-10
 14321  0167C4  006F FF8C  F02D    	movff	plusw1,btemp+8
 14322  0167CA  0EF7               	movlw	-9
 14323  0167CC  006F FF8C  F02E    	movff	plusw1,btemp+9
 14324  0167D2  0EF8               	movlw	-8
 14325  0167D4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14326  0167DA  0EF9               	movlw	-7
 14327  0167DC  006F FF8C  F030    	movff	plusw1,btemp+11
 14328                           
 14329                           ;stkvar	_u @ sp[(-6)+0]
 14330  0167E2  0EFA               	movlw	-6
 14331  0167E4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14332  0167EA  0EFB               	movlw	-5
 14333  0167EC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14334  0167F2  0EFC               	movlw	-4
 14335  0167F4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14336  0167FA  0EFD               	movlw	-3
 14337  0167FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14338                           
 14339                           ;stkvar	_u @ sp[(-6)+0]
 14340  016802  0EFA               	movlw	-6
 14341  016804  006F FF8C  F02D    	movff	plusw1,btemp+8
 14342  01680A  0EFB               	movlw	-5
 14343  01680C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14344  016812  0EFC               	movlw	-4
 14345  016814  006F FF8C  F02F    	movff	plusw1,btemp+10
 14346  01681A  0EFD               	movlw	-3
 14347  01681C  006F FF8C  F030    	movff	plusw1,btemp+11
 14348  016822  0E18               	movlw	24
 14349  016824  D005               	goto	u4820
 14350  016826                     u4825:
 14351  016826  90D8               	bcf	status,0,c
 14352  016828  3230               	rrcf	(btemp+11)^0,f,c
 14353  01682A  322F               	rrcf	(btemp+10)^0,f,c
 14354  01682C  322E               	rrcf	(btemp+9)^0,f,c
 14355  01682E  322D               	rrcf	(btemp+8)^0,f,c
 14356  016830                     u4820:
 14357  016830  2EE8               	decfsz	wreg,f,c
 14358  016832  D7F9               	goto	u4825
 14359  016834  0060  F0B4  F02B   	movff	btemp+8,btemp+6
 14360  01683A  0060  F0B8  F02C   	movff	btemp+9,btemp+7
 14361  016840  0EFF               	movlw	255
 14362  016842  162B               	andwf	(btemp+6)^0,f,c
 14363  016844  0E00               	movlw	0
 14364  016846  162C               	andwf	(btemp+7)^0,f,c
 14365                           
 14366                           ;stkvar	_e @ sp[(-6)+4]
 14367  016848  0EFE               	movlw	-2
 14368  01684A  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14369  016850  0EFF               	movlw	-1
 14370  016852  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14371                           
 14372                           ;stkvar	_e @ sp[(-6)+4]
 14373  016858  0EFE               	movlw	-2
 14374  01685A  006F FF8C  F025    	movff	plusw1,btemp
 14375  016860  0EFF               	movlw	-1
 14376  016862  50E3               	movf	plusw1,w,c
 14377  016864  1025               	iorwf	btemp^0,w,c
 14378  016866  A4D8               	btfss	status,2,c
 14379  016868  D023               	goto	l6663
 14380                           
 14381                           ;stkvar	_u @ sp[(-6)+0]
 14382  01686A  0EFA               	movlw	-6
 14383  01686C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14384  016872  0EFB               	movlw	-5
 14385  016874  006F FF8C  F02E    	movff	plusw1,btemp+9
 14386  01687A  0EFC               	movlw	-4
 14387  01687C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14388  016882  0EFD               	movlw	-3
 14389  016884  006F FF8C  F030    	movff	plusw1,btemp+11
 14390  01688A  90D8               	bcf	status,0,c
 14391  01688C  342D               	rlcf	(btemp+8)^0,w,c
 14392  01688E  6E29               	movwf	(btemp+4)^0,c
 14393  016890  342E               	rlcf	(btemp+9)^0,w,c
 14394  016892  6E2A               	movwf	(btemp+5)^0,c
 14395  016894  342F               	rlcf	(btemp+10)^0,w,c
 14396  016896  6E2B               	movwf	(btemp+6)^0,c
 14397  016898  3430               	rlcf	(btemp+11)^0,w,c
 14398  01689A  6E2C               	movwf	(btemp+7)^0,c
 14399  01689C  5029               	movf	(btemp+4)^0,w,c
 14400  01689E  102A               	iorwf	(btemp+5)^0,w,c
 14401  0168A0  102B               	iorwf	(btemp+6)^0,w,c
 14402  0168A2  102C               	iorwf	(btemp+7)^0,w,c
 14403  0168A4  A4D8               	btfss	status,2,c
 14404  0168A6  D002               	goto	l6659
 14405  0168A8  0E02               	movlw	2
 14406  0168AA  D02E               	goto	L14
 14407  0168AC                     l6659:
 14408  0168AC  0E03               	movlw	3
 14409  0168AE  D02C               	goto	L14
 14410  0168B0                     l6663:
 14411                           
 14412                           ;stkvar	_e @ sp[(-6)+4]
 14413  0168B0  0EFE               	movlw	-2
 14414  0168B2  28E3               	incf	plusw1,w,c
 14415  0168B4  E128               	bnz	l6669
 14416  0168B6  0EFF               	movlw	-1
 14417  0168B8  50E3               	movf	plusw1,w,c
 14418  0168BA  A4D8               	btfss	status,2,c
 14419  0168BC  D024               	goto	l6669
 14420                           
 14421                           ;stkvar	_u @ sp[(-6)+0]
 14422  0168BE  0EFA               	movlw	-6
 14423  0168C0  006F FF8C  F02D    	movff	plusw1,btemp+8
 14424  0168C6  0EFB               	movlw	-5
 14425  0168C8  006F FF8C  F02E    	movff	plusw1,btemp+9
 14426  0168CE  0EFC               	movlw	-4
 14427  0168D0  006F FF8C  F02F    	movff	plusw1,btemp+10
 14428  0168D6  0EFD               	movlw	-3
 14429  0168D8  006F FF8C  F030    	movff	plusw1,btemp+11
 14430  0168DE  0E09               	movlw	9
 14431  0168E0                     u4865:
 14432  0168E0  90D8               	bcf	status,0,c
 14433  0168E2  362D               	rlcf	(btemp+8)^0,f,c
 14434  0168E4  362E               	rlcf	(btemp+9)^0,f,c
 14435  0168E6  362F               	rlcf	(btemp+10)^0,f,c
 14436  0168E8  3630               	rlcf	(btemp+11)^0,f,c
 14437  0168EA  2EE8               	decfsz	wreg,f,c
 14438  0168EC  D7F9               	goto	u4865
 14439  0168EE  502D               	movf	(btemp+8)^0,w,c
 14440  0168F0  102E               	iorwf	(btemp+9)^0,w,c
 14441  0168F2  102F               	iorwf	(btemp+10)^0,w,c
 14442  0168F4  1030               	iorwf	(btemp+11)^0,w,c
 14443  0168F6  A4D8               	btfss	status,2,c
 14444  0168F8  D002               	goto	u4870
 14445  0168FA  0E01               	movlw	1
 14446  0168FC  D001               	goto	u4880
 14447  0168FE                     u4870:
 14448  0168FE  0E00               	movlw	0
 14449  016900                     u4880:
 14450  016900  6E25               	movwf	btemp^0,c
 14451  016902  6A26               	clrf	(btemp+1)^0,c
 14452  016904  D004               	goto	l2905
 14453  016906                     l6669:
 14454  016906  0E04               	movlw	4
 14455  016908                     L14:
 14456  016908  6E25               	movwf	btemp^0,c
 14457  01690A  0E00               	movlw	0
 14458  01690C  6E26               	movwf	(btemp+1)^0,c
 14459  01690E                     l2905:
 14460                           
 14461                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14462  01690E  0EF6               	movlw	246
 14463  016910  26E1               	addwf	fsr1l,f,c
 14464  016912  0EFF               	movlw	255
 14465  016914  22E2               	addwfc	fsr1h,f,c
 14466  016916  0012               	return		;funcret
 14467  016918                     __end_of___fpclassifyf:
 14468                           	opt callstack 0
 14469                           
 14470 ;; *************** function ___fltol *****************
 14471 ;; Defined at:
 14472 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14473 ;; Parameters:    Size  Location     Type
 14474 ;;  f1              4  [STACK] int 
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;  exp1            1  [STACK] unsigned char 
 14477 ;;  sign1           1  [STACK] unsigned char 
 14478 ;; Return value:  Size  Location     Type
 14479 ;;                  4  [STACK] long 
 14480 ;; Registers used:
 14481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14482 ;; Tracked objects:
 14483 ;;		On entry : 0/0
 14484 ;;		On exit  : 0/0
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;Total ram usage:        0 bytes
 14492 ;; Hardware stack levels used:    1
 14493 ;; Hardware stack levels required when called:    7
 14494 ;; This function calls:
 14495 ;;		Nothing
 14496 ;; This function is called by:
 14497 ;;		_calc_bsoc
 14498 ;;		_efgtoa
 14499 ;; This function uses a reentrant model
 14500 ;;
 14501                           
 14502                           	psect	text54
 14503  016918                     __ptext54:
 14504                           	opt callstack 0
 14505  016918                     ___fltol:
 14506                           	opt callstack 0
 14507                           
 14508                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14509  016918  52E6               	movf	postinc1,f,c
 14510  01691A  52E6               	movf	postinc1,f,c
 14511                           
 14512                           ;stkvar	_f1 @ sp[(-2)+-4]
 14513                           
 14514                           ;incstack = 0
 14515  01691C  0EFA               	movlw	-6
 14516  01691E  006F FF8C  F02D    	movff	plusw1,btemp+8
 14517  016924  0EFB               	movlw	-5
 14518  016926  006F FF8C  F02E    	movff	plusw1,btemp+9
 14519  01692C  0EFC               	movlw	-4
 14520  01692E  006F FF8C  F02F    	movff	plusw1,btemp+10
 14521  016934  0EFD               	movlw	-3
 14522  016936  006F FF8C  F030    	movff	plusw1,btemp+11
 14523  01693C  0E18               	movlw	24
 14524  01693E  D005               	goto	u7970
 14525  016940                     u7975:
 14526  016940  90D8               	bcf	status,0,c
 14527  016942  3230               	rrcf	(btemp+11)^0,f,c
 14528  016944  322F               	rrcf	(btemp+10)^0,f,c
 14529  016946  322E               	rrcf	(btemp+9)^0,f,c
 14530  016948  322D               	rrcf	(btemp+8)^0,f,c
 14531  01694A                     u7970:
 14532  01694A  2EE8               	decfsz	wreg,f,c
 14533  01694C  D7F9               	goto	u7975
 14534                           
 14535                           ;stkvar	_exp1 @ sp[(-2)+0]
 14536  01694E  0EFE               	movlw	-2
 14537  016950  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14538  016956  0EFE               	movlw	-2
 14539  016958  50E3               	movf	plusw1,w,c
 14540  01695A  A4D8               	btfss	status,2,c
 14541  01695C  D006               	goto	l8477
 14542  01695E                     u7980:
 14543  01695E  0E00               	movlw	0
 14544  016960  6E25               	movwf	btemp^0,c
 14545  016962  6A26               	clrf	(btemp+1)^0,c
 14546  016964  6A27               	clrf	(btemp+2)^0,c
 14547  016966  6A28               	clrf	(btemp+3)^0,c
 14548  016968  D08B               	goto	l2521
 14549  01696A                     l8477:
 14550                           
 14551                           ;stkvar	_f1 @ sp[(-2)+-4]
 14552  01696A  0EFA               	movlw	-6
 14553  01696C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14554  016972  0EFB               	movlw	-5
 14555  016974  006F FF8C  F02E    	movff	plusw1,btemp+9
 14556  01697A  0EFC               	movlw	-4
 14557  01697C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14558  016982  0EFD               	movlw	-3
 14559  016984  006F FF8C  F030    	movff	plusw1,btemp+11
 14560  01698A  0E20               	movlw	32
 14561  01698C  D005               	goto	u7990
 14562  01698E                     u7995:
 14563  01698E  90D8               	bcf	status,0,c
 14564  016990  3230               	rrcf	(btemp+11)^0,f,c
 14565  016992  322F               	rrcf	(btemp+10)^0,f,c
 14566  016994  322E               	rrcf	(btemp+9)^0,f,c
 14567  016996  322D               	rrcf	(btemp+8)^0,f,c
 14568  016998                     u7990:
 14569  016998  2EE8               	decfsz	wreg,f,c
 14570  01699A  D7F9               	goto	u7995
 14571                           
 14572                           ;stkvar	_sign1 @ sp[(-2)+1]
 14573  01699C  0EFF               	movlw	-1
 14574  01699E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14575                           
 14576                           ;stkvar	_f1 @ sp[(-2)+-4]
 14577  0169A4  0EFC               	movlw	-4
 14578  0169A6  8EE3               	bsf	plusw1,7,c
 14579                           
 14580                           ;stkvar	_f1 @ sp[(-2)+-4]
 14581  0169A8  50E1               	movf	fsr1l,w,c
 14582  0169AA  0FFA               	addlw	-6
 14583  0169AC  6ED9               	movwf	fsr2l,c
 14584  0169AE  50E2               	movf	fsr1h,w,c
 14585  0169B0  6EDA               	movwf	fsr2h,c
 14586  0169B2  0EFF               	movlw	255
 14587  0169B4  22DA               	addwfc	fsr2h,f,c
 14588  0169B6  0EFF               	movlw	255
 14589  0169B8  16DE               	andwf	postinc2,f,c
 14590  0169BA  0EFF               	movlw	255
 14591  0169BC  16DE               	andwf	postinc2,f,c
 14592  0169BE  0EFF               	movlw	255
 14593  0169C0  16DE               	andwf	postinc2,f,c
 14594  0169C2  0E00               	movlw	0
 14595  0169C4  16DE               	andwf	postinc2,f,c
 14596                           
 14597                           ;stkvar	_exp1 @ sp[(-2)+0]
 14598  0169C6  0EFE               	movlw	-2
 14599  0169C8  006F FF8C  F025    	movff	plusw1,btemp
 14600  0169CE  0E96               	movlw	150
 14601  0169D0  5E25               	subwf	btemp^0,f,c
 14602  0169D2  0EFE               	movlw	-2
 14603  0169D4  0060  F097  FFE3   	movff	btemp,plusw1
 14604                           
 14605                           ;stkvar	_exp1 @ sp[(-2)+0]
 14606  0169DA  0EFE               	movlw	-2
 14607  0169DC  AEE3               	btfss	plusw1,7,c
 14608  0169DE  D014               	goto	l8495
 14609                           
 14610                           ;stkvar	_exp1 @ sp[(-2)+0]
 14611  0169E0  0EFE               	movlw	-2
 14612  0169E2  50E3               	movf	plusw1,w,c
 14613  0169E4  0A80               	xorlw	128
 14614  0169E6  0F97               	addlw	151
 14615  0169E8  A0D8               	btfss	status,0,c
 14616  0169EA  D7B9               	goto	u7980
 14617  0169EC                     l8493:
 14618                           
 14619                           ;stkvar	_f1 @ sp[(-2)+-4]
 14620  0169EC  90D8               	bcf	status,0,c
 14621  0169EE  0EFD               	movlw	-3
 14622  0169F0  32E3               	rrcf	plusw1,f,c
 14623  0169F2  0EFC               	movlw	-4
 14624  0169F4  32E3               	rrcf	plusw1,f,c
 14625  0169F6  0EFB               	movlw	-5
 14626  0169F8  32E3               	rrcf	plusw1,f,c
 14627  0169FA  0EFA               	movlw	-6
 14628  0169FC  32E3               	rrcf	plusw1,f,c
 14629                           
 14630                           ;stkvar	_exp1 @ sp[(-2)+0]
 14631  0169FE  0EFE               	movlw	-2
 14632  016A00  2AE3               	incf	plusw1,f,c
 14633  016A02  B4D8               	btfsc	status,2,c
 14634  016A04  D018               	goto	u8040
 14635  016A06  D7F2               	goto	l8493
 14636  016A08                     l8495:
 14637                           
 14638                           ;stkvar	_exp1 @ sp[(-2)+0]
 14639  016A08  0EFE               	movlw	-2
 14640  016A0A  006F FF8C  F025    	movff	plusw1,btemp
 14641  016A10  0E1F               	movlw	31
 14642  016A12  6425               	cpfsgt	btemp^0,c
 14643  016A14  D00C               	goto	l8503
 14644  016A16  D7A3               	goto	u7980
 14645  016A18                     l8501:
 14646                           
 14647                           ;stkvar	_f1 @ sp[(-2)+-4]
 14648  016A18  90D8               	bcf	status,0,c
 14649  016A1A  0EFA               	movlw	-6
 14650  016A1C  36E3               	rlcf	plusw1,f,c
 14651  016A1E  0EFB               	movlw	-5
 14652  016A20  36E3               	rlcf	plusw1,f,c
 14653  016A22  0EFC               	movlw	-4
 14654  016A24  36E3               	rlcf	plusw1,f,c
 14655  016A26  0EFD               	movlw	-3
 14656  016A28  36E3               	rlcf	plusw1,f,c
 14657                           
 14658                           ;stkvar	_exp1 @ sp[(-2)+0]
 14659  016A2A  0EFE               	movlw	-2
 14660  016A2C  06E3               	decf	plusw1,f,c
 14661  016A2E                     l8503:
 14662                           
 14663                           ;stkvar	_exp1 @ sp[(-2)+0]
 14664  016A2E  0EFE               	movlw	-2
 14665  016A30  50E3               	movf	plusw1,w,c
 14666  016A32  A4D8               	btfss	status,2,c
 14667  016A34  D7F1               	goto	l8501
 14668  016A36                     u8040:
 14669                           
 14670                           ;stkvar	_sign1 @ sp[(-2)+1]
 14671  016A36  0EFF               	movlw	-1
 14672  016A38  50E3               	movf	plusw1,w,c
 14673  016A3A  B4D8               	btfsc	status,2,c
 14674  016A3C  D011               	goto	u8060
 14675                           
 14676                           ;stkvar	_f1 @ sp[(-2)+-4]
 14677                           ;stkvar	_f1 @ sp[(-2)+-4]
 14678  016A3E  0EFA               	movlw	-6
 14679  016A40  6CE3               	negf	plusw1,c
 14680  016A42  0EFB               	movlw	-5
 14681  016A44  1EE3               	comf	plusw1,f,c
 14682  016A46  0EFC               	movlw	-4
 14683  016A48  1EE3               	comf	plusw1,f,c
 14684  016A4A  0EFD               	movlw	-3
 14685  016A4C  1EE3               	comf	plusw1,f,c
 14686  016A4E  E308               	bnc	u8060
 14687  016A50  0EFB               	movlw	-5
 14688  016A52  2AE3               	incf	plusw1,f,c
 14689  016A54  E305               	bnc	u8060
 14690  016A56  0EFC               	movlw	-4
 14691  016A58  2AE3               	incf	plusw1,f,c
 14692  016A5A  E302               	bnc	u8060
 14693  016A5C  0EFD               	movlw	-3
 14694  016A5E  2AE3               	incf	plusw1,f,c
 14695  016A60                     u8060:
 14696                           
 14697                           ;stkvar	_f1 @ sp[(-2)+-4]
 14698  016A60  0EFA               	movlw	-6
 14699  016A62  006F FF8C  F025    	movff	plusw1,btemp
 14700  016A68  0EFB               	movlw	-5
 14701  016A6A  006F FF8C  F026    	movff	plusw1,btemp+1
 14702  016A70  0EFC               	movlw	-4
 14703  016A72  006F FF8C  F027    	movff	plusw1,btemp+2
 14704  016A78  0EFD               	movlw	-3
 14705  016A7A  006F FF8C  F028    	movff	plusw1,btemp+3
 14706  016A80                     l2521:
 14707                           
 14708                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14709  016A80  0EFA               	movlw	250
 14710  016A82  26E1               	addwf	fsr1l,f,c
 14711  016A84  0EFF               	movlw	255
 14712  016A86  22E2               	addwfc	fsr1h,f,c
 14713  016A88  0012               	return		;funcret
 14714  016A8A                     __end_of___fltol:
 14715                           	opt callstack 0
 14716                           
 14717 ;; *************** function ___flneg *****************
 14718 ;; Defined at:
 14719 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14720 ;; Parameters:    Size  Location     Type
 14721 ;;  f1              4  [STACK] long 
 14722 ;; Auto vars:     Size  Location     Type
 14723 ;;		None
 14724 ;; Return value:  Size  Location     Type
 14725 ;;                  4  [STACK] long 
 14726 ;; Registers used:
 14727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14728 ;; Tracked objects:
 14729 ;;		On entry : 0/0
 14730 ;;		On exit  : 0/0
 14731 ;;		Unchanged: 0/0
 14732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14737 ;;Total ram usage:        0 bytes
 14738 ;; Hardware stack levels used:    1
 14739 ;; Hardware stack levels required when called:    7
 14740 ;; This function calls:
 14741 ;;		Nothing
 14742 ;; This function is called by:
 14743 ;;		_efgtoa
 14744 ;; This function uses a reentrant model
 14745 ;;
 14746                           
 14747                           	psect	text55
 14748  018946                     __ptext55:
 14749                           	opt callstack 0
 14750  018946                     ___flneg:
 14751                           	opt callstack 16
 14752                           
 14753                           ;stkvar	_f1 @ sp[(0)+-4]
 14754                           
 14755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14756                           ;incstack = 0
 14757  018946  0EFC               	movlw	-4
 14758  018948  50E3               	movf	plusw1,w,c
 14759  01894A  E10A               	bnz	u5510
 14760  01894C  0EFD               	movlw	-3
 14761  01894E  50E3               	movf	plusw1,w,c
 14762  018950  E107               	bnz	u5510
 14763  018952  0EFE               	movlw	-2
 14764  018954  50E3               	movf	plusw1,w,c
 14765  018956  E104               	bnz	u5510
 14766  018958  0EFF               	movlw	-1
 14767  01895A  50E3               	movf	plusw1,w,c
 14768  01895C  B4D8               	btfsc	status,2,c
 14769  01895E  D002               	goto	l6941
 14770  018960                     u5510:
 14771                           
 14772                           ;stkvar	_f1 @ sp[(0)+-4]
 14773  018960  0EFF               	movlw	-1
 14774  018962  7EE3               	btg	plusw1,7,c
 14775  018964                     l6941:
 14776                           
 14777                           ;stkvar	_f1 @ sp[(0)+-4]
 14778  018964  0EFC               	movlw	-4
 14779  018966  006F FF8C  F025    	movff	plusw1,btemp
 14780  01896C  0EFD               	movlw	-3
 14781  01896E  006F FF8C  F026    	movff	plusw1,btemp+1
 14782  018974  0EFE               	movlw	-2
 14783  018976  006F FF8C  F027    	movff	plusw1,btemp+2
 14784  01897C  0EFF               	movlw	-1
 14785  01897E  006F FF8C  F028    	movff	plusw1,btemp+3
 14786                           
 14787                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14788  018984  52E5               	movf	postdec1,f,c
 14789  018986  52E5               	movf	postdec1,f,c
 14790  018988  52E5               	movf	postdec1,f,c
 14791  01898A  52E5               	movf	postdec1,f,c
 14792  01898C  0012               	return		;funcret
 14793  01898E                     __end_of___flneg:
 14794                           	opt callstack 0
 14795                           
 14796 ;; *************** function ___flge *****************
 14797 ;; Defined at:
 14798 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14799 ;; Parameters:    Size  Location     Type
 14800 ;;  ff1             4  [STACK] long 
 14801 ;;  ff2             4  [STACK] long 
 14802 ;; Auto vars:     Size  Location     Type
 14803 ;;		None
 14804 ;; Return value:  Size  Location     Type
 14805 ;;		None               void
 14806 ;; Registers used:
 14807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14808 ;; Tracked objects:
 14809 ;;		On entry : 0/0
 14810 ;;		On exit  : 0/0
 14811 ;;		Unchanged: 0/0
 14812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14817 ;;Total ram usage:        0 bytes
 14818 ;; Hardware stack levels used:    1
 14819 ;; Hardware stack levels required when called:    7
 14820 ;; This function calls:
 14821 ;;		Nothing
 14822 ;; This function is called by:
 14823 ;;		_calc_bsoc
 14824 ;;		_efgtoa
 14825 ;; This function uses a reentrant model
 14826 ;;
 14827                           
 14828                           	psect	text56
 14829  016A8A                     __ptext56:
 14830                           	opt callstack 0
 14831  016A8A                     ___flge:
 14832                           	opt callstack 7
 14833                           
 14834                           ;stkvar	_ff1 @ sp[(0)+-4]
 14835                           
 14836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14837                           ;incstack = 0
 14838  016A8A  50E1               	movf	fsr1l,w,c
 14839  016A8C  0FFC               	addlw	-4
 14840  016A8E  6ED9               	movwf	fsr2l,c
 14841  016A90  50E2               	movf	fsr1h,w,c
 14842  016A92  6EDA               	movwf	fsr2h,c
 14843  016A94  0EFF               	movlw	255
 14844  016A96  22DA               	addwfc	fsr2h,f,c
 14845  016A98  0E00               	movlw	0
 14846  016A9A  14DE               	andwf	postinc2,w,c
 14847  016A9C  6E2D               	movwf	(btemp+8)^0,c
 14848  016A9E  0E00               	movlw	0
 14849  016AA0  14DE               	andwf	postinc2,w,c
 14850  016AA2  6E2E               	movwf	(btemp+9)^0,c
 14851  016AA4  0E80               	movlw	128
 14852  016AA6  14DE               	andwf	postinc2,w,c
 14853  016AA8  6E2F               	movwf	(btemp+10)^0,c
 14854  016AAA  0E7F               	movlw	127
 14855  016AAC  14DE               	andwf	postinc2,w,c
 14856  016AAE  6E30               	movwf	(btemp+11)^0,c
 14857  016AB0  502D               	movf	(btemp+8)^0,w,c
 14858  016AB2  102E               	iorwf	(btemp+9)^0,w,c
 14859  016AB4  102F               	iorwf	(btemp+10)^0,w,c
 14860  016AB6  1030               	iorwf	(btemp+11)^0,w,c
 14861  016AB8  A4D8               	btfss	status,2,c
 14862  016ABA  D008               	goto	l8449
 14863                           
 14864                           ;stkvar	_ff1 @ sp[(0)+-4]
 14865  016ABC  0EFC               	movlw	-4
 14866  016ABE  6AE3               	clrf	plusw1,c
 14867  016AC0  0EFD               	movlw	-3
 14868  016AC2  6AE3               	clrf	plusw1,c
 14869  016AC4  0EFE               	movlw	-2
 14870  016AC6  6AE3               	clrf	plusw1,c
 14871  016AC8  0EFF               	movlw	-1
 14872  016ACA  6AE3               	clrf	plusw1,c
 14873  016ACC                     l8449:
 14874                           
 14875                           ;stkvar	_ff2 @ sp[(0)+-8]
 14876  016ACC  50E1               	movf	fsr1l,w,c
 14877  016ACE  0FF8               	addlw	-8
 14878  016AD0  6ED9               	movwf	fsr2l,c
 14879  016AD2  50E2               	movf	fsr1h,w,c
 14880  016AD4  6EDA               	movwf	fsr2h,c
 14881  016AD6  0EFF               	movlw	255
 14882  016AD8  22DA               	addwfc	fsr2h,f,c
 14883  016ADA  0E00               	movlw	0
 14884  016ADC  14DE               	andwf	postinc2,w,c
 14885  016ADE  6E2D               	movwf	(btemp+8)^0,c
 14886  016AE0  0E00               	movlw	0
 14887  016AE2  14DE               	andwf	postinc2,w,c
 14888  016AE4  6E2E               	movwf	(btemp+9)^0,c
 14889  016AE6  0E80               	movlw	128
 14890  016AE8  14DE               	andwf	postinc2,w,c
 14891  016AEA  6E2F               	movwf	(btemp+10)^0,c
 14892  016AEC  0E7F               	movlw	127
 14893  016AEE  14DE               	andwf	postinc2,w,c
 14894  016AF0  6E30               	movwf	(btemp+11)^0,c
 14895  016AF2  502D               	movf	(btemp+8)^0,w,c
 14896  016AF4  102E               	iorwf	(btemp+9)^0,w,c
 14897  016AF6  102F               	iorwf	(btemp+10)^0,w,c
 14898  016AF8  1030               	iorwf	(btemp+11)^0,w,c
 14899  016AFA  A4D8               	btfss	status,2,c
 14900  016AFC  D008               	goto	l2487
 14901                           
 14902                           ;stkvar	_ff2 @ sp[(0)+-8]
 14903  016AFE  0EF8               	movlw	-8
 14904  016B00  6AE3               	clrf	plusw1,c
 14905  016B02  0EF9               	movlw	-7
 14906  016B04  6AE3               	clrf	plusw1,c
 14907  016B06  0EFA               	movlw	-6
 14908  016B08  6AE3               	clrf	plusw1,c
 14909  016B0A  0EFB               	movlw	-5
 14910  016B0C  6AE3               	clrf	plusw1,c
 14911  016B0E                     l2487:
 14912                           
 14913                           ;stkvar	_ff1 @ sp[(0)+-4]
 14914  016B0E  0EFF               	movlw	-1
 14915  016B10  AEE3               	btfss	plusw1,7,c
 14916  016B12  D024               	goto	l8455
 14917                           
 14918                           ;stkvar	_ff1 @ sp[(0)+-4]
 14919  016B14  0E00               	movlw	0
 14920  016B16  6E2D               	movwf	(btemp+8)^0,c
 14921  016B18  0E00               	movlw	0
 14922  016B1A  6E2E               	movwf	(btemp+9)^0,c
 14923  016B1C  0E00               	movlw	0
 14924  016B1E  6E2F               	movwf	(btemp+10)^0,c
 14925  016B20  0E80               	movlw	128
 14926  016B22  6E30               	movwf	(btemp+11)^0,c
 14927  016B24  0EFC               	movlw	-4
 14928  016B26  50E3               	movf	plusw1,w,c
 14929  016B28  5E2D               	subwf	(btemp+8)^0,f,c
 14930  016B2A  0EFD               	movlw	-3
 14931  016B2C  50E3               	movf	plusw1,w,c
 14932  016B2E  5A2E               	subwfb	(btemp+9)^0,f,c
 14933  016B30  0EFE               	movlw	-2
 14934  016B32  50E3               	movf	plusw1,w,c
 14935  016B34  5A2F               	subwfb	(btemp+10)^0,f,c
 14936  016B36  0EFF               	movlw	-1
 14937  016B38  50E3               	movf	plusw1,w,c
 14938  016B3A  5A30               	subwfb	(btemp+11)^0,f,c
 14939                           
 14940                           ;stkvar	_ff1 @ sp[(0)+-4]
 14941  016B3C  0EFC               	movlw	-4
 14942  016B3E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14943  016B44  0EFD               	movlw	-3
 14944  016B46  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14945  016B4C  0EFE               	movlw	-2
 14946  016B4E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14947  016B54  0EFF               	movlw	-1
 14948  016B56  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14949  016B5C                     l8455:
 14950                           
 14951                           ;stkvar	_ff2 @ sp[(0)+-8]
 14952  016B5C  0EFB               	movlw	-5
 14953  016B5E  AEE3               	btfss	plusw1,7,c
 14954  016B60  D024               	goto	l8459
 14955                           
 14956                           ;stkvar	_ff2 @ sp[(0)+-8]
 14957  016B62  0E00               	movlw	0
 14958  016B64  6E2D               	movwf	(btemp+8)^0,c
 14959  016B66  0E00               	movlw	0
 14960  016B68  6E2E               	movwf	(btemp+9)^0,c
 14961  016B6A  0E00               	movlw	0
 14962  016B6C  6E2F               	movwf	(btemp+10)^0,c
 14963  016B6E  0E80               	movlw	128
 14964  016B70  6E30               	movwf	(btemp+11)^0,c
 14965  016B72  0EF8               	movlw	-8
 14966  016B74  50E3               	movf	plusw1,w,c
 14967  016B76  5E2D               	subwf	(btemp+8)^0,f,c
 14968  016B78  0EF9               	movlw	-7
 14969  016B7A  50E3               	movf	plusw1,w,c
 14970  016B7C  5A2E               	subwfb	(btemp+9)^0,f,c
 14971  016B7E  0EFA               	movlw	-6
 14972  016B80  50E3               	movf	plusw1,w,c
 14973  016B82  5A2F               	subwfb	(btemp+10)^0,f,c
 14974  016B84  0EFB               	movlw	-5
 14975  016B86  50E3               	movf	plusw1,w,c
 14976  016B88  5A30               	subwfb	(btemp+11)^0,f,c
 14977                           
 14978                           ;stkvar	_ff2 @ sp[(0)+-8]
 14979  016B8A  0EF8               	movlw	-8
 14980  016B8C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14981  016B92  0EF9               	movlw	-7
 14982  016B94  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14983  016B9A  0EFA               	movlw	-6
 14984  016B9C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14985  016BA2  0EFB               	movlw	-5
 14986  016BA4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14987  016BAA                     l8459:
 14988                           
 14989                           ;stkvar	_ff1 @ sp[(0)+-4]
 14990  016BAA  0EFF               	movlw	-1
 14991  016BAC  7EE3               	btg	plusw1,7,c
 14992                           
 14993                           ;stkvar	_ff2 @ sp[(0)+-8]
 14994  016BAE  0EFB               	movlw	-5
 14995  016BB0  7EE3               	btg	plusw1,7,c
 14996                           
 14997                           ;stkvar	_ff2 @ sp[(0)+-8]
 14998                           ;stkvar	_ff1 @ sp[(0)+-4]
 14999  016BB2  50E1               	movf	fsr1l,w,c
 15000  016BB4  0FFC               	addlw	-4
 15001  016BB6  6ED9               	movwf	fsr2l,c
 15002  016BB8  50E2               	movf	fsr1h,w,c
 15003  016BBA  6EDA               	movwf	fsr2h,c
 15004  016BBC  0EFF               	movlw	255
 15005  016BBE  22DA               	addwfc	fsr2h,f,c
 15006  016BC0  0EF8               	movlw	-8
 15007  016BC2  50E3               	movf	plusw1,w,c
 15008  016BC4  5CDE               	subwf	postinc2,w,c
 15009  016BC6  0EF9               	movlw	-7
 15010  016BC8  50E3               	movf	plusw1,w,c
 15011  016BCA  58DE               	subwfb	postinc2,w,c
 15012  016BCC  0EFA               	movlw	-6
 15013  016BCE  50E3               	movf	plusw1,w,c
 15014  016BD0  58DE               	subwfb	postinc2,w,c
 15015  016BD2  0EFB               	movlw	-5
 15016  016BD4  50E3               	movf	plusw1,w,c
 15017  016BD6  58DE               	subwfb	postinc2,w,c
 15018  016BD8  B0D8               	btfsc	status,0,c
 15019  016BDA  D002               	goto	l8467
 15020  016BDC  9025               	bcf	btemp& (0+255),0,c
 15021  016BDE  D001               	goto	l2494
 15022  016BE0                     l8467:
 15023  016BE0  8025               	bsf	btemp& (0+255),0,c
 15024  016BE2                     l2494:
 15025                           
 15026                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15027  016BE2  0EF8               	movlw	248
 15028  016BE4  26E1               	addwf	fsr1l,f,c
 15029  016BE6  0EFF               	movlw	255
 15030  016BE8  22E2               	addwfc	fsr1h,f,c
 15031  016BEA  0012               	return		;funcret
 15032  016BEC                     __end_of___flge:
 15033                           	opt callstack 0
 15034                           
 15035 ;; *************** function ___fleq *****************
 15036 ;; Defined at:
 15037 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15038 ;; Parameters:    Size  Location     Type
 15039 ;;  ff1             4  [STACK] long 
 15040 ;;  ff2             4  [STACK] long 
 15041 ;; Auto vars:     Size  Location     Type
 15042 ;;		None
 15043 ;; Return value:  Size  Location     Type
 15044 ;;		None               void
 15045 ;; Registers used:
 15046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15047 ;; Tracked objects:
 15048 ;;		On entry : 0/0
 15049 ;;		On exit  : 0/0
 15050 ;;		Unchanged: 0/0
 15051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15056 ;;Total ram usage:        0 bytes
 15057 ;; Hardware stack levels used:    1
 15058 ;; Hardware stack levels required when called:    7
 15059 ;; This function calls:
 15060 ;;		Nothing
 15061 ;; This function is called by:
 15062 ;;		_efgtoa
 15063 ;; This function uses a reentrant model
 15064 ;;
 15065                           
 15066                           	psect	text57
 15067  017986                     __ptext57:
 15068                           	opt callstack 0
 15069  017986                     ___fleq:
 15070                           	opt callstack 16
 15071                           
 15072                           ;stkvar	_ff1 @ sp[(0)+-4]
 15073                           
 15074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15075                           ;incstack = 0
 15076  017986  50E1               	movf	fsr1l,w,c
 15077  017988  0FFC               	addlw	-4
 15078  01798A  6ED9               	movwf	fsr2l,c
 15079  01798C  50E2               	movf	fsr1h,w,c
 15080  01798E  6EDA               	movwf	fsr2h,c
 15081  017990  0EFF               	movlw	255
 15082  017992  22DA               	addwfc	fsr2h,f,c
 15083  017994  0E00               	movlw	0
 15084  017996  14DE               	andwf	postinc2,w,c
 15085  017998  6E2D               	movwf	(btemp+8)^0,c
 15086  01799A  0E00               	movlw	0
 15087  01799C  14DE               	andwf	postinc2,w,c
 15088  01799E  6E2E               	movwf	(btemp+9)^0,c
 15089  0179A0  0E80               	movlw	128
 15090  0179A2  14DE               	andwf	postinc2,w,c
 15091  0179A4  6E2F               	movwf	(btemp+10)^0,c
 15092  0179A6  0E7F               	movlw	127
 15093  0179A8  14DE               	andwf	postinc2,w,c
 15094  0179AA  6E30               	movwf	(btemp+11)^0,c
 15095  0179AC  502D               	movf	(btemp+8)^0,w,c
 15096  0179AE  102E               	iorwf	(btemp+9)^0,w,c
 15097  0179B0  102F               	iorwf	(btemp+10)^0,w,c
 15098  0179B2  1030               	iorwf	(btemp+11)^0,w,c
 15099  0179B4  A4D8               	btfss	status,2,c
 15100  0179B6  D008               	goto	l6925
 15101                           
 15102                           ;stkvar	_ff1 @ sp[(0)+-4]
 15103  0179B8  0EFC               	movlw	-4
 15104  0179BA  6AE3               	clrf	plusw1,c
 15105  0179BC  0EFD               	movlw	-3
 15106  0179BE  6AE3               	clrf	plusw1,c
 15107  0179C0  0EFE               	movlw	-2
 15108  0179C2  6AE3               	clrf	plusw1,c
 15109  0179C4  0EFF               	movlw	-1
 15110  0179C6  6AE3               	clrf	plusw1,c
 15111  0179C8                     l6925:
 15112                           
 15113                           ;stkvar	_ff2 @ sp[(0)+-8]
 15114  0179C8  50E1               	movf	fsr1l,w,c
 15115  0179CA  0FF8               	addlw	-8
 15116  0179CC  6ED9               	movwf	fsr2l,c
 15117  0179CE  50E2               	movf	fsr1h,w,c
 15118  0179D0  6EDA               	movwf	fsr2h,c
 15119  0179D2  0EFF               	movlw	255
 15120  0179D4  22DA               	addwfc	fsr2h,f,c
 15121  0179D6  0E00               	movlw	0
 15122  0179D8  14DE               	andwf	postinc2,w,c
 15123  0179DA  6E2D               	movwf	(btemp+8)^0,c
 15124  0179DC  0E00               	movlw	0
 15125  0179DE  14DE               	andwf	postinc2,w,c
 15126  0179E0  6E2E               	movwf	(btemp+9)^0,c
 15127  0179E2  0E80               	movlw	128
 15128  0179E4  14DE               	andwf	postinc2,w,c
 15129  0179E6  6E2F               	movwf	(btemp+10)^0,c
 15130  0179E8  0E7F               	movlw	127
 15131  0179EA  14DE               	andwf	postinc2,w,c
 15132  0179EC  6E30               	movwf	(btemp+11)^0,c
 15133  0179EE  502D               	movf	(btemp+8)^0,w,c
 15134  0179F0  102E               	iorwf	(btemp+9)^0,w,c
 15135  0179F2  102F               	iorwf	(btemp+10)^0,w,c
 15136  0179F4  1030               	iorwf	(btemp+11)^0,w,c
 15137  0179F6  A4D8               	btfss	status,2,c
 15138  0179F8  D008               	goto	l6929
 15139                           
 15140                           ;stkvar	_ff2 @ sp[(0)+-8]
 15141  0179FA  0EF8               	movlw	-8
 15142  0179FC  6AE3               	clrf	plusw1,c
 15143  0179FE  0EF9               	movlw	-7
 15144  017A00  6AE3               	clrf	plusw1,c
 15145  017A02  0EFA               	movlw	-6
 15146  017A04  6AE3               	clrf	plusw1,c
 15147  017A06  0EFB               	movlw	-5
 15148  017A08  6AE3               	clrf	plusw1,c
 15149  017A0A                     l6929:
 15150                           
 15151                           ;stkvar	_ff2 @ sp[(0)+-8]
 15152                           ;stkvar	_ff1 @ sp[(0)+-4]
 15153  017A0A  50E1               	movf	fsr1l,w,c
 15154  017A0C  0FFC               	addlw	-4
 15155  017A0E  6ED9               	movwf	fsr2l,c
 15156  017A10  50E2               	movf	fsr1h,w,c
 15157  017A12  6EDA               	movwf	fsr2h,c
 15158  017A14  0EFF               	movlw	255
 15159  017A16  22DA               	addwfc	fsr2h,f,c
 15160  017A18  0EF8               	movlw	-8
 15161  017A1A  50E3               	movf	plusw1,w,c
 15162  017A1C  18DE               	xorwf	postinc2,w,c
 15163  017A1E  E10D               	bnz	u5500
 15164  017A20  0EF9               	movlw	-7
 15165  017A22  50E3               	movf	plusw1,w,c
 15166  017A24  18DE               	xorwf	postinc2,w,c
 15167  017A26  E109               	bnz	u5500
 15168  017A28  0EFA               	movlw	-6
 15169  017A2A  50E3               	movf	plusw1,w,c
 15170  017A2C  18DE               	xorwf	postinc2,w,c
 15171  017A2E  E105               	bnz	u5500
 15172  017A30  0EFB               	movlw	-5
 15173  017A32  50E3               	movf	plusw1,w,c
 15174  017A34  18DE               	xorwf	postinc2,w,c
 15175  017A36  B4D8               	btfsc	status,2,c
 15176  017A38  D002               	goto	l6933
 15177  017A3A                     u5500:
 15178  017A3A  9025               	bcf	btemp& (0+255),0,c
 15179  017A3C  D001               	goto	l2483
 15180  017A3E                     l6933:
 15181  017A3E  8025               	bsf	btemp& (0+255),0,c
 15182  017A40                     l2483:
 15183                           
 15184                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15185  017A40  0EF8               	movlw	248
 15186  017A42  26E1               	addwf	fsr1l,f,c
 15187  017A44  0EFF               	movlw	255
 15188  017A46  22E2               	addwfc	fsr1h,f,c
 15189  017A48  0012               	return		;funcret
 15190  017A4A                     __end_of___fleq:
 15191                           	opt callstack 0
 15192                           
 15193 ;; *************** function ___fldiv *****************
 15194 ;; Defined at:
 15195 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15196 ;; Parameters:    Size  Location     Type
 15197 ;;  b               4  [STACK] long 
 15198 ;;  a               4  [STACK] long 
 15199 ;; Auto vars:     Size  Location     Type
 15200 ;;  grs             4  [STACK] unsigned long 
 15201 ;;  rem             4  [STACK] unsigned long 
 15202 ;;  new_exp         2  [STACK] short 
 15203 ;;  aexp            1  [STACK] unsigned char 
 15204 ;;  bexp            1  [STACK] unsigned char 
 15205 ;;  sign            1  [STACK] unsigned char 
 15206 ;; Return value:  Size  Location     Type
 15207 ;;                  4  [STACK] unsigned char 
 15208 ;; Registers used:
 15209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15210 ;; Tracked objects:
 15211 ;;		On entry : 0/2
 15212 ;;		On exit  : 0/0
 15213 ;;		Unchanged: 0/0
 15214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15219 ;;Total ram usage:        0 bytes
 15220 ;; Hardware stack levels used:    1
 15221 ;; Hardware stack levels required when called:    7
 15222 ;; This function calls:
 15223 ;;		Nothing
 15224 ;; This function is called by:
 15225 ;;		_conv_raw_result
 15226 ;;		_calc_bsoc
 15227 ;;		_efgtoa
 15228 ;; This function uses a reentrant model
 15229 ;;
 15230                           
 15231                           	psect	text58
 15232  01360E                     __ptext58:
 15233                           	opt callstack 0
 15234  01360E                     ___fldiv:
 15235                           	opt callstack 0
 15236                           
 15237                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15238  01360E  0E0D               	movlw	13
 15239  013610  26E1               	addwf	fsr1l,f,c
 15240  013612  0E00               	movlw	0
 15241  013614  22E2               	addwfc	fsr1h,f,c
 15242                           
 15243                           ;stkvar	_b @ sp[(-13)+-4]
 15244                           
 15245                           ;incstack = 0
 15246  013616  0EF2               	movlw	242
 15247  013618  24E1               	addwf	fsr1l,w,c
 15248  01361A  6ED9               	movwf	fsr2l,c
 15249  01361C  0EFF               	movlw	255
 15250  01361E  20E2               	addwfc	fsr1h,w,c
 15251  013620  6EDA               	movwf	fsr2h,c
 15252  013622  50DF               	movf	indf2,w,c
 15253  013624  6E30               	movwf	(btemp+11)^0,c
 15254  013626  0E80               	movlw	128
 15255  013628  1630               	andwf	(btemp+11)^0,f,c
 15256                           
 15257                           ;stkvar	_sign @ sp[(-13)+12]
 15258  01362A  0EFF               	movlw	-1
 15259  01362C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15260                           
 15261                           ;stkvar	_b @ sp[(-13)+-4]
 15262  013632  0EF2               	movlw	242
 15263  013634  24E1               	addwf	fsr1l,w,c
 15264  013636  6ED9               	movwf	fsr2l,c
 15265  013638  0EFF               	movlw	255
 15266  01363A  20E2               	addwfc	fsr1h,w,c
 15267  01363C  6EDA               	movwf	fsr2h,c
 15268  01363E  50DF               	movf	indf2,w,c
 15269  013640  6E30               	movwf	(btemp+11)^0,c
 15270  013642  90D8               	bcf	status,0,c
 15271  013644  3430               	rlcf	(btemp+11)^0,w,c
 15272  013646  6E2F               	movwf	(btemp+10)^0,c
 15273                           
 15274                           ;stkvar	_bexp @ sp[(-13)+11]
 15275  013648  0EFE               	movlw	-2
 15276  01364A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15277                           
 15278                           ;stkvar	_b @ sp[(-13)+-4]
 15279  013650  0EF1               	movlw	241
 15280  013652  24E1               	addwf	fsr1l,w,c
 15281  013654  6ED9               	movwf	fsr2l,c
 15282  013656  0EFF               	movlw	255
 15283  013658  20E2               	addwfc	fsr1h,w,c
 15284  01365A  6EDA               	movwf	fsr2h,c
 15285  01365C  AEDF               	btfss	indf2,7,c
 15286  01365E  D002               	goto	l8141
 15287                           
 15288                           ;stkvar	_bexp @ sp[(-13)+11]
 15289  013660  0EFE               	movlw	-2
 15290  013662  80E3               	bsf	plusw1,0,c
 15291  013664                     l8141:
 15292                           
 15293                           ;stkvar	_bexp @ sp[(-13)+11]
 15294  013664  0EFE               	movlw	-2
 15295  013666  50E3               	movf	plusw1,w,c
 15296  013668  B4D8               	btfsc	status,2,c
 15297  01366A  D027               	goto	l8151
 15298                           
 15299                           ;stkvar	_bexp @ sp[(-13)+11]
 15300  01366C  0EFE               	movlw	-2
 15301  01366E  28E3               	incf	plusw1,w,c
 15302  013670  A4D8               	btfss	status,2,c
 15303  013672  D018               	goto	l8147
 15304  013674  0E00               	movlw	0
 15305  013676  6E2D               	movwf	(btemp+8)^0,c
 15306  013678  0E00               	movlw	0
 15307  01367A  6E2E               	movwf	(btemp+9)^0,c
 15308  01367C  0E00               	movlw	0
 15309  01367E  6E2F               	movwf	(btemp+10)^0,c
 15310  013680  0E00               	movlw	0
 15311  013682  6E30               	movwf	(btemp+11)^0,c
 15312                           
 15313                           ;stkvar	_b @ sp[(-13)+-4]
 15314  013684  0EEF               	movlw	-17
 15315  013686  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15316  01368C  0EF0               	movlw	-16
 15317  01368E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15318  013694  0EF1               	movlw	-15
 15319  013696  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15320  01369C  0EF2               	movlw	-14
 15321  01369E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15322  0136A4                     l8147:
 15323                           
 15324                           ;stkvar	_b @ sp[(-13)+-4]
 15325  0136A4  0EF1               	movlw	-15
 15326  0136A6  8EE3               	bsf	plusw1,7,c
 15327                           
 15328                           ;stkvar	_b @ sp[(-13)+-4]
 15329  0136A8  0EF2               	movlw	242
 15330  0136AA  24E1               	addwf	fsr1l,w,c
 15331  0136AC  6ED9               	movwf	fsr2l,c
 15332  0136AE  0EFF               	movlw	255
 15333  0136B0  20E2               	addwfc	fsr1h,w,c
 15334  0136B2  6EDA               	movwf	fsr2h,c
 15335  0136B4  0E00               	movlw	0
 15336  0136B6  6EDF               	movwf	indf2,c
 15337  0136B8  D018               	goto	l8153
 15338  0136BA                     l8151:
 15339  0136BA  0E00               	movlw	0
 15340  0136BC  6E2D               	movwf	(btemp+8)^0,c
 15341  0136BE  0E00               	movlw	0
 15342  0136C0  6E2E               	movwf	(btemp+9)^0,c
 15343  0136C2  0E00               	movlw	0
 15344  0136C4  6E2F               	movwf	(btemp+10)^0,c
 15345  0136C6  0E00               	movlw	0
 15346  0136C8  6E30               	movwf	(btemp+11)^0,c
 15347                           
 15348                           ;stkvar	_b @ sp[(-13)+-4]
 15349  0136CA  0EEF               	movlw	-17
 15350  0136CC  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15351  0136D2  0EF0               	movlw	-16
 15352  0136D4  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15353  0136DA  0EF1               	movlw	-15
 15354  0136DC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15355  0136E2  0EF2               	movlw	-14
 15356  0136E4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15357  0136EA                     l8153:
 15358                           
 15359                           ;stkvar	_a @ sp[(-13)+-8]
 15360  0136EA  0EEE               	movlw	238
 15361  0136EC  24E1               	addwf	fsr1l,w,c
 15362  0136EE  6ED9               	movwf	fsr2l,c
 15363  0136F0  0EFF               	movlw	255
 15364  0136F2  20E2               	addwfc	fsr1h,w,c
 15365  0136F4  6EDA               	movwf	fsr2h,c
 15366  0136F6  50DF               	movf	indf2,w,c
 15367  0136F8  6E30               	movwf	(btemp+11)^0,c
 15368  0136FA  0E80               	movlw	128
 15369  0136FC  1630               	andwf	(btemp+11)^0,f,c
 15370                           
 15371                           ;stkvar	_sign @ sp[(-13)+12]
 15372  0136FE  50E1               	movf	fsr1l,w,c
 15373  013700  0FFF               	addlw	-1
 15374  013702  6ED9               	movwf	fsr2l,c
 15375  013704  50E2               	movf	fsr1h,w,c
 15376  013706  6EDA               	movwf	fsr2h,c
 15377  013708  0EFF               	movlw	255
 15378  01370A  22DA               	addwfc	fsr2h,f,c
 15379  01370C  5030               	movf	(btemp+11)^0,w,c
 15380  01370E  1ADF               	xorwf	indf2,f,c
 15381                           
 15382                           ;stkvar	_a @ sp[(-13)+-8]
 15383  013710  0EEE               	movlw	238
 15384  013712  24E1               	addwf	fsr1l,w,c
 15385  013714  6ED9               	movwf	fsr2l,c
 15386  013716  0EFF               	movlw	255
 15387  013718  20E2               	addwfc	fsr1h,w,c
 15388  01371A  6EDA               	movwf	fsr2h,c
 15389  01371C  50DF               	movf	indf2,w,c
 15390  01371E  6E30               	movwf	(btemp+11)^0,c
 15391  013720  90D8               	bcf	status,0,c
 15392  013722  3430               	rlcf	(btemp+11)^0,w,c
 15393  013724  6E2F               	movwf	(btemp+10)^0,c
 15394                           
 15395                           ;stkvar	_aexp @ sp[(-13)+10]
 15396  013726  0EFD               	movlw	-3
 15397  013728  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15398                           
 15399                           ;stkvar	_a @ sp[(-13)+-8]
 15400  01372E  0EED               	movlw	237
 15401  013730  24E1               	addwf	fsr1l,w,c
 15402  013732  6ED9               	movwf	fsr2l,c
 15403  013734  0EFF               	movlw	255
 15404  013736  20E2               	addwfc	fsr1h,w,c
 15405  013738  6EDA               	movwf	fsr2h,c
 15406  01373A  AEDF               	btfss	indf2,7,c
 15407  01373C  D002               	goto	l8161
 15408                           
 15409                           ;stkvar	_aexp @ sp[(-13)+10]
 15410  01373E  0EFD               	movlw	-3
 15411  013740  80E3               	bsf	plusw1,0,c
 15412  013742                     l8161:
 15413                           
 15414                           ;stkvar	_aexp @ sp[(-13)+10]
 15415  013742  0EFD               	movlw	-3
 15416  013744  50E3               	movf	plusw1,w,c
 15417  013746  B4D8               	btfsc	status,2,c
 15418  013748  D027               	goto	l8171
 15419                           
 15420                           ;stkvar	_aexp @ sp[(-13)+10]
 15421  01374A  0EFD               	movlw	-3
 15422  01374C  28E3               	incf	plusw1,w,c
 15423  01374E  A4D8               	btfss	status,2,c
 15424  013750  D018               	goto	l8167
 15425  013752  0E00               	movlw	0
 15426  013754  6E2D               	movwf	(btemp+8)^0,c
 15427  013756  0E00               	movlw	0
 15428  013758  6E2E               	movwf	(btemp+9)^0,c
 15429  01375A  0E00               	movlw	0
 15430  01375C  6E2F               	movwf	(btemp+10)^0,c
 15431  01375E  0E00               	movlw	0
 15432  013760  6E30               	movwf	(btemp+11)^0,c
 15433                           
 15434                           ;stkvar	_a @ sp[(-13)+-8]
 15435  013762  0EEB               	movlw	-21
 15436  013764  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15437  01376A  0EEC               	movlw	-20
 15438  01376C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15439  013772  0EED               	movlw	-19
 15440  013774  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15441  01377A  0EEE               	movlw	-18
 15442  01377C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15443  013782                     l8167:
 15444                           
 15445                           ;stkvar	_a @ sp[(-13)+-8]
 15446  013782  0EED               	movlw	-19
 15447  013784  8EE3               	bsf	plusw1,7,c
 15448                           
 15449                           ;stkvar	_a @ sp[(-13)+-8]
 15450  013786  0EEE               	movlw	238
 15451  013788  24E1               	addwf	fsr1l,w,c
 15452  01378A  6ED9               	movwf	fsr2l,c
 15453  01378C  0EFF               	movlw	255
 15454  01378E  20E2               	addwfc	fsr1h,w,c
 15455  013790  6EDA               	movwf	fsr2h,c
 15456  013792  0E00               	movlw	0
 15457  013794  6EDF               	movwf	indf2,c
 15458  013796  D018               	goto	l8173
 15459  013798                     l8171:
 15460  013798  0E00               	movlw	0
 15461  01379A  6E2D               	movwf	(btemp+8)^0,c
 15462  01379C  0E00               	movlw	0
 15463  01379E  6E2E               	movwf	(btemp+9)^0,c
 15464  0137A0  0E00               	movlw	0
 15465  0137A2  6E2F               	movwf	(btemp+10)^0,c
 15466  0137A4  0E00               	movlw	0
 15467  0137A6  6E30               	movwf	(btemp+11)^0,c
 15468                           
 15469                           ;stkvar	_a @ sp[(-13)+-8]
 15470  0137A8  0EEB               	movlw	-21
 15471  0137AA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15472  0137B0  0EEC               	movlw	-20
 15473  0137B2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15474  0137B8  0EED               	movlw	-19
 15475  0137BA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15476  0137C0  0EEE               	movlw	-18
 15477  0137C2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15478  0137C8                     l8173:
 15479                           
 15480                           ;stkvar	_a @ sp[(-13)+-8]
 15481  0137C8  0EEB               	movlw	-21
 15482  0137CA  50E3               	movf	plusw1,w,c
 15483  0137CC  E139               	bnz	l8185
 15484  0137CE  0EEC               	movlw	-20
 15485  0137D0  50E3               	movf	plusw1,w,c
 15486  0137D2  E136               	bnz	l8185
 15487  0137D4  0EED               	movlw	-19
 15488  0137D6  50E3               	movf	plusw1,w,c
 15489  0137D8  E133               	bnz	l8185
 15490  0137DA  0EEE               	movlw	-18
 15491  0137DC  50E3               	movf	plusw1,w,c
 15492  0137DE  A4D8               	btfss	status,2,c
 15493  0137E0  D02F               	goto	l8185
 15494                           
 15495                           ;stkvar	_b @ sp[(-13)+-4]
 15496  0137E2  0EEF               	movlw	-17
 15497  0137E4  6AE3               	clrf	plusw1,c
 15498  0137E6  0EF0               	movlw	-16
 15499  0137E8  6AE3               	clrf	plusw1,c
 15500  0137EA  0EF1               	movlw	-15
 15501  0137EC  6AE3               	clrf	plusw1,c
 15502  0137EE  0EF2               	movlw	-14
 15503  0137F0  6AE3               	clrf	plusw1,c
 15504                           
 15505                           ;stkvar	_b @ sp[(-13)+-4]
 15506  0137F2  0EF1               	movlw	241
 15507  0137F4  24E1               	addwf	fsr1l,w,c
 15508  0137F6  6ED9               	movwf	fsr2l,c
 15509  0137F8  0EFF               	movlw	255
 15510  0137FA  20E2               	addwfc	fsr1h,w,c
 15511  0137FC  6EDA               	movwf	fsr2h,c
 15512  0137FE  0E80               	movlw	128
 15513  013800  12DE               	iorwf	postinc2,f,c
 15514  013802  0E7F               	movlw	127
 15515  013804  12DD               	iorwf	postdec2,f,c
 15516  013806                     l8179:
 15517                           
 15518                           ;stkvar	_sign @ sp[(-13)+12]
 15519  013806  0EFF               	movlw	-1
 15520  013808  006F FF8C  F030    	movff	plusw1,btemp+11
 15521                           
 15522                           ;stkvar	_b @ sp[(-13)+-4]
 15523  01380E  0EF2               	movlw	242
 15524  013810  24E1               	addwf	fsr1l,w,c
 15525  013812  6ED9               	movwf	fsr2l,c
 15526  013814  0EFF               	movlw	255
 15527  013816  20E2               	addwfc	fsr1h,w,c
 15528  013818  6EDA               	movwf	fsr2h,c
 15529  01381A  5030               	movf	(btemp+11)^0,w,c
 15530  01381C  12DF               	iorwf	indf2,f,c
 15531                           
 15532                           ;stkvar	_b @ sp[(-13)+-4]
 15533  01381E  0EEF               	movlw	-17
 15534  013820  006F FF8C  F025    	movff	plusw1,btemp
 15535  013826  0EF0               	movlw	-16
 15536  013828  006F FF8C  F026    	movff	plusw1,btemp+1
 15537  01382E  0EF1               	movlw	-15
 15538  013830  006F FF8C  F027    	movff	plusw1,btemp+2
 15539  013836  0EF2               	movlw	-14
 15540  013838  006F FF8C  F028    	movff	plusw1,btemp+3
 15541  01383E  D19F               	goto	l2806
 15542  013840                     l8185:
 15543                           
 15544                           ;stkvar	_bexp @ sp[(-13)+11]
 15545  013840  0EFE               	movlw	-2
 15546  013842  50E3               	movf	plusw1,w,c
 15547  013844  A4D8               	btfss	status,2,c
 15548  013846  D009               	goto	l8193
 15549  013848  0E00               	movlw	0
 15550  01384A  6E25               	movwf	btemp^0,c
 15551  01384C  0E00               	movlw	0
 15552  01384E  6E26               	movwf	(btemp+1)^0,c
 15553  013850  0E00               	movlw	0
 15554  013852  6E27               	movwf	(btemp+2)^0,c
 15555  013854  0E00               	movlw	0
 15556  013856  6E28               	movwf	(btemp+3)^0,c
 15557  013858  D192               	goto	l2806
 15558  01385A                     l8193:
 15559                           
 15560                           ;stkvar	_bexp @ sp[(-13)+11]
 15561  01385A  0EFE               	movlw	-2
 15562  01385C  50E3               	movf	plusw1,w,c
 15563  01385E  6E2F               	movwf	(btemp+10)^0,c
 15564  013860  6A30               	clrf	(btemp+11)^0,c
 15565                           
 15566                           ;stkvar	_aexp @ sp[(-13)+10]
 15567  013862  0EFD               	movlw	-3
 15568  013864  50E3               	movf	plusw1,w,c
 15569  013866  5E2F               	subwf	(btemp+10)^0,f,c
 15570  013868  0E00               	movlw	0
 15571  01386A  5A30               	subwfb	(btemp+11)^0,f,c
 15572  01386C  0E7F               	movlw	127
 15573  01386E  262F               	addwf	(btemp+10)^0,f,c
 15574  013870  0E00               	movlw	0
 15575  013872  2230               	addwfc	(btemp+11)^0,f,c
 15576                           
 15577                           ;stkvar	_new_exp @ sp[(-13)+8]
 15578  013874  0EFB               	movlw	-5
 15579  013876  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15580  01387C  0EFC               	movlw	-4
 15581  01387E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15582                           
 15583                           ;stkvar	_b @ sp[(-13)+-4]
 15584  013884  0EEF               	movlw	-17
 15585  013886  006F FF8C  F02D    	movff	plusw1,btemp+8
 15586  01388C  0EF0               	movlw	-16
 15587  01388E  006F FF8C  F02E    	movff	plusw1,btemp+9
 15588  013894  0EF1               	movlw	-15
 15589  013896  006F FF8C  F02F    	movff	plusw1,btemp+10
 15590  01389C  0EF2               	movlw	-14
 15591  01389E  006F FF8C  F030    	movff	plusw1,btemp+11
 15592                           
 15593                           ;stkvar	_rem @ sp[(-13)+4]
 15594  0138A4  0EF7               	movlw	-9
 15595  0138A6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15596  0138AC  0EF8               	movlw	-8
 15597  0138AE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15598  0138B4  0EF9               	movlw	-7
 15599  0138B6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15600  0138BC  0EFA               	movlw	-6
 15601  0138BE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15602                           
 15603                           ;stkvar	_b @ sp[(-13)+-4]
 15604  0138C4  0EEF               	movlw	-17
 15605  0138C6  6AE3               	clrf	plusw1,c
 15606  0138C8  0EF0               	movlw	-16
 15607  0138CA  6AE3               	clrf	plusw1,c
 15608  0138CC  0EF1               	movlw	-15
 15609  0138CE  6AE3               	clrf	plusw1,c
 15610  0138D0  0EF2               	movlw	-14
 15611  0138D2  6AE3               	clrf	plusw1,c
 15612                           
 15613                           ;stkvar	_grs @ sp[(-13)+0]
 15614  0138D4  0EF3               	movlw	-13
 15615  0138D6  6AE3               	clrf	plusw1,c
 15616  0138D8  0EF4               	movlw	-12
 15617  0138DA  6AE3               	clrf	plusw1,c
 15618  0138DC  0EF5               	movlw	-11
 15619  0138DE  6AE3               	clrf	plusw1,c
 15620  0138E0  0EF6               	movlw	-10
 15621  0138E2  6AE3               	clrf	plusw1,c
 15622                           
 15623                           ;stkvar	_aexp @ sp[(-13)+10]
 15624  0138E4  0EFD               	movlw	-3
 15625  0138E6  6AE3               	clrf	plusw1,c
 15626  0138E8  D050               	goto	l8221
 15627  0138EA                     l8203:
 15628                           
 15629                           ;stkvar	_aexp @ sp[(-13)+10]
 15630  0138EA  0EFD               	movlw	-3
 15631  0138EC  50E3               	movf	plusw1,w,c
 15632  0138EE  B4D8               	btfsc	status,2,c
 15633  0138F0  D020               	goto	l8213
 15634                           
 15635                           ;stkvar	_rem @ sp[(-13)+4]
 15636  0138F2  90D8               	bcf	status,0,c
 15637  0138F4  0EF7               	movlw	-9
 15638  0138F6  36E3               	rlcf	plusw1,f,c
 15639  0138F8  0EF8               	movlw	-8
 15640  0138FA  36E3               	rlcf	plusw1,f,c
 15641  0138FC  0EF9               	movlw	-7
 15642  0138FE  36E3               	rlcf	plusw1,f,c
 15643  013900  0EFA               	movlw	-6
 15644  013902  36E3               	rlcf	plusw1,f,c
 15645                           
 15646                           ;stkvar	_b @ sp[(-13)+-4]
 15647  013904  90D8               	bcf	status,0,c
 15648  013906  0EEF               	movlw	-17
 15649  013908  36E3               	rlcf	plusw1,f,c
 15650  01390A  0EF0               	movlw	-16
 15651  01390C  36E3               	rlcf	plusw1,f,c
 15652  01390E  0EF1               	movlw	-15
 15653  013910  36E3               	rlcf	plusw1,f,c
 15654  013912  0EF2               	movlw	-14
 15655  013914  36E3               	rlcf	plusw1,f,c
 15656                           
 15657                           ;stkvar	_grs @ sp[(-13)+0]
 15658  013916  0EF6               	movlw	-10
 15659  013918  AEE3               	btfss	plusw1,7,c
 15660  01391A  D002               	goto	l8211
 15661                           
 15662                           ;stkvar	_b @ sp[(-13)+-4]
 15663  01391C  0EEF               	movlw	-17
 15664  01391E  80E3               	bsf	plusw1,0,c
 15665  013920                     l8211:
 15666                           
 15667                           ;stkvar	_grs @ sp[(-13)+0]
 15668  013920  90D8               	bcf	status,0,c
 15669  013922  0EF3               	movlw	-13
 15670  013924  36E3               	rlcf	plusw1,f,c
 15671  013926  0EF4               	movlw	-12
 15672  013928  36E3               	rlcf	plusw1,f,c
 15673  01392A  0EF5               	movlw	-11
 15674  01392C  36E3               	rlcf	plusw1,f,c
 15675  01392E  0EF6               	movlw	-10
 15676  013930  36E3               	rlcf	plusw1,f,c
 15677  013932                     l8213:
 15678                           
 15679                           ;stkvar	_a @ sp[(-13)+-8]
 15680                           ;stkvar	_rem @ sp[(-13)+4]
 15681  013932  50E1               	movf	fsr1l,w,c
 15682  013934  0FF7               	addlw	-9
 15683  013936  6ED9               	movwf	fsr2l,c
 15684  013938  50E2               	movf	fsr1h,w,c
 15685  01393A  6EDA               	movwf	fsr2h,c
 15686  01393C  0EFF               	movlw	255
 15687  01393E  22DA               	addwfc	fsr2h,f,c
 15688  013940  0EEB               	movlw	-21
 15689  013942  50E3               	movf	plusw1,w,c
 15690  013944  5CDE               	subwf	postinc2,w,c
 15691  013946  0EEC               	movlw	-20
 15692  013948  50E3               	movf	plusw1,w,c
 15693  01394A  58DE               	subwfb	postinc2,w,c
 15694  01394C  0EED               	movlw	-19
 15695  01394E  50E3               	movf	plusw1,w,c
 15696  013950  58DE               	subwfb	postinc2,w,c
 15697  013952  0EEE               	movlw	-18
 15698  013954  50E3               	movf	plusw1,w,c
 15699  013956  58DE               	subwfb	postinc2,w,c
 15700  013958  A0D8               	btfss	status,0,c
 15701  01395A  D015               	goto	l8219
 15702                           
 15703                           ;stkvar	_grs @ sp[(-13)+0]
 15704  01395C  0EF6               	movlw	-10
 15705  01395E  8CE3               	bsf	plusw1,6,c
 15706                           
 15707                           ;stkvar	_a @ sp[(-13)+-8]
 15708                           ;stkvar	_rem @ sp[(-13)+4]
 15709  013960  50E1               	movf	fsr1l,w,c
 15710  013962  0FF7               	addlw	-9
 15711  013964  6ED9               	movwf	fsr2l,c
 15712  013966  50E2               	movf	fsr1h,w,c
 15713  013968  6EDA               	movwf	fsr2h,c
 15714  01396A  0EFF               	movlw	255
 15715  01396C  22DA               	addwfc	fsr2h,f,c
 15716  01396E  0EEB               	movlw	-21
 15717  013970  50E3               	movf	plusw1,w,c
 15718  013972  5EDE               	subwf	postinc2,f,c
 15719  013974  0EEC               	movlw	-20
 15720  013976  50E3               	movf	plusw1,w,c
 15721  013978  5ADE               	subwfb	postinc2,f,c
 15722  01397A  0EED               	movlw	-19
 15723  01397C  50E3               	movf	plusw1,w,c
 15724  01397E  5ADE               	subwfb	postinc2,f,c
 15725  013980  0EEE               	movlw	-18
 15726  013982  50E3               	movf	plusw1,w,c
 15727  013984  5ADE               	subwfb	postinc2,f,c
 15728  013986                     l8219:
 15729                           
 15730                           ;stkvar	_aexp @ sp[(-13)+10]
 15731  013986  0EFD               	movlw	-3
 15732  013988  2AE3               	incf	plusw1,f,c
 15733  01398A                     l8221:
 15734                           
 15735                           ;stkvar	_aexp @ sp[(-13)+10]
 15736  01398A  0EFD               	movlw	-3
 15737  01398C  006F FF8C  F025    	movff	plusw1,btemp
 15738  013992  0E19               	movlw	25
 15739  013994  6425               	cpfsgt	btemp^0,c
 15740  013996  D7A9               	goto	l8203
 15741                           
 15742                           ;stkvar	_rem @ sp[(-13)+4]
 15743  013998  0EF7               	movlw	-9
 15744  01399A  50E3               	movf	plusw1,w,c
 15745  01399C  E10A               	bnz	u7580
 15746  01399E  0EF8               	movlw	-8
 15747  0139A0  50E3               	movf	plusw1,w,c
 15748  0139A2  E107               	bnz	u7580
 15749  0139A4  0EF9               	movlw	-7
 15750  0139A6  50E3               	movf	plusw1,w,c
 15751  0139A8  E104               	bnz	u7580
 15752  0139AA  0EFA               	movlw	-6
 15753  0139AC  50E3               	movf	plusw1,w,c
 15754  0139AE  B4D8               	btfsc	status,2,c
 15755  0139B0  D024               	goto	l8237
 15756  0139B2                     u7580:
 15757                           
 15758                           ;stkvar	_grs @ sp[(-13)+0]
 15759  0139B2  0EF3               	movlw	-13
 15760  0139B4  80E3               	bsf	plusw1,0,c
 15761  0139B6  D021               	goto	l8237
 15762  0139B8                     l8227:
 15763                           
 15764                           ;stkvar	_b @ sp[(-13)+-4]
 15765  0139B8  90D8               	bcf	status,0,c
 15766  0139BA  0EEF               	movlw	-17
 15767  0139BC  36E3               	rlcf	plusw1,f,c
 15768  0139BE  0EF0               	movlw	-16
 15769  0139C0  36E3               	rlcf	plusw1,f,c
 15770  0139C2  0EF1               	movlw	-15
 15771  0139C4  36E3               	rlcf	plusw1,f,c
 15772  0139C6  0EF2               	movlw	-14
 15773  0139C8  36E3               	rlcf	plusw1,f,c
 15774                           
 15775                           ;stkvar	_grs @ sp[(-13)+0]
 15776  0139CA  0EF6               	movlw	-10
 15777  0139CC  AEE3               	btfss	plusw1,7,c
 15778  0139CE  D002               	goto	l8233
 15779                           
 15780                           ;stkvar	_b @ sp[(-13)+-4]
 15781  0139D0  0EEF               	movlw	-17
 15782  0139D2  80E3               	bsf	plusw1,0,c
 15783  0139D4                     l8233:
 15784                           
 15785                           ;stkvar	_grs @ sp[(-13)+0]
 15786  0139D4  90D8               	bcf	status,0,c
 15787  0139D6  0EF3               	movlw	-13
 15788  0139D8  36E3               	rlcf	plusw1,f,c
 15789  0139DA  0EF4               	movlw	-12
 15790  0139DC  36E3               	rlcf	plusw1,f,c
 15791  0139DE  0EF5               	movlw	-11
 15792  0139E0  36E3               	rlcf	plusw1,f,c
 15793  0139E2  0EF6               	movlw	-10
 15794  0139E4  36E3               	rlcf	plusw1,f,c
 15795                           
 15796                           ;stkvar	_new_exp @ sp[(-13)+8]
 15797  0139E6  50E1               	movf	fsr1l,w,c
 15798  0139E8  0FFB               	addlw	-5
 15799  0139EA  6ED9               	movwf	fsr2l,c
 15800  0139EC  50E2               	movf	fsr1h,w,c
 15801  0139EE  6EDA               	movwf	fsr2h,c
 15802  0139F0  0EFF               	movlw	255
 15803  0139F2  22DA               	addwfc	fsr2h,f,c
 15804  0139F4  06DE               	decf	postinc2,f,c
 15805  0139F6  0E00               	movlw	0
 15806  0139F8  5ADD               	subwfb	postdec2,f,c
 15807  0139FA                     l8237:
 15808                           
 15809                           ;stkvar	_b @ sp[(-13)+-4]
 15810  0139FA  0EF1               	movlw	-15
 15811  0139FC  AEE3               	btfss	plusw1,7,c
 15812  0139FE  D7DC               	goto	l8227
 15813                           
 15814                           ;stkvar	_aexp @ sp[(-13)+10]
 15815  013A00  0EFD               	movlw	-3
 15816  013A02  6AE3               	clrf	plusw1,c
 15817                           
 15818                           ;stkvar	_grs @ sp[(-13)+0]
 15819  013A04  0EF6               	movlw	-10
 15820  013A06  AEE3               	btfss	plusw1,7,c
 15821  013A08  D020               	goto	l8251
 15822                           
 15823                           ;stkvar	_grs @ sp[(-13)+0]
 15824  013A0A  50E1               	movf	fsr1l,w,c
 15825  013A0C  0FF3               	addlw	-13
 15826  013A0E  6ED9               	movwf	fsr2l,c
 15827  013A10  50E2               	movf	fsr1h,w,c
 15828  013A12  6EDA               	movwf	fsr2h,c
 15829  013A14  0EFF               	movlw	255
 15830  013A16  22DA               	addwfc	fsr2h,f,c
 15831  013A18  0EFF               	movlw	255
 15832  013A1A  14DE               	andwf	postinc2,w,c
 15833  013A1C  6E2D               	movwf	(btemp+8)^0,c
 15834  013A1E  0EFF               	movlw	255
 15835  013A20  14DE               	andwf	postinc2,w,c
 15836  013A22  6E2E               	movwf	(btemp+9)^0,c
 15837  013A24  0EFF               	movlw	255
 15838  013A26  14DE               	andwf	postinc2,w,c
 15839  013A28  6E2F               	movwf	(btemp+10)^0,c
 15840  013A2A  0E7F               	movlw	127
 15841  013A2C  14DE               	andwf	postinc2,w,c
 15842  013A2E  6E30               	movwf	(btemp+11)^0,c
 15843  013A30  502D               	movf	(btemp+8)^0,w,c
 15844  013A32  102E               	iorwf	(btemp+9)^0,w,c
 15845  013A34  102F               	iorwf	(btemp+10)^0,w,c
 15846  013A36  1030               	iorwf	(btemp+11)^0,w,c
 15847  013A38  B4D8               	btfsc	status,2,c
 15848  013A3A  D004               	goto	l8247
 15849  013A3C                     u7620:
 15850                           
 15851                           ;stkvar	_aexp @ sp[(-13)+10]
 15852  013A3C  0EFD               	movlw	-3
 15853  013A3E  6AE3               	clrf	plusw1,c
 15854  013A40  2AE3               	incf	plusw1,f,c
 15855  013A42  D003               	goto	l8251
 15856  013A44                     l8247:
 15857                           
 15858                           ;stkvar	_b @ sp[(-13)+-4]
 15859  013A44  0EEF               	movlw	-17
 15860  013A46  B0E3               	btfsc	plusw1,0,c
 15861  013A48  D7F9               	goto	u7620
 15862  013A4A                     l8251:
 15863                           
 15864                           ;stkvar	_aexp @ sp[(-13)+10]
 15865  013A4A  0EFD               	movlw	-3
 15866  013A4C  50E3               	movf	plusw1,w,c
 15867  013A4E  B4D8               	btfsc	status,2,c
 15868  013A50  D036               	goto	l8261
 15869                           
 15870                           ;stkvar	_b @ sp[(-13)+-4]
 15871  013A52  50E1               	movf	fsr1l,w,c
 15872  013A54  0FEF               	addlw	-17
 15873  013A56  6ED9               	movwf	fsr2l,c
 15874  013A58  50E2               	movf	fsr1h,w,c
 15875  013A5A  6EDA               	movwf	fsr2h,c
 15876  013A5C  0EFF               	movlw	255
 15877  013A5E  22DA               	addwfc	fsr2h,f,c
 15878  013A60  2ADE               	incf	postinc2,f,c
 15879  013A62  0E00               	movlw	0
 15880  013A64  22DE               	addwfc	postinc2,f,c
 15881  013A66  22DE               	addwfc	postinc2,f,c
 15882  013A68  22DE               	addwfc	postinc2,f,c
 15883                           
 15884                           ;stkvar	_b @ sp[(-13)+-4]
 15885  013A6A  0EF2               	movlw	-14
 15886  013A6C  A0E3               	btfss	plusw1,0,c
 15887  013A6E  D027               	goto	l8261
 15888  013A70  0E01               	movlw	1
 15889  013A72  6E30               	movwf	(btemp+11)^0,c
 15890                           
 15891                           ;stkvar	_b @ sp[(-13)+-4]
 15892  013A74  50E1               	movf	fsr1l,w,c
 15893  013A76  0FEF               	addlw	-17
 15894  013A78  6ED9               	movwf	fsr2l,c
 15895  013A7A  50E2               	movf	fsr1h,w,c
 15896  013A7C  6EDA               	movwf	fsr2h,c
 15897  013A7E  0EFF               	movlw	255
 15898  013A80  22DA               	addwfc	fsr2h,f,c
 15899  013A82  2830               	incf	(btemp+11)^0,w,c
 15900  013A84  52DE               	movf	postinc2,f,c
 15901  013A86  D008               	goto	u7660
 15902  013A88                     u7665:
 15903  013A88  52DE               	movf	postinc2,f,c
 15904  013A8A  90D8               	bcf	status,0,c
 15905  013A8C  BEDC               	btfsc	preinc2,7,c
 15906  013A8E  80D8               	bsf	status,0,c
 15907  013A90  32DD               	rrcf	postdec2,f,c
 15908  013A92  32DD               	rrcf	postdec2,f,c
 15909  013A94  32DD               	rrcf	postdec2,f,c
 15910  013A96  32DE               	rrcf	postinc2,f,c
 15911  013A98                     u7660:
 15912  013A98  2EE8               	decfsz	wreg,f,c
 15913  013A9A  D7F6               	goto	u7665
 15914                           
 15915                           ;stkvar	_new_exp @ sp[(-13)+8]
 15916  013A9C  0EFB               	movlw	-5
 15917  013A9E  50E3               	movf	plusw1,w,c
 15918  013AA0  0F01               	addlw	1
 15919  013AA2  6E25               	movwf	btemp^0,c
 15920  013AA4  0EFB               	movlw	-5
 15921  013AA6  0060  F097  FFE3   	movff	btemp,plusw1
 15922  013AAC  6A25               	clrf	btemp^0,c
 15923  013AAE  0EFC               	movlw	-4
 15924  013AB0  50E3               	movf	plusw1,w,c
 15925  013AB2  2025               	addwfc	btemp^0,w,c
 15926  013AB4  6E25               	movwf	btemp^0,c
 15927  013AB6  0EFC               	movlw	-4
 15928  013AB8  0060  F097  FFE3   	movff	btemp,plusw1
 15929  013ABE                     l8261:
 15930                           
 15931                           ;stkvar	_new_exp @ sp[(-13)+8]
 15932  013ABE  0EFC               	movlw	-4
 15933  013AC0  BEE3               	btfsc	plusw1,7,c
 15934  013AC2  D01B               	goto	l8267
 15935  013AC4  0EFC               	movlw	-4
 15936  013AC6  50E3               	movf	plusw1,w,c
 15937  013AC8  E104               	bnz	u7670
 15938  013ACA  0EFB               	movlw	-5
 15939  013ACC  28E3               	incf	plusw1,w,c
 15940  013ACE  A0D8               	btfss	status,0,c
 15941  013AD0  D014               	goto	l8267
 15942  013AD2                     u7670:
 15943  013AD2  0EFF               	movlw	255
 15944  013AD4  6E2F               	movwf	(btemp+10)^0,c
 15945  013AD6  0E00               	movlw	0
 15946  013AD8  6E30               	movwf	(btemp+11)^0,c
 15947                           
 15948                           ;stkvar	_new_exp @ sp[(-13)+8]
 15949  013ADA  0EFB               	movlw	-5
 15950  013ADC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15951  013AE2  0EFC               	movlw	-4
 15952  013AE4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15953                           
 15954                           ;stkvar	_b @ sp[(-13)+-4]
 15955  013AEA  0EEF               	movlw	-17
 15956  013AEC  6AE3               	clrf	plusw1,c
 15957  013AEE  0EF0               	movlw	-16
 15958  013AF0  6AE3               	clrf	plusw1,c
 15959  013AF2  0EF1               	movlw	-15
 15960  013AF4  6AE3               	clrf	plusw1,c
 15961  013AF6  0EF2               	movlw	-14
 15962  013AF8  6AE3               	clrf	plusw1,c
 15963  013AFA                     l8267:
 15964                           
 15965                           ;stkvar	_new_exp @ sp[(-13)+8]
 15966  013AFA  0EFC               	movlw	-4
 15967  013AFC  BEE3               	btfsc	plusw1,7,c
 15968  013AFE  D007               	goto	u7680
 15969  013B00  0EFC               	movlw	-4
 15970  013B02  50E3               	movf	plusw1,w,c
 15971  013B04  E112               	bnz	l8273
 15972  013B06  0EFB               	movlw	-5
 15973  013B08  04E3               	decf	plusw1,w,c
 15974  013B0A  B0D8               	btfsc	status,0,c
 15975  013B0C  D00E               	goto	l8273
 15976  013B0E                     u7680:
 15977                           
 15978                           ;stkvar	_new_exp @ sp[(-13)+8]
 15979  013B0E  0EFB               	movlw	-5
 15980  013B10  6AE3               	clrf	plusw1,c
 15981  013B12  0EFC               	movlw	-4
 15982  013B14  6AE3               	clrf	plusw1,c
 15983                           
 15984                           ;stkvar	_b @ sp[(-13)+-4]
 15985  013B16  0EEF               	movlw	-17
 15986  013B18  6AE3               	clrf	plusw1,c
 15987  013B1A  0EF0               	movlw	-16
 15988  013B1C  6AE3               	clrf	plusw1,c
 15989  013B1E  0EF1               	movlw	-15
 15990  013B20  6AE3               	clrf	plusw1,c
 15991  013B22  0EF2               	movlw	-14
 15992  013B24  6AE3               	clrf	plusw1,c
 15993                           
 15994                           ;stkvar	_sign @ sp[(-13)+12]
 15995  013B26  0EFF               	movlw	-1
 15996  013B28  6AE3               	clrf	plusw1,c
 15997  013B2A                     l8273:
 15998                           
 15999                           ;stkvar	_new_exp @ sp[(-13)+8]
 16000                           ;stkvar	_bexp @ sp[(-13)+11]
 16001  013B2A  0EFB               	movlw	-5
 16002  013B2C  006F FF8C  F025    	movff	plusw1,btemp
 16003  013B32  0EFE               	movlw	-2
 16004  013B34  0060  F097  FFE3   	movff	btemp,plusw1
 16005                           
 16006                           ;stkvar	_bexp @ sp[(-13)+11]
 16007  013B3A  0EFE               	movlw	-2
 16008  013B3C  A0E3               	btfss	plusw1,0,c
 16009  013B3E  D009               	goto	l8279
 16010                           
 16011                           ;stkvar	_b @ sp[(-13)+-4]
 16012  013B40  0EF1               	movlw	241
 16013  013B42  24E1               	addwf	fsr1l,w,c
 16014  013B44  6ED9               	movwf	fsr2l,c
 16015  013B46  0EFF               	movlw	255
 16016  013B48  20E2               	addwfc	fsr1h,w,c
 16017  013B4A  6EDA               	movwf	fsr2h,c
 16018  013B4C  0E00               	movlw	0
 16019  013B4E  8EDB               	bsf	plusw2,7,c
 16020  013B50  D008               	goto	l8281
 16021  013B52                     l8279:
 16022                           
 16023                           ;stkvar	_b @ sp[(-13)+-4]
 16024  013B52  0EF1               	movlw	241
 16025  013B54  24E1               	addwf	fsr1l,w,c
 16026  013B56  6ED9               	movwf	fsr2l,c
 16027  013B58  0EFF               	movlw	255
 16028  013B5A  20E2               	addwfc	fsr1h,w,c
 16029  013B5C  6EDA               	movwf	fsr2h,c
 16030  013B5E  0E7F               	movlw	127
 16031  013B60  16DF               	andwf	indf2,f,c
 16032  013B62                     l8281:
 16033                           
 16034                           ;stkvar	_b @ sp[(-13)+-4]
 16035  013B62  0EF2               	movlw	242
 16036  013B64  24E1               	addwf	fsr1l,w,c
 16037  013B66  6ED9               	movwf	fsr2l,c
 16038  013B68  0EFF               	movlw	255
 16039  013B6A  20E2               	addwfc	fsr1h,w,c
 16040  013B6C  6EDA               	movwf	fsr2h,c
 16041                           
 16042                           ;stkvar	_bexp @ sp[(-13)+11]
 16043  013B6E  0EFE               	movlw	-2
 16044  013B70  006F FF8C  F030    	movff	plusw1,btemp+11
 16045  013B76  90D8               	bcf	status,0,c
 16046  013B78  3030               	rrcf	(btemp+11)^0,w,c
 16047  013B7A  6EDF               	movwf	indf2,c
 16048  013B7C  D644               	goto	l8179
 16049  013B7E                     l2806:
 16050                           
 16051                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16052  013B7E  0EEB               	movlw	235
 16053  013B80  26E1               	addwf	fsr1l,f,c
 16054  013B82  0EFF               	movlw	255
 16055  013B84  22E2               	addwfc	fsr1h,f,c
 16056  013B86  0012               	return		;funcret
 16057  013B88                     __end_of___fldiv:
 16058                           	opt callstack 0
 16059                           
 16060 ;; *************** function ___awmod *****************
 16061 ;; Defined at:
 16062 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16063 ;; Parameters:    Size  Location     Type
 16064 ;;  dividend        2  [STACK] int 
 16065 ;;  divisor         2  [STACK] int 
 16066 ;; Auto vars:     Size  Location     Type
 16067 ;;  sign            1  [STACK] unsigned char 
 16068 ;;  counter         1  [STACK] unsigned char 
 16069 ;; Return value:  Size  Location     Type
 16070 ;;                  2  [STACK] int 
 16071 ;; Registers used:
 16072 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16073 ;; Tracked objects:
 16074 ;;		On entry : 0/0
 16075 ;;		On exit  : 0/0
 16076 ;;		Unchanged: 0/0
 16077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16082 ;;Total ram usage:        0 bytes
 16083 ;; Hardware stack levels used:    1
 16084 ;; Hardware stack levels required when called:    7
 16085 ;; This function calls:
 16086 ;;		Nothing
 16087 ;; This function is called by:
 16088 ;;		_efgtoa
 16089 ;; This function uses a reentrant model
 16090 ;;
 16091                           
 16092                           	psect	text59
 16093  0170B4                     __ptext59:
 16094                           	opt callstack 0
 16095  0170B4                     ___awmod:
 16096                           	opt callstack 0
 16097                           
 16098                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16099  0170B4  52E6               	movf	postinc1,f,c
 16100  0170B6  52E6               	movf	postinc1,f,c
 16101                           
 16102                           ;stkvar	_sign @ sp[(-2)+0]
 16103                           
 16104                           ;incstack = 0
 16105  0170B8  0EFE               	movlw	-2
 16106  0170BA  6AE3               	clrf	plusw1,c
 16107                           
 16108                           ;stkvar	_dividend @ sp[(-2)+-2]
 16109  0170BC  0EFD               	movlw	-3
 16110  0170BE  AEE3               	btfss	plusw1,7,c
 16111  0170C0  D009               	goto	l6891
 16112                           
 16113                           ;stkvar	_dividend @ sp[(-2)+-2]
 16114                           ;stkvar	_dividend @ sp[(-2)+-2]
 16115  0170C2  0EFC               	movlw	-4
 16116  0170C4  6CE3               	negf	plusw1,c
 16117  0170C6  0EFD               	movlw	-3
 16118  0170C8  1EE3               	comf	plusw1,f,c
 16119  0170CA  B0D8               	btfsc	status,0,c
 16120  0170CC  2AE3               	incf	plusw1,f,c
 16121                           
 16122                           ;stkvar	_sign @ sp[(-2)+0]
 16123  0170CE  0EFE               	movlw	-2
 16124  0170D0  6AE3               	clrf	plusw1,c
 16125  0170D2  2AE3               	incf	plusw1,f,c
 16126  0170D4                     l6891:
 16127                           
 16128                           ;stkvar	_divisor @ sp[(-2)+-4]
 16129  0170D4  0EFB               	movlw	-5
 16130  0170D6  AEE3               	btfss	plusw1,7,c
 16131  0170D8  D006               	goto	l6895
 16132                           
 16133                           ;stkvar	_divisor @ sp[(-2)+-4]
 16134                           ;stkvar	_divisor @ sp[(-2)+-4]
 16135  0170DA  0EFA               	movlw	-6
 16136  0170DC  6CE3               	negf	plusw1,c
 16137  0170DE  0EFB               	movlw	-5
 16138  0170E0  1EE3               	comf	plusw1,f,c
 16139  0170E2  B0D8               	btfsc	status,0,c
 16140  0170E4  2AE3               	incf	plusw1,f,c
 16141  0170E6                     l6895:
 16142                           
 16143                           ;stkvar	_divisor @ sp[(-2)+-4]
 16144  0170E6  0EFA               	movlw	-6
 16145  0170E8  006F FF8C  F025    	movff	plusw1,btemp
 16146  0170EE  0EFB               	movlw	-5
 16147  0170F0  50E3               	movf	plusw1,w,c
 16148  0170F2  1025               	iorwf	btemp^0,w,c
 16149  0170F4  B4D8               	btfsc	status,2,c
 16150  0170F6  D053               	goto	u5460
 16151                           
 16152                           ;stkvar	_counter @ sp[(-2)+1]
 16153  0170F8  0EFF               	movlw	-1
 16154  0170FA  6AE3               	clrf	plusw1,c
 16155  0170FC  D012               	goto	L15
 16156  0170FE                     l6899:
 16157                           
 16158                           ;stkvar	_divisor @ sp[(-2)+-4]
 16159  0170FE  0EFA               	movlw	-6
 16160  017100  50E3               	movf	plusw1,w,c
 16161  017102  90D8               	bcf	status,0,c
 16162  017104  34E8               	rlcf	wreg,w,c
 16163  017106  6E25               	movwf	btemp^0,c
 16164  017108  0EFA               	movlw	-6
 16165  01710A  0060  F097  FFE3   	movff	btemp,plusw1
 16166  017110  0EFB               	movlw	-5
 16167  017112  50E3               	movf	plusw1,w,c
 16168  017114  34E8               	rlcf	wreg,w,c
 16169  017116  6E25               	movwf	btemp^0,c
 16170  017118  0EFB               	movlw	-5
 16171  01711A  0060  F097  FFE3   	movff	btemp,plusw1
 16172                           
 16173                           ;stkvar	_counter @ sp[(-2)+1]
 16174  017120  0EFF               	movlw	-1
 16175  017122                     L15:
 16176  017122  2AE3               	incf	plusw1,f,c
 16177                           
 16178                           ;stkvar	_divisor @ sp[(-2)+-4]
 16179  017124  0EFB               	movlw	-5
 16180  017126  AEE3               	btfss	plusw1,7,c
 16181  017128  D7EA               	goto	l6899
 16182  01712A                     u5440:
 16183                           
 16184                           ;stkvar	_divisor @ sp[(-2)+-4]
 16185  01712A  0EFA               	movlw	-6
 16186  01712C  006F FF8C  F02F    	movff	plusw1,btemp+10
 16187  017132  0EFB               	movlw	-5
 16188  017134  006F FF8C  F030    	movff	plusw1,btemp+11
 16189                           
 16190                           ;stkvar	_dividend @ sp[(-2)+-2]
 16191  01713A  0EFC               	movlw	-4
 16192  01713C  006F FF8C  F02D    	movff	plusw1,btemp+8
 16193  017142  0EFD               	movlw	-3
 16194  017144  006F FF8C  F02E    	movff	plusw1,btemp+9
 16195  01714A  502F               	movf	(btemp+10)^0,w,c
 16196  01714C  5C2D               	subwf	(btemp+8)^0,w,c
 16197  01714E  5030               	movf	(btemp+11)^0,w,c
 16198  017150  582E               	subwfb	(btemp+9)^0,w,c
 16199  017152  A0D8               	btfss	status,0,c
 16200  017154  D014               	goto	l6909
 16201                           
 16202                           ;stkvar	_divisor @ sp[(-2)+-4]
 16203                           ;stkvar	_dividend @ sp[(-2)+-2]
 16204  017156  0EFC               	movlw	-4
 16205  017158  50E3               	movf	plusw1,w,c
 16206  01715A  6E25               	movwf	btemp^0,c
 16207  01715C  0EFA               	movlw	-6
 16208  01715E  50E3               	movf	plusw1,w,c
 16209  017160  5E25               	subwf	btemp^0,f,c
 16210  017162  0EFC               	movlw	-4
 16211  017164  0060  F097  FFE3   	movff	btemp,plusw1
 16212  01716A  0EFD               	movlw	-3
 16213  01716C  50E3               	movf	plusw1,w,c
 16214  01716E  6E25               	movwf	btemp^0,c
 16215  017170  0EFB               	movlw	-5
 16216  017172  50E3               	movf	plusw1,w,c
 16217  017174  5A25               	subwfb	btemp^0,f,c
 16218  017176  0EFD               	movlw	-3
 16219  017178  0060  F097  FFE3   	movff	btemp,plusw1
 16220  01717E                     l6909:
 16221                           
 16222                           ;stkvar	_divisor @ sp[(-2)+-4]
 16223  01717E  90D8               	bcf	status,0,c
 16224  017180  0EFB               	movlw	-5
 16225  017182  32E3               	rrcf	plusw1,f,c
 16226  017184  0EFA               	movlw	-6
 16227  017186  32E3               	rrcf	plusw1,f,c
 16228                           
 16229                           ;stkvar	_counter @ sp[(-2)+1]
 16230  017188  0EFF               	movlw	-1
 16231  01718A  50E3               	movf	plusw1,w,c
 16232  01718C  6E25               	movwf	btemp^0,c
 16233  01718E  0E01               	movlw	1
 16234  017190  5E25               	subwf	btemp^0,f,c
 16235  017192  0EFF               	movlw	-1
 16236  017194  0060  F097  FFE3   	movff	btemp,plusw1
 16237  01719A  A4D8               	btfss	status,2,c
 16238  01719C  D7C6               	goto	u5440
 16239  01719E                     u5460:
 16240                           
 16241                           ;stkvar	_sign @ sp[(-2)+0]
 16242  01719E  0EFE               	movlw	-2
 16243  0171A0  50E3               	movf	plusw1,w,c
 16244  0171A2  B4D8               	btfsc	status,2,c
 16245  0171A4  D006               	goto	l6917
 16246                           
 16247                           ;stkvar	_dividend @ sp[(-2)+-2]
 16248                           ;stkvar	_dividend @ sp[(-2)+-2]
 16249  0171A6  0EFC               	movlw	-4
 16250  0171A8  6CE3               	negf	plusw1,c
 16251  0171AA  0EFD               	movlw	-3
 16252  0171AC  1EE3               	comf	plusw1,f,c
 16253  0171AE  B0D8               	btfsc	status,0,c
 16254  0171B0  2AE3               	incf	plusw1,f,c
 16255  0171B2                     l6917:
 16256                           
 16257                           ;stkvar	_dividend @ sp[(-2)+-2]
 16258  0171B2  0EFC               	movlw	-4
 16259  0171B4  006F FF8C  F025    	movff	plusw1,btemp
 16260  0171BA  0EFD               	movlw	-3
 16261  0171BC  006F FF8C  F026    	movff	plusw1,btemp+1
 16262                           
 16263                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16264  0171C2  0EFA               	movlw	250
 16265  0171C4  26E1               	addwf	fsr1l,f,c
 16266  0171C6  0EFF               	movlw	255
 16267  0171C8  22E2               	addwfc	fsr1h,f,c
 16268  0171CA  0012               	return		;funcret
 16269  0171CC                     __end_of___awmod:
 16270                           	opt callstack 0
 16271                           
 16272 ;; *************** function ___awdiv *****************
 16273 ;; Defined at:
 16274 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16275 ;; Parameters:    Size  Location     Type
 16276 ;;  dividend        2  [STACK] int 
 16277 ;;  divisor         2  [STACK] int 
 16278 ;; Auto vars:     Size  Location     Type
 16279 ;;  quotient        2  [STACK] int 
 16280 ;;  sign            1  [STACK] unsigned char 
 16281 ;;  counter         1  [STACK] unsigned char 
 16282 ;; Return value:  Size  Location     Type
 16283 ;;                  2  [STACK] int 
 16284 ;; Registers used:
 16285 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16286 ;; Tracked objects:
 16287 ;;		On entry : 0/0
 16288 ;;		On exit  : 0/0
 16289 ;;		Unchanged: 0/0
 16290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16295 ;;Total ram usage:        0 bytes
 16296 ;; Hardware stack levels used:    1
 16297 ;; Hardware stack levels required when called:    7
 16298 ;; This function calls:
 16299 ;;		Nothing
 16300 ;; This function is called by:
 16301 ;;		_efgtoa
 16302 ;; This function uses a reentrant model
 16303 ;;
 16304                           
 16305                           	psect	text60
 16306  016BEC                     __ptext60:
 16307                           	opt callstack 0
 16308  016BEC                     ___awdiv:
 16309                           	opt callstack 0
 16310                           
 16311                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16312  016BEC  52E6               	movf	postinc1,f,c
 16313  016BEE  52E6               	movf	postinc1,f,c
 16314  016BF0  52E6               	movf	postinc1,f,c
 16315  016BF2  52E6               	movf	postinc1,f,c
 16316                           
 16317                           ;stkvar	_sign @ sp[(-4)+2]
 16318                           
 16319                           ;incstack = 0
 16320  016BF4  0EFE               	movlw	-2
 16321  016BF6  6AE3               	clrf	plusw1,c
 16322                           
 16323                           ;stkvar	_divisor @ sp[(-4)+-4]
 16324  016BF8  0EF9               	movlw	-7
 16325  016BFA  AEE3               	btfss	plusw1,7,c
 16326  016BFC  D009               	goto	l6845
 16327                           
 16328                           ;stkvar	_divisor @ sp[(-4)+-4]
 16329                           ;stkvar	_divisor @ sp[(-4)+-4]
 16330  016BFE  0EF8               	movlw	-8
 16331  016C00  6CE3               	negf	plusw1,c
 16332  016C02  0EF9               	movlw	-7
 16333  016C04  1EE3               	comf	plusw1,f,c
 16334  016C06  B0D8               	btfsc	status,0,c
 16335  016C08  2AE3               	incf	plusw1,f,c
 16336                           
 16337                           ;stkvar	_sign @ sp[(-4)+2]
 16338  016C0A  0EFE               	movlw	-2
 16339  016C0C  6AE3               	clrf	plusw1,c
 16340  016C0E  2AE3               	incf	plusw1,f,c
 16341  016C10                     l6845:
 16342                           
 16343                           ;stkvar	_dividend @ sp[(-4)+-2]
 16344  016C10  0EFB               	movlw	-5
 16345  016C12  AEE3               	btfss	plusw1,7,c
 16346  016C14  D008               	goto	l6851
 16347                           
 16348                           ;stkvar	_dividend @ sp[(-4)+-2]
 16349                           ;stkvar	_dividend @ sp[(-4)+-2]
 16350  016C16  0EFA               	movlw	-6
 16351  016C18  6CE3               	negf	plusw1,c
 16352  016C1A  0EFB               	movlw	-5
 16353  016C1C  1EE3               	comf	plusw1,f,c
 16354  016C1E  B0D8               	btfsc	status,0,c
 16355  016C20  2AE3               	incf	plusw1,f,c
 16356                           
 16357                           ;stkvar	_sign @ sp[(-4)+2]
 16358  016C22  0EFE               	movlw	-2
 16359  016C24  70E3               	btg	plusw1,0,c
 16360  016C26                     l6851:
 16361                           
 16362                           ;stkvar	_quotient @ sp[(-4)+0]
 16363  016C26  0EFC               	movlw	-4
 16364  016C28  6AE3               	clrf	plusw1,c
 16365  016C2A  0EFD               	movlw	-3
 16366  016C2C  6AE3               	clrf	plusw1,c
 16367                           
 16368                           ;stkvar	_divisor @ sp[(-4)+-4]
 16369  016C2E  0EF8               	movlw	-8
 16370  016C30  006F FF8C  F025    	movff	plusw1,btemp
 16371  016C36  0EF9               	movlw	-7
 16372  016C38  50E3               	movf	plusw1,w,c
 16373  016C3A  1025               	iorwf	btemp^0,w,c
 16374  016C3C  B4D8               	btfsc	status,2,c
 16375  016C3E  D066               	goto	u5390
 16376                           
 16377                           ;stkvar	_counter @ sp[(-4)+3]
 16378  016C40  0EFF               	movlw	-1
 16379  016C42  6AE3               	clrf	plusw1,c
 16380  016C44  D012               	goto	L16
 16381  016C46                     l6857:
 16382                           
 16383                           ;stkvar	_divisor @ sp[(-4)+-4]
 16384  016C46  0EF8               	movlw	-8
 16385  016C48  50E3               	movf	plusw1,w,c
 16386  016C4A  90D8               	bcf	status,0,c
 16387  016C4C  34E8               	rlcf	wreg,w,c
 16388  016C4E  6E25               	movwf	btemp^0,c
 16389  016C50  0EF8               	movlw	-8
 16390  016C52  0060  F097  FFE3   	movff	btemp,plusw1
 16391  016C58  0EF9               	movlw	-7
 16392  016C5A  50E3               	movf	plusw1,w,c
 16393  016C5C  34E8               	rlcf	wreg,w,c
 16394  016C5E  6E25               	movwf	btemp^0,c
 16395  016C60  0EF9               	movlw	-7
 16396  016C62  0060  F097  FFE3   	movff	btemp,plusw1
 16397                           
 16398                           ;stkvar	_counter @ sp[(-4)+3]
 16399  016C68  0EFF               	movlw	-1
 16400  016C6A                     L16:
 16401  016C6A  2AE3               	incf	plusw1,f,c
 16402                           
 16403                           ;stkvar	_divisor @ sp[(-4)+-4]
 16404  016C6C  0EF9               	movlw	-7
 16405  016C6E  AEE3               	btfss	plusw1,7,c
 16406  016C70  D7EA               	goto	l6857
 16407  016C72                     u5370:
 16408                           
 16409                           ;stkvar	_quotient @ sp[(-4)+0]
 16410  016C72  0EFC               	movlw	-4
 16411  016C74  50E3               	movf	plusw1,w,c
 16412  016C76  90D8               	bcf	status,0,c
 16413  016C78  34E8               	rlcf	wreg,w,c
 16414  016C7A  6E25               	movwf	btemp^0,c
 16415  016C7C  0EFC               	movlw	-4
 16416  016C7E  0060  F097  FFE3   	movff	btemp,plusw1
 16417  016C84  0EFD               	movlw	-3
 16418  016C86  50E3               	movf	plusw1,w,c
 16419  016C88  34E8               	rlcf	wreg,w,c
 16420  016C8A  6E25               	movwf	btemp^0,c
 16421  016C8C  0EFD               	movlw	-3
 16422  016C8E  0060  F097  FFE3   	movff	btemp,plusw1
 16423                           
 16424                           ;stkvar	_divisor @ sp[(-4)+-4]
 16425  016C94  0EF8               	movlw	-8
 16426  016C96  006F FF8C  F02F    	movff	plusw1,btemp+10
 16427  016C9C  0EF9               	movlw	-7
 16428  016C9E  006F FF8C  F030    	movff	plusw1,btemp+11
 16429                           
 16430                           ;stkvar	_dividend @ sp[(-4)+-2]
 16431  016CA4  0EFA               	movlw	-6
 16432  016CA6  006F FF8C  F02D    	movff	plusw1,btemp+8
 16433  016CAC  0EFB               	movlw	-5
 16434  016CAE  006F FF8C  F02E    	movff	plusw1,btemp+9
 16435  016CB4  502F               	movf	(btemp+10)^0,w,c
 16436  016CB6  5C2D               	subwf	(btemp+8)^0,w,c
 16437  016CB8  5030               	movf	(btemp+11)^0,w,c
 16438  016CBA  582E               	subwfb	(btemp+9)^0,w,c
 16439  016CBC  A0D8               	btfss	status,0,c
 16440  016CBE  D016               	goto	l6871
 16441                           
 16442                           ;stkvar	_divisor @ sp[(-4)+-4]
 16443                           ;stkvar	_dividend @ sp[(-4)+-2]
 16444  016CC0  0EFA               	movlw	-6
 16445  016CC2  50E3               	movf	plusw1,w,c
 16446  016CC4  6E25               	movwf	btemp^0,c
 16447  016CC6  0EF8               	movlw	-8
 16448  016CC8  50E3               	movf	plusw1,w,c
 16449  016CCA  5E25               	subwf	btemp^0,f,c
 16450  016CCC  0EFA               	movlw	-6
 16451  016CCE  0060  F097  FFE3   	movff	btemp,plusw1
 16452  016CD4  0EFB               	movlw	-5
 16453  016CD6  50E3               	movf	plusw1,w,c
 16454  016CD8  6E25               	movwf	btemp^0,c
 16455  016CDA  0EF9               	movlw	-7
 16456  016CDC  50E3               	movf	plusw1,w,c
 16457  016CDE  5A25               	subwfb	btemp^0,f,c
 16458  016CE0  0EFB               	movlw	-5
 16459  016CE2  0060  F097  FFE3   	movff	btemp,plusw1
 16460                           
 16461                           ;stkvar	_quotient @ sp[(-4)+0]
 16462  016CE8  0EFC               	movlw	-4
 16463  016CEA  80E3               	bsf	plusw1,0,c
 16464  016CEC                     l6871:
 16465                           
 16466                           ;stkvar	_divisor @ sp[(-4)+-4]
 16467  016CEC  90D8               	bcf	status,0,c
 16468  016CEE  0EF9               	movlw	-7
 16469  016CF0  32E3               	rrcf	plusw1,f,c
 16470  016CF2  0EF8               	movlw	-8
 16471  016CF4  32E3               	rrcf	plusw1,f,c
 16472                           
 16473                           ;stkvar	_counter @ sp[(-4)+3]
 16474  016CF6  0EFF               	movlw	-1
 16475  016CF8  50E3               	movf	plusw1,w,c
 16476  016CFA  6E25               	movwf	btemp^0,c
 16477  016CFC  0E01               	movlw	1
 16478  016CFE  5E25               	subwf	btemp^0,f,c
 16479  016D00  0EFF               	movlw	-1
 16480  016D02  0060  F097  FFE3   	movff	btemp,plusw1
 16481  016D08  A4D8               	btfss	status,2,c
 16482  016D0A  D7B3               	goto	u5370
 16483  016D0C                     u5390:
 16484                           
 16485                           ;stkvar	_sign @ sp[(-4)+2]
 16486  016D0C  0EFE               	movlw	-2
 16487  016D0E  50E3               	movf	plusw1,w,c
 16488  016D10  B4D8               	btfsc	status,2,c
 16489  016D12  D006               	goto	l6879
 16490                           
 16491                           ;stkvar	_quotient @ sp[(-4)+0]
 16492                           ;stkvar	_quotient @ sp[(-4)+0]
 16493  016D14  0EFC               	movlw	-4
 16494  016D16  6CE3               	negf	plusw1,c
 16495  016D18  0EFD               	movlw	-3
 16496  016D1A  1EE3               	comf	plusw1,f,c
 16497  016D1C  B0D8               	btfsc	status,0,c
 16498  016D1E  2AE3               	incf	plusw1,f,c
 16499  016D20                     l6879:
 16500                           
 16501                           ;stkvar	_quotient @ sp[(-4)+0]
 16502  016D20  0EFC               	movlw	-4
 16503  016D22  006F FF8C  F025    	movff	plusw1,btemp
 16504  016D28  0EFD               	movlw	-3
 16505  016D2A  006F FF8C  F026    	movff	plusw1,btemp+1
 16506                           
 16507                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16508  016D30  0EF8               	movlw	248
 16509  016D32  26E1               	addwf	fsr1l,f,c
 16510  016D34  0EFF               	movlw	255
 16511  016D36  22E2               	addwfc	fsr1h,f,c
 16512  016D38  0012               	return		;funcret
 16513  016D3A                     __end_of___awdiv:
 16514                           	opt callstack 0
 16515                           
 16516 ;; *************** function _dtoa *****************
 16517 ;; Defined at:
 16518 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16519 ;; Parameters:    Size  Location     Type
 16520 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16521 ;;		 -> f(6), NULL(0), 
 16522 ;;  d               8  [STACK] long long 
 16523 ;; Auto vars:     Size  Location     Type
 16524 ;;  n               8  [STACK] long long 
 16525 ;;  i               2  [STACK] int 
 16526 ;;  s               2  [STACK] int 
 16527 ;;  w               2  [STACK] int 
 16528 ;;  p               2  [STACK] int 
 16529 ;; Return value:  Size  Location     Type
 16530 ;;                  2  [STACK] int 
 16531 ;; Registers used:
 16532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16533 ;; Tracked objects:
 16534 ;;		On entry : 0/0
 16535 ;;		On exit  : 0/0
 16536 ;;		Unchanged: 0/0
 16537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16542 ;;Total ram usage:        0 bytes
 16543 ;; Hardware stack levels used:    1
 16544 ;; Hardware stack levels required when called:   12
 16545 ;; This function calls:
 16546 ;;		___aodiv
 16547 ;;		___aomod
 16548 ;;		_abs
 16549 ;;		_pad
 16550 ;; This function is called by:
 16551 ;;		_vfpfcnvrt
 16552 ;; This function uses a reentrant model
 16553 ;;
 16554                           
 16555                           	psect	text61
 16556  014034                     __ptext61:
 16557                           	opt callstack 0
 16558  014034                     _dtoa:
 16559                           	opt callstack 0
 16560                           
 16561                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16562  014034  0E12               	movlw	18
 16563  014036  26E1               	addwf	fsr1l,f,c
 16564  014038  0E00               	movlw	0
 16565  01403A  22E2               	addwfc	fsr1h,f,c
 16566                           
 16567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16568                           ;stkvar	_d @ sp[(-18)+-10]
 16569                           
 16570                           ;incstack = 0
 16571  01403C  0EE4               	movlw	228
 16572  01403E  24E1               	addwf	fsr1l,w,c
 16573  014040  6ED9               	movwf	fsr2l,c
 16574  014042  0EFF               	movlw	255
 16575  014044  20E2               	addwfc	fsr1h,w,c
 16576  014046  6EDA               	movwf	fsr2h,c
 16577                           
 16578                           ;stkvar	_n @ sp[(-18)+2]
 16579  014048  0E08               	movlw	8
 16580  01404A  6E25               	movwf	btemp^0,c
 16581  01404C  0EF0               	movlw	-16
 16582  01404E                     us939999:
 16583  01404E  006F FF7B FFE3     	movff	postinc2,plusw1
 16584  014054  28E8               	incf	wreg,w,c
 16585  014056  2E25               	decfsz	btemp^0,f,c
 16586  014058  D7FA               	bra	us939999
 16587                           
 16588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16589                           ;stkvar	_n @ sp[(-18)+2]
 16590  01405A  0EF7               	movlw	-9
 16591  01405C  AEE3               	btfss	plusw1,7,c
 16592  01405E  D002               	goto	u9400
 16593  014060  0E01               	movlw	1
 16594  014062  D001               	goto	u9410
 16595  014064                     u9400:
 16596  014064  0E00               	movlw	0
 16597  014066                     u9410:
 16598  014066  6E2F               	movwf	(btemp+10)^0,c
 16599  014068  6A30               	clrf	(btemp+11)^0,c
 16600                           
 16601                           ;stkvar	_s @ sp[(-18)+12]
 16602  01406A  0EFA               	movlw	-6
 16603  01406C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16604  014072  0EFB               	movlw	-5
 16605  014074  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16606                           
 16607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16608                           ;stkvar	_s @ sp[(-18)+12]
 16609  01407A  0EFA               	movlw	-6
 16610  01407C  006F FF8C  F025    	movff	plusw1,btemp
 16611  014082  0EFB               	movlw	-5
 16612  014084  50E3               	movf	plusw1,w,c
 16613  014086  1025               	iorwf	btemp^0,w,c
 16614  014088  B4D8               	btfsc	status,2,c
 16615  01408A  D025               	goto	u9430
 16616                           
 16617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16618                           ;stkvar	_n @ sp[(-18)+2]
 16619                           ;stkvar	_n @ sp[(-18)+2]
 16620  01408C  0EF0               	movlw	-16
 16621  01408E  6CE3               	negf	plusw1,c
 16622  014090  0EF1               	movlw	-15
 16623  014092  1EE3               	comf	plusw1,f,c
 16624  014094  0EF2               	movlw	-14
 16625  014096  1EE3               	comf	plusw1,f,c
 16626  014098  0EF3               	movlw	-13
 16627  01409A  1EE3               	comf	plusw1,f,c
 16628  01409C  0EF4               	movlw	-12
 16629  01409E  1EE3               	comf	plusw1,f,c
 16630  0140A0  0EF5               	movlw	-11
 16631  0140A2  1EE3               	comf	plusw1,f,c
 16632  0140A4  0EF6               	movlw	-10
 16633  0140A6  1EE3               	comf	plusw1,f,c
 16634  0140A8  0EF7               	movlw	-9
 16635  0140AA  1EE3               	comf	plusw1,f,c
 16636  0140AC  E314               	bnc	u9430
 16637  0140AE  0EF1               	movlw	-15
 16638  0140B0  2AE3               	incf	plusw1,f,c
 16639  0140B2  E311               	bnc	u9430
 16640  0140B4  0EF2               	movlw	-14
 16641  0140B6  2AE3               	incf	plusw1,f,c
 16642  0140B8  E30E               	bnc	u9430
 16643  0140BA  0EF3               	movlw	-13
 16644  0140BC  2AE3               	incf	plusw1,f,c
 16645  0140BE  E30B               	bnc	u9430
 16646  0140C0  0EF4               	movlw	-12
 16647  0140C2  2AE3               	incf	plusw1,f,c
 16648  0140C4  E308               	bnc	u9430
 16649  0140C6  0EF5               	movlw	-11
 16650  0140C8  2AE3               	incf	plusw1,f,c
 16651  0140CA  E305               	bnc	u9430
 16652  0140CC  0EF6               	movlw	-10
 16653  0140CE  2AE3               	incf	plusw1,f,c
 16654  0140D0  E302               	bnc	u9430
 16655  0140D2  0EF7               	movlw	-9
 16656  0140D4  2AE3               	incf	plusw1,f,c
 16657  0140D6                     u9430:
 16658                           
 16659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16660  0140D6  AE0D               	btfss	(_prec+1)^0,7,c
 16661                           
 16662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16663  0140D8  920E               	bcf	_flags^0,1,c
 16664                           
 16665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16666  0140DA  BE0D               	btfsc	(_prec+1)^0,7,c
 16667  0140DC  D005               	goto	u9450
 16668  0140DE  500D               	movf	(_prec+1)^0,w,c
 16669  0140E0  E110               	bnz	l10125
 16670  0140E2  040C               	decf	_prec^0,w,c
 16671  0140E4  B0D8               	btfsc	status,0,c
 16672  0140E6  D00D               	goto	l10125
 16673  0140E8                     u9450:
 16674  0140E8  0E01               	movlw	1
 16675  0140EA  6E2F               	movwf	(btemp+10)^0,c
 16676  0140EC  0E00               	movlw	0
 16677  0140EE  6E30               	movwf	(btemp+11)^0,c
 16678                           
 16679                           ;stkvar	_p @ sp[(-18)+16]
 16680  0140F0  0EFE               	movlw	-2
 16681  0140F2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16682  0140F8  0EFF               	movlw	-1
 16683  0140FA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16684  014100  D008               	goto	l2010
 16685  014102                     l10125:
 16686                           
 16687                           ;stkvar	_p @ sp[(-18)+16]
 16688  014102  0EFE               	movlw	-2
 16689  014104  0060  F033  FFE3   	movff	_prec,plusw1
 16690  01410A  0EFF               	movlw	-1
 16691  01410C  0060  F037  FFE3   	movff	_prec+1,plusw1
 16692  014112                     l2010:
 16693                           
 16694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16695                           ;stkvar	_w @ sp[(-18)+14]
 16696  014112  0EFC               	movlw	-4
 16697  014114  0060  F02B  FFE3   	movff	_width,plusw1
 16698  01411A  0EFD               	movlw	-3
 16699  01411C  0060  F02F  FFE3   	movff	_width+1,plusw1
 16700                           
 16701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16702                           ;stkvar	_s @ sp[(-18)+12]
 16703  014122  0EFA               	movlw	-6
 16704  014124  006F FF8C  F025    	movff	plusw1,btemp
 16705  01412A  0EFB               	movlw	-5
 16706  01412C  50E3               	movf	plusw1,w,c
 16707  01412E  1025               	iorwf	btemp^0,w,c
 16708  014130  A4D8               	btfss	status,2,c
 16709  014132  D002               	goto	u9470
 16710  014134  A40E               	btfss	_flags^0,2,c
 16711  014136  D00A               	goto	l10133
 16712  014138                     u9470:
 16713                           
 16714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16715                           ;stkvar	_w @ sp[(-18)+14]
 16716  014138  50E1               	movf	fsr1l,w,c
 16717  01413A  0FFC               	addlw	-4
 16718  01413C  6ED9               	movwf	fsr2l,c
 16719  01413E  50E2               	movf	fsr1h,w,c
 16720  014140  6EDA               	movwf	fsr2h,c
 16721  014142  0EFF               	movlw	255
 16722  014144  22DA               	addwfc	fsr2h,f,c
 16723  014146  06DE               	decf	postinc2,f,c
 16724  014148  0E00               	movlw	0
 16725  01414A  5ADD               	subwfb	postdec2,f,c
 16726  01414C                     l10133:
 16727                           
 16728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16729  01414C  0E4F               	movlw	79
 16730  01414E  6E2F               	movwf	(btemp+10)^0,c
 16731  014150  0E00               	movlw	0
 16732  014152  6E30               	movwf	(btemp+11)^0,c
 16733                           
 16734                           ;stkvar	_i @ sp[(-18)+10]
 16735  014154  0EF8               	movlw	-8
 16736  014156  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16737  01415C  0EF9               	movlw	-7
 16738  01415E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16739                           
 16740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16741  014164  0103               	movlb	3	; () banked
 16742  014166  6BE3               	clrf	(_dbuf+79)& (0+255),b
 16743                           
 16744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16745  014168  D109               	goto	l10147
 16746  01416A                     l10137:
 16747                           
 16748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16749                           ;stkvar	_i @ sp[(-18)+10]
 16750  01416A  50E1               	movf	fsr1l,w,c
 16751  01416C  0FF8               	addlw	-8
 16752  01416E  6ED9               	movwf	fsr2l,c
 16753  014170  50E2               	movf	fsr1h,w,c
 16754  014172  6EDA               	movwf	fsr2h,c
 16755  014174  0EFF               	movlw	255
 16756  014176  22DA               	addwfc	fsr2h,f,c
 16757  014178  06DE               	decf	postinc2,f,c
 16758  01417A  0E00               	movlw	0
 16759  01417C  5ADD               	subwfb	postdec2,f,c
 16760                           
 16761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16762  01417E  0E0A               	movlw	10
 16763  014180  6EE6               	movwf	postinc1,c
 16764  014182  0E00               	movlw	0
 16765  014184  6EE6               	movwf	postinc1,c
 16766  014186  0E00               	movlw	0
 16767  014188  6EE6               	movwf	postinc1,c
 16768  01418A  0E00               	movlw	0
 16769  01418C  6EE6               	movwf	postinc1,c
 16770  01418E  0E00               	movlw	0
 16771  014190  6EE6               	movwf	postinc1,c
 16772  014192  0E00               	movlw	0
 16773  014194  6EE6               	movwf	postinc1,c
 16774  014196  0E00               	movlw	0
 16775  014198  6EE6               	movwf	postinc1,c
 16776  01419A  0E00               	movlw	0
 16777  01419C  6EE6               	movwf	postinc1,c
 16778                           
 16779                           ;stkvar	_n @ sp[(-26)+2]
 16780  01419E  50E1               	movf	fsr1l,w,c
 16781  0141A0  0FE8               	addlw	-24
 16782  0141A2  6ED9               	movwf	fsr2l,c
 16783  0141A4  50E2               	movf	fsr1h,w,c
 16784  0141A6  6EDA               	movwf	fsr2h,c
 16785  0141A8  0EFF               	movlw	255
 16786  0141AA  22DA               	addwfc	fsr2h,f,c
 16787  0141AC  006F FF7B FFE6     	movff	postinc2,postinc1
 16788  0141B2  006F FF7B FFE6     	movff	postinc2,postinc1
 16789  0141B8  006F FF7B FFE6     	movff	postinc2,postinc1
 16790  0141BE  006F FF7B FFE6     	movff	postinc2,postinc1
 16791  0141C4  006F FF7B FFE6     	movff	postinc2,postinc1
 16792  0141CA  006F FF7B FFE6     	movff	postinc2,postinc1
 16793  0141D0  006F FF7B FFE6     	movff	postinc2,postinc1
 16794  0141D6  006F FF7B FFE6     	movff	postinc2,postinc1
 16795  0141DC  ECD2  F0AE         	call	___aomod	;wreg free
 16796  0141E0  52E5               	movf	postdec1,f,c
 16797  0141E2  006F FF9C  F03C    	movff	indf1,btemp+23
 16798  0141E8  52E5               	movf	postdec1,f,c
 16799  0141EA  006F FF9C  F03B    	movff	indf1,btemp+22
 16800  0141F0  52E5               	movf	postdec1,f,c
 16801  0141F2  006F FF9C  F03A    	movff	indf1,btemp+21
 16802  0141F8  52E5               	movf	postdec1,f,c
 16803  0141FA  006F FF9C  F039    	movff	indf1,btemp+20
 16804  014200  52E5               	movf	postdec1,f,c
 16805  014202  006F FF9C  F038    	movff	indf1,btemp+19
 16806  014208  52E5               	movf	postdec1,f,c
 16807  01420A  006F FF9C  F037    	movff	indf1,btemp+18
 16808  014210  52E5               	movf	postdec1,f,c
 16809  014212  006F FF9C  F036    	movff	indf1,btemp+17
 16810  014218  52E5               	movf	postdec1,f,c
 16811  01421A  006F FF9C  F035    	movff	indf1,btemp+16
 16812  014220  0EF8               	movlw	248
 16813  014222  26E1               	addwf	fsr1l,f,c
 16814  014224  0EFF               	movlw	255
 16815  014226  22E2               	addwfc	fsr1h,f,c
 16816  014228  0060  F0D4  F02F   	movff	btemp+16,btemp+10
 16817  01422E  0060  F0D8  F030   	movff	btemp+17,btemp+11
 16818  014234  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 16819  01423A  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 16820  014240  ECC7  F0C4         	call	_abs	;wreg free
 16821  014244  0E30               	movlw	48
 16822  014246  2625               	addwf	btemp^0,f,c
 16823                           
 16824                           ;stkvar	_i @ sp[(-18)+10]
 16825  014248  0EF8               	movlw	-8
 16826  01424A  006F FF8C  F02F    	movff	plusw1,btemp+10
 16827  014250  0EF9               	movlw	-7
 16828  014252  006F FF8C  F030    	movff	plusw1,btemp+11
 16829  014258  0E94               	movlw	low _dbuf
 16830  01425A  242F               	addwf	(btemp+10)^0,w,c
 16831  01425C  6ED9               	movwf	fsr2l,c
 16832  01425E  0E03               	movlw	high _dbuf
 16833  014260  2030               	addwfc	(btemp+11)^0,w,c
 16834  014262  6EDA               	movwf	fsr2h,c
 16835  014264  0060  F097  FFDF   	movff	btemp,indf2
 16836                           
 16837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16838                           ;stkvar	_p @ sp[(-18)+16]
 16839  01426A  50E1               	movf	fsr1l,w,c
 16840  01426C  0FFE               	addlw	-2
 16841  01426E  6ED9               	movwf	fsr2l,c
 16842  014270  50E2               	movf	fsr1h,w,c
 16843  014272  6EDA               	movwf	fsr2h,c
 16844  014274  0EFF               	movlw	255
 16845  014276  22DA               	addwfc	fsr2h,f,c
 16846  014278  06DE               	decf	postinc2,f,c
 16847  01427A  0E00               	movlw	0
 16848  01427C  5ADD               	subwfb	postdec2,f,c
 16849                           
 16850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16851                           ;stkvar	_w @ sp[(-18)+14]
 16852  01427E  50E1               	movf	fsr1l,w,c
 16853  014280  0FFC               	addlw	-4
 16854  014282  6ED9               	movwf	fsr2l,c
 16855  014284  50E2               	movf	fsr1h,w,c
 16856  014286  6EDA               	movwf	fsr2h,c
 16857  014288  0EFF               	movlw	255
 16858  01428A  22DA               	addwfc	fsr2h,f,c
 16859  01428C  06DE               	decf	postinc2,f,c
 16860  01428E  0E00               	movlw	0
 16861  014290  5ADD               	subwfb	postdec2,f,c
 16862                           
 16863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16864  014292  0E0A               	movlw	10
 16865  014294  6EE6               	movwf	postinc1,c
 16866  014296  0E00               	movlw	0
 16867  014298  6EE6               	movwf	postinc1,c
 16868  01429A  0E00               	movlw	0
 16869  01429C  6EE6               	movwf	postinc1,c
 16870  01429E  0E00               	movlw	0
 16871  0142A0  6EE6               	movwf	postinc1,c
 16872  0142A2  0E00               	movlw	0
 16873  0142A4  6EE6               	movwf	postinc1,c
 16874  0142A6  0E00               	movlw	0
 16875  0142A8  6EE6               	movwf	postinc1,c
 16876  0142AA  0E00               	movlw	0
 16877  0142AC  6EE6               	movwf	postinc1,c
 16878  0142AE  0E00               	movlw	0
 16879  0142B0  6EE6               	movwf	postinc1,c
 16880                           
 16881                           ;stkvar	_n @ sp[(-26)+2]
 16882  0142B2  50E1               	movf	fsr1l,w,c
 16883  0142B4  0FE8               	addlw	-24
 16884  0142B6  6ED9               	movwf	fsr2l,c
 16885  0142B8  50E2               	movf	fsr1h,w,c
 16886  0142BA  6EDA               	movwf	fsr2h,c
 16887  0142BC  0EFF               	movlw	255
 16888  0142BE  22DA               	addwfc	fsr2h,f,c
 16889  0142C0  006F FF7B FFE6     	movff	postinc2,postinc1
 16890  0142C6  006F FF7B FFE6     	movff	postinc2,postinc1
 16891  0142CC  006F FF7B FFE6     	movff	postinc2,postinc1
 16892  0142D2  006F FF7B FFE6     	movff	postinc2,postinc1
 16893  0142D8  006F FF7B FFE6     	movff	postinc2,postinc1
 16894  0142DE  006F FF7B FFE6     	movff	postinc2,postinc1
 16895  0142E4  006F FF7B FFE6     	movff	postinc2,postinc1
 16896  0142EA  006F FF7B FFE6     	movff	postinc2,postinc1
 16897  0142F0  EC58  F0AC         	call	___aodiv	;wreg free
 16898  0142F4  52E5               	movf	postdec1,f,c
 16899  0142F6  006F FF9C  F03C    	movff	indf1,btemp+23
 16900  0142FC  52E5               	movf	postdec1,f,c
 16901  0142FE  006F FF9C  F03B    	movff	indf1,btemp+22
 16902  014304  52E5               	movf	postdec1,f,c
 16903  014306  006F FF9C  F03A    	movff	indf1,btemp+21
 16904  01430C  52E5               	movf	postdec1,f,c
 16905  01430E  006F FF9C  F039    	movff	indf1,btemp+20
 16906  014314  52E5               	movf	postdec1,f,c
 16907  014316  006F FF9C  F038    	movff	indf1,btemp+19
 16908  01431C  52E5               	movf	postdec1,f,c
 16909  01431E  006F FF9C  F037    	movff	indf1,btemp+18
 16910  014324  52E5               	movf	postdec1,f,c
 16911  014326  006F FF9C  F036    	movff	indf1,btemp+17
 16912  01432C  52E5               	movf	postdec1,f,c
 16913  01432E  006F FF9C  F035    	movff	indf1,btemp+16
 16914  014334  0EF8               	movlw	248
 16915  014336  26E1               	addwf	fsr1l,f,c
 16916  014338  0EFF               	movlw	255
 16917  01433A  22E2               	addwfc	fsr1h,f,c
 16918                           
 16919                           ;stkvar	_n @ sp[(-18)+2]
 16920  01433C  0EF0               	movlw	-16
 16921  01433E  0060  F0D7  FFE3   	movff	btemp+16,plusw1
 16922  014344  0EF1               	movlw	-15
 16923  014346  0060  F0DB  FFE3   	movff	btemp+17,plusw1
 16924  01434C  0EF2               	movlw	-14
 16925  01434E  0060  F0DF  FFE3   	movff	btemp+18,plusw1
 16926  014354  0EF3               	movlw	-13
 16927  014356  0060  F0E3  FFE3   	movff	btemp+19,plusw1
 16928  01435C  0EF4               	movlw	-12
 16929  01435E  0060  F0E7  FFE3   	movff	btemp+20,plusw1
 16930  014364  0EF5               	movlw	-11
 16931  014366  0060  F0EB  FFE3   	movff	btemp+21,plusw1
 16932  01436C  0EF6               	movlw	-10
 16933  01436E  0060  F0EF  FFE3   	movff	btemp+22,plusw1
 16934  014374  0EF7               	movlw	-9
 16935  014376  0060  F0F3  FFE3   	movff	btemp+23,plusw1
 16936  01437C                     l10147:
 16937                           
 16938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16939                           ;stkvar	_i @ sp[(-18)+10]
 16940  01437C  0EF9               	movlw	-7
 16941  01437E  BEE3               	btfsc	plusw1,7,c
 16942  014380  D036               	goto	u9520
 16943  014382  0EF9               	movlw	-7
 16944  014384  50E3               	movf	plusw1,w,c
 16945  014386  E104               	bnz	u9480
 16946  014388  0EF8               	movlw	-8
 16947  01438A  04E3               	decf	plusw1,w,c
 16948  01438C  A0D8               	btfss	status,0,c
 16949  01438E  D02F               	goto	u9520
 16950  014390                     u9480:
 16951                           
 16952                           ;stkvar	_n @ sp[(-18)+2]
 16953  014390  0EF0               	movlw	-16
 16954  014392  50E3               	movf	plusw1,w,c
 16955  014394  E115               	bnz	u9491
 16956  014396  0EF1               	movlw	-15
 16957  014398  50E3               	movf	plusw1,w,c
 16958  01439A  E112               	bnz	u9491
 16959  01439C  0EF2               	movlw	-14
 16960  01439E  50E3               	movf	plusw1,w,c
 16961  0143A0  E10F               	bnz	u9491
 16962  0143A2  0EF3               	movlw	-13
 16963  0143A4  50E3               	movf	plusw1,w,c
 16964  0143A6  E10C               	bnz	u9491
 16965  0143A8  0EF4               	movlw	-12
 16966  0143AA  50E3               	movf	plusw1,w,c
 16967  0143AC  E109               	bnz	u9491
 16968  0143AE  0EF5               	movlw	-11
 16969  0143B0  50E3               	movf	plusw1,w,c
 16970  0143B2  E106               	bnz	u9491
 16971  0143B4  0EF6               	movlw	-10
 16972  0143B6  50E3               	movf	plusw1,w,c
 16973  0143B8  E103               	bnz	u9491
 16974  0143BA  0EF7               	movlw	-9
 16975  0143BC  50E3               	movf	plusw1,w,c
 16976  0143BE  A4D8               	btfss	status,2,c
 16977  0143C0                     u9491:
 16978  0143C0  D6D4               	goto	l10137
 16979                           
 16980                           ;stkvar	_p @ sp[(-18)+16]
 16981  0143C2  0EFF               	movlw	-1
 16982  0143C4  BEE3               	btfsc	plusw1,7,c
 16983  0143C6  D007               	goto	u9500
 16984  0143C8  0EFF               	movlw	-1
 16985  0143CA  50E3               	movf	plusw1,w,c
 16986  0143CC  E103               	bnz	u9501
 16987  0143CE  0EFE               	movlw	-2
 16988  0143D0  04E3               	decf	plusw1,w,c
 16989  0143D2  B0D8               	btfsc	status,0,c
 16990  0143D4                     u9501:
 16991  0143D4  D6CA               	goto	l10137
 16992  0143D6                     u9500:
 16993                           
 16994                           ;stkvar	_w @ sp[(-18)+14]
 16995  0143D6  0EFD               	movlw	-3
 16996  0143D8  BEE3               	btfsc	plusw1,7,c
 16997  0143DA  D009               	goto	u9520
 16998  0143DC  0EFD               	movlw	-3
 16999  0143DE  50E3               	movf	plusw1,w,c
 17000  0143E0  E104               	bnz	u9510
 17001  0143E2  0EFC               	movlw	-4
 17002  0143E4  04E3               	decf	plusw1,w,c
 17003  0143E6  A0D8               	btfss	status,0,c
 17004  0143E8  D002               	goto	u9520
 17005  0143EA                     u9510:
 17006  0143EA  B20E               	btfsc	_flags^0,1,c
 17007  0143EC  D6BE               	goto	l10137
 17008  0143EE                     u9520:
 17009                           
 17010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17011                           ;stkvar	_s @ sp[(-18)+12]
 17012  0143EE  0EFA               	movlw	-6
 17013  0143F0  006F FF8C  F025    	movff	plusw1,btemp
 17014  0143F6  0EFB               	movlw	-5
 17015  0143F8  50E3               	movf	plusw1,w,c
 17016  0143FA  1025               	iorwf	btemp^0,w,c
 17017  0143FC  A4D8               	btfss	status,2,c
 17018  0143FE  D002               	goto	u9540
 17019  014400  A40E               	btfss	_flags^0,2,c
 17020  014402  D033               	goto	l10171
 17021  014404                     u9540:
 17022                           
 17023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17024                           ;stkvar	_i @ sp[(-18)+10]
 17025  014404  50E1               	movf	fsr1l,w,c
 17026  014406  0FF8               	addlw	-8
 17027  014408  6ED9               	movwf	fsr2l,c
 17028  01440A  50E2               	movf	fsr1h,w,c
 17029  01440C  6EDA               	movwf	fsr2h,c
 17030  01440E  0EFF               	movlw	255
 17031  014410  22DA               	addwfc	fsr2h,f,c
 17032  014412  06DE               	decf	postinc2,f,c
 17033  014414  0E00               	movlw	0
 17034  014416  5ADD               	subwfb	postdec2,f,c
 17035                           
 17036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17037                           ;stkvar	_s @ sp[(-18)+12]
 17038  014418  0EFA               	movlw	-6
 17039  01441A  006F FF8C  F025    	movff	plusw1,btemp
 17040  014420  0EFB               	movlw	-5
 17041  014422  50E3               	movf	plusw1,w,c
 17042  014424  1025               	iorwf	btemp^0,w,c
 17043  014426  A4D8               	btfss	status,2,c
 17044  014428  D002               	goto	l10167
 17045  01442A  0E2B               	movlw	43
 17046  01442C  D001               	goto	L17
 17047  01442E                     l10167:
 17048  01442E  0E2D               	movlw	45
 17049  014430                     L17:
 17050  014430  6E2F               	movwf	(btemp+10)^0,c
 17051  014432  0E00               	movlw	0
 17052  014434  6E30               	movwf	(btemp+11)^0,c
 17053                           
 17054                           ;stkvar	_dtoa$4966 @ sp[(-18)+0]
 17055  014436  0EEE               	movlw	-18
 17056  014438  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 17057  01443E  0EEF               	movlw	-17
 17058  014440  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 17059                           
 17060                           ;stkvar	_dtoa$4966 @ sp[(-18)+0]
 17061                           ;stkvar	_i @ sp[(-18)+10]
 17062  014446  0EF8               	movlw	-8
 17063  014448  006F FF8C  F02F    	movff	plusw1,btemp+10
 17064  01444E  0EF9               	movlw	-7
 17065  014450  006F FF8C  F030    	movff	plusw1,btemp+11
 17066  014456  0E94               	movlw	low _dbuf
 17067  014458  242F               	addwf	(btemp+10)^0,w,c
 17068  01445A  6ED9               	movwf	fsr2l,c
 17069  01445C  0E03               	movlw	high _dbuf
 17070  01445E  2030               	addwfc	(btemp+11)^0,w,c
 17071  014460  6EDA               	movwf	fsr2h,c
 17072  014462  0EEE               	movlw	-18
 17073  014464  006F FF8F FFDF     	movff	plusw1,indf2
 17074  01446A                     l10171:
 17075                           
 17076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17077                           ;stkvar	_w @ sp[(-18)+14]
 17078  01446A  0EFC               	movlw	-4
 17079  01446C  006F FF8F FFE6     	movff	plusw1,postinc1
 17080  014472  006F FF8F FFE6     	movff	plusw1,postinc1
 17081                           
 17082                           ;stkvar	_i @ sp[(-20)+10]
 17083  014478  0E94               	movlw	low _dbuf
 17084  01447A  6E2F               	movwf	(btemp+10)^0,c
 17085  01447C  0E03               	movlw	high _dbuf
 17086  01447E  6E30               	movwf	(btemp+11)^0,c
 17087  014480  0EF6               	movlw	-10
 17088  014482  50E3               	movf	plusw1,w,c
 17089  014484  262F               	addwf	(btemp+10)^0,f,c
 17090  014486  0EF7               	movlw	-9
 17091  014488  50E3               	movf	plusw1,w,c
 17092  01448A  2230               	addwfc	(btemp+11)^0,f,c
 17093  01448C  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 17094  014492  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 17095                           
 17096                           ;stkvar	_fp @ sp[(-22)+-2]
 17097  014498  0EE8               	movlw	-24
 17098  01449A  006F FF8F FFE6     	movff	plusw1,postinc1
 17099  0144A0  006F FF8F FFE6     	movff	plusw1,postinc1
 17100  0144A6  ECE6  F0B8         	call	_pad	;wreg free
 17101                           
 17102                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17103  0144AA  0EE4               	movlw	228
 17104  0144AC  26E1               	addwf	fsr1l,f,c
 17105  0144AE  0EFF               	movlw	255
 17106  0144B0  22E2               	addwfc	fsr1h,f,c
 17107  0144B2  0012               	return		;funcret
 17108  0144B4                     __end_of_dtoa:
 17109                           	opt callstack 0
 17110                           
 17111 ;; *************** function _abs *****************
 17112 ;; Defined at:
 17113 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17114 ;; Parameters:    Size  Location     Type
 17115 ;;  a               2  [STACK] int 
 17116 ;; Auto vars:     Size  Location     Type
 17117 ;;		None
 17118 ;; Return value:  Size  Location     Type
 17119 ;;                  2  [STACK] int 
 17120 ;; Registers used:
 17121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17122 ;; Tracked objects:
 17123 ;;		On entry : 0/3
 17124 ;;		On exit  : 0/0
 17125 ;;		Unchanged: 0/0
 17126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17131 ;;Total ram usage:        0 bytes
 17132 ;; Hardware stack levels used:    1
 17133 ;; Hardware stack levels required when called:    7
 17134 ;; This function calls:
 17135 ;;		Nothing
 17136 ;; This function is called by:
 17137 ;;		_dtoa
 17138 ;; This function uses a reentrant model
 17139 ;;
 17140                           
 17141                           	psect	text62
 17142  01898E                     __ptext62:
 17143                           	opt callstack 0
 17144  01898E                     _abs:
 17145                           	opt callstack 16
 17146                           
 17147                           ;stkvar	_a @ sp[(0)+-2]
 17148                           
 17149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17150                           ;incstack = 0
 17151  01898E  0EFF               	movlw	-1
 17152  018990  BEE3               	btfsc	plusw1,7,c
 17153  018992  D007               	goto	u4810
 17154  018994  0EFF               	movlw	-1
 17155  018996  50E3               	movf	plusw1,w,c
 17156  018998  E112               	bnz	l6645
 17157  01899A  0EFE               	movlw	-2
 17158  01899C  04E3               	decf	plusw1,w,c
 17159  01899E  B0D8               	btfsc	status,0,c
 17160  0189A0  D00E               	goto	l6645
 17161  0189A2                     u4810:
 17162                           
 17163                           ;stkvar	_a @ sp[(0)+-2]
 17164  0189A2  0EFE               	movlw	-2
 17165  0189A4  006F FF8C  F025    	movff	plusw1,btemp
 17166  0189AA  1E25               	comf	btemp^0,f,c
 17167  0189AC  0EFF               	movlw	-1
 17168  0189AE  006F FF8C  F026    	movff	plusw1,btemp+1
 17169  0189B4  1E26               	comf	(btemp+1)^0,f,c
 17170  0189B6  2A25               	incf	btemp^0,f,c
 17171  0189B8  B4D8               	btfsc	status,2,c
 17172  0189BA  2A26               	incf	(btemp+1)^0,f,c
 17173  0189BC  D008               	goto	l2913
 17174  0189BE                     l6645:
 17175                           
 17176                           ;stkvar	_a @ sp[(0)+-2]
 17177  0189BE  0EFE               	movlw	-2
 17178  0189C0  006F FF8C  F025    	movff	plusw1,btemp
 17179  0189C6  0EFF               	movlw	-1
 17180  0189C8  006F FF8C  F026    	movff	plusw1,btemp+1
 17181  0189CE                     l2913:
 17182                           
 17183                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17184  0189CE  52E5               	movf	postdec1,f,c
 17185  0189D0  52E5               	movf	postdec1,f,c
 17186  0189D2  0012               	return		;funcret
 17187  0189D4                     __end_of_abs:
 17188                           	opt callstack 0
 17189                           
 17190 ;; *************** function ___aomod *****************
 17191 ;; Defined at:
 17192 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17193 ;; Parameters:    Size  Location     Type
 17194 ;;  dividend        8  [STACK] long long 
 17195 ;;  divisor         8  [STACK] long long 
 17196 ;; Auto vars:     Size  Location     Type
 17197 ;;  sign            1  [STACK] unsigned char 
 17198 ;;  counter         1  [STACK] unsigned char 
 17199 ;; Return value:  Size  Location     Type
 17200 ;;                  8  [STACK] long long 
 17201 ;; Registers used:
 17202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17203 ;; Tracked objects:
 17204 ;;		On entry : 0/3
 17205 ;;		On exit  : 0/0
 17206 ;;		Unchanged: 0/0
 17207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17212 ;;Total ram usage:        0 bytes
 17213 ;; Hardware stack levels used:    1
 17214 ;; Hardware stack levels required when called:    7
 17215 ;; This function calls:
 17216 ;;		Nothing
 17217 ;; This function is called by:
 17218 ;;		_dtoa
 17219 ;; This function uses a reentrant model
 17220 ;;
 17221                           
 17222                           	psect	text63
 17223  015DA4                     __ptext63:
 17224                           	opt callstack 0
 17225  015DA4                     ___aomod:
 17226                           	opt callstack 0
 17227                           
 17228                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17229  015DA4  52E6               	movf	postinc1,f,c
 17230  015DA6  52E6               	movf	postinc1,f,c
 17231                           
 17232                           ;stkvar	_sign @ sp[(-2)+0]
 17233                           
 17234                           ;incstack = 0
 17235  015DA8  0EFE               	movlw	-2
 17236  015DAA  6AE3               	clrf	plusw1,c
 17237                           
 17238                           ;stkvar	_dividend @ sp[(-2)+-8]
 17239  015DAC  0EFD               	movlw	-3
 17240  015DAE  AEE3               	btfss	plusw1,7,c
 17241  015DB0  D028               	goto	l6803
 17242                           
 17243                           ;stkvar	_dividend @ sp[(-2)+-8]
 17244                           ;stkvar	_dividend @ sp[(-2)+-8]
 17245  015DB2  0EF6               	movlw	-10
 17246  015DB4  6CE3               	negf	plusw1,c
 17247  015DB6  0EF7               	movlw	-9
 17248  015DB8  1EE3               	comf	plusw1,f,c
 17249  015DBA  0EF8               	movlw	-8
 17250  015DBC  1EE3               	comf	plusw1,f,c
 17251  015DBE  0EF9               	movlw	-7
 17252  015DC0  1EE3               	comf	plusw1,f,c
 17253  015DC2  0EFA               	movlw	-6
 17254  015DC4  1EE3               	comf	plusw1,f,c
 17255  015DC6  0EFB               	movlw	-5
 17256  015DC8  1EE3               	comf	plusw1,f,c
 17257  015DCA  0EFC               	movlw	-4
 17258  015DCC  1EE3               	comf	plusw1,f,c
 17259  015DCE  0EFD               	movlw	-3
 17260  015DD0  1EE3               	comf	plusw1,f,c
 17261  015DD2  E314               	bnc	u5240
 17262  015DD4  0EF7               	movlw	-9
 17263  015DD6  2AE3               	incf	plusw1,f,c
 17264  015DD8  E311               	bnc	u5240
 17265  015DDA  0EF8               	movlw	-8
 17266  015DDC  2AE3               	incf	plusw1,f,c
 17267  015DDE  E30E               	bnc	u5240
 17268  015DE0  0EF9               	movlw	-7
 17269  015DE2  2AE3               	incf	plusw1,f,c
 17270  015DE4  E30B               	bnc	u5240
 17271  015DE6  0EFA               	movlw	-6
 17272  015DE8  2AE3               	incf	plusw1,f,c
 17273  015DEA  E308               	bnc	u5240
 17274  015DEC  0EFB               	movlw	-5
 17275  015DEE  2AE3               	incf	plusw1,f,c
 17276  015DF0  E305               	bnc	u5240
 17277  015DF2  0EFC               	movlw	-4
 17278  015DF4  2AE3               	incf	plusw1,f,c
 17279  015DF6  E302               	bnc	u5240
 17280  015DF8  0EFD               	movlw	-3
 17281  015DFA  2AE3               	incf	plusw1,f,c
 17282  015DFC                     u5240:
 17283                           
 17284                           ;stkvar	_sign @ sp[(-2)+0]
 17285  015DFC  0EFE               	movlw	-2
 17286  015DFE  6AE3               	clrf	plusw1,c
 17287  015E00  2AE3               	incf	plusw1,f,c
 17288  015E02                     l6803:
 17289                           
 17290                           ;stkvar	_divisor @ sp[(-2)+-16]
 17291  015E02  0EF5               	movlw	-11
 17292  015E04  AEE3               	btfss	plusw1,7,c
 17293  015E06  D025               	goto	u5260
 17294                           
 17295                           ;stkvar	_divisor @ sp[(-2)+-16]
 17296                           ;stkvar	_divisor @ sp[(-2)+-16]
 17297  015E08  0EEE               	movlw	-18
 17298  015E0A  6CE3               	negf	plusw1,c
 17299  015E0C  0EEF               	movlw	-17
 17300  015E0E  1EE3               	comf	plusw1,f,c
 17301  015E10  0EF0               	movlw	-16
 17302  015E12  1EE3               	comf	plusw1,f,c
 17303  015E14  0EF1               	movlw	-15
 17304  015E16  1EE3               	comf	plusw1,f,c
 17305  015E18  0EF2               	movlw	-14
 17306  015E1A  1EE3               	comf	plusw1,f,c
 17307  015E1C  0EF3               	movlw	-13
 17308  015E1E  1EE3               	comf	plusw1,f,c
 17309  015E20  0EF4               	movlw	-12
 17310  015E22  1EE3               	comf	plusw1,f,c
 17311  015E24  0EF5               	movlw	-11
 17312  015E26  1EE3               	comf	plusw1,f,c
 17313  015E28  E314               	bnc	u5260
 17314  015E2A  0EEF               	movlw	-17
 17315  015E2C  2AE3               	incf	plusw1,f,c
 17316  015E2E  E311               	bnc	u5260
 17317  015E30  0EF0               	movlw	-16
 17318  015E32  2AE3               	incf	plusw1,f,c
 17319  015E34  E30E               	bnc	u5260
 17320  015E36  0EF1               	movlw	-15
 17321  015E38  2AE3               	incf	plusw1,f,c
 17322  015E3A  E30B               	bnc	u5260
 17323  015E3C  0EF2               	movlw	-14
 17324  015E3E  2AE3               	incf	plusw1,f,c
 17325  015E40  E308               	bnc	u5260
 17326  015E42  0EF3               	movlw	-13
 17327  015E44  2AE3               	incf	plusw1,f,c
 17328  015E46  E305               	bnc	u5260
 17329  015E48  0EF4               	movlw	-12
 17330  015E4A  2AE3               	incf	plusw1,f,c
 17331  015E4C  E302               	bnc	u5260
 17332  015E4E  0EF5               	movlw	-11
 17333  015E50  2AE3               	incf	plusw1,f,c
 17334  015E52                     u5260:
 17335                           
 17336                           ;stkvar	_divisor @ sp[(-2)+-16]
 17337  015E52  0EEE               	movlw	-18
 17338  015E54  50E3               	movf	plusw1,w,c
 17339  015E56  E116               	bnz	u5270
 17340  015E58  0EEF               	movlw	-17
 17341  015E5A  50E3               	movf	plusw1,w,c
 17342  015E5C  E113               	bnz	u5270
 17343  015E5E  0EF0               	movlw	-16
 17344  015E60  50E3               	movf	plusw1,w,c
 17345  015E62  E110               	bnz	u5270
 17346  015E64  0EF1               	movlw	-15
 17347  015E66  50E3               	movf	plusw1,w,c
 17348  015E68  E10D               	bnz	u5270
 17349  015E6A  0EF2               	movlw	-14
 17350  015E6C  50E3               	movf	plusw1,w,c
 17351  015E6E  E10A               	bnz	u5270
 17352  015E70  0EF3               	movlw	-13
 17353  015E72  50E3               	movf	plusw1,w,c
 17354  015E74  E107               	bnz	u5270
 17355  015E76  0EF4               	movlw	-12
 17356  015E78  50E3               	movf	plusw1,w,c
 17357  015E7A  E104               	bnz	u5270
 17358  015E7C  0EF5               	movlw	-11
 17359  015E7E  50E3               	movf	plusw1,w,c
 17360  015E80  B4D8               	btfsc	status,2,c
 17361  015E82  D075               	goto	u5300
 17362  015E84                     u5270:
 17363                           
 17364                           ;stkvar	_counter @ sp[(-2)+1]
 17365  015E84  0EFF               	movlw	-1
 17366  015E86  6AE3               	clrf	plusw1,c
 17367  015E88  D012               	goto	L18
 17368  015E8A                     l6811:
 17369                           
 17370                           ;stkvar	_divisor @ sp[(-2)+-16]
 17371  015E8A  90D8               	bcf	status,0,c
 17372  015E8C  0EEE               	movlw	-18
 17373  015E8E  36E3               	rlcf	plusw1,f,c
 17374  015E90  0EEF               	movlw	-17
 17375  015E92  36E3               	rlcf	plusw1,f,c
 17376  015E94  0EF0               	movlw	-16
 17377  015E96  36E3               	rlcf	plusw1,f,c
 17378  015E98  0EF1               	movlw	-15
 17379  015E9A  36E3               	rlcf	plusw1,f,c
 17380  015E9C  0EF2               	movlw	-14
 17381  015E9E  36E3               	rlcf	plusw1,f,c
 17382  015EA0  0EF3               	movlw	-13
 17383  015EA2  36E3               	rlcf	plusw1,f,c
 17384  015EA4  0EF4               	movlw	-12
 17385  015EA6  36E3               	rlcf	plusw1,f,c
 17386  015EA8  0EF5               	movlw	-11
 17387  015EAA  36E3               	rlcf	plusw1,f,c
 17388                           
 17389                           ;stkvar	_counter @ sp[(-2)+1]
 17390  015EAC  0EFF               	movlw	-1
 17391  015EAE                     L18:
 17392  015EAE  2AE3               	incf	plusw1,f,c
 17393                           
 17394                           ;stkvar	_divisor @ sp[(-2)+-16]
 17395  015EB0  0EF5               	movlw	-11
 17396  015EB2  AEE3               	btfss	plusw1,7,c
 17397  015EB4  D7EA               	goto	l6811
 17398  015EB6                     u5280:
 17399                           
 17400                           ;stkvar	_divisor @ sp[(-2)+-16]
 17401                           ;stkvar	_dividend @ sp[(-2)+-8]
 17402  015EB6  50E1               	movf	fsr1l,w,c
 17403  015EB8  0FF6               	addlw	-10
 17404  015EBA  6ED9               	movwf	fsr2l,c
 17405  015EBC  50E2               	movf	fsr1h,w,c
 17406  015EBE  6EDA               	movwf	fsr2h,c
 17407  015EC0  0EFF               	movlw	255
 17408  015EC2  22DA               	addwfc	fsr2h,f,c
 17409  015EC4  0EEE               	movlw	-18
 17410  015EC6  50E3               	movf	plusw1,w,c
 17411  015EC8  5CDE               	subwf	postinc2,w,c
 17412  015ECA  0EEF               	movlw	-17
 17413  015ECC  50E3               	movf	plusw1,w,c
 17414  015ECE  58DE               	subwfb	postinc2,w,c
 17415  015ED0  0EF0               	movlw	-16
 17416  015ED2  50E3               	movf	plusw1,w,c
 17417  015ED4  58DE               	subwfb	postinc2,w,c
 17418  015ED6  0EF1               	movlw	-15
 17419  015ED8  50E3               	movf	plusw1,w,c
 17420  015EDA  58DE               	subwfb	postinc2,w,c
 17421  015EDC  0EF2               	movlw	-14
 17422  015EDE  50E3               	movf	plusw1,w,c
 17423  015EE0  58DE               	subwfb	postinc2,w,c
 17424  015EE2  0EF3               	movlw	-13
 17425  015EE4  50E3               	movf	plusw1,w,c
 17426  015EE6  58DE               	subwfb	postinc2,w,c
 17427  015EE8  0EF4               	movlw	-12
 17428  015EEA  50E3               	movf	plusw1,w,c
 17429  015EEC  58DE               	subwfb	postinc2,w,c
 17430  015EEE  0EF5               	movlw	-11
 17431  015EF0  50E3               	movf	plusw1,w,c
 17432  015EF2  58DE               	subwfb	postinc2,w,c
 17433  015EF4  A0D8               	btfss	status,0,c
 17434  015EF6  D01F               	goto	l6819
 17435                           
 17436                           ;stkvar	_divisor @ sp[(-2)+-16]
 17437                           ;stkvar	_dividend @ sp[(-2)+-8]
 17438  015EF8  50E1               	movf	fsr1l,w,c
 17439  015EFA  0FF6               	addlw	-10
 17440  015EFC  6ED9               	movwf	fsr2l,c
 17441  015EFE  50E2               	movf	fsr1h,w,c
 17442  015F00  6EDA               	movwf	fsr2h,c
 17443  015F02  0EFF               	movlw	255
 17444  015F04  22DA               	addwfc	fsr2h,f,c
 17445  015F06  0EEE               	movlw	-18
 17446  015F08  50E3               	movf	plusw1,w,c
 17447  015F0A  5EDE               	subwf	postinc2,f,c
 17448  015F0C  0EEF               	movlw	-17
 17449  015F0E  50E3               	movf	plusw1,w,c
 17450  015F10  5ADE               	subwfb	postinc2,f,c
 17451  015F12  0EF0               	movlw	-16
 17452  015F14  50E3               	movf	plusw1,w,c
 17453  015F16  5ADE               	subwfb	postinc2,f,c
 17454  015F18  0EF1               	movlw	-15
 17455  015F1A  50E3               	movf	plusw1,w,c
 17456  015F1C  5ADE               	subwfb	postinc2,f,c
 17457  015F1E  0EF2               	movlw	-14
 17458  015F20  50E3               	movf	plusw1,w,c
 17459  015F22  5ADE               	subwfb	postinc2,f,c
 17460  015F24  0EF3               	movlw	-13
 17461  015F26  50E3               	movf	plusw1,w,c
 17462  015F28  5ADE               	subwfb	postinc2,f,c
 17463  015F2A  0EF4               	movlw	-12
 17464  015F2C  50E3               	movf	plusw1,w,c
 17465  015F2E  5ADE               	subwfb	postinc2,f,c
 17466  015F30  0EF5               	movlw	-11
 17467  015F32  50E3               	movf	plusw1,w,c
 17468  015F34  5ADE               	subwfb	postinc2,f,c
 17469  015F36                     l6819:
 17470                           
 17471                           ;stkvar	_divisor @ sp[(-2)+-16]
 17472  015F36  90D8               	bcf	status,0,c
 17473  015F38  0EF5               	movlw	-11
 17474  015F3A  32E3               	rrcf	plusw1,f,c
 17475  015F3C  0EF4               	movlw	-12
 17476  015F3E  32E3               	rrcf	plusw1,f,c
 17477  015F40  0EF3               	movlw	-13
 17478  015F42  32E3               	rrcf	plusw1,f,c
 17479  015F44  0EF2               	movlw	-14
 17480  015F46  32E3               	rrcf	plusw1,f,c
 17481  015F48  0EF1               	movlw	-15
 17482  015F4A  32E3               	rrcf	plusw1,f,c
 17483  015F4C  0EF0               	movlw	-16
 17484  015F4E  32E3               	rrcf	plusw1,f,c
 17485  015F50  0EEF               	movlw	-17
 17486  015F52  32E3               	rrcf	plusw1,f,c
 17487  015F54  0EEE               	movlw	-18
 17488  015F56  32E3               	rrcf	plusw1,f,c
 17489                           
 17490                           ;stkvar	_counter @ sp[(-2)+1]
 17491  015F58  0EFF               	movlw	-1
 17492  015F5A  50E3               	movf	plusw1,w,c
 17493  015F5C  6E25               	movwf	btemp^0,c
 17494  015F5E  0E01               	movlw	1
 17495  015F60  5E25               	subwf	btemp^0,f,c
 17496  015F62  0EFF               	movlw	-1
 17497  015F64  0060  F097  FFE3   	movff	btemp,plusw1
 17498  015F6A  A4D8               	btfss	status,2,c
 17499  015F6C  D7A4               	goto	u5280
 17500  015F6E                     u5300:
 17501                           
 17502                           ;stkvar	_sign @ sp[(-2)+0]
 17503  015F6E  0EFE               	movlw	-2
 17504  015F70  50E3               	movf	plusw1,w,c
 17505  015F72  B4D8               	btfsc	status,2,c
 17506  015F74  D025               	goto	u5320
 17507                           
 17508                           ;stkvar	_dividend @ sp[(-2)+-8]
 17509                           ;stkvar	_dividend @ sp[(-2)+-8]
 17510  015F76  0EF6               	movlw	-10
 17511  015F78  6CE3               	negf	plusw1,c
 17512  015F7A  0EF7               	movlw	-9
 17513  015F7C  1EE3               	comf	plusw1,f,c
 17514  015F7E  0EF8               	movlw	-8
 17515  015F80  1EE3               	comf	plusw1,f,c
 17516  015F82  0EF9               	movlw	-7
 17517  015F84  1EE3               	comf	plusw1,f,c
 17518  015F86  0EFA               	movlw	-6
 17519  015F88  1EE3               	comf	plusw1,f,c
 17520  015F8A  0EFB               	movlw	-5
 17521  015F8C  1EE3               	comf	plusw1,f,c
 17522  015F8E  0EFC               	movlw	-4
 17523  015F90  1EE3               	comf	plusw1,f,c
 17524  015F92  0EFD               	movlw	-3
 17525  015F94  1EE3               	comf	plusw1,f,c
 17526  015F96  E314               	bnc	u5320
 17527  015F98  0EF7               	movlw	-9
 17528  015F9A  2AE3               	incf	plusw1,f,c
 17529  015F9C  E311               	bnc	u5320
 17530  015F9E  0EF8               	movlw	-8
 17531  015FA0  2AE3               	incf	plusw1,f,c
 17532  015FA2  E30E               	bnc	u5320
 17533  015FA4  0EF9               	movlw	-7
 17534  015FA6  2AE3               	incf	plusw1,f,c
 17535  015FA8  E30B               	bnc	u5320
 17536  015FAA  0EFA               	movlw	-6
 17537  015FAC  2AE3               	incf	plusw1,f,c
 17538  015FAE  E308               	bnc	u5320
 17539  015FB0  0EFB               	movlw	-5
 17540  015FB2  2AE3               	incf	plusw1,f,c
 17541  015FB4  E305               	bnc	u5320
 17542  015FB6  0EFC               	movlw	-4
 17543  015FB8  2AE3               	incf	plusw1,f,c
 17544  015FBA  E302               	bnc	u5320
 17545  015FBC  0EFD               	movlw	-3
 17546  015FBE  2AE3               	incf	plusw1,f,c
 17547  015FC0                     u5320:
 17548                           
 17549                           ;stkvar	_dividend @ sp[(-2)+-8]
 17550  015FC0  0EF6               	movlw	246
 17551  015FC2  24E1               	addwf	fsr1l,w,c
 17552  015FC4  6ED9               	movwf	fsr2l,c
 17553  015FC6  0EFF               	movlw	255
 17554  015FC8  20E2               	addwfc	fsr1h,w,c
 17555  015FCA  6EDA               	movwf	fsr2h,c
 17556                           
 17557                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17558  015FCC  0E08               	movlw	8
 17559  015FCE  6E25               	movwf	btemp^0,c
 17560  015FD0  0EF6               	movlw	-10
 17561  015FD2                     us533999:
 17562  015FD2  006F FF7B FFE3     	movff	postinc2,plusw1
 17563  015FD8  28E8               	incf	wreg,w,c
 17564  015FDA  2E25               	decfsz	btemp^0,f,c
 17565  015FDC  D7FA               	bra	us533999
 17566                           
 17567                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17568  015FDE  52E5               	movf	postdec1,f,c
 17569  015FE0  52E5               	movf	postdec1,f,c
 17570  015FE2  0012               	return		;funcret
 17571  015FE4                     __end_of___aomod:
 17572                           	opt callstack 0
 17573                           
 17574 ;; *************** function ___aodiv *****************
 17575 ;; Defined at:
 17576 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17577 ;; Parameters:    Size  Location     Type
 17578 ;;  dividend        8  [STACK] long long 
 17579 ;;  divisor         8  [STACK] long long 
 17580 ;; Auto vars:     Size  Location     Type
 17581 ;;  quotient        8  [STACK] long long 
 17582 ;;  sign            1  [STACK] unsigned char 
 17583 ;;  counter         1  [STACK] unsigned char 
 17584 ;; Return value:  Size  Location     Type
 17585 ;;                  8  [STACK] long long 
 17586 ;; Registers used:
 17587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17588 ;; Tracked objects:
 17589 ;;		On entry : 0/3
 17590 ;;		On exit  : 0/0
 17591 ;;		Unchanged: 0/0
 17592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17597 ;;Total ram usage:        0 bytes
 17598 ;; Hardware stack levels used:    1
 17599 ;; Hardware stack levels required when called:    7
 17600 ;; This function calls:
 17601 ;;		Nothing
 17602 ;; This function is called by:
 17603 ;;		_dtoa
 17604 ;; This function uses a reentrant model
 17605 ;;
 17606                           
 17607                           	psect	text64
 17608  0158B0                     __ptext64:
 17609                           	opt callstack 0
 17610  0158B0                     ___aodiv:
 17611                           	opt callstack 0
 17612                           
 17613                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17614  0158B0  0E0A               	movlw	10
 17615  0158B2  26E1               	addwf	fsr1l,f,c
 17616  0158B4  0E00               	movlw	0
 17617  0158B6  22E2               	addwfc	fsr1h,f,c
 17618                           
 17619                           ;stkvar	_sign @ sp[(-10)+8]
 17620                           
 17621                           ;incstack = 0
 17622  0158B8  0EFE               	movlw	-2
 17623  0158BA  6AE3               	clrf	plusw1,c
 17624                           
 17625                           ;stkvar	_divisor @ sp[(-10)+-16]
 17626  0158BC  0EED               	movlw	-19
 17627  0158BE  AEE3               	btfss	plusw1,7,c
 17628  0158C0  D028               	goto	l6759
 17629                           
 17630                           ;stkvar	_divisor @ sp[(-10)+-16]
 17631                           ;stkvar	_divisor @ sp[(-10)+-16]
 17632  0158C2  0EE6               	movlw	-26
 17633  0158C4  6CE3               	negf	plusw1,c
 17634  0158C6  0EE7               	movlw	-25
 17635  0158C8  1EE3               	comf	plusw1,f,c
 17636  0158CA  0EE8               	movlw	-24
 17637  0158CC  1EE3               	comf	plusw1,f,c
 17638  0158CE  0EE9               	movlw	-23
 17639  0158D0  1EE3               	comf	plusw1,f,c
 17640  0158D2  0EEA               	movlw	-22
 17641  0158D4  1EE3               	comf	plusw1,f,c
 17642  0158D6  0EEB               	movlw	-21
 17643  0158D8  1EE3               	comf	plusw1,f,c
 17644  0158DA  0EEC               	movlw	-20
 17645  0158DC  1EE3               	comf	plusw1,f,c
 17646  0158DE  0EED               	movlw	-19
 17647  0158E0  1EE3               	comf	plusw1,f,c
 17648  0158E2  E314               	bnc	u5120
 17649  0158E4  0EE7               	movlw	-25
 17650  0158E6  2AE3               	incf	plusw1,f,c
 17651  0158E8  E311               	bnc	u5120
 17652  0158EA  0EE8               	movlw	-24
 17653  0158EC  2AE3               	incf	plusw1,f,c
 17654  0158EE  E30E               	bnc	u5120
 17655  0158F0  0EE9               	movlw	-23
 17656  0158F2  2AE3               	incf	plusw1,f,c
 17657  0158F4  E30B               	bnc	u5120
 17658  0158F6  0EEA               	movlw	-22
 17659  0158F8  2AE3               	incf	plusw1,f,c
 17660  0158FA  E308               	bnc	u5120
 17661  0158FC  0EEB               	movlw	-21
 17662  0158FE  2AE3               	incf	plusw1,f,c
 17663  015900  E305               	bnc	u5120
 17664  015902  0EEC               	movlw	-20
 17665  015904  2AE3               	incf	plusw1,f,c
 17666  015906  E302               	bnc	u5120
 17667  015908  0EED               	movlw	-19
 17668  01590A  2AE3               	incf	plusw1,f,c
 17669  01590C                     u5120:
 17670                           
 17671                           ;stkvar	_sign @ sp[(-10)+8]
 17672  01590C  0EFE               	movlw	-2
 17673  01590E  6AE3               	clrf	plusw1,c
 17674  015910  2AE3               	incf	plusw1,f,c
 17675  015912                     l6759:
 17676                           
 17677                           ;stkvar	_dividend @ sp[(-10)+-8]
 17678  015912  0EF5               	movlw	-11
 17679  015914  AEE3               	btfss	plusw1,7,c
 17680  015916  D027               	goto	l6765
 17681                           
 17682                           ;stkvar	_dividend @ sp[(-10)+-8]
 17683                           ;stkvar	_dividend @ sp[(-10)+-8]
 17684  015918  0EEE               	movlw	-18
 17685  01591A  6CE3               	negf	plusw1,c
 17686  01591C  0EEF               	movlw	-17
 17687  01591E  1EE3               	comf	plusw1,f,c
 17688  015920  0EF0               	movlw	-16
 17689  015922  1EE3               	comf	plusw1,f,c
 17690  015924  0EF1               	movlw	-15
 17691  015926  1EE3               	comf	plusw1,f,c
 17692  015928  0EF2               	movlw	-14
 17693  01592A  1EE3               	comf	plusw1,f,c
 17694  01592C  0EF3               	movlw	-13
 17695  01592E  1EE3               	comf	plusw1,f,c
 17696  015930  0EF4               	movlw	-12
 17697  015932  1EE3               	comf	plusw1,f,c
 17698  015934  0EF5               	movlw	-11
 17699  015936  1EE3               	comf	plusw1,f,c
 17700  015938  E314               	bnc	u5140
 17701  01593A  0EEF               	movlw	-17
 17702  01593C  2AE3               	incf	plusw1,f,c
 17703  01593E  E311               	bnc	u5140
 17704  015940  0EF0               	movlw	-16
 17705  015942  2AE3               	incf	plusw1,f,c
 17706  015944  E30E               	bnc	u5140
 17707  015946  0EF1               	movlw	-15
 17708  015948  2AE3               	incf	plusw1,f,c
 17709  01594A  E30B               	bnc	u5140
 17710  01594C  0EF2               	movlw	-14
 17711  01594E  2AE3               	incf	plusw1,f,c
 17712  015950  E308               	bnc	u5140
 17713  015952  0EF3               	movlw	-13
 17714  015954  2AE3               	incf	plusw1,f,c
 17715  015956  E305               	bnc	u5140
 17716  015958  0EF4               	movlw	-12
 17717  01595A  2AE3               	incf	plusw1,f,c
 17718  01595C  E302               	bnc	u5140
 17719  01595E  0EF5               	movlw	-11
 17720  015960  2AE3               	incf	plusw1,f,c
 17721  015962                     u5140:
 17722                           
 17723                           ;stkvar	_sign @ sp[(-10)+8]
 17724  015962  0EFE               	movlw	-2
 17725  015964  70E3               	btg	plusw1,0,c
 17726  015966                     l6765:
 17727                           
 17728                           ;stkvar	_quotient @ sp[(-10)+0]
 17729  015966  0E07               	movlw	7
 17730  015968  6E25               	movwf	btemp^0,c
 17731  01596A  0EF6               	movlw	-10
 17732  01596C                     u5151:
 17733  01596C  6AE3               	clrf	plusw1,c
 17734  01596E  2AE8               	incf	wreg,f,c
 17735  015970  0625               	decf	btemp^0,f,c
 17736  015972  E2FC               	bc	u5151
 17737                           
 17738                           ;stkvar	_divisor @ sp[(-10)+-16]
 17739  015974  0EE6               	movlw	-26
 17740  015976  50E3               	movf	plusw1,w,c
 17741  015978  E116               	bnz	u5160
 17742  01597A  0EE7               	movlw	-25
 17743  01597C  50E3               	movf	plusw1,w,c
 17744  01597E  E113               	bnz	u5160
 17745  015980  0EE8               	movlw	-24
 17746  015982  50E3               	movf	plusw1,w,c
 17747  015984  E110               	bnz	u5160
 17748  015986  0EE9               	movlw	-23
 17749  015988  50E3               	movf	plusw1,w,c
 17750  01598A  E10D               	bnz	u5160
 17751  01598C  0EEA               	movlw	-22
 17752  01598E  50E3               	movf	plusw1,w,c
 17753  015990  E10A               	bnz	u5160
 17754  015992  0EEB               	movlw	-21
 17755  015994  50E3               	movf	plusw1,w,c
 17756  015996  E107               	bnz	u5160
 17757  015998  0EEC               	movlw	-20
 17758  01599A  50E3               	movf	plusw1,w,c
 17759  01599C  E104               	bnz	u5160
 17760  01599E  0EED               	movlw	-19
 17761  0159A0  50E3               	movf	plusw1,w,c
 17762  0159A2  B4D8               	btfsc	status,2,c
 17763  0159A4  D088               	goto	u5190
 17764  0159A6                     u5160:
 17765                           
 17766                           ;stkvar	_counter @ sp[(-10)+9]
 17767  0159A6  0EFF               	movlw	-1
 17768  0159A8  6AE3               	clrf	plusw1,c
 17769  0159AA  D012               	goto	L19
 17770  0159AC                     l6771:
 17771                           
 17772                           ;stkvar	_divisor @ sp[(-10)+-16]
 17773  0159AC  90D8               	bcf	status,0,c
 17774  0159AE  0EE6               	movlw	-26
 17775  0159B0  36E3               	rlcf	plusw1,f,c
 17776  0159B2  0EE7               	movlw	-25
 17777  0159B4  36E3               	rlcf	plusw1,f,c
 17778  0159B6  0EE8               	movlw	-24
 17779  0159B8  36E3               	rlcf	plusw1,f,c
 17780  0159BA  0EE9               	movlw	-23
 17781  0159BC  36E3               	rlcf	plusw1,f,c
 17782  0159BE  0EEA               	movlw	-22
 17783  0159C0  36E3               	rlcf	plusw1,f,c
 17784  0159C2  0EEB               	movlw	-21
 17785  0159C4  36E3               	rlcf	plusw1,f,c
 17786  0159C6  0EEC               	movlw	-20
 17787  0159C8  36E3               	rlcf	plusw1,f,c
 17788  0159CA  0EED               	movlw	-19
 17789  0159CC  36E3               	rlcf	plusw1,f,c
 17790                           
 17791                           ;stkvar	_counter @ sp[(-10)+9]
 17792  0159CE  0EFF               	movlw	-1
 17793  0159D0                     L19:
 17794  0159D0  2AE3               	incf	plusw1,f,c
 17795                           
 17796                           ;stkvar	_divisor @ sp[(-10)+-16]
 17797  0159D2  0EED               	movlw	-19
 17798  0159D4  AEE3               	btfss	plusw1,7,c
 17799  0159D6  D7EA               	goto	l6771
 17800  0159D8                     u5170:
 17801                           
 17802                           ;stkvar	_quotient @ sp[(-10)+0]
 17803  0159D8  90D8               	bcf	status,0,c
 17804  0159DA  0EF6               	movlw	-10
 17805  0159DC  36E3               	rlcf	plusw1,f,c
 17806  0159DE  0EF7               	movlw	-9
 17807  0159E0  36E3               	rlcf	plusw1,f,c
 17808  0159E2  0EF8               	movlw	-8
 17809  0159E4  36E3               	rlcf	plusw1,f,c
 17810  0159E6  0EF9               	movlw	-7
 17811  0159E8  36E3               	rlcf	plusw1,f,c
 17812  0159EA  0EFA               	movlw	-6
 17813  0159EC  36E3               	rlcf	plusw1,f,c
 17814  0159EE  0EFB               	movlw	-5
 17815  0159F0  36E3               	rlcf	plusw1,f,c
 17816  0159F2  0EFC               	movlw	-4
 17817  0159F4  36E3               	rlcf	plusw1,f,c
 17818  0159F6  0EFD               	movlw	-3
 17819  0159F8  36E3               	rlcf	plusw1,f,c
 17820                           
 17821                           ;stkvar	_divisor @ sp[(-10)+-16]
 17822                           ;stkvar	_dividend @ sp[(-10)+-8]
 17823  0159FA  50E1               	movf	fsr1l,w,c
 17824  0159FC  0FEE               	addlw	-18
 17825  0159FE  6ED9               	movwf	fsr2l,c
 17826  015A00  50E2               	movf	fsr1h,w,c
 17827  015A02  6EDA               	movwf	fsr2h,c
 17828  015A04  0EFF               	movlw	255
 17829  015A06  22DA               	addwfc	fsr2h,f,c
 17830  015A08  0EE6               	movlw	-26
 17831  015A0A  50E3               	movf	plusw1,w,c
 17832  015A0C  5CDE               	subwf	postinc2,w,c
 17833  015A0E  0EE7               	movlw	-25
 17834  015A10  50E3               	movf	plusw1,w,c
 17835  015A12  58DE               	subwfb	postinc2,w,c
 17836  015A14  0EE8               	movlw	-24
 17837  015A16  50E3               	movf	plusw1,w,c
 17838  015A18  58DE               	subwfb	postinc2,w,c
 17839  015A1A  0EE9               	movlw	-23
 17840  015A1C  50E3               	movf	plusw1,w,c
 17841  015A1E  58DE               	subwfb	postinc2,w,c
 17842  015A20  0EEA               	movlw	-22
 17843  015A22  50E3               	movf	plusw1,w,c
 17844  015A24  58DE               	subwfb	postinc2,w,c
 17845  015A26  0EEB               	movlw	-21
 17846  015A28  50E3               	movf	plusw1,w,c
 17847  015A2A  58DE               	subwfb	postinc2,w,c
 17848  015A2C  0EEC               	movlw	-20
 17849  015A2E  50E3               	movf	plusw1,w,c
 17850  015A30  58DE               	subwfb	postinc2,w,c
 17851  015A32  0EED               	movlw	-19
 17852  015A34  50E3               	movf	plusw1,w,c
 17853  015A36  58DE               	subwfb	postinc2,w,c
 17854  015A38  A0D8               	btfss	status,0,c
 17855  015A3A  D021               	goto	l6783
 17856                           
 17857                           ;stkvar	_divisor @ sp[(-10)+-16]
 17858                           ;stkvar	_dividend @ sp[(-10)+-8]
 17859  015A3C  50E1               	movf	fsr1l,w,c
 17860  015A3E  0FEE               	addlw	-18
 17861  015A40  6ED9               	movwf	fsr2l,c
 17862  015A42  50E2               	movf	fsr1h,w,c
 17863  015A44  6EDA               	movwf	fsr2h,c
 17864  015A46  0EFF               	movlw	255
 17865  015A48  22DA               	addwfc	fsr2h,f,c
 17866  015A4A  0EE6               	movlw	-26
 17867  015A4C  50E3               	movf	plusw1,w,c
 17868  015A4E  5EDE               	subwf	postinc2,f,c
 17869  015A50  0EE7               	movlw	-25
 17870  015A52  50E3               	movf	plusw1,w,c
 17871  015A54  5ADE               	subwfb	postinc2,f,c
 17872  015A56  0EE8               	movlw	-24
 17873  015A58  50E3               	movf	plusw1,w,c
 17874  015A5A  5ADE               	subwfb	postinc2,f,c
 17875  015A5C  0EE9               	movlw	-23
 17876  015A5E  50E3               	movf	plusw1,w,c
 17877  015A60  5ADE               	subwfb	postinc2,f,c
 17878  015A62  0EEA               	movlw	-22
 17879  015A64  50E3               	movf	plusw1,w,c
 17880  015A66  5ADE               	subwfb	postinc2,f,c
 17881  015A68  0EEB               	movlw	-21
 17882  015A6A  50E3               	movf	plusw1,w,c
 17883  015A6C  5ADE               	subwfb	postinc2,f,c
 17884  015A6E  0EEC               	movlw	-20
 17885  015A70  50E3               	movf	plusw1,w,c
 17886  015A72  5ADE               	subwfb	postinc2,f,c
 17887  015A74  0EED               	movlw	-19
 17888  015A76  50E3               	movf	plusw1,w,c
 17889  015A78  5ADE               	subwfb	postinc2,f,c
 17890                           
 17891                           ;stkvar	_quotient @ sp[(-10)+0]
 17892  015A7A  0EF6               	movlw	-10
 17893  015A7C  80E3               	bsf	plusw1,0,c
 17894  015A7E                     l6783:
 17895                           
 17896                           ;stkvar	_divisor @ sp[(-10)+-16]
 17897  015A7E  90D8               	bcf	status,0,c
 17898  015A80  0EED               	movlw	-19
 17899  015A82  32E3               	rrcf	plusw1,f,c
 17900  015A84  0EEC               	movlw	-20
 17901  015A86  32E3               	rrcf	plusw1,f,c
 17902  015A88  0EEB               	movlw	-21
 17903  015A8A  32E3               	rrcf	plusw1,f,c
 17904  015A8C  0EEA               	movlw	-22
 17905  015A8E  32E3               	rrcf	plusw1,f,c
 17906  015A90  0EE9               	movlw	-23
 17907  015A92  32E3               	rrcf	plusw1,f,c
 17908  015A94  0EE8               	movlw	-24
 17909  015A96  32E3               	rrcf	plusw1,f,c
 17910  015A98  0EE7               	movlw	-25
 17911  015A9A  32E3               	rrcf	plusw1,f,c
 17912  015A9C  0EE6               	movlw	-26
 17913  015A9E  32E3               	rrcf	plusw1,f,c
 17914                           
 17915                           ;stkvar	_counter @ sp[(-10)+9]
 17916  015AA0  0EFF               	movlw	-1
 17917  015AA2  50E3               	movf	plusw1,w,c
 17918  015AA4  6E25               	movwf	btemp^0,c
 17919  015AA6  0E01               	movlw	1
 17920  015AA8  5E25               	subwf	btemp^0,f,c
 17921  015AAA  0EFF               	movlw	-1
 17922  015AAC  0060  F097  FFE3   	movff	btemp,plusw1
 17923  015AB2  A4D8               	btfss	status,2,c
 17924  015AB4  D791               	goto	u5170
 17925  015AB6                     u5190:
 17926                           
 17927                           ;stkvar	_sign @ sp[(-10)+8]
 17928  015AB6  0EFE               	movlw	-2
 17929  015AB8  50E3               	movf	plusw1,w,c
 17930  015ABA  B4D8               	btfsc	status,2,c
 17931  015ABC  D025               	goto	u5210
 17932                           
 17933                           ;stkvar	_quotient @ sp[(-10)+0]
 17934                           ;stkvar	_quotient @ sp[(-10)+0]
 17935  015ABE  0EF6               	movlw	-10
 17936  015AC0  6CE3               	negf	plusw1,c
 17937  015AC2  0EF7               	movlw	-9
 17938  015AC4  1EE3               	comf	plusw1,f,c
 17939  015AC6  0EF8               	movlw	-8
 17940  015AC8  1EE3               	comf	plusw1,f,c
 17941  015ACA  0EF9               	movlw	-7
 17942  015ACC  1EE3               	comf	plusw1,f,c
 17943  015ACE  0EFA               	movlw	-6
 17944  015AD0  1EE3               	comf	plusw1,f,c
 17945  015AD2  0EFB               	movlw	-5
 17946  015AD4  1EE3               	comf	plusw1,f,c
 17947  015AD6  0EFC               	movlw	-4
 17948  015AD8  1EE3               	comf	plusw1,f,c
 17949  015ADA  0EFD               	movlw	-3
 17950  015ADC  1EE3               	comf	plusw1,f,c
 17951  015ADE  E314               	bnc	u5210
 17952  015AE0  0EF7               	movlw	-9
 17953  015AE2  2AE3               	incf	plusw1,f,c
 17954  015AE4  E311               	bnc	u5210
 17955  015AE6  0EF8               	movlw	-8
 17956  015AE8  2AE3               	incf	plusw1,f,c
 17957  015AEA  E30E               	bnc	u5210
 17958  015AEC  0EF9               	movlw	-7
 17959  015AEE  2AE3               	incf	plusw1,f,c
 17960  015AF0  E30B               	bnc	u5210
 17961  015AF2  0EFA               	movlw	-6
 17962  015AF4  2AE3               	incf	plusw1,f,c
 17963  015AF6  E308               	bnc	u5210
 17964  015AF8  0EFB               	movlw	-5
 17965  015AFA  2AE3               	incf	plusw1,f,c
 17966  015AFC  E305               	bnc	u5210
 17967  015AFE  0EFC               	movlw	-4
 17968  015B00  2AE3               	incf	plusw1,f,c
 17969  015B02  E302               	bnc	u5210
 17970  015B04  0EFD               	movlw	-3
 17971  015B06  2AE3               	incf	plusw1,f,c
 17972  015B08                     u5210:
 17973                           
 17974                           ;stkvar	_quotient @ sp[(-10)+0]
 17975  015B08  0EF6               	movlw	246
 17976  015B0A  24E1               	addwf	fsr1l,w,c
 17977  015B0C  6ED9               	movwf	fsr2l,c
 17978  015B0E  0EFF               	movlw	255
 17979  015B10  20E2               	addwfc	fsr1h,w,c
 17980  015B12  6EDA               	movwf	fsr2h,c
 17981                           
 17982                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17983  015B14  0E08               	movlw	8
 17984  015B16  6E25               	movwf	btemp^0,c
 17985  015B18  0EEE               	movlw	-18
 17986  015B1A                     us522999:
 17987  015B1A  006F FF7B FFE3     	movff	postinc2,plusw1
 17988  015B20  28E8               	incf	wreg,w,c
 17989  015B22  2E25               	decfsz	btemp^0,f,c
 17990  015B24  D7FA               	bra	us522999
 17991                           
 17992                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17993  015B26  0EF6               	movlw	246
 17994  015B28  26E1               	addwf	fsr1l,f,c
 17995  015B2A  0EFF               	movlw	255
 17996  015B2C  22E2               	addwfc	fsr1h,f,c
 17997  015B2E  0012               	return		;funcret
 17998  015B30                     __end_of___aodiv:
 17999                           	opt callstack 0
 18000                           
 18001 ;; *************** function _ctoa *****************
 18002 ;; Defined at:
 18003 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18004 ;; Parameters:    Size  Location     Type
 18005 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18006 ;;		 -> f(6), NULL(0), 
 18007 ;;  c               1  [STACK] unsigned char 
 18008 ;; Auto vars:     Size  Location     Type
 18009 ;;  w               2  [STACK] int 
 18010 ;;  l               2    0        int 
 18011 ;; Return value:  Size  Location     Type
 18012 ;;                  2  [STACK] int 
 18013 ;; Registers used:
 18014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18015 ;; Tracked objects:
 18016 ;;		On entry : 0/0
 18017 ;;		On exit  : 0/0
 18018 ;;		Unchanged: 0/0
 18019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18024 ;;Total ram usage:        0 bytes
 18025 ;; Hardware stack levels used:    1
 18026 ;; Hardware stack levels required when called:   12
 18027 ;; This function calls:
 18028 ;;		_pad
 18029 ;; This function is called by:
 18030 ;;		_vfpfcnvrt
 18031 ;; This function uses a reentrant model
 18032 ;;
 18033                           
 18034                           	psect	text65
 18035  01815E                     __ptext65:
 18036                           	opt callstack 0
 18037  01815E                     _ctoa:
 18038                           	opt callstack 0
 18039                           
 18040                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18041  01815E  52E6               	movf	postinc1,f,c
 18042  018160  52E6               	movf	postinc1,f,c
 18043                           
 18044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18045                           
 18046                           ;incstack = 0
 18047  018162  500A               	movf	_width^0,w,c
 18048  018164  100B               	iorwf	(_width+1)^0,w,c
 18049  018166  A4D8               	btfss	status,2,c
 18050  018168  D009               	goto	l10099
 18051                           
 18052                           ;stkvar	_w @ sp[(-2)+0]
 18053  01816A  0EFE               	movlw	-2
 18054  01816C  0060  F02B  FFE3   	movff	_width,plusw1
 18055  018172  0EFF               	movlw	-1
 18056  018174  0060  F02F  FFE3   	movff	_width+1,plusw1
 18057  01817A  D016               	goto	l10101
 18058  01817C                     l10099:
 18059  01817C  0EFF               	movlw	255
 18060  01817E  6E2F               	movwf	(btemp+10)^0,c
 18061  018180  0EFF               	movlw	255
 18062  018182  6E30               	movwf	(btemp+11)^0,c
 18063  018184  0060  F028  F02D   	movff	_width,btemp+8
 18064  01818A  0060  F02C  F02E   	movff	_width+1,btemp+9
 18065  018190  502F               	movf	(btemp+10)^0,w,c
 18066  018192  262D               	addwf	(btemp+8)^0,f,c
 18067  018194  5030               	movf	(btemp+11)^0,w,c
 18068  018196  222E               	addwfc	(btemp+9)^0,f,c
 18069                           
 18070                           ;stkvar	_w @ sp[(-2)+0]
 18071  018198  0EFE               	movlw	-2
 18072  01819A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 18073  0181A0  0EFF               	movlw	-1
 18074  0181A2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 18075  0181A8                     l10101:
 18076                           
 18077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18078                           ;stkvar	_c @ sp[(-2)+-3]
 18079  0181A8  0EFB               	movlw	-5
 18080  0181AA  006F FF8C  F394    	movff	plusw1,_dbuf
 18081                           
 18082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18083  0181B0  0103               	movlb	3	; () banked
 18084  0181B2  6B95               	clrf	(_dbuf+1)& (0+255),b
 18085                           
 18086                           ; BSR set to: 3
 18087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18088                           ;stkvar	_w @ sp[(-2)+0]
 18089  0181B4  0EFE               	movlw	-2
 18090  0181B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18091  0181BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18092  0181C2  0E94               	movlw	low _dbuf
 18093  0181C4  6EE6               	movwf	postinc1,c
 18094  0181C6  0E03               	movlw	high _dbuf
 18095  0181C8  6EE6               	movwf	postinc1,c
 18096                           
 18097                           ;stkvar	_fp @ sp[(-6)+-2]
 18098  0181CA  0EF8               	movlw	-8
 18099  0181CC  006F FF8F FFE6     	movff	plusw1,postinc1
 18100  0181D2  006F FF8F FFE6     	movff	plusw1,postinc1
 18101  0181D8  ECE6  F0B8         	call	_pad	;wreg free
 18102                           
 18103                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18104  0181DC  0EFB               	movlw	251
 18105  0181DE  26E1               	addwf	fsr1l,f,c
 18106  0181E0  0EFF               	movlw	255
 18107  0181E2  22E2               	addwfc	fsr1h,f,c
 18108  0181E4  0012               	return		;funcret
 18109  0181E6                     __end_of_ctoa:
 18110                           	opt callstack 0
 18111                           
 18112 ;; *************** function _pad *****************
 18113 ;; Defined at:
 18114 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18115 ;; Parameters:    Size  Location     Type
 18116 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18117 ;;		 -> f(6), NULL(0), 
 18118 ;;  buf             2  [STACK] PTR unsigned char 
 18119 ;;		 -> dbuf(80), 
 18120 ;;  p               2  [STACK] int 
 18121 ;; Auto vars:     Size  Location     Type
 18122 ;;  w               2  [STACK] int 
 18123 ;;  i               2  [STACK] int 
 18124 ;; Return value:  Size  Location     Type
 18125 ;;                  2  [STACK] int 
 18126 ;; Registers used:
 18127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18128 ;; Tracked objects:
 18129 ;;		On entry : 0/3
 18130 ;;		On exit  : 0/0
 18131 ;;		Unchanged: 0/0
 18132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18137 ;;Total ram usage:        0 bytes
 18138 ;; Hardware stack levels used:    1
 18139 ;; Hardware stack levels required when called:   11
 18140 ;; This function calls:
 18141 ;;		_fputc
 18142 ;;		_fputs
 18143 ;;		_strlen
 18144 ;; This function is called by:
 18145 ;;		_ctoa
 18146 ;;		_dtoa
 18147 ;;		_efgtoa
 18148 ;;		_xtoa
 18149 ;; This function uses a reentrant model
 18150 ;;
 18151                           
 18152                           	psect	text66
 18153  0171CC                     __ptext66:
 18154                           	opt callstack 0
 18155  0171CC                     _pad:
 18156                           	opt callstack 0
 18157                           
 18158                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18159  0171CC  52E6               	movf	postinc1,f,c
 18160  0171CE  52E6               	movf	postinc1,f,c
 18161  0171D0  52E6               	movf	postinc1,f,c
 18162  0171D2  52E6               	movf	postinc1,f,c
 18163                           
 18164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18165                           
 18166                           ;incstack = 0
 18167  0171D4  A00E               	btfss	_flags^0,0,c
 18168  0171D6  D010               	goto	l10073
 18169                           
 18170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18171                           ;stkvar	_fp @ sp[(-4)+-2]
 18172  0171D8  0EFA               	movlw	-6
 18173  0171DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18174  0171E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18175                           
 18176                           ;stkvar	_buf @ sp[(-6)+-4]
 18177  0171E6  0EF6               	movlw	-10
 18178  0171E8  006F FF8F FFE6     	movff	plusw1,postinc1
 18179  0171EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18180  0171F4  EC89  F0BF         	call	_fputs	;wreg free
 18181  0171F8                     l10073:
 18182                           
 18183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18184                           ;stkvar	_p @ sp[(-4)+-6]
 18185  0171F8  0EF7               	movlw	-9
 18186  0171FA  BEE3               	btfsc	plusw1,7,c
 18187  0171FC  D011               	goto	l10077
 18188                           
 18189                           ;stkvar	_p @ sp[(-4)+-6]
 18190                           ;stkvar	_w @ sp[(-4)+0]
 18191  0171FE  0EF6               	movlw	-10
 18192  017200  006F FF8C  F025    	movff	plusw1,btemp
 18193  017206  0EFC               	movlw	-4
 18194  017208  0060  F097  FFE3   	movff	btemp,plusw1
 18195  01720E  0EF7               	movlw	-9
 18196  017210  006F FF8C  F025    	movff	plusw1,btemp
 18197  017216  0EFD               	movlw	-3
 18198  017218  0060  F097  FFE3   	movff	btemp,plusw1
 18199  01721E  D004               	goto	l1990
 18200  017220                     l10077:
 18201                           
 18202                           ;stkvar	_w @ sp[(-4)+0]
 18203  017220  0EFC               	movlw	-4
 18204  017222  6AE3               	clrf	plusw1,c
 18205  017224  0EFD               	movlw	-3
 18206  017226  6AE3               	clrf	plusw1,c
 18207  017228                     l1990:
 18208                           
 18209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18210                           ;stkvar	_i @ sp[(-4)+2]
 18211  017228  0EFE               	movlw	-2
 18212  01722A  6AE3               	clrf	plusw1,c
 18213  01722C  0EFF               	movlw	-1
 18214  01722E  6AE3               	clrf	plusw1,c
 18215                           
 18216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18217  017230  D01E               	goto	l10083
 18218  017232                     l10079:
 18219                           
 18220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18221                           ;stkvar	_fp @ sp[(-4)+-2]
 18222  017232  0EFA               	movlw	-6
 18223  017234  006F FF8F FFE6     	movff	plusw1,postinc1
 18224  01723A  006F FF8F FFE6     	movff	plusw1,postinc1
 18225  017240  0E20               	movlw	32
 18226  017242  6EE6               	movwf	postinc1,c
 18227  017244  0E00               	movlw	0
 18228  017246  6EE6               	movwf	postinc1,c
 18229  017248  ECC8  F0B7         	call	_fputc	;wreg free
 18230                           
 18231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18232                           ;stkvar	_i @ sp[(-4)+2]
 18233  01724C  0EFE               	movlw	-2
 18234  01724E  50E3               	movf	plusw1,w,c
 18235  017250  0F01               	addlw	1
 18236  017252  6E25               	movwf	btemp^0,c
 18237  017254  0EFE               	movlw	-2
 18238  017256  0060  F097  FFE3   	movff	btemp,plusw1
 18239  01725C  6A25               	clrf	btemp^0,c
 18240  01725E  0EFF               	movlw	-1
 18241  017260  50E3               	movf	plusw1,w,c
 18242  017262  2025               	addwfc	btemp^0,w,c
 18243  017264  6E25               	movwf	btemp^0,c
 18244  017266  0EFF               	movlw	-1
 18245  017268  0060  F097  FFE3   	movff	btemp,plusw1
 18246  01726E                     l10083:
 18247                           
 18248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18249                           ;stkvar	_w @ sp[(-4)+0]
 18250                           ;stkvar	_i @ sp[(-4)+2]
 18251  01726E  50E1               	movf	fsr1l,w,c
 18252  017270  0FFE               	addlw	-2
 18253  017272  6ED9               	movwf	fsr2l,c
 18254  017274  50E2               	movf	fsr1h,w,c
 18255  017276  6EDA               	movwf	fsr2h,c
 18256  017278  0EFF               	movlw	255
 18257  01727A  22DA               	addwfc	fsr2h,f,c
 18258  01727C  0EFC               	movlw	-4
 18259  01727E  50E3               	movf	plusw1,w,c
 18260  017280  5CDE               	subwf	postinc2,w,c
 18261  017282  50DE               	movf	postinc2,w,c
 18262  017284  0A80               	xorlw	128
 18263  017286  6E25               	movwf	btemp^0,c
 18264  017288  0EFD               	movlw	-3
 18265  01728A  50E3               	movf	plusw1,w,c
 18266  01728C  0A80               	xorlw	128
 18267  01728E  5825               	subwfb	btemp^0,w,c
 18268  017290  A0D8               	btfss	status,0,c
 18269  017292  D7CF               	goto	l10079
 18270                           
 18271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18272  017294  B00E               	btfsc	_flags^0,0,c
 18273  017296  D010               	goto	l10087
 18274                           
 18275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18276                           ;stkvar	_fp @ sp[(-4)+-2]
 18277  017298  0EFA               	movlw	-6
 18278  01729A  006F FF8F FFE6     	movff	plusw1,postinc1
 18279  0172A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18280                           
 18281                           ;stkvar	_buf @ sp[(-6)+-4]
 18282  0172A6  0EF6               	movlw	-10
 18283  0172A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18284  0172AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18285  0172B4  EC89  F0BF         	call	_fputs	;wreg free
 18286  0172B8                     l10087:
 18287                           
 18288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18289                           ;stkvar	_w @ sp[(-4)+0]
 18290                           ;stkvar	_buf @ sp[(-4)+-4]
 18291  0172B8  0EF8               	movlw	-8
 18292  0172BA  006F FF8F FFE6     	movff	plusw1,postinc1
 18293  0172C0  006F FF8F FFE6     	movff	plusw1,postinc1
 18294  0172C6  EC38  F0BF         	call	_strlen	;wreg free
 18295  0172CA  0EFC               	movlw	-4
 18296  0172CC  50E3               	movf	plusw1,w,c
 18297  0172CE  2625               	addwf	btemp^0,f,c
 18298  0172D0  0EFD               	movlw	-3
 18299  0172D2  50E3               	movf	plusw1,w,c
 18300  0172D4  2226               	addwfc	(btemp+1)^0,f,c
 18301                           
 18302                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18303  0172D6  0EF6               	movlw	246
 18304  0172D8  26E1               	addwf	fsr1l,f,c
 18305  0172DA  0EFF               	movlw	255
 18306  0172DC  22E2               	addwfc	fsr1h,f,c
 18307  0172DE  0012               	return		;funcret
 18308  0172E0                     __end_of_pad:
 18309                           	opt callstack 0
 18310                           
 18311 ;; *************** function _strlen *****************
 18312 ;; Defined at:
 18313 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18314 ;; Parameters:    Size  Location     Type
 18315 ;;  s               2  [STACK] PTR const unsigned char 
 18316 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18317 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18318 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18319 ;; Auto vars:     Size  Location     Type
 18320 ;;  a               2  [STACK] PTR const unsigned char 
 18321 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18322 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18323 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18324 ;; Return value:  Size  Location     Type
 18325 ;;                  2  [STACK] unsigned int 
 18326 ;; Registers used:
 18327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18328 ;; Tracked objects:
 18329 ;;		On entry : 0/0
 18330 ;;		On exit  : 0/0
 18331 ;;		Unchanged: 0/0
 18332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18337 ;;Total ram usage:        0 bytes
 18338 ;; Hardware stack levels used:    1
 18339 ;; Hardware stack levels required when called:    7
 18340 ;; This function calls:
 18341 ;;		Nothing
 18342 ;; This function is called by:
 18343 ;;		_eaDogM_WriteString
 18344 ;;		_pad
 18345 ;;		_stoa
 18346 ;; This function uses a reentrant model
 18347 ;;
 18348                           
 18349                           	psect	text67
 18350  017E70                     __ptext67:
 18351                           	opt callstack 0
 18352  017E70                     _strlen:
 18353                           	opt callstack 0
 18354                           
 18355                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18356  017E70  52E6               	movf	postinc1,f,c
 18357  017E72  52E6               	movf	postinc1,f,c
 18358                           
 18359                           ;stkvar	_s @ sp[(-2)+-2]
 18360                           
 18361                           ;incstack = 0
 18362  017E74  0EFC               	movlw	-4
 18363  017E76  006F FF8C  F02F    	movff	plusw1,btemp+10
 18364  017E7C  0EFD               	movlw	-3
 18365  017E7E  006F FF8C  F030    	movff	plusw1,btemp+11
 18366                           
 18367                           ;stkvar	_a @ sp[(-2)+0]
 18368  017E84  0EFF               	movlw	-1
 18369  017E86  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18370  017E8C  0EFE               	movlw	-2
 18371  017E8E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 18372  017E94  D011               	goto	l6597
 18373  017E96                     l6595:
 18374                           
 18375                           ;stkvar	_s @ sp[(-2)+-2]
 18376  017E96  0EFC               	movlw	-4
 18377  017E98  50E3               	movf	plusw1,w,c
 18378  017E9A  0F01               	addlw	1
 18379  017E9C  6E25               	movwf	btemp^0,c
 18380  017E9E  0EFC               	movlw	-4
 18381  017EA0  0060  F097  FFE3   	movff	btemp,plusw1
 18382  017EA6  6A25               	clrf	btemp^0,c
 18383  017EA8  0EFD               	movlw	-3
 18384  017EAA  50E3               	movf	plusw1,w,c
 18385  017EAC  2025               	addwfc	btemp^0,w,c
 18386  017EAE  6E25               	movwf	btemp^0,c
 18387  017EB0  0EFD               	movlw	-3
 18388  017EB2  0060  F097  FFE3   	movff	btemp,plusw1
 18389  017EB8                     l6597:
 18390                           
 18391                           ;stkvar	_s @ sp[(-2)+-2]
 18392  017EB8  0EFC               	movlw	-4
 18393  017EBA  006F FF8F FFF6     	movff	plusw1,tblptrl
 18394  017EC0  0EFD               	movlw	-3
 18395  017EC2  006F FF8F FFF7     	movff	plusw1,tblptrh
 18396  017EC8  0E00               	movlw	low (__mediumconst shr (0+16))
 18397  017ECA  6EF8               	movwf	tblptru,c
 18398  017ECC  0E1F               	movlw	(high __ramtop+-1)
 18399  017ECE  64F7               	cpfsgt	tblptrh,c
 18400  017ED0  D003               	bra	u4707
 18401  017ED2  0008               	tblrd		*
 18402  017ED4  50F5               	movf	tablat,w,c
 18403  017ED6  D007               	bra	u4700
 18404  017ED8                     u4707:
 18405  017ED8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18406  017EDE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18407  017EE4  50EF               	movf	indf0,w,c
 18408  017EE6                     u4700:
 18409  017EE6  0900               	iorlw	0
 18410  017EE8  A4D8               	btfss	status,2,c
 18411  017EEA  D7D5               	goto	l6595
 18412                           
 18413                           ;stkvar	_a @ sp[(-2)+0]
 18414                           ;stkvar	_s @ sp[(-2)+-2]
 18415  017EEC  0EFC               	movlw	-4
 18416  017EEE  006F FF8C  F025    	movff	plusw1,btemp
 18417  017EF4  0EFD               	movlw	-3
 18418  017EF6  006F FF8C  F026    	movff	plusw1,btemp+1
 18419  017EFC  0EFE               	movlw	-2
 18420  017EFE  50E3               	movf	plusw1,w,c
 18421  017F00  5E25               	subwf	btemp^0,f,c
 18422  017F02  0EFF               	movlw	-1
 18423  017F04  50E3               	movf	plusw1,w,c
 18424  017F06  5A26               	subwfb	(btemp+1)^0,f,c
 18425                           
 18426                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18427  017F08  52E5               	movf	postdec1,f,c
 18428  017F0A  52E5               	movf	postdec1,f,c
 18429  017F0C  52E5               	movf	postdec1,f,c
 18430  017F0E  52E5               	movf	postdec1,f,c
 18431  017F10  0012               	return		;funcret
 18432  017F12                     __end_of_strlen:
 18433                           	opt callstack 0
 18434                           
 18435 ;; *************** function _fputs *****************
 18436 ;; Defined at:
 18437 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18438 ;; Parameters:    Size  Location     Type
 18439 ;;  s               2  [STACK] PTR const unsigned char 
 18440 ;;		 -> dbuf(80), 
 18441 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18442 ;;		 -> f(6), NULL(0), 
 18443 ;; Auto vars:     Size  Location     Type
 18444 ;;  i               2  [STACK] int 
 18445 ;;  c               1  [STACK] unsigned char 
 18446 ;; Return value:  Size  Location     Type
 18447 ;;                  2  [STACK] int 
 18448 ;; Registers used:
 18449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18450 ;; Tracked objects:
 18451 ;;		On entry : 0/3
 18452 ;;		On exit  : 0/0
 18453 ;;		Unchanged: 0/0
 18454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18459 ;;Total ram usage:        0 bytes
 18460 ;; Hardware stack levels used:    1
 18461 ;; Hardware stack levels required when called:   10
 18462 ;; This function calls:
 18463 ;;		_fputc
 18464 ;; This function is called by:
 18465 ;;		_pad
 18466 ;; This function uses a reentrant model
 18467 ;;
 18468                           
 18469                           	psect	text68
 18470  017F12                     __ptext68:
 18471                           	opt callstack 0
 18472  017F12                     _fputs:
 18473                           	opt callstack 0
 18474                           
 18475                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18476  017F12  52E6               	movf	postinc1,f,c
 18477  017F14  52E6               	movf	postinc1,f,c
 18478  017F16  52E6               	movf	postinc1,f,c
 18479                           
 18480                           ;stkvar	_i @ sp[(-3)+0]
 18481                           
 18482                           ;incstack = 0
 18483  017F18  0EFD               	movlw	-3
 18484  017F1A  6AE3               	clrf	plusw1,c
 18485  017F1C  0EFE               	movlw	-2
 18486  017F1E  6AE3               	clrf	plusw1,c
 18487  017F20  D01F               	goto	l10067
 18488  017F22                     l10063:
 18489                           
 18490                           ;stkvar	_fp @ sp[(-3)+-4]
 18491  017F22  0EF9               	movlw	-7
 18492  017F24  006F FF8F FFE6     	movff	plusw1,postinc1
 18493  017F2A  006F FF8F FFE6     	movff	plusw1,postinc1
 18494                           
 18495                           ;stkvar	_c @ sp[(-5)+2]
 18496  017F30  0EFD               	movlw	-3
 18497  017F32  50E3               	movf	plusw1,w,c
 18498  017F34  6EE6               	movwf	postinc1,c
 18499  017F36  0E00               	movlw	0
 18500  017F38  6EE6               	movwf	postinc1,c
 18501  017F3A  ECC8  F0B7         	call	_fputc	;wreg free
 18502                           
 18503                           ;stkvar	_i @ sp[(-3)+0]
 18504  017F3E  0EFD               	movlw	-3
 18505  017F40  50E3               	movf	plusw1,w,c
 18506  017F42  0F01               	addlw	1
 18507  017F44  6E25               	movwf	btemp^0,c
 18508  017F46  0EFD               	movlw	-3
 18509  017F48  0060  F097  FFE3   	movff	btemp,plusw1
 18510  017F4E  6A25               	clrf	btemp^0,c
 18511  017F50  0EFE               	movlw	-2
 18512  017F52  50E3               	movf	plusw1,w,c
 18513  017F54  2025               	addwfc	btemp^0,w,c
 18514  017F56  6E25               	movwf	btemp^0,c
 18515  017F58  0EFE               	movlw	-2
 18516  017F5A  0060  F097  FFE3   	movff	btemp,plusw1
 18517  017F60                     l10067:
 18518                           
 18519                           ;stkvar	_i @ sp[(-3)+0]
 18520  017F60  0EFD               	movlw	-3
 18521  017F62  006F FF8C  F02F    	movff	plusw1,btemp+10
 18522  017F68  0EFE               	movlw	-2
 18523  017F6A  006F FF8C  F030    	movff	plusw1,btemp+11
 18524                           
 18525                           ;stkvar	_s @ sp[(-3)+-2]
 18526  017F70  0EFB               	movlw	-5
 18527  017F72  006F FF8C  F02D    	movff	plusw1,btemp+8
 18528  017F78  0EFC               	movlw	-4
 18529  017F7A  006F FF8C  F02E    	movff	plusw1,btemp+9
 18530  017F80  502F               	movf	(btemp+10)^0,w,c
 18531  017F82  242D               	addwf	(btemp+8)^0,w,c
 18532  017F84  6ED9               	movwf	fsr2l,c
 18533  017F86  5030               	movf	(btemp+11)^0,w,c
 18534  017F88  202E               	addwfc	(btemp+9)^0,w,c
 18535  017F8A  6EDA               	movwf	fsr2h,c
 18536  017F8C  50DF               	movf	indf2,w,c
 18537  017F8E  6E30               	movwf	(btemp+11)^0,c
 18538                           
 18539                           ;stkvar	_c @ sp[(-3)+2]
 18540  017F90  0EFF               	movlw	-1
 18541  017F92  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18542  017F98  0EFF               	movlw	-1
 18543  017F9A  50E3               	movf	plusw1,w,c
 18544  017F9C  A4D8               	btfss	status,2,c
 18545  017F9E  D7C1               	goto	l10063
 18546                           
 18547                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18548  017FA0  0EF9               	movlw	249
 18549  017FA2  26E1               	addwf	fsr1l,f,c
 18550  017FA4  0EFF               	movlw	255
 18551  017FA6  22E2               	addwfc	fsr1h,f,c
 18552  017FA8  0012               	return		;funcret
 18553  017FAA                     __end_of_fputs:
 18554                           	opt callstack 0
 18555                           
 18556 ;; *************** function _fputc *****************
 18557 ;; Defined at:
 18558 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18559 ;; Parameters:    Size  Location     Type
 18560 ;;  c               2  [STACK] int 
 18561 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18562 ;;		 -> f(6), NULL(0), 
 18563 ;; Auto vars:     Size  Location     Type
 18564 ;;		None
 18565 ;; Return value:  Size  Location     Type
 18566 ;;                  2  [STACK] int 
 18567 ;; Registers used:
 18568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18569 ;; Tracked objects:
 18570 ;;		On entry : 0/0
 18571 ;;		On exit  : 0/0
 18572 ;;		Unchanged: 0/0
 18573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18578 ;;Total ram usage:        0 bytes
 18579 ;; Hardware stack levels used:    1
 18580 ;; Hardware stack levels required when called:    9
 18581 ;; This function calls:
 18582 ;;		_putch
 18583 ;; This function is called by:
 18584 ;;		_pad
 18585 ;;		_stoa
 18586 ;;		_vfpfcnvrt
 18587 ;;		_fputs
 18588 ;; This function uses a reentrant model
 18589 ;;
 18590                           
 18591                           	psect	text69
 18592  016F90                     __ptext69:
 18593                           	opt callstack 0
 18594  016F90                     _fputc:
 18595                           	opt callstack 12
 18596                           
 18597                           ;stkvar	_fp @ sp[(0)+-4]
 18598                           
 18599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18600                           ;incstack = 0
 18601  016F90  0EFC               	movlw	-4
 18602  016F92  006F FF8C  F025    	movff	plusw1,btemp
 18603  016F98  0EFD               	movlw	-3
 18604  016F9A  50E3               	movf	plusw1,w,c
 18605  016F9C  1025               	iorwf	btemp^0,w,c
 18606  016F9E  B4D8               	btfsc	status,2,c
 18607  016FA0  D009               	goto	u9280
 18608                           
 18609                           ;stkvar	_fp @ sp[(0)+-4]
 18610  016FA2  0EFC               	movlw	-4
 18611  016FA4  006F FF8C  F025    	movff	plusw1,btemp
 18612  016FAA  0EFD               	movlw	-3
 18613  016FAC  50E3               	movf	plusw1,w,c
 18614  016FAE  1025               	iorwf	btemp^0,w,c
 18615  016FB0  A4D8               	btfss	status,2,c
 18616  016FB2  D006               	goto	l10051
 18617  016FB4                     u9280:
 18618                           
 18619                           ;stkvar	_c @ sp[(0)+-2]
 18620  016FB4  0EFE               	movlw	-2
 18621  016FB6  50E3               	movf	plusw1,w,c
 18622  016FB8  6EE6               	movwf	postinc1,c
 18623  016FBA  EC3E  F0CA         	call	_putch	;wreg free
 18624  016FBE  D075               	goto	l3008
 18625  016FC0                     l10051:
 18626                           
 18627                           ;stkvar	_fp @ sp[(0)+-4]
 18628  016FC0  0EFC               	movlw	-4
 18629  016FC2  006F FF8C  F02F    	movff	plusw1,btemp+10
 18630  016FC8  0EFD               	movlw	-3
 18631  016FCA  006F FF8C  F030    	movff	plusw1,btemp+11
 18632  016FD0  0E04               	movlw	4
 18633  016FD2  242F               	addwf	(btemp+10)^0,w,c
 18634  016FD4  6ED9               	movwf	fsr2l,c
 18635  016FD6  0E00               	movlw	0
 18636  016FD8  2030               	addwfc	(btemp+11)^0,w,c
 18637  016FDA  6EDA               	movwf	fsr2h,c
 18638  016FDC  50DE               	movf	postinc2,w,c
 18639  016FDE  10DE               	iorwf	postinc2,w,c
 18640  016FE0  B4D8               	btfsc	status,2,c
 18641  016FE2  D026               	goto	u9300
 18642                           
 18643                           ;stkvar	_fp @ sp[(0)+-4]
 18644  016FE4  0EFC               	movlw	-4
 18645  016FE6  006F FF8C  F02F    	movff	plusw1,btemp+10
 18646  016FEC  0EFD               	movlw	-3
 18647  016FEE  006F FF8C  F030    	movff	plusw1,btemp+11
 18648  016FF4  0E04               	movlw	4
 18649  016FF6  242F               	addwf	(btemp+10)^0,w,c
 18650  016FF8  6ED9               	movwf	fsr2l,c
 18651  016FFA  0E00               	movlw	0
 18652  016FFC  2030               	addwfc	(btemp+11)^0,w,c
 18653  016FFE  6EDA               	movwf	fsr2h,c
 18654                           
 18655                           ;stkvar	_fp @ sp[(0)+-4]
 18656  017000  0EFC               	movlw	-4
 18657  017002  006F FF8C  F02F    	movff	plusw1,btemp+10
 18658  017008  0EFD               	movlw	-3
 18659  01700A  006F FF8C  F030    	movff	plusw1,btemp+11
 18660  017010  0E02               	movlw	2
 18661  017012  242F               	addwf	(btemp+10)^0,w,c
 18662  017014  6EE9               	movwf	fsr0l,c
 18663  017016  0E00               	movlw	0
 18664  017018  2030               	addwfc	(btemp+11)^0,w,c
 18665  01701A  6EEA               	movwf	fsr0h,c
 18666  01701C  50DE               	movf	postinc2,w,c
 18667  01701E  5CEE               	subwf	postinc0,w,c
 18668  017020  50EE               	movf	postinc0,w,c
 18669  017022  0A80               	xorlw	128
 18670  017024  6E25               	movwf	btemp^0,c
 18671  017026  50DE               	movf	postinc2,w,c
 18672  017028  0A80               	xorlw	128
 18673  01702A  5825               	subwfb	btemp^0,w,c
 18674  01702C  B0D8               	btfsc	status,0,c
 18675  01702E  D03D               	goto	l3008
 18676  017030                     u9300:
 18677                           
 18678                           ;stkvar	_c @ sp[(0)+-2]
 18679                           ;stkvar	_fp @ sp[(0)+-4]
 18680  017030  0EFC               	movlw	-4
 18681  017032  006F FF8C  F02F    	movff	plusw1,btemp+10
 18682  017038  0EFD               	movlw	-3
 18683  01703A  006F FF8C  F030    	movff	plusw1,btemp+11
 18684  017040  0E02               	movlw	2
 18685  017042  242F               	addwf	(btemp+10)^0,w,c
 18686  017044  6ED9               	movwf	fsr2l,c
 18687  017046  0E00               	movlw	0
 18688  017048  2030               	addwfc	(btemp+11)^0,w,c
 18689  01704A  6EDA               	movwf	fsr2h,c
 18690  01704C  006F FF78  F02F    	movff	postinc2,btemp+10
 18691  017052  006F FF74  F030    	movff	postdec2,btemp+11
 18692                           
 18693                           ;stkvar	_fp @ sp[(0)+-4]
 18694  017058  0EFC               	movlw	-4
 18695  01705A  006F FF8F FFD9     	movff	plusw1,fsr2l
 18696  017060  0EFD               	movlw	-3
 18697  017062  006F FF8F FFDA     	movff	plusw1,fsr2h
 18698  017068  006F FF78  F02D    	movff	postinc2,btemp+8
 18699  01706E  006F FF74  F02E    	movff	postdec2,btemp+9
 18700  017074  502F               	movf	(btemp+10)^0,w,c
 18701  017076  242D               	addwf	(btemp+8)^0,w,c
 18702  017078  6ED9               	movwf	fsr2l,c
 18703  01707A  5030               	movf	(btemp+11)^0,w,c
 18704  01707C  202E               	addwfc	(btemp+9)^0,w,c
 18705  01707E  6EDA               	movwf	fsr2h,c
 18706  017080  0EFE               	movlw	-2
 18707  017082  006F FF8F FFDF     	movff	plusw1,indf2
 18708                           
 18709                           ;stkvar	_fp @ sp[(0)+-4]
 18710  017088  0EFC               	movlw	-4
 18711  01708A  006F FF8C  F02F    	movff	plusw1,btemp+10
 18712  017090  0EFD               	movlw	-3
 18713  017092  006F FF8C  F030    	movff	plusw1,btemp+11
 18714  017098  0E02               	movlw	2
 18715  01709A  242F               	addwf	(btemp+10)^0,w,c
 18716  01709C  6ED9               	movwf	fsr2l,c
 18717  01709E  0E00               	movlw	0
 18718  0170A0  2030               	addwfc	(btemp+11)^0,w,c
 18719  0170A2  6EDA               	movwf	fsr2h,c
 18720  0170A4  2ADE               	incf	postinc2,f,c
 18721  0170A6  0E00               	movlw	0
 18722  0170A8  22DD               	addwfc	postdec2,f,c
 18723  0170AA                     l3008:
 18724                           
 18725                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18726  0170AA  52E5               	movf	postdec1,f,c
 18727  0170AC  52E5               	movf	postdec1,f,c
 18728  0170AE  52E5               	movf	postdec1,f,c
 18729  0170B0  52E5               	movf	postdec1,f,c
 18730  0170B2  0012               	return		;funcret
 18731  0170B4                     __end_of_fputc:
 18732                           	opt callstack 0
 18733                           
 18734 ;; *************** function _putch *****************
 18735 ;; Defined at:
 18736 ;;		line 168 in file "eadog.c"
 18737 ;; Parameters:    Size  Location     Type
 18738 ;;  c               1  [STACK] unsigned char 
 18739 ;; Auto vars:     Size  Location     Type
 18740 ;;		None
 18741 ;; Return value:  Size  Location     Type
 18742 ;;                  1  [STACK] void 
 18743 ;; Registers used:
 18744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18745 ;; Tracked objects:
 18746 ;;		On entry : 0/0
 18747 ;;		On exit  : 0/0
 18748 ;;		Unchanged: 0/0
 18749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18754 ;;Total ram usage:        0 bytes
 18755 ;; Hardware stack levels used:    1
 18756 ;; Hardware stack levels required when called:    8
 18757 ;; This function calls:
 18758 ;;		_ringBufS_put_dma
 18759 ;; This function is called by:
 18760 ;;		_fputc
 18761 ;; This function uses a reentrant model
 18762 ;;
 18763                           
 18764                           	psect	text70
 18765  01947C                     __ptext70:
 18766                           	opt callstack 0
 18767  01947C                     _putch:
 18768                           	opt callstack 12
 18769                           
 18770                           ;eadog.c: 168: void putch(char c);eadog.c: 169: {;eadog.c: 170:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18771                           ;stkvar	_c @ sp[(0)+-1]
 18772                           
 18773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18774                           ;incstack = 0
 18775  01947C  0EFF               	movlw	-1
 18776  01947E  50E3               	movf	plusw1,w,c
 18777  019480  6EE6               	movwf	postinc1,c
 18778  019482  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 18779  019488  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 18780  01948E  EC90  F0BE         	call	_ringBufS_put_dma	;wreg free
 18781                           
 18782                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18783  019492  52E5               	movf	postdec1,f,c
 18784  019494  0012               	return		;funcret
 18785  019496                     __end_of_putch:
 18786                           	opt callstack 0
 18787                           
 18788 ;; *************** function _ringBufS_put_dma *****************
 18789 ;; Defined at:
 18790 ;;		line 67 in file "ringbufs.c"
 18791 ;; Parameters:    Size  Location     Type
 18792 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18793 ;;		 -> ring_buf1(67), 
 18794 ;;  c               1  [STACK] const unsigned char 
 18795 ;; Auto vars:     Size  Location     Type
 18796 ;;		None
 18797 ;; Return value:  Size  Location     Type
 18798 ;;                  1  [STACK] void 
 18799 ;; Registers used:
 18800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18801 ;; Tracked objects:
 18802 ;;		On entry : 0/0
 18803 ;;		On exit  : 0/0
 18804 ;;		Unchanged: 0/0
 18805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18810 ;;Total ram usage:        0 bytes
 18811 ;; Hardware stack levels used:    1
 18812 ;; Hardware stack levels required when called:    7
 18813 ;; This function calls:
 18814 ;;		Nothing
 18815 ;; This function is called by:
 18816 ;;		_putch
 18817 ;; This function uses a reentrant model
 18818 ;;
 18819                           
 18820                           	psect	text71
 18821  017D20                     __ptext71:
 18822                           	opt callstack 0
 18823  017D20                     _ringBufS_put_dma:
 18824                           	opt callstack 12
 18825                           
 18826                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18827                           ;stkvar	__this @ sp[(0)+-2]
 18828                           
 18829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18830                           ;incstack = 0
 18831  017D20  0EFE               	movlw	-2
 18832  017D22  006F FF8C  F02F    	movff	plusw1,btemp+10
 18833  017D28  0EFF               	movlw	-1
 18834  017D2A  006F FF8C  F030    	movff	plusw1,btemp+11
 18835  017D30  0E42               	movlw	66
 18836  017D32  242F               	addwf	(btemp+10)^0,w,c
 18837  017D34  6ED9               	movwf	fsr2l,c
 18838  017D36  0E00               	movlw	0
 18839  017D38  2030               	addwfc	(btemp+11)^0,w,c
 18840  017D3A  6EDA               	movwf	fsr2h,c
 18841  017D3C  0E40               	movlw	64
 18842  017D3E  60DF               	cpfslt	indf2,c
 18843  017D40  D040               	goto	l1580
 18844                           
 18845                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18846                           ;stkvar	_c @ sp[(0)+-3]
 18847                           ;stkvar	__this @ sp[(0)+-2]
 18848  017D42  0EFE               	movlw	-2
 18849  017D44  006F FF8C  F02F    	movff	plusw1,btemp+10
 18850  017D4A  0EFF               	movlw	-1
 18851  017D4C  006F FF8C  F030    	movff	plusw1,btemp+11
 18852  017D52  0E40               	movlw	64
 18853  017D54  242F               	addwf	(btemp+10)^0,w,c
 18854  017D56  6ED9               	movwf	fsr2l,c
 18855  017D58  0E00               	movlw	0
 18856  017D5A  2030               	addwfc	(btemp+11)^0,w,c
 18857  017D5C  6EDA               	movwf	fsr2h,c
 18858  017D5E  50DF               	movf	indf2,w,c
 18859  017D60  6E30               	movwf	(btemp+11)^0,c
 18860                           
 18861                           ;stkvar	__this @ sp[(0)+-2]
 18862  017D62  0EFE               	movlw	-2
 18863  017D64  006F FF8C  F02D    	movff	plusw1,btemp+8
 18864  017D6A  0EFF               	movlw	-1
 18865  017D6C  006F FF8C  F02E    	movff	plusw1,btemp+9
 18866  017D72  5030               	movf	(btemp+11)^0,w,c
 18867  017D74  242D               	addwf	(btemp+8)^0,w,c
 18868  017D76  6ED9               	movwf	fsr2l,c
 18869  017D78  0E00               	movlw	0
 18870  017D7A  202E               	addwfc	(btemp+9)^0,w,c
 18871  017D7C  6EDA               	movwf	fsr2h,c
 18872  017D7E  0EFD               	movlw	-3
 18873  017D80  006F FF8F FFDF     	movff	plusw1,indf2
 18874                           
 18875                           ;ringbufs.c: 71:   ++_this->head;
 18876                           ;stkvar	__this @ sp[(0)+-2]
 18877  017D86  0EFE               	movlw	-2
 18878  017D88  006F FF8C  F02F    	movff	plusw1,btemp+10
 18879  017D8E  0EFF               	movlw	-1
 18880  017D90  006F FF8C  F030    	movff	plusw1,btemp+11
 18881  017D96  0E40               	movlw	64
 18882  017D98  242F               	addwf	(btemp+10)^0,w,c
 18883  017D9A  6ED9               	movwf	fsr2l,c
 18884  017D9C  0E00               	movlw	0
 18885  017D9E  2030               	addwfc	(btemp+11)^0,w,c
 18886  017DA0  6EDA               	movwf	fsr2h,c
 18887  017DA2  2ADF               	incf	indf2,f,c
 18888                           
 18889                           ;ringbufs.c: 72:   ++_this->count;
 18890                           ;stkvar	__this @ sp[(0)+-2]
 18891  017DA4  0EFE               	movlw	-2
 18892  017DA6  006F FF8C  F02F    	movff	plusw1,btemp+10
 18893  017DAC  0EFF               	movlw	-1
 18894  017DAE  006F FF8C  F030    	movff	plusw1,btemp+11
 18895  017DB4  0E42               	movlw	66
 18896  017DB6  242F               	addwf	(btemp+10)^0,w,c
 18897  017DB8  6ED9               	movwf	fsr2l,c
 18898  017DBA  0E00               	movlw	0
 18899  017DBC  2030               	addwfc	(btemp+11)^0,w,c
 18900  017DBE  6EDA               	movwf	fsr2h,c
 18901  017DC0  2ADF               	incf	indf2,f,c
 18902  017DC2                     l1580:
 18903                           
 18904                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18905  017DC2  52E5               	movf	postdec1,f,c
 18906  017DC4  52E5               	movf	postdec1,f,c
 18907  017DC6  52E5               	movf	postdec1,f,c
 18908  017DC8  0012               	return		;funcret
 18909  017DCA                     __end_of_ringBufS_put_dma:
 18910                           	opt callstack 0
 18911                           
 18912 ;; *************** function _atoi *****************
 18913 ;; Defined at:
 18914 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18915 ;; Parameters:    Size  Location     Type
 18916 ;;  s               2  [STACK] PTR const unsigned char 
 18917 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18918 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18919 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18920 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18921 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18922 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
 18923 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18924 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18925 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18926 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18927 ;; Auto vars:     Size  Location     Type
 18928 ;;  n               2  [STACK] int 
 18929 ;;  neg             2  [STACK] int 
 18930 ;; Return value:  Size  Location     Type
 18931 ;;                  2  [STACK] int 
 18932 ;; Registers used:
 18933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18943 ;;Total ram usage:        0 bytes
 18944 ;; Hardware stack levels used:    1
 18945 ;; Hardware stack levels required when called:    8
 18946 ;; This function calls:
 18947 ;;		_isdigit
 18948 ;;		_isspace
 18949 ;; This function is called by:
 18950 ;;		_vfpfcnvrt
 18951 ;; This function uses a reentrant model
 18952 ;;
 18953                           
 18954                           	psect	text72
 18955  015B30                     __ptext72:
 18956                           	opt callstack 0
 18957  015B30                     _atoi:
 18958                           	opt callstack 0
 18959                           
 18960                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18961  015B30  0E09               	movlw	9
 18962  015B32  26E1               	addwf	fsr1l,f,c
 18963  015B34  0E00               	movlw	0
 18964  015B36  22E2               	addwfc	fsr1h,f,c
 18965                           
 18966                           ;stkvar	_n @ sp[(-9)+5]
 18967                           
 18968                           ;incstack = 0
 18969  015B38  0EFC               	movlw	-4
 18970  015B3A  6AE3               	clrf	plusw1,c
 18971  015B3C  0EFD               	movlw	-3
 18972  015B3E  6AE3               	clrf	plusw1,c
 18973                           
 18974                           ;stkvar	_neg @ sp[(-9)+7]
 18975  015B40  0EFE               	movlw	-2
 18976  015B42  6AE3               	clrf	plusw1,c
 18977  015B44  0EFF               	movlw	-1
 18978  015B46  6AE3               	clrf	plusw1,c
 18979  015B48  D011               	goto	l7469
 18980  015B4A                     l7467:
 18981                           
 18982                           ;stkvar	_s @ sp[(-9)+-2]
 18983  015B4A  0EF5               	movlw	-11
 18984  015B4C  50E3               	movf	plusw1,w,c
 18985  015B4E  0F01               	addlw	1
 18986  015B50  6E25               	movwf	btemp^0,c
 18987  015B52  0EF5               	movlw	-11
 18988  015B54  0060  F097  FFE3   	movff	btemp,plusw1
 18989  015B5A  6A25               	clrf	btemp^0,c
 18990  015B5C  0EF6               	movlw	-10
 18991  015B5E  50E3               	movf	plusw1,w,c
 18992  015B60  2025               	addwfc	btemp^0,w,c
 18993  015B62  6E25               	movwf	btemp^0,c
 18994  015B64  0EF6               	movlw	-10
 18995  015B66  0060  F097  FFE3   	movff	btemp,plusw1
 18996  015B6C                     l7469:
 18997                           
 18998                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 18999  015B6C  0EFB               	movlw	-5
 19000  015B6E  6AE3               	clrf	plusw1,c
 19001  015B70  2AE3               	incf	plusw1,f,c
 19002                           
 19003                           ;stkvar	_s @ sp[(-9)+-2]
 19004  015B72  50E1               	movf	fsr1l,w,c
 19005  015B74  0FF5               	addlw	-11
 19006  015B76  6ED9               	movwf	fsr2l,c
 19007  015B78  50E2               	movf	fsr1h,w,c
 19008  015B7A  6EDA               	movwf	fsr2h,c
 19009  015B7C  0EFF               	movlw	255
 19010  015B7E  22DA               	addwfc	fsr2h,f,c
 19011  015B80  006F FF7B FFF6     	movff	postinc2,tblptrl
 19012  015B86  006F FF77 FFF7     	movff	postdec2,tblptrh
 19013  015B8C                     	if	0	;tblptru may be non-zero
 19014  015B8C                     	endif
 19015  015B8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19016  015B8C  0E00               	movlw	low (__mediumconst shr (0+16))
 19017  015B8E  6EF8               	movwf	tblptru,c
 19018  015B90                     	endif
 19019  015B90  0008               	tblrd		*
 19020  015B92  50F5               	movf	tablat,w,c
 19021  015B94  0A20               	xorlw	32
 19022  015B96  B4D8               	btfsc	status,2,c
 19023  015B98  D023               	goto	l7477
 19024  015B9A  0EF7               	movlw	247
 19025  015B9C  6E2F               	movwf	(btemp+10)^0,c
 19026  015B9E  0EFF               	movlw	255
 19027  015BA0  6E30               	movwf	(btemp+11)^0,c
 19028                           
 19029                           ;stkvar	_s @ sp[(-9)+-2]
 19030  015BA2  50E1               	movf	fsr1l,w,c
 19031  015BA4  0FF5               	addlw	-11
 19032  015BA6  6ED9               	movwf	fsr2l,c
 19033  015BA8  50E2               	movf	fsr1h,w,c
 19034  015BAA  6EDA               	movwf	fsr2h,c
 19035  015BAC  0EFF               	movlw	255
 19036  015BAE  22DA               	addwfc	fsr2h,f,c
 19037  015BB0  006F FF7B FFF6     	movff	postinc2,tblptrl
 19038  015BB6  006F FF77 FFF7     	movff	postdec2,tblptrh
 19039  015BBC                     	if	0	;tblptru may be non-zero
 19040  015BBC                     	endif
 19041  015BBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19042  015BBC  0E00               	movlw	low (__mediumconst shr (0+16))
 19043  015BBE  6EF8               	movwf	tblptru,c
 19044  015BC0                     	endif
 19045  015BC0  0008               	tblrd		*
 19046  015BC2  50F5               	movf	tablat,w,c
 19047  015BC4  6E2D               	movwf	(btemp+8)^0,c
 19048  015BC6  6A2E               	clrf	(btemp+9)^0,c
 19049  015BC8  502F               	movf	(btemp+10)^0,w,c
 19050  015BCA  262D               	addwf	(btemp+8)^0,f,c
 19051  015BCC  5030               	movf	(btemp+11)^0,w,c
 19052  015BCE  222E               	addwfc	(btemp+9)^0,f,c
 19053  015BD0  502E               	movf	(btemp+9)^0,w,c
 19054  015BD2  E104               	bnz	u6530
 19055  015BD4  0E05               	movlw	5
 19056  015BD6  5C2D               	subwf	(btemp+8)^0,w,c
 19057  015BD8  A0D8               	btfss	status,0,c
 19058  015BDA  D002               	goto	l7477
 19059  015BDC                     u6530:
 19060                           
 19061                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19062  015BDC  0EFB               	movlw	-5
 19063  015BDE  6AE3               	clrf	plusw1,c
 19064  015BE0                     l7477:
 19065                           
 19066                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19067  015BE0  0EFB               	movlw	-5
 19068  015BE2  50E3               	movf	plusw1,w,c
 19069  015BE4  6E2F               	movwf	(btemp+10)^0,c
 19070  015BE6  6A30               	clrf	(btemp+11)^0,c
 19071                           
 19072                           ;stkvar	_atoi$5517 @ sp[(-9)+2]
 19073  015BE8  0EF9               	movlw	-7
 19074  015BEA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19075  015BF0  0EFA               	movlw	-6
 19076  015BF2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19077                           
 19078                           ;stkvar	_atoi$5517 @ sp[(-9)+2]
 19079  015BF8  0EF9               	movlw	-7
 19080  015BFA  006F FF8C  F025    	movff	plusw1,btemp
 19081  015C00  0EFA               	movlw	-6
 19082  015C02  50E3               	movf	plusw1,w,c
 19083  015C04  1025               	iorwf	btemp^0,w,c
 19084  015C06  B4D8               	btfsc	status,2,c
 19085  015C08  D01F               	goto	l7487
 19086  015C0A  D79F               	goto	l7467
 19087  015C0C                     l7483:
 19088  015C0C  0E01               	movlw	1
 19089  015C0E  6E2F               	movwf	(btemp+10)^0,c
 19090  015C10  0E00               	movlw	0
 19091  015C12  6E30               	movwf	(btemp+11)^0,c
 19092                           
 19093                           ;stkvar	_neg @ sp[(-9)+7]
 19094  015C14  0EFE               	movlw	-2
 19095  015C16  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19096  015C1C  0EFF               	movlw	-1
 19097  015C1E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19098  015C24                     l7485:
 19099                           
 19100                           ;stkvar	_s @ sp[(-9)+-2]
 19101  015C24  0EF5               	movlw	-11
 19102  015C26  50E3               	movf	plusw1,w,c
 19103  015C28  0F01               	addlw	1
 19104  015C2A  6E25               	movwf	btemp^0,c
 19105  015C2C  0EF5               	movlw	-11
 19106  015C2E  0060  F097  FFE3   	movff	btemp,plusw1
 19107  015C34  6A25               	clrf	btemp^0,c
 19108  015C36  0EF6               	movlw	-10
 19109  015C38  50E3               	movf	plusw1,w,c
 19110  015C3A  2025               	addwfc	btemp^0,w,c
 19111  015C3C  6E25               	movwf	btemp^0,c
 19112  015C3E  0EF6               	movlw	-10
 19113  015C40  0060  F097  FFE3   	movff	btemp,plusw1
 19114  015C46  D053               	goto	l7493
 19115  015C48                     l7487:
 19116                           
 19117                           ;stkvar	_s @ sp[(-9)+-2]
 19118  015C48  50E1               	movf	fsr1l,w,c
 19119  015C4A  0FF5               	addlw	-11
 19120  015C4C  6ED9               	movwf	fsr2l,c
 19121  015C4E  50E2               	movf	fsr1h,w,c
 19122  015C50  6EDA               	movwf	fsr2h,c
 19123  015C52  0EFF               	movlw	255
 19124  015C54  22DA               	addwfc	fsr2h,f,c
 19125  015C56  006F FF7B FFF6     	movff	postinc2,tblptrl
 19126  015C5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19127  015C62                     	if	0	;tblptru may be non-zero
 19128  015C62                     	endif
 19129  015C62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19130  015C62  0E00               	movlw	low (__mediumconst shr (0+16))
 19131  015C64  6EF8               	movwf	tblptru,c
 19132  015C66                     	endif
 19133  015C66  0008               	tblrd		*
 19134  015C68  50F5               	movf	tablat,w,c
 19135  015C6A  6E2F               	movwf	(btemp+10)^0,c
 19136  015C6C  6A30               	clrf	(btemp+11)^0,c
 19137                           
 19138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19139                           ; Switch size 1, requested type "simple"
 19140                           ; Number of cases is 1, Range of values is 0 to 0
 19141                           ; switch strategies available:
 19142                           ; Name         Instructions Cycles
 19143                           ; simple_byte            4     3 (average)
 19144                           ;	Chosen strategy is simple_byte
 19145  015C6E  5030               	movf	(btemp+11)^0,w,c
 19146  015C70  0A00               	xorlw	0	; case 0
 19147  015C72  A4D8               	btfss	status,2,c
 19148  015C74  D03C               	goto	l7493
 19149                           
 19150                           ; Switch size 1, requested type "simple"
 19151                           ; Number of cases is 2, Range of values is 43 to 45
 19152                           ; switch strategies available:
 19153                           ; Name         Instructions Cycles
 19154                           ; simple_byte            7     4 (average)
 19155                           ;	Chosen strategy is simple_byte
 19156  015C76  502F               	movf	(btemp+10)^0,w,c
 19157  015C78  0A2B               	xorlw	43	; case 43
 19158  015C7A  B4D8               	btfsc	status,2,c
 19159  015C7C  D7D3               	goto	l7485
 19160  015C7E  0A06               	xorlw	6	; case 45
 19161  015C80  B4D8               	btfsc	status,2,c
 19162  015C82  D7C4               	goto	l7483
 19163  015C84  D034               	goto	l7493
 19164  015C86                     l7489:
 19165                           
 19166                           ;stkvar	_n @ sp[(-9)+5]
 19167  015C86  0EFC               	movlw	-4
 19168  015C88  006F FF8C  F02F    	movff	plusw1,btemp+10
 19169  015C8E  0EFD               	movlw	-3
 19170  015C90  006F FF8C  F030    	movff	plusw1,btemp+11
 19171  015C96  0E0A               	movlw	10
 19172  015C98  022F               	mulwf	(btemp+10)^0,c
 19173  015C9A  006F FFCC  F02D    	movff	prodl,btemp+8
 19174  015CA0  006F FFD0  F02E    	movff	prodh,btemp+9
 19175  015CA6  0230               	mulwf	(btemp+11)^0,c
 19176  015CA8  50F3               	movf	prodl,w,c
 19177  015CAA  262E               	addwf	(btemp+9)^0,f,c
 19178                           
 19179                           ;stkvar	_s @ sp[(-9)+-2]
 19180  015CAC  50E1               	movf	fsr1l,w,c
 19181  015CAE  0FF5               	addlw	-11
 19182  015CB0  6ED9               	movwf	fsr2l,c
 19183  015CB2  50E2               	movf	fsr1h,w,c
 19184  015CB4  6EDA               	movwf	fsr2h,c
 19185  015CB6  0EFF               	movlw	255
 19186  015CB8  22DA               	addwfc	fsr2h,f,c
 19187  015CBA  006F FF7B FFF6     	movff	postinc2,tblptrl
 19188  015CC0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19189  015CC6                     	if	0	;tblptru may be non-zero
 19190  015CC6                     	endif
 19191  015CC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19192  015CC6  0E00               	movlw	low (__mediumconst shr (0+16))
 19193  015CC8  6EF8               	movwf	tblptru,c
 19194  015CCA                     	endif
 19195  015CCA  0008               	tblrd		*
 19196  015CCC  50F5               	movf	tablat,w,c
 19197  015CCE  5E2D               	subwf	(btemp+8)^0,f,c
 19198  015CD0  0E00               	movlw	0
 19199  015CD2  5A2E               	subwfb	(btemp+9)^0,f,c
 19200  015CD4  0E30               	movlw	48
 19201  015CD6  262D               	addwf	(btemp+8)^0,f,c
 19202  015CD8  0E00               	movlw	0
 19203  015CDA  222E               	addwfc	(btemp+9)^0,f,c
 19204                           
 19205                           ;stkvar	_n @ sp[(-9)+5]
 19206  015CDC  0EFC               	movlw	-4
 19207  015CDE  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 19208  015CE4  0EFD               	movlw	-3
 19209  015CE6  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 19210  015CEC  D79B               	goto	l7485
 19211  015CEE                     l7493:
 19212  015CEE  0ED0               	movlw	208
 19213  015CF0  6E2F               	movwf	(btemp+10)^0,c
 19214  015CF2  0EFF               	movlw	255
 19215  015CF4  6E30               	movwf	(btemp+11)^0,c
 19216                           
 19217                           ;stkvar	_s @ sp[(-9)+-2]
 19218  015CF6  50E1               	movf	fsr1l,w,c
 19219  015CF8  0FF5               	addlw	-11
 19220  015CFA  6ED9               	movwf	fsr2l,c
 19221  015CFC  50E2               	movf	fsr1h,w,c
 19222  015CFE  6EDA               	movwf	fsr2h,c
 19223  015D00  0EFF               	movlw	255
 19224  015D02  22DA               	addwfc	fsr2h,f,c
 19225  015D04  006F FF7B FFF6     	movff	postinc2,tblptrl
 19226  015D0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 19227  015D10                     	if	0	;tblptru may be non-zero
 19228  015D10                     	endif
 19229  015D10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19230  015D10  0E00               	movlw	low (__mediumconst shr (0+16))
 19231  015D12  6EF8               	movwf	tblptru,c
 19232  015D14                     	endif
 19233  015D14  0008               	tblrd		*
 19234  015D16  50F5               	movf	tablat,w,c
 19235  015D18  6E2D               	movwf	(btemp+8)^0,c
 19236  015D1A  6A2E               	clrf	(btemp+9)^0,c
 19237  015D1C  502F               	movf	(btemp+10)^0,w,c
 19238  015D1E  262D               	addwf	(btemp+8)^0,f,c
 19239  015D20  5030               	movf	(btemp+11)^0,w,c
 19240  015D22  222E               	addwfc	(btemp+9)^0,f,c
 19241  015D24  502E               	movf	(btemp+9)^0,w,c
 19242  015D26  E106               	bnz	u6550
 19243  015D28  0E0A               	movlw	10
 19244  015D2A  5C2D               	subwf	(btemp+8)^0,w,c
 19245  015D2C  B0D8               	btfsc	status,0,c
 19246  015D2E  D002               	goto	u6550
 19247  015D30  0E01               	movlw	1
 19248  015D32  D001               	goto	u6560
 19249  015D34                     u6550:
 19250  015D34  0E00               	movlw	0
 19251  015D36                     u6560:
 19252  015D36  6E2F               	movwf	(btemp+10)^0,c
 19253  015D38  6A30               	clrf	(btemp+11)^0,c
 19254                           
 19255                           ;stkvar	_atoi$5519 @ sp[(-9)+0]
 19256  015D3A  0EF7               	movlw	-9
 19257  015D3C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19258  015D42  0EF8               	movlw	-8
 19259  015D44  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19260                           
 19261                           ;stkvar	_atoi$5519 @ sp[(-9)+0]
 19262  015D4A  0EF7               	movlw	-9
 19263  015D4C  006F FF8C  F025    	movff	plusw1,btemp
 19264  015D52  0EF8               	movlw	-8
 19265  015D54  50E3               	movf	plusw1,w,c
 19266  015D56  1025               	iorwf	btemp^0,w,c
 19267  015D58  A4D8               	btfss	status,2,c
 19268  015D5A  D795               	goto	l7489
 19269                           
 19270                           ;stkvar	_neg @ sp[(-9)+7]
 19271  015D5C  0EFE               	movlw	-2
 19272  015D5E  006F FF8C  F025    	movff	plusw1,btemp
 19273  015D64  0EFF               	movlw	-1
 19274  015D66  50E3               	movf	plusw1,w,c
 19275  015D68  1025               	iorwf	btemp^0,w,c
 19276  015D6A  A4D8               	btfss	status,2,c
 19277  015D6C  D00E               	goto	l7503
 19278                           
 19279                           ;stkvar	_n @ sp[(-9)+5]
 19280  015D6E  0EFC               	movlw	-4
 19281  015D70  006F FF8C  F025    	movff	plusw1,btemp
 19282  015D76  1E25               	comf	btemp^0,f,c
 19283  015D78  0EFD               	movlw	-3
 19284  015D7A  006F FF8C  F026    	movff	plusw1,btemp+1
 19285  015D80  1E26               	comf	(btemp+1)^0,f,c
 19286  015D82  2A25               	incf	btemp^0,f,c
 19287  015D84  B4D8               	btfsc	status,2,c
 19288  015D86  2A26               	incf	(btemp+1)^0,f,c
 19289  015D88  D008               	goto	l2944
 19290  015D8A                     l7503:
 19291                           
 19292                           ;stkvar	_n @ sp[(-9)+5]
 19293  015D8A  0EFC               	movlw	-4
 19294  015D8C  006F FF8C  F025    	movff	plusw1,btemp
 19295  015D92  0EFD               	movlw	-3
 19296  015D94  006F FF8C  F026    	movff	plusw1,btemp+1
 19297  015D9A                     l2944:
 19298                           
 19299                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19300  015D9A  0EF5               	movlw	245
 19301  015D9C  26E1               	addwf	fsr1l,f,c
 19302  015D9E  0EFF               	movlw	255
 19303  015DA0  22E2               	addwfc	fsr1h,f,c
 19304  015DA2  0012               	return		;funcret
 19305  015DA4                     __end_of_atoi:
 19306                           	opt callstack 0
 19307                           
 19308 ;; *************** function _isspace *****************
 19309 ;; Defined at:
 19310 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19311 ;; Parameters:    Size  Location     Type
 19312 ;;  c               2  [STACK] int 
 19313 ;; Auto vars:     Size  Location     Type
 19314 ;;		None
 19315 ;; Return value:  Size  Location     Type
 19316 ;;                  2  [STACK] int 
 19317 ;; Registers used:
 19318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19319 ;; Tracked objects:
 19320 ;;		On entry : 0/0
 19321 ;;		On exit  : 0/0
 19322 ;;		Unchanged: 0/0
 19323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19328 ;;Total ram usage:        0 bytes
 19329 ;; Hardware stack levels used:    1
 19330 ;; Hardware stack levels required when called:    7
 19331 ;; This function calls:
 19332 ;;		Nothing
 19333 ;; This function is called by:
 19334 ;;		_atoi
 19335 ;; This function uses a reentrant model
 19336 ;;
 19337                           
 19338                           	psect	text73
 19339  01885C                     __ptext73:
 19340                           	opt callstack 0
 19341  01885C                     _isspace:
 19342                           	opt callstack 0
 19343                           
 19344                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19345  01885C  52E6               	movf	postinc1,f,c
 19346                           
 19347                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19348                           
 19349                           ;incstack = 0
 19350  01885E  0EFF               	movlw	-1
 19351  018860  6AE3               	clrf	plusw1,c
 19352  018862  2AE3               	incf	plusw1,f,c
 19353                           
 19354                           ;stkvar	_c @ sp[(-1)+-2]
 19355  018864  0EFD               	movlw	-3
 19356  018866  006F FF8C  F025    	movff	plusw1,btemp
 19357  01886C  0E20               	movlw	32
 19358  01886E  1825               	xorwf	btemp^0,w,c
 19359  018870  E104               	bnz	u5520
 19360  018872  0EFE               	movlw	-2
 19361  018874  50E3               	movf	plusw1,w,c
 19362  018876  B4D8               	btfsc	status,2,c
 19363  018878  D012               	goto	l6953
 19364  01887A                     u5520:
 19365                           
 19366                           ;stkvar	_c @ sp[(-1)+-2]
 19367  01887A  0EFD               	movlw	-3
 19368  01887C  50E3               	movf	plusw1,w,c
 19369  01887E  0FF7               	addlw	247
 19370  018880  6E2F               	movwf	(btemp+10)^0,c
 19371  018882  0EFE               	movlw	-2
 19372  018884  006F FF8C  F030    	movff	plusw1,btemp+11
 19373  01888A  0EFF               	movlw	255
 19374  01888C  2230               	addwfc	(btemp+11)^0,f,c
 19375  01888E  5030               	movf	(btemp+11)^0,w,c
 19376  018890  E104               	bnz	u5530
 19377  018892  0E05               	movlw	5
 19378  018894  5C2F               	subwf	(btemp+10)^0,w,c
 19379  018896  A0D8               	btfss	status,0,c
 19380  018898  D002               	goto	l6953
 19381  01889A                     u5530:
 19382                           
 19383                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19384  01889A  0EFF               	movlw	-1
 19385  01889C  6AE3               	clrf	plusw1,c
 19386  01889E                     l6953:
 19387                           
 19388                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19389  01889E  0EFF               	movlw	-1
 19390  0188A0  50E3               	movf	plusw1,w,c
 19391  0188A2  6E25               	movwf	btemp^0,c
 19392  0188A4  6A26               	clrf	(btemp+1)^0,c
 19393                           
 19394                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19395  0188A6  52E5               	movf	postdec1,f,c
 19396  0188A8  52E5               	movf	postdec1,f,c
 19397  0188AA  52E5               	movf	postdec1,f,c
 19398  0188AC  0012               	return		;funcret
 19399  0188AE                     __end_of_isspace:
 19400                           	opt callstack 0
 19401                           
 19402 ;; *************** function _isdigit *****************
 19403 ;; Defined at:
 19404 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19405 ;; Parameters:    Size  Location     Type
 19406 ;;  c               2  [STACK] int 
 19407 ;; Auto vars:     Size  Location     Type
 19408 ;;		None
 19409 ;; Return value:  Size  Location     Type
 19410 ;;                  2  [STACK] int 
 19411 ;; Registers used:
 19412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19413 ;; Tracked objects:
 19414 ;;		On entry : 0/0
 19415 ;;		On exit  : 0/0
 19416 ;;		Unchanged: 0/0
 19417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19422 ;;Total ram usage:        0 bytes
 19423 ;; Hardware stack levels used:    1
 19424 ;; Hardware stack levels required when called:    7
 19425 ;; This function calls:
 19426 ;;		Nothing
 19427 ;; This function is called by:
 19428 ;;		_vfpfcnvrt
 19429 ;;		_atoi
 19430 ;; This function uses a reentrant model
 19431 ;;
 19432                           
 19433                           	psect	text74
 19434  018E40                     __ptext74:
 19435                           	opt callstack 0
 19436  018E40                     _isdigit:
 19437                           	opt callstack 17
 19438                           
 19439                           ;stkvar	_c @ sp[(0)+-2]
 19440                           
 19441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19442                           ;incstack = 0
 19443  018E40  0EFE               	movlw	-2
 19444  018E42  50E3               	movf	plusw1,w,c
 19445  018E44  0FD0               	addlw	208
 19446  018E46  6E2F               	movwf	(btemp+10)^0,c
 19447  018E48  0EFF               	movlw	-1
 19448  018E4A  006F FF8C  F030    	movff	plusw1,btemp+11
 19449  018E50  0EFF               	movlw	255
 19450  018E52  2230               	addwfc	(btemp+11)^0,f,c
 19451  018E54  5030               	movf	(btemp+11)^0,w,c
 19452  018E56  E106               	bnz	u5090
 19453  018E58  0E0A               	movlw	10
 19454  018E5A  5C2F               	subwf	(btemp+10)^0,w,c
 19455  018E5C  B0D8               	btfsc	status,0,c
 19456  018E5E  D002               	goto	u5090
 19457  018E60  0E01               	movlw	1
 19458  018E62  D001               	goto	u5100
 19459  018E64                     u5090:
 19460  018E64  0E00               	movlw	0
 19461  018E66                     u5100:
 19462  018E66  6E25               	movwf	btemp^0,c
 19463  018E68  6A26               	clrf	(btemp+1)^0,c
 19464                           
 19465                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19466  018E6A  52E5               	movf	postdec1,f,c
 19467  018E6C  52E5               	movf	postdec1,f,c
 19468  018E6E  0012               	return		;funcret
 19469  018E70                     __end_of_isdigit:
 19470                           	opt callstack 0
 19471                           
 19472 ;; *************** function _set_vterm *****************
 19473 ;; Defined at:
 19474 ;;		line 107 in file "mconfig.c"
 19475 ;; Parameters:    Size  Location     Type
 19476 ;;  vterm           1  [STACK] const unsigned char 
 19477 ;; Auto vars:     Size  Location     Type
 19478 ;;		None
 19479 ;; Return value:  Size  Location     Type
 19480 ;;                  1  [STACK] unsigned char 
 19481 ;; Registers used:
 19482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19483 ;; Tracked objects:
 19484 ;;		On entry : 0/1
 19485 ;;		On exit  : 0/0
 19486 ;;		Unchanged: 0/0
 19487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19492 ;;Total ram usage:        0 bytes
 19493 ;; Hardware stack levels used:    1
 19494 ;; Hardware stack levels required when called:    7
 19495 ;; This function calls:
 19496 ;;		Nothing
 19497 ;; This function is called by:
 19498 ;;		_main
 19499 ;;		_check_help
 19500 ;; This function uses a reentrant model
 19501 ;;
 19502                           
 19503                           	psect	text75
 19504  0193E8                     __ptext75:
 19505                           	opt callstack 0
 19506  0193E8                     _set_vterm:
 19507                           	opt callstack 23
 19508                           
 19509                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19510                           ;stkvar	_vterm @ sp[(0)+-1]
 19511                           
 19512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19513                           ;incstack = 0
 19514  0193E8  0EFF               	movlw	-1
 19515  0193EA  006F FF8C  F030    	movff	plusw1,btemp+11
 19516  0193F0  0E03               	movlw	3
 19517  0193F2  1630               	andwf	(btemp+11)^0,f,c
 19518  0193F4  EE22  F01F         	lfsr	2,_D+288
 19519  0193F8  50DF               	movf	223,w,c
 19520  0193FA  1830               	xorwf	(btemp+11)^0,w,c
 19521  0193FC  0BFE               	andlw	-2
 19522  0193FE  1830               	xorwf	(btemp+11)^0,w,c
 19523  019400  6EDF               	movwf	223,c
 19524                           
 19525                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19526  019402  52E5               	movf	postdec1,f,c
 19527  019404  0012               	return		;funcret
 19528  019406                     __end_of_set_vterm:
 19529                           	opt callstack 0
 19530                           
 19531 ;; *************** function _set_temp_display_help *****************
 19532 ;; Defined at:
 19533 ;;		line 211 in file "mconfig.c"
 19534 ;; Parameters:    Size  Location     Type
 19535 ;;  new_response    1  [STACK] const enum E16518
 19536 ;; Auto vars:     Size  Location     Type
 19537 ;;		None
 19538 ;; Return value:  Size  Location     Type
 19539 ;;                  1  [STACK] enum E16518
 19540 ;; Registers used:
 19541 ;;		wreg, fsr1l, fsr1h
 19542 ;; Tracked objects:
 19543 ;;		On entry : 0/2
 19544 ;;		On exit  : 3F/2
 19545 ;;		Unchanged: 0/0
 19546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19551 ;;Total ram usage:        0 bytes
 19552 ;; Hardware stack levels used:    1
 19553 ;; Hardware stack levels required when called:    7
 19554 ;; This function calls:
 19555 ;;		Nothing
 19556 ;; This function is called by:
 19557 ;;		_check_help
 19558 ;; This function uses a reentrant model
 19559 ;;
 19560                           
 19561                           	psect	text76
 19562  01955C                     __ptext76:
 19563                           	opt callstack 0
 19564  01955C                     _set_temp_display_help:
 19565                           	opt callstack 22
 19566                           
 19567                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19568                           
 19569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19570                           ;incstack = 0
 19571  01955C  0102               	movlb	2	; () banked
 19572  01955E  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19573                           
 19574                           ; BSR set to: 2
 19575                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19576                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19577  019560  0EFF               	movlw	-1
 19578  019562  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19579                           
 19580                           ; BSR set to: 2
 19581                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19582  019568  52E5               	movf	postdec1,f,c
 19583  01956A  0012               	return		;funcret
 19584  01956C                     __end_of_set_temp_display_help:
 19585                           	opt callstack 0
 19586                           
 19587 ;; *************** function _set_display_info *****************
 19588 ;; Defined at:
 19589 ;;		line 200 in file "mconfig.c"
 19590 ;; Parameters:    Size  Location     Type
 19591 ;;  new_response    1  [STACK] const enum E16518
 19592 ;; Auto vars:     Size  Location     Type
 19593 ;;		None
 19594 ;; Return value:  Size  Location     Type
 19595 ;;                  1  [STACK] enum E17003
 19596 ;; Registers used:
 19597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19598 ;; Tracked objects:
 19599 ;;		On entry : 0/1
 19600 ;;		On exit  : 0/0
 19601 ;;		Unchanged: 0/0
 19602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19607 ;;Total ram usage:        0 bytes
 19608 ;; Hardware stack levels used:    1
 19609 ;; Hardware stack levels required when called:    8
 19610 ;; This function calls:
 19611 ;;		_TimerDone
 19612 ;; This function is called by:
 19613 ;;		_main
 19614 ;;		_check_help
 19615 ;; This function uses a reentrant model
 19616 ;;
 19617                           
 19618                           	psect	text77
 19619  019406                     __ptext77:
 19620                           	opt callstack 0
 19621  019406                     _set_display_info:
 19622                           	opt callstack 22
 19623                           
 19624                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19625                           
 19626                           ; BSR set to: 2
 19627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19628                           ;incstack = 0
 19629  019406  0E07               	movlw	7
 19630  019408  6EE6               	movwf	postinc1,c
 19631  01940A  ECF7  F0C7         	call	_TimerDone	;wreg free
 19632  01940E  5025               	movf	btemp^0,w,c
 19633  019410  B4D8               	btfsc	status,2,c
 19634  019412  D006               	goto	l1717
 19635                           
 19636                           ;mconfig.c: 205:   old_info = V.response.info;
 19637  019414  0102               	movlb	2	; () banked
 19638  019416  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19639                           
 19640                           ; BSR set to: 2
 19641                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19642                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19643  019418  0EFF               	movlw	-1
 19644  01941A  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19645  019420                     l1717:
 19646                           
 19647                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19648  019420  52E5               	movf	postdec1,f,c
 19649  019422  0012               	return		;funcret
 19650  019424                     __end_of_set_display_info:
 19651                           	opt callstack 0
 19652                           
 19653 ;; *************** function _mode_lamp_dim *****************
 19654 ;; Defined at:
 19655 ;;		line 13 in file "mconfig.c"
 19656 ;; Parameters:    Size  Location     Type
 19657 ;;  level           2  [STACK] const unsigned short 
 19658 ;; Auto vars:     Size  Location     Type
 19659 ;;		None
 19660 ;; Return value:  Size  Location     Type
 19661 ;;                  1  [STACK] void 
 19662 ;; Registers used:
 19663 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19664 ;; Tracked objects:
 19665 ;;		On entry : 0/2
 19666 ;;		On exit  : 0/0
 19667 ;;		Unchanged: 0/0
 19668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19673 ;;Total ram usage:        0 bytes
 19674 ;; Hardware stack levels used:    1
 19675 ;; Hardware stack levels required when called:    8
 19676 ;; This function calls:
 19677 ;;		_PWM8_LoadDutyValue
 19678 ;; This function is called by:
 19679 ;;		_main
 19680 ;;		_check_help
 19681 ;; This function uses a reentrant model
 19682 ;;
 19683                           
 19684                           	psect	text78
 19685  0194B2                     __ptext78:
 19686                           	opt callstack 0
 19687  0194B2                     _mode_lamp_dim:
 19688                           	opt callstack 22
 19689                           
 19690                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19691                           ;stkvar	_level @ sp[(0)+-2]
 19692                           
 19693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19694                           ;incstack = 0
 19695  0194B2  0EFE               	movlw	-2
 19696  0194B4  006F FF8F FFE6     	movff	plusw1,postinc1
 19697  0194BA  006F FF8F FFE6     	movff	plusw1,postinc1
 19698  0194C0  EC75  F0C5         	call	_PWM8_LoadDutyValue	;wreg free
 19699                           
 19700                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19701  0194C4  52E5               	movf	postdec1,f,c
 19702  0194C6  52E5               	movf	postdec1,f,c
 19703  0194C8  0012               	return		;funcret
 19704  0194CA                     __end_of_mode_lamp_dim:
 19705                           	opt callstack 0
 19706                           
 19707 ;; *************** function _mode_lamp_bright *****************
 19708 ;; Defined at:
 19709 ;;		line 18 in file "mconfig.c"
 19710 ;; Parameters:    Size  Location     Type
 19711 ;;		None
 19712 ;; Auto vars:     Size  Location     Type
 19713 ;;		None
 19714 ;; Return value:  Size  Location     Type
 19715 ;;                  1  [STACK] void 
 19716 ;; Registers used:
 19717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19718 ;; Tracked objects:
 19719 ;;		On entry : 0/0
 19720 ;;		On exit  : 0/0
 19721 ;;		Unchanged: 0/0
 19722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19727 ;;Total ram usage:        0 bytes
 19728 ;; Hardware stack levels used:    1
 19729 ;; Hardware stack levels required when called:    8
 19730 ;; This function calls:
 19731 ;;		_PWM8_LoadDutyValue
 19732 ;; This function is called by:
 19733 ;;		_check_help
 19734 ;; This function uses a reentrant model
 19735 ;;
 19736                           
 19737                           	psect	text79
 19738  01957A                     __ptext79:
 19739                           	opt callstack 0
 19740  01957A                     _mode_lamp_bright:
 19741                           	opt callstack 21
 19742                           
 19743                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19744                           
 19745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19746                           ;incstack = 0
 19747  01957A  0E2C               	movlw	44
 19748  01957C  6EE6               	movwf	postinc1,c
 19749  01957E  0E01               	movlw	1
 19750  019580  6EE6               	movwf	postinc1,c
 19751  019582  EC75  F0C5         	call	_PWM8_LoadDutyValue	;wreg free
 19752                           
 19753                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19754  019586  0012               	return		;funcret
 19755  019588                     __end_of_mode_lamp_bright:
 19756                           	opt callstack 0
 19757                           
 19758 ;; *************** function _PWM8_LoadDutyValue *****************
 19759 ;; Defined at:
 19760 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;  dutyValue       2  [STACK] unsigned short 
 19763 ;; Auto vars:     Size  Location     Type
 19764 ;;		None
 19765 ;; Return value:  Size  Location     Type
 19766 ;;                  1  [STACK] void 
 19767 ;; Registers used:
 19768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19769 ;; Tracked objects:
 19770 ;;		On entry : 0/2
 19771 ;;		On exit  : 0/0
 19772 ;;		Unchanged: 0/0
 19773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19778 ;;Total ram usage:        0 bytes
 19779 ;; Hardware stack levels used:    1
 19780 ;; Hardware stack levels required when called:    7
 19781 ;; This function calls:
 19782 ;;		Nothing
 19783 ;; This function is called by:
 19784 ;;		_mode_lamp_dim
 19785 ;;		_mode_lamp_bright
 19786 ;; This function uses a reentrant model
 19787 ;;
 19788                           
 19789                           	psect	text80
 19790  018AEA                     __ptext80:
 19791                           	opt callstack 0
 19792  018AEA                     _PWM8_LoadDutyValue:
 19793                           	opt callstack 22
 19794                           
 19795                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19796                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19797                           
 19798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19799                           ;incstack = 0
 19800  018AEA  0EFE               	movlw	-2
 19801  018AEC  006F FF8C  F02F    	movff	plusw1,btemp+10
 19802  018AF2  0EFF               	movlw	-1
 19803  018AF4  006F FF8C  F030    	movff	plusw1,btemp+11
 19804  018AFA  90D8               	bcf	status,0,c
 19805  018AFC  3230               	rrcf	(btemp+11)^0,f,c
 19806  018AFE  322F               	rrcf	(btemp+10)^0,f,c
 19807  018B00  90D8               	bcf	status,0,c
 19808  018B02  3230               	rrcf	(btemp+11)^0,f,c
 19809  018B04  322F               	rrcf	(btemp+10)^0,f,c
 19810  018B06  502F               	movf	(btemp+10)^0,w,c
 19811  018B08  6E61               	movwf	97,c	;volatile
 19812                           
 19813                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19814                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19815  018B0A  0EFE               	movlw	-2
 19816  018B0C  006F FF8C  F030    	movff	plusw1,btemp+11
 19817  018B12  0E03               	movlw	3
 19818  018B14  1630               	andwf	(btemp+11)^0,f,c
 19819  018B16  0E06               	movlw	6
 19820  018B18  6E25               	movwf	btemp^0,c
 19821  018B1A                     u7015:
 19822  018B1A  90D8               	bcf	status,0,c
 19823  018B1C  3630               	rlcf	(btemp+11)^0,f,c
 19824  018B1E  2E25               	decfsz	btemp^0,f,c
 19825  018B20  D7FC               	goto	u7015
 19826  018B22  5030               	movf	(btemp+11)^0,w,c
 19827  018B24  6E60               	movwf	96,c	;volatile
 19828                           
 19829                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19830  018B26  52E5               	movf	postdec1,f,c
 19831  018B28  52E5               	movf	postdec1,f,c
 19832  018B2A  0012               	return		;funcret
 19833  018B2C                     __end_of_PWM8_LoadDutyValue:
 19834                           	opt callstack 0
 19835                           
 19836 ;; *************** function _help_button *****************
 19837 ;; Defined at:
 19838 ;;		line 26 in file "mconfig.c"
 19839 ;; Parameters:    Size  Location     Type
 19840 ;;		None
 19841 ;; Auto vars:     Size  Location     Type
 19842 ;;		None
 19843 ;; Return value:  Size  Location     Type
 19844 ;;                  1  [STACK] _Bool 
 19845 ;; Registers used:
 19846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19847 ;; Tracked objects:
 19848 ;;		On entry : 0/2
 19849 ;;		On exit  : 0/0
 19850 ;;		Unchanged: 0/0
 19851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19856 ;;Total ram usage:        0 bytes
 19857 ;; Hardware stack levels used:    1
 19858 ;; Hardware stack levels required when called:    8
 19859 ;; This function calls:
 19860 ;;		_StartTimer
 19861 ;;		_TimerDone
 19862 ;; This function is called by:
 19863 ;;		_check_help
 19864 ;; This function uses a reentrant model
 19865 ;;
 19866                           
 19867                           	psect	text81
 19868  018C6A                     __ptext81:
 19869                           	opt callstack 0
 19870  018C6A                     _help_button:
 19871                           	opt callstack 21
 19872                           
 19873                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19874                           
 19875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19876                           ;incstack = 0
 19877  018C6A  B0CB               	btfsc	203,0,c	;volatile
 19878  018C6C  D00C               	goto	l1660
 19879                           
 19880                           ;mconfig.c: 29:   V.help = 1;
 19881  018C6E  0102               	movlb	2	; () banked
 19882  018C70  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19883                           
 19884                           ; BSR set to: 2
 19885                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19886  018C72  0E08               	movlw	8
 19887  018C74  6EE6               	movwf	postinc1,c
 19888  018C76  ECF7  F0C7         	call	_TimerDone	;wreg free
 19889  018C7A  5025               	movf	btemp^0,w,c
 19890  018C7C  B4D8               	btfsc	status,2,c
 19891  018C7E  D003               	goto	l1660
 19892                           
 19893                           ;mconfig.c: 31:    return 1;
 19894  018C80  0E01               	movlw	1
 19895  018C82  6E25               	movwf	btemp^0,c
 19896  018C84  0012               	return	
 19897  018C86                     l1660:
 19898                           
 19899                           ;mconfig.c: 34:  if (!V.help)
 19900  018C86  0102               	movlb	2	; () banked
 19901  018C88  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19902  018C8A  D008               	goto	l9045
 19903                           
 19904                           ; BSR set to: 2
 19905                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19906  018C8C  0E2C               	movlw	44
 19907  018C8E  6EE6               	movwf	postinc1,c
 19908  018C90  0E01               	movlw	1
 19909  018C92  6EE6               	movwf	postinc1,c
 19910  018C94  0E08               	movlw	8
 19911  018C96  6EE6               	movwf	postinc1,c
 19912  018C98  EC96  F0C5         	call	_StartTimer	;wreg free
 19913  018C9C                     l9045:
 19914                           
 19915                           ;mconfig.c: 37:  return 0;
 19916  018C9C  0E00               	movlw	0
 19917  018C9E  6E25               	movwf	btemp^0,c
 19918                           
 19919                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19920  018CA0  0012               	return		;funcret
 19921  018CA2                     __end_of_help_button:
 19922                           	opt callstack 0
 19923                           
 19924 ;; *************** function _TimerDone *****************
 19925 ;; Defined at:
 19926 ;;		line 20 in file "timers.c"
 19927 ;; Parameters:    Size  Location     Type
 19928 ;;  timer           1  [STACK] const unsigned char 
 19929 ;; Auto vars:     Size  Location     Type
 19930 ;;		None
 19931 ;; Return value:  Size  Location     Type
 19932 ;;                  1  [STACK] _Bool 
 19933 ;; Registers used:
 19934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19935 ;; Tracked objects:
 19936 ;;		On entry : 0/1
 19937 ;;		On exit  : 0/0
 19938 ;;		Unchanged: 0/0
 19939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19944 ;;Total ram usage:        0 bytes
 19945 ;; Hardware stack levels used:    1
 19946 ;; Hardware stack levels required when called:    7
 19947 ;; This function calls:
 19948 ;;		Nothing
 19949 ;; This function is called by:
 19950 ;;		_main
 19951 ;;		_WaitMs
 19952 ;;		_help_button
 19953 ;;		_check_help
 19954 ;;		_set_display_info
 19955 ;; This function uses a reentrant model
 19956 ;;
 19957                           
 19958                           	psect	text82
 19959  018FEE                     __ptext82:
 19960                           	opt callstack 0
 19961  018FEE                     _TimerDone:
 19962                           	opt callstack 22
 19963                           
 19964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19965                           ;incstack = 0
 19966  018FEE  0004               	clrwdt		;# 
 19967                           
 19968                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19969                           ;stkvar	_timer @ sp[(0)+-1]
 19970  018FF0  0EFF               	movlw	-1
 19971  018FF2  50E3               	movf	plusw1,w,c
 19972  018FF4  0D02               	mullw	2
 19973  018FF6  0EB5               	movlw	low _tickCount
 19974  018FF8  24F3               	addwf	243,w,c
 19975  018FFA  6ED9               	movwf	fsr2l,c
 19976  018FFC  0E01               	movlw	high _tickCount
 19977  018FFE  20F4               	addwfc	prodh,w,c
 19978  019000  6EDA               	movwf	fsr2h,c
 19979  019002  50DE               	movf	postinc2,w,c
 19980  019004  10DE               	iorwf	postinc2,w,c
 19981  019006  A4D8               	btfss	status,2,c
 19982  019008  D002               	goto	l7789
 19983                           
 19984                           ;timers.c: 24:   return 1;
 19985  01900A  0E01               	movlw	1
 19986  01900C  D001               	goto	L20
 19987  01900E                     l7789:
 19988                           
 19989                           ;timers.c: 26:  return 0;
 19990  01900E  0E00               	movlw	0
 19991  019010                     L20:
 19992  019010  6E25               	movwf	btemp^0,c
 19993                           
 19994                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19995  019012  52E5               	movf	postdec1,f,c
 19996  019014  0012               	return		;funcret
 19997  019016                     __end_of_TimerDone:
 19998                           	opt callstack 0
 19999                           
 20000 ;; *************** function _StartTimer *****************
 20001 ;; Defined at:
 20002 ;;		line 12 in file "timers.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;  timer           1  [STACK] const unsigned char 
 20005 ;;  count           2  [STACK] const unsigned short 
 20006 ;; Auto vars:     Size  Location     Type
 20007 ;;		None
 20008 ;; Return value:  Size  Location     Type
 20009 ;;                  1  [STACK] void 
 20010 ;; Registers used:
 20011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20012 ;; Tracked objects:
 20013 ;;		On entry : 0/0
 20014 ;;		On exit  : 0/0
 20015 ;;		Unchanged: 0/0
 20016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20021 ;;Total ram usage:        0 bytes
 20022 ;; Hardware stack levels used:    1
 20023 ;; Hardware stack levels required when called:    7
 20024 ;; This function calls:
 20025 ;;		Nothing
 20026 ;; This function is called by:
 20027 ;;		_main
 20028 ;;		_WaitMs
 20029 ;;		_help_button
 20030 ;;		_check_help
 20031 ;; This function uses a reentrant model
 20032 ;;
 20033                           
 20034                           	psect	text83
 20035  018B2C                     __ptext83:
 20036                           	opt callstack 0
 20037  018B2C                     _StartTimer:
 20038                           	opt callstack 20
 20039                           
 20040                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 20041                           ;stkvar	_count @ sp[(0)+-3]
 20042                           
 20043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20044                           ;incstack = 0
 20045  018B2C  0EFD               	movlw	-3
 20046  018B2E  006F FF8C  F02F    	movff	plusw1,btemp+10
 20047  018B34  0EFE               	movlw	-2
 20048  018B36  006F FF8C  F030    	movff	plusw1,btemp+11
 20049  018B3C  90D8               	bcf	status,0,c
 20050  018B3E  342F               	rlcf	(btemp+10)^0,w,c
 20051  018B40  6E2D               	movwf	(btemp+8)^0,c
 20052  018B42  3430               	rlcf	(btemp+11)^0,w,c
 20053  018B44  6E2E               	movwf	(btemp+9)^0,c
 20054                           
 20055                           ;stkvar	_timer @ sp[(0)+-1]
 20056  018B46  0EFF               	movlw	-1
 20057  018B48  50E3               	movf	plusw1,w,c
 20058  018B4A  0D02               	mullw	2
 20059  018B4C  0EB5               	movlw	low _tickCount
 20060  018B4E  24F3               	addwf	243,w,c
 20061  018B50  6ED9               	movwf	fsr2l,c
 20062  018B52  0E01               	movlw	high _tickCount
 20063  018B54  20F4               	addwfc	prodh,w,c
 20064  018B56  6EDA               	movwf	fsr2h,c
 20065  018B58  0060  F0B7  FFDE   	movff	btemp+8,postinc2
 20066  018B5E  0060  F0BB  FFDD   	movff	btemp+9,postdec2
 20067                           
 20068                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20069  018B64  52E5               	movf	postdec1,f,c
 20070  018B66  52E5               	movf	postdec1,f,c
 20071  018B68  52E5               	movf	postdec1,f,c
 20072  018B6A  0012               	return		;funcret
 20073  018B6C                     __end_of_StartTimer:
 20074                           	opt callstack 0
 20075                           
 20076 ;; *************** function _display_info *****************
 20077 ;; Defined at:
 20078 ;;		line 190 in file "mconfig.c"
 20079 ;; Parameters:    Size  Location     Type
 20080 ;;		None
 20081 ;; Auto vars:     Size  Location     Type
 20082 ;;		None
 20083 ;; Return value:  Size  Location     Type
 20084 ;;                  1  [STACK] enum E16518
 20085 ;; Registers used:
 20086 ;;		btemp
 20087 ;; Tracked objects:
 20088 ;;		On entry : 0/2
 20089 ;;		On exit  : 0/0
 20090 ;;		Unchanged: 0/0
 20091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20096 ;;Total ram usage:        0 bytes
 20097 ;; Hardware stack levels used:    1
 20098 ;; Hardware stack levels required when called:    7
 20099 ;; This function calls:
 20100 ;;		Nothing
 20101 ;; This function is called by:
 20102 ;;		_check_help
 20103 ;; This function uses a reentrant model
 20104 ;;
 20105                           
 20106                           	psect	text84
 20107  0195DA                     __ptext84:
 20108                           	opt callstack 0
 20109  0195DA                     _display_info:
 20110                           	opt callstack 22
 20111                           
 20112                           ;mconfig.c: 192:  return V.response.info;
 20113                           
 20114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20115                           ;incstack = 0
 20116  0195DA  0060  FA8C  F025   	movff	_V+163,btemp	;volatile
 20117                           
 20118                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20119  0195E0  0012               	return		;funcret
 20120  0195E2                     __end_of_display_info:
 20121                           	opt callstack 0
 20122                           
 20123 ;; *************** function _display_help *****************
 20124 ;; Defined at:
 20125 ;;		line 195 in file "mconfig.c"
 20126 ;; Parameters:    Size  Location     Type
 20127 ;;		None
 20128 ;; Auto vars:     Size  Location     Type
 20129 ;;		None
 20130 ;; Return value:  Size  Location     Type
 20131 ;;                  1  [STACK] enum E16518
 20132 ;; Registers used:
 20133 ;;		btemp
 20134 ;; Tracked objects:
 20135 ;;		On entry : 3F/2
 20136 ;;		On exit  : 0/0
 20137 ;;		Unchanged: 0/0
 20138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20143 ;;Total ram usage:        0 bytes
 20144 ;; Hardware stack levels used:    1
 20145 ;; Hardware stack levels required when called:    7
 20146 ;; This function calls:
 20147 ;;		Nothing
 20148 ;; This function is called by:
 20149 ;;		_check_help
 20150 ;; This function uses a reentrant model
 20151 ;;
 20152                           
 20153                           	psect	text85
 20154  0195E2                     __ptext85:
 20155                           	opt callstack 0
 20156  0195E2                     _display_help:
 20157                           	opt callstack 22
 20158                           
 20159                           ;mconfig.c: 197:  return V.response.help_temp;
 20160                           
 20161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20162                           ;incstack = 0
 20163  0195E2  0060  FA90  F025   	movff	_V+164,btemp	;volatile
 20164                           
 20165                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20166  0195E8  0012               	return		;funcret
 20167  0195EA                     __end_of_display_help:
 20168                           	opt callstack 0
 20169                           
 20170 ;; *************** function _check_enter_button *****************
 20171 ;; Defined at:
 20172 ;;		line 42 in file "hid.c"
 20173 ;; Parameters:    Size  Location     Type
 20174 ;;  h               1  [STACK] PTR struct H_data
 20175 ;;		 -> H(7), 
 20176 ;; Auto vars:     Size  Location     Type
 20177 ;;		None
 20178 ;; Return value:  Size  Location     Type
 20179 ;;                  1  [STACK] _Bool 
 20180 ;; Registers used:
 20181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20182 ;; Tracked objects:
 20183 ;;		On entry : 0/1
 20184 ;;		On exit  : 0/0
 20185 ;;		Unchanged: 0/0
 20186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20191 ;;Total ram usage:        0 bytes
 20192 ;; Hardware stack levels used:    1
 20193 ;; Hardware stack levels required when called:    7
 20194 ;; This function calls:
 20195 ;;		Nothing
 20196 ;; This function is called by:
 20197 ;;		_main
 20198 ;; This function uses a reentrant model
 20199 ;;
 20200                           
 20201                           	psect	text86
 20202  018B6C                     __ptext86:
 20203                           	opt callstack 0
 20204  018B6C                     _check_enter_button:
 20205                           	opt callstack 23
 20206                           
 20207                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20208                           ;stkvar	_h @ sp[(0)+-1]
 20209                           
 20210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20211                           ;incstack = 0
 20212  018B6C  0EFF               	movlw	-1
 20213  018B6E  50E3               	movf	plusw1,w,c
 20214  018B70  6ED9               	movwf	fsr2l,c
 20215  018B72  6ADA               	clrf	fsr2h,c
 20216  018B74  0E04               	movlw	4
 20217  018B76  26D9               	addwf	fsr2l,f,c
 20218  018B78  50DF               	movf	indf2,w,c
 20219  018B7A  A4D8               	btfss	status,2,c
 20220  018B7C  D013               	goto	l9579
 20221                           
 20222                           ;stkvar	_h @ sp[(0)+-1]
 20223  018B7E  0EFF               	movlw	-1
 20224  018B80  50E3               	movf	plusw1,w,c
 20225  018B82  6ED9               	movwf	fsr2l,c
 20226  018B84  6ADA               	clrf	fsr2h,c
 20227  018B86  0E05               	movlw	5
 20228  018B88  26D9               	addwf	fsr2l,f,c
 20229  018B8A  50DF               	movf	indf2,w,c
 20230  018B8C  A4D8               	btfss	status,2,c
 20231  018B8E  D00A               	goto	l9579
 20232                           
 20233                           ;hid.c: 45:   h->wait_enter = 1;
 20234                           ;stkvar	_h @ sp[(0)+-1]
 20235  018B90  0EFF               	movlw	-1
 20236  018B92  50E3               	movf	plusw1,w,c
 20237  018B94  6ED9               	movwf	fsr2l,c
 20238  018B96  6ADA               	clrf	fsr2h,c
 20239  018B98  0E04               	movlw	4
 20240  018B9A  26D9               	addwf	fsr2l,f,c
 20241  018B9C  0E01               	movlw	1
 20242  018B9E  6EDF               	movwf	indf2,c
 20243                           
 20244                           ;hid.c: 46:   return 1;
 20245  018BA0  0E01               	movlw	1
 20246  018BA2  D001               	goto	L21
 20247  018BA4                     l9579:
 20248                           
 20249                           ;hid.c: 48:  return 0;
 20250  018BA4  0E00               	movlw	0
 20251  018BA6                     L21:
 20252  018BA6  6E25               	movwf	btemp^0,c
 20253                           
 20254                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20255  018BA8  52E5               	movf	postdec1,f,c
 20256  018BAA  0012               	return		;funcret
 20257  018BAC                     __end_of_check_enter_button:
 20258                           	opt callstack 0
 20259                           
 20260 ;; *************** function _check_adc_scan *****************
 20261 ;; Defined at:
 20262 ;;		line 56 in file "daq.c"
 20263 ;; Parameters:    Size  Location     Type
 20264 ;;		None
 20265 ;; Auto vars:     Size  Location     Type
 20266 ;;		None
 20267 ;; Return value:  Size  Location     Type
 20268 ;;                  1  [STACK] _Bool 
 20269 ;; Registers used:
 20270 ;;		btemp
 20271 ;; Tracked objects:
 20272 ;;		On entry : 0/1
 20273 ;;		On exit  : 0/0
 20274 ;;		Unchanged: 0/0
 20275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20280 ;;Total ram usage:        0 bytes
 20281 ;; Hardware stack levels used:    1
 20282 ;; Hardware stack levels required when called:    7
 20283 ;; This function calls:
 20284 ;;		Nothing
 20285 ;; This function is called by:
 20286 ;;		_main
 20287 ;; This function uses a reentrant model
 20288 ;;
 20289                           
 20290                           	psect	text87
 20291  0195EA                     __ptext87:
 20292                           	opt callstack 0
 20293  0195EA                     _check_adc_scan:
 20294                           	opt callstack 23
 20295                           
 20296                           ;daq.c: 58:  return R.done;
 20297                           
 20298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20299                           ;incstack = 0
 20300  0195EA  0060  F3A8  F025   	movff	_R+39,btemp	;volatile
 20301                           
 20302                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20303  0195F0  0012               	return		;funcret
 20304  0195F2                     __end_of_check_adc_scan:
 20305                           	opt callstack 0
 20306                           
 20307 ;; *************** function _calc_model_data *****************
 20308 ;; Defined at:
 20309 ;;		line 56 in file "mbmc.c"
 20310 ;; Parameters:    Size  Location     Type
 20311 ;;		None
 20312 ;; Auto vars:     Size  Location     Type
 20313 ;;		None
 20314 ;; Return value:  Size  Location     Type
 20315 ;;                  1  [STACK] void 
 20316 ;; Registers used:
 20317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20318 ;; Tracked objects:
 20319 ;;		On entry : 0/1
 20320 ;;		On exit  : 3F/1
 20321 ;;		Unchanged: 0/0
 20322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20327 ;;Total ram usage:        0 bytes
 20328 ;; Hardware stack levels used:    1
 20329 ;; Hardware stack levels required when called:   10
 20330 ;; This function calls:
 20331 ;;		___fladd
 20332 ;;		___flmul
 20333 ;;		___flsub
 20334 ;;		_lp_filter
 20335 ;;		_start_bsoc
 20336 ;;		_stop_bsoc
 20337 ;; This function is called by:
 20338 ;;		_main
 20339 ;; This function uses a reentrant model
 20340 ;;
 20341                           
 20342                           	psect	text88
 20343  015318                     __ptext88:
 20344                           	opt callstack 0
 20345  015318                     _calc_model_data:
 20346                           	opt callstack 20
 20347                           
 20348                           ;mbmc.c: 58:  stop_bsoc();
 20349                           
 20350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20351                           ;incstack = 0
 20352  015318  EC06  F0CB         	call	_stop_bsoc	;wreg free
 20353                           
 20354                           ; BSR set to: 57
 20355                           ;mbmc.c: 60:  if (!V.calib) {
 20356  01531C  0102               	movlb	2	; () banked
 20357  01531E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20358  015320  A4D8               	btfss	status,2,c
 20359  015322  D161               	goto	l9479
 20360                           
 20361                           ; BSR set to: 2
 20362                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 20363  015324  C100  F144         	movff	_C,_C+68	;volatile
 20364  015328  C101  F145         	movff	_C+1,_C+69	;volatile
 20365  01532C  C102  F146         	movff	_C+2,_C+70	;volatile
 20366  015330  C103  F147         	movff	_C+3,_C+71	;volatile
 20367                           
 20368                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 20369  015334  C104  F148         	movff	_C+4,_C+72	;volatile
 20370  015338  C105  F149         	movff	_C+5,_C+73	;volatile
 20371  01533C  C106  F14A         	movff	_C+6,_C+74	;volatile
 20372  015340  C107  F14B         	movff	_C+7,_C+75	;volatile
 20373                           
 20374                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 20375  015344  C110  F154         	movff	_C+16,_C+84	;volatile
 20376  015348  C111  F155         	movff	_C+17,_C+85	;volatile
 20377  01534C  C112  F156         	movff	_C+18,_C+86	;volatile
 20378  015350  C113  F157         	movff	_C+19,_C+87	;volatile
 20379                           
 20380                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 20381  015354  C114  F150         	movff	_C+20,_C+80	;volatile
 20382  015358  C115  F151         	movff	_C+21,_C+81	;volatile
 20383  01535C  C116  F152         	movff	_C+22,_C+82	;volatile
 20384  015360  C117  F153         	movff	_C+23,_C+83	;volatile
 20385                           
 20386                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 20387  015364  C130  F164         	movff	_C+48,_C+100	;volatile
 20388  015368  C131  F165         	movff	_C+49,_C+101	;volatile
 20389  01536C  C132  F166         	movff	_C+50,_C+102	;volatile
 20390  015370  C133  F167         	movff	_C+51,_C+103	;volatile
 20391                           
 20392                           ; BSR set to: 2
 20393                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20394  015374  0E01               	movlw	1
 20395  015376  6EE6               	movwf	postinc1,c
 20396  015378  0E10               	movlw	16
 20397  01537A  6EE6               	movwf	postinc1,c
 20398  01537C  0060  F403  FFE6   	movff	_C,postinc1
 20399  015382  0060  F407  FFE6   	movff	_C+1,postinc1
 20400  015388  0060  F40B  FFE6   	movff	_C+2,postinc1
 20401  01538E  0060  F40F  FFE6   	movff	_C+3,postinc1
 20402  015394  0060  F413  FFE6   	movff	_C+4,postinc1
 20403  01539A  0060  F417  FFE6   	movff	_C+5,postinc1
 20404  0153A0  0060  F41B  FFE6   	movff	_C+6,postinc1
 20405  0153A6  0060  F41F  FFE6   	movff	_C+7,postinc1
 20406  0153AC  ECEA  F0C4         	call	___flsub	;wreg free
 20407  0153B0  0060  F097  FFE6   	movff	btemp,postinc1
 20408  0153B6  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20409  0153BC  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20410  0153C2  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20411  0153C8  ECE1  F0B2         	call	_lp_filter	;wreg free
 20412  0153CC  0060  F094  F140   	movff	btemp,_C+64	;volatile
 20413  0153D2  0060  F098  F141   	movff	btemp+1,_C+65	;volatile
 20414  0153D8  0060  F09C  F142   	movff	btemp+2,_C+66	;volatile
 20415  0153DE  0060  F0A0  F143   	movff	btemp+3,_C+67	;volatile
 20416                           
 20417                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20418  0153E4  0E01               	movlw	1
 20419  0153E6  6EE6               	movwf	postinc1,c
 20420  0153E8  0E11               	movlw	17
 20421  0153EA  6EE6               	movwf	postinc1,c
 20422  0153EC  0060  F553  FFE6   	movff	_C+84,postinc1
 20423  0153F2  0060  F557  FFE6   	movff	_C+85,postinc1
 20424  0153F8  0060  F55B  FFE6   	movff	_C+86,postinc1
 20425  0153FE  0060  F55F  FFE6   	movff	_C+87,postinc1
 20426  015404  0060  F503  FFE6   	movff	_C+64,postinc1
 20427  01540A  0060  F507  FFE6   	movff	_C+65,postinc1
 20428  015410  0060  F50B  FFE6   	movff	_C+66,postinc1
 20429  015416  0060  F50F  FFE6   	movff	_C+67,postinc1
 20430  01541C  EC14  F093         	call	___flmul	;wreg free
 20431  015420  0060  F097  FFE6   	movff	btemp,postinc1
 20432  015426  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20433  01542C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20434  015432  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20435  015438  ECE1  F0B2         	call	_lp_filter	;wreg free
 20436  01543C  0060  F094  F168   	movff	btemp,_C+104	;volatile
 20437  015442  0060  F098  F169   	movff	btemp+1,_C+105	;volatile
 20438  015448  0060  F09C  F16A   	movff	btemp+2,_C+106	;volatile
 20439  01544E  0060  F0A0  F16B   	movff	btemp+3,_C+107	;volatile
 20440                           
 20441                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20442  015454  0E01               	movlw	1
 20443  015456  6EE6               	movwf	postinc1,c
 20444  015458  0E12               	movlw	18
 20445  01545A  6EE6               	movwf	postinc1,c
 20446  01545C  0060  F543  FFE6   	movff	_C+80,postinc1
 20447  015462  0060  F547  FFE6   	movff	_C+81,postinc1
 20448  015468  0060  F54B  FFE6   	movff	_C+82,postinc1
 20449  01546E  0060  F54F  FFE6   	movff	_C+83,postinc1
 20450  015474  0060  F523  FFE6   	movff	_C+72,postinc1
 20451  01547A  0060  F527  FFE6   	movff	_C+73,postinc1
 20452  015480  0060  F52B  FFE6   	movff	_C+74,postinc1
 20453  015486  0060  F52F  FFE6   	movff	_C+75,postinc1
 20454  01548C  EC14  F093         	call	___flmul	;wreg free
 20455  015490  0060  F097  FFE6   	movff	btemp,postinc1
 20456  015496  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20457  01549C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20458  0154A2  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20459  0154A8  ECE1  F0B2         	call	_lp_filter	;wreg free
 20460  0154AC  0060  F094  F170   	movff	btemp,_C+112	;volatile
 20461  0154B2  0060  F098  F171   	movff	btemp+1,_C+113	;volatile
 20462  0154B8  0060  F09C  F172   	movff	btemp+2,_C+114	;volatile
 20463  0154BE  0060  F0A0  F173   	movff	btemp+3,_C+115	;volatile
 20464                           
 20465                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20466  0154C4  0E01               	movlw	1
 20467  0154C6  6EE6               	movwf	postinc1,c
 20468  0154C8  0E13               	movlw	19
 20469  0154CA  6EE6               	movwf	postinc1,c
 20470  0154CC  0E00               	movlw	0
 20471  0154CE  6EE6               	movwf	postinc1,c
 20472  0154D0  0E00               	movlw	0
 20473  0154D2  6EE6               	movwf	postinc1,c
 20474  0154D4  0E60               	movlw	96
 20475  0154D6  6EE6               	movwf	postinc1,c
 20476  0154D8  0EC1               	movlw	193
 20477  0154DA  6EE6               	movwf	postinc1,c
 20478  0154DC  0060  F593  FFE6   	movff	_C+100,postinc1
 20479  0154E2  0060  F597  FFE6   	movff	_C+101,postinc1
 20480  0154E8  0060  F59B  FFE6   	movff	_C+102,postinc1
 20481  0154EE  0060  F59F  FFE6   	movff	_C+103,postinc1
 20482  0154F4  0060  F503  FFE6   	movff	_C+64,postinc1
 20483  0154FA  0060  F507  FFE6   	movff	_C+65,postinc1
 20484  015500  0060  F50B  FFE6   	movff	_C+66,postinc1
 20485  015506  0060  F50F  FFE6   	movff	_C+67,postinc1
 20486  01550C  EC14  F093         	call	___flmul	;wreg free
 20487  015510  0060  F097  FFE6   	movff	btemp,postinc1
 20488  015516  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20489  01551C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20490  015522  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20491  015528  EC29  F097         	call	___fladd	;wreg free
 20492  01552C  0060  F097  FFE6   	movff	btemp,postinc1
 20493  015532  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20494  015538  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20495  01553E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20496  015544  ECE1  F0B2         	call	_lp_filter	;wreg free
 20497  015548  0060  F094  F16C   	movff	btemp,_C+108	;volatile
 20498  01554E  0060  F098  F16D   	movff	btemp+1,_C+109	;volatile
 20499  015554  0060  F09C  F16E   	movff	btemp+2,_C+110	;volatile
 20500  01555A  0060  F0A0  F16F   	movff	btemp+3,_C+111	;volatile
 20501                           
 20502                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20503  015560  0E01               	movlw	1
 20504  015562  6EE6               	movwf	postinc1,c
 20505  015564  0E14               	movlw	20
 20506  015566  6EE6               	movwf	postinc1,c
 20507  015568  0060  F553  FFE6   	movff	_C+84,postinc1
 20508  01556E  0060  F557  FFE6   	movff	_C+85,postinc1
 20509  015574  0060  F55B  FFE6   	movff	_C+86,postinc1
 20510  01557A  0060  F55F  FFE6   	movff	_C+87,postinc1
 20511  015580  0060  F513  FFE6   	movff	_C+68,postinc1
 20512  015586  0060  F517  FFE6   	movff	_C+69,postinc1
 20513  01558C  0060  F51B  FFE6   	movff	_C+70,postinc1
 20514  015592  0060  F51F  FFE6   	movff	_C+71,postinc1
 20515  015598  EC14  F093         	call	___flmul	;wreg free
 20516  01559C  0060  F097  FFE6   	movff	btemp,postinc1
 20517  0155A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20518  0155A8  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20519  0155AE  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20520  0155B4  ECE1  F0B2         	call	_lp_filter	;wreg free
 20521  0155B8  0060  F094  F174   	movff	btemp,_C+116	;volatile
 20522  0155BE  0060  F098  F175   	movff	btemp+1,_C+117	;volatile
 20523  0155C4  0060  F09C  F176   	movff	btemp+2,_C+118	;volatile
 20524  0155CA  0060  F0A0  F177   	movff	btemp+3,_C+119	;volatile
 20525                           
 20526                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 20527  0155D0  0101               	movlb	1	; () banked
 20528  0155D2  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 20529  0155D4  D008               	goto	l9479
 20530                           
 20531                           ; BSR set to: 1
 20532                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 20533  0155D6  0E17               	movlw	23
 20534  0155D8  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 20535  0155DA  0EB7               	movlw	183
 20536  0155DC  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 20537  0155DE  0ED1               	movlw	209
 20538  0155E0  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 20539  0155E2  0E38               	movlw	56
 20540  0155E4  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 20541  0155E6                     l9479:
 20542                           
 20543                           ;mbmc.c: 77:  start_bsoc();
 20544  0155E6  EC93  F0C9         	call	_start_bsoc	;wreg free
 20545                           
 20546                           ; BSR set to: 57
 20547                           ;mbmc.c: 78:  C.update = 1;
 20548  0155EA  0E01               	movlw	1
 20549  0155EC  0101               	movlb	1	; () banked
 20550  0155EE  6FA4               	movwf	(_C+164)& (0+255),b	;volatile
 20551                           
 20552                           ; BSR set to: 1
 20553                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20554  0155F0  0012               	return		;funcret
 20555  0155F2                     __end_of_calc_model_data:
 20556                           	opt callstack 0
 20557                           
 20558 ;; *************** function _stop_bsoc *****************
 20559 ;; Defined at:
 20560 ;;		line 50 in file "bsoc.c"
 20561 ;; Parameters:    Size  Location     Type
 20562 ;;		None
 20563 ;; Auto vars:     Size  Location     Type
 20564 ;;		None
 20565 ;; Return value:  Size  Location     Type
 20566 ;;                  1  [STACK] void 
 20567 ;; Registers used:
 20568 ;;		None
 20569 ;; Tracked objects:
 20570 ;;		On entry : 0/1
 20571 ;;		On exit  : 3F/39
 20572 ;;		Unchanged: 0/0
 20573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20578 ;;Total ram usage:        0 bytes
 20579 ;; Hardware stack levels used:    1
 20580 ;; Hardware stack levels required when called:    7
 20581 ;; This function calls:
 20582 ;;		Nothing
 20583 ;; This function is called by:
 20584 ;;		_calc_model_data
 20585 ;; This function uses a reentrant model
 20586 ;;
 20587                           
 20588                           	psect	text89
 20589  01960C                     __ptext89:
 20590                           	opt callstack 0
 20591  01960C                     _stop_bsoc:
 20592                           	opt callstack 22
 20593                           
 20594                           ;bsoc.c: 53:  PIE6bits.TMR3IE = 0;
 20595                           
 20596                           ; BSR set to: 1
 20597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20598                           ;incstack = 0
 20599  01960C  0139               	movlb	57	; () banked
 20600  01960E  9D96               	bcf	150,6,b	;volatile
 20601                           
 20602                           ; BSR set to: 57
 20603                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20604  019610  0012               	return		;funcret
 20605  019612                     __end_of_stop_bsoc:
 20606                           	opt callstack 0
 20607                           
 20608 ;; *************** function _start_bsoc *****************
 20609 ;; Defined at:
 20610 ;;		line 41 in file "bsoc.c"
 20611 ;; Parameters:    Size  Location     Type
 20612 ;;		None
 20613 ;; Auto vars:     Size  Location     Type
 20614 ;;		None
 20615 ;; Return value:  Size  Location     Type
 20616 ;;                  1  [STACK] void 
 20617 ;; Registers used:
 20618 ;;		wreg, status,2, status,0, btemp+11
 20619 ;; Tracked objects:
 20620 ;;		On entry : 3C/2
 20621 ;;		On exit  : 3F/39
 20622 ;;		Unchanged: 0/0
 20623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20628 ;;Total ram usage:        0 bytes
 20629 ;; Hardware stack levels used:    1
 20630 ;; Hardware stack levels required when called:    7
 20631 ;; This function calls:
 20632 ;;		Nothing
 20633 ;; This function is called by:
 20634 ;;		_calc_model_data
 20635 ;; This function uses a reentrant model
 20636 ;;
 20637                           
 20638                           	psect	text90
 20639  019326                     __ptext90:
 20640                           	opt callstack 0
 20641  019326                     _start_bsoc:
 20642                           	opt callstack 22
 20643                           
 20644                           ;bsoc.c: 44:  PIE6bits.TMR3IE = 1;
 20645                           
 20646                           ; BSR set to: 57
 20647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20648                           ;incstack = 0
 20649  019326  0139               	movlb	57	; () banked
 20650  019328  8D96               	bsf	150,6,b	;volatile
 20651                           
 20652                           ; BSR set to: 57
 20653  01932A  A4BE               	btfss	190,2,c	;volatile
 20654  01932C  D002               	goto	u8450
 20655  01932E  0E01               	movlw	1
 20656  019330  D001               	goto	u8456
 20657  019332                     u8450:
 20658  019332  0E00               	movlw	0
 20659  019334                     u8456:
 20660  019334  0AFF               	xorlw	255
 20661  019336  6E30               	movwf	(btemp+11)^0,c
 20662  019338  4630               	rlncf	(btemp+11)^0,f,c
 20663  01933A  4630               	rlncf	(btemp+11)^0,f,c
 20664  01933C  50BE               	movf	190,w,c	;volatile
 20665  01933E  1830               	xorwf	(btemp+11)^0,w,c
 20666  019340  0BFB               	andlw	-5
 20667  019342  1830               	xorwf	(btemp+11)^0,w,c
 20668  019344  6EBE               	movwf	190,c	;volatile
 20669                           
 20670                           ; BSR set to: 57
 20671                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20672  019346  0012               	return		;funcret
 20673  019348                     __end_of_start_bsoc:
 20674                           	opt callstack 0
 20675                           
 20676 ;; *************** function _lp_filter *****************
 20677 ;; Defined at:
 20678 ;;		line 18 in file "mbmc.c"
 20679 ;; Parameters:    Size  Location     Type
 20680 ;;  new             4  [STACK] const float 
 20681 ;;  bn              1  [STACK] const unsigned char 
 20682 ;;  slow            1  [STACK] const char 
 20683 ;; Auto vars:     Size  Location     Type
 20684 ;;  lp_speed        4  [STACK] float 
 20685 ;; Return value:  Size  Location     Type
 20686 ;;                  4  [STACK] float 
 20687 ;; Registers used:
 20688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20689 ;; Tracked objects:
 20690 ;;		On entry : 0/2
 20691 ;;		On exit  : 0/0
 20692 ;;		Unchanged: 0/0
 20693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;Total ram usage:        0 bytes
 20699 ;; Hardware stack levels used:    1
 20700 ;; Hardware stack levels required when called:    9
 20701 ;; This function calls:
 20702 ;;		___fladd
 20703 ;;		___flmul
 20704 ;;		___flsub
 20705 ;; This function is called by:
 20706 ;;		_main
 20707 ;;		_convert_adc_data
 20708 ;;		_calc_model_data
 20709 ;; This function uses a reentrant model
 20710 ;;
 20711                           
 20712                           	psect	text91
 20713  0165C2                     __ptext91:
 20714                           	opt callstack 0
 20715  0165C2                     _lp_filter:
 20716                           	opt callstack 0
 20717                           
 20718                           ; BSR set to: 57
 20719                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20720  0165C2  52E6               	movf	postinc1,f,c
 20721  0165C4  52E6               	movf	postinc1,f,c
 20722  0165C6  52E6               	movf	postinc1,f,c
 20723  0165C8  52E6               	movf	postinc1,f,c
 20724                           
 20725                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 20726                           ;stkvar	_bn @ sp[(-4)+-5]
 20727                           
 20728                           ;incstack = 0
 20729  0165CA  0EF7               	movlw	-9
 20730  0165CC  006F FF8C  F025    	movff	plusw1,btemp
 20731  0165D2  0E14               	movlw	20
 20732  0165D4  6425               	cpfsgt	btemp^0,c
 20733  0165D6  D011               	goto	l8999
 20734  0165D8                     u8270:
 20735                           
 20736                           ;mbmc.c: 24:   return new;
 20737                           ;stkvar	_new @ sp[(-4)+-4]
 20738  0165D8  0EF8               	movlw	-8
 20739  0165DA  006F FF8C  F025    	movff	plusw1,btemp
 20740  0165E0  0EF9               	movlw	-7
 20741  0165E2  006F FF8C  F026    	movff	plusw1,btemp+1
 20742  0165E8  0EFA               	movlw	-6
 20743  0165EA  006F FF8C  F027    	movff	plusw1,btemp+2
 20744  0165F0  0EFB               	movlw	-5
 20745  0165F2  006F FF8C  F028    	movff	plusw1,btemp+3
 20746  0165F8  D0BF               	goto	l1808
 20747  0165FA                     l8999:
 20748                           
 20749                           ;mbmc.c: 26:  if (slow == (-1)) {
 20750                           ;stkvar	_slow @ sp[(-4)+-6]
 20751  0165FA  0EF6               	movlw	-10
 20752  0165FC  28E3               	incf	plusw1,w,c
 20753  0165FE  A4D8               	btfss	status,2,c
 20754  016600  D012               	goto	l9007
 20755                           
 20756                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 20757                           ;stkvar	_bn @ sp[(-4)+-5]
 20758  016602  0EF7               	movlw	-9
 20759  016604  50E3               	movf	plusw1,w,c
 20760  016606  0D04               	mullw	4
 20761  016608  0E00               	movlw	low lp_filter@smooth
 20762  01660A  24F3               	addwf	243,w,c
 20763  01660C  6ED9               	movwf	fsr2l,c
 20764  01660E  0E03               	movlw	high lp_filter@smooth
 20765  016610  20F4               	addwfc	prodh,w,c
 20766  016612  6EDA               	movwf	fsr2h,c
 20767  016614  0E00               	movlw	0
 20768  016616  6EDE               	movwf	postinc2,c
 20769  016618  0E00               	movlw	0
 20770  01661A  6EDE               	movwf	postinc2,c
 20771  01661C  0E00               	movlw	0
 20772  01661E  6EDE               	movwf	postinc2,c
 20773  016620  0E00               	movlw	0
 20774  016622  6EDD               	movwf	postdec2,c
 20775  016624  D7D9               	goto	u8270
 20776  016626                     l9007:
 20777                           
 20778                           ;mbmc.c: 31:  if (slow) {
 20779                           ;stkvar	_slow @ sp[(-4)+-6]
 20780  016626  0EF6               	movlw	-10
 20781  016628  50E3               	movf	plusw1,w,c
 20782  01662A  B4D8               	btfsc	status,2,c
 20783  01662C  D008               	goto	l9011
 20784                           
 20785                           ;mbmc.c: 32:   lp_speed = 0.033;
 20786  01662E  0E02               	movlw	2
 20787  016630  6E2D               	movwf	(btemp+8)^0,c
 20788  016632  0E2B               	movlw	43
 20789  016634  6E2E               	movwf	(btemp+9)^0,c
 20790  016636  0E07               	movlw	7
 20791  016638  6E2F               	movwf	(btemp+10)^0,c
 20792  01663A  0E3D               	movlw	61
 20793  01663C  D007               	goto	L22
 20794  01663E                     l9011:
 20795                           
 20796                           ;mbmc.c: 34:   lp_speed = 0.125;
 20797  01663E  0E00               	movlw	0
 20798  016640  6E2D               	movwf	(btemp+8)^0,c
 20799  016642  0E00               	movlw	0
 20800  016644  6E2E               	movwf	(btemp+9)^0,c
 20801  016646  0E00               	movlw	0
 20802  016648  6E2F               	movwf	(btemp+10)^0,c
 20803  01664A  0E3E               	movlw	62
 20804  01664C                     L22:
 20805  01664C  6E30               	movwf	(btemp+11)^0,c
 20806                           
 20807                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20808  01664E  0EFC               	movlw	-4
 20809  016650  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 20810  016656  0EFD               	movlw	-3
 20811  016658  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 20812  01665E  0EFE               	movlw	-2
 20813  016660  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 20814  016666  0EFF               	movlw	-1
 20815  016668  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 20816                           
 20817                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20818                           ;stkvar	_bn @ sp[(-4)+-5]
 20819  01666E  0EF7               	movlw	-9
 20820  016670  50E3               	movf	plusw1,w,c
 20821  016672  0D04               	mullw	4
 20822  016674  0E00               	movlw	low lp_filter@smooth
 20823  016676  24F3               	addwf	243,w,c
 20824  016678  6ED9               	movwf	fsr2l,c
 20825  01667A  0E03               	movlw	high lp_filter@smooth
 20826  01667C  20F4               	addwfc	prodh,w,c
 20827  01667E  6EDA               	movwf	fsr2h,c
 20828  016680  006F FF7B FFE6     	movff	postinc2,postinc1
 20829  016686  006F FF7B FFE6     	movff	postinc2,postinc1
 20830  01668C  006F FF7B FFE6     	movff	postinc2,postinc1
 20831  016692  006F FF7B FFE6     	movff	postinc2,postinc1
 20832                           
 20833                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20834  016698  0EF8               	movlw	-8
 20835  01669A  006F FF8F FFE6     	movff	plusw1,postinc1
 20836  0166A0  006F FF8F FFE6     	movff	plusw1,postinc1
 20837  0166A6  006F FF8F FFE6     	movff	plusw1,postinc1
 20838  0166AC  006F FF8F FFE6     	movff	plusw1,postinc1
 20839                           
 20840                           ;stkvar	_bn @ sp[(-12)+-5]
 20841  0166B2  0EEF               	movlw	-17
 20842  0166B4  50E3               	movf	plusw1,w,c
 20843  0166B6  0D04               	mullw	4
 20844  0166B8  0E00               	movlw	low lp_filter@smooth
 20845  0166BA  24F3               	addwf	243,w,c
 20846  0166BC  6ED9               	movwf	fsr2l,c
 20847  0166BE  0E03               	movlw	high lp_filter@smooth
 20848  0166C0  20F4               	addwfc	prodh,w,c
 20849  0166C2  6EDA               	movwf	fsr2h,c
 20850  0166C4  006F FF7B FFE6     	movff	postinc2,postinc1
 20851  0166CA  006F FF7B FFE6     	movff	postinc2,postinc1
 20852  0166D0  006F FF7B FFE6     	movff	postinc2,postinc1
 20853  0166D6  006F FF7B FFE6     	movff	postinc2,postinc1
 20854                           
 20855                           ;stkvar	_new @ sp[(-16)+-4]
 20856  0166DC  0EEC               	movlw	-20
 20857  0166DE  006F FF8F FFE6     	movff	plusw1,postinc1
 20858  0166E4  006F FF8F FFE6     	movff	plusw1,postinc1
 20859  0166EA  006F FF8F FFE6     	movff	plusw1,postinc1
 20860  0166F0  006F FF8F FFE6     	movff	plusw1,postinc1
 20861  0166F6  ECEA  F0C4         	call	___flsub	;wreg free
 20862  0166FA  0060  F097  FFE6   	movff	btemp,postinc1
 20863  016700  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20864  016706  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20865  01670C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20866  016712  EC14  F093         	call	___flmul	;wreg free
 20867  016716  0060  F097  FFE6   	movff	btemp,postinc1
 20868  01671C  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20869  016722  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20870  016728  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20871  01672E  EC29  F097         	call	___fladd	;wreg free
 20872                           
 20873                           ;stkvar	_bn @ sp[(-4)+-5]
 20874  016732  0EF7               	movlw	-9
 20875  016734  50E3               	movf	plusw1,w,c
 20876  016736  0D04               	mullw	4
 20877  016738  0E00               	movlw	low lp_filter@smooth
 20878  01673A  24F3               	addwf	243,w,c
 20879  01673C  6ED9               	movwf	fsr2l,c
 20880  01673E  0E03               	movlw	high lp_filter@smooth
 20881  016740  20F4               	addwfc	prodh,w,c
 20882  016742  6EDA               	movwf	fsr2h,c
 20883  016744  0060  F097  FFDE   	movff	btemp,postinc2
 20884  01674A  0060  F09B  FFDE   	movff	btemp+1,postinc2
 20885  016750  0060  F09F  FFDE   	movff	btemp+2,postinc2
 20886  016756  0060  F0A3  FFDD   	movff	btemp+3,postdec2
 20887  01675C  52DD               	movf	postdec2,f,c
 20888  01675E  52DD               	movf	postdec2,f,c
 20889  016760  006F FF78  F025    	movff	postinc2,btemp
 20890  016766  006F FF78  F026    	movff	postinc2,btemp+1
 20891  01676C  006F FF78  F027    	movff	postinc2,btemp+2
 20892  016772  006F FF78  F028    	movff	postinc2,btemp+3
 20893  016778                     l1808:
 20894                           
 20895                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20896  016778  0EF6               	movlw	246
 20897  01677A  26E1               	addwf	fsr1l,f,c
 20898  01677C  0EFF               	movlw	255
 20899  01677E  22E2               	addwfc	fsr1h,f,c
 20900  016780  0012               	return		;funcret
 20901  016782                     __end_of_lp_filter:
 20902                           	opt callstack 0
 20903                           
 20904 ;; *************** function ___flsub *****************
 20905 ;; Defined at:
 20906 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20907 ;; Parameters:    Size  Location     Type
 20908 ;;  b               4  [STACK] float 
 20909 ;;  a               4  [STACK] float 
 20910 ;; Auto vars:     Size  Location     Type
 20911 ;;		None
 20912 ;; Return value:  Size  Location     Type
 20913 ;;                  4  [STACK] float 
 20914 ;; Registers used:
 20915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20916 ;; Tracked objects:
 20917 ;;		On entry : 0/2
 20918 ;;		On exit  : 0/0
 20919 ;;		Unchanged: 0/0
 20920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20925 ;;Total ram usage:        0 bytes
 20926 ;; Hardware stack levels used:    1
 20927 ;; Hardware stack levels required when called:    8
 20928 ;; This function calls:
 20929 ;;		___fladd
 20930 ;; This function is called by:
 20931 ;;		_conv_raw_result
 20932 ;;		_lp_filter
 20933 ;;		_calc_model_data
 20934 ;;		_efgtoa
 20935 ;; This function uses a reentrant model
 20936 ;;
 20937                           
 20938                           	psect	text92
 20939  0189D4                     __ptext92:
 20940                           	opt callstack 0
 20941  0189D4                     ___flsub:
 20942                           	opt callstack 15
 20943                           
 20944                           ;stkvar	_a @ sp[(0)+-8]
 20945                           
 20946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20947                           ;incstack = 0
 20948  0189D4  0EFB               	movlw	-5
 20949  0189D6  7EE3               	btg	plusw1,7,c
 20950                           
 20951                           ;stkvar	_a @ sp[(0)+-8]
 20952  0189D8  0EF8               	movlw	-8
 20953  0189DA  006F FF8F FFE6     	movff	plusw1,postinc1
 20954  0189E0  006F FF8F FFE6     	movff	plusw1,postinc1
 20955  0189E6  006F FF8F FFE6     	movff	plusw1,postinc1
 20956  0189EC  006F FF8F FFE6     	movff	plusw1,postinc1
 20957                           
 20958                           ;stkvar	_b @ sp[(-4)+-4]
 20959  0189F2  0EF8               	movlw	-8
 20960  0189F4  006F FF8F FFE6     	movff	plusw1,postinc1
 20961  0189FA  006F FF8F FFE6     	movff	plusw1,postinc1
 20962  018A00  006F FF8F FFE6     	movff	plusw1,postinc1
 20963  018A06  006F FF8F FFE6     	movff	plusw1,postinc1
 20964  018A0C  EC29  F097         	call	___fladd	;wreg free
 20965                           
 20966                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20967  018A10  0EF8               	movlw	248
 20968  018A12  26E1               	addwf	fsr1l,f,c
 20969  018A14  0EFF               	movlw	255
 20970  018A16  22E2               	addwfc	fsr1h,f,c
 20971  018A18  0012               	return		;funcret
 20972  018A1A                     __end_of___flsub:
 20973                           	opt callstack 0
 20974                           
 20975 ;; *************** function ___fladd *****************
 20976 ;; Defined at:
 20977 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20978 ;; Parameters:    Size  Location     Type
 20979 ;;  b               4  [STACK] float 
 20980 ;;  a               4  [STACK] float 
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;  grs             1  [STACK] unsigned char 
 20983 ;;  bexp            1  [STACK] unsigned char 
 20984 ;;  aexp            1  [STACK] unsigned char 
 20985 ;;  signs           1  [STACK] unsigned char 
 20986 ;; Return value:  Size  Location     Type
 20987 ;;                  4  [STACK] unsigned char 
 20988 ;; Registers used:
 20989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20990 ;; Tracked objects:
 20991 ;;		On entry : 0/0
 20992 ;;		On exit  : 0/0
 20993 ;;		Unchanged: 0/0
 20994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20999 ;;Total ram usage:        0 bytes
 21000 ;; Hardware stack levels used:    1
 21001 ;; Hardware stack levels required when called:    7
 21002 ;; This function calls:
 21003 ;;		Nothing
 21004 ;; This function is called by:
 21005 ;;		_lp_filter
 21006 ;;		_calc_model_data
 21007 ;;		_calc_bsoc
 21008 ;;		_efgtoa
 21009 ;;		___flsub
 21010 ;; This function uses a reentrant model
 21011 ;;
 21012                           
 21013                           	psect	text93
 21014  012E52                     __ptext93:
 21015                           	opt callstack 0
 21016  012E52                     ___fladd:
 21017                           	opt callstack 0
 21018                           
 21019                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21020  012E52  52E6               	movf	postinc1,f,c
 21021  012E54  52E6               	movf	postinc1,f,c
 21022  012E56  52E6               	movf	postinc1,f,c
 21023  012E58  52E6               	movf	postinc1,f,c
 21024                           
 21025                           ;stkvar	_b @ sp[(-4)+-4]
 21026                           
 21027                           ;incstack = 0
 21028  012E5A  0EFB               	movlw	251
 21029  012E5C  24E1               	addwf	fsr1l,w,c
 21030  012E5E  6ED9               	movwf	fsr2l,c
 21031  012E60  0EFF               	movlw	255
 21032  012E62  20E2               	addwfc	fsr1h,w,c
 21033  012E64  6EDA               	movwf	fsr2h,c
 21034  012E66  50DF               	movf	indf2,w,c
 21035  012E68  6E30               	movwf	(btemp+11)^0,c
 21036  012E6A  0E80               	movlw	128
 21037  012E6C  1630               	andwf	(btemp+11)^0,f,c
 21038                           
 21039                           ;stkvar	_signs @ sp[(-4)+3]
 21040  012E6E  0EFF               	movlw	-1
 21041  012E70  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21042                           
 21043                           ;stkvar	_b @ sp[(-4)+-4]
 21044  012E76  0EFB               	movlw	251
 21045  012E78  24E1               	addwf	fsr1l,w,c
 21046  012E7A  6ED9               	movwf	fsr2l,c
 21047  012E7C  0EFF               	movlw	255
 21048  012E7E  20E2               	addwfc	fsr1h,w,c
 21049  012E80  6EDA               	movwf	fsr2h,c
 21050  012E82  50DF               	movf	indf2,w,c
 21051  012E84  6E30               	movwf	(btemp+11)^0,c
 21052  012E86  90D8               	bcf	status,0,c
 21053  012E88  3430               	rlcf	(btemp+11)^0,w,c
 21054  012E8A  6E2F               	movwf	(btemp+10)^0,c
 21055                           
 21056                           ;stkvar	_bexp @ sp[(-4)+1]
 21057  012E8C  0EFD               	movlw	-3
 21058  012E8E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21059                           
 21060                           ;stkvar	_b @ sp[(-4)+-4]
 21061  012E94  0EFA               	movlw	250
 21062  012E96  24E1               	addwf	fsr1l,w,c
 21063  012E98  6ED9               	movwf	fsr2l,c
 21064  012E9A  0EFF               	movlw	255
 21065  012E9C  20E2               	addwfc	fsr1h,w,c
 21066  012E9E  6EDA               	movwf	fsr2h,c
 21067  012EA0  AEDF               	btfss	indf2,7,c
 21068  012EA2  D002               	goto	l7921
 21069                           
 21070                           ;stkvar	_bexp @ sp[(-4)+1]
 21071  012EA4  0EFD               	movlw	-3
 21072  012EA6  80E3               	bsf	plusw1,0,c
 21073  012EA8                     l7921:
 21074                           
 21075                           ;stkvar	_bexp @ sp[(-4)+1]
 21076  012EA8  0EFD               	movlw	-3
 21077  012EAA  50E3               	movf	plusw1,w,c
 21078  012EAC  B4D8               	btfsc	status,2,c
 21079  012EAE  D027               	goto	l7931
 21080                           
 21081                           ;stkvar	_bexp @ sp[(-4)+1]
 21082  012EB0  0EFD               	movlw	-3
 21083  012EB2  28E3               	incf	plusw1,w,c
 21084  012EB4  A4D8               	btfss	status,2,c
 21085  012EB6  D018               	goto	l7927
 21086  012EB8  0E00               	movlw	0
 21087  012EBA  6E2D               	movwf	(btemp+8)^0,c
 21088  012EBC  0E00               	movlw	0
 21089  012EBE  6E2E               	movwf	(btemp+9)^0,c
 21090  012EC0  0E00               	movlw	0
 21091  012EC2  6E2F               	movwf	(btemp+10)^0,c
 21092  012EC4  0E00               	movlw	0
 21093  012EC6  6E30               	movwf	(btemp+11)^0,c
 21094                           
 21095                           ;stkvar	_b @ sp[(-4)+-4]
 21096  012EC8  0EF8               	movlw	-8
 21097  012ECA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21098  012ED0  0EF9               	movlw	-7
 21099  012ED2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21100  012ED8  0EFA               	movlw	-6
 21101  012EDA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21102  012EE0  0EFB               	movlw	-5
 21103  012EE2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21104  012EE8                     l7927:
 21105                           
 21106                           ;stkvar	_b @ sp[(-4)+-4]
 21107  012EE8  0EFA               	movlw	-6
 21108  012EEA  8EE3               	bsf	plusw1,7,c
 21109                           
 21110                           ;stkvar	_b @ sp[(-4)+-4]
 21111  012EEC  0EFB               	movlw	251
 21112  012EEE  24E1               	addwf	fsr1l,w,c
 21113  012EF0  6ED9               	movwf	fsr2l,c
 21114  012EF2  0EFF               	movlw	255
 21115  012EF4  20E2               	addwfc	fsr1h,w,c
 21116  012EF6  6EDA               	movwf	fsr2h,c
 21117  012EF8  0E00               	movlw	0
 21118  012EFA  6EDF               	movwf	indf2,c
 21119  012EFC  D018               	goto	l7933
 21120  012EFE                     l7931:
 21121  012EFE  0E00               	movlw	0
 21122  012F00  6E2D               	movwf	(btemp+8)^0,c
 21123  012F02  0E00               	movlw	0
 21124  012F04  6E2E               	movwf	(btemp+9)^0,c
 21125  012F06  0E00               	movlw	0
 21126  012F08  6E2F               	movwf	(btemp+10)^0,c
 21127  012F0A  0E00               	movlw	0
 21128  012F0C  6E30               	movwf	(btemp+11)^0,c
 21129                           
 21130                           ;stkvar	_b @ sp[(-4)+-4]
 21131  012F0E  0EF8               	movlw	-8
 21132  012F10  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21133  012F16  0EF9               	movlw	-7
 21134  012F18  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21135  012F1E  0EFA               	movlw	-6
 21136  012F20  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21137  012F26  0EFB               	movlw	-5
 21138  012F28  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21139  012F2E                     l7933:
 21140                           
 21141                           ;stkvar	_a @ sp[(-4)+-8]
 21142  012F2E  0EF7               	movlw	247
 21143  012F30  24E1               	addwf	fsr1l,w,c
 21144  012F32  6ED9               	movwf	fsr2l,c
 21145  012F34  0EFF               	movlw	255
 21146  012F36  20E2               	addwfc	fsr1h,w,c
 21147  012F38  6EDA               	movwf	fsr2h,c
 21148  012F3A  50DF               	movf	indf2,w,c
 21149  012F3C  6E30               	movwf	(btemp+11)^0,c
 21150  012F3E  0E80               	movlw	128
 21151  012F40  1630               	andwf	(btemp+11)^0,f,c
 21152                           
 21153                           ;stkvar	_aexp @ sp[(-4)+2]
 21154  012F42  0EFE               	movlw	-2
 21155  012F44  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21156                           
 21157                           ;stkvar	_signs @ sp[(-4)+3]
 21158                           ;stkvar	_aexp @ sp[(-4)+2]
 21159  012F4A  50E1               	movf	fsr1l,w,c
 21160  012F4C  0FFE               	addlw	-2
 21161  012F4E  6ED9               	movwf	fsr2l,c
 21162  012F50  50E2               	movf	fsr1h,w,c
 21163  012F52  6EDA               	movwf	fsr2h,c
 21164  012F54  0EFF               	movlw	255
 21165  012F56  22DA               	addwfc	fsr2h,f,c
 21166  012F58  0EFF               	movlw	-1
 21167  012F5A  50E3               	movf	plusw1,w,c
 21168  012F5C  18DE               	xorwf	postinc2,w,c
 21169  012F5E  B4D8               	btfsc	status,2,c
 21170  012F60  D002               	goto	l7939
 21171                           
 21172                           ;stkvar	_signs @ sp[(-4)+3]
 21173  012F62  0EFF               	movlw	-1
 21174  012F64  8CE3               	bsf	plusw1,6,c
 21175  012F66                     l7939:
 21176                           
 21177                           ;stkvar	_a @ sp[(-4)+-8]
 21178  012F66  0EF7               	movlw	247
 21179  012F68  24E1               	addwf	fsr1l,w,c
 21180  012F6A  6ED9               	movwf	fsr2l,c
 21181  012F6C  0EFF               	movlw	255
 21182  012F6E  20E2               	addwfc	fsr1h,w,c
 21183  012F70  6EDA               	movwf	fsr2h,c
 21184  012F72  50DF               	movf	indf2,w,c
 21185  012F74  6E30               	movwf	(btemp+11)^0,c
 21186  012F76  90D8               	bcf	status,0,c
 21187  012F78  3430               	rlcf	(btemp+11)^0,w,c
 21188  012F7A  6E2F               	movwf	(btemp+10)^0,c
 21189                           
 21190                           ;stkvar	_aexp @ sp[(-4)+2]
 21191  012F7C  0EFE               	movlw	-2
 21192  012F7E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21193                           
 21194                           ;stkvar	_a @ sp[(-4)+-8]
 21195  012F84  0EF6               	movlw	246
 21196  012F86  24E1               	addwf	fsr1l,w,c
 21197  012F88  6ED9               	movwf	fsr2l,c
 21198  012F8A  0EFF               	movlw	255
 21199  012F8C  20E2               	addwfc	fsr1h,w,c
 21200  012F8E  6EDA               	movwf	fsr2h,c
 21201  012F90  AEDF               	btfss	indf2,7,c
 21202  012F92  D002               	goto	l7945
 21203                           
 21204                           ;stkvar	_aexp @ sp[(-4)+2]
 21205  012F94  0EFE               	movlw	-2
 21206  012F96  80E3               	bsf	plusw1,0,c
 21207  012F98                     l7945:
 21208                           
 21209                           ;stkvar	_aexp @ sp[(-4)+2]
 21210  012F98  0EFE               	movlw	-2
 21211  012F9A  50E3               	movf	plusw1,w,c
 21212  012F9C  B4D8               	btfsc	status,2,c
 21213  012F9E  D027               	goto	l7955
 21214                           
 21215                           ;stkvar	_aexp @ sp[(-4)+2]
 21216  012FA0  0EFE               	movlw	-2
 21217  012FA2  28E3               	incf	plusw1,w,c
 21218  012FA4  A4D8               	btfss	status,2,c
 21219  012FA6  D018               	goto	l7951
 21220  012FA8  0E00               	movlw	0
 21221  012FAA  6E2D               	movwf	(btemp+8)^0,c
 21222  012FAC  0E00               	movlw	0
 21223  012FAE  6E2E               	movwf	(btemp+9)^0,c
 21224  012FB0  0E00               	movlw	0
 21225  012FB2  6E2F               	movwf	(btemp+10)^0,c
 21226  012FB4  0E00               	movlw	0
 21227  012FB6  6E30               	movwf	(btemp+11)^0,c
 21228                           
 21229                           ;stkvar	_a @ sp[(-4)+-8]
 21230  012FB8  0EF4               	movlw	-12
 21231  012FBA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21232  012FC0  0EF5               	movlw	-11
 21233  012FC2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21234  012FC8  0EF6               	movlw	-10
 21235  012FCA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21236  012FD0  0EF7               	movlw	-9
 21237  012FD2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21238  012FD8                     l7951:
 21239                           
 21240                           ;stkvar	_a @ sp[(-4)+-8]
 21241  012FD8  0EF6               	movlw	-10
 21242  012FDA  8EE3               	bsf	plusw1,7,c
 21243                           
 21244                           ;stkvar	_a @ sp[(-4)+-8]
 21245  012FDC  0EF7               	movlw	247
 21246  012FDE  24E1               	addwf	fsr1l,w,c
 21247  012FE0  6ED9               	movwf	fsr2l,c
 21248  012FE2  0EFF               	movlw	255
 21249  012FE4  20E2               	addwfc	fsr1h,w,c
 21250  012FE6  6EDA               	movwf	fsr2h,c
 21251  012FE8  0E00               	movlw	0
 21252  012FEA  6EDF               	movwf	indf2,c
 21253  012FEC  D018               	goto	l7957
 21254  012FEE                     l7955:
 21255  012FEE  0E00               	movlw	0
 21256  012FF0  6E2D               	movwf	(btemp+8)^0,c
 21257  012FF2  0E00               	movlw	0
 21258  012FF4  6E2E               	movwf	(btemp+9)^0,c
 21259  012FF6  0E00               	movlw	0
 21260  012FF8  6E2F               	movwf	(btemp+10)^0,c
 21261  012FFA  0E00               	movlw	0
 21262  012FFC  6E30               	movwf	(btemp+11)^0,c
 21263                           
 21264                           ;stkvar	_a @ sp[(-4)+-8]
 21265  012FFE  0EF4               	movlw	-12
 21266  013000  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21267  013006  0EF5               	movlw	-11
 21268  013008  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21269  01300E  0EF6               	movlw	-10
 21270  013010  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21271  013016  0EF7               	movlw	-9
 21272  013018  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21273  01301E                     l7957:
 21274                           
 21275                           ;stkvar	_bexp @ sp[(-4)+1]
 21276                           ;stkvar	_aexp @ sp[(-4)+2]
 21277  01301E  50E1               	movf	fsr1l,w,c
 21278  013020  0FFE               	addlw	-2
 21279  013022  6ED9               	movwf	fsr2l,c
 21280  013024  50E2               	movf	fsr1h,w,c
 21281  013026  6EDA               	movwf	fsr2h,c
 21282  013028  0EFF               	movlw	255
 21283  01302A  22DA               	addwfc	fsr2h,f,c
 21284  01302C  0EFD               	movlw	-3
 21285  01302E  50E3               	movf	plusw1,w,c
 21286  013030  5CDE               	subwf	postinc2,w,c
 21287  013032  B0D8               	btfsc	status,0,c
 21288  013034  D0A4               	goto	l7993
 21289                           
 21290                           ;stkvar	_signs @ sp[(-4)+3]
 21291  013036  0EFF               	movlw	-1
 21292  013038  ACE3               	btfss	plusw1,6,c
 21293  01303A  D002               	goto	l7963
 21294                           
 21295                           ;stkvar	_signs @ sp[(-4)+3]
 21296  01303C  0EFF               	movlw	-1
 21297  01303E  7EE3               	btg	plusw1,7,c
 21298  013040                     l7963:
 21299                           
 21300                           ;stkvar	_bexp @ sp[(-4)+1]
 21301                           ;stkvar	_grs @ sp[(-4)+0]
 21302  013040  0EFD               	movlw	-3
 21303  013042  006F FF8C  F025    	movff	plusw1,btemp
 21304  013048  0EFC               	movlw	-4
 21305  01304A  0060  F097  FFE3   	movff	btemp,plusw1
 21306                           
 21307                           ;stkvar	_aexp @ sp[(-4)+2]
 21308                           ;stkvar	_bexp @ sp[(-4)+1]
 21309  013050  0EFE               	movlw	-2
 21310  013052  006F FF8C  F025    	movff	plusw1,btemp
 21311  013058  0EFD               	movlw	-3
 21312  01305A  0060  F097  FFE3   	movff	btemp,plusw1
 21313                           
 21314                           ;stkvar	_grs @ sp[(-4)+0]
 21315                           ;stkvar	_aexp @ sp[(-4)+2]
 21316  013060  0EFC               	movlw	-4
 21317  013062  006F FF8C  F025    	movff	plusw1,btemp
 21318  013068  0EFE               	movlw	-2
 21319  01306A  0060  F097  FFE3   	movff	btemp,plusw1
 21320                           
 21321                           ;stkvar	_b @ sp[(-4)+-4]
 21322                           ;stkvar	_grs @ sp[(-4)+0]
 21323  013070  0EF8               	movlw	-8
 21324  013072  006F FF8C  F025    	movff	plusw1,btemp
 21325  013078  0EFC               	movlw	-4
 21326  01307A  0060  F097  FFE3   	movff	btemp,plusw1
 21327                           
 21328                           ;stkvar	_a @ sp[(-4)+-8]
 21329                           ;stkvar	_b @ sp[(-4)+-4]
 21330  013080  0EF4               	movlw	-12
 21331  013082  006F FF8C  F025    	movff	plusw1,btemp
 21332  013088  0EF8               	movlw	-8
 21333  01308A  0060  F097  FFE3   	movff	btemp,plusw1
 21334                           
 21335                           ;stkvar	_grs @ sp[(-4)+0]
 21336                           ;stkvar	_a @ sp[(-4)+-8]
 21337  013090  0EFC               	movlw	-4
 21338  013092  006F FF8C  F025    	movff	plusw1,btemp
 21339  013098  0EF4               	movlw	-12
 21340  01309A  0060  F097  FFE3   	movff	btemp,plusw1
 21341                           
 21342                           ;stkvar	_b @ sp[(-4)+-4]
 21343  0130A0  0EF9               	movlw	249
 21344  0130A2  24E1               	addwf	fsr1l,w,c
 21345  0130A4  6ED9               	movwf	fsr2l,c
 21346  0130A6  0EFF               	movlw	255
 21347  0130A8  20E2               	addwfc	fsr1h,w,c
 21348  0130AA  6EDA               	movwf	fsr2h,c
 21349  0130AC  50DF               	movf	indf2,w,c
 21350  0130AE  6E30               	movwf	(btemp+11)^0,c
 21351                           
 21352                           ;stkvar	_grs @ sp[(-4)+0]
 21353  0130B0  0EFC               	movlw	-4
 21354  0130B2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21355                           
 21356                           ;stkvar	_a @ sp[(-4)+-8]
 21357  0130B8  0EF5               	movlw	245
 21358  0130BA  24E1               	addwf	fsr1l,w,c
 21359  0130BC  6ED9               	movwf	fsr2l,c
 21360  0130BE  0EFF               	movlw	255
 21361  0130C0  20E2               	addwfc	fsr1h,w,c
 21362  0130C2  6EDA               	movwf	fsr2h,c
 21363                           
 21364                           ;stkvar	_b @ sp[(-4)+-4]
 21365  0130C4  0EF9               	movlw	249
 21366  0130C6  24E1               	addwf	fsr1l,w,c
 21367  0130C8  6EE9               	movwf	fsr0l,c
 21368  0130CA  0EFF               	movlw	255
 21369  0130CC  20E2               	addwfc	fsr1h,w,c
 21370  0130CE  6EEA               	movwf	fsr0h,c
 21371  0130D0  006F FF7F FFEF     	movff	indf2,indf0
 21372                           
 21373                           ;stkvar	_grs @ sp[(-4)+0]
 21374                           ;stkvar	_a @ sp[(-4)+-8]
 21375  0130D6  0EF5               	movlw	245
 21376  0130D8  24E1               	addwf	fsr1l,w,c
 21377  0130DA  6ED9               	movwf	fsr2l,c
 21378  0130DC  0EFF               	movlw	255
 21379  0130DE  20E2               	addwfc	fsr1h,w,c
 21380  0130E0  6EDA               	movwf	fsr2h,c
 21381  0130E2  0EFC               	movlw	-4
 21382  0130E4  006F FF8F FFDF     	movff	plusw1,indf2
 21383                           
 21384                           ;stkvar	_b @ sp[(-4)+-4]
 21385  0130EA  0EFA               	movlw	250
 21386  0130EC  24E1               	addwf	fsr1l,w,c
 21387  0130EE  6ED9               	movwf	fsr2l,c
 21388  0130F0  0EFF               	movlw	255
 21389  0130F2  20E2               	addwfc	fsr1h,w,c
 21390  0130F4  6EDA               	movwf	fsr2h,c
 21391  0130F6  50DF               	movf	indf2,w,c
 21392  0130F8  6E30               	movwf	(btemp+11)^0,c
 21393                           
 21394                           ;stkvar	_grs @ sp[(-4)+0]
 21395  0130FA  0EFC               	movlw	-4
 21396  0130FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21397                           
 21398                           ;stkvar	_a @ sp[(-4)+-8]
 21399  013102  0EF6               	movlw	246
 21400  013104  24E1               	addwf	fsr1l,w,c
 21401  013106  6ED9               	movwf	fsr2l,c
 21402  013108  0EFF               	movlw	255
 21403  01310A  20E2               	addwfc	fsr1h,w,c
 21404  01310C  6EDA               	movwf	fsr2h,c
 21405                           
 21406                           ;stkvar	_b @ sp[(-4)+-4]
 21407  01310E  0EFA               	movlw	250
 21408  013110  24E1               	addwf	fsr1l,w,c
 21409  013112  6EE9               	movwf	fsr0l,c
 21410  013114  0EFF               	movlw	255
 21411  013116  20E2               	addwfc	fsr1h,w,c
 21412  013118  6EEA               	movwf	fsr0h,c
 21413  01311A  006F FF7F FFEF     	movff	indf2,indf0
 21414                           
 21415                           ;stkvar	_grs @ sp[(-4)+0]
 21416                           ;stkvar	_a @ sp[(-4)+-8]
 21417  013120  0EF6               	movlw	246
 21418  013122  24E1               	addwf	fsr1l,w,c
 21419  013124  6ED9               	movwf	fsr2l,c
 21420  013126  0EFF               	movlw	255
 21421  013128  20E2               	addwfc	fsr1h,w,c
 21422  01312A  6EDA               	movwf	fsr2h,c
 21423  01312C  0EFC               	movlw	-4
 21424  01312E  006F FF8F FFDF     	movff	plusw1,indf2
 21425                           
 21426                           ;stkvar	_b @ sp[(-4)+-4]
 21427  013134  0EFB               	movlw	251
 21428  013136  24E1               	addwf	fsr1l,w,c
 21429  013138  6ED9               	movwf	fsr2l,c
 21430  01313A  0EFF               	movlw	255
 21431  01313C  20E2               	addwfc	fsr1h,w,c
 21432  01313E  6EDA               	movwf	fsr2h,c
 21433  013140  50DF               	movf	indf2,w,c
 21434  013142  6E30               	movwf	(btemp+11)^0,c
 21435                           
 21436                           ;stkvar	_grs @ sp[(-4)+0]
 21437  013144  0EFC               	movlw	-4
 21438  013146  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21439                           
 21440                           ;stkvar	_a @ sp[(-4)+-8]
 21441  01314C  0EF7               	movlw	247
 21442  01314E  24E1               	addwf	fsr1l,w,c
 21443  013150  6ED9               	movwf	fsr2l,c
 21444  013152  0EFF               	movlw	255
 21445  013154  20E2               	addwfc	fsr1h,w,c
 21446  013156  6EDA               	movwf	fsr2h,c
 21447                           
 21448                           ;stkvar	_b @ sp[(-4)+-4]
 21449  013158  0EFB               	movlw	251
 21450  01315A  24E1               	addwf	fsr1l,w,c
 21451  01315C  6EE9               	movwf	fsr0l,c
 21452  01315E  0EFF               	movlw	255
 21453  013160  20E2               	addwfc	fsr1h,w,c
 21454  013162  6EEA               	movwf	fsr0h,c
 21455  013164  006F FF7F FFEF     	movff	indf2,indf0
 21456                           
 21457                           ;stkvar	_grs @ sp[(-4)+0]
 21458                           ;stkvar	_a @ sp[(-4)+-8]
 21459  01316A  0EF7               	movlw	247
 21460  01316C  24E1               	addwf	fsr1l,w,c
 21461  01316E  6ED9               	movwf	fsr2l,c
 21462  013170  0EFF               	movlw	255
 21463  013172  20E2               	addwfc	fsr1h,w,c
 21464  013174  6EDA               	movwf	fsr2h,c
 21465  013176  0EFC               	movlw	-4
 21466  013178  006F FF8F FFDF     	movff	plusw1,indf2
 21467  01317E                     l7993:
 21468                           
 21469                           ;stkvar	_grs @ sp[(-4)+0]
 21470  01317E  0EFC               	movlw	-4
 21471  013180  6AE3               	clrf	plusw1,c
 21472                           
 21473                           ;stkvar	_aexp @ sp[(-4)+2]
 21474  013182  0EFE               	movlw	-2
 21475  013184  50E3               	movf	plusw1,w,c
 21476  013186  6E2F               	movwf	(btemp+10)^0,c
 21477  013188  6A30               	clrf	(btemp+11)^0,c
 21478                           
 21479                           ;stkvar	_bexp @ sp[(-4)+1]
 21480  01318A  0EFD               	movlw	-3
 21481  01318C  50E3               	movf	plusw1,w,c
 21482  01318E  5E2F               	subwf	(btemp+10)^0,f,c
 21483  013190  0E00               	movlw	0
 21484  013192  5A30               	subwfb	(btemp+11)^0,f,c
 21485  013194  BE30               	btfsc	(btemp+11)^0,7,c
 21486  013196  D062               	goto	l8017
 21487  013198  5030               	movf	(btemp+11)^0,w,c
 21488  01319A  E104               	bnz	u7130
 21489  01319C  0E1A               	movlw	26
 21490  01319E  5C2F               	subwf	(btemp+10)^0,w,c
 21491  0131A0  A0D8               	btfss	status,0,c
 21492  0131A2  D05C               	goto	l8017
 21493  0131A4                     u7130:
 21494                           
 21495                           ;stkvar	_b @ sp[(-4)+-4]
 21496  0131A4  0EF8               	movlw	-8
 21497  0131A6  50E3               	movf	plusw1,w,c
 21498  0131A8  E10A               	bnz	u7141
 21499  0131AA  0EF9               	movlw	-7
 21500  0131AC  50E3               	movf	plusw1,w,c
 21501  0131AE  E107               	bnz	u7141
 21502  0131B0  0EFA               	movlw	-6
 21503  0131B2  50E3               	movf	plusw1,w,c
 21504  0131B4  E104               	bnz	u7141
 21505  0131B6  0EFB               	movlw	-5
 21506  0131B8  50E3               	movf	plusw1,w,c
 21507  0131BA  B4D8               	btfsc	status,2,c
 21508  0131BC  D003               	goto	u7140
 21509  0131BE                     u7141:
 21510  0131BE  6A30               	clrf	(btemp+11)^0,c
 21511  0131C0  2A30               	incf	(btemp+11)^0,f,c
 21512  0131C2  D001               	goto	u7158
 21513  0131C4                     u7140:
 21514  0131C4  6A30               	clrf	(btemp+11)^0,c
 21515  0131C6                     u7158:
 21516                           
 21517                           ;stkvar	_grs @ sp[(-4)+0]
 21518  0131C6  0EFC               	movlw	-4
 21519  0131C8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21520                           
 21521                           ;stkvar	_b @ sp[(-4)+-4]
 21522  0131CE  0EF8               	movlw	-8
 21523  0131D0  6AE3               	clrf	plusw1,c
 21524  0131D2  0EF9               	movlw	-7
 21525  0131D4  6AE3               	clrf	plusw1,c
 21526  0131D6  0EFA               	movlw	-6
 21527  0131D8  6AE3               	clrf	plusw1,c
 21528  0131DA  0EFB               	movlw	-5
 21529  0131DC  6AE3               	clrf	plusw1,c
 21530                           
 21531                           ;stkvar	_aexp @ sp[(-4)+2]
 21532                           ;stkvar	_bexp @ sp[(-4)+1]
 21533  0131DE  0EFE               	movlw	-2
 21534  0131E0  006F FF8C  F025    	movff	plusw1,btemp
 21535  0131E6  0EFD               	movlw	-3
 21536  0131E8  0060  F097  FFE3   	movff	btemp,plusw1
 21537  0131EE  D042               	goto	u7190
 21538  0131F0                     l8003:
 21539                           
 21540                           ;stkvar	_grs @ sp[(-4)+0]
 21541  0131F0  0EFC               	movlw	-4
 21542  0131F2  A0E3               	btfss	plusw1,0,c
 21543  0131F4  D00D               	goto	l8007
 21544                           
 21545                           ;stkvar	_grs @ sp[(-4)+0]
 21546  0131F6  0EFC               	movlw	-4
 21547  0131F8  006F FF8C  F030    	movff	plusw1,btemp+11
 21548  0131FE  90D8               	bcf	status,0,c
 21549  013200  3230               	rrcf	(btemp+11)^0,f,c
 21550  013202  0E01               	movlw	1
 21551  013204  1230               	iorwf	(btemp+11)^0,f,c
 21552                           
 21553                           ;stkvar	_grs @ sp[(-4)+0]
 21554  013206  0EFC               	movlw	-4
 21555  013208  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21556  01320E  D009               	goto	l8009
 21557  013210                     l8007:
 21558                           
 21559                           ;stkvar	_grs @ sp[(-4)+0]
 21560  013210  50E1               	movf	fsr1l,w,c
 21561  013212  0FFC               	addlw	-4
 21562  013214  6ED9               	movwf	fsr2l,c
 21563  013216  50E2               	movf	fsr1h,w,c
 21564  013218  6EDA               	movwf	fsr2h,c
 21565  01321A  0EFF               	movlw	255
 21566  01321C  22DA               	addwfc	fsr2h,f,c
 21567  01321E  90D8               	bcf	status,0,c
 21568  013220  32DF               	rrcf	indf2,f,c
 21569  013222                     l8009:
 21570                           
 21571                           ;stkvar	_b @ sp[(-4)+-4]
 21572  013222  0EF8               	movlw	-8
 21573  013224  A0E3               	btfss	plusw1,0,c
 21574  013226  D002               	goto	l8013
 21575                           
 21576                           ;stkvar	_grs @ sp[(-4)+0]
 21577  013228  0EFC               	movlw	-4
 21578  01322A  8EE3               	bsf	plusw1,7,c
 21579  01322C                     l8013:
 21580  01322C  0E01               	movlw	1
 21581  01322E  6E30               	movwf	(btemp+11)^0,c
 21582                           
 21583                           ;stkvar	_b @ sp[(-4)+-4]
 21584  013230  50E1               	movf	fsr1l,w,c
 21585  013232  0FF8               	addlw	-8
 21586  013234  6ED9               	movwf	fsr2l,c
 21587  013236  50E2               	movf	fsr1h,w,c
 21588  013238  6EDA               	movwf	fsr2h,c
 21589  01323A  0EFF               	movlw	255
 21590  01323C  22DA               	addwfc	fsr2h,f,c
 21591  01323E  2830               	incf	(btemp+11)^0,w,c
 21592  013240  52DE               	movf	postinc2,f,c
 21593  013242  D008               	goto	u7180
 21594  013244                     u7185:
 21595  013244  52DE               	movf	postinc2,f,c
 21596  013246  90D8               	bcf	status,0,c
 21597  013248  BEDC               	btfsc	preinc2,7,c
 21598  01324A  80D8               	bsf	status,0,c
 21599  01324C  32DD               	rrcf	postdec2,f,c
 21600  01324E  32DD               	rrcf	postdec2,f,c
 21601  013250  32DD               	rrcf	postdec2,f,c
 21602  013252  32DE               	rrcf	postinc2,f,c
 21603  013254                     u7180:
 21604  013254  2EE8               	decfsz	wreg,f,c
 21605  013256  D7F6               	goto	u7185
 21606                           
 21607                           ;stkvar	_bexp @ sp[(-4)+1]
 21608  013258  0EFD               	movlw	-3
 21609  01325A  2AE3               	incf	plusw1,f,c
 21610  01325C                     l8017:
 21611                           
 21612                           ;stkvar	_aexp @ sp[(-4)+2]
 21613                           ;stkvar	_bexp @ sp[(-4)+1]
 21614  01325C  50E1               	movf	fsr1l,w,c
 21615  01325E  0FFD               	addlw	-3
 21616  013260  6ED9               	movwf	fsr2l,c
 21617  013262  50E2               	movf	fsr1h,w,c
 21618  013264  6EDA               	movwf	fsr2h,c
 21619  013266  0EFF               	movlw	255
 21620  013268  22DA               	addwfc	fsr2h,f,c
 21621  01326A  0EFE               	movlw	-2
 21622  01326C  50E3               	movf	plusw1,w,c
 21623  01326E  5CDE               	subwf	postinc2,w,c
 21624  013270  A0D8               	btfss	status,0,c
 21625  013272  D7BE               	goto	l8003
 21626  013274                     u7190:
 21627                           
 21628                           ;stkvar	_signs @ sp[(-4)+3]
 21629  013274  0EFF               	movlw	-1
 21630  013276  BCE3               	btfsc	plusw1,6,c
 21631  013278  D066               	goto	l8045
 21632                           
 21633                           ;stkvar	_bexp @ sp[(-4)+1]
 21634  01327A  0EFD               	movlw	-3
 21635  01327C  50E3               	movf	plusw1,w,c
 21636  01327E  B4D8               	btfsc	status,2,c
 21637  013280  D0F2               	goto	u7290
 21638                           
 21639                           ;stkvar	_a @ sp[(-4)+-8]
 21640                           ;stkvar	_b @ sp[(-4)+-4]
 21641  013282  0EF8               	movlw	-8
 21642  013284  50E3               	movf	plusw1,w,c
 21643  013286  6E25               	movwf	btemp^0,c
 21644  013288  0EF4               	movlw	-12
 21645  01328A  50E3               	movf	plusw1,w,c
 21646  01328C  2625               	addwf	btemp^0,f,c
 21647  01328E  0EF8               	movlw	-8
 21648  013290  0060  F097  FFE3   	movff	btemp,plusw1
 21649  013296  0EF9               	movlw	-7
 21650  013298  50E3               	movf	plusw1,w,c
 21651  01329A  6E25               	movwf	btemp^0,c
 21652  01329C  0EF5               	movlw	-11
 21653  01329E  50E3               	movf	plusw1,w,c
 21654  0132A0  2225               	addwfc	btemp^0,f,c
 21655  0132A2  0EF9               	movlw	-7
 21656  0132A4  0060  F097  FFE3   	movff	btemp,plusw1
 21657  0132AA  0EFA               	movlw	-6
 21658  0132AC  50E3               	movf	plusw1,w,c
 21659  0132AE  6E25               	movwf	btemp^0,c
 21660  0132B0  0EF6               	movlw	-10
 21661  0132B2  50E3               	movf	plusw1,w,c
 21662  0132B4  2225               	addwfc	btemp^0,f,c
 21663  0132B6  0EFA               	movlw	-6
 21664  0132B8  0060  F097  FFE3   	movff	btemp,plusw1
 21665  0132BE  0EFB               	movlw	-5
 21666  0132C0  50E3               	movf	plusw1,w,c
 21667  0132C2  6E25               	movwf	btemp^0,c
 21668  0132C4  0EF7               	movlw	-9
 21669  0132C6  50E3               	movf	plusw1,w,c
 21670  0132C8  2225               	addwfc	btemp^0,f,c
 21671  0132CA  0EFB               	movlw	-5
 21672  0132CC  0060  F097  FFE3   	movff	btemp,plusw1
 21673                           
 21674                           ;stkvar	_b @ sp[(-4)+-4]
 21675  0132D2  0EFB               	movlw	-5
 21676  0132D4  A0E3               	btfss	plusw1,0,c
 21677  0132D6  D101               	goto	u7330
 21678                           
 21679                           ;stkvar	_grs @ sp[(-4)+0]
 21680  0132D8  0EFC               	movlw	-4
 21681  0132DA  A0E3               	btfss	plusw1,0,c
 21682  0132DC  D00D               	goto	l8035
 21683                           
 21684                           ;stkvar	_grs @ sp[(-4)+0]
 21685  0132DE  0EFC               	movlw	-4
 21686  0132E0  006F FF8C  F030    	movff	plusw1,btemp+11
 21687  0132E6  90D8               	bcf	status,0,c
 21688  0132E8  3230               	rrcf	(btemp+11)^0,f,c
 21689  0132EA  0E01               	movlw	1
 21690  0132EC  1230               	iorwf	(btemp+11)^0,f,c
 21691                           
 21692                           ;stkvar	_grs @ sp[(-4)+0]
 21693  0132EE  0EFC               	movlw	-4
 21694  0132F0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21695  0132F6  D009               	goto	l8037
 21696  0132F8                     l8035:
 21697                           
 21698                           ;stkvar	_grs @ sp[(-4)+0]
 21699  0132F8  50E1               	movf	fsr1l,w,c
 21700  0132FA  0FFC               	addlw	-4
 21701  0132FC  6ED9               	movwf	fsr2l,c
 21702  0132FE  50E2               	movf	fsr1h,w,c
 21703  013300  6EDA               	movwf	fsr2h,c
 21704  013302  0EFF               	movlw	255
 21705  013304  22DA               	addwfc	fsr2h,f,c
 21706  013306  90D8               	bcf	status,0,c
 21707  013308  32DF               	rrcf	indf2,f,c
 21708  01330A                     l8037:
 21709                           
 21710                           ;stkvar	_b @ sp[(-4)+-4]
 21711  01330A  0EF8               	movlw	-8
 21712  01330C  A0E3               	btfss	plusw1,0,c
 21713  01330E  D002               	goto	l8041
 21714                           
 21715                           ;stkvar	_grs @ sp[(-4)+0]
 21716  013310  0EFC               	movlw	-4
 21717  013312  8EE3               	bsf	plusw1,7,c
 21718  013314                     l8041:
 21719  013314  0E01               	movlw	1
 21720  013316  6E30               	movwf	(btemp+11)^0,c
 21721                           
 21722                           ;stkvar	_b @ sp[(-4)+-4]
 21723  013318  50E1               	movf	fsr1l,w,c
 21724  01331A  0FF8               	addlw	-8
 21725  01331C  6ED9               	movwf	fsr2l,c
 21726  01331E  50E2               	movf	fsr1h,w,c
 21727  013320  6EDA               	movwf	fsr2h,c
 21728  013322  0EFF               	movlw	255
 21729  013324  22DA               	addwfc	fsr2h,f,c
 21730  013326  2830               	incf	(btemp+11)^0,w,c
 21731  013328  52DE               	movf	postinc2,f,c
 21732  01332A  D008               	goto	u7250
 21733  01332C                     u7255:
 21734  01332C  52DE               	movf	postinc2,f,c
 21735  01332E  90D8               	bcf	status,0,c
 21736  013330  BEDC               	btfsc	preinc2,7,c
 21737  013332  80D8               	bsf	status,0,c
 21738  013334  32DD               	rrcf	postdec2,f,c
 21739  013336  32DD               	rrcf	postdec2,f,c
 21740  013338  32DD               	rrcf	postdec2,f,c
 21741  01333A  32DE               	rrcf	postinc2,f,c
 21742  01333C                     u7250:
 21743  01333C  2EE8               	decfsz	wreg,f,c
 21744  01333E  D7F6               	goto	u7255
 21745                           
 21746                           ;stkvar	_bexp @ sp[(-4)+1]
 21747  013340  0EFD               	movlw	-3
 21748  013342  2AE3               	incf	plusw1,f,c
 21749  013344  D0CA               	goto	u7330
 21750  013346                     l8045:
 21751                           
 21752                           ;stkvar	_a @ sp[(-4)+-8]
 21753                           ;stkvar	_b @ sp[(-4)+-4]
 21754  013346  50E1               	movf	fsr1l,w,c
 21755  013348  0FF8               	addlw	-8
 21756  01334A  6ED9               	movwf	fsr2l,c
 21757  01334C  50E2               	movf	fsr1h,w,c
 21758  01334E  6EDA               	movwf	fsr2h,c
 21759  013350  0EFF               	movlw	255
 21760  013352  22DA               	addwfc	fsr2h,f,c
 21761  013354  0EF4               	movlw	-12
 21762  013356  50E3               	movf	plusw1,w,c
 21763  013358  5CDE               	subwf	postinc2,w,c
 21764  01335A  0EF5               	movlw	-11
 21765  01335C  50E3               	movf	plusw1,w,c
 21766  01335E  58DE               	subwfb	postinc2,w,c
 21767  013360  0EF6               	movlw	-10
 21768  013362  50E3               	movf	plusw1,w,c
 21769  013364  58DE               	subwfb	postinc2,w,c
 21770  013366  50DE               	movf	postinc2,w,c
 21771  013368  0A80               	xorlw	128
 21772  01336A  6E25               	movwf	btemp^0,c
 21773  01336C  0EF7               	movlw	-9
 21774  01336E  50E3               	movf	plusw1,w,c
 21775  013370  0A80               	xorlw	128
 21776  013372  5825               	subwfb	btemp^0,w,c
 21777  013374  B0D8               	btfsc	status,0,c
 21778  013376  D053               	goto	l8057
 21779                           
 21780                           ;stkvar	_b @ sp[(-4)+-4]
 21781                           ;stkvar	_a @ sp[(-4)+-8]
 21782  013378  0EF4               	movlw	-12
 21783  01337A  006F FF8C  F02D    	movff	plusw1,btemp+8
 21784  013380  0EF5               	movlw	-11
 21785  013382  006F FF8C  F02E    	movff	plusw1,btemp+9
 21786  013388  0EF6               	movlw	-10
 21787  01338A  006F FF8C  F02F    	movff	plusw1,btemp+10
 21788  013390  0EF7               	movlw	-9
 21789  013392  006F FF8C  F030    	movff	plusw1,btemp+11
 21790  013398  0EF8               	movlw	-8
 21791  01339A  50E3               	movf	plusw1,w,c
 21792  01339C  5E2D               	subwf	(btemp+8)^0,f,c
 21793  01339E  0EF9               	movlw	-7
 21794  0133A0  50E3               	movf	plusw1,w,c
 21795  0133A2  5A2E               	subwfb	(btemp+9)^0,f,c
 21796  0133A4  0EFA               	movlw	-6
 21797  0133A6  50E3               	movf	plusw1,w,c
 21798  0133A8  5A2F               	subwfb	(btemp+10)^0,f,c
 21799  0133AA  0EFB               	movlw	-5
 21800  0133AC  50E3               	movf	plusw1,w,c
 21801  0133AE  5A30               	subwfb	(btemp+11)^0,f,c
 21802  0133B0  0EFF               	movlw	255
 21803  0133B2  242D               	addwf	(btemp+8)^0,w,c
 21804  0133B4  6E29               	movwf	(btemp+4)^0,c
 21805  0133B6  0EFF               	movlw	255
 21806  0133B8  202E               	addwfc	(btemp+9)^0,w,c
 21807  0133BA  6E2A               	movwf	(btemp+5)^0,c
 21808  0133BC  0EFF               	movlw	255
 21809  0133BE  202F               	addwfc	(btemp+10)^0,w,c
 21810  0133C0  6E2B               	movwf	(btemp+6)^0,c
 21811  0133C2  0EFF               	movlw	255
 21812  0133C4  2030               	addwfc	(btemp+11)^0,w,c
 21813  0133C6  6E2C               	movwf	(btemp+7)^0,c
 21814                           
 21815                           ;stkvar	_b @ sp[(-4)+-4]
 21816  0133C8  0EF8               	movlw	-8
 21817  0133CA  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 21818  0133D0  0EF9               	movlw	-7
 21819  0133D2  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 21820  0133D8  0EFA               	movlw	-6
 21821  0133DA  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 21822  0133E0  0EFB               	movlw	-5
 21823  0133E2  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 21824                           
 21825                           ;stkvar	_signs @ sp[(-4)+3]
 21826  0133E8  0EFF               	movlw	-1
 21827  0133EA  7EE3               	btg	plusw1,7,c
 21828                           
 21829                           ;stkvar	_grs @ sp[(-4)+0]
 21830  0133EC  0EFC               	movlw	-4
 21831  0133EE  50E3               	movf	plusw1,w,c
 21832  0133F0  0800               	sublw	0
 21833  0133F2  6E30               	movwf	(btemp+11)^0,c
 21834                           
 21835                           ;stkvar	_grs @ sp[(-4)+0]
 21836  0133F4  0EFC               	movlw	-4
 21837  0133F6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21838                           
 21839                           ;stkvar	_grs @ sp[(-4)+0]
 21840  0133FC  0EFC               	movlw	-4
 21841  0133FE  50E3               	movf	plusw1,w,c
 21842  013400  A4D8               	btfss	status,2,c
 21843  013402  D020               	goto	l8059
 21844                           
 21845                           ;stkvar	_b @ sp[(-4)+-4]
 21846  013404  50E1               	movf	fsr1l,w,c
 21847  013406  0FF8               	addlw	-8
 21848  013408  6ED9               	movwf	fsr2l,c
 21849  01340A  50E2               	movf	fsr1h,w,c
 21850  01340C  6EDA               	movwf	fsr2h,c
 21851  01340E  0EFF               	movlw	255
 21852  013410  22DA               	addwfc	fsr2h,f,c
 21853  013412  2ADE               	incf	postinc2,f,c
 21854  013414  0E00               	movlw	0
 21855  013416  22DE               	addwfc	postinc2,f,c
 21856  013418  22DE               	addwfc	postinc2,f,c
 21857  01341A  22DE               	addwfc	postinc2,f,c
 21858  01341C  D013               	goto	l8059
 21859  01341E                     l8057:
 21860                           
 21861                           ;stkvar	_a @ sp[(-4)+-8]
 21862                           ;stkvar	_b @ sp[(-4)+-4]
 21863  01341E  50E1               	movf	fsr1l,w,c
 21864  013420  0FF8               	addlw	-8
 21865  013422  6ED9               	movwf	fsr2l,c
 21866  013424  50E2               	movf	fsr1h,w,c
 21867  013426  6EDA               	movwf	fsr2h,c
 21868  013428  0EFF               	movlw	255
 21869  01342A  22DA               	addwfc	fsr2h,f,c
 21870  01342C  0EF4               	movlw	-12
 21871  01342E  50E3               	movf	plusw1,w,c
 21872  013430  5EDE               	subwf	postinc2,f,c
 21873  013432  0EF5               	movlw	-11
 21874  013434  50E3               	movf	plusw1,w,c
 21875  013436  5ADE               	subwfb	postinc2,f,c
 21876  013438  0EF6               	movlw	-10
 21877  01343A  50E3               	movf	plusw1,w,c
 21878  01343C  5ADE               	subwfb	postinc2,f,c
 21879  01343E  0EF7               	movlw	-9
 21880  013440  50E3               	movf	plusw1,w,c
 21881  013442  5ADE               	subwfb	postinc2,f,c
 21882  013444                     l8059:
 21883                           
 21884                           ;stkvar	_b @ sp[(-4)+-4]
 21885  013444  0EF8               	movlw	-8
 21886  013446  50E3               	movf	plusw1,w,c
 21887  013448  E145               	bnz	l8081
 21888  01344A  0EF9               	movlw	-7
 21889  01344C  50E3               	movf	plusw1,w,c
 21890  01344E  E142               	bnz	l8081
 21891  013450  0EFA               	movlw	-6
 21892  013452  50E3               	movf	plusw1,w,c
 21893  013454  E13F               	bnz	l8081
 21894  013456  0EFB               	movlw	-5
 21895  013458  50E3               	movf	plusw1,w,c
 21896  01345A  A4D8               	btfss	status,2,c
 21897  01345C  D03B               	goto	l8081
 21898                           
 21899                           ;stkvar	_grs @ sp[(-4)+0]
 21900  01345E  0EFC               	movlw	-4
 21901  013460  50E3               	movf	plusw1,w,c
 21902  013462  A4D8               	btfss	status,2,c
 21903  013464  D037               	goto	l8081
 21904  013466                     u7290:
 21905  013466  0E00               	movlw	0
 21906  013468  6E25               	movwf	btemp^0,c
 21907  01346A  0E00               	movlw	0
 21908  01346C  6E26               	movwf	(btemp+1)^0,c
 21909  01346E  0E00               	movlw	0
 21910  013470  6E27               	movwf	(btemp+2)^0,c
 21911  013472  0E00               	movlw	0
 21912  013474  6E28               	movwf	(btemp+3)^0,c
 21913  013476  D0C6               	goto	l2761
 21914  013478                     l8067:
 21915                           
 21916                           ;stkvar	_b @ sp[(-4)+-4]
 21917  013478  90D8               	bcf	status,0,c
 21918  01347A  0EF8               	movlw	-8
 21919  01347C  36E3               	rlcf	plusw1,f,c
 21920  01347E  0EF9               	movlw	-7
 21921  013480  36E3               	rlcf	plusw1,f,c
 21922  013482  0EFA               	movlw	-6
 21923  013484  36E3               	rlcf	plusw1,f,c
 21924  013486  0EFB               	movlw	-5
 21925  013488  36E3               	rlcf	plusw1,f,c
 21926                           
 21927                           ;stkvar	_grs @ sp[(-4)+0]
 21928  01348A  0EFC               	movlw	-4
 21929  01348C  AEE3               	btfss	plusw1,7,c
 21930  01348E  D002               	goto	l2773
 21931                           
 21932                           ;stkvar	_b @ sp[(-4)+-4]
 21933  013490  0EF8               	movlw	-8
 21934  013492  80E3               	bsf	plusw1,0,c
 21935  013494                     l2773:
 21936                           
 21937                           ;stkvar	_grs @ sp[(-4)+0]
 21938  013494  0EFC               	movlw	-4
 21939  013496  A0E3               	btfss	plusw1,0,c
 21940  013498  D00E               	goto	l8075
 21941                           
 21942                           ;stkvar	_grs @ sp[(-4)+0]
 21943  01349A  0EFC               	movlw	-4
 21944  01349C  006F FF8C  F030    	movff	plusw1,btemp+11
 21945  0134A2  90D8               	bcf	status,0,c
 21946  0134A4  3430               	rlcf	(btemp+11)^0,w,c
 21947  0134A6  6E2F               	movwf	(btemp+10)^0,c
 21948  0134A8  0E01               	movlw	1
 21949  0134AA  122F               	iorwf	(btemp+10)^0,f,c
 21950                           
 21951                           ;stkvar	_grs @ sp[(-4)+0]
 21952  0134AC  0EFC               	movlw	-4
 21953  0134AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21954  0134B4  D009               	goto	l8077
 21955  0134B6                     l8075:
 21956                           
 21957                           ;stkvar	_grs @ sp[(-4)+0]
 21958  0134B6  50E1               	movf	fsr1l,w,c
 21959  0134B8  0FFC               	addlw	-4
 21960  0134BA  6ED9               	movwf	fsr2l,c
 21961  0134BC  50E2               	movf	fsr1h,w,c
 21962  0134BE  6EDA               	movwf	fsr2h,c
 21963  0134C0  0EFF               	movlw	255
 21964  0134C2  22DA               	addwfc	fsr2h,f,c
 21965  0134C4  90D8               	bcf	status,0,c
 21966  0134C6  36DF               	rlcf	indf2,f,c
 21967  0134C8                     l8077:
 21968                           
 21969                           ;stkvar	_bexp @ sp[(-4)+1]
 21970  0134C8  0EFD               	movlw	-3
 21971  0134CA  50E3               	movf	plusw1,w,c
 21972  0134CC  B4D8               	btfsc	status,2,c
 21973  0134CE  D002               	goto	l8081
 21974                           
 21975                           ;stkvar	_bexp @ sp[(-4)+1]
 21976  0134D0  0EFD               	movlw	-3
 21977  0134D2  06E3               	decf	plusw1,f,c
 21978  0134D4                     l8081:
 21979                           
 21980                           ;stkvar	_b @ sp[(-4)+-4]
 21981  0134D4  0EFA               	movlw	-6
 21982  0134D6  AEE3               	btfss	plusw1,7,c
 21983  0134D8  D7CF               	goto	l8067
 21984  0134DA                     u7330:
 21985                           
 21986                           ;stkvar	_aexp @ sp[(-4)+2]
 21987  0134DA  0EFE               	movlw	-2
 21988  0134DC  6AE3               	clrf	plusw1,c
 21989                           
 21990                           ;stkvar	_grs @ sp[(-4)+0]
 21991  0134DE  0EFC               	movlw	-4
 21992  0134E0  AEE3               	btfss	plusw1,7,c
 21993  0134E2  D00F               	goto	l8095
 21994                           
 21995                           ;stkvar	_grs @ sp[(-4)+0]
 21996  0134E4  0EFC               	movlw	-4
 21997  0134E6  006F FF8C  F030    	movff	plusw1,btemp+11
 21998  0134EC  0E7F               	movlw	127
 21999  0134EE  1630               	andwf	(btemp+11)^0,f,c
 22000  0134F0  B4D8               	btfsc	status,2,c
 22001  0134F2  D004               	goto	l8091
 22002  0134F4                     u7350:
 22003                           
 22004                           ;stkvar	_aexp @ sp[(-4)+2]
 22005  0134F4  0EFE               	movlw	-2
 22006  0134F6  6AE3               	clrf	plusw1,c
 22007  0134F8  2AE3               	incf	plusw1,f,c
 22008  0134FA  D003               	goto	l8095
 22009  0134FC                     l8091:
 22010                           
 22011                           ;stkvar	_b @ sp[(-4)+-4]
 22012  0134FC  0EF8               	movlw	-8
 22013  0134FE  B0E3               	btfsc	plusw1,0,c
 22014  013500  D7F9               	goto	u7350
 22015  013502                     l8095:
 22016                           
 22017                           ;stkvar	_aexp @ sp[(-4)+2]
 22018  013502  0EFE               	movlw	-2
 22019  013504  50E3               	movf	plusw1,w,c
 22020  013506  B4D8               	btfsc	status,2,c
 22021  013508  D02B               	goto	l8107
 22022                           
 22023                           ;stkvar	_b @ sp[(-4)+-4]
 22024  01350A  50E1               	movf	fsr1l,w,c
 22025  01350C  0FF8               	addlw	-8
 22026  01350E  6ED9               	movwf	fsr2l,c
 22027  013510  50E2               	movf	fsr1h,w,c
 22028  013512  6EDA               	movwf	fsr2h,c
 22029  013514  0EFF               	movlw	255
 22030  013516  22DA               	addwfc	fsr2h,f,c
 22031  013518  2ADE               	incf	postinc2,f,c
 22032  01351A  0E00               	movlw	0
 22033  01351C  22DE               	addwfc	postinc2,f,c
 22034  01351E  22DE               	addwfc	postinc2,f,c
 22035  013520  22DE               	addwfc	postinc2,f,c
 22036                           
 22037                           ;stkvar	_b @ sp[(-4)+-4]
 22038  013522  0EFB               	movlw	-5
 22039  013524  A0E3               	btfss	plusw1,0,c
 22040  013526  D01C               	goto	l8107
 22041  013528  0E01               	movlw	1
 22042  01352A  6E30               	movwf	(btemp+11)^0,c
 22043                           
 22044                           ;stkvar	_b @ sp[(-4)+-4]
 22045  01352C  50E1               	movf	fsr1l,w,c
 22046  01352E  0FF8               	addlw	-8
 22047  013530  6ED9               	movwf	fsr2l,c
 22048  013532  50E2               	movf	fsr1h,w,c
 22049  013534  6EDA               	movwf	fsr2h,c
 22050  013536  0EFF               	movlw	255
 22051  013538  22DA               	addwfc	fsr2h,f,c
 22052  01353A  2830               	incf	(btemp+11)^0,w,c
 22053  01353C  52DE               	movf	postinc2,f,c
 22054  01353E  D008               	goto	u7390
 22055  013540                     u7395:
 22056  013540  52DE               	movf	postinc2,f,c
 22057  013542  90D8               	bcf	status,0,c
 22058  013544  BEDC               	btfsc	preinc2,7,c
 22059  013546  80D8               	bsf	status,0,c
 22060  013548  32DD               	rrcf	postdec2,f,c
 22061  01354A  32DD               	rrcf	postdec2,f,c
 22062  01354C  32DD               	rrcf	postdec2,f,c
 22063  01354E  32DE               	rrcf	postinc2,f,c
 22064  013550                     u7390:
 22065  013550  2EE8               	decfsz	wreg,f,c
 22066  013552  D7F6               	goto	u7395
 22067                           
 22068                           ;stkvar	_bexp @ sp[(-4)+1]
 22069  013554  0EFD               	movlw	-3
 22070  013556  28E3               	incf	plusw1,w,c
 22071  013558  B4D8               	btfsc	status,2,c
 22072  01355A  D002               	goto	l8107
 22073                           
 22074                           ;stkvar	_bexp @ sp[(-4)+1]
 22075  01355C  0EFD               	movlw	-3
 22076  01355E  2AE3               	incf	plusw1,f,c
 22077  013560                     l8107:
 22078                           
 22079                           ;stkvar	_bexp @ sp[(-4)+1]
 22080  013560  0EFD               	movlw	-3
 22081  013562  28E3               	incf	plusw1,w,c
 22082  013564  B4D8               	btfsc	status,2,c
 22083  013566  D004               	goto	u7420
 22084                           
 22085                           ;stkvar	_bexp @ sp[(-4)+1]
 22086  013568  0EFD               	movlw	-3
 22087  01356A  50E3               	movf	plusw1,w,c
 22088  01356C  A4D8               	btfss	status,2,c
 22089  01356E  D00E               	goto	l8117
 22090  013570                     u7420:
 22091                           
 22092                           ;stkvar	_b @ sp[(-4)+-4]
 22093  013570  0EF8               	movlw	-8
 22094  013572  6AE3               	clrf	plusw1,c
 22095  013574  0EF9               	movlw	-7
 22096  013576  6AE3               	clrf	plusw1,c
 22097  013578  0EFA               	movlw	-6
 22098  01357A  6AE3               	clrf	plusw1,c
 22099  01357C  0EFB               	movlw	-5
 22100  01357E  6AE3               	clrf	plusw1,c
 22101                           
 22102                           ;stkvar	_bexp @ sp[(-4)+1]
 22103  013580  0EFD               	movlw	-3
 22104  013582  50E3               	movf	plusw1,w,c
 22105  013584  A4D8               	btfss	status,2,c
 22106  013586  D002               	goto	l8117
 22107                           
 22108                           ;stkvar	_signs @ sp[(-4)+3]
 22109  013588  0EFF               	movlw	-1
 22110  01358A  6AE3               	clrf	plusw1,c
 22111  01358C                     l8117:
 22112                           
 22113                           ;stkvar	_bexp @ sp[(-4)+1]
 22114  01358C  0EFD               	movlw	-3
 22115  01358E  A0E3               	btfss	plusw1,0,c
 22116  013590  D009               	goto	l8121
 22117                           
 22118                           ;stkvar	_b @ sp[(-4)+-4]
 22119  013592  0EFA               	movlw	250
 22120  013594  24E1               	addwf	fsr1l,w,c
 22121  013596  6ED9               	movwf	fsr2l,c
 22122  013598  0EFF               	movlw	255
 22123  01359A  20E2               	addwfc	fsr1h,w,c
 22124  01359C  6EDA               	movwf	fsr2h,c
 22125  01359E  0E00               	movlw	0
 22126  0135A0  8EDB               	bsf	plusw2,7,c
 22127  0135A2  D008               	goto	l8123
 22128  0135A4                     l8121:
 22129                           
 22130                           ;stkvar	_b @ sp[(-4)+-4]
 22131  0135A4  0EFA               	movlw	250
 22132  0135A6  24E1               	addwf	fsr1l,w,c
 22133  0135A8  6ED9               	movwf	fsr2l,c
 22134  0135AA  0EFF               	movlw	255
 22135  0135AC  20E2               	addwfc	fsr1h,w,c
 22136  0135AE  6EDA               	movwf	fsr2h,c
 22137  0135B0  0E7F               	movlw	127
 22138  0135B2  16DF               	andwf	indf2,f,c
 22139  0135B4                     l8123:
 22140                           
 22141                           ;stkvar	_b @ sp[(-4)+-4]
 22142  0135B4  0EFB               	movlw	251
 22143  0135B6  24E1               	addwf	fsr1l,w,c
 22144  0135B8  6ED9               	movwf	fsr2l,c
 22145  0135BA  0EFF               	movlw	255
 22146  0135BC  20E2               	addwfc	fsr1h,w,c
 22147  0135BE  6EDA               	movwf	fsr2h,c
 22148                           
 22149                           ;stkvar	_bexp @ sp[(-4)+1]
 22150  0135C0  0EFD               	movlw	-3
 22151  0135C2  006F FF8C  F030    	movff	plusw1,btemp+11
 22152  0135C8  90D8               	bcf	status,0,c
 22153  0135CA  3030               	rrcf	(btemp+11)^0,w,c
 22154  0135CC  6EDF               	movwf	indf2,c
 22155                           
 22156                           ;stkvar	_signs @ sp[(-4)+3]
 22157  0135CE  0EFF               	movlw	-1
 22158  0135D0  AEE3               	btfss	plusw1,7,c
 22159  0135D2  D008               	goto	l8129
 22160                           
 22161                           ;stkvar	_b @ sp[(-4)+-4]
 22162  0135D4  0EFB               	movlw	251
 22163  0135D6  24E1               	addwf	fsr1l,w,c
 22164  0135D8  6ED9               	movwf	fsr2l,c
 22165  0135DA  0EFF               	movlw	255
 22166  0135DC  20E2               	addwfc	fsr1h,w,c
 22167  0135DE  6EDA               	movwf	fsr2h,c
 22168  0135E0  0E00               	movlw	0
 22169  0135E2  8EDB               	bsf	plusw2,7,c
 22170  0135E4                     l8129:
 22171                           
 22172                           ;stkvar	_b @ sp[(-4)+-4]
 22173  0135E4  0EF8               	movlw	-8
 22174  0135E6  006F FF8C  F025    	movff	plusw1,btemp
 22175  0135EC  0EF9               	movlw	-7
 22176  0135EE  006F FF8C  F026    	movff	plusw1,btemp+1
 22177  0135F4  0EFA               	movlw	-6
 22178  0135F6  006F FF8C  F027    	movff	plusw1,btemp+2
 22179  0135FC  0EFB               	movlw	-5
 22180  0135FE  006F FF8C  F028    	movff	plusw1,btemp+3
 22181  013604                     l2761:
 22182                           
 22183                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22184  013604  0EF4               	movlw	244
 22185  013606  26E1               	addwf	fsr1l,f,c
 22186  013608  0EFF               	movlw	255
 22187  01360A  22E2               	addwfc	fsr1h,f,c
 22188  01360C  0012               	return		;funcret
 22189  01360E                     __end_of___fladd:
 22190                           	opt callstack 0
 22191                           
 22192 ;; *************** function ___flmul *****************
 22193 ;; Defined at:
 22194 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 22195 ;; Parameters:    Size  Location     Type
 22196 ;;  b               4  [STACK] unsigned char 
 22197 ;;  a               4  [STACK] unsigned char 
 22198 ;; Auto vars:     Size  Location     Type
 22199 ;;  prod            4  [STACK] struct .
 22200 ;;  grs             4  [STACK] unsigned long 
 22201 ;;  temp            2  [STACK] struct .
 22202 ;;  bexp            1  [STACK] unsigned char 
 22203 ;;  aexp            1  [STACK] unsigned char 
 22204 ;;  sign            1  [STACK] unsigned char 
 22205 ;; Return value:  Size  Location     Type
 22206 ;;                  4  [STACK] unsigned char 
 22207 ;; Registers used:
 22208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22209 ;; Tracked objects:
 22210 ;;		On entry : 0/2
 22211 ;;		On exit  : 0/0
 22212 ;;		Unchanged: 0/0
 22213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22218 ;;Total ram usage:        0 bytes
 22219 ;; Hardware stack levels used:    1
 22220 ;; Hardware stack levels required when called:    7
 22221 ;; This function calls:
 22222 ;;		Nothing
 22223 ;; This function is called by:
 22224 ;;		_conv_raw_result
 22225 ;;		_lp_filter
 22226 ;;		_calc_model_data
 22227 ;;		_calc_bsoc
 22228 ;;		_efgtoa
 22229 ;; This function uses a reentrant model
 22230 ;;
 22231                           
 22232                           	psect	text94
 22233  012628                     __ptext94:
 22234                           	opt callstack 0
 22235  012628                     ___flmul:
 22236                           	opt callstack 0
 22237                           
 22238                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22239  012628  0E0D               	movlw	13
 22240  01262A  26E1               	addwf	fsr1l,f,c
 22241  01262C  0E00               	movlw	0
 22242  01262E  22E2               	addwfc	fsr1h,f,c
 22243                           
 22244                           ;stkvar	_b @ sp[(-13)+-4]
 22245                           
 22246                           ;incstack = 0
 22247  012630  0EF2               	movlw	242
 22248  012632  24E1               	addwf	fsr1l,w,c
 22249  012634  6ED9               	movwf	fsr2l,c
 22250  012636  0EFF               	movlw	255
 22251  012638  20E2               	addwfc	fsr1h,w,c
 22252  01263A  6EDA               	movwf	fsr2h,c
 22253  01263C  50DF               	movf	indf2,w,c
 22254  01263E  6E30               	movwf	(btemp+11)^0,c
 22255  012640  0E80               	movlw	128
 22256  012642  1630               	andwf	(btemp+11)^0,f,c
 22257                           
 22258                           ;stkvar	_sign @ sp[(-13)+12]
 22259  012644  0EFF               	movlw	-1
 22260  012646  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22261                           
 22262                           ;stkvar	_b @ sp[(-13)+-4]
 22263  01264C  0EF2               	movlw	242
 22264  01264E  24E1               	addwf	fsr1l,w,c
 22265  012650  6ED9               	movwf	fsr2l,c
 22266  012652  0EFF               	movlw	255
 22267  012654  20E2               	addwfc	fsr1h,w,c
 22268  012656  6EDA               	movwf	fsr2h,c
 22269  012658  50DF               	movf	indf2,w,c
 22270  01265A  6E30               	movwf	(btemp+11)^0,c
 22271  01265C  90D8               	bcf	status,0,c
 22272  01265E  3430               	rlcf	(btemp+11)^0,w,c
 22273  012660  6E2F               	movwf	(btemp+10)^0,c
 22274                           
 22275                           ;stkvar	_bexp @ sp[(-13)+10]
 22276  012662  0EFD               	movlw	-3
 22277  012664  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22278                           
 22279                           ;stkvar	_b @ sp[(-13)+-4]
 22280  01266A  0EF1               	movlw	241
 22281  01266C  24E1               	addwf	fsr1l,w,c
 22282  01266E  6ED9               	movwf	fsr2l,c
 22283  012670  0EFF               	movlw	255
 22284  012672  20E2               	addwfc	fsr1h,w,c
 22285  012674  6EDA               	movwf	fsr2h,c
 22286  012676  AEDF               	btfss	indf2,7,c
 22287  012678  D002               	goto	l8297
 22288                           
 22289                           ;stkvar	_bexp @ sp[(-13)+10]
 22290  01267A  0EFD               	movlw	-3
 22291  01267C  80E3               	bsf	plusw1,0,c
 22292  01267E                     l8297:
 22293                           
 22294                           ;stkvar	_bexp @ sp[(-13)+10]
 22295  01267E  0EFD               	movlw	-3
 22296  012680  50E3               	movf	plusw1,w,c
 22297  012682  B4D8               	btfsc	status,2,c
 22298  012684  D01F               	goto	l8305
 22299                           
 22300                           ;stkvar	_bexp @ sp[(-13)+10]
 22301  012686  0EFD               	movlw	-3
 22302  012688  28E3               	incf	plusw1,w,c
 22303  01268A  A4D8               	btfss	status,2,c
 22304  01268C  D018               	goto	l8303
 22305  01268E  0E00               	movlw	0
 22306  012690  6E2D               	movwf	(btemp+8)^0,c
 22307  012692  0E00               	movlw	0
 22308  012694  6E2E               	movwf	(btemp+9)^0,c
 22309  012696  0E00               	movlw	0
 22310  012698  6E2F               	movwf	(btemp+10)^0,c
 22311  01269A  0E00               	movlw	0
 22312  01269C  6E30               	movwf	(btemp+11)^0,c
 22313                           
 22314                           ;stkvar	_b @ sp[(-13)+-4]
 22315  01269E  0EEF               	movlw	-17
 22316  0126A0  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22317  0126A6  0EF0               	movlw	-16
 22318  0126A8  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22319  0126AE  0EF1               	movlw	-15
 22320  0126B0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22321  0126B6  0EF2               	movlw	-14
 22322  0126B8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22323  0126BE                     l8303:
 22324                           
 22325                           ;stkvar	_b @ sp[(-13)+-4]
 22326  0126BE  0EF1               	movlw	-15
 22327  0126C0  8EE3               	bsf	plusw1,7,c
 22328  0126C2  D018               	goto	l8307
 22329  0126C4                     l8305:
 22330  0126C4  0E00               	movlw	0
 22331  0126C6  6E2D               	movwf	(btemp+8)^0,c
 22332  0126C8  0E00               	movlw	0
 22333  0126CA  6E2E               	movwf	(btemp+9)^0,c
 22334  0126CC  0E00               	movlw	0
 22335  0126CE  6E2F               	movwf	(btemp+10)^0,c
 22336  0126D0  0E00               	movlw	0
 22337  0126D2  6E30               	movwf	(btemp+11)^0,c
 22338                           
 22339                           ;stkvar	_b @ sp[(-13)+-4]
 22340  0126D4  0EEF               	movlw	-17
 22341  0126D6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22342  0126DC  0EF0               	movlw	-16
 22343  0126DE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22344  0126E4  0EF1               	movlw	-15
 22345  0126E6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22346  0126EC  0EF2               	movlw	-14
 22347  0126EE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22348  0126F4                     l8307:
 22349                           
 22350                           ;stkvar	_a @ sp[(-13)+-8]
 22351  0126F4  0EEE               	movlw	238
 22352  0126F6  24E1               	addwf	fsr1l,w,c
 22353  0126F8  6ED9               	movwf	fsr2l,c
 22354  0126FA  0EFF               	movlw	255
 22355  0126FC  20E2               	addwfc	fsr1h,w,c
 22356  0126FE  6EDA               	movwf	fsr2h,c
 22357  012700  50DF               	movf	indf2,w,c
 22358  012702  6E30               	movwf	(btemp+11)^0,c
 22359  012704  0E80               	movlw	128
 22360  012706  1630               	andwf	(btemp+11)^0,f,c
 22361                           
 22362                           ;stkvar	_sign @ sp[(-13)+12]
 22363  012708  50E1               	movf	fsr1l,w,c
 22364  01270A  0FFF               	addlw	-1
 22365  01270C  6ED9               	movwf	fsr2l,c
 22366  01270E  50E2               	movf	fsr1h,w,c
 22367  012710  6EDA               	movwf	fsr2h,c
 22368  012712  0EFF               	movlw	255
 22369  012714  22DA               	addwfc	fsr2h,f,c
 22370  012716  5030               	movf	(btemp+11)^0,w,c
 22371  012718  1ADF               	xorwf	indf2,f,c
 22372                           
 22373                           ;stkvar	_a @ sp[(-13)+-8]
 22374  01271A  0EEE               	movlw	238
 22375  01271C  24E1               	addwf	fsr1l,w,c
 22376  01271E  6ED9               	movwf	fsr2l,c
 22377  012720  0EFF               	movlw	255
 22378  012722  20E2               	addwfc	fsr1h,w,c
 22379  012724  6EDA               	movwf	fsr2h,c
 22380  012726  50DF               	movf	indf2,w,c
 22381  012728  6E30               	movwf	(btemp+11)^0,c
 22382  01272A  90D8               	bcf	status,0,c
 22383  01272C  3430               	rlcf	(btemp+11)^0,w,c
 22384  01272E  6E2F               	movwf	(btemp+10)^0,c
 22385                           
 22386                           ;stkvar	_aexp @ sp[(-13)+11]
 22387  012730  0EFE               	movlw	-2
 22388  012732  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22389                           
 22390                           ;stkvar	_a @ sp[(-13)+-8]
 22391  012738  0EED               	movlw	237
 22392  01273A  24E1               	addwf	fsr1l,w,c
 22393  01273C  6ED9               	movwf	fsr2l,c
 22394  01273E  0EFF               	movlw	255
 22395  012740  20E2               	addwfc	fsr1h,w,c
 22396  012742  6EDA               	movwf	fsr2h,c
 22397  012744  AEDF               	btfss	indf2,7,c
 22398  012746  D002               	goto	l8315
 22399                           
 22400                           ;stkvar	_aexp @ sp[(-13)+11]
 22401  012748  0EFE               	movlw	-2
 22402  01274A  80E3               	bsf	plusw1,0,c
 22403  01274C                     l8315:
 22404                           
 22405                           ;stkvar	_aexp @ sp[(-13)+11]
 22406  01274C  0EFE               	movlw	-2
 22407  01274E  50E3               	movf	plusw1,w,c
 22408  012750  B4D8               	btfsc	status,2,c
 22409  012752  D01F               	goto	l8323
 22410                           
 22411                           ;stkvar	_aexp @ sp[(-13)+11]
 22412  012754  0EFE               	movlw	-2
 22413  012756  28E3               	incf	plusw1,w,c
 22414  012758  A4D8               	btfss	status,2,c
 22415  01275A  D018               	goto	l8321
 22416  01275C  0E00               	movlw	0
 22417  01275E  6E2D               	movwf	(btemp+8)^0,c
 22418  012760  0E00               	movlw	0
 22419  012762  6E2E               	movwf	(btemp+9)^0,c
 22420  012764  0E00               	movlw	0
 22421  012766  6E2F               	movwf	(btemp+10)^0,c
 22422  012768  0E00               	movlw	0
 22423  01276A  6E30               	movwf	(btemp+11)^0,c
 22424                           
 22425                           ;stkvar	_a @ sp[(-13)+-8]
 22426  01276C  0EEB               	movlw	-21
 22427  01276E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22428  012774  0EEC               	movlw	-20
 22429  012776  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22430  01277C  0EED               	movlw	-19
 22431  01277E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22432  012784  0EEE               	movlw	-18
 22433  012786  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22434  01278C                     l8321:
 22435                           
 22436                           ;stkvar	_a @ sp[(-13)+-8]
 22437  01278C  0EED               	movlw	-19
 22438  01278E  8EE3               	bsf	plusw1,7,c
 22439  012790  D018               	goto	l8325
 22440  012792                     l8323:
 22441  012792  0E00               	movlw	0
 22442  012794  6E2D               	movwf	(btemp+8)^0,c
 22443  012796  0E00               	movlw	0
 22444  012798  6E2E               	movwf	(btemp+9)^0,c
 22445  01279A  0E00               	movlw	0
 22446  01279C  6E2F               	movwf	(btemp+10)^0,c
 22447  01279E  0E00               	movlw	0
 22448  0127A0  6E30               	movwf	(btemp+11)^0,c
 22449                           
 22450                           ;stkvar	_a @ sp[(-13)+-8]
 22451  0127A2  0EEB               	movlw	-21
 22452  0127A4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22453  0127AA  0EEC               	movlw	-20
 22454  0127AC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22455  0127B2  0EED               	movlw	-19
 22456  0127B4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22457  0127BA  0EEE               	movlw	-18
 22458  0127BC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22459  0127C2                     l8325:
 22460                           
 22461                           ;stkvar	_aexp @ sp[(-13)+11]
 22462  0127C2  0EFE               	movlw	-2
 22463  0127C4  50E3               	movf	plusw1,w,c
 22464  0127C6  B4D8               	btfsc	status,2,c
 22465  0127C8  D004               	goto	u7770
 22466                           
 22467                           ;stkvar	_bexp @ sp[(-13)+10]
 22468  0127CA  0EFD               	movlw	-3
 22469  0127CC  50E3               	movf	plusw1,w,c
 22470  0127CE  A4D8               	btfss	status,2,c
 22471  0127D0  D009               	goto	l8333
 22472  0127D2                     u7770:
 22473  0127D2  0E00               	movlw	0
 22474  0127D4  6E25               	movwf	btemp^0,c
 22475  0127D6  0E00               	movlw	0
 22476  0127D8  6E26               	movwf	(btemp+1)^0,c
 22477  0127DA  0E00               	movlw	0
 22478  0127DC  6E27               	movwf	(btemp+2)^0,c
 22479  0127DE  0E00               	movlw	0
 22480  0127E0  6E28               	movwf	(btemp+3)^0,c
 22481  0127E2  D332               	goto	l2842
 22482  0127E4                     l8333:
 22483                           
 22484                           ;stkvar	_b @ sp[(-13)+-4]
 22485  0127E4  0EEF               	movlw	-17
 22486  0127E6  006F FF8C  F030    	movff	plusw1,btemp+11
 22487                           
 22488                           ;stkvar	_a @ sp[(-13)+-8]
 22489  0127EC  0EED               	movlw	237
 22490  0127EE  24E1               	addwf	fsr1l,w,c
 22491  0127F0  6ED9               	movwf	fsr2l,c
 22492  0127F2  0EFF               	movlw	255
 22493  0127F4  20E2               	addwfc	fsr1h,w,c
 22494  0127F6  6EDA               	movwf	fsr2h,c
 22495  0127F8  50DF               	movf	indf2,w,c
 22496  0127FA  0230               	mulwf	(btemp+11)^0,c
 22497                           
 22498                           ;stkvar	_temp @ sp[(-13)+8]
 22499  0127FC  0EFB               	movlw	-5
 22500  0127FE  006F FFCF FFE3     	movff	prodl,plusw1
 22501  012804  0EFC               	movlw	-4
 22502  012806  006F FFD3 FFE3     	movff	prodh,plusw1
 22503                           
 22504                           ;stkvar	_temp @ sp[(-13)+8]
 22505  01280C  0EFB               	movlw	-5
 22506  01280E  006F FF8C  F030    	movff	plusw1,btemp+11
 22507  012814  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22508  01281A  6A2A               	clrf	(btemp+5)^0,c
 22509  01281C  6A2B               	clrf	(btemp+6)^0,c
 22510  01281E  6A2C               	clrf	(btemp+7)^0,c
 22511                           
 22512                           ;stkvar	_grs @ sp[(-13)+4]
 22513  012820  0EF7               	movlw	-9
 22514  012822  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22515  012828  0EF8               	movlw	-8
 22516  01282A  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22517  012830  0EF9               	movlw	-7
 22518  012832  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22519  012838  0EFA               	movlw	-6
 22520  01283A  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22521                           
 22522                           ;stkvar	_temp @ sp[(-13)+8]
 22523  012840  0EFC               	movlw	252
 22524  012842  24E1               	addwf	fsr1l,w,c
 22525  012844  6ED9               	movwf	fsr2l,c
 22526  012846  0EFF               	movlw	255
 22527  012848  20E2               	addwfc	fsr1h,w,c
 22528  01284A  6EDA               	movwf	fsr2h,c
 22529  01284C  50DF               	movf	indf2,w,c
 22530  01284E  6E30               	movwf	(btemp+11)^0,c
 22531  012850  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22532  012856  6A2A               	clrf	(btemp+5)^0,c
 22533  012858  6A2B               	clrf	(btemp+6)^0,c
 22534  01285A  6A2C               	clrf	(btemp+7)^0,c
 22535                           
 22536                           ;stkvar	_prod @ sp[(-13)+0]
 22537  01285C  0EF3               	movlw	-13
 22538  01285E  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22539  012864  0EF4               	movlw	-12
 22540  012866  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22541  01286C  0EF5               	movlw	-11
 22542  01286E  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22543  012874  0EF6               	movlw	-10
 22544  012876  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22545                           
 22546                           ;stkvar	_b @ sp[(-13)+-4]
 22547  01287C  0EF0               	movlw	240
 22548  01287E  24E1               	addwf	fsr1l,w,c
 22549  012880  6ED9               	movwf	fsr2l,c
 22550  012882  0EFF               	movlw	255
 22551  012884  20E2               	addwfc	fsr1h,w,c
 22552  012886  6EDA               	movwf	fsr2h,c
 22553  012888  50DF               	movf	indf2,w,c
 22554  01288A  6E30               	movwf	(btemp+11)^0,c
 22555                           
 22556                           ;stkvar	_a @ sp[(-13)+-8]
 22557  01288C  0EEC               	movlw	236
 22558  01288E  24E1               	addwf	fsr1l,w,c
 22559  012890  6ED9               	movwf	fsr2l,c
 22560  012892  0EFF               	movlw	255
 22561  012894  20E2               	addwfc	fsr1h,w,c
 22562  012896  6EDA               	movwf	fsr2h,c
 22563  012898  50DF               	movf	indf2,w,c
 22564  01289A  0230               	mulwf	(btemp+11)^0,c
 22565                           
 22566                           ;stkvar	_temp @ sp[(-13)+8]
 22567  01289C  0EFB               	movlw	-5
 22568  01289E  006F FFCF FFE3     	movff	prodl,plusw1
 22569  0128A4  0EFC               	movlw	-4
 22570  0128A6  006F FFD3 FFE3     	movff	prodh,plusw1
 22571                           
 22572                           ;stkvar	_grs @ sp[(-13)+4]
 22573  0128AC  50E1               	movf	fsr1l,w,c
 22574  0128AE  0FF7               	addlw	-9
 22575  0128B0  6ED9               	movwf	fsr2l,c
 22576  0128B2  50E2               	movf	fsr1h,w,c
 22577  0128B4  6EDA               	movwf	fsr2h,c
 22578  0128B6  0EFF               	movlw	255
 22579  0128B8  22DA               	addwfc	fsr2h,f,c
 22580                           
 22581                           ;stkvar	_temp @ sp[(-13)+8]
 22582  0128BA  0EFB               	movlw	-5
 22583  0128BC  50E3               	movf	plusw1,w,c
 22584  0128BE  26DE               	addwf	postinc2,f,c
 22585  0128C0  0E00               	movlw	0
 22586  0128C2  22DE               	addwfc	postinc2,f,c
 22587  0128C4  22DE               	addwfc	postinc2,f,c
 22588  0128C6  22DE               	addwfc	postinc2,f,c
 22589                           
 22590                           ;stkvar	_prod @ sp[(-13)+0]
 22591  0128C8  50E1               	movf	fsr1l,w,c
 22592  0128CA  0FF3               	addlw	-13
 22593  0128CC  6ED9               	movwf	fsr2l,c
 22594  0128CE  50E2               	movf	fsr1h,w,c
 22595  0128D0  6EDA               	movwf	fsr2h,c
 22596  0128D2  0EFF               	movlw	255
 22597  0128D4  22DA               	addwfc	fsr2h,f,c
 22598                           
 22599                           ;stkvar	_temp @ sp[(-13)+8]
 22600  0128D6  0EFC               	movlw	252
 22601  0128D8  24E1               	addwf	fsr1l,w,c
 22602  0128DA  6EE9               	movwf	fsr0l,c
 22603  0128DC  0EFF               	movlw	255
 22604  0128DE  20E2               	addwfc	fsr1h,w,c
 22605  0128E0  6EEA               	movwf	fsr0h,c
 22606  0128E2  50EF               	movf	indf0,w,c
 22607  0128E4  26DE               	addwf	postinc2,f,c
 22608  0128E6  0E00               	movlw	0
 22609  0128E8  22DE               	addwfc	postinc2,f,c
 22610  0128EA  22DE               	addwfc	postinc2,f,c
 22611  0128EC  22DE               	addwfc	postinc2,f,c
 22612                           
 22613                           ;stkvar	_b @ sp[(-13)+-4]
 22614  0128EE  0EF1               	movlw	241
 22615  0128F0  24E1               	addwf	fsr1l,w,c
 22616  0128F2  6ED9               	movwf	fsr2l,c
 22617  0128F4  0EFF               	movlw	255
 22618  0128F6  20E2               	addwfc	fsr1h,w,c
 22619  0128F8  6EDA               	movwf	fsr2h,c
 22620  0128FA  50DF               	movf	indf2,w,c
 22621  0128FC  6E30               	movwf	(btemp+11)^0,c
 22622                           
 22623                           ;stkvar	_a @ sp[(-13)+-8]
 22624  0128FE  0EEB               	movlw	-21
 22625  012900  50E3               	movf	plusw1,w,c
 22626  012902  0230               	mulwf	(btemp+11)^0,c
 22627                           
 22628                           ;stkvar	_temp @ sp[(-13)+8]
 22629  012904  0EFB               	movlw	-5
 22630  012906  006F FFCF FFE3     	movff	prodl,plusw1
 22631  01290C  0EFC               	movlw	-4
 22632  01290E  006F FFD3 FFE3     	movff	prodh,plusw1
 22633                           
 22634                           ;stkvar	_grs @ sp[(-13)+4]
 22635  012914  50E1               	movf	fsr1l,w,c
 22636  012916  0FF7               	addlw	-9
 22637  012918  6ED9               	movwf	fsr2l,c
 22638  01291A  50E2               	movf	fsr1h,w,c
 22639  01291C  6EDA               	movwf	fsr2h,c
 22640  01291E  0EFF               	movlw	255
 22641  012920  22DA               	addwfc	fsr2h,f,c
 22642                           
 22643                           ;stkvar	_temp @ sp[(-13)+8]
 22644  012922  0EFB               	movlw	-5
 22645  012924  50E3               	movf	plusw1,w,c
 22646  012926  26DE               	addwf	postinc2,f,c
 22647  012928  0E00               	movlw	0
 22648  01292A  22DE               	addwfc	postinc2,f,c
 22649  01292C  22DE               	addwfc	postinc2,f,c
 22650  01292E  22DE               	addwfc	postinc2,f,c
 22651                           
 22652                           ;stkvar	_prod @ sp[(-13)+0]
 22653  012930  50E1               	movf	fsr1l,w,c
 22654  012932  0FF3               	addlw	-13
 22655  012934  6ED9               	movwf	fsr2l,c
 22656  012936  50E2               	movf	fsr1h,w,c
 22657  012938  6EDA               	movwf	fsr2h,c
 22658  01293A  0EFF               	movlw	255
 22659  01293C  22DA               	addwfc	fsr2h,f,c
 22660                           
 22661                           ;stkvar	_temp @ sp[(-13)+8]
 22662  01293E  0EFC               	movlw	252
 22663  012940  24E1               	addwf	fsr1l,w,c
 22664  012942  6EE9               	movwf	fsr0l,c
 22665  012944  0EFF               	movlw	255
 22666  012946  20E2               	addwfc	fsr1h,w,c
 22667  012948  6EEA               	movwf	fsr0h,c
 22668  01294A  50EF               	movf	indf0,w,c
 22669  01294C  26DE               	addwf	postinc2,f,c
 22670  01294E  0E00               	movlw	0
 22671  012950  22DE               	addwfc	postinc2,f,c
 22672  012952  22DE               	addwfc	postinc2,f,c
 22673  012954  22DE               	addwfc	postinc2,f,c
 22674                           
 22675                           ;stkvar	_grs @ sp[(-13)+4]
 22676  012956  50E1               	movf	fsr1l,w,c
 22677  012958  0FF7               	addlw	-9
 22678  01295A  6ED9               	movwf	fsr2l,c
 22679  01295C  50E2               	movf	fsr1h,w,c
 22680  01295E  6EDA               	movwf	fsr2h,c
 22681  012960  0EFF               	movlw	255
 22682  012962  22DA               	addwfc	fsr2h,f,c
 22683  012964  0E08               	movlw	8
 22684  012966                     u7785:
 22685  012966  90D8               	bcf	status,0,c
 22686  012968  36DE               	rlcf	postinc2,f,c
 22687  01296A  36DE               	rlcf	postinc2,f,c
 22688  01296C  36DE               	rlcf	postinc2,f,c
 22689  01296E  36DD               	rlcf	postdec2,f,c
 22690  012970  52DD               	movf	postdec2,f,c
 22691  012972  52DD               	movf	postdec2,f,c
 22692  012974  2EE8               	decfsz	wreg,f,c
 22693  012976  D7F7               	goto	u7785
 22694                           
 22695                           ;stkvar	_b @ sp[(-13)+-4]
 22696  012978  0EF0               	movlw	240
 22697  01297A  24E1               	addwf	fsr1l,w,c
 22698  01297C  6ED9               	movwf	fsr2l,c
 22699  01297E  0EFF               	movlw	255
 22700  012980  20E2               	addwfc	fsr1h,w,c
 22701  012982  6EDA               	movwf	fsr2h,c
 22702  012984  50DF               	movf	indf2,w,c
 22703  012986  6E30               	movwf	(btemp+11)^0,c
 22704                           
 22705                           ;stkvar	_a @ sp[(-13)+-8]
 22706  012988  0EEB               	movlw	-21
 22707  01298A  50E3               	movf	plusw1,w,c
 22708  01298C  0230               	mulwf	(btemp+11)^0,c
 22709                           
 22710                           ;stkvar	_temp @ sp[(-13)+8]
 22711  01298E  0EFB               	movlw	-5
 22712  012990  006F FFCF FFE3     	movff	prodl,plusw1
 22713  012996  0EFC               	movlw	-4
 22714  012998  006F FFD3 FFE3     	movff	prodh,plusw1
 22715                           
 22716                           ;stkvar	_temp @ sp[(-13)+8]
 22717  01299E  0EFB               	movlw	-5
 22718  0129A0  006F FF8C  F02F    	movff	plusw1,btemp+10
 22719  0129A6  0EFC               	movlw	-4
 22720  0129A8  006F FF8C  F030    	movff	plusw1,btemp+11
 22721                           
 22722                           ;stkvar	_grs @ sp[(-13)+4]
 22723  0129AE  50E1               	movf	fsr1l,w,c
 22724  0129B0  0FF7               	addlw	-9
 22725  0129B2  6ED9               	movwf	fsr2l,c
 22726  0129B4  50E2               	movf	fsr1h,w,c
 22727  0129B6  6EDA               	movwf	fsr2h,c
 22728  0129B8  0EFF               	movlw	255
 22729  0129BA  22DA               	addwfc	fsr2h,f,c
 22730  0129BC  502F               	movf	(btemp+10)^0,w,c
 22731  0129BE  26DE               	addwf	postinc2,f,c
 22732  0129C0  5030               	movf	(btemp+11)^0,w,c
 22733  0129C2  22DE               	addwfc	postinc2,f,c
 22734  0129C4  0E00               	movlw	0
 22735  0129C6  22DE               	addwfc	postinc2,f,c
 22736  0129C8  22DE               	addwfc	postinc2,f,c
 22737                           
 22738                           ;stkvar	_b @ sp[(-13)+-4]
 22739  0129CA  0EEF               	movlw	-17
 22740  0129CC  006F FF8C  F030    	movff	plusw1,btemp+11
 22741                           
 22742                           ;stkvar	_a @ sp[(-13)+-8]
 22743  0129D2  0EEC               	movlw	236
 22744  0129D4  24E1               	addwf	fsr1l,w,c
 22745  0129D6  6ED9               	movwf	fsr2l,c
 22746  0129D8  0EFF               	movlw	255
 22747  0129DA  20E2               	addwfc	fsr1h,w,c
 22748  0129DC  6EDA               	movwf	fsr2h,c
 22749  0129DE  50DF               	movf	indf2,w,c
 22750  0129E0  0230               	mulwf	(btemp+11)^0,c
 22751                           
 22752                           ;stkvar	_temp @ sp[(-13)+8]
 22753  0129E2  0EFB               	movlw	-5
 22754  0129E4  006F FFCF FFE3     	movff	prodl,plusw1
 22755  0129EA  0EFC               	movlw	-4
 22756  0129EC  006F FFD3 FFE3     	movff	prodh,plusw1
 22757                           
 22758                           ;stkvar	_temp @ sp[(-13)+8]
 22759  0129F2  0EFB               	movlw	-5
 22760  0129F4  006F FF8C  F02F    	movff	plusw1,btemp+10
 22761  0129FA  0EFC               	movlw	-4
 22762  0129FC  006F FF8C  F030    	movff	plusw1,btemp+11
 22763                           
 22764                           ;stkvar	_grs @ sp[(-13)+4]
 22765  012A02  50E1               	movf	fsr1l,w,c
 22766  012A04  0FF7               	addlw	-9
 22767  012A06  6ED9               	movwf	fsr2l,c
 22768  012A08  50E2               	movf	fsr1h,w,c
 22769  012A0A  6EDA               	movwf	fsr2h,c
 22770  012A0C  0EFF               	movlw	255
 22771  012A0E  22DA               	addwfc	fsr2h,f,c
 22772  012A10  502F               	movf	(btemp+10)^0,w,c
 22773  012A12  26DE               	addwf	postinc2,f,c
 22774  012A14  5030               	movf	(btemp+11)^0,w,c
 22775  012A16  22DE               	addwfc	postinc2,f,c
 22776  012A18  0E00               	movlw	0
 22777  012A1A  22DE               	addwfc	postinc2,f,c
 22778  012A1C  22DE               	addwfc	postinc2,f,c
 22779                           
 22780                           ;stkvar	_grs @ sp[(-13)+4]
 22781  012A1E  50E1               	movf	fsr1l,w,c
 22782  012A20  0FF7               	addlw	-9
 22783  012A22  6ED9               	movwf	fsr2l,c
 22784  012A24  50E2               	movf	fsr1h,w,c
 22785  012A26  6EDA               	movwf	fsr2h,c
 22786  012A28  0EFF               	movlw	255
 22787  012A2A  22DA               	addwfc	fsr2h,f,c
 22788  012A2C  0E08               	movlw	8
 22789  012A2E                     u7795:
 22790  012A2E  90D8               	bcf	status,0,c
 22791  012A30  36DE               	rlcf	postinc2,f,c
 22792  012A32  36DE               	rlcf	postinc2,f,c
 22793  012A34  36DE               	rlcf	postinc2,f,c
 22794  012A36  36DD               	rlcf	postdec2,f,c
 22795  012A38  52DD               	movf	postdec2,f,c
 22796  012A3A  52DD               	movf	postdec2,f,c
 22797  012A3C  2EE8               	decfsz	wreg,f,c
 22798  012A3E  D7F7               	goto	u7795
 22799                           
 22800                           ;stkvar	_b @ sp[(-13)+-4]
 22801  012A40  0EEF               	movlw	-17
 22802  012A42  006F FF8C  F030    	movff	plusw1,btemp+11
 22803                           
 22804                           ;stkvar	_a @ sp[(-13)+-8]
 22805  012A48  0EEB               	movlw	-21
 22806  012A4A  50E3               	movf	plusw1,w,c
 22807  012A4C  0230               	mulwf	(btemp+11)^0,c
 22808                           
 22809                           ;stkvar	_temp @ sp[(-13)+8]
 22810  012A4E  0EFB               	movlw	-5
 22811  012A50  006F FFCF FFE3     	movff	prodl,plusw1
 22812  012A56  0EFC               	movlw	-4
 22813  012A58  006F FFD3 FFE3     	movff	prodh,plusw1
 22814                           
 22815                           ;stkvar	_temp @ sp[(-13)+8]
 22816  012A5E  0EFB               	movlw	-5
 22817  012A60  006F FF8C  F02F    	movff	plusw1,btemp+10
 22818  012A66  0EFC               	movlw	-4
 22819  012A68  006F FF8C  F030    	movff	plusw1,btemp+11
 22820                           
 22821                           ;stkvar	_grs @ sp[(-13)+4]
 22822  012A6E  50E1               	movf	fsr1l,w,c
 22823  012A70  0FF7               	addlw	-9
 22824  012A72  6ED9               	movwf	fsr2l,c
 22825  012A74  50E2               	movf	fsr1h,w,c
 22826  012A76  6EDA               	movwf	fsr2h,c
 22827  012A78  0EFF               	movlw	255
 22828  012A7A  22DA               	addwfc	fsr2h,f,c
 22829  012A7C  502F               	movf	(btemp+10)^0,w,c
 22830  012A7E  26DE               	addwf	postinc2,f,c
 22831  012A80  5030               	movf	(btemp+11)^0,w,c
 22832  012A82  22DE               	addwfc	postinc2,f,c
 22833  012A84  0E00               	movlw	0
 22834  012A86  22DE               	addwfc	postinc2,f,c
 22835  012A88  22DE               	addwfc	postinc2,f,c
 22836                           
 22837                           ;stkvar	_b @ sp[(-13)+-4]
 22838  012A8A  0EF0               	movlw	240
 22839  012A8C  24E1               	addwf	fsr1l,w,c
 22840  012A8E  6ED9               	movwf	fsr2l,c
 22841  012A90  0EFF               	movlw	255
 22842  012A92  20E2               	addwfc	fsr1h,w,c
 22843  012A94  6EDA               	movwf	fsr2h,c
 22844  012A96  50DF               	movf	indf2,w,c
 22845  012A98  6E30               	movwf	(btemp+11)^0,c
 22846                           
 22847                           ;stkvar	_a @ sp[(-13)+-8]
 22848  012A9A  0EED               	movlw	237
 22849  012A9C  24E1               	addwf	fsr1l,w,c
 22850  012A9E  6ED9               	movwf	fsr2l,c
 22851  012AA0  0EFF               	movlw	255
 22852  012AA2  20E2               	addwfc	fsr1h,w,c
 22853  012AA4  6EDA               	movwf	fsr2h,c
 22854  012AA6  50DF               	movf	indf2,w,c
 22855  012AA8  0230               	mulwf	(btemp+11)^0,c
 22856                           
 22857                           ;stkvar	_temp @ sp[(-13)+8]
 22858  012AAA  0EFB               	movlw	-5
 22859  012AAC  006F FFCF FFE3     	movff	prodl,plusw1
 22860  012AB2  0EFC               	movlw	-4
 22861  012AB4  006F FFD3 FFE3     	movff	prodh,plusw1
 22862                           
 22863                           ;stkvar	_temp @ sp[(-13)+8]
 22864  012ABA  0EFB               	movlw	-5
 22865  012ABC  006F FF8C  F02F    	movff	plusw1,btemp+10
 22866  012AC2  0EFC               	movlw	-4
 22867  012AC4  006F FF8C  F030    	movff	plusw1,btemp+11
 22868                           
 22869                           ;stkvar	_prod @ sp[(-13)+0]
 22870  012ACA  50E1               	movf	fsr1l,w,c
 22871  012ACC  0FF3               	addlw	-13
 22872  012ACE  6ED9               	movwf	fsr2l,c
 22873  012AD0  50E2               	movf	fsr1h,w,c
 22874  012AD2  6EDA               	movwf	fsr2h,c
 22875  012AD4  0EFF               	movlw	255
 22876  012AD6  22DA               	addwfc	fsr2h,f,c
 22877  012AD8  502F               	movf	(btemp+10)^0,w,c
 22878  012ADA  26DE               	addwf	postinc2,f,c
 22879  012ADC  5030               	movf	(btemp+11)^0,w,c
 22880  012ADE  22DE               	addwfc	postinc2,f,c
 22881  012AE0  0E00               	movlw	0
 22882  012AE2  22DE               	addwfc	postinc2,f,c
 22883  012AE4  22DE               	addwfc	postinc2,f,c
 22884                           
 22885                           ;stkvar	_b @ sp[(-13)+-4]
 22886  012AE6  0EF1               	movlw	241
 22887  012AE8  24E1               	addwf	fsr1l,w,c
 22888  012AEA  6ED9               	movwf	fsr2l,c
 22889  012AEC  0EFF               	movlw	255
 22890  012AEE  20E2               	addwfc	fsr1h,w,c
 22891  012AF0  6EDA               	movwf	fsr2h,c
 22892  012AF2  50DF               	movf	indf2,w,c
 22893  012AF4  6E30               	movwf	(btemp+11)^0,c
 22894                           
 22895                           ;stkvar	_a @ sp[(-13)+-8]
 22896  012AF6  0EEC               	movlw	236
 22897  012AF8  24E1               	addwf	fsr1l,w,c
 22898  012AFA  6ED9               	movwf	fsr2l,c
 22899  012AFC  0EFF               	movlw	255
 22900  012AFE  20E2               	addwfc	fsr1h,w,c
 22901  012B00  6EDA               	movwf	fsr2h,c
 22902  012B02  50DF               	movf	indf2,w,c
 22903  012B04  0230               	mulwf	(btemp+11)^0,c
 22904                           
 22905                           ;stkvar	_temp @ sp[(-13)+8]
 22906  012B06  0EFB               	movlw	-5
 22907  012B08  006F FFCF FFE3     	movff	prodl,plusw1
 22908  012B0E  0EFC               	movlw	-4
 22909  012B10  006F FFD3 FFE3     	movff	prodh,plusw1
 22910                           
 22911                           ;stkvar	_temp @ sp[(-13)+8]
 22912  012B16  0EFB               	movlw	-5
 22913  012B18  006F FF8C  F02F    	movff	plusw1,btemp+10
 22914  012B1E  0EFC               	movlw	-4
 22915  012B20  006F FF8C  F030    	movff	plusw1,btemp+11
 22916                           
 22917                           ;stkvar	_prod @ sp[(-13)+0]
 22918  012B26  50E1               	movf	fsr1l,w,c
 22919  012B28  0FF3               	addlw	-13
 22920  012B2A  6ED9               	movwf	fsr2l,c
 22921  012B2C  50E2               	movf	fsr1h,w,c
 22922  012B2E  6EDA               	movwf	fsr2h,c
 22923  012B30  0EFF               	movlw	255
 22924  012B32  22DA               	addwfc	fsr2h,f,c
 22925  012B34  502F               	movf	(btemp+10)^0,w,c
 22926  012B36  26DE               	addwf	postinc2,f,c
 22927  012B38  5030               	movf	(btemp+11)^0,w,c
 22928  012B3A  22DE               	addwfc	postinc2,f,c
 22929  012B3C  0E00               	movlw	0
 22930  012B3E  22DE               	addwfc	postinc2,f,c
 22931  012B40  22DE               	addwfc	postinc2,f,c
 22932                           
 22933                           ;stkvar	_b @ sp[(-13)+-4]
 22934  012B42  0EF1               	movlw	241
 22935  012B44  24E1               	addwf	fsr1l,w,c
 22936  012B46  6ED9               	movwf	fsr2l,c
 22937  012B48  0EFF               	movlw	255
 22938  012B4A  20E2               	addwfc	fsr1h,w,c
 22939  012B4C  6EDA               	movwf	fsr2h,c
 22940  012B4E  50DF               	movf	indf2,w,c
 22941  012B50  6E30               	movwf	(btemp+11)^0,c
 22942                           
 22943                           ;stkvar	_a @ sp[(-13)+-8]
 22944  012B52  0EED               	movlw	237
 22945  012B54  24E1               	addwf	fsr1l,w,c
 22946  012B56  6ED9               	movwf	fsr2l,c
 22947  012B58  0EFF               	movlw	255
 22948  012B5A  20E2               	addwfc	fsr1h,w,c
 22949  012B5C  6EDA               	movwf	fsr2h,c
 22950  012B5E  50DF               	movf	indf2,w,c
 22951  012B60  0230               	mulwf	(btemp+11)^0,c
 22952                           
 22953                           ;stkvar	_temp @ sp[(-13)+8]
 22954  012B62  0EFB               	movlw	-5
 22955  012B64  006F FFCF FFE3     	movff	prodl,plusw1
 22956  012B6A  0EFC               	movlw	-4
 22957  012B6C  006F FFD3 FFE3     	movff	prodh,plusw1
 22958                           
 22959                           ;stkvar	_temp @ sp[(-13)+8]
 22960  012B72  0EFB               	movlw	-5
 22961  012B74  006F FF8C  F02F    	movff	plusw1,btemp+10
 22962  012B7A  0EFC               	movlw	-4
 22963  012B7C  006F FF8C  F030    	movff	plusw1,btemp+11
 22964  012B82  502F               	movf	(btemp+10)^0,w,c
 22965  012B84  6E29               	movwf	(btemp+4)^0,c
 22966  012B86  5030               	movf	(btemp+11)^0,w,c
 22967  012B88  6E2A               	movwf	(btemp+5)^0,c
 22968  012B8A  6A2B               	clrf	(btemp+6)^0,c
 22969  012B8C  6A2C               	clrf	(btemp+7)^0,c
 22970  012B8E  0060  F0AC  F02C   	movff	btemp+6,btemp+7
 22971  012B94  0060  F0A8  F02B   	movff	btemp+5,btemp+6
 22972  012B9A  0060  F0A4  F02A   	movff	btemp+4,btemp+5
 22973  012BA0  6A29               	clrf	(btemp+4)^0,c
 22974                           
 22975                           ;stkvar	_prod @ sp[(-13)+0]
 22976  012BA2  50E1               	movf	fsr1l,w,c
 22977  012BA4  0FF3               	addlw	-13
 22978  012BA6  6ED9               	movwf	fsr2l,c
 22979  012BA8  50E2               	movf	fsr1h,w,c
 22980  012BAA  6EDA               	movwf	fsr2h,c
 22981  012BAC  0EFF               	movlw	255
 22982  012BAE  22DA               	addwfc	fsr2h,f,c
 22983  012BB0  5029               	movf	(btemp+4)^0,w,c
 22984  012BB2  26DE               	addwf	postinc2,f,c
 22985  012BB4  502A               	movf	(btemp+5)^0,w,c
 22986  012BB6  22DE               	addwfc	postinc2,f,c
 22987  012BB8  502B               	movf	(btemp+6)^0,w,c
 22988  012BBA  22DE               	addwfc	postinc2,f,c
 22989  012BBC  502C               	movf	(btemp+7)^0,w,c
 22990  012BBE  22DE               	addwfc	postinc2,f,c
 22991                           
 22992                           ;stkvar	_prod @ sp[(-13)+0]
 22993  012BC0  50E1               	movf	fsr1l,w,c
 22994  012BC2  0FF3               	addlw	-13
 22995  012BC4  6ED9               	movwf	fsr2l,c
 22996  012BC6  50E2               	movf	fsr1h,w,c
 22997  012BC8  6EDA               	movwf	fsr2h,c
 22998  012BCA  0EFF               	movlw	255
 22999  012BCC  22DA               	addwfc	fsr2h,f,c
 23000                           
 23001                           ;stkvar	_grs @ sp[(-13)+4]
 23002  012BCE  0EFA               	movlw	250
 23003  012BD0  24E1               	addwf	fsr1l,w,c
 23004  012BD2  6EE9               	movwf	fsr0l,c
 23005  012BD4  0EFF               	movlw	255
 23006  012BD6  20E2               	addwfc	fsr1h,w,c
 23007  012BD8  6EEA               	movwf	fsr0h,c
 23008  012BDA  50EF               	movf	indf0,w,c
 23009  012BDC  26DE               	addwf	postinc2,f,c
 23010  012BDE  0E00               	movlw	0
 23011  012BE0  22DE               	addwfc	postinc2,f,c
 23012  012BE2  22DE               	addwfc	postinc2,f,c
 23013  012BE4  22DE               	addwfc	postinc2,f,c
 23014                           
 23015                           ;stkvar	_grs @ sp[(-13)+4]
 23016  012BE6  50E1               	movf	fsr1l,w,c
 23017  012BE8  0FF7               	addlw	-9
 23018  012BEA  6ED9               	movwf	fsr2l,c
 23019  012BEC  50E2               	movf	fsr1h,w,c
 23020  012BEE  6EDA               	movwf	fsr2h,c
 23021  012BF0  0EFF               	movlw	255
 23022  012BF2  22DA               	addwfc	fsr2h,f,c
 23023  012BF4  0E08               	movlw	8
 23024  012BF6                     u7805:
 23025  012BF6  90D8               	bcf	status,0,c
 23026  012BF8  36DE               	rlcf	postinc2,f,c
 23027  012BFA  36DE               	rlcf	postinc2,f,c
 23028  012BFC  36DE               	rlcf	postinc2,f,c
 23029  012BFE  36DD               	rlcf	postdec2,f,c
 23030  012C00  52DD               	movf	postdec2,f,c
 23031  012C02  52DD               	movf	postdec2,f,c
 23032  012C04  2EE8               	decfsz	wreg,f,c
 23033  012C06  D7F7               	goto	u7805
 23034  012C08  0E82               	movlw	130
 23035  012C0A  6E2F               	movwf	(btemp+10)^0,c
 23036  012C0C  0EFF               	movlw	255
 23037  012C0E  6E30               	movwf	(btemp+11)^0,c
 23038                           
 23039                           ;stkvar	_bexp @ sp[(-13)+10]
 23040  012C10  0EFD               	movlw	-3
 23041  012C12  50E3               	movf	plusw1,w,c
 23042  012C14  6E2D               	movwf	(btemp+8)^0,c
 23043  012C16  6A2E               	clrf	(btemp+9)^0,c
 23044                           
 23045                           ;stkvar	_aexp @ sp[(-13)+11]
 23046  012C18  0EFE               	movlw	-2
 23047  012C1A  50E3               	movf	plusw1,w,c
 23048  012C1C  262D               	addwf	(btemp+8)^0,f,c
 23049  012C1E  0E00               	movlw	0
 23050  012C20  222E               	addwfc	(btemp+9)^0,f,c
 23051  012C22  502F               	movf	(btemp+10)^0,w,c
 23052  012C24  262D               	addwf	(btemp+8)^0,f,c
 23053  012C26  5030               	movf	(btemp+11)^0,w,c
 23054  012C28  222E               	addwfc	(btemp+9)^0,f,c
 23055                           
 23056                           ;stkvar	_temp @ sp[(-13)+8]
 23057  012C2A  0EFB               	movlw	-5
 23058  012C2C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23059  012C32  0EFC               	movlw	-4
 23060  012C34  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23061  012C3A  D021               	goto	l8395
 23062  012C3C                     l8385:
 23063                           
 23064                           ;stkvar	_prod @ sp[(-13)+0]
 23065  012C3C  90D8               	bcf	status,0,c
 23066  012C3E  0EF3               	movlw	-13
 23067  012C40  36E3               	rlcf	plusw1,f,c
 23068  012C42  0EF4               	movlw	-12
 23069  012C44  36E3               	rlcf	plusw1,f,c
 23070  012C46  0EF5               	movlw	-11
 23071  012C48  36E3               	rlcf	plusw1,f,c
 23072  012C4A  0EF6               	movlw	-10
 23073  012C4C  36E3               	rlcf	plusw1,f,c
 23074                           
 23075                           ;stkvar	_grs @ sp[(-13)+4]
 23076  012C4E  0EFA               	movlw	-6
 23077  012C50  AEE3               	btfss	plusw1,7,c
 23078  012C52  D002               	goto	l8391
 23079                           
 23080                           ;stkvar	_prod @ sp[(-13)+0]
 23081  012C54  0EF3               	movlw	-13
 23082  012C56  80E3               	bsf	plusw1,0,c
 23083  012C58                     l8391:
 23084                           
 23085                           ;stkvar	_grs @ sp[(-13)+4]
 23086  012C58  90D8               	bcf	status,0,c
 23087  012C5A  0EF7               	movlw	-9
 23088  012C5C  36E3               	rlcf	plusw1,f,c
 23089  012C5E  0EF8               	movlw	-8
 23090  012C60  36E3               	rlcf	plusw1,f,c
 23091  012C62  0EF9               	movlw	-7
 23092  012C64  36E3               	rlcf	plusw1,f,c
 23093  012C66  0EFA               	movlw	-6
 23094  012C68  36E3               	rlcf	plusw1,f,c
 23095                           
 23096                           ;stkvar	_temp @ sp[(-13)+8]
 23097  012C6A  50E1               	movf	fsr1l,w,c
 23098  012C6C  0FFB               	addlw	-5
 23099  012C6E  6ED9               	movwf	fsr2l,c
 23100  012C70  50E2               	movf	fsr1h,w,c
 23101  012C72  6EDA               	movwf	fsr2h,c
 23102  012C74  0EFF               	movlw	255
 23103  012C76  22DA               	addwfc	fsr2h,f,c
 23104  012C78  06DE               	decf	postinc2,f,c
 23105  012C7A  0E00               	movlw	0
 23106  012C7C  5ADD               	subwfb	postdec2,f,c
 23107  012C7E                     l8395:
 23108                           
 23109                           ;stkvar	_prod @ sp[(-13)+0]
 23110  012C7E  0EF5               	movlw	-11
 23111  012C80  AEE3               	btfss	plusw1,7,c
 23112  012C82  D7DC               	goto	l8385
 23113                           
 23114                           ;stkvar	_aexp @ sp[(-13)+11]
 23115  012C84  0EFE               	movlw	-2
 23116  012C86  6AE3               	clrf	plusw1,c
 23117                           
 23118                           ;stkvar	_grs @ sp[(-13)+4]
 23119  012C88  0EFA               	movlw	-6
 23120  012C8A  AEE3               	btfss	plusw1,7,c
 23121  012C8C  D020               	goto	l8409
 23122                           
 23123                           ;stkvar	_grs @ sp[(-13)+4]
 23124  012C8E  50E1               	movf	fsr1l,w,c
 23125  012C90  0FF7               	addlw	-9
 23126  012C92  6ED9               	movwf	fsr2l,c
 23127  012C94  50E2               	movf	fsr1h,w,c
 23128  012C96  6EDA               	movwf	fsr2h,c
 23129  012C98  0EFF               	movlw	255
 23130  012C9A  22DA               	addwfc	fsr2h,f,c
 23131  012C9C  0EFF               	movlw	255
 23132  012C9E  14DE               	andwf	postinc2,w,c
 23133  012CA0  6E2D               	movwf	(btemp+8)^0,c
 23134  012CA2  0EFF               	movlw	255
 23135  012CA4  14DE               	andwf	postinc2,w,c
 23136  012CA6  6E2E               	movwf	(btemp+9)^0,c
 23137  012CA8  0EFF               	movlw	255
 23138  012CAA  14DE               	andwf	postinc2,w,c
 23139  012CAC  6E2F               	movwf	(btemp+10)^0,c
 23140  012CAE  0E7F               	movlw	127
 23141  012CB0  14DE               	andwf	postinc2,w,c
 23142  012CB2  6E30               	movwf	(btemp+11)^0,c
 23143  012CB4  502D               	movf	(btemp+8)^0,w,c
 23144  012CB6  102E               	iorwf	(btemp+9)^0,w,c
 23145  012CB8  102F               	iorwf	(btemp+10)^0,w,c
 23146  012CBA  1030               	iorwf	(btemp+11)^0,w,c
 23147  012CBC  B4D8               	btfsc	status,2,c
 23148  012CBE  D004               	goto	l8405
 23149  012CC0                     u7840:
 23150                           
 23151                           ;stkvar	_aexp @ sp[(-13)+11]
 23152  012CC0  0EFE               	movlw	-2
 23153  012CC2  6AE3               	clrf	plusw1,c
 23154  012CC4  2AE3               	incf	plusw1,f,c
 23155  012CC6  D003               	goto	l8409
 23156  012CC8                     l8405:
 23157                           
 23158                           ;stkvar	_prod @ sp[(-13)+0]
 23159  012CC8  0EF3               	movlw	-13
 23160  012CCA  B0E3               	btfsc	plusw1,0,c
 23161  012CCC  D7F9               	goto	u7840
 23162  012CCE                     l8409:
 23163                           
 23164                           ;stkvar	_aexp @ sp[(-13)+11]
 23165  012CCE  0EFE               	movlw	-2
 23166  012CD0  50E3               	movf	plusw1,w,c
 23167  012CD2  B4D8               	btfsc	status,2,c
 23168  012CD4  D036               	goto	l8419
 23169                           
 23170                           ;stkvar	_prod @ sp[(-13)+0]
 23171  012CD6  50E1               	movf	fsr1l,w,c
 23172  012CD8  0FF3               	addlw	-13
 23173  012CDA  6ED9               	movwf	fsr2l,c
 23174  012CDC  50E2               	movf	fsr1h,w,c
 23175  012CDE  6EDA               	movwf	fsr2h,c
 23176  012CE0  0EFF               	movlw	255
 23177  012CE2  22DA               	addwfc	fsr2h,f,c
 23178  012CE4  2ADE               	incf	postinc2,f,c
 23179  012CE6  0E00               	movlw	0
 23180  012CE8  22DE               	addwfc	postinc2,f,c
 23181  012CEA  22DE               	addwfc	postinc2,f,c
 23182  012CEC  22DE               	addwfc	postinc2,f,c
 23183                           
 23184                           ;stkvar	_prod @ sp[(-13)+0]
 23185  012CEE  0EF6               	movlw	-10
 23186  012CF0  A0E3               	btfss	plusw1,0,c
 23187  012CF2  D027               	goto	l8419
 23188  012CF4  0E01               	movlw	1
 23189  012CF6  6E30               	movwf	(btemp+11)^0,c
 23190                           
 23191                           ;stkvar	_prod @ sp[(-13)+0]
 23192  012CF8  50E1               	movf	fsr1l,w,c
 23193  012CFA  0FF3               	addlw	-13
 23194  012CFC  6ED9               	movwf	fsr2l,c
 23195  012CFE  50E2               	movf	fsr1h,w,c
 23196  012D00  6EDA               	movwf	fsr2h,c
 23197  012D02  0EFF               	movlw	255
 23198  012D04  22DA               	addwfc	fsr2h,f,c
 23199  012D06  2830               	incf	(btemp+11)^0,w,c
 23200  012D08  52DE               	movf	postinc2,f,c
 23201  012D0A  D008               	goto	u7880
 23202  012D0C                     u7885:
 23203  012D0C  52DE               	movf	postinc2,f,c
 23204  012D0E  90D8               	bcf	status,0,c
 23205  012D10  BEDC               	btfsc	preinc2,7,c
 23206  012D12  80D8               	bsf	status,0,c
 23207  012D14  32DD               	rrcf	postdec2,f,c
 23208  012D16  32DD               	rrcf	postdec2,f,c
 23209  012D18  32DD               	rrcf	postdec2,f,c
 23210  012D1A  32DE               	rrcf	postinc2,f,c
 23211  012D1C                     u7880:
 23212  012D1C  2EE8               	decfsz	wreg,f,c
 23213  012D1E  D7F6               	goto	u7885
 23214                           
 23215                           ;stkvar	_temp @ sp[(-13)+8]
 23216  012D20  0EFB               	movlw	-5
 23217  012D22  50E3               	movf	plusw1,w,c
 23218  012D24  0F01               	addlw	1
 23219  012D26  6E25               	movwf	btemp^0,c
 23220  012D28  0EFB               	movlw	-5
 23221  012D2A  0060  F097  FFE3   	movff	btemp,plusw1
 23222  012D30  6A25               	clrf	btemp^0,c
 23223  012D32  0EFC               	movlw	-4
 23224  012D34  50E3               	movf	plusw1,w,c
 23225  012D36  2025               	addwfc	btemp^0,w,c
 23226  012D38  6E25               	movwf	btemp^0,c
 23227  012D3A  0EFC               	movlw	-4
 23228  012D3C  0060  F097  FFE3   	movff	btemp,plusw1
 23229  012D42                     l8419:
 23230                           
 23231                           ;stkvar	_temp @ sp[(-13)+8]
 23232  012D42  0EFC               	movlw	-4
 23233  012D44  BEE3               	btfsc	plusw1,7,c
 23234  012D46  D020               	goto	l8423
 23235  012D48  0EFC               	movlw	-4
 23236  012D4A  50E3               	movf	plusw1,w,c
 23237  012D4C  E104               	bnz	u7890
 23238  012D4E  0EFB               	movlw	-5
 23239  012D50  28E3               	incf	plusw1,w,c
 23240  012D52  A0D8               	btfss	status,0,c
 23241  012D54  D019               	goto	l8423
 23242  012D56                     u7890:
 23243  012D56  0E00               	movlw	0
 23244  012D58  6E2D               	movwf	(btemp+8)^0,c
 23245  012D5A  0E00               	movlw	0
 23246  012D5C  6E2E               	movwf	(btemp+9)^0,c
 23247  012D5E  0E80               	movlw	128
 23248  012D60  6E2F               	movwf	(btemp+10)^0,c
 23249  012D62  0E7F               	movlw	127
 23250  012D64  6E30               	movwf	(btemp+11)^0,c
 23251                           
 23252                           ;stkvar	_prod @ sp[(-13)+0]
 23253  012D66  0EF3               	movlw	-13
 23254  012D68  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23255  012D6E  0EF4               	movlw	-12
 23256  012D70  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23257  012D76  0EF5               	movlw	-11
 23258  012D78  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 23259  012D7E  0EF6               	movlw	-10
 23260  012D80  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 23261  012D86  D044               	goto	l8439
 23262  012D88                     l8423:
 23263                           
 23264                           ;stkvar	_temp @ sp[(-13)+8]
 23265  012D88  0EFC               	movlw	-4
 23266  012D8A  BEE3               	btfsc	plusw1,7,c
 23267  012D8C  D007               	goto	u7900
 23268  012D8E  0EFC               	movlw	-4
 23269  012D90  50E3               	movf	plusw1,w,c
 23270  012D92  E10F               	bnz	l8429
 23271  012D94  0EFB               	movlw	-5
 23272  012D96  04E3               	decf	plusw1,w,c
 23273  012D98  B0D8               	btfsc	status,0,c
 23274  012D9A  D00B               	goto	l8429
 23275  012D9C                     u7900:
 23276                           
 23277                           ;stkvar	_prod @ sp[(-13)+0]
 23278  012D9C  0EF3               	movlw	-13
 23279  012D9E  6AE3               	clrf	plusw1,c
 23280  012DA0  0EF4               	movlw	-12
 23281  012DA2  6AE3               	clrf	plusw1,c
 23282  012DA4  0EF5               	movlw	-11
 23283  012DA6  6AE3               	clrf	plusw1,c
 23284  012DA8  0EF6               	movlw	-10
 23285  012DAA  6AE3               	clrf	plusw1,c
 23286                           
 23287                           ;stkvar	_sign @ sp[(-13)+12]
 23288  012DAC  0EFF               	movlw	-1
 23289  012DAE  6AE3               	clrf	plusw1,c
 23290  012DB0  D02F               	goto	l8439
 23291  012DB2                     l8429:
 23292                           
 23293                           ;stkvar	_temp @ sp[(-13)+8]
 23294                           ;stkvar	_bexp @ sp[(-13)+10]
 23295  012DB2  0EFB               	movlw	-5
 23296  012DB4  006F FF8C  F025    	movff	plusw1,btemp
 23297  012DBA  0EFD               	movlw	-3
 23298  012DBC  0060  F097  FFE3   	movff	btemp,plusw1
 23299                           
 23300                           ;stkvar	_prod @ sp[(-13)+0]
 23301  012DC2  50E1               	movf	fsr1l,w,c
 23302  012DC4  0FF3               	addlw	-13
 23303  012DC6  6ED9               	movwf	fsr2l,c
 23304  012DC8  50E2               	movf	fsr1h,w,c
 23305  012DCA  6EDA               	movwf	fsr2h,c
 23306  012DCC  0EFF               	movlw	255
 23307  012DCE  22DA               	addwfc	fsr2h,f,c
 23308  012DD0  0EFF               	movlw	255
 23309  012DD2  16DE               	andwf	postinc2,f,c
 23310  012DD4  0EFF               	movlw	255
 23311  012DD6  16DE               	andwf	postinc2,f,c
 23312  012DD8  0E7F               	movlw	127
 23313  012DDA  16DE               	andwf	postinc2,f,c
 23314  012DDC  0E00               	movlw	0
 23315  012DDE  16DE               	andwf	postinc2,f,c
 23316                           
 23317                           ;stkvar	_bexp @ sp[(-13)+10]
 23318  012DE0  0EFD               	movlw	-3
 23319  012DE2  A0E3               	btfss	plusw1,0,c
 23320  012DE4  D008               	goto	l8437
 23321                           
 23322                           ;stkvar	_prod @ sp[(-13)+0]
 23323  012DE6  0EF5               	movlw	245
 23324  012DE8  24E1               	addwf	fsr1l,w,c
 23325  012DEA  6ED9               	movwf	fsr2l,c
 23326  012DEC  0EFF               	movlw	255
 23327  012DEE  20E2               	addwfc	fsr1h,w,c
 23328  012DF0  6EDA               	movwf	fsr2h,c
 23329  012DF2  0E00               	movlw	0
 23330  012DF4  8EDB               	bsf	plusw2,7,c
 23331  012DF6                     l8437:
 23332                           
 23333                           ;stkvar	_prod @ sp[(-13)+0]
 23334  012DF6  0EF6               	movlw	246
 23335  012DF8  24E1               	addwf	fsr1l,w,c
 23336  012DFA  6ED9               	movwf	fsr2l,c
 23337  012DFC  0EFF               	movlw	255
 23338  012DFE  20E2               	addwfc	fsr1h,w,c
 23339  012E00  6EDA               	movwf	fsr2h,c
 23340                           
 23341                           ;stkvar	_bexp @ sp[(-13)+10]
 23342  012E02  0EFD               	movlw	-3
 23343  012E04  006F FF8C  F030    	movff	plusw1,btemp+11
 23344  012E0A  90D8               	bcf	status,0,c
 23345  012E0C  3030               	rrcf	(btemp+11)^0,w,c
 23346  012E0E  6EDF               	movwf	indf2,c
 23347  012E10                     l8439:
 23348                           
 23349                           ;stkvar	_sign @ sp[(-13)+12]
 23350  012E10  0EFF               	movlw	-1
 23351  012E12  006F FF8C  F030    	movff	plusw1,btemp+11
 23352                           
 23353                           ;stkvar	_prod @ sp[(-13)+0]
 23354  012E18  0EF6               	movlw	246
 23355  012E1A  24E1               	addwf	fsr1l,w,c
 23356  012E1C  6ED9               	movwf	fsr2l,c
 23357  012E1E  0EFF               	movlw	255
 23358  012E20  20E2               	addwfc	fsr1h,w,c
 23359  012E22  6EDA               	movwf	fsr2h,c
 23360  012E24  5030               	movf	(btemp+11)^0,w,c
 23361  012E26  12DF               	iorwf	indf2,f,c
 23362                           
 23363                           ;stkvar	_prod @ sp[(-13)+0]
 23364  012E28  0EF3               	movlw	-13
 23365  012E2A  006F FF8C  F025    	movff	plusw1,btemp
 23366  012E30  0EF4               	movlw	-12
 23367  012E32  006F FF8C  F026    	movff	plusw1,btemp+1
 23368  012E38  0EF5               	movlw	-11
 23369  012E3A  006F FF8C  F027    	movff	plusw1,btemp+2
 23370  012E40  0EF6               	movlw	-10
 23371  012E42  006F FF8C  F028    	movff	plusw1,btemp+3
 23372  012E48                     l2842:
 23373                           
 23374                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23375  012E48  0EEB               	movlw	235
 23376  012E4A  26E1               	addwf	fsr1l,f,c
 23377  012E4C  0EFF               	movlw	255
 23378  012E4E  22E2               	addwfc	fsr1h,f,c
 23379  012E50  0012               	return		;funcret
 23380  012E52                     __end_of___flmul:
 23381                           	opt callstack 0
 23382                           
 23383 ;; *************** function _SYSTEM_Initialize *****************
 23384 ;; Defined at:
 23385 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23386 ;; Parameters:    Size  Location     Type
 23387 ;;		None
 23388 ;; Auto vars:     Size  Location     Type
 23389 ;;		None
 23390 ;; Return value:  Size  Location     Type
 23391 ;;                  1  [STACK] void 
 23392 ;; Registers used:
 23393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23394 ;; Tracked objects:
 23395 ;;		On entry : 0/0
 23396 ;;		On exit  : 3F/3C
 23397 ;;		Unchanged: 0/0
 23398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23403 ;;Total ram usage:        0 bytes
 23404 ;; Hardware stack levels used:    1
 23405 ;; Hardware stack levels required when called:    9
 23406 ;; This function calls:
 23407 ;;		_ADCC_Initialize
 23408 ;;		_CLKREF_Initialize
 23409 ;;		_DMA1_Initialize
 23410 ;;		_DMA2_Initialize
 23411 ;;		_EXT_INT_Initialize
 23412 ;;		_FVR_Initialize
 23413 ;;		_INTERRUPT_Initialize
 23414 ;;		_OSCILLATOR_Initialize
 23415 ;;		_PIN_MANAGER_Initialize
 23416 ;;		_PMD_Initialize
 23417 ;;		_PWM8_Initialize
 23418 ;;		_SPI1_Initialize
 23419 ;;		_TMR2_Initialize
 23420 ;;		_TMR3_Initialize
 23421 ;;		_TMR5_Initialize
 23422 ;;		_TMR6_Initialize
 23423 ;;		_UART1_Initialize
 23424 ;;		_UART2_Initialize
 23425 ;; This function is called by:
 23426 ;;		_main
 23427 ;; This function uses a reentrant model
 23428 ;;
 23429                           
 23430                           	psect	text95
 23431  0188FC                     __ptext95:
 23432                           	opt callstack 0
 23433  0188FC                     _SYSTEM_Initialize:
 23434                           	opt callstack 21
 23435                           
 23436                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23437                           
 23438                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23439                           ;incstack = 0
 23440  0188FC  EC55  F0C2         	call	_INTERRUPT_Initialize	;wreg free
 23441                           
 23442                           ; BSR set to: 57
 23443                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23444  018900  EC92  F0CA         	call	_PMD_Initialize	;wreg free
 23445                           
 23446                           ; BSR set to: 57
 23447                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23448  018904  EC1E  F0C0         	call	_PIN_MANAGER_Initialize	;wreg free
 23449                           
 23450                           ; BSR set to: 58
 23451                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23452  018908  EC87  F0CA         	call	_OSCILLATOR_Initialize	;wreg free
 23453                           
 23454                           ; BSR set to: 57
 23455                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23456  01890C  ECF9  F0CA         	call	_FVR_Initialize	;wreg free
 23457                           
 23458                           ; BSR set to: 62
 23459                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23460  018910  ECEB  F0C1         	call	_ADCC_Initialize	;wreg free
 23461                           
 23462                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 23463  018914  EC7C  F0CA         	call	_PWM8_Initialize	;wreg free
 23464                           
 23465                           ; BSR set to: 63
 23466                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23467  018918  EC65  F0CA         	call	_TMR2_Initialize	;wreg free
 23468                           
 23469                           ; BSR set to: 57
 23470                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23471  01891C  ECD6  F0C6         	call	_EXT_INT_Initialize	;wreg free
 23472                           
 23473                           ; BSR set to: 57
 23474                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23475  018920  EC92  F0C7         	call	_TMR6_Initialize	;wreg free
 23476                           
 23477                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 23478  018924  EC30  F0C5         	call	_TMR3_Initialize	;wreg free
 23479                           
 23480                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 23481  018928  EC0D  F0C5         	call	_TMR5_Initialize	;wreg free
 23482                           
 23483                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 23484  01892C  ECBB  F0C2         	call	_UART1_Initialize	;wreg free
 23485                           
 23486                           ; BSR set to: 57
 23487                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 23488  018930  EC4F  F0C3         	call	_UART2_Initialize	;wreg free
 23489                           
 23490                           ; BSR set to: 57
 23491                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 23492  018934  EC71  F0CA         	call	_SPI1_Initialize	;wreg free
 23493                           
 23494                           ; BSR set to: 61
 23495                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 23496  018938  ECAB  F0C3         	call	_DMA2_Initialize	;wreg free
 23497                           
 23498                           ; BSR set to: 59
 23499                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 23500  01893C  ECB6  F0C1         	call	_DMA1_Initialize	;wreg free
 23501                           
 23502                           ; BSR set to: 59
 23503                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 23504  018940  ECD3  F0CA         	call	_CLKREF_Initialize	;wreg free
 23505                           
 23506                           ; BSR set to: 60
 23507                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23508  018944  0012               	return		;funcret
 23509  018946                     __end_of_SYSTEM_Initialize:
 23510                           	opt callstack 0
 23511                           
 23512 ;; *************** function _UART2_Initialize *****************
 23513 ;; Defined at:
 23514 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23515 ;; Parameters:    Size  Location     Type
 23516 ;;		None
 23517 ;; Auto vars:     Size  Location     Type
 23518 ;;		None
 23519 ;; Return value:  Size  Location     Type
 23520 ;;                  1  [STACK] void 
 23521 ;; Registers used:
 23522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23523 ;; Tracked objects:
 23524 ;;		On entry : 3F/39
 23525 ;;		On exit  : 3F/39
 23526 ;;		Unchanged: 0/0
 23527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23532 ;;Total ram usage:        0 bytes
 23533 ;; Hardware stack levels used:    1
 23534 ;; Hardware stack levels required when called:    8
 23535 ;; This function calls:
 23536 ;;		_UART2_SetRxInterruptHandler
 23537 ;;		_UART2_SetTxInterruptHandler
 23538 ;; This function is called by:
 23539 ;;		_SYSTEM_Initialize
 23540 ;; This function uses a reentrant model
 23541 ;;
 23542                           
 23543                           	psect	text96
 23544  01869E                     __ptext96:
 23545                           	opt callstack 0
 23546  01869E                     _UART2_Initialize:
 23547                           	opt callstack 21
 23548                           
 23549                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23550                           
 23551                           ; BSR set to: 60
 23552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23553                           ;incstack = 0
 23554  01869E  0139               	movlb	57	; () banked
 23555  0186A0  9596               	bcf	150,2,b	;volatile
 23556                           
 23557                           ; BSR set to: 57
 23558                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23559  0186A2  0E42               	movlw	low _UART2_Receive_ISR
 23560  0186A4  6EE6               	movwf	postinc1,c
 23561  0186A6  0E94               	movlw	high _UART2_Receive_ISR
 23562  0186A8  6EE6               	movwf	postinc1,c
 23563  0186AA  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23564  0186AC  6EE6               	movwf	postinc1,c
 23565  0186AE  EC1F  F0C8         	call	_UART2_SetRxInterruptHandler	;wreg free
 23566                           
 23567                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23568  0186B2  0139               	movlb	57	; () banked
 23569  0186B4  9796               	bcf	150,3,b	;volatile
 23570                           
 23571                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23572  0186B6  0EF8               	movlw	low _UART2_Transmit_ISR
 23573  0186B8  6EE6               	movwf	postinc1,c
 23574  0186BA  0E8E               	movlw	high _UART2_Transmit_ISR
 23575  0186BC  6EE6               	movwf	postinc1,c
 23576  0186BE  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23577  0186C0  6EE6               	movwf	postinc1,c
 23578  0186C2  EC0B  F0C8         	call	_UART2_SetTxInterruptHandler	;wreg free
 23579                           
 23580                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23581  0186C6  013D               	movlb	61	; () banked
 23582  0186C8  6BD4               	clrf	212,b	;volatile
 23583                           
 23584                           ; BSR set to: 61
 23585                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23586  0186CA  6BD6               	clrf	214,b	;volatile
 23587                           
 23588                           ; BSR set to: 61
 23589                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23590  0186CC  6BD8               	clrf	216,b	;volatile
 23591                           
 23592                           ; BSR set to: 61
 23593                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23594  0186CE  0EB0               	movlw	176
 23595  0186D0  6FDA               	movwf	218,b	;volatile
 23596                           
 23597                           ; BSR set to: 61
 23598                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23599  0186D2  0E80               	movlw	128
 23600  0186D4  6FDB               	movwf	219,b	;volatile
 23601                           
 23602                           ; BSR set to: 61
 23603                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23604  0186D6  6BDC               	clrf	220,b	;volatile
 23605                           
 23606                           ; BSR set to: 61
 23607                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23608  0186D8  0E82               	movlw	130
 23609  0186DA  6FDD               	movwf	221,b	;volatile
 23610                           
 23611                           ; BSR set to: 61
 23612                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23613  0186DC  0E06               	movlw	6
 23614  0186DE  6FDE               	movwf	222,b	;volatile
 23615                           
 23616                           ; BSR set to: 61
 23617                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23618  0186E0  6BDF               	clrf	223,b	;volatile
 23619                           
 23620                           ; BSR set to: 61
 23621                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23622  0186E2  6BE0               	clrf	224,b	;volatile
 23623                           
 23624                           ; BSR set to: 61
 23625                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23626  0186E4  6BE1               	clrf	225,b	;volatile
 23627                           
 23628                           ; BSR set to: 61
 23629                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23630  0186E6  6BE2               	clrf	226,b	;volatile
 23631                           
 23632                           ; BSR set to: 61
 23633                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23634  0186E8  6A1E               	clrf	_uart2TxHead^0,c	;volatile
 23635                           
 23636                           ; BSR set to: 61
 23637                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23638  0186EA  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 23639                           
 23640                           ; BSR set to: 61
 23641                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23642  0186EC  0E40               	movlw	64
 23643  0186EE  6E1C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23644                           
 23645                           ; BSR set to: 61
 23646                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23647  0186F0  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 23648                           
 23649                           ; BSR set to: 61
 23650                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23651  0186F2  6A1A               	clrf	_uart2RxTail^0,c	;volatile
 23652                           
 23653                           ; BSR set to: 61
 23654                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23655  0186F4  6A19               	clrf	_uart2RxCount^0,c	;volatile
 23656                           
 23657                           ; BSR set to: 61
 23658                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23659  0186F6  0139               	movlb	57	; () banked
 23660  0186F8  8596               	bsf	150,2,b	;volatile
 23661                           
 23662                           ; BSR set to: 57
 23663                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23664  0186FA  0012               	return		;funcret
 23665  0186FC                     __end_of_UART2_Initialize:
 23666                           	opt callstack 0
 23667                           
 23668 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23669 ;; Defined at:
 23670 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23671 ;; Parameters:    Size  Location     Type
 23672 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23673 ;;		 -> UART2_Transmit_ISR(1), 
 23674 ;; Auto vars:     Size  Location     Type
 23675 ;;		None
 23676 ;; Return value:  Size  Location     Type
 23677 ;;                  1  [STACK] void 
 23678 ;; Registers used:
 23679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23680 ;; Tracked objects:
 23681 ;;		On entry : 3F/39
 23682 ;;		On exit  : 0/0
 23683 ;;		Unchanged: 0/0
 23684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23689 ;;Total ram usage:        0 bytes
 23690 ;; Hardware stack levels used:    1
 23691 ;; Hardware stack levels required when called:    7
 23692 ;; This function calls:
 23693 ;;		Nothing
 23694 ;; This function is called by:
 23695 ;;		_UART2_Initialize
 23696 ;; This function uses a reentrant model
 23697 ;;
 23698                           
 23699                           	psect	text97
 23700  019016                     __ptext97:
 23701                           	opt callstack 0
 23702  019016                     _UART2_SetTxInterruptHandler:
 23703                           	opt callstack 21
 23704                           
 23705                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23706                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23707                           
 23708                           ; BSR set to: 57
 23709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23710                           ;incstack = 0
 23711  019016  50E1               	movf	fsr1l,w,c
 23712  019018  0FFD               	addlw	-3
 23713  01901A  6ED9               	movwf	fsr2l,c
 23714  01901C  50E2               	movf	fsr1h,w,c
 23715  01901E  6EDA               	movwf	fsr2h,c
 23716  019020  0EFF               	movlw	255
 23717  019022  22DA               	addwfc	fsr2h,f,c
 23718  019024  006F FF78  F0BE    	movff	postinc2,_UART2_TxInterruptHandler
 23719  01902A  006F FF78  F0BF    	movff	postinc2,_UART2_TxInterruptHandler+1
 23720  019030  006F FF74  F0C0    	movff	postdec2,_UART2_TxInterruptHandler+2
 23721                           
 23722                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23723  019036  52E5               	movf	postdec1,f,c
 23724  019038  52E5               	movf	postdec1,f,c
 23725  01903A  52E5               	movf	postdec1,f,c
 23726  01903C  0012               	return		;funcret
 23727  01903E                     __end_of_UART2_SetTxInterruptHandler:
 23728                           	opt callstack 0
 23729                           
 23730 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23731 ;; Defined at:
 23732 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23733 ;; Parameters:    Size  Location     Type
 23734 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23735 ;;		 -> UART2_Receive_ISR(1), 
 23736 ;; Auto vars:     Size  Location     Type
 23737 ;;		None
 23738 ;; Return value:  Size  Location     Type
 23739 ;;                  1  [STACK] void 
 23740 ;; Registers used:
 23741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23742 ;; Tracked objects:
 23743 ;;		On entry : 3F/39
 23744 ;;		On exit  : 0/0
 23745 ;;		Unchanged: 0/0
 23746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23751 ;;Total ram usage:        0 bytes
 23752 ;; Hardware stack levels used:    1
 23753 ;; Hardware stack levels required when called:    7
 23754 ;; This function calls:
 23755 ;;		Nothing
 23756 ;; This function is called by:
 23757 ;;		_UART2_Initialize
 23758 ;; This function uses a reentrant model
 23759 ;;
 23760                           
 23761                           	psect	text98
 23762  01903E                     __ptext98:
 23763                           	opt callstack 0
 23764  01903E                     _UART2_SetRxInterruptHandler:
 23765                           	opt callstack 21
 23766                           
 23767                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23768                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23769                           
 23770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23771                           ;incstack = 0
 23772  01903E  50E1               	movf	fsr1l,w,c
 23773  019040  0FFD               	addlw	-3
 23774  019042  6ED9               	movwf	fsr2l,c
 23775  019044  50E2               	movf	fsr1h,w,c
 23776  019046  6EDA               	movwf	fsr2h,c
 23777  019048  0EFF               	movlw	255
 23778  01904A  22DA               	addwfc	fsr2h,f,c
 23779  01904C  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 23780  019052  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 23781  019058  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 23782                           
 23783                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23784  01905E  52E5               	movf	postdec1,f,c
 23785  019060  52E5               	movf	postdec1,f,c
 23786  019062  52E5               	movf	postdec1,f,c
 23787  019064  0012               	return		;funcret
 23788  019066                     __end_of_UART2_SetRxInterruptHandler:
 23789                           	opt callstack 0
 23790                           
 23791 ;; *************** function _UART1_Initialize *****************
 23792 ;; Defined at:
 23793 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;		None
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;		None
 23798 ;; Return value:  Size  Location     Type
 23799 ;;                  1  [STACK] void 
 23800 ;; Registers used:
 23801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23802 ;; Tracked objects:
 23803 ;;		On entry : 0/39
 23804 ;;		On exit  : 3F/39
 23805 ;;		Unchanged: 0/0
 23806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23811 ;;Total ram usage:        0 bytes
 23812 ;; Hardware stack levels used:    1
 23813 ;; Hardware stack levels required when called:    8
 23814 ;; This function calls:
 23815 ;;		_UART1_SetRxInterruptHandler
 23816 ;;		_UART1_SetTxInterruptHandler
 23817 ;; This function is called by:
 23818 ;;		_SYSTEM_Initialize
 23819 ;; This function uses a reentrant model
 23820 ;;
 23821                           
 23822                           	psect	text99
 23823  018576                     __ptext99:
 23824                           	opt callstack 0
 23825  018576                     _UART1_Initialize:
 23826                           	opt callstack 21
 23827                           
 23828                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23829                           
 23830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23831                           ;incstack = 0
 23832  018576  0139               	movlb	57	; () banked
 23833  018578  9793               	bcf	147,3,b	;volatile
 23834                           
 23835                           ; BSR set to: 57
 23836                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23837  01857A  0E24               	movlw	low _UART1_Receive_ISR
 23838  01857C  6EE6               	movwf	postinc1,c
 23839  01857E  0E94               	movlw	high _UART1_Receive_ISR
 23840  018580  6EE6               	movwf	postinc1,c
 23841  018582  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23842  018584  6EE6               	movwf	postinc1,c
 23843  018586  EC47  F0C8         	call	_UART1_SetRxInterruptHandler	;wreg free
 23844                           
 23845                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23846  01858A  0139               	movlb	57	; () banked
 23847  01858C  9993               	bcf	147,4,b	;volatile
 23848                           
 23849                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23850  01858E  0ECC               	movlw	low _UART1_Transmit_ISR
 23851  018590  6EE6               	movwf	postinc1,c
 23852  018592  0E8E               	movlw	high _UART1_Transmit_ISR
 23853  018594  6EE6               	movwf	postinc1,c
 23854  018596  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23855  018598  6EE6               	movwf	postinc1,c
 23856  01859A  EC33  F0C8         	call	_UART1_SetTxInterruptHandler	;wreg free
 23857                           
 23858                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23859  01859E  013D               	movlb	61	; () banked
 23860  0185A0  6BEC               	clrf	236,b	;volatile
 23861                           
 23862                           ; BSR set to: 61
 23863                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23864  0185A2  6BED               	clrf	237,b	;volatile
 23865                           
 23866                           ; BSR set to: 61
 23867                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23868  0185A4  6BEE               	clrf	238,b	;volatile
 23869                           
 23870                           ; BSR set to: 61
 23871                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23872  0185A6  6BEF               	clrf	239,b	;volatile
 23873                           
 23874                           ; BSR set to: 61
 23875                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23876  0185A8  6BF0               	clrf	240,b	;volatile
 23877                           
 23878                           ; BSR set to: 61
 23879                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23880  0185AA  6BF1               	clrf	241,b	;volatile
 23881                           
 23882                           ; BSR set to: 61
 23883                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23884  0185AC  0EB0               	movlw	176
 23885  0185AE  6FF2               	movwf	242,b	;volatile
 23886                           
 23887                           ; BSR set to: 61
 23888                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23889  0185B0  0E80               	movlw	128
 23890  0185B2  6FF3               	movwf	243,b	;volatile
 23891                           
 23892                           ; BSR set to: 61
 23893                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23894  0185B4  6BF4               	clrf	244,b	;volatile
 23895                           
 23896                           ; BSR set to: 61
 23897                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23898  0185B6  0E82               	movlw	130
 23899  0185B8  6FF5               	movwf	245,b	;volatile
 23900                           
 23901                           ; BSR set to: 61
 23902                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23903  0185BA  0E06               	movlw	6
 23904  0185BC  6FF6               	movwf	246,b	;volatile
 23905                           
 23906                           ; BSR set to: 61
 23907                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23908  0185BE  6BF7               	clrf	247,b	;volatile
 23909                           
 23910                           ; BSR set to: 61
 23911                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23912  0185C0  6BF8               	clrf	248,b	;volatile
 23913                           
 23914                           ; BSR set to: 61
 23915                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23916  0185C2  6BF9               	clrf	249,b	;volatile
 23917                           
 23918                           ; BSR set to: 61
 23919                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23920  0185C4  6BFA               	clrf	250,b	;volatile
 23921                           
 23922                           ; BSR set to: 61
 23923                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23924  0185C6  6A24               	clrf	_uart1TxHead^0,c	;volatile
 23925                           
 23926                           ; BSR set to: 61
 23927                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23928  0185C8  6A23               	clrf	_uart1TxTail^0,c	;volatile
 23929                           
 23930                           ; BSR set to: 61
 23931                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23932  0185CA  0E40               	movlw	64
 23933  0185CC  6E22               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23934                           
 23935                           ; BSR set to: 61
 23936                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23937  0185CE  6A21               	clrf	_uart1RxHead^0,c	;volatile
 23938                           
 23939                           ; BSR set to: 61
 23940                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23941  0185D0  6A20               	clrf	_uart1RxTail^0,c	;volatile
 23942                           
 23943                           ; BSR set to: 61
 23944                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23945  0185D2  6A1F               	clrf	_uart1RxCount^0,c	;volatile
 23946                           
 23947                           ; BSR set to: 61
 23948                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23949  0185D4  0139               	movlb	57	; () banked
 23950  0185D6  8793               	bsf	147,3,b	;volatile
 23951                           
 23952                           ; BSR set to: 57
 23953                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23954  0185D8  0012               	return		;funcret
 23955  0185DA                     __end_of_UART1_Initialize:
 23956                           	opt callstack 0
 23957                           
 23958 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23959 ;; Defined at:
 23960 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23961 ;; Parameters:    Size  Location     Type
 23962 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23963 ;;		 -> UART1_Transmit_ISR(1), 
 23964 ;; Auto vars:     Size  Location     Type
 23965 ;;		None
 23966 ;; Return value:  Size  Location     Type
 23967 ;;                  1  [STACK] void 
 23968 ;; Registers used:
 23969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23970 ;; Tracked objects:
 23971 ;;		On entry : 3F/39
 23972 ;;		On exit  : 0/0
 23973 ;;		Unchanged: 0/0
 23974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;Total ram usage:        0 bytes
 23980 ;; Hardware stack levels used:    1
 23981 ;; Hardware stack levels required when called:    7
 23982 ;; This function calls:
 23983 ;;		Nothing
 23984 ;; This function is called by:
 23985 ;;		_UART1_Initialize
 23986 ;; This function uses a reentrant model
 23987 ;;
 23988                           
 23989                           	psect	text100
 23990  019066                     __ptext100:
 23991                           	opt callstack 0
 23992  019066                     _UART1_SetTxInterruptHandler:
 23993                           	opt callstack 21
 23994                           
 23995                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23996                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23997                           
 23998                           ; BSR set to: 57
 23999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24000                           ;incstack = 0
 24001  019066  50E1               	movf	fsr1l,w,c
 24002  019068  0FFD               	addlw	-3
 24003  01906A  6ED9               	movwf	fsr2l,c
 24004  01906C  50E2               	movf	fsr1h,w,c
 24005  01906E  6EDA               	movwf	fsr2h,c
 24006  019070  0EFF               	movlw	255
 24007  019072  22DA               	addwfc	fsr2h,f,c
 24008  019074  006F FF78  F0B8    	movff	postinc2,_UART1_TxInterruptHandler
 24009  01907A  006F FF78  F0B9    	movff	postinc2,_UART1_TxInterruptHandler+1
 24010  019080  006F FF74  F0BA    	movff	postdec2,_UART1_TxInterruptHandler+2
 24011                           
 24012                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24013  019086  52E5               	movf	postdec1,f,c
 24014  019088  52E5               	movf	postdec1,f,c
 24015  01908A  52E5               	movf	postdec1,f,c
 24016  01908C  0012               	return		;funcret
 24017  01908E                     __end_of_UART1_SetTxInterruptHandler:
 24018                           	opt callstack 0
 24019                           
 24020 ;; *************** function _UART1_SetRxInterruptHandler *****************
 24021 ;; Defined at:
 24022 ;;		line 241 in file "mcc_generated_files/uart1.c"
 24023 ;; Parameters:    Size  Location     Type
 24024 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24025 ;;		 -> UART1_Receive_ISR(1), 
 24026 ;; Auto vars:     Size  Location     Type
 24027 ;;		None
 24028 ;; Return value:  Size  Location     Type
 24029 ;;                  1  [STACK] void 
 24030 ;; Registers used:
 24031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24032 ;; Tracked objects:
 24033 ;;		On entry : 3F/39
 24034 ;;		On exit  : 0/0
 24035 ;;		Unchanged: 0/0
 24036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;Total ram usage:        0 bytes
 24042 ;; Hardware stack levels used:    1
 24043 ;; Hardware stack levels required when called:    7
 24044 ;; This function calls:
 24045 ;;		Nothing
 24046 ;; This function is called by:
 24047 ;;		_UART1_Initialize
 24048 ;; This function uses a reentrant model
 24049 ;;
 24050                           
 24051                           	psect	text101
 24052  01908E                     __ptext101:
 24053                           	opt callstack 0
 24054  01908E                     _UART1_SetRxInterruptHandler:
 24055                           	opt callstack 21
 24056                           
 24057                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 24058                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24059                           
 24060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24061                           ;incstack = 0
 24062  01908E  50E1               	movf	fsr1l,w,c
 24063  019090  0FFD               	addlw	-3
 24064  019092  6ED9               	movwf	fsr2l,c
 24065  019094  50E2               	movf	fsr1h,w,c
 24066  019096  6EDA               	movwf	fsr2h,c
 24067  019098  0EFF               	movlw	255
 24068  01909A  22DA               	addwfc	fsr2h,f,c
 24069  01909C  006F FF78  F0BB    	movff	postinc2,_UART1_RxInterruptHandler
 24070  0190A2  006F FF78  F0BC    	movff	postinc2,_UART1_RxInterruptHandler+1
 24071  0190A8  006F FF74  F0BD    	movff	postdec2,_UART1_RxInterruptHandler+2
 24072                           
 24073                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24074  0190AE  52E5               	movf	postdec1,f,c
 24075  0190B0  52E5               	movf	postdec1,f,c
 24076  0190B2  52E5               	movf	postdec1,f,c
 24077  0190B4  0012               	return		;funcret
 24078  0190B6                     __end_of_UART1_SetRxInterruptHandler:
 24079                           	opt callstack 0
 24080                           
 24081 ;; *************** function _TMR6_Initialize *****************
 24082 ;; Defined at:
 24083 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 24084 ;; Parameters:    Size  Location     Type
 24085 ;;		None
 24086 ;; Auto vars:     Size  Location     Type
 24087 ;;		None
 24088 ;; Return value:  Size  Location     Type
 24089 ;;                  1  [STACK] void 
 24090 ;; Registers used:
 24091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24092 ;; Tracked objects:
 24093 ;;		On entry : 3F/39
 24094 ;;		On exit  : 0/0
 24095 ;;		Unchanged: 0/0
 24096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24101 ;;Total ram usage:        0 bytes
 24102 ;; Hardware stack levels used:    1
 24103 ;; Hardware stack levels required when called:    8
 24104 ;; This function calls:
 24105 ;;		_TMR6_SetInterruptHandler
 24106 ;; This function is called by:
 24107 ;;		_SYSTEM_Initialize
 24108 ;; This function uses a reentrant model
 24109 ;;
 24110                           
 24111                           	psect	text102
 24112  018F24                     __ptext102:
 24113                           	opt callstack 0
 24114  018F24                     _TMR6_Initialize:
 24115                           	opt callstack 21
 24116                           
 24117                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 24118                           
 24119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24120                           ;incstack = 0
 24121  018F24  0E01               	movlw	1
 24122  018F26  6E96               	movwf	150,c	;volatile
 24123                           
 24124                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 24125  018F28  6A95               	clrf	149,c	;volatile
 24126                           
 24127                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 24128  018F2A  6A97               	clrf	151,c	;volatile
 24129                           
 24130                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 24131  018F2C  0E7C               	movlw	124
 24132  018F2E  6E93               	movwf	147,c	;volatile
 24133                           
 24134                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 24135  018F30  6A92               	clrf	146,c	;volatile
 24136                           
 24137                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 24138  018F32  0139               	movlb	57	; () banked
 24139  018F34  91A9               	bcf	169,0,b	;volatile
 24140                           
 24141                           ; BSR set to: 57
 24142                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 24143  018F36  8199               	bsf	153,0,b	;volatile
 24144                           
 24145                           ; BSR set to: 57
 24146                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 24147  018F38  0EAE               	movlw	low _TMR6_DefaultInterruptHandler
 24148  018F3A  6EE6               	movwf	postinc1,c
 24149  018F3C  0E88               	movlw	high _TMR6_DefaultInterruptHandler
 24150  018F3E  6EE6               	movwf	postinc1,c
 24151  018F40  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 24152  018F42  6EE6               	movwf	postinc1,c
 24153  018F44  EC5B  F0C8         	call	_TMR6_SetInterruptHandler	;wreg free
 24154                           
 24155                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 24156  018F48  0EE0               	movlw	224
 24157  018F4A  6E94               	movwf	148,c	;volatile
 24158                           
 24159                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24160  018F4C  0012               	return		;funcret
 24161  018F4E                     __end_of_TMR6_Initialize:
 24162                           	opt callstack 0
 24163                           
 24164 ;; *************** function _TMR6_SetInterruptHandler *****************
 24165 ;; Defined at:
 24166 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 24167 ;; Parameters:    Size  Location     Type
 24168 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24169 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 24170 ;; Auto vars:     Size  Location     Type
 24171 ;;		None
 24172 ;; Return value:  Size  Location     Type
 24173 ;;                  1  [STACK] void 
 24174 ;; Registers used:
 24175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24176 ;; Tracked objects:
 24177 ;;		On entry : 3F/39
 24178 ;;		On exit  : 0/0
 24179 ;;		Unchanged: 0/0
 24180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24185 ;;Total ram usage:        0 bytes
 24186 ;; Hardware stack levels used:    1
 24187 ;; Hardware stack levels required when called:    7
 24188 ;; This function calls:
 24189 ;;		Nothing
 24190 ;; This function is called by:
 24191 ;;		_TMR6_Initialize
 24192 ;; This function uses a reentrant model
 24193 ;;
 24194                           
 24195                           	psect	text103
 24196  0190B6                     __ptext103:
 24197                           	opt callstack 0
 24198  0190B6                     _TMR6_SetInterruptHandler:
 24199                           	opt callstack 21
 24200                           
 24201                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 24202                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24203                           
 24204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24205                           ;incstack = 0
 24206  0190B6  50E1               	movf	fsr1l,w,c
 24207  0190B8  0FFD               	addlw	-3
 24208  0190BA  6ED9               	movwf	fsr2l,c
 24209  0190BC  50E2               	movf	fsr1h,w,c
 24210  0190BE  6EDA               	movwf	fsr2h,c
 24211  0190C0  0EFF               	movlw	255
 24212  0190C2  22DA               	addwfc	fsr2h,f,c
 24213  0190C4  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 24214  0190CA  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 24215  0190D0  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 24216                           
 24217                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24218  0190D6  52E5               	movf	postdec1,f,c
 24219  0190D8  52E5               	movf	postdec1,f,c
 24220  0190DA  52E5               	movf	postdec1,f,c
 24221  0190DC  0012               	return		;funcret
 24222  0190DE                     __end_of_TMR6_SetInterruptHandler:
 24223                           	opt callstack 0
 24224                           
 24225 ;; *************** function _TMR5_Initialize *****************
 24226 ;; Defined at:
 24227 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 24228 ;; Parameters:    Size  Location     Type
 24229 ;;		None
 24230 ;; Auto vars:     Size  Location     Type
 24231 ;;		None
 24232 ;; Return value:  Size  Location     Type
 24233 ;;                  1  [STACK] void 
 24234 ;; Registers used:
 24235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24236 ;; Tracked objects:
 24237 ;;		On entry : 0/39
 24238 ;;		On exit  : 0/0
 24239 ;;		Unchanged: 0/0
 24240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24245 ;;Total ram usage:        0 bytes
 24246 ;; Hardware stack levels used:    1
 24247 ;; Hardware stack levels required when called:    8
 24248 ;; This function calls:
 24249 ;;		_TMR5_SetInterruptHandler
 24250 ;; This function is called by:
 24251 ;;		_SYSTEM_Initialize
 24252 ;; This function uses a reentrant model
 24253 ;;
 24254                           
 24255                           	psect	text104
 24256  018A1A                     __ptext104:
 24257                           	opt callstack 0
 24258  018A1A                     _TMR5_Initialize:
 24259                           	opt callstack 21
 24260                           
 24261                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 24262                           
 24263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24264                           ;incstack = 0
 24265  018A1A  6A9B               	clrf	155,c	;volatile
 24266                           
 24267                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 24268  018A1C  6A9C               	clrf	156,c	;volatile
 24269                           
 24270                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 24271  018A1E  0E01               	movlw	1
 24272  018A20  6E9D               	movwf	157,c	;volatile
 24273                           
 24274                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 24275  018A22  0E63               	movlw	99
 24276  018A24  6E99               	movwf	153,c	;volatile
 24277                           
 24278                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 24279  018A26  0EC0               	movlw	192
 24280  018A28  6E98               	movwf	152,c	;volatile
 24281                           
 24282                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 24283  018A2A  5098               	movf	152,w,c	;volatile
 24284  018A2C  006F FE64  F025    	movff	16281,btemp	;volatile
 24285  018A32  6A26               	clrf	(btemp+1)^0,c
 24286  018A34  0060  F094  F026   	movff	btemp,btemp+1
 24287  018A3A  6A25               	clrf	btemp^0,c
 24288  018A3C  1025               	iorwf	btemp^0,w,c
 24289  018A3E  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 24290  018A40  5026               	movf	(btemp+1)^0,w,c
 24291  018A42  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 24292                           
 24293                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 24294  018A44  0139               	movlb	57	; () banked
 24295  018A46  9DA8               	bcf	168,6,b	;volatile
 24296                           
 24297                           ; BSR set to: 57
 24298                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 24299  018A48  8D98               	bsf	152,6,b	;volatile
 24300                           
 24301                           ; BSR set to: 57
 24302                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 24303  018A4A  0ECE               	movlw	low _TMR5_DefaultInterruptHandler
 24304  018A4C  6EE6               	movwf	postinc1,c
 24305  018A4E  0E91               	movlw	high _TMR5_DefaultInterruptHandler
 24306  018A50  6EE6               	movwf	postinc1,c
 24307  018A52  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 24308  018A54  6EE6               	movwf	postinc1,c
 24309  018A56  EC6F  F0C8         	call	_TMR5_SetInterruptHandler	;wreg free
 24310                           
 24311                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 24312  018A5A  0E31               	movlw	49
 24313  018A5C  6E9A               	movwf	154,c	;volatile
 24314                           
 24315                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24316  018A5E  0012               	return		;funcret
 24317  018A60                     __end_of_TMR5_Initialize:
 24318                           	opt callstack 0
 24319                           
 24320 ;; *************** function _TMR5_SetInterruptHandler *****************
 24321 ;; Defined at:
 24322 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24323 ;; Parameters:    Size  Location     Type
 24324 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24325 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24326 ;; Auto vars:     Size  Location     Type
 24327 ;;		None
 24328 ;; Return value:  Size  Location     Type
 24329 ;;                  1  [STACK] void 
 24330 ;; Registers used:
 24331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24332 ;; Tracked objects:
 24333 ;;		On entry : 3F/39
 24334 ;;		On exit  : 0/0
 24335 ;;		Unchanged: 0/0
 24336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24341 ;;Total ram usage:        0 bytes
 24342 ;; Hardware stack levels used:    1
 24343 ;; Hardware stack levels required when called:    7
 24344 ;; This function calls:
 24345 ;;		Nothing
 24346 ;; This function is called by:
 24347 ;;		_TMR5_Initialize
 24348 ;; This function uses a reentrant model
 24349 ;;
 24350                           
 24351                           	psect	text105
 24352  0190DE                     __ptext105:
 24353                           	opt callstack 0
 24354  0190DE                     _TMR5_SetInterruptHandler:
 24355                           	opt callstack 21
 24356                           
 24357                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24358                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24359                           
 24360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24361                           ;incstack = 0
 24362  0190DE  50E1               	movf	fsr1l,w,c
 24363  0190E0  0FFD               	addlw	-3
 24364  0190E2  6ED9               	movwf	fsr2l,c
 24365  0190E4  50E2               	movf	fsr1h,w,c
 24366  0190E6  6EDA               	movwf	fsr2h,c
 24367  0190E8  0EFF               	movlw	255
 24368  0190EA  22DA               	addwfc	fsr2h,f,c
 24369  0190EC  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 24370  0190F2  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 24371  0190F8  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 24372                           
 24373                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24374  0190FE  52E5               	movf	postdec1,f,c
 24375  019100  52E5               	movf	postdec1,f,c
 24376  019102  52E5               	movf	postdec1,f,c
 24377  019104  0012               	return		;funcret
 24378  019106                     __end_of_TMR5_SetInterruptHandler:
 24379                           	opt callstack 0
 24380                           
 24381 ;; *************** function _TMR3_Initialize *****************
 24382 ;; Defined at:
 24383 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 24384 ;; Parameters:    Size  Location     Type
 24385 ;;		None
 24386 ;; Auto vars:     Size  Location     Type
 24387 ;;		None
 24388 ;; Return value:  Size  Location     Type
 24389 ;;                  1  [STACK] void 
 24390 ;; Registers used:
 24391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24392 ;; Tracked objects:
 24393 ;;		On entry : 0/39
 24394 ;;		On exit  : 0/0
 24395 ;;		Unchanged: 0/0
 24396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24401 ;;Total ram usage:        0 bytes
 24402 ;; Hardware stack levels used:    1
 24403 ;; Hardware stack levels required when called:    8
 24404 ;; This function calls:
 24405 ;;		_TMR3_SetInterruptHandler
 24406 ;; This function is called by:
 24407 ;;		_SYSTEM_Initialize
 24408 ;; This function uses a reentrant model
 24409 ;;
 24410                           
 24411                           	psect	text106
 24412  018A60                     __ptext106:
 24413                           	opt callstack 0
 24414  018A60                     _TMR3_Initialize:
 24415                           	opt callstack 21
 24416                           
 24417                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 24418                           
 24419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24420                           ;incstack = 0
 24421  018A60  6AA7               	clrf	167,c	;volatile
 24422                           
 24423                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 24424  018A62  6AA8               	clrf	168,c	;volatile
 24425                           
 24426                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 24427  018A64  0E01               	movlw	1
 24428  018A66  6EA9               	movwf	169,c	;volatile
 24429                           
 24430                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 24431  018A68  0E3C               	movlw	60
 24432  018A6A  6EA5               	movwf	165,c	;volatile
 24433                           
 24434                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 24435  018A6C  0EB0               	movlw	176
 24436  018A6E  6EA4               	movwf	164,c	;volatile
 24437                           
 24438                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 24439  018A70  50A4               	movf	164,w,c	;volatile
 24440  018A72  006F FE94  F025    	movff	16293,btemp	;volatile
 24441  018A78  6A26               	clrf	(btemp+1)^0,c
 24442  018A7A  0060  F094  F026   	movff	btemp,btemp+1
 24443  018A80  6A25               	clrf	btemp^0,c
 24444  018A82  1025               	iorwf	btemp^0,w,c
 24445  018A84  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 24446  018A86  5026               	movf	(btemp+1)^0,w,c
 24447  018A88  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 24448                           
 24449                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 24450  018A8A  0139               	movlb	57	; () banked
 24451  018A8C  9DA6               	bcf	166,6,b	;volatile
 24452                           
 24453                           ; BSR set to: 57
 24454                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 24455  018A8E  8D96               	bsf	150,6,b	;volatile
 24456                           
 24457                           ; BSR set to: 57
 24458                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 24459  018A90  0E1C               	movlw	low _TMR3_DefaultInterruptHandler
 24460  018A92  6EE6               	movwf	postinc1,c
 24461  018A94  0E96               	movlw	high _TMR3_DefaultInterruptHandler
 24462  018A96  6EE6               	movwf	postinc1,c
 24463  018A98  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 24464  018A9A  6EE6               	movwf	postinc1,c
 24465  018A9C  EC83  F0C8         	call	_TMR3_SetInterruptHandler	;wreg free
 24466                           
 24467                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 24468  018AA0  0E31               	movlw	49
 24469  018AA2  6EA6               	movwf	166,c	;volatile
 24470                           
 24471                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24472  018AA4  0012               	return		;funcret
 24473  018AA6                     __end_of_TMR3_Initialize:
 24474                           	opt callstack 0
 24475                           
 24476 ;; *************** function _TMR3_SetInterruptHandler *****************
 24477 ;; Defined at:
 24478 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 24479 ;; Parameters:    Size  Location     Type
 24480 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24481 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 24482 ;; Auto vars:     Size  Location     Type
 24483 ;;		None
 24484 ;; Return value:  Size  Location     Type
 24485 ;;                  1  [STACK] void 
 24486 ;; Registers used:
 24487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24488 ;; Tracked objects:
 24489 ;;		On entry : 0/1
 24490 ;;		On exit  : 0/0
 24491 ;;		Unchanged: 0/0
 24492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24497 ;;Total ram usage:        0 bytes
 24498 ;; Hardware stack levels used:    1
 24499 ;; Hardware stack levels required when called:    7
 24500 ;; This function calls:
 24501 ;;		Nothing
 24502 ;; This function is called by:
 24503 ;;		_TMR3_Initialize
 24504 ;;		_init_bsoc
 24505 ;; This function uses a reentrant model
 24506 ;;
 24507                           
 24508                           	psect	text107
 24509  019106                     __ptext107:
 24510                           	opt callstack 0
 24511  019106                     _TMR3_SetInterruptHandler:
 24512                           	opt callstack 22
 24513                           
 24514                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 24515                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24516                           
 24517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24518                           ;incstack = 0
 24519  019106  50E1               	movf	fsr1l,w,c
 24520  019108  0FFD               	addlw	-3
 24521  01910A  6ED9               	movwf	fsr2l,c
 24522  01910C  50E2               	movf	fsr1h,w,c
 24523  01910E  6EDA               	movwf	fsr2h,c
 24524  019110  0EFF               	movlw	255
 24525  019112  22DA               	addwfc	fsr2h,f,c
 24526  019114  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 24527  01911A  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 24528  019120  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 24529                           
 24530                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24531  019126  52E5               	movf	postdec1,f,c
 24532  019128  52E5               	movf	postdec1,f,c
 24533  01912A  52E5               	movf	postdec1,f,c
 24534  01912C  0012               	return		;funcret
 24535  01912E                     __end_of_TMR3_SetInterruptHandler:
 24536                           	opt callstack 0
 24537                           
 24538 ;; *************** function _TMR2_Initialize *****************
 24539 ;; Defined at:
 24540 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24541 ;; Parameters:    Size  Location     Type
 24542 ;;		None
 24543 ;; Auto vars:     Size  Location     Type
 24544 ;;		None
 24545 ;; Return value:  Size  Location     Type
 24546 ;;                  1  [STACK] void 
 24547 ;; Registers used:
 24548 ;;		wreg, status,2
 24549 ;; Tracked objects:
 24550 ;;		On entry : 3F/3F
 24551 ;;		On exit  : 3F/39
 24552 ;;		Unchanged: 0/0
 24553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24558 ;;Total ram usage:        0 bytes
 24559 ;; Hardware stack levels used:    1
 24560 ;; Hardware stack levels required when called:    7
 24561 ;; This function calls:
 24562 ;;		Nothing
 24563 ;; This function is called by:
 24564 ;;		_SYSTEM_Initialize
 24565 ;; This function uses a reentrant model
 24566 ;;
 24567                           
 24568                           	psect	text108
 24569  0194CA                     __ptext108:
 24570                           	opt callstack 0
 24571  0194CA                     _TMR2_Initialize:
 24572                           	opt callstack 22
 24573                           
 24574                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24575                           
 24576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24577                           ;incstack = 0
 24578  0194CA  0E01               	movlw	1
 24579  0194CC  6EAE               	movwf	174,c	;volatile
 24580                           
 24581                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24582  0194CE  6AAD               	clrf	173,c	;volatile
 24583                           
 24584                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24585  0194D0  6AAF               	clrf	175,c	;volatile
 24586                           
 24587                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24588  0194D2  0E63               	movlw	99
 24589  0194D4  6EAB               	movwf	171,c	;volatile
 24590                           
 24591                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24592  0194D6  6AAA               	clrf	170,c	;volatile
 24593                           
 24594                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24595  0194D8  0139               	movlb	57	; () banked
 24596  0194DA  95A4               	bcf	164,2,b	;volatile
 24597                           
 24598                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24599  0194DC  0EC0               	movlw	192
 24600  0194DE  6EAC               	movwf	172,c	;volatile
 24601                           
 24602                           ; BSR set to: 57
 24603                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24604  0194E0  0012               	return		;funcret
 24605  0194E2                     __end_of_TMR2_Initialize:
 24606                           	opt callstack 0
 24607                           
 24608 ;; *************** function _SPI1_Initialize *****************
 24609 ;; Defined at:
 24610 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24611 ;; Parameters:    Size  Location     Type
 24612 ;;		None
 24613 ;; Auto vars:     Size  Location     Type
 24614 ;;		None
 24615 ;; Return value:  Size  Location     Type
 24616 ;;                  1  [STACK] void 
 24617 ;; Registers used:
 24618 ;;		wreg, status,2
 24619 ;; Tracked objects:
 24620 ;;		On entry : 3F/39
 24621 ;;		On exit  : 3F/3D
 24622 ;;		Unchanged: 0/0
 24623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24628 ;;Total ram usage:        0 bytes
 24629 ;; Hardware stack levels used:    1
 24630 ;; Hardware stack levels required when called:    7
 24631 ;; This function calls:
 24632 ;;		Nothing
 24633 ;; This function is called by:
 24634 ;;		_SYSTEM_Initialize
 24635 ;; This function uses a reentrant model
 24636 ;;
 24637                           
 24638                           	psect	text109
 24639  0194E2                     __ptext109:
 24640                           	opt callstack 0
 24641  0194E2                     _SPI1_Initialize:
 24642                           	opt callstack 22
 24643                           
 24644                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24645                           
 24646                           ; BSR set to: 57
 24647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24648                           ;incstack = 0
 24649  0194E2  0E40               	movlw	64
 24650  0194E4  013D               	movlb	61	; () banked
 24651  0194E6  6F15               	movwf	21,b	;volatile
 24652                           
 24653                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 24654  0194E8  0E03               	movlw	3
 24655  0194EA  6F16               	movwf	22,b	;volatile
 24656                           
 24657                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24658  0194EC  0E4F               	movlw	79
 24659  0194EE  6F19               	movwf	25,b	;volatile
 24660                           
 24661                           ; BSR set to: 61
 24662                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24663  0194F0  6B1C               	clrf	28,b	;volatile
 24664                           
 24665                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24666  0194F2  0E83               	movlw	131
 24667  0194F4  6F14               	movwf	20,b	;volatile
 24668                           
 24669                           ; BSR set to: 61
 24670                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24671  0194F6  0012               	return		;funcret
 24672  0194F8                     __end_of_SPI1_Initialize:
 24673                           	opt callstack 0
 24674                           
 24675 ;; *************** function _PWM8_Initialize *****************
 24676 ;; Defined at:
 24677 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24678 ;; Parameters:    Size  Location     Type
 24679 ;;		None
 24680 ;; Auto vars:     Size  Location     Type
 24681 ;;		None
 24682 ;; Return value:  Size  Location     Type
 24683 ;;                  1  [STACK] void 
 24684 ;; Registers used:
 24685 ;;		wreg, status,2
 24686 ;; Tracked objects:
 24687 ;;		On entry : 0/3E
 24688 ;;		On exit  : 3F/3F
 24689 ;;		Unchanged: 0/0
 24690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;Total ram usage:        0 bytes
 24696 ;; Hardware stack levels used:    1
 24697 ;; Hardware stack levels required when called:    7
 24698 ;; This function calls:
 24699 ;;		Nothing
 24700 ;; This function is called by:
 24701 ;;		_SYSTEM_Initialize
 24702 ;; This function uses a reentrant model
 24703 ;;
 24704                           
 24705                           	psect	text110
 24706  0194F8                     __ptext110:
 24707                           	opt callstack 0
 24708  0194F8                     _PWM8_Initialize:
 24709                           	opt callstack 22
 24710                           
 24711                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24712                           
 24713                           ; BSR set to: 61
 24714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24715                           ;incstack = 0
 24716  0194F8  0E80               	movlw	128
 24717  0194FA  6E62               	movwf	98,c	;volatile
 24718                           
 24719                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24720  0194FC  6A61               	clrf	97,c	;volatile
 24721                           
 24722                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24723  0194FE  0E40               	movlw	64
 24724  019500  6E60               	movwf	96,c	;volatile
 24725                           
 24726                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24727  019502  013F               	movlb	63	; () banked
 24728  019504  515F               	movf	95,w,b	;volatile
 24729  019506  0B3F               	andlw	-193
 24730  019508  0940               	iorlw	64
 24731  01950A  6F5F               	movwf	95,b	;volatile
 24732                           
 24733                           ; BSR set to: 63
 24734                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24735  01950C  0012               	return		;funcret
 24736  01950E                     __end_of_PWM8_Initialize:
 24737                           	opt callstack 0
 24738                           
 24739 ;; *************** function _PMD_Initialize *****************
 24740 ;; Defined at:
 24741 ;;		line 90 in file "mcc_generated_files/mcc.c"
 24742 ;; Parameters:    Size  Location     Type
 24743 ;;		None
 24744 ;; Auto vars:     Size  Location     Type
 24745 ;;		None
 24746 ;; Return value:  Size  Location     Type
 24747 ;;                  1  [STACK] void 
 24748 ;; Registers used:
 24749 ;;		None
 24750 ;; Tracked objects:
 24751 ;;		On entry : 3F/39
 24752 ;;		On exit  : 3F/39
 24753 ;;		Unchanged: 0/0
 24754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;Total ram usage:        0 bytes
 24760 ;; Hardware stack levels used:    1
 24761 ;; Hardware stack levels required when called:    7
 24762 ;; This function calls:
 24763 ;;		Nothing
 24764 ;; This function is called by:
 24765 ;;		_SYSTEM_Initialize
 24766 ;; This function uses a reentrant model
 24767 ;;
 24768                           
 24769                           	psect	text111
 24770  019524                     __ptext111:
 24771                           	opt callstack 0
 24772  019524                     _PMD_Initialize:
 24773                           	opt callstack 22
 24774                           
 24775                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 24776                           
 24777                           ; BSR set to: 63
 24778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24779                           ;incstack = 0
 24780  019524  0139               	movlb	57	; () banked
 24781  019526  6BC0               	clrf	192,b	;volatile
 24782                           
 24783                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 24784  019528  6BC1               	clrf	193,b	;volatile
 24785                           
 24786                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 24787  01952A  6BC2               	clrf	194,b	;volatile
 24788                           
 24789                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 24790  01952C  6BC3               	clrf	195,b	;volatile
 24791                           
 24792                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 24793  01952E  6BC4               	clrf	196,b	;volatile
 24794                           
 24795                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 24796  019530  6BC5               	clrf	197,b	;volatile
 24797                           
 24798                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 24799  019532  6BC6               	clrf	198,b	;volatile
 24800                           
 24801                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 24802  019534  6BC7               	clrf	199,b	;volatile
 24803                           
 24804                           ; BSR set to: 57
 24805                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24806  019536  0012               	return		;funcret
 24807  019538                     __end_of_PMD_Initialize:
 24808                           	opt callstack 0
 24809                           
 24810 ;; *************** function _PIN_MANAGER_Initialize *****************
 24811 ;; Defined at:
 24812 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24813 ;; Parameters:    Size  Location     Type
 24814 ;;		None
 24815 ;; Auto vars:     Size  Location     Type
 24816 ;;		None
 24817 ;; Return value:  Size  Location     Type
 24818 ;;                  1  [STACK] void 
 24819 ;; Registers used:
 24820 ;;		wreg, status,2
 24821 ;; Tracked objects:
 24822 ;;		On entry : 3F/39
 24823 ;;		On exit  : 3F/3A
 24824 ;;		Unchanged: 0/0
 24825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24830 ;;Total ram usage:        0 bytes
 24831 ;; Hardware stack levels used:    1
 24832 ;; Hardware stack levels required when called:    7
 24833 ;; This function calls:
 24834 ;;		Nothing
 24835 ;; This function is called by:
 24836 ;;		_SYSTEM_Initialize
 24837 ;; This function uses a reentrant model
 24838 ;;
 24839                           
 24840                           	psect	text112
 24841  01803C                     __ptext112:
 24842                           	opt callstack 0
 24843  01803C                     _PIN_MANAGER_Initialize:
 24844                           	opt callstack 22
 24845                           
 24846                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24847                           
 24848                           ; BSR set to: 57
 24849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24850                           ;incstack = 0
 24851  01803C  0E07               	movlw	7
 24852  01803E  6EBE               	movwf	190,c	;volatile
 24853                           
 24854                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24855  018040  0E80               	movlw	128
 24856  018042  6EBD               	movwf	189,c	;volatile
 24857                           
 24858                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24859  018044  6ABA               	clrf	186,c	;volatile
 24860                           
 24861                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24862  018046  6ABF               	clrf	191,c	;volatile
 24863                           
 24864                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24865  018048  6ABB               	clrf	187,c	;volatile
 24866                           
 24867                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24868  01804A  0E07               	movlw	7
 24869  01804C  6EBC               	movwf	188,c	;volatile
 24870                           
 24871                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24872  01804E  6AC6               	clrf	198,c	;volatile
 24873                           
 24874                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24875  018050  0E0F               	movlw	15
 24876  018052  6EC7               	movwf	199,c	;volatile
 24877                           
 24878                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24879  018054  68C2               	setf	194,c	;volatile
 24880                           
 24881                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24882  018056  0EBF               	movlw	191
 24883  018058  6EC3               	movwf	195,c	;volatile
 24884                           
 24885                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24886  01805A  0E90               	movlw	144
 24887  01805C  6EC4               	movwf	196,c	;volatile
 24888                           
 24889                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24890  01805E  0E0C               	movlw	12
 24891  018060  6EC5               	movwf	197,c	;volatile
 24892                           
 24893                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24894  018062  013A               	movlb	58	; () banked
 24895  018064  6B70               	clrf	112,b	;volatile
 24896                           
 24897                           ; BSR set to: 58
 24898                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24899  018066  6B60               	clrf	96,b	;volatile
 24900                           
 24901                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24902  018068  0E3C               	movlw	60
 24903  01806A  6F50               	movwf	80,b	;volatile
 24904                           
 24905                           ; BSR set to: 58
 24906                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24907  01806C  6B80               	clrf	128,b	;volatile
 24908                           
 24909                           ; BSR set to: 58
 24910                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24911  01806E  6B90               	clrf	144,b	;volatile
 24912                           
 24913                           ; BSR set to: 58
 24914                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24915  018070  6940               	setf	64,b	;volatile
 24916                           
 24917                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24918  018072  0E0C               	movlw	12
 24919  018074  6F71               	movwf	113,b	;volatile
 24920                           
 24921                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24922  018076  0E0F               	movlw	15
 24923  018078  6F91               	movwf	145,b	;volatile
 24924                           
 24925                           ; BSR set to: 58
 24926                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24927  01807A  6B81               	clrf	129,b	;volatile
 24928                           
 24929                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24930  01807C  0E83               	movlw	131
 24931  01807E  6F51               	movwf	81,b	;volatile
 24932                           
 24933                           ; BSR set to: 58
 24934                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24935  018080  6B41               	clrf	65,b	;volatile
 24936                           
 24937                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24938  018082  0E97               	movlw	151
 24939  018084  6F61               	movwf	97,b	;volatile
 24940                           
 24941                           ; BSR set to: 58
 24942                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24943  018086  6B82               	clrf	130,b	;volatile
 24944                           
 24945                           ; BSR set to: 58
 24946                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24947  018088  6B92               	clrf	146,b	;volatile
 24948                           
 24949                           ; BSR set to: 58
 24950                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24951  01808A  6B42               	clrf	66,b	;volatile
 24952                           
 24953                           ; BSR set to: 58
 24954                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24955  01808C  6B52               	clrf	82,b	;volatile
 24956                           
 24957                           ; BSR set to: 58
 24958                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24959  01808E  6B62               	clrf	98,b	;volatile
 24960                           
 24961                           ; BSR set to: 58
 24962                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24963  018090  6B72               	clrf	114,b	;volatile
 24964                           
 24965                           ; BSR set to: 58
 24966                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24967  018092  6943               	setf	67,b	;volatile
 24968                           
 24969                           ; BSR set to: 58
 24970                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24971  018094  6953               	setf	83,b	;volatile
 24972                           
 24973                           ; BSR set to: 58
 24974                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24975  018096  6963               	setf	99,b	;volatile
 24976                           
 24977                           ; BSR set to: 58
 24978                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24979  018098  6973               	setf	115,b	;volatile
 24980                           
 24981                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24982  01809A  0E07               	movlw	7
 24983  01809C  6F83               	movwf	131,b	;volatile
 24984                           
 24985                           ; BSR set to: 58
 24986                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24987  01809E  6993               	setf	147,b	;volatile
 24988                           
 24989                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24990  0180A0  0E0F               	movlw	15
 24991  0180A2  6FE8               	movwf	232,b	;volatile
 24992                           
 24993                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24994  0180A4  0E13               	movlw	19
 24995  0180A6  6FDE               	movwf	222,b	;volatile
 24996                           
 24997                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24998  0180A8  0E16               	movlw	22
 24999  0180AA  6F0E               	movwf	14,b	;volatile
 25000                           
 25001                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 25002  0180AC  0E1E               	movlw	30
 25003  0180AE  6F13               	movwf	19,b	;volatile
 25004                           
 25005                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 25006  0180B0  0E08               	movlw	8
 25007  0180B2  6FC0               	movwf	192,b	;volatile
 25008                           
 25009                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 25010  0180B4  0E10               	movlw	16
 25011  0180B6  6F19               	movwf	25,b	;volatile
 25012                           
 25013                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 25014  0180B8  0E09               	movlw	9
 25015  0180BA  6FC1               	movwf	193,b	;volatile
 25016                           
 25017                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 25018  0180BC  0E1F               	movlw	31
 25019  0180BE  6F15               	movwf	21,b	;volatile
 25020                           
 25021                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 25022  0180C0  0E13               	movlw	19
 25023  0180C2  6F16               	movwf	22,b	;volatile
 25024                           
 25025                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 25026  0180C4  0E17               	movlw	23
 25027  0180C6  6FE5               	movwf	229,b	;volatile
 25028                           
 25029                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 25030  0180C8  0E14               	movlw	20
 25031  0180CA  6FDF               	movwf	223,b	;volatile
 25032                           
 25033                           ; BSR set to: 58
 25034                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 25035  0180CC  0012               	return		;funcret
 25036  0180CE                     __end_of_PIN_MANAGER_Initialize:
 25037                           	opt callstack 0
 25038                           
 25039 ;; *************** function _OSCILLATOR_Initialize *****************
 25040 ;; Defined at:
 25041 ;;		line 72 in file "mcc_generated_files/mcc.c"
 25042 ;; Parameters:    Size  Location     Type
 25043 ;;		None
 25044 ;; Auto vars:     Size  Location     Type
 25045 ;;		None
 25046 ;; Return value:  Size  Location     Type
 25047 ;;                  1  [STACK] void 
 25048 ;; Registers used:
 25049 ;;		wreg, status,2
 25050 ;; Tracked objects:
 25051 ;;		On entry : 3F/3A
 25052 ;;		On exit  : 3F/39
 25053 ;;		Unchanged: 0/0
 25054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25059 ;;Total ram usage:        0 bytes
 25060 ;; Hardware stack levels used:    1
 25061 ;; Hardware stack levels required when called:    7
 25062 ;; This function calls:
 25063 ;;		Nothing
 25064 ;; This function is called by:
 25065 ;;		_SYSTEM_Initialize
 25066 ;; This function uses a reentrant model
 25067 ;;
 25068                           
 25069                           	psect	text113
 25070  01950E                     __ptext113:
 25071                           	opt callstack 0
 25072  01950E                     _OSCILLATOR_Initialize:
 25073                           	opt callstack 22
 25074                           
 25075                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 25076                           
 25077                           ; BSR set to: 58
 25078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25079                           ;incstack = 0
 25080  01950E  0E20               	movlw	32
 25081  019510  0139               	movlb	57	; () banked
 25082  019512  6FD9               	movwf	217,b	;volatile
 25083                           
 25084                           ; BSR set to: 57
 25085                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 25086  019514  6BDB               	clrf	219,b	;volatile
 25087                           
 25088                           ; BSR set to: 57
 25089                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 25090  019516  6BDD               	clrf	221,b	;volatile
 25091                           
 25092                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 25093  019518  0E02               	movlw	2
 25094  01951A  6FDF               	movwf	223,b	;volatile
 25095                           
 25096                           ; BSR set to: 57
 25097                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 25098  01951C  6BDE               	clrf	222,b	;volatile
 25099  01951E                     l173:
 25100                           
 25101                           ; BSR set to: 57
 25102                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 25103  01951E  B1DC               	btfsc	220,0,b	;volatile
 25104  019520  0012               	return	
 25105  019522  D7FD               	goto	l173
 25106  019524                     __end_of_OSCILLATOR_Initialize:
 25107                           	opt callstack 0
 25108                           
 25109 ;; *************** function _INTERRUPT_Initialize *****************
 25110 ;; Defined at:
 25111 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25112 ;; Parameters:    Size  Location     Type
 25113 ;;		None
 25114 ;; Auto vars:     Size  Location     Type
 25115 ;;  state           1  [STACK] _Bool 
 25116 ;; Return value:  Size  Location     Type
 25117 ;;                  1  [STACK] void 
 25118 ;; Registers used:
 25119 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 25120 ;; Tracked objects:
 25121 ;;		On entry : 0/0
 25122 ;;		On exit  : 3F/39
 25123 ;;		Unchanged: 0/0
 25124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25129 ;;Total ram usage:        0 bytes
 25130 ;; Hardware stack levels used:    1
 25131 ;; Hardware stack levels required when called:    7
 25132 ;; This function calls:
 25133 ;;		Nothing
 25134 ;; This function is called by:
 25135 ;;		_SYSTEM_Initialize
 25136 ;; This function uses a reentrant model
 25137 ;;
 25138                           
 25139                           	psect	text114
 25140  0184AA                     __ptext114:
 25141                           	opt callstack 0
 25142  0184AA                     _INTERRUPT_Initialize:
 25143                           	opt callstack 0
 25144                           
 25145                           ; BSR set to: 57
 25146                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25147  0184AA  52E6               	movf	postinc1,f,c
 25148                           
 25149                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 25150                           
 25151                           ;incstack = 0
 25152  0184AC  8AD2               	bsf	210,5,c	;volatile
 25153                           
 25154                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 25155  0184AE  AED2               	btfss	16338,7,c	;volatile
 25156  0184B0  D003               	goto	u8170
 25157  0184B2  6A30               	clrf	(btemp+11)^0,c
 25158  0184B4  2A30               	incf	(btemp+11)^0,f,c
 25159  0184B6  D001               	goto	u8188
 25160  0184B8                     u8170:
 25161  0184B8  6A30               	clrf	(btemp+11)^0,c
 25162  0184BA                     u8188:
 25163                           
 25164                           ;stkvar	_state @ sp[(-1)+0]
 25165  0184BA  0EFF               	movlw	-1
 25166  0184BC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 25167                           
 25168                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 25169  0184C2  9ED2               	bcf	16338,7,c	;volatile
 25170                           
 25171                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 25172  0184C4  0E55               	movlw	85
 25173  0184C6  6ED4               	movwf	212,c	;volatile
 25174                           
 25175                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 25176  0184C8  0EAA               	movlw	170
 25177  0184CA  6ED4               	movwf	212,c	;volatile
 25178                           
 25179                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 25180  0184CC  90D4               	bcf	212,0,c	;volatile
 25181                           
 25182                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 25183  0184CE  0138               	movlb	56	; () banked
 25184  0184D0  6B9F               	clrf	159,b	;volatile
 25185                           
 25186                           ; BSR set to: 56
 25187                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 25188  0184D2  6B9E               	clrf	158,b	;volatile
 25189                           
 25190                           ; BSR set to: 56
 25191                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 25192  0184D4  0E08               	movlw	8
 25193  0184D6  6F9D               	movwf	157,b	;volatile
 25194                           
 25195                           ; BSR set to: 56
 25196                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 25197  0184D8  0E55               	movlw	85
 25198  0184DA  6ED4               	movwf	212,c	;volatile
 25199                           
 25200                           ; BSR set to: 56
 25201                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 25202  0184DC  0EAA               	movlw	170
 25203  0184DE  6ED4               	movwf	212,c	;volatile
 25204                           
 25205                           ; BSR set to: 56
 25206                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 25207  0184E0  80D4               	bsf	212,0,c	;volatile
 25208                           
 25209                           ; BSR set to: 56
 25210                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 25211                           ;stkvar	_state @ sp[(-1)+0]
 25212  0184E2  0EFF               	movlw	-1
 25213  0184E4  B0E3               	btfsc	plusw1,0,c
 25214  0184E6  D002               	bra	u8195
 25215  0184E8  9ED2               	bcf	16338,7,c	;volatile
 25216  0184EA  D001               	bra	u8196
 25217  0184EC                     u8195:
 25218  0184EC  8ED2               	bsf	16338,7,c	;volatile
 25219  0184EE                     u8196:
 25220                           
 25221                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 25222  0184EE  0139               	movlb	57	; () banked
 25223  0184F0  8782               	bsf	130,3,b	;volatile
 25224                           
 25225                           ; BSR set to: 57
 25226                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 25227  0184F2  8382               	bsf	130,1,b	;volatile
 25228                           
 25229                           ; BSR set to: 57
 25230                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 25231  0184F4  8182               	bsf	130,0,b	;volatile
 25232                           
 25233                           ; BSR set to: 57
 25234                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 25235  0184F6  8582               	bsf	130,2,b	;volatile
 25236                           
 25237                           ; BSR set to: 57
 25238                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 25239  0184F8  8786               	bsf	134,3,b	;volatile
 25240                           
 25241                           ; BSR set to: 57
 25242                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 25243  0184FA  8586               	bsf	134,2,b	;volatile
 25244                           
 25245                           ; BSR set to: 57
 25246                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 25247  0184FC  8983               	bsf	131,4,b	;volatile
 25248                           
 25249                           ; BSR set to: 57
 25250                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 25251  0184FE  8783               	bsf	131,3,b	;volatile
 25252                           
 25253                           ; BSR set to: 57
 25254                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 25255  018500  8181               	bsf	129,0,b	;volatile
 25256                           
 25257                           ; BSR set to: 57
 25258                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 25259  018502  9185               	bcf	133,0,b	;volatile
 25260                           
 25261                           ; BSR set to: 57
 25262                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 25263  018504  8189               	bsf	137,0,b	;volatile
 25264                           
 25265                           ; BSR set to: 57
 25266                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 25267  018506  9D88               	bcf	136,6,b	;volatile
 25268                           
 25269                           ; BSR set to: 57
 25270                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 25271  018508  8581               	bsf	129,2,b	;volatile
 25272                           
 25273                           ; BSR set to: 57
 25274                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 25275  01850A  8781               	bsf	129,3,b	;volatile
 25276                           
 25277                           ; BSR set to: 57
 25278                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR6bits.TMR3IP = 0;
 25279  01850C  9D86               	bcf	134,6,b	;volatile
 25280                           
 25281                           ; BSR set to: 57
 25282                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 25283  01850E  52E5               	movf	postdec1,f,c
 25284  018510  0012               	return		;funcret
 25285  018512                     __end_of_INTERRUPT_Initialize:
 25286                           	opt callstack 0
 25287                           
 25288 ;; *************** function _FVR_Initialize *****************
 25289 ;; Defined at:
 25290 ;;		line 58 in file "mcc_generated_files/fvr.c"
 25291 ;; Parameters:    Size  Location     Type
 25292 ;;		None
 25293 ;; Auto vars:     Size  Location     Type
 25294 ;;		None
 25295 ;; Return value:  Size  Location     Type
 25296 ;;                  1  [STACK] void 
 25297 ;; Registers used:
 25298 ;;		wreg, status,2
 25299 ;; Tracked objects:
 25300 ;;		On entry : 3F/39
 25301 ;;		On exit  : 3F/3E
 25302 ;;		Unchanged: 0/0
 25303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25308 ;;Total ram usage:        0 bytes
 25309 ;; Hardware stack levels used:    1
 25310 ;; Hardware stack levels required when called:    7
 25311 ;; This function calls:
 25312 ;;		Nothing
 25313 ;; This function is called by:
 25314 ;;		_SYSTEM_Initialize
 25315 ;; This function uses a reentrant model
 25316 ;;
 25317                           
 25318                           	psect	text115
 25319  0195F2                     __ptext115:
 25320                           	opt callstack 0
 25321  0195F2                     _FVR_Initialize:
 25322                           	opt callstack 22
 25323                           
 25324                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 25325                           
 25326                           ; BSR set to: 57
 25327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25328                           ;incstack = 0
 25329  0195F2  0EAF               	movlw	175
 25330  0195F4  013E               	movlb	62	; () banked
 25331  0195F6  6FC1               	movwf	193,b	;volatile
 25332                           
 25333                           ; BSR set to: 62
 25334                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25335  0195F8  0012               	return		;funcret
 25336  0195FA                     __end_of_FVR_Initialize:
 25337                           	opt callstack 0
 25338                           
 25339 ;; *************** function _EXT_INT_Initialize *****************
 25340 ;; Defined at:
 25341 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 25342 ;; Parameters:    Size  Location     Type
 25343 ;;		None
 25344 ;; Auto vars:     Size  Location     Type
 25345 ;;		None
 25346 ;; Return value:  Size  Location     Type
 25347 ;;                  1  [STACK] void 
 25348 ;; Registers used:
 25349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25350 ;; Tracked objects:
 25351 ;;		On entry : 3F/39
 25352 ;;		On exit  : 3F/39
 25353 ;;		Unchanged: 0/0
 25354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25359 ;;Total ram usage:        0 bytes
 25360 ;; Hardware stack levels used:    1
 25361 ;; Hardware stack levels required when called:    8
 25362 ;; This function calls:
 25363 ;;		_INT0_SetInterruptHandler
 25364 ;;		_INT1_SetInterruptHandler
 25365 ;; This function is called by:
 25366 ;;		_SYSTEM_Initialize
 25367 ;; This function uses a reentrant model
 25368 ;;
 25369                           
 25370                           	psect	text116
 25371  018DAC                     __ptext116:
 25372                           	opt callstack 0
 25373  018DAC                     _EXT_INT_Initialize:
 25374                           	opt callstack 21
 25375                           
 25376                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 25377                           
 25378                           ; BSR set to: 62
 25379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25380                           ;incstack = 0
 25381  018DAC  0139               	movlb	57	; () banked
 25382  018DAE  91A1               	bcf	161,0,b	;volatile
 25383                           
 25384                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 25385  018DB0  90D2               	bcf	210,0,c	;volatile
 25386                           
 25387                           ; BSR set to: 57
 25388                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 25389  018DB2  0E1E               	movlw	low _INT0_DefaultInterruptHandler
 25390  018DB4  6EE6               	movwf	postinc1,c
 25391  018DB6  0E96               	movlw	high _INT0_DefaultInterruptHandler
 25392  018DB8  6EE6               	movwf	postinc1,c
 25393  018DBA  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 25394  018DBC  6EE6               	movwf	postinc1,c
 25395  018DBE  ECAB  F0C8         	call	_INT0_SetInterruptHandler	;wreg free
 25396                           
 25397                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 25398  018DC2  0139               	movlb	57	; () banked
 25399  018DC4  8191               	bsf	145,0,b	;volatile
 25400                           
 25401                           ; BSR set to: 57
 25402                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 25403  018DC6  91A5               	bcf	165,0,b	;volatile
 25404                           
 25405                           ; BSR set to: 57
 25406                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 25407  018DC8  92D2               	bcf	210,1,c	;volatile
 25408                           
 25409                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 25410  018DCA  0E1A               	movlw	low _INT1_DefaultInterruptHandler
 25411  018DCC  6EE6               	movwf	postinc1,c
 25412  018DCE  0E96               	movlw	high _INT1_DefaultInterruptHandler
 25413  018DD0  6EE6               	movwf	postinc1,c
 25414  018DD2  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 25415  018DD4  6EE6               	movwf	postinc1,c
 25416  018DD6  EC97  F0C8         	call	_INT1_SetInterruptHandler	;wreg free
 25417                           
 25418                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 25419  018DDA  0139               	movlb	57	; () banked
 25420  018DDC  8195               	bsf	149,0,b	;volatile
 25421                           
 25422                           ; BSR set to: 57
 25423                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25424  018DDE  0012               	return		;funcret
 25425  018DE0                     __end_of_EXT_INT_Initialize:
 25426                           	opt callstack 0
 25427                           
 25428 ;; *************** function _INT1_SetInterruptHandler *****************
 25429 ;; Defined at:
 25430 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 25431 ;; Parameters:    Size  Location     Type
 25432 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25433 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 25434 ;; Auto vars:     Size  Location     Type
 25435 ;;		None
 25436 ;; Return value:  Size  Location     Type
 25437 ;;                  1  [STACK] void 
 25438 ;; Registers used:
 25439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25440 ;; Tracked objects:
 25441 ;;		On entry : 3F/39
 25442 ;;		On exit  : 0/0
 25443 ;;		Unchanged: 0/0
 25444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25449 ;;Total ram usage:        0 bytes
 25450 ;; Hardware stack levels used:    1
 25451 ;; Hardware stack levels required when called:    7
 25452 ;; This function calls:
 25453 ;;		Nothing
 25454 ;; This function is called by:
 25455 ;;		_EXT_INT_Initialize
 25456 ;;		_start_switch_handler
 25457 ;; This function uses a reentrant model
 25458 ;;
 25459                           
 25460                           	psect	text117
 25461  01912E                     __ptext117:
 25462                           	opt callstack 0
 25463  01912E                     _INT1_SetInterruptHandler:
 25464                           	opt callstack 22
 25465                           
 25466                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 25467                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25468                           
 25469                           ; BSR set to: 57
 25470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25471                           ;incstack = 0
 25472  01912E  50E1               	movf	fsr1l,w,c
 25473  019130  0FFD               	addlw	-3
 25474  019132  6ED9               	movwf	fsr2l,c
 25475  019134  50E2               	movf	fsr1h,w,c
 25476  019136  6EDA               	movwf	fsr2h,c
 25477  019138  0EFF               	movlw	255
 25478  01913A  22DA               	addwfc	fsr2h,f,c
 25479  01913C  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 25480  019142  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 25481  019148  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 25482                           
 25483                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25484  01914E  52E5               	movf	postdec1,f,c
 25485  019150  52E5               	movf	postdec1,f,c
 25486  019152  52E5               	movf	postdec1,f,c
 25487  019154  0012               	return		;funcret
 25488  019156                     __end_of_INT1_SetInterruptHandler:
 25489                           	opt callstack 0
 25490                           
 25491 ;; *************** function _INT0_SetInterruptHandler *****************
 25492 ;; Defined at:
 25493 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25494 ;; Parameters:    Size  Location     Type
 25495 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25496 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25497 ;; Auto vars:     Size  Location     Type
 25498 ;;		None
 25499 ;; Return value:  Size  Location     Type
 25500 ;;                  1  [STACK] void 
 25501 ;; Registers used:
 25502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25503 ;; Tracked objects:
 25504 ;;		On entry : 3F/39
 25505 ;;		On exit  : 0/0
 25506 ;;		Unchanged: 0/0
 25507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25512 ;;Total ram usage:        0 bytes
 25513 ;; Hardware stack levels used:    1
 25514 ;; Hardware stack levels required when called:    7
 25515 ;; This function calls:
 25516 ;;		Nothing
 25517 ;; This function is called by:
 25518 ;;		_EXT_INT_Initialize
 25519 ;; This function uses a reentrant model
 25520 ;;
 25521                           
 25522                           	psect	text118
 25523  019156                     __ptext118:
 25524                           	opt callstack 0
 25525  019156                     _INT0_SetInterruptHandler:
 25526                           	opt callstack 21
 25527                           
 25528                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25529                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25530                           
 25531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25532                           ;incstack = 0
 25533  019156  50E1               	movf	fsr1l,w,c
 25534  019158  0FFD               	addlw	-3
 25535  01915A  6ED9               	movwf	fsr2l,c
 25536  01915C  50E2               	movf	fsr1h,w,c
 25537  01915E  6EDA               	movwf	fsr2h,c
 25538  019160  0EFF               	movlw	255
 25539  019162  22DA               	addwfc	fsr2h,f,c
 25540  019164  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 25541  01916A  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 25542  019170  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 25543                           
 25544                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25545  019176  52E5               	movf	postdec1,f,c
 25546  019178  52E5               	movf	postdec1,f,c
 25547  01917A  52E5               	movf	postdec1,f,c
 25548  01917C  0012               	return		;funcret
 25549  01917E                     __end_of_INT0_SetInterruptHandler:
 25550                           	opt callstack 0
 25551                           
 25552 ;; *************** function _DMA2_Initialize *****************
 25553 ;; Defined at:
 25554 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25555 ;; Parameters:    Size  Location     Type
 25556 ;;		None
 25557 ;; Auto vars:     Size  Location     Type
 25558 ;;		None
 25559 ;; Return value:  Size  Location     Type
 25560 ;;                  1  [STACK] void 
 25561 ;; Registers used:
 25562 ;;		wreg, status,2
 25563 ;; Tracked objects:
 25564 ;;		On entry : 3F/3D
 25565 ;;		On exit  : 3F/3B
 25566 ;;		Unchanged: 0/0
 25567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25572 ;;Total ram usage:        0 bytes
 25573 ;; Hardware stack levels used:    1
 25574 ;; Hardware stack levels required when called:    7
 25575 ;; This function calls:
 25576 ;;		Nothing
 25577 ;; This function is called by:
 25578 ;;		_SYSTEM_Initialize
 25579 ;; This function uses a reentrant model
 25580 ;;
 25581                           
 25582                           	psect	text119
 25583  018756                     __ptext119:
 25584                           	opt callstack 0
 25585  018756                     _DMA2_Initialize:
 25586                           	opt callstack 22
 25587                           
 25588                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25589                           
 25590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25591                           ;incstack = 0
 25592  018756  0E00               	movlw	0
 25593  018758  013B               	movlb	59	; () banked
 25594  01875A  6FD9               	movwf	217,b	;volatile
 25595  01875C  0E10               	movlw	16
 25596  01875E  6FDA               	movwf	218,b	;volatile
 25597  018760  0E00               	movlw	0
 25598  018762  6FDB               	movwf	219,b	;volatile
 25599                           
 25600                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25601  018764  0E3F               	movlw	63
 25602  018766  6FD1               	movwf	209,b	;volatile
 25603  018768  0EBB               	movlw	187
 25604  01876A  6FD0               	movwf	208,b	;volatile
 25605                           
 25606                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25607  01876C  0E03               	movlw	3
 25608  01876E  6FDD               	movwf	221,b	;volatile
 25609                           
 25610                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25611  018770  0E00               	movlw	0
 25612  018772  6FD8               	movwf	216,b	;volatile
 25613  018774  0E01               	movlw	1
 25614  018776  6FD7               	movwf	215,b	;volatile
 25615                           
 25616                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25617  018778  0E00               	movlw	0
 25618  01877A  6FCF               	movwf	207,b	;volatile
 25619  01877C  0E01               	movlw	1
 25620  01877E  6FCE               	movwf	206,b	;volatile
 25621                           
 25622                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25623  018780  0E46               	movlw	70
 25624  018782  6FDF               	movwf	223,b	;volatile
 25625                           
 25626                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25627  018784  0E3D               	movlw	61
 25628  018786  6FDE               	movwf	222,b	;volatile
 25629                           
 25630                           ; BSR set to: 59
 25631                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25632  018788  0139               	movlb	57	; () banked
 25633  01878A  97A5               	bcf	165,3,b	;volatile
 25634                           
 25635                           ; BSR set to: 57
 25636                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25637  01878C  95A5               	bcf	165,2,b	;volatile
 25638                           
 25639                           ; BSR set to: 57
 25640                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25641  01878E  9BA5               	bcf	165,5,b	;volatile
 25642                           
 25643                           ; BSR set to: 57
 25644                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25645  018790  99A5               	bcf	165,4,b	;volatile
 25646                           
 25647                           ; BSR set to: 57
 25648                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 25649  018792  9795               	bcf	149,3,b	;volatile
 25650                           
 25651                           ; BSR set to: 57
 25652                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 25653  018794  9595               	bcf	149,2,b	;volatile
 25654                           
 25655                           ; BSR set to: 57
 25656                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 25657  018796  9B95               	bcf	149,5,b	;volatile
 25658                           
 25659                           ; BSR set to: 57
 25660                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25661  018798  9995               	bcf	149,4,b	;volatile
 25662  01879A  9ED2               	bcf	16338,7,c	;# 
 25663  01879C  0139               	banksel	14831	;# 
 25664  01879E  0E55               	movlw	85	;# 
 25665  0187A0  6FEF               	movwf	14831,b	;# 
 25666  0187A2  0EAA               	movlw	170	;# 
 25667  0187A4  6FEF               	movwf	14831,b	;# 
 25668  0187A6  81EF               	bsf	14831,0,b	;# 
 25669  0187A8  8ED2               	bsf	16338,7,c	;# 
 25670                           
 25671                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25672  0187AA  013B               	movlb	59	; () banked
 25673  0187AC  6BDC               	clrf	220,b	;volatile
 25674                           
 25675                           ; BSR set to: 59
 25676                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25677  0187AE  0012               	return		;funcret
 25678  0187B0                     __end_of_DMA2_Initialize:
 25679                           	opt callstack 0
 25680                           
 25681 ;; *************** function _DMA1_Initialize *****************
 25682 ;; Defined at:
 25683 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25684 ;; Parameters:    Size  Location     Type
 25685 ;;		None
 25686 ;; Auto vars:     Size  Location     Type
 25687 ;;		None
 25688 ;; Return value:  Size  Location     Type
 25689 ;;                  1  [STACK] void 
 25690 ;; Registers used:
 25691 ;;		wreg, status,2
 25692 ;; Tracked objects:
 25693 ;;		On entry : 3F/3B
 25694 ;;		On exit  : 3F/3B
 25695 ;;		Unchanged: 0/0
 25696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;Total ram usage:        0 bytes
 25702 ;; Hardware stack levels used:    1
 25703 ;; Hardware stack levels required when called:    7
 25704 ;; This function calls:
 25705 ;;		Nothing
 25706 ;; This function is called by:
 25707 ;;		_SYSTEM_Initialize
 25708 ;; This function uses a reentrant model
 25709 ;;
 25710                           
 25711                           	psect	text120
 25712  01836C                     __ptext120:
 25713                           	opt callstack 0
 25714  01836C                     _DMA1_Initialize:
 25715                           	opt callstack 22
 25716                           
 25717                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25718                           
 25719                           ; BSR set to: 59
 25720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25721                           ;incstack = 0
 25722  01836C  0E00               	movlw	0
 25723  01836E  013B               	movlb	59	; () banked
 25724  018370  6FF9               	movwf	249,b	;volatile
 25725  018372  0E10               	movlw	16
 25726  018374  6FFA               	movwf	250,b	;volatile
 25727  018376  0E00               	movlw	0
 25728  018378  6FFB               	movwf	251,b	;volatile
 25729                           
 25730                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25731  01837A  0E3D               	movlw	61
 25732  01837C  6FF1               	movwf	241,b	;volatile
 25733  01837E  0E11               	movlw	17
 25734  018380  6FF0               	movwf	240,b	;volatile
 25735                           
 25736                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25737  018382  0E03               	movlw	3
 25738  018384  6FFD               	movwf	253,b	;volatile
 25739                           
 25740                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25741  018386  0E00               	movlw	0
 25742  018388  6FF8               	movwf	248,b	;volatile
 25743  01838A  0E01               	movlw	1
 25744  01838C  6FF7               	movwf	247,b	;volatile
 25745                           
 25746                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25747  01838E  0E00               	movlw	0
 25748  018390  6FEF               	movwf	239,b	;volatile
 25749  018392  0E01               	movlw	1
 25750  018394  6FEE               	movwf	238,b	;volatile
 25751                           
 25752                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25753  018396  0E15               	movlw	21
 25754  018398  6FFF               	movwf	255,b	;volatile
 25755                           
 25756                           ; BSR set to: 59
 25757                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25758  01839A  6BFE               	clrf	254,b	;volatile
 25759                           
 25760                           ; BSR set to: 59
 25761                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25762  01839C  0139               	movlb	57	; () banked
 25763  01839E  93A2               	bcf	162,1,b	;volatile
 25764                           
 25765                           ; BSR set to: 57
 25766                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25767  0183A0  91A2               	bcf	162,0,b	;volatile
 25768                           
 25769                           ; BSR set to: 57
 25770                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25771  0183A2  97A2               	bcf	162,3,b	;volatile
 25772                           
 25773                           ; BSR set to: 57
 25774                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25775  0183A4  95A2               	bcf	162,2,b	;volatile
 25776                           
 25777                           ; BSR set to: 57
 25778                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25779  0183A6  8392               	bsf	146,1,b	;volatile
 25780                           
 25781                           ; BSR set to: 57
 25782                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25783  0183A8  8192               	bsf	146,0,b	;volatile
 25784                           
 25785                           ; BSR set to: 57
 25786                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25787  0183AA  8792               	bsf	146,3,b	;volatile
 25788                           
 25789                           ; BSR set to: 57
 25790                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25791  0183AC  8592               	bsf	146,2,b	;volatile
 25792                           
 25793                           ; BSR set to: 57
 25794                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25795  0183AE  6BF1               	clrf	241,b	;volatile
 25796                           
 25797                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25798  0183B0  0E01               	movlw	1
 25799  0183B2  6FF2               	movwf	242,b	;volatile
 25800                           
 25801                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25802  0183B4  0E04               	movlw	4
 25803  0183B6  6FF3               	movwf	243,b	;volatile
 25804                           
 25805                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25806  0183B8  0E02               	movlw	2
 25807  0183BA  6FF4               	movwf	244,b	;volatile
 25808                           
 25809                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25810  0183BC  0E03               	movlw	3
 25811  0183BE  6FF7               	movwf	247,b	;volatile
 25812  0183C0  9ED2               	bcf	16338,7,c	;# 
 25813  0183C2  0139               	banksel	14831	;# 
 25814  0183C4  0E55               	movlw	85	;# 
 25815  0183C6  6FEF               	movwf	14831,b	;# 
 25816  0183C8  0EAA               	movlw	170	;# 
 25817  0183CA  6FEF               	movwf	14831,b	;# 
 25818  0183CC  81EF               	bsf	14831,0,b	;# 
 25819  0183CE  8ED2               	bsf	16338,7,c	;# 
 25820                           
 25821                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25822  0183D0  013B               	movlb	59	; () banked
 25823  0183D2  6BFC               	clrf	252,b	;volatile
 25824                           
 25825                           ; BSR set to: 59
 25826                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25827  0183D4  0012               	return		;funcret
 25828  0183D6                     __end_of_DMA1_Initialize:
 25829                           	opt callstack 0
 25830                           
 25831 ;; *************** function _CLKREF_Initialize *****************
 25832 ;; Defined at:
 25833 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25834 ;; Parameters:    Size  Location     Type
 25835 ;;		None
 25836 ;; Auto vars:     Size  Location     Type
 25837 ;;		None
 25838 ;; Return value:  Size  Location     Type
 25839 ;;                  1  [STACK] void 
 25840 ;; Registers used:
 25841 ;;		wreg, status,2
 25842 ;; Tracked objects:
 25843 ;;		On entry : 3F/3B
 25844 ;;		On exit  : 3F/3C
 25845 ;;		Unchanged: 0/0
 25846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25851 ;;Total ram usage:        0 bytes
 25852 ;; Hardware stack levels used:    1
 25853 ;; Hardware stack levels required when called:    7
 25854 ;; This function calls:
 25855 ;;		Nothing
 25856 ;; This function is called by:
 25857 ;;		_SYSTEM_Initialize
 25858 ;; This function uses a reentrant model
 25859 ;;
 25860                           
 25861                           	psect	text121
 25862  0195A6                     __ptext121:
 25863                           	opt callstack 0
 25864  0195A6                     _CLKREF_Initialize:
 25865                           	opt callstack 22
 25866                           
 25867                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25868                           
 25869                           ; BSR set to: 59
 25870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25871                           ;incstack = 0
 25872  0195A6  013C               	movlb	60	; () banked
 25873  0195A8  6BE6               	clrf	230,b	;volatile
 25874                           
 25875                           ; BSR set to: 60
 25876                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25877  0195AA  0E94               	movlw	148
 25878  0195AC  6FE5               	movwf	229,b	;volatile
 25879                           
 25880                           ; BSR set to: 60
 25881                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25882  0195AE  0012               	return		;funcret
 25883  0195B0                     __end_of_CLKREF_Initialize:
 25884                           	opt callstack 0
 25885                           
 25886 ;; *************** function _ADCC_Initialize *****************
 25887 ;; Defined at:
 25888 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25889 ;; Parameters:    Size  Location     Type
 25890 ;;		None
 25891 ;; Auto vars:     Size  Location     Type
 25892 ;;		None
 25893 ;; Return value:  Size  Location     Type
 25894 ;;                  1  [STACK] void 
 25895 ;; Registers used:
 25896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25897 ;; Tracked objects:
 25898 ;;		On entry : 3F/3E
 25899 ;;		On exit  : 0/0
 25900 ;;		Unchanged: 0/0
 25901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25906 ;;Total ram usage:        0 bytes
 25907 ;; Hardware stack levels used:    1
 25908 ;; Hardware stack levels required when called:    8
 25909 ;; This function calls:
 25910 ;;		_ADCC_SetADIInterruptHandler
 25911 ;;		_ADCC_SetADTIInterruptHandler
 25912 ;; This function is called by:
 25913 ;;		_SYSTEM_Initialize
 25914 ;; This function uses a reentrant model
 25915 ;;
 25916                           
 25917                           	psect	text122
 25918  0183D6                     __ptext122:
 25919                           	opt callstack 0
 25920  0183D6                     _ADCC_Initialize:
 25921                           	opt callstack 21
 25922                           
 25923                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25924                           
 25925                           ; BSR set to: 60
 25926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25927                           ;incstack = 0
 25928  0183D6  013E               	movlb	62	; () banked
 25929  0183D8  6BDE               	clrf	222,b	;volatile
 25930                           
 25931                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25932  0183DA  6BDF               	clrf	223,b	;volatile
 25933                           
 25934                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25935  0183DC  6BE0               	clrf	224,b	;volatile
 25936                           
 25937                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25938  0183DE  6BE1               	clrf	225,b	;volatile
 25939                           
 25940                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25941  0183E0  6BE4               	clrf	228,b	;volatile
 25942                           
 25943                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25944  0183E2  6BE5               	clrf	229,b	;volatile
 25945                           
 25946                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25947  0183E4  6BEA               	clrf	234,b	;volatile
 25948                           
 25949                           ; BSR set to: 62
 25950                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25951  0183E6  0E40               	movlw	64
 25952  0183E8  6FEC               	movwf	236,b	;volatile
 25953                           
 25954                           ; BSR set to: 62
 25955                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25956  0183EA  6BF1               	clrf	241,b	;volatile
 25957                           
 25958                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25959  0183EC  0E20               	movlw	32
 25960  0183EE  6FF3               	movwf	243,b	;volatile
 25961                           
 25962                           ; BSR set to: 62
 25963                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25964  0183F0  6BF4               	clrf	244,b	;volatile
 25965                           
 25966                           ; BSR set to: 62
 25967                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25968  0183F2  6BF5               	clrf	245,b	;volatile
 25969                           
 25970                           ; BSR set to: 62
 25971                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25972  0183F4  6BF6               	clrf	246,b	;volatile
 25973                           
 25974                           ; BSR set to: 62
 25975                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25976  0183F6  6BF7               	clrf	247,b	;volatile
 25977                           
 25978                           ; BSR set to: 62
 25979                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25980  0183F8  6BF9               	clrf	249,b	;volatile
 25981                           
 25982                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25983  0183FA  0E5B               	movlw	91
 25984  0183FC  6FFA               	movwf	250,b	;volatile
 25985                           
 25986                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25987  0183FE  0E27               	movlw	39
 25988  018400  6FFB               	movwf	251,b	;volatile
 25989                           
 25990                           ; BSR set to: 62
 25991                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25992  018402  6BFC               	clrf	252,b	;volatile
 25993                           
 25994                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25995  018404  0E02               	movlw	2
 25996  018406  6FFD               	movwf	253,b	;volatile
 25997                           
 25998                           ; BSR set to: 62
 25999                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 26000  018408  6BFE               	clrf	254,b	;volatile
 26001                           
 26002                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 26003  01840A  0E07               	movlw	7
 26004  01840C  6FFF               	movwf	255,b	;volatile
 26005                           
 26006                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 26007  01840E  0E84               	movlw	132
 26008  018410  6FF8               	movwf	248,b	;volatile
 26009                           
 26010                           ; BSR set to: 62
 26011                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 26012  018412  0139               	movlb	57	; () banked
 26013  018414  95A1               	bcf	161,2,b	;volatile
 26014                           
 26015                           ; BSR set to: 57
 26016                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 26017  018416  8591               	bsf	145,2,b	;volatile
 26018                           
 26019                           ; BSR set to: 57
 26020                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 26021  018418  0E20               	movlw	low _ADCC_DefaultInterruptHandler
 26022  01841A  6EE6               	movwf	postinc1,c
 26023  01841C  0E96               	movlw	high _ADCC_DefaultInterruptHandler
 26024  01841E  6EE6               	movwf	postinc1,c
 26025  018420  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26026  018422  6EE6               	movwf	postinc1,c
 26027  018424  ECD3  F0C8         	call	_ADCC_SetADIInterruptHandler	;wreg free
 26028                           
 26029                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 26030  018428  0139               	movlb	57	; () banked
 26031  01842A  97A1               	bcf	161,3,b	;volatile
 26032                           
 26033                           ; BSR set to: 57
 26034                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 26035  01842C  8791               	bsf	145,3,b	;volatile
 26036                           
 26037                           ; BSR set to: 57
 26038                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 26039  01842E  0E20               	movlw	low _ADCC_DefaultInterruptHandler
 26040  018430  6EE6               	movwf	postinc1,c
 26041  018432  0E96               	movlw	high _ADCC_DefaultInterruptHandler
 26042  018434  6EE6               	movwf	postinc1,c
 26043  018436  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26044  018438  6EE6               	movwf	postinc1,c
 26045  01843A  ECBF  F0C8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 26046                           
 26047                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26048  01843E  0012               	return		;funcret
 26049  018440                     __end_of_ADCC_Initialize:
 26050                           	opt callstack 0
 26051                           
 26052 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 26053 ;; Defined at:
 26054 ;;		line 336 in file "mcc_generated_files/adcc.c"
 26055 ;; Parameters:    Size  Location     Type
 26056 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26057 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 26058 ;; Auto vars:     Size  Location     Type
 26059 ;;		None
 26060 ;; Return value:  Size  Location     Type
 26061 ;;                  1  [STACK] void 
 26062 ;; Registers used:
 26063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26064 ;; Tracked objects:
 26065 ;;		On entry : 0/0
 26066 ;;		On exit  : 0/0
 26067 ;;		Unchanged: 0/0
 26068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26073 ;;Total ram usage:        0 bytes
 26074 ;; Hardware stack levels used:    1
 26075 ;; Hardware stack levels required when called:    7
 26076 ;; This function calls:
 26077 ;;		Nothing
 26078 ;; This function is called by:
 26079 ;;		_ADCC_Initialize
 26080 ;;		_start_adc_scan
 26081 ;; This function uses a reentrant model
 26082 ;;
 26083                           
 26084                           	psect	text123
 26085  01917E                     __ptext123:
 26086                           	opt callstack 0
 26087  01917E                     _ADCC_SetADTIInterruptHandler:
 26088                           	opt callstack 22
 26089                           
 26090                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 26091                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26092                           
 26093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26094                           ;incstack = 0
 26095  01917E  50E1               	movf	fsr1l,w,c
 26096  019180  0FFD               	addlw	-3
 26097  019182  6ED9               	movwf	fsr2l,c
 26098  019184  50E2               	movf	fsr1h,w,c
 26099  019186  6EDA               	movwf	fsr2h,c
 26100  019188  0EFF               	movlw	255
 26101  01918A  22DA               	addwfc	fsr2h,f,c
 26102  01918C  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 26103  019192  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 26104  019198  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 26105                           
 26106                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 26107  01919E  52E5               	movf	postdec1,f,c
 26108  0191A0  52E5               	movf	postdec1,f,c
 26109  0191A2  52E5               	movf	postdec1,f,c
 26110  0191A4  0012               	return		;funcret
 26111  0191A6                     __end_of_ADCC_SetADTIInterruptHandler:
 26112                           	opt callstack 0
 26113                           
 26114 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 26115 ;; Defined at:
 26116 ;;		line 323 in file "mcc_generated_files/adcc.c"
 26117 ;; Parameters:    Size  Location     Type
 26118 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26119 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 26120 ;; Auto vars:     Size  Location     Type
 26121 ;;		None
 26122 ;; Return value:  Size  Location     Type
 26123 ;;                  1  [STACK] void 
 26124 ;; Registers used:
 26125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26126 ;; Tracked objects:
 26127 ;;		On entry : 6/0
 26128 ;;		On exit  : 0/0
 26129 ;;		Unchanged: 0/0
 26130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26135 ;;Total ram usage:        0 bytes
 26136 ;; Hardware stack levels used:    1
 26137 ;; Hardware stack levels required when called:    7
 26138 ;; This function calls:
 26139 ;;		Nothing
 26140 ;; This function is called by:
 26141 ;;		_ADCC_Initialize
 26142 ;;		_start_adc_scan
 26143 ;; This function uses a reentrant model
 26144 ;;
 26145                           
 26146                           	psect	text124
 26147  0191A6                     __ptext124:
 26148                           	opt callstack 0
 26149  0191A6                     _ADCC_SetADIInterruptHandler:
 26150                           	opt callstack 22
 26151                           
 26152                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 26153                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26154                           
 26155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26156                           ;incstack = 0
 26157  0191A6  50E1               	movf	fsr1l,w,c
 26158  0191A8  0FFD               	addlw	-3
 26159  0191AA  6ED9               	movwf	fsr2l,c
 26160  0191AC  50E2               	movf	fsr1h,w,c
 26161  0191AE  6EDA               	movwf	fsr2h,c
 26162  0191B0  0EFF               	movlw	255
 26163  0191B2  22DA               	addwfc	fsr2h,f,c
 26164  0191B4  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 26165  0191BA  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 26166  0191C0  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 26167                           
 26168                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26169  0191C6  52E5               	movf	postdec1,f,c
 26170  0191C8  52E5               	movf	postdec1,f,c
 26171  0191CA  52E5               	movf	postdec1,f,c
 26172  0191CC  0012               	return		;funcret
 26173  0191CE                     __end_of_ADCC_SetADIInterruptHandler:
 26174                           	opt callstack 0
 26175                           
 26176 ;; *************** function _INT1_ISR *****************
 26177 ;; Defined at:
 26178 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 26179 ;; Parameters:    Size  Location     Type
 26180 ;;		None
 26181 ;; Auto vars:     Size  Location     Type
 26182 ;;		None
 26183 ;; Return value:  Size  Location     Type
 26184 ;;                  1    wreg      void 
 26185 ;; Registers used:
 26186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26187 ;; Tracked objects:
 26188 ;;		On entry : 0/0
 26189 ;;		On exit  : 0/0
 26190 ;;		Unchanged: 0/0
 26191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26195 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26196 ;;Total ram usage:        4 bytes
 26197 ;; Hardware stack levels used:    1
 26198 ;; Hardware stack levels required when called:    5
 26199 ;; This function calls:
 26200 ;;		_INT1_CallBack
 26201 ;; This function is called by:
 26202 ;;		Interrupt level 1
 26203 ;; This function uses a non-reentrant model
 26204 ;;
 26205                           
 26206                           	psect	text125
 26207  018C2C                     __ptext125:
 26208                           	opt callstack 0
 26209  018C2C                     _INT1_ISR:
 26210                           	opt callstack 12
 26211                           
 26212                           ;incstack = 0
 26213  018C2C  006F FF60  F04B    	movff	status,??_INT1_ISR
 26214  018C32  0060  F094  F04C   	movff	btemp,??_INT1_ISR+1
 26215  018C38  0060  F0BC  F04D   	movff	btemp+10,??_INT1_ISR+2
 26216  018C3E  0060  F0C0  F04E   	movff	btemp+11,??_INT1_ISR+3
 26217  018C44  EE16  F00B         	lfsr	1,___intlo_sp
 26218                           
 26219                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 26220  018C48  0139               	movlb	57	; () banked
 26221  018C4A  91A5               	bcf	165,0,b	;volatile
 26222                           
 26223                           ; BSR set to: 57
 26224                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 26225  018C4C  ECA4  F0C9         	call	_INT1_CallBack	;wreg free
 26226  018C50  0060  F138  F030   	movff	??_INT1_ISR+3,btemp+11
 26227  018C56  0060  F134  F02F   	movff	??_INT1_ISR+2,btemp+10
 26228  018C5C  0060  F130  F025   	movff	??_INT1_ISR+1,btemp
 26229  018C62  0060  F12F  FFD8   	movff	??_INT1_ISR,status
 26230  018C68  0011               	retfie		f
 26231  018C6A                     __end_of_INT1_ISR:
 26232                           	opt callstack 0
 26233                           
 26234 ;; *************** function _INT1_CallBack *****************
 26235 ;; Defined at:
 26236 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 26237 ;; Parameters:    Size  Location     Type
 26238 ;;		None
 26239 ;; Auto vars:     Size  Location     Type
 26240 ;;		None
 26241 ;; Return value:  Size  Location     Type
 26242 ;;                  1  [STACK] void 
 26243 ;; Registers used:
 26244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26245 ;; Tracked objects:
 26246 ;;		On entry : 3F/39
 26247 ;;		On exit  : 0/0
 26248 ;;		Unchanged: 0/0
 26249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;Total ram usage:        0 bytes
 26255 ;; Hardware stack levels used:    1
 26256 ;; Hardware stack levels required when called:    4
 26257 ;; This function calls:
 26258 ;;		Absolute function
 26259 ;;		_INT1_DefaultInterruptHandler
 26260 ;;		_switch_handler
 26261 ;; This function is called by:
 26262 ;;		_INT1_ISR
 26263 ;; This function uses a reentrant model
 26264 ;;
 26265                           
 26266                           	psect	text126
 26267  019348                     __ptext126:
 26268                           	opt callstack 0
 26269  019348                     _INT1_CallBack:
 26270                           	opt callstack 12
 26271                           
 26272                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 26273                           
 26274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26275                           ;incstack = 0
 26276  019348  5004               	movf	_INT1_InterruptHandler^0,w,c
 26277  01934A  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 26278  01934C  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 26279  01934E  B4D8               	btfsc	status,2,c
 26280  019350  0012               	return	
 26281                           
 26282                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 26283  019352  D801               	call	u867_28
 26284  019354  0012               	return	
 26285  019356                     u867_28:
 26286  019356  0005               	push	
 26287  019358  6EFA               	movwf	pclath,c
 26288  01935A  5004               	movf	_INT1_InterruptHandler^0,w,c
 26289  01935C  6EFD               	movwf	tosl,c
 26290  01935E  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 26291  019360  6EFE               	movwf	tosh,c
 26292  019362  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 26293  019364  6EFF               	movwf	tosu,c
 26294  019366  50FA               	movf	pclath,w,c
 26295  019368  0012               	return		;indir
 26296  01936A                     __end_of_INT1_CallBack:
 26297                           	opt callstack 0
 26298                           
 26299 ;; *************** function _INT1_DefaultInterruptHandler *****************
 26300 ;; Defined at:
 26301 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 26302 ;; Parameters:    Size  Location     Type
 26303 ;;		None
 26304 ;; Auto vars:     Size  Location     Type
 26305 ;;		None
 26306 ;; Return value:  Size  Location     Type
 26307 ;;                  1  [STACK] void 
 26308 ;; Registers used:
 26309 ;;		None
 26310 ;; Tracked objects:
 26311 ;;		On entry : 0/39
 26312 ;;		On exit  : 0/0
 26313 ;;		Unchanged: 0/0
 26314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26319 ;;Total ram usage:        0 bytes
 26320 ;; Hardware stack levels used:    1
 26321 ;; Hardware stack levels required when called:    3
 26322 ;; This function calls:
 26323 ;;		Nothing
 26324 ;; This function is called by:
 26325 ;;		_EXT_INT_Initialize
 26326 ;;		_INT1_CallBack
 26327 ;; This function uses a reentrant model
 26328 ;;
 26329                           
 26330                           	psect	text127
 26331  01961A                     __ptext127:
 26332                           	opt callstack 0
 26333  01961A                     _INT1_DefaultInterruptHandler:
 26334                           	opt callstack 12
 26335                           
 26336                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26337                           
 26338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26339                           ;incstack = 0
 26340  01961A  0012               	return		;funcret
 26341  01961C                     __end_of_INT1_DefaultInterruptHandler:
 26342                           	opt callstack 0
 26343                           
 26344 ;; *************** function _switch_handler *****************
 26345 ;; Defined at:
 26346 ;;		line 58 in file "dio.c"
 26347 ;; Parameters:    Size  Location     Type
 26348 ;;		None
 26349 ;; Auto vars:     Size  Location     Type
 26350 ;;  i               1  [STACK] unsigned char 
 26351 ;;  sw_value        1  [STACK] unsigned char 
 26352 ;; Return value:  Size  Location     Type
 26353 ;;                  1  [STACK] void 
 26354 ;; Registers used:
 26355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 26356 ;; Tracked objects:
 26357 ;;		On entry : 0/39
 26358 ;;		On exit  : 0/0
 26359 ;;		Unchanged: 0/0
 26360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26365 ;;Total ram usage:        0 bytes
 26366 ;; Hardware stack levels used:    1
 26367 ;; Hardware stack levels required when called:    3
 26368 ;; This function calls:
 26369 ;;		Nothing
 26370 ;; This function is called by:
 26371 ;;		_start_switch_handler
 26372 ;;		_INT1_CallBack
 26373 ;; This function uses a reentrant model
 26374 ;;
 26375                           
 26376                           	psect	text128
 26377  016E68                     __ptext128:
 26378                           	opt callstack 0
 26379  016E68                     _switch_handler:
 26380                           	opt callstack 0
 26381                           
 26382                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26383  016E68  52E6               	movf	postinc1,f,c
 26384  016E6A  52E6               	movf	postinc1,f,c
 26385                           
 26386                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 26387                           ;stkvar	_i @ sp[(-2)+0]
 26388                           
 26389                           ;incstack = 0
 26390  016E6C  0EFE               	movlw	-2
 26391  016E6E  6AE3               	clrf	plusw1,c
 26392  016E70  9EBD               	bcf	189,7,c	;volatile
 26393                           
 26394                           ;dio.c: 72:  __nop();
 26395  016E72  F000               	nop	
 26396                           
 26397                           ;dio.c: 73:  __nop();
 26398  016E74  F000               	nop	
 26399                           
 26400                           ;dio.c: 74:  __nop();
 26401  016E76  F000               	nop	
 26402  016E78  D019               	goto	l9173
 26403  016E7A                     l9161:
 26404                           
 26405                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 26406  016E7A  A6CF               	btfss	207,3,c	;volatile
 26407  016E7C  D011               	goto	u849_20
 26408  016E7E  D00D               	goto	u849_21
 26409  016E80                     u846_28:
 26410                           
 26411                           ;stkvar	_sw_value @ sp[(-2)+1]
 26412  016E80  0EFF               	movlw	-1
 26413  016E82  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 26414                           
 26415                           ;dio.c: 80:    break;
 26416  016E88  D027               	goto	l9175
 26417  016E8A                     l9163:
 26418                           
 26419                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 26420  016E8A  A4CF               	btfss	207,2,c	;volatile
 26421  016E8C  D009               	goto	u849_20
 26422  016E8E  D005               	goto	u849_21
 26423  016E90                     l9165:
 26424                           
 26425                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 26426  016E90  A2CF               	btfss	207,1,c	;volatile
 26427  016E92  D006               	goto	u849_20
 26428  016E94  D002               	goto	u849_21
 26429  016E96                     l9167:
 26430                           
 26431                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 26432  016E96  A0CF               	btfss	207,0,c	;volatile
 26433  016E98  D003               	goto	u849_20
 26434  016E9A                     u849_21:
 26435  016E9A  6A30               	clrf	(btemp+11)^0,c
 26436  016E9C  2A30               	incf	(btemp+11)^0,f,c
 26437  016E9E  D7F0               	goto	u846_28
 26438  016EA0                     u849_20:
 26439  016EA0  6A30               	clrf	(btemp+11)^0,c
 26440  016EA2  D7EE               	goto	u846_28
 26441  016EA4                     l9169:
 26442                           
 26443                           ;dio.c: 91:    sw_value = 1;
 26444                           ;stkvar	_sw_value @ sp[(-2)+1]
 26445  016EA4  0EFF               	movlw	-1
 26446  016EA6  6AE3               	clrf	plusw1,c
 26447  016EA8  2AE3               	incf	plusw1,f,c
 26448                           
 26449                           ;dio.c: 92:    break;
 26450  016EAA  D016               	goto	l9175
 26451  016EAC                     l9173:
 26452                           
 26453                           ;stkvar	_i @ sp[(-2)+0]
 26454  016EAC  0EFE               	movlw	-2
 26455  016EAE  50E3               	movf	plusw1,w,c
 26456  016EB0  6E2F               	movwf	(btemp+10)^0,c
 26457  016EB2  6A30               	clrf	(btemp+11)^0,c
 26458                           
 26459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26460                           ; Switch size 1, requested type "simple"
 26461                           ; Number of cases is 1, Range of values is 0 to 0
 26462                           ; switch strategies available:
 26463                           ; Name         Instructions Cycles
 26464                           ; simple_byte            4     3 (average)
 26465                           ;	Chosen strategy is simple_byte
 26466  016EB4  5030               	movf	(btemp+11)^0,w,c
 26467  016EB6  0A00               	xorlw	0	; case 0
 26468  016EB8  A4D8               	btfss	status,2,c
 26469  016EBA  D7F4               	goto	l9169
 26470                           
 26471                           ; Switch size 1, requested type "simple"
 26472                           ; Number of cases is 4, Range of values is 0 to 3
 26473                           ; switch strategies available:
 26474                           ; Name         Instructions Cycles
 26475                           ; simple_byte           13     7 (average)
 26476                           ;	Chosen strategy is simple_byte
 26477  016EBC  502F               	movf	(btemp+10)^0,w,c
 26478  016EBE  0A00               	xorlw	0	; case 0
 26479  016EC0  B4D8               	btfsc	status,2,c
 26480  016EC2  D7E9               	goto	l9167
 26481  016EC4  0A01               	xorlw	1	; case 1
 26482  016EC6  B4D8               	btfsc	status,2,c
 26483  016EC8  D7E3               	goto	l9165
 26484  016ECA  0A03               	xorlw	3	; case 2
 26485  016ECC  B4D8               	btfsc	status,2,c
 26486  016ECE  D7DD               	goto	l9163
 26487  016ED0  0A01               	xorlw	1	; case 3
 26488  016ED2  B4D8               	btfsc	status,2,c
 26489  016ED4  D7D2               	goto	l9161
 26490  016ED6  D7E6               	goto	l9169
 26491  016ED8                     l9175:
 26492                           
 26493                           ;dio.c: 96:   if (sw_value) {
 26494                           ;stkvar	_sw_value @ sp[(-2)+1]
 26495  016ED8  0EFF               	movlw	-1
 26496  016EDA  50E3               	movf	plusw1,w,c
 26497  016EDC  B4D8               	btfsc	status,2,c
 26498  016EDE  D014               	goto	l9181
 26499                           
 26500                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26501                           ;stkvar	_i @ sp[(-2)+0]
 26502  016EE0  0EFE               	movlw	-2
 26503  016EE2  50E3               	movf	plusw1,w,c
 26504  016EE4  0D05               	mullw	5
 26505  016EE6  50F3               	movf	243,w,c
 26506  016EE8  0F60               	addlw	low _S
 26507  016EEA  6ED9               	movwf	fsr2l,c
 26508  016EEC  6ADA               	clrf	fsr2h,c
 26509  016EEE  04DE               	decf	postinc2,w,c
 26510  016EF0  A4D8               	btfss	status,2,c
 26511  016EF2  D041               	goto	l9189
 26512                           
 26513                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26514                           ;stkvar	_i @ sp[(-2)+0]
 26515  016EF4  0EFE               	movlw	-2
 26516  016EF6  50E3               	movf	plusw1,w,c
 26517  016EF8  0D05               	mullw	5
 26518  016EFA  50F3               	movf	243,w,c
 26519  016EFC  0F60               	addlw	low _S
 26520  016EFE  6ED9               	movwf	fsr2l,c
 26521  016F00  6ADA               	clrf	fsr2h,c
 26522  016F02  0E00               	movlw	0
 26523  016F04  6EDF               	movwf	indf2,c
 26524  016F06  D037               	goto	l9189
 26525  016F08                     l9181:
 26526                           
 26527                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26528                           ;stkvar	_i @ sp[(-2)+0]
 26529  016F08  0EFE               	movlw	-2
 26530  016F0A  50E3               	movf	plusw1,w,c
 26531  016F0C  0D05               	mullw	5
 26532  016F0E  50F3               	movf	243,w,c
 26533  016F10  0F60               	addlw	low _S
 26534  016F12  6ED9               	movwf	fsr2l,c
 26535  016F14  6ADA               	clrf	fsr2h,c
 26536  016F16  50DF               	movf	indf2,w,c
 26537  016F18  A4D8               	btfss	status,2,c
 26538  016F1A  D02D               	goto	l9189
 26539                           
 26540                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26541                           ;stkvar	_i @ sp[(-2)+0]
 26542  016F1C  0EFE               	movlw	-2
 26543  016F1E  50E3               	movf	plusw1,w,c
 26544  016F20  0D05               	mullw	5
 26545  016F22  50F3               	movf	243,w,c
 26546  016F24  0F60               	addlw	low _S
 26547  016F26  6ED9               	movwf	fsr2l,c
 26548  016F28  6ADA               	clrf	fsr2h,c
 26549  016F2A  0E01               	movlw	1
 26550  016F2C  6EDF               	movwf	indf2,c
 26551                           
 26552                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26553  016F2E  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26554                           
 26555                           ;stkvar	_i @ sp[(-2)+0]
 26556  016F32  0EFE               	movlw	-2
 26557  016F34  50E3               	movf	plusw1,w,c
 26558  016F36  0D05               	mullw	5
 26559  016F38  50F3               	movf	243,w,c
 26560  016F3A  0F61               	addlw	low (_S+1)
 26561  016F3C  6EE9               	movwf	fsr0l,c
 26562  016F3E  6AEA               	clrf	fsr0h,c
 26563  016F40  006F FF7B FFEE     	movff	postinc2,postinc0
 26564  016F46  006F FF7B FFEE     	movff	postinc2,postinc0
 26565  016F4C  006F FF7B FFEE     	movff	postinc2,postinc0
 26566  016F52  006F FF7B FFEE     	movff	postinc2,postinc0
 26567                           
 26568                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26569                           ;stkvar	_i @ sp[(-2)+0]
 26570  016F58  0EFE               	movlw	-2
 26571  016F5A  006F FF8C  F030    	movff	plusw1,btemp+11
 26572  016F60  0E01               	movlw	1
 26573  016F62  6E2F               	movwf	(btemp+10)^0,c
 26574  016F64  2A30               	incf	(btemp+11)^0,f,c
 26575  016F66  D002               	goto	u853_24
 26576  016F68                     u853_25:
 26577  016F68  90D8               	bcf	status,0,c
 26578  016F6A  362F               	rlcf	(btemp+10)^0,f,c
 26579  016F6C                     u853_24:
 26580  016F6C  2E30               	decfsz	(btemp+11)^0,f,c
 26581  016F6E  D7FC               	goto	u853_25
 26582  016F70  502F               	movf	(btemp+10)^0,w,c
 26583  016F72  0100               	movlb	0	; () banked
 26584  016F74  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26585  016F76                     l9189:
 26586                           
 26587                           ;dio.c: 107:  } while (++i < 4);
 26588                           ;stkvar	_i @ sp[(-2)+0]
 26589  016F76  0EFE               	movlw	-2
 26590  016F78  2AE3               	incf	plusw1,f,c
 26591  016F7A  0EFE               	movlw	-2
 26592  016F7C  006F FF8C  F025    	movff	plusw1,btemp
 26593  016F82  0E03               	movlw	3
 26594  016F84  6425               	cpfsgt	btemp^0,c
 26595  016F86  D792               	goto	l9173
 26596                           
 26597                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 26598  016F88  8EBD               	bsf	189,7,c	;volatile
 26599                           
 26600                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26601  016F8A  52E5               	movf	postdec1,f,c
 26602  016F8C  52E5               	movf	postdec1,f,c
 26603  016F8E  0012               	return		;funcret
 26604  016F90                     __end_of_switch_handler:
 26605                           	opt callstack 0
 26606                           
 26607 ;; *************** function _TMR5_ISR *****************
 26608 ;; Defined at:
 26609 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26610 ;; Parameters:    Size  Location     Type
 26611 ;;		None
 26612 ;; Auto vars:     Size  Location     Type
 26613 ;;		None
 26614 ;; Return value:  Size  Location     Type
 26615 ;;                  1    wreg      void 
 26616 ;; Registers used:
 26617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26618 ;; Tracked objects:
 26619 ;;		On entry : 0/0
 26620 ;;		On exit  : 0/0
 26621 ;;		Unchanged: 0/0
 26622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26625 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26627 ;;Total ram usage:        4 bytes
 26628 ;; Hardware stack levels used:    1
 26629 ;; Hardware stack levels required when called:    5
 26630 ;; This function calls:
 26631 ;;		_TMR5_CallBack
 26632 ;;		_TMR5_WriteTimer
 26633 ;; This function is called by:
 26634 ;;		Interrupt level 1
 26635 ;; This function uses a non-reentrant model
 26636 ;;
 26637                           
 26638                           	psect	text129
 26639  0187B0                     __ptext129:
 26640                           	opt callstack 0
 26641  0187B0                     _TMR5_ISR:
 26642                           	opt callstack 12
 26643                           
 26644                           ;incstack = 0
 26645  0187B0  006F FF60  F051    	movff	status,??_TMR5_ISR+2
 26646  0187B6  0060  F0C0  F052   	movff	btemp+11,??_TMR5_ISR+3
 26647  0187BC  EE16  F00B         	lfsr	1,___intlo_sp
 26648                           
 26649                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26650  0187C0  0139               	movlb	57	; () banked
 26651  0187C2  9DA8               	bcf	168,6,b	;volatile
 26652                           
 26653                           ; BSR set to: 57
 26654                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26655  0187C4  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 26656  0187CA  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26657  0187D0  ECD6  F0C5         	call	_TMR5_WriteTimer	;wreg free
 26658                           
 26659                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26660  0187D4  0102               	movlb	2	; () banked
 26661  0187D6  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26662  0187D8  6E4F               	movwf	??_TMR5_ISR^0,c
 26663  0187DA  6A50               	clrf	(??_TMR5_ISR+1)^0,c
 26664  0187DC  0E05               	movlw	5
 26665  0187DE  264F               	addwf	??_TMR5_ISR^0,f,c
 26666  0187E0  0E00               	movlw	0
 26667  0187E2  2250               	addwfc	(??_TMR5_ISR+1)^0,f,c
 26668  0187E4  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26669  0187E6  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26670  0187E8  504F               	movf	??_TMR5_ISR^0,w,c
 26671  0187EA  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26672  0187EC  5050               	movf	(??_TMR5_ISR+1)^0,w,c
 26673  0187EE  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26674  0187F0  A0D8               	btfss	status,0,c
 26675  0187F2  D004               	goto	i1l1047
 26676                           
 26677                           ; BSR set to: 2
 26678                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26679  0187F4  EC5D  F0C9         	call	_TMR5_CallBack	;wreg free
 26680                           
 26681                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26682  0187F8  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26683  0187FA  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26684  0187FC                     i1l1047:
 26685  0187FC  0060  F148  F030   	movff	??_TMR5_ISR+3,btemp+11
 26686  018802  0060  F147  FFD8   	movff	??_TMR5_ISR+2,status
 26687  018808  0011               	retfie		f
 26688  01880A                     __end_of_TMR5_ISR:
 26689                           	opt callstack 0
 26690                           
 26691 ;; *************** function _TMR5_WriteTimer *****************
 26692 ;; Defined at:
 26693 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26694 ;; Parameters:    Size  Location     Type
 26695 ;;  timerVal        2  [STACK] unsigned short 
 26696 ;; Auto vars:     Size  Location     Type
 26697 ;;		None
 26698 ;; Return value:  Size  Location     Type
 26699 ;;                  1  [STACK] void 
 26700 ;; Registers used:
 26701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26702 ;; Tracked objects:
 26703 ;;		On entry : 3F/39
 26704 ;;		On exit  : 0/0
 26705 ;;		Unchanged: 0/0
 26706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26711 ;;Total ram usage:        0 bytes
 26712 ;; Hardware stack levels used:    1
 26713 ;; Hardware stack levels required when called:    3
 26714 ;; This function calls:
 26715 ;;		Nothing
 26716 ;; This function is called by:
 26717 ;;		_TMR5_ISR
 26718 ;; This function uses a reentrant model
 26719 ;;
 26720                           
 26721                           	psect	text130
 26722  018BAC                     __ptext130:
 26723                           	opt callstack 0
 26724  018BAC                     _TMR5_WriteTimer:
 26725                           	opt callstack 13
 26726                           
 26727                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26728                           
 26729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26730                           ;incstack = 0
 26731  018BAC  A49A               	btfss	154,2,c	;volatile
 26732  018BAE  D00F               	goto	l9343
 26733                           
 26734                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26735  018BB0  909A               	bcf	154,0,c	;volatile
 26736                           
 26737                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26738                           ;stkvar	_timerVal @ sp[(0)+-2]
 26739  018BB2  0EFF               	movlw	255
 26740  018BB4  24E1               	addwf	fsr1l,w,c
 26741  018BB6  6ED9               	movwf	fsr2l,c
 26742  018BB8  0EFF               	movlw	255
 26743  018BBA  20E2               	addwfc	fsr1h,w,c
 26744  018BBC  6EDA               	movwf	fsr2h,c
 26745  018BBE  50DF               	movf	indf2,w,c
 26746  018BC0  6E99               	movwf	153,c	;volatile
 26747                           
 26748                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26749                           ;stkvar	_timerVal @ sp[(0)+-2]
 26750  018BC2  0EFE               	movlw	-2
 26751  018BC4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26752                           
 26753                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26754  018BCA  809A               	bsf	154,0,c	;volatile
 26755                           
 26756                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26757  018BCC  D00C               	goto	l1030
 26758  018BCE                     l9343:
 26759                           
 26760                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26761                           ;stkvar	_timerVal @ sp[(0)+-2]
 26762  018BCE  0EFF               	movlw	255
 26763  018BD0  24E1               	addwf	fsr1l,w,c
 26764  018BD2  6ED9               	movwf	fsr2l,c
 26765  018BD4  0EFF               	movlw	255
 26766  018BD6  20E2               	addwfc	fsr1h,w,c
 26767  018BD8  6EDA               	movwf	fsr2h,c
 26768  018BDA  50DF               	movf	indf2,w,c
 26769  018BDC  6E99               	movwf	153,c	;volatile
 26770                           
 26771                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26772                           ;stkvar	_timerVal @ sp[(0)+-2]
 26773  018BDE  0EFE               	movlw	-2
 26774  018BE0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26775  018BE6                     l1030:
 26776                           
 26777                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26778  018BE6  52E5               	movf	postdec1,f,c
 26779  018BE8  52E5               	movf	postdec1,f,c
 26780  018BEA  0012               	return		;funcret
 26781  018BEC                     __end_of_TMR5_WriteTimer:
 26782                           	opt callstack 0
 26783                           
 26784 ;; *************** function _TMR5_CallBack *****************
 26785 ;; Defined at:
 26786 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26787 ;; Parameters:    Size  Location     Type
 26788 ;;		None
 26789 ;; Auto vars:     Size  Location     Type
 26790 ;;		None
 26791 ;; Return value:  Size  Location     Type
 26792 ;;                  1  [STACK] void 
 26793 ;; Registers used:
 26794 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26795 ;; Tracked objects:
 26796 ;;		On entry : 3F/2
 26797 ;;		On exit  : 0/0
 26798 ;;		Unchanged: 0/0
 26799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26804 ;;Total ram usage:        0 bytes
 26805 ;; Hardware stack levels used:    1
 26806 ;; Hardware stack levels required when called:    4
 26807 ;; This function calls:
 26808 ;;		Absolute function
 26809 ;;		_TMR5_DefaultInterruptHandler
 26810 ;; This function is called by:
 26811 ;;		_TMR5_ISR
 26812 ;; This function uses a reentrant model
 26813 ;;
 26814                           
 26815                           	psect	text131
 26816  0192BA                     __ptext131:
 26817                           	opt callstack 0
 26818  0192BA                     _TMR5_CallBack:
 26819                           	opt callstack 12
 26820                           
 26821                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26822                           
 26823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26824                           ;incstack = 0
 26825  0192BA  0100               	movlb	0	; () banked
 26826  0192BC  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26827  0192BE  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26828  0192C0  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26829  0192C2  B4D8               	btfsc	status,2,c
 26830  0192C4  0012               	return	
 26831                           
 26832                           ; BSR set to: 0
 26833                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26834  0192C6  D801               	call	u878_28
 26835  0192C8  0012               	return	
 26836  0192CA                     u878_28:
 26837  0192CA  0005               	push	
 26838  0192CC  6EFA               	movwf	pclath,c
 26839  0192CE  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26840  0192D0  6EFD               	movwf	tosl,c
 26841  0192D2  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26842  0192D4  6EFE               	movwf	tosh,c
 26843  0192D6  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26844  0192D8  6EFF               	movwf	tosu,c
 26845  0192DA  50FA               	movf	pclath,w,c
 26846  0192DC  0012               	return		;indir
 26847  0192DE                     __end_of_TMR5_CallBack:
 26848                           	opt callstack 0
 26849                           
 26850 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26851 ;; Defined at:
 26852 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26853 ;; Parameters:    Size  Location     Type
 26854 ;;		None
 26855 ;; Auto vars:     Size  Location     Type
 26856 ;;		None
 26857 ;; Return value:  Size  Location     Type
 26858 ;;                  1  [STACK] void 
 26859 ;; Registers used:
 26860 ;;		wreg, status,2, status,0, btemp+11
 26861 ;; Tracked objects:
 26862 ;;		On entry : 3F/0
 26863 ;;		On exit  : 3F/2
 26864 ;;		Unchanged: 0/0
 26865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26870 ;;Total ram usage:        0 bytes
 26871 ;; Hardware stack levels used:    1
 26872 ;; Hardware stack levels required when called:    3
 26873 ;; This function calls:
 26874 ;;		Nothing
 26875 ;; This function is called by:
 26876 ;;		_TMR5_Initialize
 26877 ;;		_TMR5_CallBack
 26878 ;; This function uses a reentrant model
 26879 ;;
 26880                           
 26881                           	psect	text132
 26882  0191CE                     __ptext132:
 26883                           	opt callstack 0
 26884  0191CE                     _TMR5_DefaultInterruptHandler:
 26885                           	opt callstack 12
 26886                           
 26887                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26888                           
 26889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26890                           ;incstack = 0
 26891  0191CE  A0BE               	btfss	190,0,c	;volatile
 26892  0191D0  D002               	goto	u823_20
 26893  0191D2  0E01               	movlw	1
 26894  0191D4  D001               	goto	u823_26
 26895  0191D6                     u823_20:
 26896  0191D6  0E00               	movlw	0
 26897  0191D8                     u823_26:
 26898  0191D8  0AFF               	xorlw	255
 26899  0191DA  6E30               	movwf	(btemp+11)^0,c
 26900  0191DC  50BE               	movf	190,w,c	;volatile
 26901  0191DE  1830               	xorwf	(btemp+11)^0,w,c
 26902  0191E0  0BFE               	andlw	-2
 26903  0191E2  1830               	xorwf	(btemp+11)^0,w,c
 26904  0191E4  6EBE               	movwf	190,c	;volatile
 26905                           
 26906                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26907  0191E6  0E01               	movlw	1
 26908  0191E8  0102               	movlb	2	; () banked
 26909  0191EA  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26910  0191EC  0E00               	movlw	0
 26911  0191EE  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26912  0191F0  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26913  0191F2  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26914                           
 26915                           ; BSR set to: 2
 26916                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26917  0191F4  0012               	return		;funcret
 26918  0191F6                     __end_of_TMR5_DefaultInterruptHandler:
 26919                           	opt callstack 0
 26920                           
 26921 ;; *************** function _TMR3_ISR *****************
 26922 ;; Defined at:
 26923 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 26924 ;; Parameters:    Size  Location     Type
 26925 ;;		None
 26926 ;; Auto vars:     Size  Location     Type
 26927 ;;		None
 26928 ;; Return value:  Size  Location     Type
 26929 ;;                  1    wreg      void 
 26930 ;; Registers used:
 26931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 26932 ;; Tracked objects:
 26933 ;;		On entry : 0/0
 26934 ;;		On exit  : 0/0
 26935 ;;		Unchanged: 0/0
 26936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26939 ;;      Temps:          0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26940 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26941 ;;Total ram usage:       13 bytes
 26942 ;; Hardware stack levels used:    1
 26943 ;; Hardware stack levels required when called:    6
 26944 ;; This function calls:
 26945 ;;		_TMR3_CallBack
 26946 ;;		_TMR3_WriteTimer
 26947 ;; This function is called by:
 26948 ;;		Interrupt level 1
 26949 ;; This function uses a non-reentrant model
 26950 ;;
 26951                           
 26952                           	psect	text133
 26953  0178B8                     __ptext133:
 26954                           	opt callstack 0
 26955  0178B8                     _TMR3_ISR:
 26956                           	opt callstack 11
 26957                           
 26958                           ; BSR set to: 2
 26959                           ;incstack = 0
 26960  0178B8  006F FF60  F1D5    	movff	status,??_TMR3_ISR
 26961  0178BE  0060  F094  F1D6   	movff	btemp,??_TMR3_ISR+1
 26962  0178C4  0060  F098  F1D7   	movff	btemp+1,??_TMR3_ISR+2
 26963  0178CA  0060  F09C  F1D8   	movff	btemp+2,??_TMR3_ISR+3
 26964  0178D0  0060  F0A0  F1D9   	movff	btemp+3,??_TMR3_ISR+4
 26965  0178D6  0060  F0A4  F1DA   	movff	btemp+4,??_TMR3_ISR+5
 26966  0178DC  0060  F0A8  F1DB   	movff	btemp+5,??_TMR3_ISR+6
 26967  0178E2  0060  F0AC  F1DC   	movff	btemp+6,??_TMR3_ISR+7
 26968  0178E8  0060  F0B0  F1DD   	movff	btemp+7,??_TMR3_ISR+8
 26969  0178EE  0060  F0B4  F1DE   	movff	btemp+8,??_TMR3_ISR+9
 26970  0178F4  0060  F0B8  F1DF   	movff	btemp+9,??_TMR3_ISR+10
 26971  0178FA  0060  F0BC  F1E0   	movff	btemp+10,??_TMR3_ISR+11
 26972  017900  0060  F0C0  F1E1   	movff	btemp+11,??_TMR3_ISR+12
 26973  017906  EE16  F00B         	lfsr	1,___intlo_sp
 26974                           
 26975                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 26976  01790A  0139               	movlb	57	; () banked
 26977  01790C  9DA6               	bcf	166,6,b	;volatile
 26978                           
 26979                           ; BSR set to: 57
 26980                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 26981  01790E  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 26982  017914  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 26983  01791A  ECF6  F0C5         	call	_TMR3_WriteTimer	;wreg free
 26984                           
 26985                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 26986  01791E  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 26987  017920  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 26988  017922  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 26989  017924  E104               	bnz	i1u1079_20
 26990  017926  0E28               	movlw	40
 26991  017928  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 26992  01792A  A0D8               	btfss	status,0,c
 26993  01792C  D004               	goto	i1l1235
 26994  01792E                     i1u1079_20:
 26995                           
 26996                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 26997  01792E  EC6F  F0C9         	call	_TMR3_CallBack	;wreg free
 26998                           
 26999                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 27000  017932  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 27001  017934  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 27002  017936                     i1l1235:
 27003  017936  0060  F784  F030   	movff	??_TMR3_ISR+12,btemp+11
 27004  01793C  0060  F780  F02F   	movff	??_TMR3_ISR+11,btemp+10
 27005  017942  0060  F77C  F02E   	movff	??_TMR3_ISR+10,btemp+9
 27006  017948  0060  F778  F02D   	movff	??_TMR3_ISR+9,btemp+8
 27007  01794E  0060  F774  F02C   	movff	??_TMR3_ISR+8,btemp+7
 27008  017954  0060  F770  F02B   	movff	??_TMR3_ISR+7,btemp+6
 27009  01795A  0060  F76C  F02A   	movff	??_TMR3_ISR+6,btemp+5
 27010  017960  0060  F768  F029   	movff	??_TMR3_ISR+5,btemp+4
 27011  017966  0060  F764  F028   	movff	??_TMR3_ISR+4,btemp+3
 27012  01796C  0060  F760  F027   	movff	??_TMR3_ISR+3,btemp+2
 27013  017972  0060  F75C  F026   	movff	??_TMR3_ISR+2,btemp+1
 27014  017978  0060  F758  F025   	movff	??_TMR3_ISR+1,btemp
 27015  01797E  0060  F757  FFD8   	movff	??_TMR3_ISR,status
 27016  017984  0011               	retfie		f
 27017  017986                     __end_of_TMR3_ISR:
 27018                           	opt callstack 0
 27019                           
 27020 ;; *************** function _TMR3_WriteTimer *****************
 27021 ;; Defined at:
 27022 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 27023 ;; Parameters:    Size  Location     Type
 27024 ;;  timerVal        2  [STACK] unsigned short 
 27025 ;; Auto vars:     Size  Location     Type
 27026 ;;		None
 27027 ;; Return value:  Size  Location     Type
 27028 ;;                  1  [STACK] void 
 27029 ;; Registers used:
 27030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27031 ;; Tracked objects:
 27032 ;;		On entry : 3F/39
 27033 ;;		On exit  : 0/0
 27034 ;;		Unchanged: 0/0
 27035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27040 ;;Total ram usage:        0 bytes
 27041 ;; Hardware stack levels used:    1
 27042 ;; Hardware stack levels required when called:    3
 27043 ;; This function calls:
 27044 ;;		Nothing
 27045 ;; This function is called by:
 27046 ;;		_TMR3_ISR
 27047 ;; This function uses a reentrant model
 27048 ;;
 27049                           
 27050                           	psect	text134
 27051  018BEC                     __ptext134:
 27052                           	opt callstack 0
 27053  018BEC                     _TMR3_WriteTimer:
 27054                           	opt callstack 13
 27055                           
 27056                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 27057                           
 27058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27059                           ;incstack = 0
 27060  018BEC  A4A6               	btfss	166,2,c	;volatile
 27061  018BEE  D00F               	goto	l5893
 27062                           
 27063                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 27064  018BF0  90A6               	bcf	166,0,c	;volatile
 27065                           
 27066                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 27067                           ;stkvar	_timerVal @ sp[(0)+-2]
 27068  018BF2  0EFF               	movlw	255
 27069  018BF4  24E1               	addwf	fsr1l,w,c
 27070  018BF6  6ED9               	movwf	fsr2l,c
 27071  018BF8  0EFF               	movlw	255
 27072  018BFA  20E2               	addwfc	fsr1h,w,c
 27073  018BFC  6EDA               	movwf	fsr2h,c
 27074  018BFE  50DF               	movf	indf2,w,c
 27075  018C00  6EA5               	movwf	165,c	;volatile
 27076                           
 27077                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 27078                           ;stkvar	_timerVal @ sp[(0)+-2]
 27079  018C02  0EFE               	movlw	-2
 27080  018C04  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27081                           
 27082                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 27083  018C0A  80A6               	bsf	166,0,c	;volatile
 27084                           
 27085                           ;mcc_generated_files/tmr3.c: 141:     }
 27086  018C0C  D00C               	goto	l1218
 27087  018C0E                     l5893:
 27088                           
 27089                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 27090                           ;stkvar	_timerVal @ sp[(0)+-2]
 27091  018C0E  0EFF               	movlw	255
 27092  018C10  24E1               	addwf	fsr1l,w,c
 27093  018C12  6ED9               	movwf	fsr2l,c
 27094  018C14  0EFF               	movlw	255
 27095  018C16  20E2               	addwfc	fsr1h,w,c
 27096  018C18  6EDA               	movwf	fsr2h,c
 27097  018C1A  50DF               	movf	indf2,w,c
 27098  018C1C  6EA5               	movwf	165,c	;volatile
 27099                           
 27100                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 27101                           ;stkvar	_timerVal @ sp[(0)+-2]
 27102  018C1E  0EFE               	movlw	-2
 27103  018C20  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27104  018C26                     l1218:
 27105                           
 27106                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27107  018C26  52E5               	movf	postdec1,f,c
 27108  018C28  52E5               	movf	postdec1,f,c
 27109  018C2A  0012               	return		;funcret
 27110  018C2C                     __end_of_TMR3_WriteTimer:
 27111                           	opt callstack 0
 27112                           
 27113 ;; *************** function _TMR3_CallBack *****************
 27114 ;; Defined at:
 27115 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 27116 ;; Parameters:    Size  Location     Type
 27117 ;;		None
 27118 ;; Auto vars:     Size  Location     Type
 27119 ;;		None
 27120 ;; Return value:  Size  Location     Type
 27121 ;;                  1  [STACK] void 
 27122 ;; Registers used:
 27123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 27124 ;; Tracked objects:
 27125 ;;		On entry : 0/39
 27126 ;;		On exit  : 0/0
 27127 ;;		Unchanged: 0/0
 27128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27133 ;;Total ram usage:        0 bytes
 27134 ;; Hardware stack levels used:    1
 27135 ;; Hardware stack levels required when called:    5
 27136 ;; This function calls:
 27137 ;;		Absolute function
 27138 ;;		_TMR3_DefaultInterruptHandler
 27139 ;;		_calc_bsoc
 27140 ;; This function is called by:
 27141 ;;		_TMR3_ISR
 27142 ;; This function uses a reentrant model
 27143 ;;
 27144                           
 27145                           	psect	text135
 27146  0192DE                     __ptext135:
 27147                           	opt callstack 0
 27148  0192DE                     _TMR3_CallBack:
 27149                           	opt callstack 11
 27150                           
 27151                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 27152                           
 27153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27154                           ;incstack = 0
 27155  0192DE  0100               	movlb	0	; () banked
 27156  0192E0  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27157  0192E2  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27158  0192E4  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27159  0192E6  B4D8               	btfsc	status,2,c
 27160  0192E8  0012               	return	
 27161                           
 27162                           ; BSR set to: 0
 27163                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 27164  0192EA  D801               	call	u880_28
 27165  0192EC  0012               	return	
 27166  0192EE                     u880_28:
 27167  0192EE  0005               	push	
 27168  0192F0  6EFA               	movwf	pclath,c
 27169  0192F2  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27170  0192F4  6EFD               	movwf	tosl,c
 27171  0192F6  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27172  0192F8  6EFE               	movwf	tosh,c
 27173  0192FA  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27174  0192FC  6EFF               	movwf	tosu,c
 27175  0192FE  50FA               	movf	pclath,w,c
 27176  019300  0012               	return		;indir
 27177  019302                     __end_of_TMR3_CallBack:
 27178                           	opt callstack 0
 27179                           
 27180 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 27181 ;; Defined at:
 27182 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 27183 ;; Parameters:    Size  Location     Type
 27184 ;;		None
 27185 ;; Auto vars:     Size  Location     Type
 27186 ;;		None
 27187 ;; Return value:  Size  Location     Type
 27188 ;;                  1  [STACK] void 
 27189 ;; Registers used:
 27190 ;;		None
 27191 ;; Tracked objects:
 27192 ;;		On entry : 3F/0
 27193 ;;		On exit  : 0/0
 27194 ;;		Unchanged: 0/0
 27195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27200 ;;Total ram usage:        0 bytes
 27201 ;; Hardware stack levels used:    1
 27202 ;; Hardware stack levels required when called:    3
 27203 ;; This function calls:
 27204 ;;		Nothing
 27205 ;; This function is called by:
 27206 ;;		_TMR3_Initialize
 27207 ;;		_TMR3_CallBack
 27208 ;; This function uses a reentrant model
 27209 ;;
 27210                           
 27211                           	psect	text136
 27212  01961C                     __ptext136:
 27213                           	opt callstack 0
 27214  01961C                     _TMR3_DefaultInterruptHandler:
 27215                           	opt callstack 12
 27216                           
 27217                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27218                           
 27219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27220                           ;incstack = 0
 27221  01961C  0012               	return		;funcret
 27222  01961E                     __end_of_TMR3_DefaultInterruptHandler:
 27223                           	opt callstack 0
 27224                           
 27225 ;; *************** function _calc_bsoc *****************
 27226 ;; Defined at:
 27227 ;;		line 7 in file "bsoc.c"
 27228 ;; Parameters:    Size  Location     Type
 27229 ;;		None
 27230 ;; Auto vars:     Size  Location     Type
 27231 ;;		None
 27232 ;; Return value:  Size  Location     Type
 27233 ;;                  1  [STACK] void 
 27234 ;; Registers used:
 27235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27236 ;; Tracked objects:
 27237 ;;		On entry : 3F/0
 27238 ;;		On exit  : 3F/1
 27239 ;;		Unchanged: 0/0
 27240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27245 ;;Total ram usage:        0 bytes
 27246 ;; Hardware stack levels used:    1
 27247 ;; Hardware stack levels required when called:    4
 27248 ;; This function calls:
 27249 ;;		___fladd
 27250 ;;		___fldiv
 27251 ;;		___flge
 27252 ;;		___flmul
 27253 ;;		___fltol
 27254 ;; This function is called by:
 27255 ;;		_init_bsoc
 27256 ;;		_TMR3_CallBack
 27257 ;; This function uses a reentrant model
 27258 ;;
 27259                           
 27260                           	psect	text137
 27261  0144B4                     __ptext137:
 27262                           	opt callstack 0
 27263  0144B4                     _calc_bsoc:
 27264                           	opt callstack 11
 27265                           
 27266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27267                           ;incstack = 0
 27268                           ;bsoc.c: 10:  do { LATEbits.LATE1 = 1; } while(0);
 27269  0144B4  82BE               	bsf	190,1,c	;volatile
 27270                           
 27271                           ;bsoc.c: 12:  C.dynamic_ah += (C.c_bat / 3600.0);
 27272  0144B6  0E00               	movlw	0
 27273  0144B8  6EE6               	movwf	postinc1,c
 27274  0144BA  0E00               	movlw	0
 27275  0144BC  6EE6               	movwf	postinc1,c
 27276  0144BE  0E61               	movlw	97
 27277  0144C0  6EE6               	movwf	postinc1,c
 27278  0144C2  0E45               	movlw	69
 27279  0144C4  6EE6               	movwf	postinc1,c
 27280  0144C6  0060  F513  FFE6   	movff	_C+68,postinc1
 27281  0144CC  0060  F517  FFE6   	movff	_C+69,postinc1
 27282  0144D2  0060  F51B  FFE6   	movff	_C+70,postinc1
 27283  0144D8  0060  F51F  FFE6   	movff	_C+71,postinc1
 27284  0144DE  EC07  F09B         	call	___fldiv	;wreg free
 27285  0144E2  0060  F097  FFE6   	movff	btemp,postinc1
 27286  0144E8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27287  0144EE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27288  0144F4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27289  0144FA  0060  F613  FFE6   	movff	_C+132,postinc1
 27290  014500  0060  F617  FFE6   	movff	_C+133,postinc1
 27291  014506  0060  F61B  FFE6   	movff	_C+134,postinc1
 27292  01450C  0060  F61F  FFE6   	movff	_C+135,postinc1
 27293  014512  EC29  F097         	call	___fladd	;wreg free
 27294  014516  0060  F094  F184   	movff	btemp,_C+132	;volatile
 27295  01451C  0060  F098  F185   	movff	btemp+1,_C+133	;volatile
 27296  014522  0060  F09C  F186   	movff	btemp+2,_C+134	;volatile
 27297  014528  0060  F0A0  F187   	movff	btemp+3,_C+135	;volatile
 27298                           
 27299                           ;bsoc.c: 13:  if (C.dynamic_ah > (C.bank_ah))
 27300  01452E  0060  F613  FFE6   	movff	_C+132,postinc1
 27301  014534  0060  F617  FFE6   	movff	_C+133,postinc1
 27302  01453A  0060  F61B  FFE6   	movff	_C+134,postinc1
 27303  014540  0060  F61F  FFE6   	movff	_C+135,postinc1
 27304  014546  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27305  01454C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27306  014552  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27307  014558  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27308  01455E  EC45  F0B5         	call	___flge	;wreg free
 27309  014562  B025               	btfsc	btemp& (0+255),0,c
 27310  014564  D008               	goto	l9215
 27311                           
 27312                           ;bsoc.c: 14:   C.dynamic_ah = C.bank_ah;
 27313  014566  C17C  F184         	movff	_C+124,_C+132	;volatile
 27314  01456A  C17D  F185         	movff	_C+125,_C+133	;volatile
 27315  01456E  C17E  F186         	movff	_C+126,_C+134	;volatile
 27316  014572  C17F  F187         	movff	_C+127,_C+135	;volatile
 27317  014576                     l9215:
 27318                           
 27319                           ;bsoc.c: 15:  if (C.dynamic_ah < 0.1)
 27320  014576  0ECD               	movlw	205
 27321  014578  6EE6               	movwf	postinc1,c
 27322  01457A  0ECC               	movlw	204
 27323  01457C  6EE6               	movwf	postinc1,c
 27324  01457E  0ECC               	movlw	204
 27325  014580  6EE6               	movwf	postinc1,c
 27326  014582  0E3D               	movlw	61
 27327  014584  6EE6               	movwf	postinc1,c
 27328  014586  0060  F613  FFE6   	movff	_C+132,postinc1
 27329  01458C  0060  F617  FFE6   	movff	_C+133,postinc1
 27330  014592  0060  F61B  FFE6   	movff	_C+134,postinc1
 27331  014598  0060  F61F  FFE6   	movff	_C+135,postinc1
 27332  01459E  EC45  F0B5         	call	___flge	;wreg free
 27333  0145A2  B025               	btfsc	btemp& (0+255),0,c
 27334  0145A4  D009               	goto	l9219
 27335                           
 27336                           ;bsoc.c: 16:   C.dynamic_ah = 0.1;
 27337  0145A6  0ECD               	movlw	205
 27338  0145A8  0101               	movlb	1	; () banked
 27339  0145AA  6F84               	movwf	(_C+132)& (0+255),b	;volatile
 27340  0145AC  0ECC               	movlw	204
 27341  0145AE  6F85               	movwf	(_C+133)& (0+255),b	;volatile
 27342  0145B0  0ECC               	movlw	204
 27343  0145B2  6F86               	movwf	(_C+134)& (0+255),b	;volatile
 27344  0145B4  0E3D               	movlw	61
 27345  0145B6  6F87               	movwf	(_C+135)& (0+255),b	;volatile
 27346  0145B8                     l9219:
 27347                           
 27348                           ;bsoc.c: 18:  C.pv_ah += (C.c_pv / 3600.0);
 27349  0145B8  0E00               	movlw	0
 27350  0145BA  6EE6               	movwf	postinc1,c
 27351  0145BC  0E00               	movlw	0
 27352  0145BE  6EE6               	movwf	postinc1,c
 27353  0145C0  0E61               	movlw	97
 27354  0145C2  6EE6               	movwf	postinc1,c
 27355  0145C4  0E45               	movlw	69
 27356  0145C6  6EE6               	movwf	postinc1,c
 27357  0145C8  0060  F523  FFE6   	movff	_C+72,postinc1
 27358  0145CE  0060  F527  FFE6   	movff	_C+73,postinc1
 27359  0145D4  0060  F52B  FFE6   	movff	_C+74,postinc1
 27360  0145DA  0060  F52F  FFE6   	movff	_C+75,postinc1
 27361  0145E0  EC07  F09B         	call	___fldiv	;wreg free
 27362  0145E4  0060  F097  FFE6   	movff	btemp,postinc1
 27363  0145EA  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27364  0145F0  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27365  0145F6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27366  0145FC  0060  F623  FFE6   	movff	_C+136,postinc1
 27367  014602  0060  F627  FFE6   	movff	_C+137,postinc1
 27368  014608  0060  F62B  FFE6   	movff	_C+138,postinc1
 27369  01460E  0060  F62F  FFE6   	movff	_C+139,postinc1
 27370  014614  EC29  F097         	call	___fladd	;wreg free
 27371  014618  0060  F094  F188   	movff	btemp,_C+136	;volatile
 27372  01461E  0060  F098  F189   	movff	btemp+1,_C+137	;volatile
 27373  014624  0060  F09C  F18A   	movff	btemp+2,_C+138	;volatile
 27374  01462A  0060  F0A0  F18B   	movff	btemp+3,_C+139	;volatile
 27375                           
 27376                           ;bsoc.c: 19:  C.pvkw += (C.p_pv / 3600.0);
 27377  014630  0E00               	movlw	0
 27378  014632  6EE6               	movwf	postinc1,c
 27379  014634  0E00               	movlw	0
 27380  014636  6EE6               	movwf	postinc1,c
 27381  014638  0E61               	movlw	97
 27382  01463A  6EE6               	movwf	postinc1,c
 27383  01463C  0E45               	movlw	69
 27384  01463E  6EE6               	movwf	postinc1,c
 27385  014640  0060  F5C3  FFE6   	movff	_C+112,postinc1
 27386  014646  0060  F5C7  FFE6   	movff	_C+113,postinc1
 27387  01464C  0060  F5CB  FFE6   	movff	_C+114,postinc1
 27388  014652  0060  F5CF  FFE6   	movff	_C+115,postinc1
 27389  014658  EC07  F09B         	call	___fldiv	;wreg free
 27390  01465C  0060  F097  FFE6   	movff	btemp,postinc1
 27391  014662  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27392  014668  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27393  01466E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27394  014674  0060  F663  FFE6   	movff	_C+152,postinc1
 27395  01467A  0060  F667  FFE6   	movff	_C+153,postinc1
 27396  014680  0060  F66B  FFE6   	movff	_C+154,postinc1
 27397  014686  0060  F66F  FFE6   	movff	_C+155,postinc1
 27398  01468C  EC29  F097         	call	___fladd	;wreg free
 27399  014690  0060  F094  F198   	movff	btemp,_C+152	;volatile
 27400  014696  0060  F098  F199   	movff	btemp+1,_C+153	;volatile
 27401  01469C  0060  F09C  F19A   	movff	btemp+2,_C+154	;volatile
 27402  0146A2  0060  F0A0  F19B   	movff	btemp+3,_C+155	;volatile
 27403                           
 27404                           ;bsoc.c: 20:  C.invkw += (C.p_inverter / 3600.0);
 27405  0146A8  0E00               	movlw	0
 27406  0146AA  6EE6               	movwf	postinc1,c
 27407  0146AC  0E00               	movlw	0
 27408  0146AE  6EE6               	movwf	postinc1,c
 27409  0146B0  0E61               	movlw	97
 27410  0146B2  6EE6               	movwf	postinc1,c
 27411  0146B4  0E45               	movlw	69
 27412  0146B6  6EE6               	movwf	postinc1,c
 27413  0146B8  0060  F5B3  FFE6   	movff	_C+108,postinc1
 27414  0146BE  0060  F5B7  FFE6   	movff	_C+109,postinc1
 27415  0146C4  0060  F5BB  FFE6   	movff	_C+110,postinc1
 27416  0146CA  0060  F5BF  FFE6   	movff	_C+111,postinc1
 27417  0146D0  EC07  F09B         	call	___fldiv	;wreg free
 27418  0146D4  0060  F097  FFE6   	movff	btemp,postinc1
 27419  0146DA  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27420  0146E0  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27421  0146E6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27422  0146EC  0060  F673  FFE6   	movff	_C+156,postinc1
 27423  0146F2  0060  F677  FFE6   	movff	_C+157,postinc1
 27424  0146F8  0060  F67B  FFE6   	movff	_C+158,postinc1
 27425  0146FE  0060  F67F  FFE6   	movff	_C+159,postinc1
 27426  014704  EC29  F097         	call	___fladd	;wreg free
 27427  014708  0060  F094  F19C   	movff	btemp,_C+156	;volatile
 27428  01470E  0060  F098  F19D   	movff	btemp+1,_C+157	;volatile
 27429  014714  0060  F09C  F19E   	movff	btemp+2,_C+158	;volatile
 27430  01471A  0060  F0A0  F19F   	movff	btemp+3,_C+159	;volatile
 27431                           
 27432                           ;bsoc.c: 21:  if (C.p_bat > 0.0)
 27433  014720  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27434  014726  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27435  01472C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27436  014732  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27437  014738  0E00               	movlw	0
 27438  01473A  6EE6               	movwf	postinc1,c
 27439  01473C  0E00               	movlw	0
 27440  01473E  6EE6               	movwf	postinc1,c
 27441  014740  0E00               	movlw	0
 27442  014742  6EE6               	movwf	postinc1,c
 27443  014744  0E00               	movlw	0
 27444  014746  6EE6               	movwf	postinc1,c
 27445  014748  EC45  F0B5         	call	___flge	;wreg free
 27446  01474C  B025               	btfsc	btemp& (0+255),0,c
 27447  01474E  D03C               	goto	l9229
 27448                           
 27449                           ;bsoc.c: 22:   C.bkwi += (C.p_bat / 3600.0);
 27450  014750  0E00               	movlw	0
 27451  014752  6EE6               	movwf	postinc1,c
 27452  014754  0E00               	movlw	0
 27453  014756  6EE6               	movwf	postinc1,c
 27454  014758  0E61               	movlw	97
 27455  01475A  6EE6               	movwf	postinc1,c
 27456  01475C  0E45               	movlw	69
 27457  01475E  6EE6               	movwf	postinc1,c
 27458  014760  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27459  014766  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27460  01476C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27461  014772  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27462  014778  EC07  F09B         	call	___fldiv	;wreg free
 27463  01477C  0060  F097  FFE6   	movff	btemp,postinc1
 27464  014782  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27465  014788  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27466  01478E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27467  014794  0060  F643  FFE6   	movff	_C+144,postinc1
 27468  01479A  0060  F647  FFE6   	movff	_C+145,postinc1
 27469  0147A0  0060  F64B  FFE6   	movff	_C+146,postinc1
 27470  0147A6  0060  F64F  FFE6   	movff	_C+147,postinc1
 27471  0147AC  EC29  F097         	call	___fladd	;wreg free
 27472  0147B0  0060  F094  F190   	movff	btemp,_C+144	;volatile
 27473  0147B6  0060  F098  F191   	movff	btemp+1,_C+145	;volatile
 27474  0147BC  0060  F09C  F192   	movff	btemp+2,_C+146	;volatile
 27475  0147C2  0060  F0A0  F193   	movff	btemp+3,_C+147	;volatile
 27476  0147C8                     l9229:
 27477                           
 27478                           ;bsoc.c: 23:  if (C.p_bat < 0.0)
 27479  0147C8  0101               	movlb	1	; () banked
 27480  0147CA  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 27481  0147CC  D03C               	goto	l9233
 27482                           
 27483                           ; BSR set to: 1
 27484                           ;bsoc.c: 24:   C.bkwo += (C.p_bat / 3600.0);
 27485  0147CE  0E00               	movlw	0
 27486  0147D0  6EE6               	movwf	postinc1,c
 27487  0147D2  0E00               	movlw	0
 27488  0147D4  6EE6               	movwf	postinc1,c
 27489  0147D6  0E61               	movlw	97
 27490  0147D8  6EE6               	movwf	postinc1,c
 27491  0147DA  0E45               	movlw	69
 27492  0147DC  6EE6               	movwf	postinc1,c
 27493  0147DE  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27494  0147E4  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27495  0147EA  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27496  0147F0  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27497  0147F6  EC07  F09B         	call	___fldiv	;wreg free
 27498  0147FA  0060  F097  FFE6   	movff	btemp,postinc1
 27499  014800  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27500  014806  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27501  01480C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27502  014812  0060  F653  FFE6   	movff	_C+148,postinc1
 27503  014818  0060  F657  FFE6   	movff	_C+149,postinc1
 27504  01481E  0060  F65B  FFE6   	movff	_C+150,postinc1
 27505  014824  0060  F65F  FFE6   	movff	_C+151,postinc1
 27506  01482A  EC29  F097         	call	___fladd	;wreg free
 27507  01482E  0060  F094  F194   	movff	btemp,_C+148	;volatile
 27508  014834  0060  F098  F195   	movff	btemp+1,_C+149	;volatile
 27509  01483A  0060  F09C  F196   	movff	btemp+2,_C+150	;volatile
 27510  014840  0060  F0A0  F197   	movff	btemp+3,_C+151	;volatile
 27511  014846                     l9233:
 27512                           
 27513                           ;bsoc.c: 25:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 27514  014846  0E00               	movlw	0
 27515  014848  6EE6               	movwf	postinc1,c
 27516  01484A  0E00               	movlw	0
 27517  01484C  6EE6               	movwf	postinc1,c
 27518  01484E  0EC8               	movlw	200
 27519  014850  6EE6               	movwf	postinc1,c
 27520  014852  0E42               	movlw	66
 27521  014854  6EE6               	movwf	postinc1,c
 27522  014856  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27523  01485C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27524  014862  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27525  014868  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27526  01486E  0060  F613  FFE6   	movff	_C+132,postinc1
 27527  014874  0060  F617  FFE6   	movff	_C+133,postinc1
 27528  01487A  0060  F61B  FFE6   	movff	_C+134,postinc1
 27529  014880  0060  F61F  FFE6   	movff	_C+135,postinc1
 27530  014886  EC07  F09B         	call	___fldiv	;wreg free
 27531  01488A  0060  F097  FFE6   	movff	btemp,postinc1
 27532  014890  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27533  014896  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27534  01489C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27535  0148A2  EC14  F093         	call	___flmul	;wreg free
 27536  0148A6  0060  F097  FFE6   	movff	btemp,postinc1
 27537  0148AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27538  0148B2  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27539  0148B8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27540  0148BE  EC8C  F0B4         	call	___fltol	;wreg free
 27541  0148C2  0060  F094  F02F   	movff	btemp,btemp+10
 27542  0148C8  0060  F098  F030   	movff	btemp+1,btemp+11
 27543  0148CE  0E01               	movlw	1
 27544  0148D0  242F               	addwf	(btemp+10)^0,w,c
 27545  0148D2  0101               	movlb	1	; () banked
 27546  0148D4  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
 27547  0148D6  0E00               	movlw	0
 27548  0148D8  2030               	addwfc	(btemp+11)^0,w,c
 27549  0148DA  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
 27550                           
 27551                           ; BSR set to: 1
 27552                           ;bsoc.c: 26:  if (C.soc > 100)
 27553  0148DC  51A3               	movf	(_C+163)& (0+255),w,b	;volatile
 27554  0148DE  E104               	bnz	u865_20
 27555  0148E0  0E65               	movlw	101
 27556  0148E2  5DA2               	subwf	(_C+162)& (0+255),w,b	;volatile
 27557  0148E4  A0D8               	btfss	status,0,c
 27558  0148E6  D004               	goto	l9239
 27559  0148E8                     u865_20:
 27560                           
 27561                           ; BSR set to: 1
 27562                           ;bsoc.c: 27:   C.soc = 100;
 27563  0148E8  0E00               	movlw	0
 27564  0148EA  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
 27565  0148EC  0E64               	movlw	100
 27566  0148EE  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
 27567  0148F0                     l9239:
 27568                           
 27569                           ; BSR set to: 1
 27570                           ;bsoc.c: 29:  V.lowint_count++;
 27571  0148F0  0E01               	movlw	1
 27572  0148F2  0102               	movlb	2	; () banked
 27573  0148F4  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 27574  0148F6  0E00               	movlw	0
 27575  0148F8  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 27576  0148FA  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 27577  0148FC  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 27578                           
 27579                           ; BSR set to: 2
 27580                           ;bsoc.c: 30:  C.update = 0;
 27581  0148FE  0101               	movlb	1	; () banked
 27582  014900  6BA4               	clrf	(_C+164)& (0+255),b	;volatile
 27583                           
 27584                           ; BSR set to: 1
 27585  014902  92BE               	bcf	190,1,c	;volatile
 27586                           
 27587                           ; BSR set to: 1
 27588                           ; _calc_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27589  014904  0012               	return		;funcret
 27590  014906                     __end_of_calc_bsoc:
 27591                           	opt callstack 0
 27592                           
 27593 ;; *************** function _INT0_ISR *****************
 27594 ;; Defined at:
 27595 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 27596 ;; Parameters:    Size  Location     Type
 27597 ;;		None
 27598 ;; Auto vars:     Size  Location     Type
 27599 ;;		None
 27600 ;; Return value:  Size  Location     Type
 27601 ;;                  1    wreg      void 
 27602 ;; Registers used:
 27603 ;;		wreg, status,2, status,0, pclath, tosl
 27604 ;; Tracked objects:
 27605 ;;		On entry : 0/0
 27606 ;;		On exit  : 0/0
 27607 ;;		Unchanged: 0/0
 27608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27613 ;;Total ram usage:        0 bytes
 27614 ;; Hardware stack levels used:    1
 27615 ;; Hardware stack levels required when called:    2
 27616 ;; This function calls:
 27617 ;;		_INT0_CallBack
 27618 ;; This function is called by:
 27619 ;;		Interrupt level 2
 27620 ;; This function uses a non-reentrant model
 27621 ;;
 27622                           
 27623                           	psect	text138
 27624  019588                     __ptext138:
 27625                           	opt callstack 0
 27626  019588                     _INT0_ISR:
 27627                           	opt callstack 11
 27628                           
 27629                           ; BSR set to: 1
 27630                           ;incstack = 0
 27631  019588  EE14  F016         	lfsr	1,___inthi_sp
 27632                           
 27633                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 27634  01958C  0139               	movlb	57	; () banked
 27635  01958E  91A1               	bcf	161,0,b	;volatile
 27636                           
 27637                           ; BSR set to: 57
 27638                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 27639  019590  ECB5  F0C9         	call	_INT0_CallBack	;wreg free
 27640  019594  0011               	retfie		f
 27641  019596                     __end_of_INT0_ISR:
 27642                           	opt callstack 0
 27643                           
 27644 ;; *************** function _INT0_CallBack *****************
 27645 ;; Defined at:
 27646 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 27647 ;; Parameters:    Size  Location     Type
 27648 ;;		None
 27649 ;; Auto vars:     Size  Location     Type
 27650 ;;		None
 27651 ;; Return value:  Size  Location     Type
 27652 ;;                  1  [STACK] void 
 27653 ;; Registers used:
 27654 ;;		wreg, status,2, status,0, pclath, tosl
 27655 ;; Tracked objects:
 27656 ;;		On entry : 3F/39
 27657 ;;		On exit  : 0/0
 27658 ;;		Unchanged: 0/0
 27659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27664 ;;Total ram usage:        0 bytes
 27665 ;; Hardware stack levels used:    1
 27666 ;; Hardware stack levels required when called:    1
 27667 ;; This function calls:
 27668 ;;		Absolute function
 27669 ;;		_INT0_DefaultInterruptHandler
 27670 ;; This function is called by:
 27671 ;;		_INT0_ISR
 27672 ;; This function uses a reentrant model
 27673 ;;
 27674                           
 27675                           	psect	text139
 27676  01936A                     __ptext139:
 27677                           	opt callstack 0
 27678  01936A                     _INT0_CallBack:
 27679                           	opt callstack 11
 27680                           
 27681                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 27682                           
 27683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27684                           ;incstack = 0
 27685  01936A  5007               	movf	_INT0_InterruptHandler^0,w,c
 27686  01936C  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 27687  01936E  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 27688  019370  B4D8               	btfsc	status,2,c
 27689  019372  0012               	return	
 27690                           
 27691                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 27692  019374  D801               	call	u403_48
 27693  019376  0012               	return	
 27694  019378                     u403_48:
 27695  019378  0005               	push	
 27696  01937A  6EFA               	movwf	pclath,c
 27697  01937C  5007               	movf	_INT0_InterruptHandler^0,w,c
 27698  01937E  6EFD               	movwf	tosl,c
 27699  019380  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 27700  019382  6EFE               	movwf	tosh,c
 27701  019384  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 27702  019386  6EFF               	movwf	tosu,c
 27703  019388  50FA               	movf	pclath,w,c
 27704  01938A  0012               	return		;indir
 27705  01938C                     __end_of_INT0_CallBack:
 27706                           	opt callstack 0
 27707                           
 27708 ;; *************** function _INT0_DefaultInterruptHandler *****************
 27709 ;; Defined at:
 27710 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 27711 ;; Parameters:    Size  Location     Type
 27712 ;;		None
 27713 ;; Auto vars:     Size  Location     Type
 27714 ;;		None
 27715 ;; Return value:  Size  Location     Type
 27716 ;;                  1  [STACK] void 
 27717 ;; Registers used:
 27718 ;;		None
 27719 ;; Tracked objects:
 27720 ;;		On entry : 0/39
 27721 ;;		On exit  : 0/0
 27722 ;;		Unchanged: 0/0
 27723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27728 ;;Total ram usage:        0 bytes
 27729 ;; Hardware stack levels used:    1
 27730 ;; This function calls:
 27731 ;;		Nothing
 27732 ;; This function is called by:
 27733 ;;		_EXT_INT_Initialize
 27734 ;;		_INT0_CallBack
 27735 ;; This function uses a reentrant model
 27736 ;;
 27737                           
 27738                           	psect	text140
 27739  01961E                     __ptext140:
 27740                           	opt callstack 0
 27741  01961E                     _INT0_DefaultInterruptHandler:
 27742                           	opt callstack 11
 27743                           
 27744                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27745                           
 27746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27747                           ;incstack = 0
 27748  01961E  0012               	return		;funcret
 27749  019620                     __end_of_INT0_DefaultInterruptHandler:
 27750                           	opt callstack 0
 27751                           
 27752 ;; *************** function _Default_ISR *****************
 27753 ;; Defined at:
 27754 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 27755 ;; Parameters:    Size  Location     Type
 27756 ;;		None
 27757 ;; Auto vars:     Size  Location     Type
 27758 ;;		None
 27759 ;; Return value:  Size  Location     Type
 27760 ;;                  1    wreg      void 
 27761 ;; Registers used:
 27762 ;;		None
 27763 ;; Tracked objects:
 27764 ;;		On entry : 0/0
 27765 ;;		On exit  : 0/0
 27766 ;;		Unchanged: 0/0
 27767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27772 ;;Total ram usage:        0 bytes
 27773 ;; Hardware stack levels used:    1
 27774 ;; This function calls:
 27775 ;;		Nothing
 27776 ;; This function is called by:
 27777 ;;		Interrupt level 2
 27778 ;; This function uses a non-reentrant model
 27779 ;;
 27780                           
 27781                           	psect	text141
 27782  019614                     __ptext141:
 27783                           	opt callstack 0
 27784  019614                     _Default_ISR:
 27785                           	opt callstack 13
 27786                           
 27787                           ;incstack = 0
 27788  019614  EE14  F016         	lfsr	1,___inthi_sp
 27789  019618  0011               	retfie		f
 27790  01961A                     __end_of_Default_ISR:
 27791                           	opt callstack 0
 27792                           
 27793 ;; *************** function _ADCC_ISR *****************
 27794 ;; Defined at:
 27795 ;;		line 314 in file "mcc_generated_files/adcc.c"
 27796 ;; Parameters:    Size  Location     Type
 27797 ;;		None
 27798 ;; Auto vars:     Size  Location     Type
 27799 ;;		None
 27800 ;; Return value:  Size  Location     Type
 27801 ;;                  1    wreg      void 
 27802 ;; Registers used:
 27803 ;;		wreg, status,2, status,0, pclath, tosl
 27804 ;; Tracked objects:
 27805 ;;		On entry : 0/0
 27806 ;;		On exit  : 0/0
 27807 ;;		Unchanged: 0/0
 27808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27813 ;;Total ram usage:        0 bytes
 27814 ;; Hardware stack levels used:    1
 27815 ;; Hardware stack levels required when called:    1
 27816 ;; This function calls:
 27817 ;;		Absolute function
 27818 ;;		_ADCC_DefaultInterruptHandler
 27819 ;;		_adc_int_handler
 27820 ;; This function is called by:
 27821 ;;		Interrupt level 2
 27822 ;; This function uses a non-reentrant model
 27823 ;;
 27824                           
 27825                           	psect	text142
 27826  018EA0                     __ptext142:
 27827                           	opt callstack 0
 27828  018EA0                     _ADCC_ISR:
 27829                           	opt callstack 12
 27830                           
 27831                           ;incstack = 0
 27832  018EA0  EE14  F016         	lfsr	1,___inthi_sp
 27833                           
 27834                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 27835  018EA4  0139               	movlb	57	; () banked
 27836  018EA6  95A1               	bcf	161,2,b	;volatile
 27837                           
 27838                           ; BSR set to: 57
 27839                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 27840  018EA8  0100               	movlb	0	; () banked
 27841  018EAA  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27842  018EAC  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27843  018EAE  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27844  018EB0  B4D8               	btfsc	status,2,c
 27845  018EB2  0011               	retfie		f
 27846                           
 27847                           ; BSR set to: 0
 27848                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 27849  018EB4  D801               	call	i2u902_48
 27850  018EB6  0011               	retfie		f
 27851  018EB8                     i2u902_48:
 27852  018EB8  0005               	push	
 27853  018EBA  6EFA               	movwf	pclath,c
 27854  018EBC  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27855  018EBE  6EFD               	movwf	tosl,c
 27856  018EC0  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27857  018EC2  6EFE               	movwf	tosh,c
 27858  018EC4  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27859  018EC6  6EFF               	movwf	tosu,c
 27860  018EC8  50FA               	movf	pclath,w,c
 27861  018ECA  0012               	return		;indir
 27862  018ECC                     __end_of_ADCC_ISR:
 27863                           	opt callstack 0
 27864                           
 27865 ;; *************** function _adc_int_t_handler *****************
 27866 ;; Defined at:
 27867 ;;		line 128 in file "daq.c"
 27868 ;; Parameters:    Size  Location     Type
 27869 ;;		None
 27870 ;; Auto vars:     Size  Location     Type
 27871 ;;		None
 27872 ;; Return value:  Size  Location     Type
 27873 ;;                  1  [STACK] void 
 27874 ;; Registers used:
 27875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 27876 ;; Tracked objects:
 27877 ;;		On entry : 3F/0
 27878 ;;		On exit  : 1/0
 27879 ;;		Unchanged: 0/0
 27880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27885 ;;Total ram usage:        0 bytes
 27886 ;; Hardware stack levels used:    1
 27887 ;; Hardware stack levels required when called:    1
 27888 ;; This function calls:
 27889 ;;		_ADCC_DischargeSampleCapacitor
 27890 ;;		_ADCC_StartConversion
 27891 ;; This function is called by:
 27892 ;;		_start_adc_scan
 27893 ;;		_ADCC_ThresholdISR
 27894 ;; This function uses a reentrant model
 27895 ;;
 27896                           
 27897                           	psect	text143
 27898  0182EE                     __ptext143:
 27899                           	opt callstack 0
 27900  0182EE                     _adc_int_t_handler:
 27901                           	opt callstack 11
 27902                           
 27903                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 27904                           
 27905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27906                           ;incstack = 0
 27907  0182EE  013E               	movlb	62	; () banked
 27908  0182F0  51E6               	movf	230,w,b	;volatile
 27909  0182F2  006F FB9C  F025    	movff	16103,btemp	;volatile
 27910  0182F8  6A26               	clrf	(btemp+1)^0,c
 27911  0182FA  0060  F094  F026   	movff	btemp,btemp+1
 27912  018300  6A25               	clrf	btemp^0,c
 27913  018302  2625               	addwf	btemp^0,f,c
 27914  018304  0E00               	movlw	0
 27915  018306  2226               	addwfc	(btemp+1)^0,f,c
 27916  018308  0100               	movlb	0	; () banked
 27917  01830A  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27918  01830C  0D02               	mullw	2
 27919  01830E  50F3               	movf	243,w,c
 27920  018310  0FC3               	addlw	low _R
 27921  018312  6ED9               	movwf	fsr2l,c
 27922  018314  6ADA               	clrf	fsr2h,c
 27923  018316  0060  F097  FFDE   	movff	btemp,postinc2
 27924  01831C  0060  F09B  FFDD   	movff	btemp+1,postdec2
 27925  018322                     l9585:
 27926                           
 27927                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 27928  018322  0100               	movlb	0	; () banked
 27929  018324  2BE7               	incf	(_R+36)& (0+255),f,b	;volatile
 27930  018326  0E0D               	movlw	13
 27931  018328  65E7               	cpfsgt	(_R+36)& (0+255),b	;volatile
 27932  01832A  D003               	goto	l9591
 27933                           
 27934                           ; BSR set to: 0
 27935                           ;daq.c: 136:    R.done = 1;
 27936  01832C  0E01               	movlw	1
 27937  01832E  6FEA               	movwf	(_R+39)& (0+255),b	;volatile
 27938  018330  0012               	return	
 27939  018332                     l9591:
 27940                           
 27941                           ; BSR set to: 0
 27942                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 27943  018332  0060  F39C  F030   	movff	_R+36,btemp+11	;volatile
 27944  018338  EE20  F0E8         	lfsr	2,_R+37	;volatile
 27945  01833C  006F FF78  F02D    	movff	postinc2,btemp+8
 27946  018342  006F FF74  F02E    	movff	postdec2,btemp+9
 27947  018348  2A30               	incf	(btemp+11)^0,f,c
 27948  01834A  D003               	goto	u899_44
 27949  01834C                     u899_45:
 27950  01834C  90D8               	bcf	status,0,c
 27951  01834E  322E               	rrcf	(btemp+9)^0,f,c
 27952  018350  322D               	rrcf	(btemp+8)^0,f,c
 27953  018352                     u899_44:
 27954  018352  2E30               	decfsz	(btemp+11)^0,f,c
 27955  018354  D7FB               	goto	u899_45
 27956  018356  A02D               	btfss	(btemp+8)^0,0,c
 27957  018358  D7E4               	goto	l9585
 27958                           
 27959                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 27960  01835A  ECE9  F0CA         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 27961                           
 27962                           ; BSR set to: 62
 27963                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 27964  01835E  0100               	movlb	0	; () banked
 27965  018360  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27966  018362  0B0F               	andlw	15
 27967  018364  6EE6               	movwf	postinc1,c
 27968  018366  EC9C  F0CA         	call	_ADCC_StartConversion	;wreg free
 27969                           
 27970                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27971  01836A  0012               	return		;funcret
 27972  01836C                     __end_of_adc_int_t_handler:
 27973                           	opt callstack 0
 27974                           
 27975 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 27976 ;; Defined at:
 27977 ;;		line 339 in file "mcc_generated_files/adcc.c"
 27978 ;; Parameters:    Size  Location     Type
 27979 ;;		None
 27980 ;; Auto vars:     Size  Location     Type
 27981 ;;		None
 27982 ;; Return value:  Size  Location     Type
 27983 ;;                  1  [STACK] void 
 27984 ;; Registers used:
 27985 ;;		None
 27986 ;; Tracked objects:
 27987 ;;		On entry : 3F/0
 27988 ;;		On exit  : 0/0
 27989 ;;		Unchanged: 0/0
 27990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27995 ;;Total ram usage:        0 bytes
 27996 ;; Hardware stack levels used:    1
 27997 ;; This function calls:
 27998 ;;		Nothing
 27999 ;; This function is called by:
 28000 ;;		_ADCC_Initialize
 28001 ;;		_ADCC_ISR
 28002 ;;		_ADCC_ThresholdISR
 28003 ;; This function uses a reentrant model
 28004 ;;
 28005                           
 28006                           	psect	text144
 28007  019620                     __ptext144:
 28008                           	opt callstack 0
 28009  019620                     _ADCC_DefaultInterruptHandler:
 28010                           	opt callstack 12
 28011                           
 28012                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28013                           
 28014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28015                           ;incstack = 0
 28016  019620  0012               	return		;funcret
 28017  019622                     __end_of_ADCC_DefaultInterruptHandler:
 28018                           	opt callstack 0
 28019                           
 28020 ;; *************** function _adc_int_handler *****************
 28021 ;; Defined at:
 28022 ;;		line 118 in file "daq.c"
 28023 ;; Parameters:    Size  Location     Type
 28024 ;;		None
 28025 ;; Auto vars:     Size  Location     Type
 28026 ;;		None
 28027 ;; Return value:  Size  Location     Type
 28028 ;;                  1  [STACK] void 
 28029 ;; Registers used:
 28030 ;;		None
 28031 ;; Tracked objects:
 28032 ;;		On entry : 3F/0
 28033 ;;		On exit  : 0/0
 28034 ;;		Unchanged: 0/0
 28035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28040 ;;Total ram usage:        0 bytes
 28041 ;; Hardware stack levels used:    1
 28042 ;; This function calls:
 28043 ;;		Nothing
 28044 ;; This function is called by:
 28045 ;;		_start_adc_scan
 28046 ;;		_ADCC_ISR
 28047 ;; This function uses a reentrant model
 28048 ;;
 28049                           
 28050                           	psect	text145
 28051  019622                     __ptext145:
 28052                           	opt callstack 0
 28053  019622                     _adc_int_handler:
 28054                           	opt callstack 12
 28055                           
 28056                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28057                           
 28058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28059                           ;incstack = 0
 28060  019622  0012               	return		;funcret
 28061  019624                     __end_of_adc_int_handler:
 28062                           	opt callstack 0
 28063                           
 28064 ;; *************** function _ADCC_ThresholdISR *****************
 28065 ;; Defined at:
 28066 ;;		line 327 in file "mcc_generated_files/adcc.c"
 28067 ;; Parameters:    Size  Location     Type
 28068 ;;		None
 28069 ;; Auto vars:     Size  Location     Type
 28070 ;;		None
 28071 ;; Return value:  Size  Location     Type
 28072 ;;                  1    wreg      void 
 28073 ;; Registers used:
 28074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 28075 ;; Tracked objects:
 28076 ;;		On entry : 0/0
 28077 ;;		On exit  : 0/0
 28078 ;;		Unchanged: 0/0
 28079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28082 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28083 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28084 ;;Total ram usage:        5 bytes
 28085 ;; Hardware stack levels used:    1
 28086 ;; Hardware stack levels required when called:    2
 28087 ;; This function calls:
 28088 ;;		Absolute function
 28089 ;;		_ADCC_DefaultInterruptHandler
 28090 ;;		_adc_int_t_handler
 28091 ;; This function is called by:
 28092 ;;		Interrupt level 2
 28093 ;; This function uses a non-reentrant model
 28094 ;;
 28095                           
 28096                           	psect	text146
 28097  018440                     __ptext146:
 28098                           	opt callstack 0
 28099  018440                     _ADCC_ThresholdISR:
 28100                           	opt callstack 11
 28101                           
 28102                           ;incstack = 0
 28103  018440  0060  F094  F045   	movff	btemp,??_ADCC_ThresholdISR
 28104  018446  0060  F098  F046   	movff	btemp+1,??_ADCC_ThresholdISR+1
 28105  01844C  0060  F0B4  F047   	movff	btemp+8,??_ADCC_ThresholdISR+2
 28106  018452  0060  F0B8  F048   	movff	btemp+9,??_ADCC_ThresholdISR+3
 28107  018458  0060  F0C0  F049   	movff	btemp+11,??_ADCC_ThresholdISR+4
 28108  01845E  EE14  F016         	lfsr	1,___inthi_sp
 28109                           
 28110                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 28111  018462  0139               	movlb	57	; () banked
 28112  018464  97A1               	bcf	161,3,b	;volatile
 28113                           
 28114                           ; BSR set to: 57
 28115                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 28116  018466  0100               	movlb	0	; () banked
 28117  018468  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28118  01846A  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28119  01846C  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28120  01846E  B4D8               	btfsc	status,2,c
 28121  018470  D00C               	goto	i2u904_49
 28122                           
 28123                           ; BSR set to: 0
 28124                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 28125  018472  D801               	call	i2u904_48
 28126  018474  D00A               	goto	i2u904_49
 28127  018476                     i2u904_48:
 28128  018476  0005               	push	
 28129  018478  6EFA               	movwf	pclath,c
 28130  01847A  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28131  01847C  6EFD               	movwf	tosl,c
 28132  01847E  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28133  018480  6EFE               	movwf	tosh,c
 28134  018482  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28135  018484  6EFF               	movwf	tosu,c
 28136  018486  50FA               	movf	pclath,w,c
 28137  018488  0012               	return		;indir
 28138  01848A                     i2u904_49:
 28139  01848A  0060  F124  F030   	movff	??_ADCC_ThresholdISR+4,btemp+11
 28140  018490  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 28141  018496  0060  F11C  F02D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 28142  01849C  0060  F118  F026   	movff	??_ADCC_ThresholdISR+1,btemp+1
 28143  0184A2  0060  F114  F025   	movff	??_ADCC_ThresholdISR,btemp
 28144  0184A8  0011               	retfie		f
 28145  0184AA                     __end_of_ADCC_ThresholdISR:
 28146                           	opt callstack 0
 28147                           
 28148 ;; *************** function _UART1_tx_vect_isr *****************
 28149 ;; Defined at:
 28150 ;;		line 199 in file "mcc_generated_files/uart1.c"
 28151 ;; Parameters:    Size  Location     Type
 28152 ;;		None
 28153 ;; Auto vars:     Size  Location     Type
 28154 ;;		None
 28155 ;; Return value:  Size  Location     Type
 28156 ;;                  1    wreg      void 
 28157 ;; Registers used:
 28158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28159 ;; Tracked objects:
 28160 ;;		On entry : 0/0
 28161 ;;		On exit  : 0/0
 28162 ;;		Unchanged: 0/0
 28163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28168 ;;Total ram usage:        0 bytes
 28169 ;; Hardware stack levels used:    1
 28170 ;; Hardware stack levels required when called:    1
 28171 ;; This function calls:
 28172 ;;		Absolute function
 28173 ;;		_UART1_Transmit_ISR
 28174 ;; This function is called by:
 28175 ;;		Interrupt level 2
 28176 ;; This function uses a non-reentrant model
 28177 ;;
 28178                           
 28179                           	psect	text147
 28180  0191F8                     __ptext147:
 28181                           	opt callstack 0
 28182  0191F8                     _UART1_tx_vect_isr:
 28183                           	opt callstack 12
 28184                           
 28185                           ;incstack = 0
 28186  0191F8  EE14  F016         	lfsr	1,___inthi_sp
 28187                           
 28188                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 28189  0191FC  0100               	movlb	0	; () banked
 28190  0191FE  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28191  019200  11B9               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28192  019202  11BA               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28193  019204  B4D8               	btfsc	status,2,c
 28194  019206  0011               	retfie		f
 28195                           
 28196                           ; BSR set to: 0
 28197                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 28198  019208  D801               	call	i2u906_48
 28199  01920A  0011               	retfie		f
 28200  01920C                     i2u906_48:
 28201  01920C  0005               	push	
 28202  01920E  6EFA               	movwf	pclath,c
 28203  019210  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28204  019212  6EFD               	movwf	tosl,c
 28205  019214  51B9               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28206  019216  6EFE               	movwf	tosh,c
 28207  019218  51BA               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28208  01921A  6EFF               	movwf	tosu,c
 28209  01921C  50FA               	movf	pclath,w,c
 28210  01921E  0012               	return		;indir
 28211  019220                     __end_of_UART1_tx_vect_isr:
 28212                           	opt callstack 0
 28213                           
 28214 ;; *************** function _UART1_Transmit_ISR *****************
 28215 ;; Defined at:
 28216 ;;		line 213 in file "mcc_generated_files/uart1.c"
 28217 ;; Parameters:    Size  Location     Type
 28218 ;;		None
 28219 ;; Auto vars:     Size  Location     Type
 28220 ;;		None
 28221 ;; Return value:  Size  Location     Type
 28222 ;;                  1  [STACK] void 
 28223 ;; Registers used:
 28224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28225 ;; Tracked objects:
 28226 ;;		On entry : 3F/0
 28227 ;;		On exit  : 3B/39
 28228 ;;		Unchanged: 0/0
 28229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28234 ;;Total ram usage:        0 bytes
 28235 ;; Hardware stack levels used:    1
 28236 ;; This function calls:
 28237 ;;		Nothing
 28238 ;; This function is called by:
 28239 ;;		_UART1_Initialize
 28240 ;;		_UART1_tx_vect_isr
 28241 ;; This function uses a reentrant model
 28242 ;;
 28243                           
 28244                           	psect	text148
 28245  018ECC                     __ptext148:
 28246                           	opt callstack 0
 28247  018ECC                     _UART1_Transmit_ISR:
 28248                           	opt callstack 12
 28249                           
 28250                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 28251                           
 28252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28253                           ;incstack = 0
 28254  018ECC  0E40               	movlw	64
 28255  018ECE  6022               	cpfslt	_uart1TxBufferRemaining^0,c
 28256  018ED0  D010               	goto	l583
 28257                           
 28258                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 28259  018ED2  0EBC               	movlw	low _uart1TxBuffer
 28260  018ED4  2423               	addwf	_uart1TxTail^0,w,c	;volatile
 28261  018ED6  6ED9               	movwf	fsr2l,c
 28262  018ED8  6ADA               	clrf	fsr2h,c
 28263  018EDA  0E02               	movlw	high _uart1TxBuffer
 28264  018EDC  22DA               	addwfc	fsr2h,f,c
 28265  018EDE  50DF               	movf	indf2,w,c
 28266  018EE0  013D               	movlb	61	; () banked
 28267  018EE2  6FEA               	movwf	234,b	;volatile
 28268                           
 28269                           ; BSR set to: 61
 28270  018EE4  2A23               	incf	_uart1TxTail^0,f,c	;volatile
 28271                           
 28272                           ; BSR set to: 61
 28273                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 28274  018EE6  0E3F               	movlw	63
 28275  018EE8  6423               	cpfsgt	_uart1TxTail^0,c
 28276  018EEA  D001               	goto	l9295
 28277                           
 28278                           ; BSR set to: 61
 28279                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 28280  018EEC  6A23               	clrf	_uart1TxTail^0,c	;volatile
 28281  018EEE                     l9295:
 28282                           
 28283                           ; BSR set to: 61
 28284                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 28285  018EEE  2A22               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 28286                           
 28287                           ;mcc_generated_files/uart1.c: 222:  } else {
 28288  018EF0  0012               	return	
 28289  018EF2                     l583:
 28290                           
 28291                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 28292  018EF2  0139               	movlb	57	; () banked
 28293  018EF4  9993               	bcf	147,4,b	;volatile
 28294                           
 28295                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28296  018EF6  0012               	return		;funcret
 28297  018EF8                     __end_of_UART1_Transmit_ISR:
 28298                           	opt callstack 0
 28299                           
 28300 ;; *************** function _UART1_rx_vect_isr *****************
 28301 ;; Defined at:
 28302 ;;		line 206 in file "mcc_generated_files/uart1.c"
 28303 ;; Parameters:    Size  Location     Type
 28304 ;;		None
 28305 ;; Auto vars:     Size  Location     Type
 28306 ;;		None
 28307 ;; Return value:  Size  Location     Type
 28308 ;;                  1    wreg      void 
 28309 ;; Registers used:
 28310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28311 ;; Tracked objects:
 28312 ;;		On entry : 0/0
 28313 ;;		On exit  : 0/0
 28314 ;;		Unchanged: 0/0
 28315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28320 ;;Total ram usage:        0 bytes
 28321 ;; Hardware stack levels used:    1
 28322 ;; Hardware stack levels required when called:    1
 28323 ;; This function calls:
 28324 ;;		Absolute function
 28325 ;;		_UART1_Receive_ISR
 28326 ;; This function is called by:
 28327 ;;		Interrupt level 2
 28328 ;; This function uses a non-reentrant model
 28329 ;;
 28330                           
 28331                           	psect	text149
 28332  019220                     __ptext149:
 28333                           	opt callstack 0
 28334  019220                     _UART1_rx_vect_isr:
 28335                           	opt callstack 12
 28336                           
 28337                           ;incstack = 0
 28338  019220  EE14  F016         	lfsr	1,___inthi_sp
 28339                           
 28340                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 28341  019224  0100               	movlb	0	; () banked
 28342  019226  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28343  019228  11BC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28344  01922A  11BD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28345  01922C  B4D8               	btfsc	status,2,c
 28346  01922E  0011               	retfie		f
 28347                           
 28348                           ; BSR set to: 0
 28349                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 28350  019230  D801               	call	i2u908_48
 28351  019232  0011               	retfie		f
 28352  019234                     i2u908_48:
 28353  019234  0005               	push	
 28354  019236  6EFA               	movwf	pclath,c
 28355  019238  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28356  01923A  6EFD               	movwf	tosl,c
 28357  01923C  51BC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28358  01923E  6EFE               	movwf	tosh,c
 28359  019240  51BD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28360  019242  6EFF               	movwf	tosu,c
 28361  019244  50FA               	movf	pclath,w,c
 28362  019246  0012               	return		;indir
 28363  019248                     __end_of_UART1_rx_vect_isr:
 28364                           	opt callstack 0
 28365                           
 28366 ;; *************** function _UART1_Receive_ISR *****************
 28367 ;; Defined at:
 28368 ;;		line 229 in file "mcc_generated_files/uart1.c"
 28369 ;; Parameters:    Size  Location     Type
 28370 ;;		None
 28371 ;; Auto vars:     Size  Location     Type
 28372 ;;		None
 28373 ;; Return value:  Size  Location     Type
 28374 ;;                  1  [STACK] void 
 28375 ;; Registers used:
 28376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28377 ;; Tracked objects:
 28378 ;;		On entry : 3F/0
 28379 ;;		On exit  : 0/0
 28380 ;;		Unchanged: 0/0
 28381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28386 ;;Total ram usage:        0 bytes
 28387 ;; Hardware stack levels used:    1
 28388 ;; This function calls:
 28389 ;;		Nothing
 28390 ;; This function is called by:
 28391 ;;		_UART1_Initialize
 28392 ;;		_UART1_rx_vect_isr
 28393 ;; This function uses a reentrant model
 28394 ;;
 28395                           
 28396                           	psect	text150
 28397  019424                     __ptext150:
 28398                           	opt callstack 0
 28399  019424                     _UART1_Receive_ISR:
 28400                           	opt callstack 12
 28401                           
 28402                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 28403                           
 28404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28405                           ;incstack = 0
 28406  019424  0E00               	movlw	low _uart1RxBuffer
 28407  019426  2421               	addwf	_uart1RxHead^0,w,c	;volatile
 28408  019428  6ED9               	movwf	fsr2l,c
 28409  01942A  6ADA               	clrf	fsr2h,c
 28410  01942C  0E05               	movlw	high _uart1RxBuffer
 28411  01942E  22DA               	addwfc	fsr2h,f,c
 28412  019430  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 28413  019436  2A21               	incf	_uart1RxHead^0,f,c	;volatile
 28414                           
 28415                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 28416  019438  2821               	incf	_uart1RxHead^0,w,c
 28417  01943A  B4D8               	btfsc	status,2,c
 28418                           
 28419                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 28420  01943C  6A21               	clrf	_uart1RxHead^0,c	;volatile
 28421                           
 28422                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 28423  01943E  2A1F               	incf	_uart1RxCount^0,f,c	;volatile
 28424                           
 28425                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28426  019440  0012               	return		;funcret
 28427  019442                     __end_of_UART1_Receive_ISR:
 28428                           	opt callstack 0
 28429                           
 28430 ;; *************** function _UART2_tx_vect_isr *****************
 28431 ;; Defined at:
 28432 ;;		line 195 in file "mcc_generated_files/uart2.c"
 28433 ;; Parameters:    Size  Location     Type
 28434 ;;		None
 28435 ;; Auto vars:     Size  Location     Type
 28436 ;;		None
 28437 ;; Return value:  Size  Location     Type
 28438 ;;                  1    wreg      void 
 28439 ;; Registers used:
 28440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28441 ;; Tracked objects:
 28442 ;;		On entry : 0/0
 28443 ;;		On exit  : 0/0
 28444 ;;		Unchanged: 0/0
 28445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28450 ;;Total ram usage:        0 bytes
 28451 ;; Hardware stack levels used:    1
 28452 ;; Hardware stack levels required when called:    1
 28453 ;; This function calls:
 28454 ;;		Absolute function
 28455 ;;		_UART2_Transmit_ISR
 28456 ;; This function is called by:
 28457 ;;		Interrupt level 2
 28458 ;; This function uses a non-reentrant model
 28459 ;;
 28460                           
 28461                           	psect	text151
 28462  019248                     __ptext151:
 28463                           	opt callstack 0
 28464  019248                     _UART2_tx_vect_isr:
 28465                           	opt callstack 12
 28466                           
 28467                           ;incstack = 0
 28468  019248  EE14  F016         	lfsr	1,___inthi_sp
 28469                           
 28470                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 28471  01924C  0100               	movlb	0	; () banked
 28472  01924E  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28473  019250  11BF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28474  019252  11C0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28475  019254  B4D8               	btfsc	status,2,c
 28476  019256  0011               	retfie		f
 28477                           
 28478                           ; BSR set to: 0
 28479                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 28480  019258  D801               	call	i2u910_48
 28481  01925A  0011               	retfie		f
 28482  01925C                     i2u910_48:
 28483  01925C  0005               	push	
 28484  01925E  6EFA               	movwf	pclath,c
 28485  019260  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28486  019262  6EFD               	movwf	tosl,c
 28487  019264  51BF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28488  019266  6EFE               	movwf	tosh,c
 28489  019268  51C0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28490  01926A  6EFF               	movwf	tosu,c
 28491  01926C  50FA               	movf	pclath,w,c
 28492  01926E  0012               	return		;indir
 28493  019270                     __end_of_UART2_tx_vect_isr:
 28494                           	opt callstack 0
 28495                           
 28496 ;; *************** function _UART2_Transmit_ISR *****************
 28497 ;; Defined at:
 28498 ;;		line 213 in file "mcc_generated_files/uart2.c"
 28499 ;; Parameters:    Size  Location     Type
 28500 ;;		None
 28501 ;; Auto vars:     Size  Location     Type
 28502 ;;		None
 28503 ;; Return value:  Size  Location     Type
 28504 ;;                  1  [STACK] void 
 28505 ;; Registers used:
 28506 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28507 ;; Tracked objects:
 28508 ;;		On entry : 3F/0
 28509 ;;		On exit  : 3B/39
 28510 ;;		Unchanged: 0/0
 28511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28516 ;;Total ram usage:        0 bytes
 28517 ;; Hardware stack levels used:    1
 28518 ;; This function calls:
 28519 ;;		Nothing
 28520 ;; This function is called by:
 28521 ;;		_UART2_Initialize
 28522 ;;		_UART2_tx_vect_isr
 28523 ;; This function uses a reentrant model
 28524 ;;
 28525                           
 28526                           	psect	text152
 28527  018EF8                     __ptext152:
 28528                           	opt callstack 0
 28529  018EF8                     _UART2_Transmit_ISR:
 28530                           	opt callstack 12
 28531                           
 28532                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 28533                           
 28534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28535                           ;incstack = 0
 28536  018EF8  0E40               	movlw	64
 28537  018EFA  601C               	cpfslt	_uart2TxBufferRemaining^0,c
 28538  018EFC  D010               	goto	l703
 28539                           
 28540                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 28541  018EFE  0E54               	movlw	low _uart2TxBuffer
 28542  018F00  241D               	addwf	_uart2TxTail^0,w,c	;volatile
 28543  018F02  6ED9               	movwf	fsr2l,c
 28544  018F04  6ADA               	clrf	fsr2h,c
 28545  018F06  0E03               	movlw	high _uart2TxBuffer
 28546  018F08  22DA               	addwfc	fsr2h,f,c
 28547  018F0A  50DF               	movf	indf2,w,c
 28548  018F0C  013D               	movlb	61	; () banked
 28549  018F0E  6FD2               	movwf	210,b	;volatile
 28550                           
 28551                           ; BSR set to: 61
 28552  018F10  2A1D               	incf	_uart2TxTail^0,f,c	;volatile
 28553                           
 28554                           ; BSR set to: 61
 28555                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 28556  018F12  0E3F               	movlw	63
 28557  018F14  641D               	cpfsgt	_uart2TxTail^0,c
 28558  018F16  D001               	goto	l9317
 28559                           
 28560                           ; BSR set to: 61
 28561                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 28562  018F18  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 28563  018F1A                     l9317:
 28564                           
 28565                           ; BSR set to: 61
 28566                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 28567  018F1A  2A1C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 28568                           
 28569                           ;mcc_generated_files/uart2.c: 224:     }
 28570  018F1C  0012               	return	
 28571  018F1E                     l703:
 28572                           
 28573                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 28574  018F1E  0139               	movlb	57	; () banked
 28575  018F20  9796               	bcf	150,3,b	;volatile
 28576                           
 28577                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28578  018F22  0012               	return		;funcret
 28579  018F24                     __end_of_UART2_Transmit_ISR:
 28580                           	opt callstack 0
 28581                           
 28582 ;; *************** function _UART2_rx_vect_isr *****************
 28583 ;; Defined at:
 28584 ;;		line 203 in file "mcc_generated_files/uart2.c"
 28585 ;; Parameters:    Size  Location     Type
 28586 ;;		None
 28587 ;; Auto vars:     Size  Location     Type
 28588 ;;		None
 28589 ;; Return value:  Size  Location     Type
 28590 ;;                  1    wreg      void 
 28591 ;; Registers used:
 28592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28593 ;; Tracked objects:
 28594 ;;		On entry : 0/0
 28595 ;;		On exit  : 0/0
 28596 ;;		Unchanged: 0/0
 28597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28602 ;;Total ram usage:        0 bytes
 28603 ;; Hardware stack levels used:    1
 28604 ;; Hardware stack levels required when called:    1
 28605 ;; This function calls:
 28606 ;;		Absolute function
 28607 ;;		_UART2_Receive_ISR
 28608 ;; This function is called by:
 28609 ;;		Interrupt level 2
 28610 ;; This function uses a non-reentrant model
 28611 ;;
 28612                           
 28613                           	psect	text153
 28614  019270                     __ptext153:
 28615                           	opt callstack 0
 28616  019270                     _UART2_rx_vect_isr:
 28617                           	opt callstack 12
 28618                           
 28619                           ;incstack = 0
 28620  019270  EE14  F016         	lfsr	1,___inthi_sp
 28621                           
 28622                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 28623  019274  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28624  019276  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 28625  019278  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 28626  01927A  B4D8               	btfsc	status,2,c
 28627  01927C  0011               	retfie		f
 28628                           
 28629                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 28630  01927E  D801               	call	i2u912_48
 28631  019280  0011               	retfie		f
 28632  019282                     i2u912_48:
 28633  019282  0005               	push	
 28634  019284  6EFA               	movwf	pclath,c
 28635  019286  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28636  019288  6EFD               	movwf	tosl,c
 28637  01928A  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 28638  01928C  6EFE               	movwf	tosh,c
 28639  01928E  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 28640  019290  6EFF               	movwf	tosu,c
 28641  019292  50FA               	movf	pclath,w,c
 28642  019294  0012               	return		;indir
 28643  019296                     __end_of_UART2_rx_vect_isr:
 28644                           	opt callstack 0
 28645                           
 28646 ;; *************** function _UART2_Receive_ISR *****************
 28647 ;; Defined at:
 28648 ;;		line 233 in file "mcc_generated_files/uart2.c"
 28649 ;; Parameters:    Size  Location     Type
 28650 ;;		None
 28651 ;; Auto vars:     Size  Location     Type
 28652 ;;		None
 28653 ;; Return value:  Size  Location     Type
 28654 ;;                  1  [STACK] void 
 28655 ;; Registers used:
 28656 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28657 ;; Tracked objects:
 28658 ;;		On entry : 0/0
 28659 ;;		On exit  : 0/0
 28660 ;;		Unchanged: 0/0
 28661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28666 ;;Total ram usage:        0 bytes
 28667 ;; Hardware stack levels used:    1
 28668 ;; This function calls:
 28669 ;;		Nothing
 28670 ;; This function is called by:
 28671 ;;		_UART2_Initialize
 28672 ;;		_UART2_rx_vect_isr
 28673 ;; This function uses a reentrant model
 28674 ;;
 28675                           
 28676                           	psect	text154
 28677  019442                     __ptext154:
 28678                           	opt callstack 0
 28679  019442                     _UART2_Receive_ISR:
 28680                           	opt callstack 12
 28681                           
 28682                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 28683                           
 28684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28685                           ;incstack = 0
 28686  019442  0E00               	movlw	low _uart2RxBuffer
 28687  019444  241B               	addwf	_uart2RxHead^0,w,c	;volatile
 28688  019446  6ED9               	movwf	fsr2l,c
 28689  019448  6ADA               	clrf	fsr2h,c
 28690  01944A  0E06               	movlw	high _uart2RxBuffer
 28691  01944C  22DA               	addwfc	fsr2h,f,c
 28692  01944E  006F F743 FFDF     	movff	15824,indf2	;volatile
 28693  019454  2A1B               	incf	_uart2RxHead^0,f,c	;volatile
 28694                           
 28695                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 28696  019456  281B               	incf	_uart2RxHead^0,w,c
 28697  019458  B4D8               	btfsc	status,2,c
 28698                           
 28699                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 28700  01945A  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 28701                           
 28702                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 28703  01945C  2A19               	incf	_uart2RxCount^0,f,c	;volatile
 28704                           
 28705                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28706  01945E  0012               	return		;funcret
 28707  019460                     __end_of_UART2_Receive_ISR:
 28708                           	opt callstack 0
 28709                           
 28710 ;; *************** function _TMR6_ISR *****************
 28711 ;; Defined at:
 28712 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 28713 ;; Parameters:    Size  Location     Type
 28714 ;;		None
 28715 ;; Auto vars:     Size  Location     Type
 28716 ;;		None
 28717 ;; Return value:  Size  Location     Type
 28718 ;;                  1    wreg      void 
 28719 ;; Registers used:
 28720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28721 ;; Tracked objects:
 28722 ;;		On entry : 0/0
 28723 ;;		On exit  : 0/0
 28724 ;;		Unchanged: 0/0
 28725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28729 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28730 ;;Total ram usage:        1 bytes
 28731 ;; Hardware stack levels used:    1
 28732 ;; Hardware stack levels required when called:    2
 28733 ;; This function calls:
 28734 ;;		_TMR6_CallBack
 28735 ;; This function is called by:
 28736 ;;		Interrupt level 2
 28737 ;; This function uses a non-reentrant model
 28738 ;;
 28739                           
 28740                           	psect	text155
 28741  019498                     __ptext155:
 28742                           	opt callstack 0
 28743  019498                     _TMR6_ISR:
 28744                           	opt callstack 11
 28745                           
 28746                           ;incstack = 0
 28747  019498  0060  F094  F04A   	movff	btemp,??_TMR6_ISR
 28748  01949E  EE14  F016         	lfsr	1,___inthi_sp
 28749                           
 28750                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 28751  0194A2  0139               	movlb	57	; () banked
 28752  0194A4  91A9               	bcf	169,0,b	;volatile
 28753                           
 28754                           ; BSR set to: 57
 28755                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 28756  0194A6  EC81  F0C9         	call	_TMR6_CallBack	;wreg free
 28757  0194AA  0060  F128  F025   	movff	??_TMR6_ISR,btemp
 28758  0194B0  0011               	retfie		f
 28759  0194B2                     __end_of_TMR6_ISR:
 28760                           	opt callstack 0
 28761                           
 28762 ;; *************** function _TMR6_CallBack *****************
 28763 ;; Defined at:
 28764 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 28765 ;; Parameters:    Size  Location     Type
 28766 ;;		None
 28767 ;; Auto vars:     Size  Location     Type
 28768 ;;		None
 28769 ;; Return value:  Size  Location     Type
 28770 ;;                  1  [STACK] void 
 28771 ;; Registers used:
 28772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28773 ;; Tracked objects:
 28774 ;;		On entry : 3F/39
 28775 ;;		On exit  : 0/0
 28776 ;;		Unchanged: 0/0
 28777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28782 ;;Total ram usage:        0 bytes
 28783 ;; Hardware stack levels used:    1
 28784 ;; Hardware stack levels required when called:    1
 28785 ;; This function calls:
 28786 ;;		Absolute function
 28787 ;;		_TMR6_DefaultInterruptHandler
 28788 ;; This function is called by:
 28789 ;;		_TMR6_ISR
 28790 ;; This function uses a reentrant model
 28791 ;;
 28792                           
 28793                           	psect	text156
 28794  019302                     __ptext156:
 28795                           	opt callstack 0
 28796  019302                     _TMR6_CallBack:
 28797                           	opt callstack 11
 28798                           
 28799                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 28800                           
 28801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28802                           ;incstack = 0
 28803  019302  0100               	movlb	0	; () banked
 28804  019304  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28805  019306  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28806  019308  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28807  01930A  B4D8               	btfsc	status,2,c
 28808  01930C  0012               	return	
 28809                           
 28810                           ; BSR set to: 0
 28811                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 28812  01930E  D801               	call	u875_48
 28813  019310  0012               	return	
 28814  019312                     u875_48:
 28815  019312  0005               	push	
 28816  019314  6EFA               	movwf	pclath,c
 28817  019316  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28818  019318  6EFD               	movwf	tosl,c
 28819  01931A  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28820  01931C  6EFE               	movwf	tosh,c
 28821  01931E  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28822  019320  6EFF               	movwf	tosu,c
 28823  019322  50FA               	movf	pclath,w,c
 28824  019324  0012               	return		;indir
 28825  019326                     __end_of_TMR6_CallBack:
 28826                           	opt callstack 0
 28827                           
 28828 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 28829 ;; Defined at:
 28830 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 28831 ;; Parameters:    Size  Location     Type
 28832 ;;		None
 28833 ;; Auto vars:     Size  Location     Type
 28834 ;;  i               1  [STACK] unsigned char 
 28835 ;; Return value:  Size  Location     Type
 28836 ;;                  1  [STACK] void 
 28837 ;; Registers used:
 28838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28839 ;; Tracked objects:
 28840 ;;		On entry : 3F/0
 28841 ;;		On exit  : 0/0
 28842 ;;		Unchanged: 0/0
 28843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28848 ;;Total ram usage:        0 bytes
 28849 ;; Hardware stack levels used:    1
 28850 ;; This function calls:
 28851 ;;		Nothing
 28852 ;; This function is called by:
 28853 ;;		_TMR6_Initialize
 28854 ;;		_TMR6_CallBack
 28855 ;; This function uses a reentrant model
 28856 ;;
 28857                           
 28858                           	psect	text157
 28859  0188AE                     __ptext157:
 28860                           	opt callstack 0
 28861  0188AE                     _TMR6_DefaultInterruptHandler:
 28862                           	opt callstack 0
 28863                           
 28864                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28865  0188AE  52E6               	movf	postinc1,f,c
 28866                           
 28867                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 28868                           ;stkvar	_i @ sp[(-1)+0]
 28869                           
 28870                           ;incstack = 0
 28871  0188B0  0EFF               	movlw	-1
 28872  0188B2  6AE3               	clrf	plusw1,c
 28873  0188B4                     l8943:
 28874                           
 28875                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 28876                           ;stkvar	_i @ sp[(-1)+0]
 28877  0188B4  0EFF               	movlw	-1
 28878  0188B6  50E3               	movf	plusw1,w,c
 28879  0188B8  0D02               	mullw	2
 28880  0188BA  0EB5               	movlw	low _tickCount
 28881  0188BC  24F3               	addwf	243,w,c
 28882  0188BE  6ED9               	movwf	fsr2l,c
 28883  0188C0  0E01               	movlw	high _tickCount
 28884  0188C2  20F4               	addwfc	prodh,w,c
 28885  0188C4  6EDA               	movwf	fsr2h,c
 28886  0188C6  50DE               	movf	postinc2,w,c
 28887  0188C8  10DE               	iorwf	postinc2,w,c
 28888  0188CA  B4D8               	btfsc	status,2,c
 28889  0188CC  D00C               	goto	l8947
 28890                           
 28891                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 28892                           ;stkvar	_i @ sp[(-1)+0]
 28893  0188CE  0EFF               	movlw	-1
 28894  0188D0  50E3               	movf	plusw1,w,c
 28895  0188D2  0D02               	mullw	2
 28896  0188D4  0EB5               	movlw	low _tickCount
 28897  0188D6  24F3               	addwf	243,w,c
 28898  0188D8  6ED9               	movwf	fsr2l,c
 28899  0188DA  0E01               	movlw	high _tickCount
 28900  0188DC  20F4               	addwfc	prodh,w,c
 28901  0188DE  6EDA               	movwf	fsr2h,c
 28902  0188E0  06DE               	decf	postinc2,f,c
 28903  0188E2  0E00               	movlw	0
 28904  0188E4  5ADD               	subwfb	postdec2,f,c
 28905  0188E6                     l8947:
 28906                           
 28907                           ;mcc_generated_files/tmr6.c: 207:  }
 28908                           ;stkvar	_i @ sp[(-1)+0]
 28909  0188E6  0EFF               	movlw	-1
 28910  0188E8  2AE3               	incf	plusw1,f,c
 28911                           
 28912                           ;stkvar	_i @ sp[(-1)+0]
 28913  0188EA  0EFF               	movlw	-1
 28914  0188EC  006F FF8C  F025    	movff	plusw1,btemp
 28915  0188F2  0E0B               	movlw	11
 28916  0188F4  6425               	cpfsgt	btemp^0,c
 28917  0188F6  D7DE               	goto	l8943
 28918                           
 28919                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28920  0188F8  52E5               	movf	postdec1,f,c
 28921  0188FA  0012               	return		;funcret
 28922  0188FC                     __end_of_TMR6_DefaultInterruptHandler:
 28923                           	opt callstack 0
 28924                           
 28925 ;; *************** function _DMA1_DMASCNT_ISR *****************
 28926 ;; Defined at:
 28927 ;;		line 126 in file "mcc_generated_files/dma1.c"
 28928 ;; Parameters:    Size  Location     Type
 28929 ;;		None
 28930 ;; Auto vars:     Size  Location     Type
 28931 ;;		None
 28932 ;; Return value:  Size  Location     Type
 28933 ;;                  1    wreg      void 
 28934 ;; Registers used:
 28935 ;;		None
 28936 ;; Tracked objects:
 28937 ;;		On entry : 0/0
 28938 ;;		On exit  : 3F/0
 28939 ;;		Unchanged: 0/0
 28940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28945 ;;Total ram usage:        0 bytes
 28946 ;; Hardware stack levels used:    1
 28947 ;; This function calls:
 28948 ;;		Nothing
 28949 ;; This function is called by:
 28950 ;;		Interrupt level 2
 28951 ;; This function uses a non-reentrant model
 28952 ;;
 28953                           
 28954                           	psect	text158
 28955  019598                     __ptext158:
 28956                           	opt callstack 0
 28957  019598                     _DMA1_DMASCNT_ISR:
 28958                           	opt callstack 13
 28959                           
 28960                           ;incstack = 0
 28961  019598  EE14  F016         	lfsr	1,___inthi_sp
 28962                           
 28963                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 28964  01959C  0139               	movlb	57	; () banked
 28965  01959E  91A2               	bcf	162,0,b	;volatile
 28966                           
 28967                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 28968  0195A0  0100               	movlb	0	; () banked
 28969  0195A2  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 28970                           
 28971                           ; BSR set to: 0
 28972  0195A4  0011               	retfie		f
 28973  0195A6                     __end_of_DMA1_DMASCNT_ISR:
 28974                           	opt callstack 0
 28975                           
 28976 ;; *************** function _DMA1_DMADCNT_ISR *****************
 28977 ;; Defined at:
 28978 ;;		line 134 in file "mcc_generated_files/dma1.c"
 28979 ;; Parameters:    Size  Location     Type
 28980 ;;		None
 28981 ;; Auto vars:     Size  Location     Type
 28982 ;;		None
 28983 ;; Return value:  Size  Location     Type
 28984 ;;                  1    wreg      void 
 28985 ;; Registers used:
 28986 ;;		None
 28987 ;; Tracked objects:
 28988 ;;		On entry : 0/0
 28989 ;;		On exit  : 3F/39
 28990 ;;		Unchanged: 0/0
 28991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28996 ;;Total ram usage:        0 bytes
 28997 ;; Hardware stack levels used:    1
 28998 ;; This function calls:
 28999 ;;		Nothing
 29000 ;; This function is called by:
 29001 ;;		Interrupt level 2
 29002 ;; This function uses a non-reentrant model
 29003 ;;
 29004                           
 29005                           	psect	text159
 29006  0195B0                     __ptext159:
 29007                           	opt callstack 0
 29008  0195B0                     _DMA1_DMADCNT_ISR:
 29009                           	opt callstack 13
 29010                           
 29011                           ; BSR set to: 0
 29012                           ;incstack = 0
 29013  0195B0  EE14  F016         	lfsr	1,___inthi_sp
 29014                           
 29015                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 29016  0195B4  0139               	movlb	57	; () banked
 29017  0195B6  93A2               	bcf	162,1,b	;volatile
 29018                           
 29019                           ; BSR set to: 57
 29020  0195B8  0011               	retfie		f
 29021  0195BA                     __end_of_DMA1_DMADCNT_ISR:
 29022                           	opt callstack 0
 29023                           
 29024 ;; *************** function _DMA1_DMAA_ISR *****************
 29025 ;; Defined at:
 29026 ;;		line 144 in file "mcc_generated_files/dma1.c"
 29027 ;; Parameters:    Size  Location     Type
 29028 ;;		None
 29029 ;; Auto vars:     Size  Location     Type
 29030 ;;		None
 29031 ;; Return value:  Size  Location     Type
 29032 ;;                  1    wreg      void 
 29033 ;; Registers used:
 29034 ;;		None
 29035 ;; Tracked objects:
 29036 ;;		On entry : 0/0
 29037 ;;		On exit  : 3F/39
 29038 ;;		Unchanged: 0/0
 29039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29044 ;;Total ram usage:        0 bytes
 29045 ;; Hardware stack levels used:    1
 29046 ;; This function calls:
 29047 ;;		Nothing
 29048 ;; This function is called by:
 29049 ;;		Interrupt level 2
 29050 ;; This function uses a non-reentrant model
 29051 ;;
 29052                           
 29053                           	psect	text160
 29054  0195BC                     __ptext160:
 29055                           	opt callstack 0
 29056  0195BC                     _DMA1_DMAA_ISR:
 29057                           	opt callstack 13
 29058                           
 29059                           ; BSR set to: 57
 29060                           ;incstack = 0
 29061  0195BC  EE14  F016         	lfsr	1,___inthi_sp
 29062                           
 29063                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 29064  0195C0  0139               	movlb	57	; () banked
 29065  0195C2  97A2               	bcf	162,3,b	;volatile
 29066                           
 29067                           ; BSR set to: 57
 29068  0195C4  0011               	retfie		f
 29069  0195C6                     __end_of_DMA1_DMAA_ISR:
 29070                           	opt callstack 0
 29071                           
 29072 ;; *************** function _DMA1_DMAOR_ISR *****************
 29073 ;; Defined at:
 29074 ;;		line 155 in file "mcc_generated_files/dma1.c"
 29075 ;; Parameters:    Size  Location     Type
 29076 ;;		None
 29077 ;; Auto vars:     Size  Location     Type
 29078 ;;		None
 29079 ;; Return value:  Size  Location     Type
 29080 ;;                  1    wreg      void 
 29081 ;; Registers used:
 29082 ;;		None
 29083 ;; Tracked objects:
 29084 ;;		On entry : 0/0
 29085 ;;		On exit  : 3F/39
 29086 ;;		Unchanged: 0/0
 29087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29092 ;;Total ram usage:        0 bytes
 29093 ;; Hardware stack levels used:    1
 29094 ;; This function calls:
 29095 ;;		Nothing
 29096 ;; This function is called by:
 29097 ;;		Interrupt level 2
 29098 ;; This function uses a non-reentrant model
 29099 ;;
 29100                           
 29101                           	psect	text161
 29102  0195C8                     __ptext161:
 29103                           	opt callstack 0
 29104  0195C8                     _DMA1_DMAOR_ISR:
 29105                           	opt callstack 13
 29106                           
 29107                           ; BSR set to: 57
 29108                           ;incstack = 0
 29109  0195C8  EE14  F016         	lfsr	1,___inthi_sp
 29110                           
 29111                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 29112  0195CC  0139               	movlb	57	; () banked
 29113  0195CE  95A2               	bcf	162,2,b	;volatile
 29114                           
 29115                           ; BSR set to: 57
 29116  0195D0  0011               	retfie		f
 29117  0195D2                     __end_of_DMA1_DMAOR_ISR:
 29118                           	opt callstack 0
 29119                           
 29120                           ;
 29121                           ; Interrupt Vector Table @ 0x8
 29122                           ;
 29123                           
 29124                           	psect	ivt0x8
 29125  000008                     __pivt0x8:
 29126                           	opt callstack 0
 29127  000008                     ivt0x8_base:
 29128                           	opt callstack 0
 29129                           
 29130                           ; Vector 0 : SWINT
 29131  000008  6585               	dw	_Default_ISR shr (0+2)
 29132                           
 29133                           ; Vector 1 : HLVD
 29134  00000A  6585               	dw	_Default_ISR shr (0+2)
 29135                           
 29136                           ; Vector 2 : OSF
 29137  00000C  6585               	dw	_Default_ISR shr (0+2)
 29138                           
 29139                           ; Vector 3 : CSW
 29140  00000E  6585               	dw	_Default_ISR shr (0+2)
 29141                           
 29142                           ; Vector 4 : NVM
 29143  000010  6585               	dw	_Default_ISR shr (0+2)
 29144                           
 29145                           ; Vector 5 : SCAN
 29146  000012  6585               	dw	_Default_ISR shr (0+2)
 29147                           
 29148                           ; Vector 6 : CRC
 29149  000014  6585               	dw	_Default_ISR shr (0+2)
 29150                           
 29151                           ; Vector 7 : IOC
 29152  000016  6585               	dw	_Default_ISR shr (0+2)
 29153                           
 29154                           ; Vector 8 : INT0
 29155  000018  6562               	dw	_INT0_ISR shr (0+2)
 29156                           
 29157                           ; Vector 9 : ZCD
 29158  00001A  6585               	dw	_Default_ISR shr (0+2)
 29159                           
 29160                           ; Vector 10 : AD
 29161  00001C  63A8               	dw	_ADCC_ISR shr (0+2)
 29162                           
 29163                           ; Vector 11 : ADT
 29164  00001E  6110               	dw	_ADCC_ThresholdISR shr (0+2)
 29165                           
 29166                           ; Vector 12 : CMP1
 29167  000020  6585               	dw	_Default_ISR shr (0+2)
 29168                           
 29169                           ; Vector 13 : SMT1
 29170  000022  6585               	dw	_Default_ISR shr (0+2)
 29171                           
 29172                           ; Vector 14 : SMT1PRA
 29173  000024  6585               	dw	_Default_ISR shr (0+2)
 29174                           
 29175                           ; Vector 15 : SMT1PRW
 29176  000026  6585               	dw	_Default_ISR shr (0+2)
 29177                           
 29178                           ; Vector 16 : DMA1SCNT
 29179  000028  6566               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 29180                           
 29181                           ; Vector 17 : DMA1DCNT
 29182  00002A  656C               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 29183                           
 29184                           ; Vector 18 : DMA1OR
 29185  00002C  6572               	dw	_DMA1_DMAOR_ISR shr (0+2)
 29186                           
 29187                           ; Vector 19 : DMA1A
 29188  00002E  656F               	dw	_DMA1_DMAA_ISR shr (0+2)
 29189                           
 29190                           ; Vector 20 : SPI1RX
 29191  000030  6585               	dw	_Default_ISR shr (0+2)
 29192                           
 29193                           ; Vector 21 : SPI1TX
 29194  000032  6585               	dw	_Default_ISR shr (0+2)
 29195                           
 29196                           ; Vector 22 : SPI1
 29197  000034  6585               	dw	_Default_ISR shr (0+2)
 29198                           
 29199                           ; Vector 23 : I2C1RX
 29200  000036  6585               	dw	_Default_ISR shr (0+2)
 29201                           
 29202                           ; Vector 24 : I2C1TX
 29203  000038  6585               	dw	_Default_ISR shr (0+2)
 29204                           
 29205                           ; Vector 25 : I2C1
 29206  00003A  6585               	dw	_Default_ISR shr (0+2)
 29207                           
 29208                           ; Vector 26 : I2C1E
 29209  00003C  6585               	dw	_Default_ISR shr (0+2)
 29210                           
 29211                           ; Vector 27 : U1RX
 29212  00003E  6488               	dw	_UART1_rx_vect_isr shr (0+2)
 29213                           
 29214                           ; Vector 28 : U1TX
 29215  000040  647E               	dw	_UART1_tx_vect_isr shr (0+2)
 29216                           
 29217                           ; Vector 29 : U1E
 29218  000042  6585               	dw	_Default_ISR shr (0+2)
 29219                           
 29220                           ; Vector 30 : U1
 29221  000044  6585               	dw	_Default_ISR shr (0+2)
 29222                           
 29223                           ; Vector 31 : TMR0
 29224  000046  6585               	dw	_Default_ISR shr (0+2)
 29225                           
 29226                           ; Vector 32 : TMR1
 29227  000048  6585               	dw	_Default_ISR shr (0+2)
 29228                           
 29229                           ; Vector 33 : TMR1G
 29230  00004A  6585               	dw	_Default_ISR shr (0+2)
 29231                           
 29232                           ; Vector 34 : TMR2
 29233  00004C  6585               	dw	_Default_ISR shr (0+2)
 29234                           
 29235                           ; Vector 35 : CCP1
 29236  00004E  6585               	dw	_Default_ISR shr (0+2)
 29237                           
 29238                           ; Vector 36 : Undefined
 29239  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 29240                           
 29241                           ; Vector 37 : NCO1
 29242  000052  6585               	dw	_Default_ISR shr (0+2)
 29243                           
 29244                           ; Vector 38 : CWG1
 29245  000054  6585               	dw	_Default_ISR shr (0+2)
 29246                           
 29247                           ; Vector 39 : CLC1
 29248  000056  6585               	dw	_Default_ISR shr (0+2)
 29249                           
 29250                           ; Vector 40 : INT1
 29251  000058  630B               	dw	_INT1_ISR shr (0+2)
 29252                           
 29253                           ; Vector 41 : CMP2
 29254  00005A  6585               	dw	_Default_ISR shr (0+2)
 29255                           
 29256                           ; Vector 42 : DMA2SCNT
 29257  00005C  6585               	dw	_Default_ISR shr (0+2)
 29258                           
 29259                           ; Vector 43 : DMA2DCNT
 29260  00005E  6585               	dw	_Default_ISR shr (0+2)
 29261                           
 29262                           ; Vector 44 : DMA2OR
 29263  000060  6585               	dw	_Default_ISR shr (0+2)
 29264                           
 29265                           ; Vector 45 : DMA2A
 29266  000062  6585               	dw	_Default_ISR shr (0+2)
 29267                           
 29268                           ; Vector 46 : I2C2RX
 29269  000064  6585               	dw	_Default_ISR shr (0+2)
 29270                           
 29271                           ; Vector 47 : I2C2TX
 29272  000066  6585               	dw	_Default_ISR shr (0+2)
 29273                           
 29274                           ; Vector 48 : I2C2
 29275  000068  6585               	dw	_Default_ISR shr (0+2)
 29276                           
 29277                           ; Vector 49 : I2C2E
 29278  00006A  6585               	dw	_Default_ISR shr (0+2)
 29279                           
 29280                           ; Vector 50 : U2RX
 29281  00006C  649C               	dw	_UART2_rx_vect_isr shr (0+2)
 29282                           
 29283                           ; Vector 51 : U2TX
 29284  00006E  6492               	dw	_UART2_tx_vect_isr shr (0+2)
 29285                           
 29286                           ; Vector 52 : U2E
 29287  000070  6585               	dw	_Default_ISR shr (0+2)
 29288                           
 29289                           ; Vector 53 : U2
 29290  000072  6585               	dw	_Default_ISR shr (0+2)
 29291                           
 29292                           ; Vector 54 : TMR3
 29293  000074  5E2E               	dw	_TMR3_ISR shr (0+2)
 29294                           
 29295                           ; Vector 55 : TMR3G
 29296  000076  6585               	dw	_Default_ISR shr (0+2)
 29297                           
 29298                           ; Vector 56 : TMR4
 29299  000078  6585               	dw	_Default_ISR shr (0+2)
 29300                           
 29301                           ; Vector 57 : CCP2
 29302  00007A  6585               	dw	_Default_ISR shr (0+2)
 29303                           
 29304                           ; Vector 58 : Undefined
 29305  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 29306                           
 29307                           ; Vector 59 : CWG2
 29308  00007E  6585               	dw	_Default_ISR shr (0+2)
 29309                           
 29310                           ; Vector 60 : CLC2
 29311  000080  6585               	dw	_Default_ISR shr (0+2)
 29312                           
 29313                           ; Vector 61 : INT2
 29314  000082  6585               	dw	_Default_ISR shr (0+2)
 29315                           
 29316                           ; Vector 62 : Undefined
 29317  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 29318                           
 29319                           ; Vector 63 : Undefined
 29320  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 29321                           
 29322                           ; Vector 64 : Undefined
 29323  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 29324                           
 29325                           ; Vector 65 : Undefined
 29326  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 29327                           
 29328                           ; Vector 66 : Undefined
 29329  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 29330                           
 29331                           ; Vector 67 : Undefined
 29332  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 29333                           
 29334                           ; Vector 68 : Undefined
 29335  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 29336                           
 29337                           ; Vector 69 : Undefined
 29338  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 29339                           
 29340                           ; Vector 70 : TMR5
 29341  000094  61EC               	dw	_TMR5_ISR shr (0+2)
 29342                           
 29343                           ; Vector 71 : TMR5G
 29344  000096  6585               	dw	_Default_ISR shr (0+2)
 29345                           
 29346                           ; Vector 72 : TMR6
 29347  000098  6526               	dw	_TMR6_ISR shr (0+2)
 29348                           
 29349                           ; Vector 73 : CCP3
 29350  00009A  6585               	dw	_Default_ISR shr (0+2)
 29351                           
 29352                           ; Vector 74 : CWG3
 29353  00009C  6585               	dw	_Default_ISR shr (0+2)
 29354                           
 29355                           ; Vector 75 : CLC3
 29356  00009E  6585               	dw	_Default_ISR shr (0+2)
 29357                           
 29358                           ; Vector 76 : Undefined
 29359  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 29360                           
 29361                           ; Vector 77 : Undefined
 29362  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 29363                           
 29364                           ; Vector 78 : Undefined
 29365  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 29366                           
 29367                           ; Vector 79 : Undefined
 29368  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 29369                           
 29370                           ; Vector 80 : CCP4
 29371  0000A8  6585               	dw	_Default_ISR shr (0+2)
 29372                           
 29373                           ; Vector 81 : CLC4
 29374  0000AA  6585               	dw	_Default_ISR shr (0+2)
 29375  0000AC                     ivt0x8_undefint:
 29376                           	opt callstack 0
 29377  0000AC  00FF               	reset	
 29378                           
 29379                           	psect	text162
 29380  000000                     __ptext162:
 29381                           	opt callstack 0
 29382                           
 29383                           	psect	rparam
 29384  0000                     
 29385                           	psect	temp
 29386  000025                     btemp:
 29387                           	opt callstack 0
 29388  000025                     	ds	32
 29389  0000                     wtemp0	set	btemp
 29390  0000                     wtemp1	set	btemp+2
 29391  0000                     wtemp2	set	btemp+4
 29392  0000                     wtemp3	set	btemp+6
 29393  0000                     wtemp4	set	btemp+8
 29394  0000                     wtemp5	set	btemp+10
 29395  0000                     wtemp8	set	btemp+1
 29396  0000                     ttemp0	set	btemp
 29397  0000                     ttemp1	set	btemp+3
 29398  0000                     ttemp2	set	btemp+6
 29399  0000                     ttemp3	set	btemp+9
 29400  0000                     ttemp5	set	btemp+1
 29401  0000                     ttemp6	set	btemp+4
 29402  0000                     ttemp7	set	btemp+8
 29403  0000                     ltemp0	set	btemp
 29404  0000                     ltemp1	set	btemp+4
 29405  0000                     ltemp2	set	btemp+8
 29406  0000                     lltemp0	set	btemp
 29407  0000                     lltemp1	set	btemp+8
 29408  0000                     lltemp2	set	btemp+16
 29409  0000                     lltemp3	set	btemp+24
 29410                           tosu	equ	0x3FFF
 29411                           tosh	equ	0x3FFE
 29412                           tosl	equ	0x3FFD
 29413                           stkptr	equ	0x3FFC
 29414                           pclatu	equ	0x3FFB
 29415                           pclath	equ	0x3FFA
 29416                           pcl	equ	0x3FF9
 29417                           tblptru	equ	0x3FF8
 29418                           tblptrh	equ	0x3FF7
 29419                           tblptrl	equ	0x3FF6
 29420                           tablat	equ	0x3FF5
 29421                           prodh	equ	0x3FF4
 29422                           prodl	equ	0x3FF3
 29423                           indf0	equ	0x3FEF
 29424                           postinc0	equ	0x3FEE
 29425                           postdec0	equ	0x3FED
 29426                           preinc0	equ	0x3FEC
 29427                           plusw0	equ	0x3FEB
 29428                           fsr0h	equ	0x3FEA
 29429                           fsr0l	equ	0x3FE9
 29430                           wreg	equ	0x3FE8
 29431                           indf1	equ	0x3FE7
 29432                           postinc1	equ	0x3FE6
 29433                           postdec1	equ	0x3FE5
 29434                           preinc1	equ	0x3FE4
 29435                           plusw1	equ	0x3FE3
 29436                           fsr1h	equ	0x3FE2
 29437                           fsr1l	equ	0x3FE1
 29438                           bsr	equ	0x3FE0
 29439                           indf2	equ	0x3FDF
 29440                           postinc2	equ	0x3FDE
 29441                           postdec2	equ	0x3FDD
 29442                           preinc2	equ	0x3FDC
 29443                           plusw2	equ	0x3FDB
 29444                           fsr2h	equ	0x3FDA
 29445                           fsr2l	equ	0x3FD9
 29446                           status	equ	0x3FD8


Data Sizes:
    Strings     446
    Constant    144
    Data        423
    BSS         1393
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      50
    BANK0           160      0     153
    BANK1           256     13     226
    BANK2           256      0     252
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5585_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4308tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1934spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1934spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  309323
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166948
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     265
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           13    13      0    4977
                                              0 BANK1     13    13      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0    4917
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           0     0      0    4917
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (19) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (19) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___fltol
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      E2       7       88.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      32       1       79.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     611      58        0.0%
DATA                 0      0     733       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec  6 00:35:21 2019

                     _SPI1_Exchange8bit 93AC                __end_of_set_display_info 9424  
                                     _C 0100                                       _D 06FF  
                                     _H 00F2                                       _P 00A5  
                                     _R 00C3                                       _S 0060  
                                     _T FDB1                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 9106            __end_of_start_switch_handler 93AC  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 95FA                             __CFG_LVP$ON 000000  
                                   l173 951E                                     l703 8F1E  
                                   l583 8EF2                                     l837 93BA  
                                   _GIE 01FE97                                     _abs 898E  
                                   _pad 71CC                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 94CA                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 936A                      _UART1_Transmit_ISR 8ECC  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 9348  
                          __CFG_ZCD$OFF 000000                                    l1030 8BE6  
                                  l2010 4112                                    l1218 8C26  
                                  l2046 123A                                    l3008 70AA  
                                  l2128 56DC                                    l2090 0B1A  
                                  l1346 1F98                                    l1338 1DE0  
                                  l2075 066A                                    l1363 25EC  
                       _timer3ReloadVal 0012                                    l1444 8706  
                                  l1356 2036                                    l1348 1F9E  
                                  l2149 494A                                    l3054 65B8  
                                  l1358 20FC                                    l1359 220A  
                                  l2521 6A80                                    l3082 8260  
                                  l1660 8C86                                    l1580 7DC2  
                                  l1717 9420                                    l3069 82E4  
                                  l1670 61F2                                    l2199 1D78  
                                  l1808 6778                                    l1584 8034  
                                  l2483 7A40                                    l1677 73EC  
                                  l1669 6096                                    l1765 402E  
                                  l2806 3B7E                                    l2494 6BE2  
                  _ADCC_StartConversion 9538                                    l2487 6B0E  
                                  l1599 8CF0                                    l2761 3604  
                                  l2913 89CE                                    l2905 690E  
                                  l2842 2E48                                    l2773 3494  
                                  l1885 815A                                    l1990 7228  
                                  l1894 75F8                                    l2944 5D9A  
                                  l2882 63F0                                    l8003 31F0  
                                  l8013 322C                                    l8007 3210  
                                  l8121 35A4                                    l8041 3314  
                                  l8009 3222                                    l8017 325C  
                                  l8123 35B4                                    l8107 3560  
                                  l8035 32F8                                    l9011 663E  
                                  l8211 3920                                    l8203 38EA  
                                  l8117 358C                                    l8037 330A  
                                  l8045 3346                                    l8213 3932  
                                  l8221 398A                                    l8141 3664  
                                  l6701 4DDE                                    l9101 3DB2  
                                  l8303 26BE                                    l9007 6626  
                                  l7503 5D8A                                    l8151 36BA  
                                  l8321 278C                                    l8305 26C4  
                                  l8129 35E4                                    l8081 34D4  
                                  l8057 341E                                    l8233 39D4  
                                  l8161 3742                                    l8153 36EA  
                                  l6721 4F94                                    l7521 64EE  
                                  l9121 3F60                                    l9113 3E80  
                                  l9201 8114                                    l8323 2792  
                                  l8315 274C                                    l8307 26F4  
                                  l8091 34FC                                    l8075 34B6  
                                  l8067 3478                                    l8059 3444  
                                  l6811 5E8A                                    l6803 5E02  
                                  l8251 3A4A                                    l8227 39B8  
                                  l8219 3986                                    l8171 3798  
                                  l8147 36A4                                    l6715 4EFC  
                                  l8405 2CC8                                    l8333 27E4  
                                  l8325 27C2                                    l8077 34C8  
                                  l9045 8C9C                                    l6645 89BE  
                                  l8261 3ABE                                    l8237 39FA  
                                  l8173 37C8                                    l8501 6A18  
                                  l6725 5002                                    l6717 4F4C  
                                  l9109 3DE4                                    l9215 4576  
                                  l8423 2D88                                    l8095 3502  
                                  l8247 3A44                                    l8167 3782  
                                  l8503 6A2E                                    l6663 68B0  
                                  l7519 6482                                    l6743 8250  
                                  l9127 3FFC                                    l9135 400E  
                                  l9233 4846                                    l9161 6E7A  
                                  l8409 2CCE                                    l8281 3B62  
                                  l8273 3B2A                                    l8193 385A  
                                  l8185 3840                                    l9081 3B8A  
                                  l9219 45B8                                    l9163 6E8A  
                                  l8419 2D42                                    l7483 5C0C  
                                  l7467 5B4A                                    l6595 7E96  
                                  l6771 59AC                                    l6819 5F36  
                                  l6851 6C26                                    l8267 3AFA  
                                  l8179 3806                                    l6659 68AC  
                                  l8531 62D0                                    l9317 8F1A  
                                  l9229 47C8                                    l5893 8C0E  
                                  l9181 6F08                                    l9165 6E90  
                                  l9173 6EAC                                    l8437 2DF6  
                                  l8429 2DB2                                    l7493 5CEE  
                                  l7485 5C24                                    l7477 5BE0  
                                  l7469 5B6C                                    l6597 7EB8  
                                  l6765 5966                                    l6845 6C10  
                                  l6917 71B2                                    l6909 717E  
                                  l6933 7A3E                                    l6925 79C8  
                                  l6941 8964                                    l6669 6906  
                                  l8541 633A                                    l8533 62EE  
                                  l7901 8FD8                                    l9239 48F0  
                                  l9343 8BCE                                    l9167 6E96  
                                  l9175 6ED8                                    l8439 2E10  
                                  l8391 2C58                                    l7487 5C48  
                                  l6783 5A7E                                    l6759 5912  
                                  l6871 6CEC                                    l8279 3B52  
                                  l8455 6B5C                                    l6687 82D4  
                                  l8551 636E                                    l8543 6350  
                                  l8527 62AC                                    l8519 6240  
                                  l9087 3BBA                                    l9169 6EA4  
                                  l8385 2C3C                                    l8297 267E  
                                  l7921 2EA8                                    l6953 889E  
                                  l7489 5C86                                    l6857 6C46  
                                  l6929 7A0A                                    l8449 6ACC  
                                  l8561 63D0                                    l8529 62BA  
                                  l9097 3CD8                                    l8395 2C7E  
                                  l7931 2EFE                                    l6891 70D4  
                                  l8467 6BE0                                    l8459 6BAA  
                                  l8539 631C                                    l9507 75D2  
                                  l9189 6F76                                    l7933 2F2E  
                                  l8493 69EC                                    l8477 696A  
                                  l9461 7B4A                                    l9295 8EEE  
                                  l7951 2FD8                                    l7927 2EE8  
                                  l6879 6D20                                    l6895 70E6  
                                  l8495 6A08                                    l7871 8CFA  
                                  l7945 2F98                                    l9457 7B0C  
                                  l7963 3040                                    l7955 2FEE  
                                  l7939 2F66                                    l6899 70FE  
                                  l7957 301E                                    l7789 900E  
                                  l9485 7506                                    l8943 88B4  
                                  l9591 8332                                    l9479 55E6  
                                  l9585 8322                                    l7993 317E  
                                  l9497 7562                                    l8947 88E6  
                                  l9579 8BA4                                    STR_1 FF60  
                                  STR_2 FFB2                                    STR_3 FFE0  
                                  STR_4 FF4F                                    STR_5 FF71  
                                  STR_6 FFB2                                    STR_7 FFE0  
                                  STR_8 FF3E                                    l8999 65FA  
                                  STR_9 FF93                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5010 4F7A  
                                  _T2PR 003FAB                                    u5100 8E66  
                                  u5015 4F70                                    u5120 590C  
                                  u5040 8ADE                                    u5210 5B08  
                                  u5050 8AE0                                    u5140 5962  
                                  u5300 5F6E                                    u5060 820E  
                                  u5070 8210                                    u5151 596C  
                                  u5160 59A6                                    u5320 5FC0  
                                  u5240 5DFC                                    u5090 8E64  
                                  u5170 59D8                                    _T6PR 003F93  
                                  u4700 7EE6                                    u5260 5E52  
                                  u5500 7A3A                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5190 5AB6  
                                  u5270 5E84                                    u5510 8960  
                                  _PMD2 0039C2                                    u7015 8B1A  
                                  _PMD3 0039C3                                    u5520 887A  
                                  u5280 5EB6                                    u5440 712A  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u7130 31A4                                    u5530 889A  
                                  u4810 89A2                                    u5370 6C72  
                                  u4730 8E34                                    _PMD6 0039C6  
                                  u4707 7ED8                                    _PMD7 0039C7  
                                  u7140 31C4                                    u5460 719E  
                                  u4820 6830                                    u4740 8E36  
                                  u7141 31BE                                    u5390 6D0C  
                                  u4910 8292                                    u4750 8E04  
                                  u8040 6A36                                    u4920 8294  
                                  u4760 8E06                                    u4825 6826  
                                  u7330 34DA                                    u7250 333C  
                                  u6530 5BDC                                    u8130 6364  
                                  u7420 3570                                    u7180 3254  
                                  u8060 6A60                                    u4940 4D76  
                                  u7350 34F4                                    u7190 3274  
                                  u7158 31C6                                    u6550 5D34  
                                  u4870 68FE                                    u4950 4DC2  
                                  u6630 657A                                    u7255 332C  
                                  u6560 5D36                                    u4880 6900  
                                  u7185 3244                                    u4865 68E0  
                                  u4945 4D6C                                    u8170 84B8  
                                  u7290 3466                                    u9300 7030  
                                  u7620 3A3C                                    u7390 3550  
                                  u8270 65D8                                    u4990 4EA2  
                                  u8414 3E9A                                    u8334 3BA4  
                                  u4975 4DFC                                    u8415 3E94  
                                  u8335 3B9E                                    u9400 4064  
                                  u4976 4E02                                    u8440 3EC4  
                                  u4977 4E10                                    u8450 9332  
                                  u9410 4066                                    u8434 3EBC  
                                  u8354 3BD4                                    u8195 84EC  
                                  u7395 3540                                    u4995 4E98  
                                  u8435 3EB6                                    u8355 3BCE  
                                  u8196 84EE                                    u8188 84BA  
                                  u7900 2D9C                                    u9500 43D6  
                                  u7660 3A98                                    u7580 39B2  
                                  u7805 2BF6                                    u9501 43D4  
                                  u9510 43EA                                    u9430 40D6  
                                  u7670 3AD2                                    u8374 3BF6  
                                  u8375 3BF0                                    u7840 2CC0  
                                  u8456 9334                                    u9280 6FB4  
                                  u9520 43EE                                    u7680 3B0E  
                                  u9360 78A4                                    u8608 8148  
                                  u8560 8100                                    u7665 3A88  
                                  u7770 27D2                                    u9450 40E8  
                                  u9610 0194                                    u8394 3DCC  
                                  u8395 3DC6                                    u9540 4404  
                                  u9700 050E                                    u9620 0196  
                                  u9470 4138                                    u8590 8146  
                                  u9367 7896                                    u7880 2D1C  
                                  u9480 4390                                    u9800 0648  
                                  u7785 2966                                    u7890 2D56  
                                  u7970 694A                                    u9730 0562  
                                  u9650 02A6                                    u8578 8102  
                                  _PLLR 01CEE0                                    u7795 2A2E  
                                  u9491 43C0                                    u7980 695E  
                                  u9660 02A8                                    u9580 00DA  
                                  u7885 2D0C                                    u7990 6998  
                                  u7975 6940                                    u9760 05C6  
                                  u7995 698E                                    u9870 0A18  
                                  u9970 0EE4                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 8ECC  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _atoi 5B30                                    _ctoa 815E  
                                  _main 1D82                                    _dtoa 4034  
                                  _nanf 85DA                                    _seed 01CD  
                                  _prec 000C                                    _nout 00C1  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 55F2  
                                  btemp 0025                                    _xtoa 4906  
                __end_of_check_adc_scan 95F2                           ___fpclassifyf 6782  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0016  
             __end_of_SPI1_Exchange8bit 93CA               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 8A60                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 9220                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0045                        __end_of_INT0_ISR 9596  
                      __end_of_INT1_ISR 8C6A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 7DCA           __end_of_OSCILLATOR_Initialize 9524  
                                 l10101 81A8                                   l10051 6FC0  
                                 l10133 414C                                   l10125 4102  
                                 l10205 0146                                   l10063 7F22  
                                 l10215 01EA                                   l10223 0258  
                                 l11031 618E                                   l10073 71F8  
                                 l10137 416A                                   l10313 06F0  
                                 l10233 02FC                                   l10241 032A  
                                 l10217 0216                                   l11017 6066  
                                 l10067 7F60                                   l10083 726E  
                                 l10171 446A                                   l10147 437C  
                                 l10403 0EA2                                   l10219 022C  
                                 l10077 7220                                   l10093 782A  
                                 l10309 06B8                                   l10253 0406  
                                 l11213 259C                                   l11205 2566  
                                 l11133 1FA2                                   l10087 72B8  
                                 l10079 7232                                   l10167 442E  
                                 l10431 0FF0                                   l10415 0F3A  
                                 l10351 0B12                                   l10343 0A48  
                                 l10319 077A                                   l10271 0554  
                                 l10255 0470                                   l10511 577E  
                                 l10503 5712                                   l11207 257E  
                                 l11135 1FD0                                   l10441 1092  
                                 l10353 0B34                                   l10329 0926  
                                 l10249 0396                                   l10185 00AC  
                                 l10521 5834                                   l11217 25C2  
                                 l11081 1DCA                                   l10099 817C  
                                 l10451 10E2                                   l10291 05F6  
                                 l10283 0594                                   l10275 057C  
                                 l10259 04D2                                   l10507 574E  
                                 l11227 2616                                   l11171 234A  
                                 l11155 2028                                   l11147 2004  
                                 l10429 0FD6                                   l10293 0602  
                                 l10277 058E                                   l10197 00F0  
                                 l10525 5870                                   l10517 5808  
                                 l10621 1326                                   l11181 24C6  
                                 l11085 1DE8                                   l10367 0C32  
                                 l10551 49B0                                   l10623 1360  
                                 l11167 22E8                                   l11183 24F0  
                                 l11087 1DFA                                   l11079 1DC2  
                                 l10545 4974                                   l10625 1376  
                                 l10467 119A                                   l10379 0CBA  
                                 l10387 0D24                                   l10395 0D90  
                                 l10539 493A                                   l10643 14A8  
                                 l10811 7CA0                                   l10741 1CA6  
                                 l10717 1A7C                                   l10645 14E2  
                                 l10813 7CE2                                   l11189 2510  
                                 l10487 565E                                   l10575 4B06  
                                 l10559 4A10                                   l10583 4B8C  
                                 l10751 1D04                                   l10727 1B2A  
                                 l10663 165C                                   l10647 14F8  
                                 l11199 2554                                   l10673 16F2  
                                 l10747 1D00                                   l10693 18E8  
                                 l10685 1830                                   l10757 1D24  
                                 PRLOCK 0039EF                                   l10599 4C76  
                                 l10791 51EC                                   l10863 7E22  
                                 l10697 191C                                   l10785 5182  
                                 l10779 50C4                                   l10799 529A  
                                 l10897 7304                         __end_of___aodiv 5B30  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 360E                                   _ADCLK 003EFF  
                       __end_of___aomod 5FE4                                   _ADPCH 003EF1  
                       __end_of___fldiv 3B88                                   _ADREF 003EFD  
                       __end_of___awdiv 6D3A                         __end_of___flneg 898E  
                                 STR_11 FF82                                   STR_12 FEB9  
                                 STR_20 FEA6                                   STR_21 FF93  
                                 STR_13 FEDF                                   STR_30 FE80  
                                 STR_22 FF93                                   STR_14 FECC  
                                 STR_23 FF82                                   STR_31 FFCD  
                                 STR_15 FF2B                                   STR_32 FFCD  
                                 STR_24 FFFC                                   STR_16 FF05  
                                 STR_25 FFF9                                   STR_33 FFA3  
                                 STR_17 FF18                           __CFG_WDTE$OFF 000000  
                                 STR_34 FFA3                                   STR_50 FFEA  
                                 STR_18 FEF2                                   STR_35 FFA3  
                                 STR_51 FFF2                                   STR_27 FFC1  
                                 STR_19 FE59                                   STR_28 FFD7  
                                 STR_36 FE41                         __end_of___awmod 71CC  
                                 STR_45 FE7F                                   STR_29 FE80  
                                 STR_54 FFF6                                   STR_46 FFE6  
                                 STR_38 FE93                                   STR_47 FFEE  
                                 STR_39 FE6D                                   STR_56 FFF6  
                                 _ADRPT 003EEC                         __end_of___flmul 2E52  
                       __end_of___flsub 8A1A                         __end_of___fltol 6A8A  
                                 u10030 10B8                                   u10050 116E  
                                 u10130 5774                                   u10060 1170  
                                 u10140 57BA                                   u10300 4BA8  
                                 u10220 4A08                                   u10230 4A5C  
                                 u10311 4BD8                                   u10320 4BEE  
                                 u10240 4A5E                                   u10400 13C0  
                                 u10321 4BEC                                   u10170 5896  
                                 u10330 4C02                                   u10410 13E6  
                                 u10147 57AC                                   u10340 4C06  
                                 u10260 4ABC                                   u10270 4ABE  
                                 u10190 4920                                   u10510 1746  
                                 u10440 1540                                   u10290 4B88  
                                 u10450 1542                                   u10540 19D6  
                                 u10460 1568                                   u10550 19D8  
                                 u10390 13BE                                   u10295 4B6A  
                                 u10650 530E                                   _U1P1H 003DED  
                                 _U1P2H 003DEF                                   u10590 1B7E  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10680 7E02  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10770 61DE                                   _U1P3L 003DF0  
                                 u10780 61E0                                   _U2P1L 003DD4  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00B2  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 004A                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 9614  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 91F8  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 7986  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 880A                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 94B2                            _DMA1CON1bits 003BFD  
                                 _flags 000E                __size_of_calc_model_data 02DA  
                                 _fputc 6F90              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 8AEA                                   _fputs 7F12  
                       __end_of_isdigit 8E70                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0045                                   _srand 8D78  
                                 _width 000A                                   _putch 947C  
                       __end_of_islower 8E10                         __end_of_isspace 88AE  
              _INT1_SetInterruptHandler 912E                         __end_of_isupper 8E40  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0025                                   ltemp1 0029  
                                 ltemp2 002D                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0025                                   ttemp1 0028  
                                 ttemp2 002B                                   ttemp3 002E  
                                 ttemp5 0026                                   ttemp6 0029  
                                 ttemp7 002D                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 90B6             _UART1_SetRxInterruptHandler 908E  
                                 wtemp0 0025                                   wtemp1 0027  
                                 wtemp2 0029                                   wtemp3 002B  
                                 wtemp4 002D                                   wtemp5 002F  
                                 wtemp8 0026                         __end_of_sprintf 74FA  
                       __end_of_tolower 82EE                         __end_of_strncmp 65C2  
                       __end_of_toupper 826A                     ??_UART1_tx_vect_isr 004A  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 9248  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 8A1A  
                 __end_of_ringBufS_init 8FC6                         __initialization 75FC  
                     _UART2_rx_vect_isr 9270                            __end_of_atoi 5DA4  
                          __end_of_ctoa 81E6                            __end_of_main 2628  
                          __end_of_dtoa 44B4                            __end_of_nanf 863C  
                          __end_of_stoa 58B0                            __end_of_xtoa 4CC0  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0045  
               __end_of_TMR2_Initialize 94E2                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button 8BAC                _TMR5_SetInterruptHandler 90DE  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A9    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 004A               __end_of_UART1_tx_vect_isr 9220  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 8F24  
                       _PWM8_Initialize 94F8                        _UART1_Initialize 8576  
                     _UART2_tx_vect_isr 9248                      _UART2_Transmit_ISR 8EF8  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 8512  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 8AEA  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0045                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1047 87FC  
                  _start_switch_handler 938C                                  i1l1235 7936  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 8AA6                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 957A  
                                u403_48 9378                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u823_20 91D6  
                                u823_26 91D8                                  u853_24 6F6C  
                                u853_25 6F68                                  u846_28 6E80  
                                u865_20 48E8                                  u880_28 92EE  
                                u849_20 6EA0                                  u849_21 6E9A  
                                u867_28 9356                    __size_of_hid_display 0102  
                                u875_48 9312                                  u878_28 92CA  
                                u899_44 8352                                  u899_45 834C  
                      __end_of___xxtofl 63FA   __end_of_ADCC_DischargeSampleCapacitor 95DA  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 95D2  
              __end_of_send_lcd_cmd_dma 885C                         _TMR3_WriteTimer 8BEC  
                   ??_UART2_tx_vect_isr 004A               __end_of_UART2_rx_vect_isr 9296  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 95A6  
                      _UART2_Initialize 869E                                  _WaitMs 8CD8  
                       _conv_raw_result 3B88                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 6A8A  
                                ___fleq 7986                       _ADCC_ThresholdISR 8440  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7FAA  
                                _efgtoa 0000                                  _floorf 4CC0  
                    ?_ADCC_ThresholdISR 0045                                  _memset 502C  
                  __size_of_help_button 0038                                  clear_0 766A  
                                clear_1 767E                                  clear_2 7692  
                                clear_3 76A4                                  clear_4 76B0  
                                clear_5 76BC                                  clear_6 76C8  
                                clear_7 76D4                                  clear_8 76E0  
                                _printf 863C                      _eaDogM_WriteString 7DCA  
                                _strcpy 77E2                               ?_ADCC_ISR 0045  
                                _strlen 7E70                      __size_of_TimerDone 0028  
                       _ADCC_Initialize 83D6                          _PMD_Initialize 9524  
             __end_of_UART2_tx_vect_isr 9270                                  lltemp0 0025  
                                lltemp1 002D                                  lltemp2 0035  
                                lltemp3 003D                     ??_ADCC_ThresholdISR 0045  
                __end_of_start_adc_scan 8576                            __mediumconst FDB0  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 8756                        __end_of_vfprintf 7D20  
                            _StartTimer 8B2C           __size_of_INTERRUPT_Initialize 0068  
               __end_of_TMR5_Initialize 8A60                       _SYSTEM_Initialize 88FC  
                            __accesstop 0060                 __end_of__initialization 76F2  
                             ?_INT0_ISR 0045                               ?_INT1_ISR 0045  
                  __end_of_display_help 95EA                    __end_of_display_info 95E2  
             __end_of_CLKREF_Initialize 95B0                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 8BAC  
                 _set_temp_display_help 955C                        _clear_hid_pflags 9296  
                 __end_of_TMR3_CallBack 9302               __end_of_ADCC_ThresholdISR 84AA  
                    __size_of_calc_bsoc 0452                  __end_of_ringBufS_flush 803C  
                        __pcstackCOMRAM 0045                              ___inthi_sp 1016  
                            ___intlo_sp 180B                            __pidataBANK0 8CA2  
                          __pidataBANK1 7BBE                            __pidataBANK2 7A4A  
                             ?_TMR3_ISR 0045                               ?_TMR5_ISR 0045  
                             ?_TMR6_ISR 0045                          ivt0x8_undefint 00AC  
                         __end_of_fputc 70B4                           __end_of_fputs 7FAA  
                         __end_of_srand 8DAC                   __end_of_TMR5_CallBack 92DE  
                         __end_of_putch 9496                 __end_of_PWM8_Initialize 950E  
               __end_of_TMR6_Initialize 8F4E                       _adc_int_t_handler 82EE  
                __end_of_PMD_Initialize 9538                              ??_ADCC_ISR 0045  
                 __end_of_TMR6_CallBack 9326             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0028                           _DMA1_DMAA_ISR 95BC  
                 TMR3_ISR@CountCallBack 0010                          _clear_adc_scan 95FA  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0001               __end_of_SYSTEM_Initialize 8946  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer 8C2C                              __pbssBANK0 0060  
                            __pbssBANK1 01B5                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            _check_help 5FE4                 __end_of_conv_raw_result 4034  
                 _INT0_InterruptHandler 0007                              ??_INT0_ISR 0045  
                            ??_INT1_ISR 004B                       __end_of_TimerDone 9016  
                      _DMA1_DMADCNT_ISR 95B0                      __size_of_init_bsoc 0012  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 947C  
      __end_of_TMR3_SetInterruptHandler 912E                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 90DE                              ??_TMR3_ISR 01D5  
               __end_of_ADCC_Initialize 8440                              ??_TMR5_ISR 004F  
             __end_of_adc_int_t_handler 836C                              ??_TMR6_ISR 004A  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 91A6   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 917E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 9424  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 9600                          ?_DMA1_DMAA_ISR 0045  
                      _DMA1_DMASCNT_ISR 9598                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0045  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 4906  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 8FC6  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 8BEC  
               __size_of_switch_handler 0128                      __size_of_stop_bsoc 0006  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim 94B2  
                               __Lparam 0000                __end_of_UART1_Initialize 85DA  
                     __end_of_hid_input 815E                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 58B0                                 ___fladd 2E52  
                               ___aomod 5DA4                                 ___fldiv 360E  
                               ___awdiv 6BEC                                 ___flneg 8946  
                               ___awmod 70B4                                 ___flmul 2628  
                               ___flsub 89D4                                 ___fltol 6918  
             __end_of_UART1_Receive_ISR 9442                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 77E2  
                               __pcinit 75FC                __end_of_mode_lamp_bright 9588  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 956C                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 1D82  
                               __ptext1 8D44                                 __ptext2 938C  
                               __ptext3 8512                                 __ptext4 9538  
                               __ptext5 95D2                                 __ptext6 8D78  
                               __ptext7 76F8                                 __ptext8 8F4E  
                               __ptext9 8F76                       _UART2_Receive_ISR 9442  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                               us522999 5B1A                   _OSCILLATOR_Initialize 950E  
                               us533999 5FD2                            __size_of_abs 0046  
                          __size_of_pad 0114                       __end_of_init_bsoc 955C  
                               _isalpha 8AA6                                 _isdigit 8E40  
                             _T3CONbits 003FA6                                 _mode_sw 0018  
                               us939999 404E                       __end_of_lp_filter 6782  
                               _islower 8DE0                                 _isspace 885C  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 86FC                                 _isupper 8E10  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 73F0  
                               _tolower 826A                   __size_of_display_help 0008  
                               _utctime 009D                   __size_of_display_info 0008  
                               _strncmp 63FA                                 _toupper 81E6  
                  end_of_initialization 76F2               __size_of_convert_adc_data 00B8  
                    _check_enter_button 8B6C     __end_of_UART1_SetTxInterruptHandler 908E  
           _UART1_SetTxInterruptHandler 9066                               i1u1079_20 792E  
   __end_of_UART2_SetRxInterruptHandler 9066             _UART2_SetRxInterruptHandler 903E  
                     __end_of_set_vterm 9406                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd 960C  
             __end_of_UART2_Receive_ISR 9460                          wdtdelay@dcount 00A1  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 004B  
                 _INT1_InterruptHandler 0004                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc 9612                _TMR3_SetInterruptHandler 9106  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 90B6  
                          _display_help 95E2                   _TMR5_InterruptHandler 00AC  
                          _display_info 95DA    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags 92BA                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler 91CE             _ADCC_SetADIInterruptHandler 91A6  
                            _update_lcd 72E0                         _calc_model_data 5318  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc 8D44                         _DMA1_Initialize 836C  
                            _start_bsoc 9326                         _SPI1_Initialize 94E2  
                 __end_of_get_vterm_ptr 8E9E                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 8D0E  
          __end_of_INTERRUPT_Initialize 8512                              _vterm_dump 6D3A  
                        __end_of___flge 6BEC                          __end_of___fleq 7A4A  
  __end_of_INT0_DefaultInterruptHandler 9620   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 961E              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 8756                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 00CE                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 502C             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0095                          __end_of_memset 5318  
                        __end_of_printf 869E                __end_of_DMA1_DMADCNT_ISR 95BA  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 938C  
                        __end_of_strcpy 78B6                          __end_of_strlen 7F12  
                   start_initialization 75FC    __end_of_TMR5_DefaultInterruptHandler 91F6  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 91CE  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 89D4  
                 __end_of_INT1_CallBack 936A               __size_of_set_display_info 001E  
                           __end_of_pad 72E0                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 8F9E                          _switch_handler 6E68  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0500                   __end_of___fpclassifyf 6918  
                         _uart2RxBuffer 0600                           _uart1TxBuffer 02BC  
              __end_of_DMA1_DMASCNT_ISR 95A6                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR 95C8                     __end_of_hid_display 75FC  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8FEE  
                         _ringBufS_init 8F9E                             __pdataBANK0 00C3  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 8DE0                 __end_of_calc_model_data 55F2  
                   __end_of_help_button 8CA2         __end_of_eaDogM_WriteStringAtPos 8D44  
                           __pbssBIGRAM 06FF                 __end_of_DMA1_Initialize 83D6  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 917E  
                         __pcstackBANK1 01D5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 6F90  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 94F8  
              _UART1_RxInterruptHandler 00BB                _UART2_TxInterruptHandler 00BE  
                             __end_of_T FE41                        _convert_adc_data 7B06  
                             _calc_bsoc 44B4               __size_of_ringBufS_put_dma 00AA  
                          _init_display 76F8                  __end_of_DMA1_DMAOR_ISR 95D2  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00AF  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 87B0  
                _PIN_MANAGER_Initialize 803C                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set 9606                           __pmediumconst FDB0  
                             __ptext100 9066                               __ptext101 908E  
                             __ptext110 94F8                               __ptext102 8F24  
                             __ptext111 9524                               __ptext103 90B6  
                             __ptext120 836C                               __ptext112 803C  
                             __ptext104 8A1A                               __ptext121 95A6  
                             __ptext113 950E                               __ptext105 90DE  
                             __ptext130 8BAC                               __ptext122 83D6  
                             __ptext114 84AA                               __ptext106 8A60  
                             __ptext131 92BA                               __ptext123 917E  
                             __ptext115 95F2                               __ptext107 9106  
                             __ptext140 961E                               __ptext132 91CE  
                             __ptext124 91A6                               __ptext116 8DAC  
                             __ptext108 94CA                               __ptext141 9614  
                             __ptext133 78B8                               __ptext125 8C2C  
                             __ptext117 912E                               __ptext109 94E2  
                             __ptext150 9424                               __ptext142 8EA0  
                             __ptext134 8BEC                               __ptext126 9348  
                             __ptext118 9156                               __ptext151 9248  
                             __ptext143 82EE                               __ptext135 92DE  
                             __ptext127 961A                               __ptext119 8756  
                             __ptext160 95BC                               __ptext152 8EF8  
                             __ptext144 9620                               __ptext136 961C  
                             __ptext128 6E68                               __ptext161 95C8  
                             __ptext153 9270                               __ptext145 9622  
                             __ptext137 44B4                               __ptext129 87B0  
                             __ptext162 0000                               __ptext154 9442  
                             __ptext146 8440                               __ptext138 9588  
                             __ptext155 9498                               __ptext147 91F8  
                             __ptext139 936A                               __ptext156 9302  
                             __ptext148 8ECC                               __ptext157 88AE  
                             __ptext149 9220                               __ptext158 9598  
                             __ptext159 95B0                               _hid_input 80CE  
                    __end_of_StartTimer 8B6C                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR 8EA0  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 954A                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 65C2  
                           _hid_display 74FA                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 84AA  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0045                                _INT0_ISR 9588  
                              _INT1_ISR 8C2C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01B5                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack 92DE                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                i2u910_48 925C  
                              i2u902_48 8EB8                                _PIR8bits 0039A8  
                              i2u912_48 9282                                i2u904_48 8476  
                              i2u904_49 848A                                _PIR9bits 0039A9  
                              i2u906_48 920C                                i2u908_48 9234  
              __size_of_TMR5_Initialize 0046                               _set_vterm 93E8  
                   __size_of_update_lcd 0110                             _help_button 8C6A  
                              _TMR3_ISR 78B8              __end_of_UART1_Transmit_ISR 8EF8  
                              _TMR5_ISR 87B0                                _TMR6_ISR 9498  
                             _port_data 01A5                     __size_of_static_soc 0034  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack 92BA  
                            _ADCON0bits 003EF8                      __end_of_check_help 61F6  
                             _start_lcd 9606                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 9302  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc 960C                        _set_display_info 9406  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 7610  
                             copy_data1 7632                               copy_data2 7654  
              _INT0_SetInterruptHandler 9156                     __size_of_vterm_dump 012E  
                _uart1TxBufferRemaining 0022     __end_of_UART2_SetTxInterruptHandler 903E  
           _UART2_SetTxInterruptHandler 9016                            _uart1RxCount 001F  
                          _uart2RxCount 0019                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 9460  
                          _send_lcd_cmd 8F76                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 9622                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 8FEE                   __end_of_DMA1_DMAA_ISR 95C6  
                    ___fpclassifyf@F463 0099    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 61F6  
                     ?_DMA1_DMADCNT_ISR 0045             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 957A  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 004B  
                              __ptext10 93AC                                __ptext11 8F9E  
                              __ptext20 93CA                                __ptext12 954A  
                              __ptext21 61F6                                __ptext13 74FA  
                              __ptext30 8D0E                                __ptext22 9296  
                              __ptext14 80CE                                __ptext31 880A  
                              __ptext23 95FA                                __ptext15 8FC6  
                              __ptext40 7C74                                __ptext32 9460  
                              __ptext24 5FE4                                __ptext16 956C  
                              __ptext41 1244                                __ptext33 86FC  
                              __ptext25 6D3A                                __ptext17 7B06  
                              __ptext50 8E10                                __ptext42 4906  
                              __ptext34 7DCA                                __ptext26 73F0  
                              __ptext18 3B88                                __ptext51 77E2  
                              __ptext43 81E6                                __ptext35 9600  
                              __ptext27 8E70                                __ptext19 85DA  
                              __ptext60 6BEC                                __ptext52 4CC0  
                              __ptext44 8DE0                                __ptext36 9606  
                              __ptext28 8CD8                                __ptext61 4034  
                              __ptext53 6782                                __ptext45 8AA6  
                              __ptext37 7FAA                                __ptext29 72E0  
                              __ptext70 947C                                __ptext62 898E  
                              __ptext54 6918                                __ptext46 63FA  
                              __ptext38 502C                                __ptext71 7D20  
                              __ptext63 5DA4                                __ptext55 8946  
                              __ptext47 55F2                                __ptext39 863C  
                              __ptext80 8AEA                                __ptext72 5B30  
                              __ptext64 58B0                                __ptext56 6A8A  
                              __ptext48 0000                                __ptext81 8C6A  
                              __ptext73 885C                                __ptext65 815E  
                              __ptext57 7986                                __ptext49 826A  
                              __ptext90 9326                                __ptext82 8FEE  
                              __ptext74 8E40                                __ptext66 71CC  
                              __ptext58 360E                                __ptext91 65C2  
                              __ptext83 8B2C                                __ptext75 93E8  
                              __ptext67 7E70                                __ptext59 70B4  
                              __ptext92 89D4                                __ptext84 95DA  
                              __ptext76 955C                                __ptext68 7F12  
                              __ptext93 2E52                                __ptext85 95E2  
                              __ptext77 9406                                __ptext69 6F90  
                              __ptext94 2628                                __ptext86 8B6C  
                              __ptext78 94B2                                __ptext95 88FC  
                              __ptext87 95EA                                __ptext79 957A  
                              __ptext96 869E                                __ptext88 5318  
                              __ptext97 9016                                __ptext89 960C  
                              __ptext98 903E                                __ptext99 8576  
                      __size_of_isupper 0030                                us1021999 4986  
                              us1008999 5604                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 7D20  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 08A6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0045  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00B5                               stoa@F1166 00EB  
                    ??_DMA1_DMASCNT_ISR 004B            __end_of_ADCC_StartConversion 954A  
                              _spi_link 0089                                _wdtdelay 86FC  
            __end_of_UART2_Transmit_ISR 8F24                                _vfprintf 7C74  
              __end_of_convert_adc_data 7BBE              __end_of_PWM8_LoadDutyValue 8B2C  
  __end_of_TMR3_DefaultInterruptHandler 961E   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler 961C    __end_of_INT1_DefaultInterruptHandler 961C  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 961A  
                         ??_Default_ISR 0045                             _uart1RxHead 0021  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0024  
                           _uart2RxHead 001B                             _uart1RxTail 0020  
                        _get_raw_result 93CA                             _uart2TxHead 001E  
                           _uart1TxTail 0023                             _uart2RxTail 001A  
                           _uart2TxTail 001D                            _wait_lcd_set 9600  
                    _EXT_INT_Initialize 8DAC    __end_of_TMR6_DefaultInterruptHandler 88FC  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler 88AE  
  __end_of_ADCC_DefaultInterruptHandler 9622   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 9620                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 8F4E  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 956C  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7E70  
                 __end_of_mode_lamp_dim 94CA                 __end_of_adc_int_handler 9624  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 73F0                  _uart2TxBufferRemaining 001C  
                    __end_of_static_soc 8D78                      __end_of_start_bsoc 9348  
                        _FVR_Initialize 95F2                  __end_of_get_raw_result 93E8  
                      _send_lcd_cmd_dma 880A                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0014        __end_of_INT1_SetInterruptHandler 9156  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 004B  
              _UART1_TxInterruptHandler 00B8               __end_of_send_lcd_cmd_long 8F76  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 961A  
        __end_of_PIN_MANAGER_Initialize 80CE               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 6E68                 _eaDogM_WriteStringAtPos 8D0E  
                         _get_vterm_ptr 8E70                          _check_adc_scan 95EA  
             __size_of_UART2_Initialize 005E  
