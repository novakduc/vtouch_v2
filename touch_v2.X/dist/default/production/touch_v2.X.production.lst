

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 11 18:30:25 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	text150,global,reloc=4,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=4,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=4,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=4,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=4,class=CODE,delta=1
   191                           	psect	text166,global,reloc=4,class=CODE,delta=1
   192                           	psect	text167,global,reloc=4,class=CODE,delta=1
   193                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   194                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   195                           	psect	text168,global,reloc=4,class=CODE,delta=1
   196                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   197                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   198  0000                     
   199                           ; Version 2.10
   200                           ; Generated 31/07/2019 GMT
   201                           ; 
   202                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   203                           ; All rights reserved.
   204                           ; 
   205                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   206                           ; 
   207                           ; Redistribution and use in source and binary forms, with or without modification, are
   208                           ; permitted provided that the following conditions are met:
   209                           ; 
   210                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   211                           ;        conditions and the following disclaimer.
   212                           ; 
   213                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   214                           ;        of conditions and the following disclaimer in the documentation and/or other
   215                           ;        materials provided with the distribution.
   216                           ; 
   217                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   218                           ;        software without specific prior written permission.
   219                           ; 
   220                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   221                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   222                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   223                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   224                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   225                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   226                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   227                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   228                           ; 
   229                           ; 
   230                           ; Code-generator required, PIC18F57K42 Definitions
   231                           ; 
   232                           ; SFR Addresses
   233  0000                     
   234 ;;_k	offset	0
   235 ;;_j	offset	1
   236 ;;_i	offset	2
   237 ;;_inp_index	offset	3
   238 ;;_mode	offset	4
   239 ;;_channel	offset=-1 (param)
   240 ;;_s	offset=-2 (param)
   241 ;;_mode	offset=-1 (param)
   242 ;;_mode	offset=-1 (param)
   243 ;;_cmd	offset=-1 (param)
   244 ;;_cmd	offset=-1 (param)
   245 ;;_data	offset=-1 (param)
   246 ;;__this	offset=-2 (param)
   247 ;;_cvoltage	offset=-4 (param)
   248 ;;_h	offset=-1 (param)
   249 ;;_h	offset=-1 (param)
   250 ;;_i	offset=-1 (param)
   251 ;;_cmd	offset=-1 (param)
   252 ;;_i	offset	0
   253 ;;_chan	offset=-1 (param)
   254 ;;_to_what	offset=-2 (param)
   255 ;;_u	offset	0
   256 ;;_s	offset=-2 (param)
   257 ;;_index	offset=-1 (param)
   258 ;;_arg	offset	0
   259 ;;_exp	offset	4
   260 ;;_sign	offset=-1 (param)
   261 ;;_val	offset=-5 (param)
   262 ;;_h	offset=-1 (param)
   263 ;;_flipper	offset=-1 (param)
   264 ;;_f	offset	0
   265 ;;_ap	offset	6
   266 ;;_s	offset=-3 (param)
   267 ;;_fmt	offset=-5 (param)
   268 ;;_line	offset=-1 (param)
   269 ;;_vterm	offset=-2 (param)
   270 ;;_numMilliseconds	offset=-2 (param)
   271 ;;_vterm	offset=-1 (param)
   272 ;;_r	offset=-1 (param)
   273 ;;_c	offset=-2 (param)
   274 ;;_strPtr	offset=-4 (param)
   275 ;;_strPtr	offset=-1 (param)
   276 ;;_delay	offset=-4 (param)
   277 ;;_strPtr	offset=-2 (param)
   278 ;;__this	offset=-2 (param)
   279 ;;_clearBuffer	offset=-3 (param)
   280 ;;_s	offset	0
   281 ;;_k	offset	2
   282 ;;_dest	offset=-2 (param)
   283 ;;_c	offset=-4 (param)
   284 ;;_n	offset=-6 (param)
   285 ;;_ap	offset	0
   286 ;;_fmt	offset=-3 (param)
   287 ;;_cfmt	offset	0
   288 ;;_fp	offset=-2 (param)
   289 ;;_fmt	offset=-4 (param)
   290 ;;_ap	offset=-6 (param)
   291 ;;_vfpfcnvrt$5251	offset	0
   292 ;;_vfpfcnvrt$5262	offset	2
   293 ;;_vfpfcnvrt$5250	offset	4
   294 ;;_llu	offset	6
   295 ;;_ll	offset	14
   296 ;;_f	offset	22
   297 ;;_ct	offset	26
   298 ;;_cp	offset	29
   299 ;;_c	offset	31
   300 ;;_fp	offset=-2 (param)
   301 ;;_fmt	offset=-4 (param)
   302 ;;_ap	offset=-6 (param)
   303 ;;_xtoa$5236	offset	0
   304 ;;_xtoa$5235	offset	2
   305 ;;_n	offset	4
   306 ;;_c	offset	12
   307 ;;_i	offset	14
   308 ;;_w	offset	16
   309 ;;_p	offset	18
   310 ;;_fp	offset=-2 (param)
   311 ;;_d	offset=-10 (param)
   312 ;;_x	offset=-11 (param)
   313 ;;_toupper$6035	offset	0
   314 ;;_c	offset=-2 (param)
   315 ;;_c	offset=-2 (param)
   316 ;;_c	offset=-2 (param)
   317 ;;_n	offset	0
   318 ;;_i	offset	8
   319 ;;_w	offset	10
   320 ;;_p	offset	12
   321 ;;_fp	offset=-2 (param)
   322 ;;_d	offset=-10 (param)
   323 ;;_counter	offset	0
   324 ;;_dividend	offset=-8 (param)
   325 ;;_divisor	offset=-16 (param)
   326 ;;_quotient	offset	0
   327 ;;_counter	offset	8
   328 ;;_dividend	offset=-8 (param)
   329 ;;_divisor	offset=-16 (param)
   330 ;;_r	offset	0
   331 ;;_l	offset	2
   332 ;;__l	offset=-2 (param)
   333 ;;__r	offset=-4 (param)
   334 ;;_n	offset=-6 (param)
   335 ;;_nuls	offset	0
   336 ;;_l	offset	7
   337 ;;_p	offset	9
   338 ;;_cp	offset	11
   339 ;;_w	offset	13
   340 ;;_i	offset	15
   341 ;;_fp	offset=-2 (param)
   342 ;;_s	offset=-4 (param)
   343 ;;_efgtoa$5208	offset	0
   344 ;;_efgtoa$5207	offset	2
   345 ;;_efgtoa$5206	offset	4
   346 ;;_efgtoa$5202	offset	6
   347 ;;_efgtoa$5198	offset	8
   348 ;;_efgtoa$5197	offset	10
   349 ;;_u	offset	12
   350 ;;_g	offset	16
   351 ;;_l	offset	20
   352 ;;_h	offset	24
   353 ;;_ou	offset	28
   354 ;;_n	offset	32
   355 ;;_e	offset	34
   356 ;;_i	offset	36
   357 ;;_w	offset	38
   358 ;;_p	offset	40
   359 ;;_sign	offset	42
   360 ;;_d	offset	44
   361 ;;_ne	offset	46
   362 ;;_m	offset	48
   363 ;;_pp	offset	50
   364 ;;_t	offset	52
   365 ;;_mode	offset	54
   366 ;;_nmode	offset	55
   367 ;;_fp	offset=-2 (param)
   368 ;;_f	offset=-6 (param)
   369 ;;_c	offset=-7 (param)
   370 ;;_tolower$6020	offset	0
   371 ;;_c	offset=-2 (param)
   372 ;;_c	offset=-2 (param)
   373 ;;_d	offset	0
   374 ;;_s	offset	2
   375 ;;_dest	offset=-2 (param)
   376 ;;_src	offset=-4 (param)
   377 ;;_u	offset	0
   378 ;;_m	offset	4
   379 ;;_e	offset	8
   380 ;;_x	offset=-4 (param)
   381 ;;_u	offset	0
   382 ;;_e	offset	4
   383 ;;_x	offset=-4 (param)
   384 ;;_exp1	offset	0
   385 ;;_sign1	offset	1
   386 ;;_f1	offset=-4 (param)
   387 ;;_f1	offset=-4 (param)
   388 ;;_ff1	offset=-4 (param)
   389 ;;_ff2	offset=-8 (param)
   390 ;;_ff1	offset=-4 (param)
   391 ;;_ff2	offset=-8 (param)
   392 ;;_grs	offset	0
   393 ;;_rem	offset	4
   394 ;;_new_exp	offset	8
   395 ;;_aexp	offset	10
   396 ;;_bexp	offset	11
   397 ;;_sign	offset	12
   398 ;;_b	offset=-4 (param)
   399 ;;_a	offset=-8 (param)
   400 ;;_sign	offset	0
   401 ;;_counter	offset	1
   402 ;;_dividend	offset=-2 (param)
   403 ;;_divisor	offset=-4 (param)
   404 ;;_quotient	offset	0
   405 ;;_sign	offset	2
   406 ;;_counter	offset	3
   407 ;;_dividend	offset=-2 (param)
   408 ;;_divisor	offset=-4 (param)
   409 ;;_dtoa$5174	offset	0
   410 ;;_n	offset	2
   411 ;;_i	offset	10
   412 ;;_s	offset	12
   413 ;;_w	offset	14
   414 ;;_p	offset	16
   415 ;;_fp	offset=-2 (param)
   416 ;;_d	offset=-10 (param)
   417 ;;_a	offset=-2 (param)
   418 ;;_sign	offset	0
   419 ;;_counter	offset	1
   420 ;;_dividend	offset=-8 (param)
   421 ;;_divisor	offset=-16 (param)
   422 ;;_quotient	offset	0
   423 ;;_sign	offset	8
   424 ;;_counter	offset	9
   425 ;;_dividend	offset=-8 (param)
   426 ;;_divisor	offset=-16 (param)
   427 ;;_w	offset	0
   428 ;;_fp	offset=-2 (param)
   429 ;;_c	offset=-3 (param)
   430 ;;_w	offset	0
   431 ;;_i	offset	2
   432 ;;_fp	offset=-2 (param)
   433 ;;_buf	offset=-4 (param)
   434 ;;_p	offset=-6 (param)
   435 ;;_a	offset	0
   436 ;;_s	offset=-2 (param)
   437 ;;_i	offset	0
   438 ;;_c	offset	2
   439 ;;_s	offset=-2 (param)
   440 ;;_fp	offset=-4 (param)
   441 ;;_c	offset=-2 (param)
   442 ;;_fp	offset=-4 (param)
   443 ;;_c	offset=-1 (param)
   444 ;;__this	offset=-2 (param)
   445 ;;_c	offset=-3 (param)
   446 ;;_atoi$5758	offset	0
   447 ;;_atoi$5756	offset	2
   448 ;;_atoi$5757	offset	4
   449 ;;_n	offset	5
   450 ;;_neg	offset	7
   451 ;;_s	offset=-2 (param)
   452 ;;_isspace$5796	offset	0
   453 ;;_c	offset=-2 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_vterm	offset=-1 (param)
   456 ;;_new_response_info	offset=-1 (param)
   457 ;;_new_response_info	offset=-1 (param)
   458 ;;_level	offset=-2 (param)
   459 ;;_dutyValue	offset=-2 (param)
   460 ;;_timer	offset=-1 (param)
   461 ;;_timer	offset=-1 (param)
   462 ;;_count	offset=-3 (param)
   463 ;;_h	offset=-1 (param)
   464 ;;_lp_speed	offset	0
   465 ;;_new	offset=-4 (param)
   466 ;;_bn	offset=-5 (param)
   467 ;;_slow	offset=-6 (param)
   468 ;;_b	offset=-4 (param)
   469 ;;_a	offset=-8 (param)
   470 ;;_grs	offset	0
   471 ;;_bexp	offset	1
   472 ;;_aexp	offset	2
   473 ;;_signs	offset	3
   474 ;;_b	offset=-4 (param)
   475 ;;_a	offset=-8 (param)
   476 ;;_prod	offset	0
   477 ;;_grs	offset	4
   478 ;;_temp	offset	8
   479 ;;_bexp	offset	10
   480 ;;_aexp	offset	11
   481 ;;_sign	offset	12
   482 ;;_b	offset=-4 (param)
   483 ;;_a	offset=-8 (param)
   484 ;;_InterruptHandler	offset=-3 (param)
   485 ;;_InterruptHandler	offset=-3 (param)
   486 ;;_InterruptHandler	offset=-3 (param)
   487 ;;_InterruptHandler	offset=-3 (param)
   488 ;;_InterruptHandler	offset=-3 (param)
   489 ;;_InterruptHandler	offset=-3 (param)
   490 ;;_state	offset	0
   491 ;;_InterruptHandler	offset=-3 (param)
   492 ;;_InterruptHandler	offset=-3 (param)
   493 ;;_InterruptHandler	offset=-3 (param)
   494 ;;_InterruptHandler	offset=-3 (param)
   495 ;;_i	offset	0
   496 ;;_sw_value	offset	1
   497 ;;_timerVal	offset=-2 (param)
   498 ;;_timerVal	offset=-2 (param)
   499 ;;_log_ptr	offset	0
   500 ;;_f	offset	0
   501 ;;_ap	offset	6
   502 ;;_s	offset=-3 (param)
   503 ;;_fmt	offset=-5 (param)
   504 ;;_cfmt	offset	0
   505 ;;_fp	offset=-2 (param)
   506 ;;_fmt	offset=-4 (param)
   507 ;;_ap	offset=-6 (param)
   508 ;;_vfpfcnvrt$5251	offset	0
   509 ;;_vfpfcnvrt$5262	offset	2
   510 ;;_vfpfcnvrt$5250	offset	4
   511 ;;_llu	offset	6
   512 ;;_ll	offset	14
   513 ;;_f	offset	22
   514 ;;_ct	offset	26
   515 ;;_cp	offset	29
   516 ;;_c	offset	31
   517 ;;_fp	offset=-2 (param)
   518 ;;_fmt	offset=-4 (param)
   519 ;;_ap	offset=-6 (param)
   520 ;;_xtoa$5236	offset	0
   521 ;;_xtoa$5235	offset	2
   522 ;;_n	offset	4
   523 ;;_c	offset	12
   524 ;;_i	offset	14
   525 ;;_w	offset	16
   526 ;;_p	offset	18
   527 ;;_fp	offset=-2 (param)
   528 ;;_d	offset=-10 (param)
   529 ;;_x	offset=-11 (param)
   530 ;;_toupper$6035	offset	0
   531 ;;_c	offset=-2 (param)
   532 ;;_c	offset=-2 (param)
   533 ;;_c	offset=-2 (param)
   534 ;;_n	offset	0
   535 ;;_i	offset	8
   536 ;;_w	offset	10
   537 ;;_p	offset	12
   538 ;;_fp	offset=-2 (param)
   539 ;;_d	offset=-10 (param)
   540 ;;_counter	offset	0
   541 ;;_dividend	offset=-8 (param)
   542 ;;_divisor	offset=-16 (param)
   543 ;;_quotient	offset	0
   544 ;;_counter	offset	8
   545 ;;_dividend	offset=-8 (param)
   546 ;;_divisor	offset=-16 (param)
   547 ;;_r	offset	0
   548 ;;_l	offset	2
   549 ;;__l	offset=-2 (param)
   550 ;;__r	offset=-4 (param)
   551 ;;_n	offset=-6 (param)
   552 ;;_nuls	offset	0
   553 ;;_l	offset	7
   554 ;;_p	offset	9
   555 ;;_cp	offset	11
   556 ;;_w	offset	13
   557 ;;_i	offset	15
   558 ;;_fp	offset=-2 (param)
   559 ;;_s	offset=-4 (param)
   560 ;;_efgtoa$5208	offset	0
   561 ;;_efgtoa$5207	offset	2
   562 ;;_efgtoa$5206	offset	4
   563 ;;_efgtoa$5202	offset	6
   564 ;;_efgtoa$5198	offset	8
   565 ;;_efgtoa$5197	offset	10
   566 ;;_u	offset	12
   567 ;;_g	offset	16
   568 ;;_l	offset	20
   569 ;;_h	offset	24
   570 ;;_ou	offset	28
   571 ;;_n	offset	32
   572 ;;_e	offset	34
   573 ;;_i	offset	36
   574 ;;_w	offset	38
   575 ;;_p	offset	40
   576 ;;_sign	offset	42
   577 ;;_d	offset	44
   578 ;;_ne	offset	46
   579 ;;_m	offset	48
   580 ;;_pp	offset	50
   581 ;;_t	offset	52
   582 ;;_mode	offset	54
   583 ;;_nmode	offset	55
   584 ;;_fp	offset=-2 (param)
   585 ;;_f	offset=-6 (param)
   586 ;;_c	offset=-7 (param)
   587 ;;_tolower$6020	offset	0
   588 ;;_c	offset=-2 (param)
   589 ;;_c	offset=-2 (param)
   590 ;;_d	offset	0
   591 ;;_s	offset	2
   592 ;;_dest	offset=-2 (param)
   593 ;;_src	offset=-4 (param)
   594 ;;_u	offset	0
   595 ;;_m	offset	4
   596 ;;_e	offset	8
   597 ;;_x	offset=-4 (param)
   598 ;;_u	offset	0
   599 ;;_e	offset	4
   600 ;;_x	offset=-4 (param)
   601 ;;_exp1	offset	0
   602 ;;_sign1	offset	1
   603 ;;_f1	offset=-4 (param)
   604 ;;_b	offset=-4 (param)
   605 ;;_a	offset=-8 (param)
   606 ;;_grs	offset	0
   607 ;;_bexp	offset	1
   608 ;;_aexp	offset	2
   609 ;;_signs	offset	3
   610 ;;_b	offset=-4 (param)
   611 ;;_a	offset=-8 (param)
   612 ;;_f1	offset=-4 (param)
   613 ;;_prod	offset	0
   614 ;;_grs	offset	4
   615 ;;_temp	offset	8
   616 ;;_bexp	offset	10
   617 ;;_aexp	offset	11
   618 ;;_sign	offset	12
   619 ;;_b	offset=-4 (param)
   620 ;;_a	offset=-8 (param)
   621 ;;_ff1	offset=-4 (param)
   622 ;;_ff2	offset=-8 (param)
   623 ;;_ff1	offset=-4 (param)
   624 ;;_ff2	offset=-8 (param)
   625 ;;_grs	offset	0
   626 ;;_rem	offset	4
   627 ;;_new_exp	offset	8
   628 ;;_aexp	offset	10
   629 ;;_bexp	offset	11
   630 ;;_sign	offset	12
   631 ;;_b	offset=-4 (param)
   632 ;;_a	offset=-8 (param)
   633 ;;_sign	offset	0
   634 ;;_counter	offset	1
   635 ;;_dividend	offset=-2 (param)
   636 ;;_divisor	offset=-4 (param)
   637 ;;_quotient	offset	0
   638 ;;_sign	offset	2
   639 ;;_counter	offset	3
   640 ;;_dividend	offset=-2 (param)
   641 ;;_divisor	offset=-4 (param)
   642 ;;_dtoa$5174	offset	0
   643 ;;_n	offset	2
   644 ;;_i	offset	10
   645 ;;_s	offset	12
   646 ;;_w	offset	14
   647 ;;_p	offset	16
   648 ;;_fp	offset=-2 (param)
   649 ;;_d	offset=-10 (param)
   650 ;;_a	offset=-2 (param)
   651 ;;_sign	offset	0
   652 ;;_counter	offset	1
   653 ;;_dividend	offset=-8 (param)
   654 ;;_divisor	offset=-16 (param)
   655 ;;_quotient	offset	0
   656 ;;_sign	offset	8
   657 ;;_counter	offset	9
   658 ;;_dividend	offset=-8 (param)
   659 ;;_divisor	offset=-16 (param)
   660 ;;_w	offset	0
   661 ;;_fp	offset=-2 (param)
   662 ;;_c	offset=-3 (param)
   663 ;;_w	offset	0
   664 ;;_i	offset	2
   665 ;;_fp	offset=-2 (param)
   666 ;;_buf	offset=-4 (param)
   667 ;;_p	offset=-6 (param)
   668 ;;_a	offset	0
   669 ;;_s	offset=-2 (param)
   670 ;;_i	offset	0
   671 ;;_c	offset	2
   672 ;;_s	offset=-2 (param)
   673 ;;_fp	offset=-4 (param)
   674 ;;_c	offset=-2 (param)
   675 ;;_fp	offset=-4 (param)
   676 ;;_c	offset=-1 (param)
   677 ;;__this	offset=-2 (param)
   678 ;;_c	offset=-3 (param)
   679 ;;_atoi$5758	offset	0
   680 ;;_atoi$5756	offset	2
   681 ;;_atoi$5757	offset	4
   682 ;;_n	offset	5
   683 ;;_neg	offset	7
   684 ;;_s	offset=-2 (param)
   685 ;;_isspace$5796	offset	0
   686 ;;_c	offset=-2 (param)
   687 ;;_c	offset=-2 (param)
   688 ;;_dsize	offset=-2 (param)
   689 ;;_timer	offset=-1 (param)
   690 ;;_count	offset=-3 (param)
   691 ;;_channel	offset=-1 (param)
   692 ;;_i	offset	0
   693                           
   694                           	psect	idataBIGRAM
   695  017138                     __pidataBIGRAM:
   696                           	opt callstack 0
   697                           
   698                           ;initializer for _port_data
   699  017138  FF                 	db	255
   700  017139  00                 	db	0
   701  01713A  FF                 	db	255
   702  01713B  00                 	db	0
   703  01713C  FF                 	db	255
   704  01713D  00                 	db	0
   705  01713E  FF                 	db	255
   706  01713F  00                 	db	0
   707  017140  FF                 	db	255
   708  017141  00                 	db	0
   709  017142  FF                 	db	255
   710  017143  00                 	db	0
   711  017144  FF                 	db	255
   712  017145  00                 	db	0
   713  017146  FF                 	db	255
   714  017147  00                 	db	0
   715  017148  00                 	db	0
   716  017149  00                 	db	0
   717  01714A  00                 	db	0
   718  01714B  00                 	db	0
   719  01714C  00                 	db	0
   720  01714D  00                 	db	0
   721  01714E  00                 	db	0
   722  01714F  00                 	db	0
   723  017150  00                 	db	0
   724  017151  00                 	db	0
   725  017152  00                 	db	0
   726  017153  00                 	db	0
   727  017154  00                 	db	0
   728  017155  00                 	db	0
   729  017156  00                 	db	0
   730  017157  00                 	db	0
   731  017158  00                 	db	0
   732  017159  00                 	db	0
   733  01715A  00                 	db	0
   734  01715B  00                 	db	0
   735  01715C  00                 	db	0
   736  01715D  00                 	db	0
   737  01715E  00                 	db	0
   738  01715F  00                 	db	0
   739  017160  00                 	db	0
   740  017161  00                 	db	0
   741  017162  00                 	db	0
   742  017163  00                 	db	0
   743  017164  00                 	db	0
   744  017165  00                 	db	0
   745  017166  00                 	db	0
   746  017167  00                 	db	0
   747  017168  00                 	db	0
   748  017169  00                 	db	0
   749  01716A  00                 	db	0
   750  01716B  00                 	db	0
   751  01716C  00                 	db	0
   752  01716D  00                 	db	0
   753  01716E  00                 	db	0
   754  01716F  00                 	db	0
   755  017170  00                 	db	0
   756  017171  00                 	db	0
   757  017172  00                 	db	0
   758  017173  00                 	db	0
   759  017174  00                 	db	0
   760  017175  00                 	db	0
   761  017176  00                 	db	0
   762  017177  00                 	db	0
   763  017178  00                 	db	0
   764  017179  00                 	db	0
   765  01717A  00                 	db	0
   766  01717B  00                 	db	0
   767  01717C  00                 	db	0
   768  01717D  00                 	db	0
   769  01717E  00                 	db	0
   770  01717F  00                 	db	0
   771  017180  00                 	db	0
   772  017181  00                 	db	0
   773  017182  00                 	db	0
   774  017183  00                 	db	0
   775  017184  00                 	db	0
   776  017185  00                 	db	0
   777  017186  00                 	db	0
   778  017187  00                 	db	0
   779  017188  00                 	db	0
   780  017189  00                 	db	0
   781  01718A  00                 	db	0
   782  01718B  00                 	db	0
   783  01718C  00                 	db	0
   784  01718D  00                 	db	0
   785  01718E  00                 	db	0
   786  01718F  00                 	db	0
   787  017190  00                 	db	0
   788  017191  00                 	db	0
   789  017192  00                 	db	0
   790  017193  00                 	db	0
   791  017194  00                 	db	0
   792  017195  00                 	db	0
   793  017196  00                 	db	0
   794  017197  00                 	db	0
   795  017198  00                 	db	0
   796  017199  00                 	db	0
   797  01719A  00                 	db	0
   798  01719B  00                 	db	0
   799  01719C  00                 	db	0
   800  01719D  00                 	db	0
   801  01719E  00                 	db	0
   802  01719F  00                 	db	0
   803  0171A0  00                 	db	0
   804  0171A1  00                 	db	0
   805  0171A2  00                 	db	0
   806  0171A3  00                 	db	0
   807  0171A4  00                 	db	0
   808  0171A5  00                 	db	0
   809  0171A6  00                 	db	0
   810  0171A7  00                 	db	0
   811  0171A8  00                 	db	0
   812  0171A9  00                 	db	0
   813  0171AA  00                 	db	0
   814  0171AB  00                 	db	0
   815  0171AC  00                 	db	0
   816  0171AD  00                 	db	0
   817  0171AE  00                 	db	0
   818  0171AF  00                 	db	0
   819  0171B0  00                 	db	0
   820  0171B1  00                 	db	0
   821  0171B2  00                 	db	0
   822  0171B3  00                 	db	0
   823  0171B4  00                 	db	0
   824  0171B5  00                 	db	0
   825  0171B6  00                 	db	0
   826  0171B7  00                 	db	0
   827  0171B8  00                 	db	0
   828  0171B9  00                 	db	0
   829  0171BA  00                 	db	0
   830  0171BB  00                 	db	0
   831  0171BC  00                 	db	0
   832  0171BD  00                 	db	0
   833  0171BE  00                 	db	0
   834  0171BF  00                 	db	0
   835  0171C0  00                 	db	0
   836  0171C1  00                 	db	0
   837  0171C2  00                 	db	0
   838  0171C3  00                 	db	0
   839  0171C4  00                 	db	0
   840  0171C5  00                 	db	0
   841  0171C6  00                 	db	0
   842  0171C7  00                 	db	0
   843  0171C8  00                 	db	0
   844  0171C9  00                 	db	0
   845  0171CA  00                 	db	0
   846  0171CB  00                 	db	0
   847  0171CC  00                 	db	0
   848  0171CD  00                 	db	0
   849  0171CE  00                 	db	0
   850  0171CF  00                 	db	0
   851  0171D0  00                 	db	0
   852  0171D1  00                 	db	0
   853  0171D2  00                 	db	0
   854  0171D3  00                 	db	0
   855  0171D4  00                 	db	0
   856  0171D5  00                 	db	0
   857  0171D6  00                 	db	0
   858  0171D7  00                 	db	0
   859  0171D8  00                 	db	0
   860  0171D9  00                 	db	0
   861  0171DA  00                 	db	0
   862  0171DB  00                 	db	0
   863  0171DC  00                 	db	0
   864  0171DD  00                 	db	0
   865  0171DE  00                 	db	0
   866  0171DF  00                 	db	0
   867  0171E0  00                 	db	0
   868  0171E1  00                 	db	0
   869  0171E2  00                 	db	0
   870  0171E3  00                 	db	0
   871  0171E4  00                 	db	0
   872  0171E5  00                 	db	0
   873  0171E6  00                 	db	0
   874  0171E7  00                 	db	0
   875  0171E8  00                 	db	0
   876  0171E9  00                 	db	0
   877  0171EA  00                 	db	0
   878  0171EB  00                 	db	0
   879  0171EC  00                 	db	0
   880  0171ED  00                 	db	0
   881  0171EE  00                 	db	0
   882  0171EF  00                 	db	0
   883  0171F0  00                 	db	0
   884  0171F1  00                 	db	0
   885  0171F2  00                 	db	0
   886  0171F3  00                 	db	0
   887  0171F4  00                 	db	0
   888  0171F5  00                 	db	0
   889  0171F6  00                 	db	0
   890  0171F7  00                 	db	0
   891  0171F8  00                 	db	0
   892  0171F9  00                 	db	0
   893  0171FA  00                 	db	0
   894  0171FB  00                 	db	0
   895  0171FC  00                 	db	0
   896  0171FD  00                 	db	0
   897  0171FE  00                 	db	0
   898  0171FF  00                 	db	0
   899  017200  00                 	db	0
   900  017201  00                 	db	0
   901  017202  00                 	db	0
   902  017203  00                 	db	0
   903  017204  00                 	db	0
   904  017205  00                 	db	0
   905  017206  00                 	db	0
   906  017207  00                 	db	0
   907  017208  00                 	db	0
   908  017209  00                 	db	0
   909  01720A  00                 	db	0
   910  01720B  00                 	db	0
   911  01720C  00                 	db	0
   912  01720D  00                 	db	0
   913  01720E  00                 	db	0
   914  01720F  00                 	db	0
   915  017210  00                 	db	0
   916  017211  00                 	db	0
   917  017212  00                 	db	0
   918  017213  00                 	db	0
   919  017214  00                 	db	0
   920  017215  00                 	db	0
   921  017216  00                 	db	0
   922  017217  00                 	db	0
   923  017218  00                 	db	0
   924  017219  00                 	db	0
   925  01721A  00                 	db	0
   926  01721B  00                 	db	0
   927  01721C  00                 	db	0
   928  01721D  00                 	db	0
   929  01721E  00                 	db	0
   930  01721F  00                 	db	0
   931  017220  00                 	db	0
   932  017221  00                 	db	0
   933  017222  00                 	db	0
   934  017223  00                 	db	0
   935  017224  00                 	db	0
   936  017225  00                 	db	0
   937  017226  00                 	db	0
   938  017227  00                 	db	0
   939  017228  00                 	db	0
   940  017229  00                 	db	0
   941  01722A  00                 	db	0
   942  01722B  00                 	db	0
   943  01722C  00                 	db	0
   944  01722D  00                 	db	0
   945  01722E  00                 	db	0
   946  01722F  00                 	db	0
   947  017230  00                 	db	0
   948  017231  00                 	db	0
   949  017232  00                 	db	0
   950  017233  00                 	db	0
   951  017234  00                 	db	0
   952  017235  00                 	db	0
   953  017236  00                 	db	0
   954  017237  00                 	db	0
   955  017238  00                 	db	0
   956  017239  00                 	db	0
   957  01723A  00                 	db	0
   958  01723B  00                 	db	0
   959  01723C  00                 	db	0
   960  01723D  00                 	db	0
   961  01723E  00                 	db	0
   962  01723F  00                 	db	0
   963  017240  00                 	db	0
   964  017241  00                 	db	0
   965  017242  00                 	db	0
   966  017243  00                 	db	0
   967  017244  00                 	db	0
   968  017245  00                 	db	0
   969  017246  00                 	db	0
   970  017247  00                 	db	0
   971  017248  00                 	db	0
   972  017249  00                 	db	0
   973  01724A  00                 	db	0
   974  01724B  00                 	db	0
   975  01724C  00                 	db	0
   976  01724D  00                 	db	0
   977  01724E  00                 	db	0
   978  01724F  00                 	db	0
   979  017250  00                 	db	0
   980  017251  00                 	db	0
   981  017252  00                 	db	0
   982  017253  00                 	db	0
   983  017254  00                 	db	0
   984  017255  00                 	db	0
   985  017256  00                 	db	0
   986  017257  00                 	db	0
   987  017258  00                 	db	0
   988  017259  00                 	db	0
   989  01725A  00                 	db	0
   990  01725B  00                 	db	0
   991  01725C  00                 	db	0
   992  01725D  00                 	db	0
   993  01725E  00                 	db	0
   994  01725F  00                 	db	0
   995  017260  00                 	db	0
   996  017261  00                 	db	0
   997  017262  00                 	db	0
   998  017263  00                 	db	0
   999  017264  00                 	db	0
  1000  017265  00                 	db	0
  1001  017266  00                 	db	0
  1002  017267  00                 	db	0
  1003  017268  00                 	db	0
  1004  017269  00                 	db	0
  1005  01726A  00                 	db	0
  1006  01726B  00                 	db	0
  1007  01726C  00                 	db	0
  1008  01726D  00                 	db	0
  1009  01726E  00                 	db	0
  1010  01726F  00                 	db	0
  1011  017270  00                 	db	0
  1012  017271  00                 	db	0
  1013  017272  00                 	db	0
  1014  017273  00                 	db	0
  1015  017274  00                 	db	0
  1016  017275  00                 	db	0
  1017  017276  00                 	db	0
  1018  017277  00                 	db	0
  1019  017278  00                 	db	0
  1020  017279  00                 	db	0
  1021  01727A  00                 	db	0
  1022  01727B  00                 	db	0
  1023  01727C  00                 	db	0
  1024  01727D  00                 	db	0
  1025  01727E  00                 	db	0
  1026  01727F  00                 	db	0
  1027  017280  00                 	db	0
  1028  017281  00                 	db	0
  1029  017282  00                 	db	0
  1030  017283  00                 	db	0
  1031  017284  00                 	db	0
  1032  017285  00                 	db	0
  1033  017286  00                 	db	0
  1034  017287  00                 	db	0
  1035  017288  00                 	db	0
  1036  017289  00                 	db	0
  1037  01728A  00                 	db	0
  1038  01728B  00                 	db	0
  1039  01728C  00                 	db	0
  1040  01728D  00                 	db	0
  1041  01728E  00                 	db	0
  1042  01728F  00                 	db	0
  1043  017290  00                 	db	0
  1044  017291  00                 	db	0
  1045  017292  00                 	db	0
  1046  017293  00                 	db	0
  1047  017294  00                 	db	0
  1048  017295  00                 	db	0
  1049  017296  00                 	db	0
  1050  017297  00                 	db	0
  1051  017298  00                 	db	0
  1052  017299  00                 	db	0
  1053  01729A  00                 	db	0
  1054  01729B  00                 	db	0
  1055  01729C  00                 	db	0
  1056  01729D  00                 	db	0
  1057  01729E  00                 	db	0
  1058  01729F  00                 	db	0
  1059  0172A0  00                 	db	0
  1060  0172A1  00                 	db	0
  1061  0172A2  00                 	db	0
  1062  0172A3  00                 	db	0
  1063  0172A4  00                 	db	0
  1064  0172A5  00                 	db	0
  1065  0172A6  00                 	db	0
  1066  0172A7  00                 	db	0
  1067  0172A8  00                 	db	0
  1068  0172A9  00                 	db	0
  1069  0172AA  00                 	db	0
  1070  0172AB  00                 	db	0
  1071  0172AC  00                 	db	0
  1072  0172AD  00                 	db	0
  1073  0172AE  00                 	db	0
  1074  0172AF  00                 	db	0
  1075  0172B0  00                 	db	0
  1076  0172B1  00                 	db	0
  1077  0172B2  00                 	db	0
  1078  0172B3  00                 	db	0
  1079  0172B4  00                 	db	0
  1080  0172B5  00                 	db	0
  1081  0172B6  00                 	db	0
  1082  0172B7  00                 	db	0
  1083  0172B8  00                 	db	0
  1084  0172B9  00                 	db	0
  1085  0172BA  00                 	db	0
  1086  0172BB  00                 	db	0
  1087  0172BC  00                 	db	0
  1088  0172BD  00                 	db	0
  1089  0172BE  00                 	db	0
  1090  0172BF  00                 	db	0
  1091  0172C0  00                 	db	0
  1092  0172C1  00                 	db	0
  1093  0172C2  00                 	db	0
  1094  0172C3  00                 	db	0
  1095  0172C4  00                 	db	0
  1096  0172C5  00                 	db	0
  1097  0172C6  00                 	db	0
  1098  0172C7  00                 	db	0
  1099  0172C8  00                 	db	0
  1100  0172C9  00                 	db	0
  1101  0172CA  00                 	db	0
  1102  0172CB  00                 	db	0
  1103  0172CC  00                 	db	0
  1104  0172CD  00                 	db	0
  1105  0172CE  00                 	db	0
  1106  0172CF  00                 	db	0
  1107  0172D0  00                 	db	0
  1108  0172D1  00                 	db	0
  1109  0172D2  00                 	db	0
  1110  0172D3  00                 	db	0
  1111  0172D4  00                 	db	0
  1112  0172D5  00                 	db	0
  1113  0172D6  00                 	db	0
  1114  0172D7  00                 	db	0
  1115  0172D8  00                 	db	0
  1116  0172D9  00                 	db	0
  1117  0172DA  00                 	db	0
  1118  0172DB  00                 	db	0
  1119  0172DC  00                 	db	0
  1120  0172DD  00                 	db	0
  1121  0172DE  00                 	db	0
  1122  0172DF  00                 	db	0
  1123  0172E0  00                 	db	0
  1124  0172E1  00                 	db	0
  1125  0172E2  00                 	db	0
  1126  0172E3  00                 	db	0
  1127  0172E4  00                 	db	0
  1128  0172E5  00                 	db	0
  1129  0172E6  00                 	db	0
  1130  0172E7  00                 	db	0
  1131  0172E8  00                 	db	0
  1132  0172E9  00                 	db	0
  1133  0172EA  00                 	db	0
  1134  0172EB  00                 	db	0
  1135  0172EC  00                 	db	0
  1136  0172ED  00                 	db	0
  1137  0172EE  00                 	db	0
  1138  0172EF  00                 	db	0
  1139  0172F0  00                 	db	0
  1140  0172F1  00                 	db	0
  1141  0172F2  00                 	db	0
  1142  0172F3  00                 	db	0
  1143  0172F4  00                 	db	0
  1144  0172F5  00                 	db	0
  1145  0172F6  00                 	db	0
  1146  0172F7  00                 	db	0
  1147  0172F8  00                 	db	0
  1148  0172F9  00                 	db	0
  1149  0172FA  00                 	db	0
  1150  0172FB  00                 	db	0
  1151  0172FC  00                 	db	0
  1152  0172FD  00                 	db	0
  1153  0172FE  00                 	db	0
  1154  0172FF  00                 	db	0
  1155  017300  00                 	db	0
  1156  017301  00                 	db	0
  1157  017302  00                 	db	0
  1158  017303  00                 	db	0
  1159  017304  00                 	db	0
  1160  017305  00                 	db	0
  1161  017306  00                 	db	0
  1162  017307  00                 	db	0
  1163  017308  00                 	db	0
  1164  017309  00                 	db	0
  1165  01730A  00                 	db	0
  1166  01730B  00                 	db	0
  1167  01730C  00                 	db	0
  1168  01730D  00                 	db	0
  1169  01730E  00                 	db	0
  1170  01730F  00                 	db	0
  1171  017310  00                 	db	0
  1172  017311  00                 	db	0
  1173  017312  00                 	db	0
  1174  017313  00                 	db	0
  1175  017314  00                 	db	0
  1176  017315  00                 	db	0
  1177  017316  00                 	db	0
  1178  017317  00                 	db	0
  1179  017318  00                 	db	0
  1180  017319  00                 	db	0
  1181  01731A  00                 	db	0
  1182  01731B  00                 	db	0
  1183  01731C  00                 	db	0
  1184  01731D  00                 	db	0
  1185  01731E  00                 	db	0
  1186  01731F  00                 	db	0
  1187  017320  00                 	db	0
  1188  017321  00                 	db	0
  1189  017322  00                 	db	0
  1190  017323  00                 	db	0
  1191  017324  00                 	db	0
  1192  017325  00                 	db	0
  1193  017326  00                 	db	0
  1194  017327  00                 	db	0
  1195  017328  00                 	db	0
  1196  017329  00                 	db	0
  1197  01732A  00                 	db	0
  1198  01732B  00                 	db	0
  1199  01732C  00                 	db	0
  1200  01732D  00                 	db	0
  1201  01732E  00                 	db	0
  1202  01732F  00                 	db	0
  1203  017330  00                 	db	0
  1204  017331  00                 	db	0
  1205  017332  00                 	db	0
  1206  017333  00                 	db	0
  1207  017334  00                 	db	0
  1208  017335  00                 	db	0
  1209  017336  00                 	db	0
  1210  017337  00                 	db	0
  1211                           
  1212                           	psect	idataBANK0
  1213  01A19E                     __pidataBANK0:
  1214                           	opt callstack 0
  1215                           
  1216                           ;initializer for _R
  1217  01A19E  0000               	dw	0
  1218  01A1A0  0000               	dw	0
  1219  01A1A2  0000               	dw	0
  1220  01A1A4  0000               	dw	0
  1221  01A1A6  0000               	dw	0
  1222  01A1A8  0000               	dw	0
  1223  01A1AA  0000               	dw	0
  1224  01A1AC  0000               	dw	0
  1225  01A1AE  0000               	dw	0
  1226  01A1B0  0000               	dw	0
  1227  01A1B2  0000               	dw	0
  1228  01A1B4  0000               	dw	0
  1229  01A1B6  0000               	dw	0
  1230  01A1B8  0000               	dw	0
  1231  01A1BA  0000               	dw	0
  1232  01A1BC  0000               	dw	0
  1233  01A1BE  0F67               	dw	3943
  1234  01A1C0  0F8F               	dw	3983
  1235  01A1C2  00                 	db	0
  1236  01A1C3  0000               	dw	0
  1237  01A1C5  00                 	db	0
  1238                           
  1239                           ;initializer for _H
  1240  01A1C6  00                 	db	0
  1241  01A1C7  00                 	db	0
  1242  01A1C8  01                 	db	1
  1243  01A1C9  00                 	db	0
  1244  01A1CA  01                 	db	1
  1245  01A1CB  00                 	db	0
  1246  01A1CC  00                 	db	0
  1247                           
  1248                           	psect	idataBANK1
  1249  018AFA                     __pidataBANK1:
  1250                           	opt callstack 0
  1251                           
  1252                           ;initializer for _C
  1253  018AFA  0000               	dw	0
  1254  018AFC  0000               	dw	0
  1255  018AFE  0000               	dw	0
  1256  018B00  0000               	dw	0
  1257  018B02  0000               	dw	0
  1258  018B04  0000               	dw	0
  1259  018B06  0000               	dw	0
  1260  018B08  0000               	dw	0
  1261  018B0A  0000               	dw	0
  1262  018B0C  0000               	dw	0
  1263  018B0E  0000               	dw	0
  1264  018B10  0000               	dw	0
  1265  018B12  0000               	dw	0
  1266  018B14  0000               	dw	0
  1267  018B16  0000               	dw	0
  1268  018B18  0000               	dw	0
  1269  018B1A  0000               	dw	0
  1270  018B1C  0000               	dw	0
  1271  018B1E  0000               	dw	0
  1272  018B20  0000               	dw	0
  1273  018B22  0000               	dw	0
  1274  018B24  0000               	dw	0
  1275  018B26  0000               	dw	0
  1276  018B28  0000               	dw	0
  1277  018B2A  0000               	dw	0
  1278  018B2C  0000               	dw	0
  1279  018B2E  0000               	dw	0
  1280  018B30  0000               	dw	0
  1281  018B32  0000               	dw	0
  1282  018B34  0000               	dw	0
  1283  018B36  0000               	dw	0
  1284  018B38  0000               	dw	0
  1285  018B3A  0000               	dw	0
  1286  018B3C  0000               	dw	0
  1287  018B3E  0000               	dw	0
  1288  018B40  0000               	dw	0
  1289  018B42  0000               	dw	0
  1290  018B44  0000               	dw	0
  1291  018B46  0000               	dw	0
  1292  018B48  0000               	dw	0
  1293  018B4A  0000               	dw	0
  1294  018B4C  0000               	dw	0
  1295  018B4E  0000               	dw	0
  1296  018B50  0000               	dw	0
  1297  018B52  0000               	dw	0
  1298  018B54  0000               	dw	0
  1299  018B56  0000               	dw	0
  1300  018B58  0000               	dw	0
  1301  018B5A  0000               	dw	0
  1302  018B5C  0000               	dw	0
  1303  018B5E  0000               	dw	0
  1304  018B60  0000               	dw	0
  1305  018B62  0000               	dw	0
  1306  018B64  0000               	dw	0
  1307  018B66  0000               	dw	0
  1308  018B68  0000               	dw	0
  1309  018B6A  0000               	dw	0
  1310  018B6C  0000               	dw	0
  1311  018B6E  0000               	dw	0
  1312  018B70  0000               	dw	0
  1313  018B72  0000               	dw	0
  1314  018B74  0000               	dw	0
  1315  018B76  0000               	dw	0
  1316  018B78  42FA               	dw	17146
  1317  018B7A  00                 	db	0
  1318  018B7B  00                 	db	0
  1319  018B7C  00                 	db	0
  1320  018B7D  00                 	db	0
  1321  018B7E  00                 	db	0
  1322  018B7F  00                 	db	0
  1323  018B80  00                 	db	0
  1324  018B81  00                 	db	0
  1325  018B82  00                 	db	0
  1326  018B83  00                 	db	0
  1327  018B84  00                 	db	0
  1328  018B85  00                 	db	0
  1329  018B86  00                 	db	0
  1330  018B87  00                 	db	0
  1331  018B88  00                 	db	0
  1332  018B89  00                 	db	0
  1333  018B8A  00                 	db	0
  1334  018B8B  00                 	db	0
  1335  018B8C  00                 	db	0
  1336  018B8D  00                 	db	0
  1337  018B8E  00                 	db	0
  1338  018B8F  00                 	db	0
  1339  018B90  00                 	db	0
  1340  018B91  00                 	db	0
  1341  018B92  00                 	db	0
  1342  018B93  00                 	db	0
  1343  018B94  00                 	db	0
  1344  018B95  00                 	db	0
  1345  018B96  00                 	db	0
  1346  018B97  00                 	db	0
  1347  018B98  00                 	db	0
  1348  018B99  00                 	db	0
  1349  018B9A  00                 	db	0
  1350  018B9B  00                 	db	0
  1351  018B9C  00                 	db	0
  1352  018B9D  00                 	db	0
  1353  018B9E  00                 	db	0
  1354  018B9F  00                 	db	0
  1355  018BA0  00                 	db	0
  1356  018BA1  00                 	db	0
  1357  018BA2  00                 	db	0
  1358  018BA3  00                 	db	0
  1359  018BA4  00                 	db	0
  1360  018BA5  00                 	db	0
  1361  018BA6  00                 	db	0
  1362  018BA7  00                 	db	0
  1363  018BA8  00                 	db	0
  1364  018BA9  00                 	db	0
  1365  018BAA  00                 	db	0
  1366  018BAB  00                 	db	0
  1367  018BAC  00                 	db	0
  1368  018BAD  00                 	db	0
  1369  018BAE  00                 	db	0
  1370  018BAF  00                 	db	0
  1371  018BB0  00                 	db	0
  1372  018BB1  00                 	db	0
  1373  018BB2  00                 	db	0
  1374  018BB3  00                 	db	0
  1375  018BB4  00                 	db	0
  1376  018BB5  00                 	db	0
  1377  018BB6  00                 	db	0
  1378  018BB7  00                 	db	0
  1379  018BB8  00                 	db	0
  1380  018BB9  00                 	db	0
  1381  018BBA  00                 	db	0
  1382  018BBB  00                 	db	0
  1383  018BBC  00                 	db	0
  1384  018BBD  00                 	db	0
  1385  018BBE  00                 	db	0
  1386  018BBF  00                 	db	0
  1387  018BC0  00                 	db	0
  1388  018BC1  00                 	db	0
  1389  018BC2  00                 	db	0
  1390  018BC3  00                 	db	0
  1391  018BC4  00                 	db	0
  1392  018BC5  00                 	db	0
  1393  018BC6  00                 	db	0
  1394  018BC7  00                 	db	0
  1395  018BC8  00                 	db	0
  1396  018BC9  00                 	db	0
  1397  018BCA  00                 	db	0
  1398  018BCB  00                 	db	0
  1399  018BCC  00                 	db	0
  1400                           
  1401                           ;initializer for stoa@F1166
  1402  018BCD  28                 	db	40
  1403  018BCE  6E                 	db	110
  1404  018BCF  75                 	db	117
  1405  018BD0  6C                 	db	108
  1406  018BD1  6C                 	db	108
  1407  018BD2  29                 	db	41
  1408  018BD3  00                 	db	0
  1409                           
  1410                           	psect	idataBANK2
  1411  018D6C                     __pidataBANK2:
  1412                           	opt callstack 0
  1413                           
  1414                           ;initializer for _V
  1415  018D6C  00                 	db	0
  1416  018D6D  00                 	db	0
  1417  018D6E  00                 	db	0
  1418  018D6F  00                 	db	0
  1419  018D70  00                 	db	0
  1420  018D71  00                 	db	0
  1421  018D72  00                 	db	0
  1422  018D73  00                 	db	0
  1423  018D74  00                 	db	0
  1424  018D75  00                 	db	0
  1425  018D76  00                 	db	0
  1426  018D77  00                 	db	0
  1427  018D78  00                 	db	0
  1428  018D79  00                 	db	0
  1429  018D7A  00                 	db	0
  1430  018D7B  00                 	db	0
  1431  018D7C  00                 	db	0
  1432  018D7D  00                 	db	0
  1433  018D7E  00                 	db	0
  1434  018D7F  00                 	db	0
  1435  018D80  00                 	db	0
  1436  018D81  00                 	db	0
  1437  018D82  00                 	db	0
  1438  018D83  00                 	db	0
  1439  018D84  00                 	db	0
  1440  018D85  00                 	db	0
  1441  018D86  00                 	db	0
  1442  018D87  00                 	db	0
  1443  018D88  00                 	db	0
  1444  018D89  00                 	db	0
  1445  018D8A  00                 	db	0
  1446  018D8B  00                 	db	0
  1447  018D8C  00                 	db	0
  1448  018D8D  00                 	db	0
  1449  018D8E  00                 	db	0
  1450  018D8F  00                 	db	0
  1451  018D90  00                 	db	0
  1452  018D91  00                 	db	0
  1453  018D92  00                 	db	0
  1454  018D93  00                 	db	0
  1455  018D94  00                 	db	0
  1456  018D95  00                 	db	0
  1457  018D96  00                 	db	0
  1458  018D97  00                 	db	0
  1459  018D98  00                 	db	0
  1460  018D99  00                 	db	0
  1461  018D9A  00                 	db	0
  1462  018D9B  00                 	db	0
  1463  018D9C  00                 	db	0
  1464  018D9D  00                 	db	0
  1465  018D9E  00                 	db	0
  1466  018D9F  00                 	db	0
  1467  018DA0  00                 	db	0
  1468  018DA1  00                 	db	0
  1469  018DA2  00                 	db	0
  1470  018DA3  00                 	db	0
  1471  018DA4  00                 	db	0
  1472  018DA5  00                 	db	0
  1473  018DA6  00                 	db	0
  1474  018DA7  00                 	db	0
  1475  018DA8  00                 	db	0
  1476  018DA9  00                 	db	0
  1477  018DAA  00                 	db	0
  1478  018DAB  00                 	db	0
  1479  018DAC  00                 	db	0
  1480  018DAD  00                 	db	0
  1481  018DAE  00                 	db	0
  1482  018DAF  00                 	db	0
  1483  018DB0  00                 	db	0
  1484  018DB1  00                 	db	0
  1485  018DB2  00                 	db	0
  1486  018DB3  00                 	db	0
  1487  018DB4  00                 	db	0
  1488  018DB5  00                 	db	0
  1489  018DB6  00                 	db	0
  1490  018DB7  00                 	db	0
  1491  018DB8  00                 	db	0
  1492  018DB9  00                 	db	0
  1493  018DBA  00                 	db	0
  1494  018DBB  00                 	db	0
  1495  018DBC  00                 	db	0
  1496  018DBD  00                 	db	0
  1497  018DBE  00                 	db	0
  1498  018DBF  00                 	db	0
  1499  018DC0  00                 	db	0
  1500  018DC1  00                 	db	0
  1501  018DC2  00                 	db	0
  1502  018DC3  00                 	db	0
  1503  018DC4  00                 	db	0
  1504  018DC5  00                 	db	0
  1505  018DC6  00                 	db	0
  1506  018DC7  00                 	db	0
  1507  018DC8  00                 	db	0
  1508  018DC9  00                 	db	0
  1509  018DCA  00                 	db	0
  1510  018DCB  00                 	db	0
  1511  018DCC  00                 	db	0
  1512  018DCD  00                 	db	0
  1513  018DCE  00                 	db	0
  1514  018DCF  00                 	db	0
  1515  018DD0  00                 	db	0
  1516  018DD1  00                 	db	0
  1517  018DD2  00                 	db	0
  1518  018DD3  00                 	db	0
  1519  018DD4  00                 	db	0
  1520  018DD5  00                 	db	0
  1521  018DD6  00                 	db	0
  1522  018DD7  00                 	db	0
  1523  018DD8  00                 	db	0
  1524  018DD9  00                 	db	0
  1525  018DDA  00                 	db	0
  1526  018DDB  00                 	db	0
  1527  018DDC  00                 	db	0
  1528  018DDD  00                 	db	0
  1529  018DDE  00                 	db	0
  1530  018DDF  00                 	db	0
  1531  018DE0  00                 	db	0
  1532  018DE1  00                 	db	0
  1533  018DE2  00                 	db	0
  1534  018DE3  00                 	db	0
  1535  018DE4  00                 	db	0
  1536  018DE5  00                 	db	0
  1537  018DE6  00                 	db	0
  1538  018DE7  00                 	db	0
  1539  018DE8  00                 	db	0
  1540  018DE9  00                 	db	0
  1541  018DEA  00                 	db	0
  1542  018DEB  00                 	db	0
  1543  018DEC  00                 	db	0
  1544  018DED  0000               	dw	0
  1545  018DEF  0000               	dw	0
  1546  018DF1  0000               	dw	0
  1547  018DF3  0000               	dw	0
  1548  018DF5  00                 	db	0
  1549  018DF6  00                 	db	0
  1550  018DF7  00                 	db	0
  1551  018DF8  00                 	db	0
  1552  018DF9  00                 	db	0
  1553  018DFA  00                 	db	0
  1554  018DFB  0000               	dw	0
  1555  018DFD  0000               	dw	0
  1556  018DFF  0000               	dw	0
  1557  018E01  0000               	dw	0
  1558  018E03  0000               	dw	0
  1559  018E05  0000               	dw	0
  1560  018E07  00                 	db	0
  1561  018E08  00                 	db	0
  1562  018E09  00                 	db	0
  1563  018E0A  00                 	db	0
  1564  018E0B  00                 	db	0
  1565  018E0C  00                 	db	0
  1566  018E0D  00                 	db	0
  1567  018E0E  00                 	db	0
  1568  018E0F  00                 	db	0
  1569  018E10  00                 	db	0
  1570  018E11  0000               	dw	0
  1571  018E13  0000               	dw	0
  1572  018E15  2D                 	db	45
  1573  018E16  00                 	db	0
  1574  018E17  00                 	db	0
  1575  018E18  0000               	dw	0
  1576  018E1A  0000               	dw	0
  1577  018E1C  0000               	dw	0
  1578  018E1E  0000               	dw	0
  1579  018E20  0000               	dw	0
  1580  018E22  0000               	dw	0
  1581  018E24  0000               	dw	0
  1582  018E26  0000               	dw	0
  1583                           
  1584                           	psect	mediumconst
  1585  00FC30                     __pmediumconst:
  1586                           	opt callstack 0
  1587  00FC30  00                 	db	0
  1588  00FC31                     _BVSOC_TABLE:
  1589                           	opt callstack 0
  1590  00FC31  59D8               	dw	23000
  1591  00FC33  0000               	dw	0
  1592  00FC35  0005               	dw	5
  1593  00FC37  0000               	dw	0
  1594  00FC39  5B68               	dw	23400
  1595  00FC3B  0000               	dw	0
  1596  00FC3D  000A               	dw	10
  1597  00FC3F  0000               	dw	0
  1598  00FC41  5C30               	dw	23600
  1599  00FC43  0000               	dw	0
  1600  00FC45  0014               	dw	20
  1601  00FC47  0000               	dw	0
  1602  00FC49  5E38               	dw	24120
  1603  00FC4B  0000               	dw	0
  1604  00FC4D  0019               	dw	25
  1605  00FC4F  0000               	dw	0
  1606  00FC51  5E88               	dw	24200
  1607  00FC53  0000               	dw	0
  1608  00FC55  001E               	dw	30
  1609  00FC57  0000               	dw	0
  1610  00FC59  5F78               	dw	24440
  1611  00FC5B  0000               	dw	0
  1612  00FC5D  0028               	dw	40
  1613  00FC5F  0000               	dw	0
  1614  00FC61  5FDC               	dw	24540
  1615  00FC63  0000               	dw	0
  1616  00FC65  002D               	dw	45
  1617  00FC67  0000               	dw	0
  1618  00FC69  6018               	dw	24600
  1619  00FC6B  0000               	dw	0
  1620  00FC6D  0032               	dw	50
  1621  00FC6F  0000               	dw	0
  1622  00FC71  6046               	dw	24646
  1623  00FC73  0000               	dw	0
  1624  00FC75  0035               	dw	53
  1625  00FC77  0000               	dw	0
  1626  00FC79  607C               	dw	24700
  1627  00FC7B  0000               	dw	0
  1628  00FC7D  0037               	dw	55
  1629  00FC7F  0000               	dw	0
  1630  00FC81  60AE               	dw	24750
  1631  00FC83  0000               	dw	0
  1632  00FC85  0039               	dw	57
  1633  00FC87  0000               	dw	0
  1634  00FC89  60E0               	dw	24800
  1635  00FC8B  0000               	dw	0
  1636  00FC8D  003C               	dw	60
  1637  00FC8F  0000               	dw	0
  1638  00FC91  6112               	dw	24850
  1639  00FC93  0000               	dw	0
  1640  00FC95  003F               	dw	63
  1641  00FC97  0000               	dw	0
  1642  00FC99  6176               	dw	24950
  1643  00FC9B  0000               	dw	0
  1644  00FC9D  0043               	dw	67
  1645  00FC9F  0000               	dw	0
  1646  00FCA1  61A8               	dw	25000
  1647  00FCA3  0000               	dw	0
  1648  00FCA5  0046               	dw	70
  1649  00FCA7  0000               	dw	0
  1650  00FCA9  61BC               	dw	25020
  1651  00FCAB  0000               	dw	0
  1652  00FCAD  0048               	dw	72
  1653  00FCAF  0000               	dw	0
  1654  00FCB1  61D0               	dw	25040
  1655  00FCB3  0000               	dw	0
  1656  00FCB5  004B               	dw	75
  1657  00FCB7  0000               	dw	0
  1658  00FCB9  61DA               	dw	25050
  1659  00FCBB  0000               	dw	0
  1660  00FCBD  0050               	dw	80
  1661  00FCBF  0000               	dw	0
  1662  00FCC1  61E4               	dw	25060
  1663  00FCC3  0000               	dw	0
  1664  00FCC5  0055               	dw	85
  1665  00FCC7  0000               	dw	0
  1666  00FCC9  61F8               	dw	25080
  1667  00FCCB  0000               	dw	0
  1668  00FCCD  005A               	dw	90
  1669  00FCCF  0000               	dw	0
  1670  00FCD1  6208               	dw	25096
  1671  00FCD3  0000               	dw	0
  1672  00FCD5  005C               	dw	92
  1673  00FCD7  0000               	dw	0
  1674  00FCD9  6222               	dw	25122
  1675  00FCDB  0000               	dw	0
  1676  00FCDD  005D               	dw	93
  1677  00FCDF  0000               	dw	0
  1678  00FCE1  6234               	dw	25140
  1679  00FCE3  0000               	dw	0
  1680  00FCE5  005F               	dw	95
  1681  00FCE7  0000               	dw	0
  1682  00FCE9  6248               	dw	25160
  1683  00FCEB  0000               	dw	0
  1684  00FCED  0061               	dw	97
  1685  00FCEF  0000               	dw	0
  1686  00FCF1  625C               	dw	25180
  1687  00FCF3  0000               	dw	0
  1688  00FCF5  0064               	dw	100
  1689  00FCF7  0000               	dw	0
  1690  00FCF9  6658               	dw	26200
  1691  00FCFB  0000               	dw	0
  1692  00FCFD  005A               	dw	90
  1693  00FCFF  0000               	dw	0
  1694  00FD01                     __end_of_BVSOC_TABLE:
  1695                           	opt callstack 0
  1696  00FD01                     _T:
  1697                           	opt callstack 0
  1698  00FD01  63                 	db	99
  1699  00FD02  6F                 	db	111
  1700  00FD03  6D                 	db	109
  1701  00FD04  6D                 	db	109
  1702  00FD05  61                 	db	97
  1703  00FD06  6E                 	db	110
  1704  00FD07  64                 	db	100
  1705  00FD08  73                 	db	115
  1706  00FD09  20                 	db	32
  1707  00FD0A  31                 	db	49
  1708  00FD0B  00                 	db	0
  1709  00FD0C  00                 	db	0
  1710  00FD0D  00                 	db	0
  1711  00FD0E  00                 	db	0
  1712  00FD0F  00                 	db	0
  1713  00FD10  00                 	db	0
  1714  00FD11  00                 	db	0
  1715  00FD12  00                 	db	0
  1716  00FD13  64                 	db	100
  1717  00FD14  69                 	db	105
  1718  00FD15  73                 	db	115
  1719  00FD16  70                 	db	112
  1720  00FD17  6C                 	db	108
  1721  00FD18  61                 	db	97
  1722  00FD19  79                 	db	121
  1723  00FD1A  73                 	db	115
  1724  00FD1B  20                 	db	32
  1725  00FD1C  31                 	db	49
  1726  00FD1D  00                 	db	0
  1727  00FD1E  00                 	db	0
  1728  00FD1F  00                 	db	0
  1729  00FD20  00                 	db	0
  1730  00FD21  00                 	db	0
  1731  00FD22  00                 	db	0
  1732  00FD23  00                 	db	0
  1733  00FD24  00                 	db	0
  1734  00FD25  63                 	db	99
  1735  00FD26  6F                 	db	111
  1736  00FD27  6D                 	db	109
  1737  00FD28  6D                 	db	109
  1738  00FD29  61                 	db	97
  1739  00FD2A  6E                 	db	110
  1740  00FD2B  64                 	db	100
  1741  00FD2C  73                 	db	115
  1742  00FD2D  20                 	db	32
  1743  00FD2E  32                 	db	50
  1744  00FD2F  00                 	db	0
  1745  00FD30  00                 	db	0
  1746  00FD31  00                 	db	0
  1747  00FD32  00                 	db	0
  1748  00FD33  00                 	db	0
  1749  00FD34  00                 	db	0
  1750  00FD35  00                 	db	0
  1751  00FD36  00                 	db	0
  1752  00FD37  64                 	db	100
  1753  00FD38  69                 	db	105
  1754  00FD39  73                 	db	115
  1755  00FD3A  70                 	db	112
  1756  00FD3B  6C                 	db	108
  1757  00FD3C  61                 	db	97
  1758  00FD3D  79                 	db	121
  1759  00FD3E  73                 	db	115
  1760  00FD3F  20                 	db	32
  1761  00FD40  32                 	db	50
  1762  00FD41  00                 	db	0
  1763  00FD42  00                 	db	0
  1764  00FD43  00                 	db	0
  1765  00FD44  00                 	db	0
  1766  00FD45  00                 	db	0
  1767  00FD46  00                 	db	0
  1768  00FD47  00                 	db	0
  1769  00FD48  00                 	db	0
  1770  00FD49  63                 	db	99
  1771  00FD4A  6F                 	db	111
  1772  00FD4B  6D                 	db	109
  1773  00FD4C  6D                 	db	109
  1774  00FD4D  61                 	db	97
  1775  00FD4E  6E                 	db	110
  1776  00FD4F  64                 	db	100
  1777  00FD50  73                 	db	115
  1778  00FD51  20                 	db	32
  1779  00FD52  33                 	db	51
  1780  00FD53  00                 	db	0
  1781  00FD54  00                 	db	0
  1782  00FD55  00                 	db	0
  1783  00FD56  00                 	db	0
  1784  00FD57  00                 	db	0
  1785  00FD58  00                 	db	0
  1786  00FD59  00                 	db	0
  1787  00FD5A  00                 	db	0
  1788  00FD5B  64                 	db	100
  1789  00FD5C  69                 	db	105
  1790  00FD5D  73                 	db	115
  1791  00FD5E  70                 	db	112
  1792  00FD5F  6C                 	db	108
  1793  00FD60  61                 	db	97
  1794  00FD61  79                 	db	121
  1795  00FD62  73                 	db	115
  1796  00FD63  20                 	db	32
  1797  00FD64  33                 	db	51
  1798  00FD65  00                 	db	0
  1799  00FD66  00                 	db	0
  1800  00FD67  00                 	db	0
  1801  00FD68  00                 	db	0
  1802  00FD69  00                 	db	0
  1803  00FD6A  00                 	db	0
  1804  00FD6B  00                 	db	0
  1805  00FD6C  00                 	db	0
  1806  00FD6D  63                 	db	99
  1807  00FD6E  6F                 	db	111
  1808  00FD6F  6D                 	db	109
  1809  00FD70  6D                 	db	109
  1810  00FD71  61                 	db	97
  1811  00FD72  6E                 	db	110
  1812  00FD73  64                 	db	100
  1813  00FD74  73                 	db	115
  1814  00FD75  20                 	db	32
  1815  00FD76  34                 	db	52
  1816  00FD77  00                 	db	0
  1817  00FD78  00                 	db	0
  1818  00FD79  00                 	db	0
  1819  00FD7A  00                 	db	0
  1820  00FD7B  00                 	db	0
  1821  00FD7C  00                 	db	0
  1822  00FD7D  00                 	db	0
  1823  00FD7E  00                 	db	0
  1824  00FD7F  64                 	db	100
  1825  00FD80  69                 	db	105
  1826  00FD81  73                 	db	115
  1827  00FD82  70                 	db	112
  1828  00FD83  6C                 	db	108
  1829  00FD84  61                 	db	97
  1830  00FD85  79                 	db	121
  1831  00FD86  73                 	db	115
  1832  00FD87  20                 	db	32
  1833  00FD88  34                 	db	52
  1834  00FD89  00                 	db	0
  1835  00FD8A  00                 	db	0
  1836  00FD8B  00                 	db	0
  1837  00FD8C  00                 	db	0
  1838  00FD8D  00                 	db	0
  1839  00FD8E  00                 	db	0
  1840  00FD8F  00                 	db	0
  1841  00FD90  00                 	db	0
  1842  00FD91                     __end_of_T:
  1843                           	opt callstack 0
  1844  00FD91  0000               	dw	0
  1845  00FD93  3F80               	dw	16256
  1846  00FD95  0000               	dw	0
  1847  00FD97  3FC0               	dw	16320
  1848  00FD99                     __end_of_bp:
  1849                           	opt callstack 0
  1850  00FD99  AA00               	dw	43520
  1851  00FD9B  3FB8               	dw	16312
  1852  00FD9D                     __end_of_ivln2_h:
  1853                           	opt callstack 0
  1854  00FD9D  23C6               	dw	9158
  1855  00FD9F  B8F6               	dw	47350
  1856  00FDA1                     __end_of_cp_l:
  1857                           	opt callstack 0
  1858  00FDA1  4000               	dw	16384
  1859  00FDA3  3F76               	dw	16246
  1860  00FDA5                     __end_of_cp_h:
  1861                           	opt callstack 0
  1862  0000                     _IVTADL	set	14493
  1863  0000                     _IVTADH	set	14494
  1864  0000                     _IVTADU	set	14495
  1865  0000                     _PIR6bits	set	14758
  1866  0000                     _PIR4bits	set	14756
  1867  0000                     _PIE8bits	set	14744
  1868  0000                     _PIR8bits	set	14760
  1869  0000                     _SCANPR	set	14839
  1870  0000                     _DMA2PR	set	14836
  1871  0000                     _DMA1PR	set	14835
  1872  0000                     _MAINPR	set	14834
  1873  0000                     _ISRPR	set	14833
  1874  0000                     _PIE2bits	set	14738
  1875  0000                     _PIR2bits	set	14754
  1876  0000                     _PIE9bits	set	14745
  1877  0000                     _PIR9bits	set	14761
  1878  0000                     _PIE6bits	set	14742
  1879  0000                     _PIE3bits	set	14739
  1880  0000                     _PMD7	set	14791
  1881  0000                     _PMD6	set	14790
  1882  0000                     _PMD5	set	14789
  1883  0000                     _PMD4	set	14788
  1884  0000                     _PMD3	set	14787
  1885  0000                     _PMD2	set	14786
  1886  0000                     _PMD1	set	14785
  1887  0000                     _PMD0	set	14784
  1888  0000                     _OSCTUNE	set	14814
  1889  0000                     _OSCFRQ	set	14815
  1890  0000                     _OSCEN	set	14813
  1891  0000                     _OSCCON3	set	14811
  1892  0000                     _OSCCON1	set	14809
  1893  0000                     _IPR8bits	set	14728
  1894  0000                     _IPR9bits	set	14729
  1895  0000                     _IPR5bits	set	14725
  1896  0000                     _IPR1bits	set	14721
  1897  0000                     _IPR3bits	set	14723
  1898  0000                     _IPR6bits	set	14726
  1899  0000                     _IPR2bits	set	14722
  1900  0000                     _PIE5bits	set	14741
  1901  0000                     _PIE1bits	set	14737
  1902  0000                     _PIR5bits	set	14757
  1903  0000                     _PIR1bits	set	14753
  1904  0000                     _PLLR	set	118496
  1905  0000                     _SPI1SDIPPS	set	15071
  1906  0000                     _U1RXPPS	set	15077
  1907  0000                     _RC6PPS	set	14870
  1908  0000                     _RC5PPS	set	14869
  1909  0000                     _INT1PPS	set	15041
  1910  0000                     _RD1PPS	set	14873
  1911  0000                     _INT0PPS	set	15040
  1912  0000                     _RC3PPS	set	14867
  1913  0000                     _RB6PPS	set	14862
  1914  0000                     _SPI1SCKPPS	set	15070
  1915  0000                     _U2RXPPS	set	15080
  1916  0000                     _SLRCONF	set	14995
  1917  0000                     _SLRCONE	set	14979
  1918  0000                     _SLRCOND	set	14963
  1919  0000                     _SLRCONC	set	14947
  1920  0000                     _SLRCONB	set	14931
  1921  0000                     _SLRCONA	set	14915
  1922  0000                     _ODCOND	set	14962
  1923  0000                     _ODCONC	set	14946
  1924  0000                     _ODCONB	set	14930
  1925  0000                     _ODCONA	set	14914
  1926  0000                     _ODCONF	set	14994
  1927  0000                     _ODCONE	set	14978
  1928  0000                     _WPUC	set	14945
  1929  0000                     _WPUA	set	14913
  1930  0000                     _WPUB	set	14929
  1931  0000                     _WPUE	set	14977
  1932  0000                     _WPUF	set	14993
  1933  0000                     _WPUD	set	14961
  1934  0000                     _ANSELA	set	14912
  1935  0000                     _ANSELF	set	14992
  1936  0000                     _ANSELE	set	14976
  1937  0000                     _ANSELB	set	14928
  1938  0000                     _ANSELC	set	14944
  1939  0000                     _ANSELD	set	14960
  1940  0000                     _DMA2SSA	set	15321
  1941  0000                     _DMA1SSA	set	15353
  1942  0000                     _DMA2DSZ	set	15310
  1943  0000                     _DMA2SSZ	set	15319
  1944  0000                     _DMA2DSA	set	15312
  1945  0000                     _DMA1DSZ	set	15342
  1946  0000                     _DMA1SSZ	set	15351
  1947  0000                     _DMA1DSA	set	15344
  1948  0000                     _DMA2CON0bits	set	15324
  1949  0000                     _DMA2CON1bits	set	15325
  1950  0000                     _DMA1CON0bits	set	15356
  1951  0000                     _DMA1CON1bits	set	15357
  1952  0000                     _DMA2CON0	set	15324
  1953  0000                     _DMA2AIRQ	set	15326
  1954  0000                     _DMA2SIRQ	set	15327
  1955  0000                     _DMA2CON1	set	15325
  1956  0000                     _DMA1CON0	set	15356
  1957  0000                     _DMA1AIRQ	set	15358
  1958  0000                     _DMA1SIRQ	set	15359
  1959  0000                     _DMA1CON1	set	15357
  1960  0000                     _CLKRCON	set	15589
  1961  0000                     _CLKRCLK	set	15590
  1962  0000                     _SPI1INTFbits	set	15642
  1963  0000                     _SPI1RXB	set	15632
  1964  0000                     _SPI1TXB	set	15633
  1965  0000                     _SPI1TCNTL	set	15634
  1966  0000                     _SPI1CON0	set	15636
  1967  0000                     _SPI1CLK	set	15644
  1968  0000                     _SPI1BAUD	set	15641
  1969  0000                     _SPI1CON2	set	15638
  1970  0000                     _SPI1CON1	set	15637
  1971  0000                     _U2RXB	set	15824
  1972  0000                     _U2TXB	set	15826
  1973  0000                     _U2ERRIE	set	15842
  1974  0000                     _U2ERRIR	set	15841
  1975  0000                     _U2UIR	set	15840
  1976  0000                     _U2FIFO	set	15839
  1977  0000                     _U2BRGH	set	15838
  1978  0000                     _U2BRGL	set	15837
  1979  0000                     _U2CON2	set	15836
  1980  0000                     _U2CON1	set	15835
  1981  0000                     _U2CON0	set	15834
  1982  0000                     _U2P3L	set	15832
  1983  0000                     _U2P2L	set	15830
  1984  0000                     _U2P1L	set	15828
  1985  0000                     _U1RXB	set	15848
  1986  0000                     _U1ERRIE	set	15866
  1987  0000                     _U1ERRIR	set	15865
  1988  0000                     _U1UIR	set	15864
  1989  0000                     _U1FIFO	set	15863
  1990  0000                     _U1BRGH	set	15862
  1991  0000                     _U1BRGL	set	15861
  1992  0000                     _U1CON2	set	15860
  1993  0000                     _U1CON1	set	15859
  1994  0000                     _U1CON0	set	15858
  1995  0000                     _U1P3H	set	15857
  1996  0000                     _U1P3L	set	15856
  1997  0000                     _U1P2H	set	15855
  1998  0000                     _U1P2L	set	15854
  1999  0000                     _U1P1H	set	15853
  2000  0000                     _U1P1L	set	15852
  2001  0000                     _FVRCON	set	16065
  2002  0000                     _ADFLTRL	set	16102
  2003  0000                     _ADFLTRH	set	16103
  2004  0000                     _ADCON0bits	set	16120
  2005  0000                     _ADCON0	set	16120
  2006  0000                     _ADCLK	set	16127
  2007  0000                     _ADACT	set	16126
  2008  0000                     _ADREF	set	16125
  2009  0000                     _ADSTAT	set	16124
  2010  0000                     _ADCON3	set	16123
  2011  0000                     _ADCON2	set	16122
  2012  0000                     _ADCON1	set	16121
  2013  0000                     _ADPREH	set	16119
  2014  0000                     _ADPREL	set	16118
  2015  0000                     _ADCAP	set	16117
  2016  0000                     _ADACQH	set	16116
  2017  0000                     _ADACQL	set	16115
  2018  0000                     _ADPCH	set	16113
  2019  0000                     _ADRPT	set	16108
  2020  0000                     _ADACCU	set	16106
  2021  0000                     _ADSTPTH	set	16101
  2022  0000                     _ADSTPTL	set	16100
  2023  0000                     _ADUTHH	set	16097
  2024  0000                     _ADUTHL	set	16096
  2025  0000                     _ADLTHH	set	16095
  2026  0000                     _ADLTHL	set	16094
  2027  0000                     _CCPTMRS1bits	set	16223
  2028  0000                     _PORTFbits	set	16335
  2029  0000                     _LATCbits	set	16316
  2030  0000                     _LATDbits	set	16317
  2031  0000                     _PORTBbits	set	16331
  2032  0000                     _T3CONbits	set	16294
  2033  0000                     _T3CON	set	16294
  2034  0000                     _TMR3L	set	16292
  2035  0000                     _TMR3H	set	16293
  2036  0000                     _T3CLK	set	16297
  2037  0000                     _T3GATE	set	16296
  2038  0000                     _T3GCON	set	16295
  2039  0000                     _T2CON	set	16300
  2040  0000                     _T2TMR	set	16298
  2041  0000                     _T2PR	set	16299
  2042  0000                     _T2RST	set	16303
  2043  0000                     _T2HLT	set	16301
  2044  0000                     _T2CLKCON	set	16302
  2045  0000                     _PWM8DCL	set	16224
  2046  0000                     _PWM8DCH	set	16225
  2047  0000                     _PWM8CON	set	16226
  2048  0000                     _LATEbits	set	16318
  2049  0000                     _T5CONbits	set	16282
  2050  0000                     _T5CON	set	16282
  2051  0000                     _TMR5L	set	16280
  2052  0000                     _TMR5H	set	16281
  2053  0000                     _T5CLK	set	16285
  2054  0000                     _T5GATE	set	16284
  2055  0000                     _T5GCON	set	16283
  2056  0000                     _T6CON	set	16276
  2057  0000                     _T6TMR	set	16274
  2058  0000                     _T6PR	set	16275
  2059  0000                     _T6RST	set	16279
  2060  0000                     _T6HLT	set	16277
  2061  0000                     _T6CLKCON	set	16278
  2062  0000                     _TRISD	set	16325
  2063  0000                     _TRISC	set	16324
  2064  0000                     _TRISB	set	16323
  2065  0000                     _TRISA	set	16322
  2066  0000                     _TRISF	set	16327
  2067  0000                     _TRISE	set	16326
  2068  0000                     _LATC	set	16316
  2069  0000                     _LATB	set	16315
  2070  0000                     _LATF	set	16319
  2071  0000                     _LATA	set	16314
  2072  0000                     _LATD	set	16317
  2073  0000                     _LATE	set	16318
  2074  0000                     _IVTLOCKbits	set	16340
  2075  0000                     _IVTLOCK	set	16340
  2076  0000                     _INTCON0bits	set	16338
  2077  0000                     _GIE	set	130711
  2078  00FDA5                     STR_50:
  2079                           
  2080                           ; BSR set to: 57
  2081  00FDA5  20                 	db	32
  2082  00FDA6  25                 	db	37
  2083  00FDA7  6C                 	db	108	;'l'
  2084  00FDA8  75                 	db	117	;'u'
  2085  00FDA9  2C                 	db	44
  2086  00FDAA  25                 	db	37
  2087  00FDAB  34                 	db	52	;'4'
  2088  00FDAC  2E                 	db	46
  2089  00FDAD  34                 	db	52	;'4'
  2090  00FDAE  66                 	db	102	;'f'
  2091  00FDAF  2C                 	db	44
  2092  00FDB0  25                 	db	37
  2093  00FDB1  34                 	db	52	;'4'
  2094  00FDB2  2E                 	db	46
  2095  00FDB3  34                 	db	52	;'4'
  2096  00FDB4  66                 	db	102	;'f'
  2097  00FDB5  2C                 	db	44
  2098  00FDB6  25                 	db	37
  2099  00FDB7  34                 	db	52	;'4'
  2100  00FDB8  2E                 	db	46
  2101  00FDB9  34                 	db	52	;'4'
  2102  00FDBA  66                 	db	102	;'f'
  2103  00FDBB  2C                 	db	44
  2104  00FDBC  25                 	db	37
  2105  00FDBD  34                 	db	52	;'4'
  2106  00FDBE  2E                 	db	46
  2107  00FDBF  34                 	db	52	;'4'
  2108  00FDC0  66                 	db	102	;'f'
  2109  00FDC1  2C                 	db	44
  2110  00FDC2  25                 	db	37
  2111  00FDC3  34                 	db	52	;'4'
  2112  00FDC4  2E                 	db	46
  2113  00FDC5  33                 	db	51	;'3'
  2114  00FDC6  66                 	db	102	;'f'
  2115  00FDC7  2C                 	db	44
  2116  00FDC8  25                 	db	37
  2117  00FDC9  34                 	db	52	;'4'
  2118  00FDCA  2E                 	db	46
  2119  00FDCB  33                 	db	51	;'3'
  2120  00FDCC  66                 	db	102	;'f'
  2121  00FDCD  2C                 	db	44
  2122  00FDCE  25                 	db	37
  2123  00FDCF  34                 	db	52	;'4'
  2124  00FDD0  2E                 	db	46
  2125  00FDD1  33                 	db	51	;'3'
  2126  00FDD2  66                 	db	102	;'f'
  2127  00FDD3  2C                 	db	44
  2128  00FDD4  25                 	db	37
  2129  00FDD5  34                 	db	52	;'4'
  2130  00FDD6  2E                 	db	46
  2131  00FDD7  33                 	db	51	;'3'
  2132  00FDD8  66                 	db	102	;'f'
  2133  00FDD9  2C                 	db	44
  2134  00FDDA  25                 	db	37
  2135  00FDDB  34                 	db	52	;'4'
  2136  00FDDC  2E                 	db	46
  2137  00FDDD  33                 	db	51	;'3'
  2138  00FDDE  66                 	db	102	;'f'
  2139  00FDDF  2C                 	db	44
  2140  00FDE0  25                 	db	37
  2141  00FDE1  34                 	db	52	;'4'
  2142  00FDE2  2E                 	db	46
  2143  00FDE3  33                 	db	51	;'3'
  2144  00FDE4  66                 	db	102	;'f'
  2145  00FDE5  2C                 	db	44
  2146  00FDE6  25                 	db	37
  2147  00FDE7  34                 	db	52	;'4'
  2148  00FDE8  2E                 	db	46
  2149  00FDE9  33                 	db	51	;'3'
  2150  00FDEA  64                 	db	100	;'d'
  2151  00FDEB  2C                 	db	44
  2152  00FDEC  25                 	db	37
  2153  00FDED  34                 	db	52	;'4'
  2154  00FDEE  2E                 	db	46
  2155  00FDEF  33                 	db	51	;'3'
  2156  00FDF0  64                 	db	100	;'d'
  2157  00FDF1  0D                 	db	13
  2158  00FDF2  0A                 	db	10
  2159  00FDF3  00                 	db	0
  2160  00FDF4                     
  2161                           ; BSR set to: 57
  2162  00FDF4  20                 	db	32
  2163  00FDF5  4D                 	db	77	;'M'
  2164  00FDF6  65                 	db	101	;'e'
  2165  00FDF7  73                 	db	115	;'s'
  2166  00FDF8  67                 	db	103	;'g'
  2167  00FDF9  20                 	db	32
  2168  00FDFA  25                 	db	37
  2169  00FDFB  64                 	db	100	;'d'
  2170  00FDFC  20                 	db	32
  2171  00FDFD  53                 	db	83	;'S'
  2172  00FDFE  74                 	db	116	;'t'
  2173  00FDFF  61                 	db	97	;'a'
  2174  00FE00  63                 	db	99	;'c'
  2175  00FE01  6B                 	db	107	;'k'
  2176  00FE02  20                 	db	32
  2177  00FE03  25                 	db	37
  2178  00FE04  64                 	db	100	;'d'
  2179  00FE05  20                 	db	32
  2180  00FE06  20                 	db	32
  2181  00FE07  20                 	db	32
  2182  00FE08  20                 	db	32
  2183  00FE09  20                 	db	32
  2184  00FE0A  20                 	db	32
  2185  00FE0B  00                 	db	0
  2186  00FE0C                     STR_23:
  2187                           
  2188                           ; BSR set to: 57
  2189  00FE0C  42                 	db	66	;'B'
  2190  00FE0D  41                 	db	65	;'A'
  2191  00FE0E  48                 	db	72	;'H'
  2192  00FE0F  20                 	db	32
  2193  00FE10  25                 	db	37
  2194  00FE11  33                 	db	51	;'3'
  2195  00FE12  2E                 	db	46
  2196  00FE13  32                 	db	50	;'2'
  2197  00FE14  66                 	db	102	;'f'
  2198  00FE15  20                 	db	32
  2199  00FE16  50                 	db	80	;'P'
  2200  00FE17  25                 	db	37
  2201  00FE18  33                 	db	51	;'3'
  2202  00FE19  2E                 	db	46
  2203  00FE1A  32                 	db	50	;'2'
  2204  00FE1B  66                 	db	102	;'f'
  2205  00FE1C  20                 	db	32
  2206  00FE1D  20                 	db	32
  2207  00FE1E  20                 	db	32
  2208  00FE1F  00                 	db	0
  2209  00FE20                     STR_43:
  2210                           
  2211                           ; BSR set to: 57
  2212  00FE20  20                 	db	32
  2213  00FE21  20                 	db	32
  2214  00FE22  20                 	db	32
  2215  00FE23  20                 	db	32
  2216  00FE24  20                 	db	32
  2217  00FE25  20                 	db	32
  2218  00FE26  20                 	db	32
  2219  00FE27  20                 	db	32
  2220  00FE28  20                 	db	32
  2221  00FE29  20                 	db	32
  2222  00FE2A  20                 	db	32
  2223  00FE2B  20                 	db	32
  2224  00FE2C  20                 	db	32
  2225  00FE2D  20                 	db	32
  2226  00FE2E  20                 	db	32
  2227  00FE2F  20                 	db	32
  2228  00FE30  20                 	db	32
  2229  00FE31  20                 	db	32
  2230  00FE32  00                 	db	0
  2231  00FE33                     STR_33:
  2232                           
  2233                           ; BSR set to: 57
  2234  00FE33  48                 	db	72	;'H'
  2235  00FE34  45                 	db	69	;'E'
  2236  00FE35  4C                 	db	76	;'L'
  2237  00FE36  50                 	db	80	;'P'
  2238  00FE37  20                 	db	32
  2239  00FE38  25                 	db	37
  2240  00FE39  73                 	db	115	;'s'
  2241  00FE3A  20                 	db	32
  2242  00FE3B  20                 	db	32
  2243  00FE3C  20                 	db	32
  2244  00FE3D  20                 	db	32
  2245  00FE3E  20                 	db	32
  2246  00FE3F  20                 	db	32
  2247  00FE40  20                 	db	32
  2248  00FE41  20                 	db	32
  2249  00FE42  20                 	db	32
  2250  00FE43  20                 	db	32
  2251  00FE44  20                 	db	32
  2252  00FE45  00                 	db	0
  2253  00FE46                     
  2254                           ; BSR set to: 57
  2255  00FE46  44                 	db	68	;'D'
  2256  00FE47  49                 	db	73	;'I'
  2257  00FE48  53                 	db	83	;'S'
  2258  00FE49  50                 	db	80	;'P'
  2259  00FE4A  4C                 	db	76	;'L'
  2260  00FE4B  41                 	db	65	;'A'
  2261  00FE4C  59                 	db	89	;'Y'
  2262  00FE4D  20                 	db	32
  2263  00FE4E  25                 	db	37
  2264  00FE4F  73                 	db	115	;'s'
  2265  00FE50  20                 	db	32
  2266  00FE51  20                 	db	32
  2267  00FE52  20                 	db	32
  2268  00FE53  20                 	db	32
  2269  00FE54  20                 	db	32
  2270  00FE55  20                 	db	32
  2271  00FE56  20                 	db	32
  2272  00FE57  20                 	db	32
  2273  00FE58  00                 	db	0
  2274  00FE59                     STR_24:
  2275                           
  2276                           ; BSR set to: 57
  2277  00FE59  53                 	db	83	;'S'
  2278  00FE5A  4F                 	db	79	;'O'
  2279  00FE5B  43                 	db	67	;'C'
  2280  00FE5C  20                 	db	32
  2281  00FE5D  25                 	db	37
  2282  00FE5E  64                 	db	100	;'d'
  2283  00FE5F  20                 	db	32
  2284  00FE60  52                 	db	82	;'R'
  2285  00FE61  55                 	db	85	;'U'
  2286  00FE62  4E                 	db	78	;'N'
  2287  00FE63  20                 	db	32
  2288  00FE64  25                 	db	37
  2289  00FE65  64                 	db	100	;'d'
  2290  00FE66  20                 	db	32
  2291  00FE67  20                 	db	32
  2292  00FE68  20                 	db	32
  2293  00FE69  20                 	db	32
  2294  00FE6A  20                 	db	32
  2295  00FE6B  00                 	db	0
  2296  00FE6C                     STR_16:
  2297                           
  2298                           ; BSR set to: 57
  2299  00FE6C  50                 	db	80	;'P'
  2300  00FE6D  56                 	db	86	;'V'
  2301  00FE6E  20                 	db	32
  2302  00FE6F  20                 	db	32
  2303  00FE70  20                 	db	32
  2304  00FE71  50                 	db	80	;'P'
  2305  00FE72  57                 	db	87	;'W'
  2306  00FE73  52                 	db	82	;'R'
  2307  00FE74  20                 	db	32
  2308  00FE75  25                 	db	37
  2309  00FE76  33                 	db	51	;'3'
  2310  00FE77  2E                 	db	46
  2311  00FE78  32                 	db	50	;'2'
  2312  00FE79  66                 	db	102	;'f'
  2313  00FE7A  20                 	db	32
  2314  00FE7B  20                 	db	32
  2315  00FE7C  20                 	db	32
  2316  00FE7D  20                 	db	32
  2317  00FE7E  00                 	db	0
  2318  00FE7F                     STR_18:
  2319                           
  2320                           ; BSR set to: 57
  2321  00FE7F  49                 	db	73	;'I'
  2322  00FE80  4E                 	db	78	;'N'
  2323  00FE81  56                 	db	86	;'V'
  2324  00FE82  20                 	db	32
  2325  00FE83  20                 	db	32
  2326  00FE84  50                 	db	80	;'P'
  2327  00FE85  57                 	db	87	;'W'
  2328  00FE86  52                 	db	82	;'R'
  2329  00FE87  20                 	db	32
  2330  00FE88  25                 	db	37
  2331  00FE89  33                 	db	51	;'3'
  2332  00FE8A  2E                 	db	46
  2333  00FE8B  32                 	db	50	;'2'
  2334  00FE8C  66                 	db	102	;'f'
  2335  00FE8D  20                 	db	32
  2336  00FE8E  20                 	db	32
  2337  00FE8F  20                 	db	32
  2338  00FE90  20                 	db	32
  2339  00FE91  00                 	db	0
  2340  00FE92                     STR_17:
  2341                           
  2342                           ; BSR set to: 57
  2343  00FE92  4C                 	db	76	;'L'
  2344  00FE93  4F                 	db	79	;'O'
  2345  00FE94  41                 	db	65	;'A'
  2346  00FE95  44                 	db	68	;'D'
  2347  00FE96  20                 	db	32
  2348  00FE97  50                 	db	80	;'P'
  2349  00FE98  57                 	db	87	;'W'
  2350  00FE99  52                 	db	82	;'R'
  2351  00FE9A  20                 	db	32
  2352  00FE9B  25                 	db	37
  2353  00FE9C  33                 	db	51	;'3'
  2354  00FE9D  2E                 	db	46
  2355  00FE9E  32                 	db	50	;'2'
  2356  00FE9F  66                 	db	102	;'f'
  2357  00FEA0  20                 	db	32
  2358  00FEA1  20                 	db	32
  2359  00FEA2  20                 	db	32
  2360  00FEA3  20                 	db	32
  2361  00FEA4  00                 	db	0
  2362  00FEA5                     STR_22:
  2363                           
  2364                           ; BSR set to: 57
  2365  00FEA5  42                 	db	66	;'B'
  2366  00FEA6  41                 	db	65	;'A'
  2367  00FEA7  54                 	db	84	;'T'
  2368  00FEA8  54                 	db	84	;'T'
  2369  00FEA9  20                 	db	32
  2370  00FEAA  50                 	db	80	;'P'
  2371  00FEAB  57                 	db	87	;'W'
  2372  00FEAC  52                 	db	82	;'R'
  2373  00FEAD  20                 	db	32
  2374  00FEAE  25                 	db	37
  2375  00FEAF  33                 	db	51	;'3'
  2376  00FEB0  2E                 	db	46
  2377  00FEB1  32                 	db	50	;'2'
  2378  00FEB2  66                 	db	102	;'f'
  2379  00FEB3  20                 	db	32
  2380  00FEB4  20                 	db	32
  2381  00FEB5  20                 	db	32
  2382  00FEB6  20                 	db	32
  2383  00FEB7  00                 	db	0
  2384  00FEB8                     STR_20:
  2385                           
  2386                           ; BSR set to: 57
  2387  00FEB8  42                 	db	66	;'B'
  2388  00FEB9  56                 	db	86	;'V'
  2389  00FEBA  20                 	db	32
  2390  00FEBB  25                 	db	37
  2391  00FEBC  32                 	db	50	;'2'
  2392  00FEBD  2E                 	db	46
  2393  00FEBE  32                 	db	50	;'2'
  2394  00FEBF  66                 	db	102	;'f'
  2395  00FEC0  20                 	db	32
  2396  00FEC1  42                 	db	66	;'B'
  2397  00FEC2  41                 	db	65	;'A'
  2398  00FEC3  20                 	db	32
  2399  00FEC4  25                 	db	37
  2400  00FEC5  32                 	db	50	;'2'
  2401  00FEC6  2E                 	db	46
  2402  00FEC7  32                 	db	50	;'2'
  2403  00FEC8  66                 	db	102	;'f'
  2404  00FEC9  20                 	db	32
  2405  00FECA  00                 	db	0
  2406  00FECB                     STR_21:
  2407                           
  2408                           ; BSR set to: 57
  2409  00FECB  43                 	db	67	;'C'
  2410  00FECC  56                 	db	86	;'V'
  2411  00FECD  20                 	db	32
  2412  00FECE  25                 	db	37
  2413  00FECF  32                 	db	50	;'2'
  2414  00FED0  2E                 	db	46
  2415  00FED1  32                 	db	50	;'2'
  2416  00FED2  66                 	db	102	;'f'
  2417  00FED3  20                 	db	32
  2418  00FED4  4C                 	db	76	;'L'
  2419  00FED5  41                 	db	65	;'A'
  2420  00FED6  20                 	db	32
  2421  00FED7  25                 	db	37
  2422  00FED8  32                 	db	50	;'2'
  2423  00FED9  2E                 	db	46
  2424  00FEDA  32                 	db	50	;'2'
  2425  00FEDB  66                 	db	102	;'f'
  2426  00FEDC  20                 	db	32
  2427  00FEDD  00                 	db	0
  2428  00FEDE                     STR_19:
  2429                           
  2430                           ; BSR set to: 57
  2431  00FEDE  50                 	db	80	;'P'
  2432  00FEDF  56                 	db	86	;'V'
  2433  00FEE0  20                 	db	32
  2434  00FEE1  25                 	db	37
  2435  00FEE2  32                 	db	50	;'2'
  2436  00FEE3  2E                 	db	46
  2437  00FEE4  32                 	db	50	;'2'
  2438  00FEE5  66                 	db	102	;'f'
  2439  00FEE6  20                 	db	32
  2440  00FEE7  50                 	db	80	;'P'
  2441  00FEE8  41                 	db	65	;'A'
  2442  00FEE9  20                 	db	32
  2443  00FEEA  25                 	db	37
  2444  00FEEB  32                 	db	50	;'2'
  2445  00FEEC  2E                 	db	46
  2446  00FEED  32                 	db	50	;'2'
  2447  00FEEE  66                 	db	102	;'f'
  2448  00FEEF  20                 	db	32
  2449  00FEF0  00                 	db	0
  2450  00FEF1                     STR_8:
  2451                           
  2452                           ; BSR set to: 57
  2453  00FEF1  20                 	db	32
  2454  00FEF2  56                 	db	86	;'V'
  2455  00FEF3  54                 	db	84	;'T'
  2456  00FEF4  45                 	db	69	;'E'
  2457  00FEF5  52                 	db	82	;'R'
  2458  00FEF6  4D                 	db	77	;'M'
  2459  00FEF7  20                 	db	32
  2460  00FEF8  23                 	db	35
  2461  00FEF9  32                 	db	50	;'2'
  2462  00FEFA  20                 	db	32
  2463  00FEFB  20                 	db	32
  2464  00FEFC  20                 	db	32
  2465  00FEFD  20                 	db	32
  2466  00FEFE  20                 	db	32
  2467  00FEFF  20                 	db	32
  2468  00FF00  20                 	db	32
  2469  00FF01  00                 	db	0
  2470  00FF02                     STR_4:
  2471                           
  2472                           ; BSR set to: 57
  2473  00FF02  20                 	db	32
  2474  00FF03  4E                 	db	78	;'N'
  2475  00FF04  53                 	db	83	;'S'
  2476  00FF05  41                 	db	65	;'A'
  2477  00FF06  53                 	db	83	;'S'
  2478  00FF07  50                 	db	80	;'P'
  2479  00FF08  4F                 	db	79	;'O'
  2480  00FF09  4F                 	db	79	;'O'
  2481  00FF0A  4B                 	db	75	;'K'
  2482  00FF0B  20                 	db	32
  2483  00FF0C  20                 	db	32
  2484  00FF0D  20                 	db	32
  2485  00FF0E  20                 	db	32
  2486  00FF0F  20                 	db	32
  2487  00FF10  20                 	db	32
  2488  00FF11  20                 	db	32
  2489  00FF12  00                 	db	0
  2490  00FF13                     STR_1:
  2491                           
  2492                           ; BSR set to: 57
  2493  00FF13  20                 	db	32
  2494  00FF14  4D                 	db	77	;'M'
  2495  00FF15  42                 	db	66	;'B'
  2496  00FF16  4D                 	db	77	;'M'
  2497  00FF17  43                 	db	67	;'C'
  2498  00FF18  20                 	db	32
  2499  00FF19  53                 	db	83	;'S'
  2500  00FF1A  4F                 	db	79	;'O'
  2501  00FF1B  4C                 	db	76	;'L'
  2502  00FF1C  41                 	db	65	;'A'
  2503  00FF1D  52                 	db	82	;'R'
  2504  00FF1E  4D                 	db	77	;'M'
  2505  00FF1F  4F                 	db	79	;'O'
  2506  00FF20  4E                 	db	78	;'N'
  2507  00FF21  20                 	db	32
  2508  00FF22  20                 	db	32
  2509  00FF23  00                 	db	0
  2510  00FF24                     STR_5:
  2511                           
  2512                           ; BSR set to: 57
  2513  00FF24  20                 	db	32
  2514  00FF25  53                 	db	83	;'S'
  2515  00FF26  45                 	db	69	;'E'
  2516  00FF27  51                 	db	81	;'Q'
  2517  00FF28  55                 	db	85	;'U'
  2518  00FF29  45                 	db	69	;'E'
  2519  00FF2A  4E                 	db	78	;'N'
  2520  00FF2B  43                 	db	67	;'C'
  2521  00FF2C  45                 	db	69	;'E'
  2522  00FF2D  20                 	db	32
  2523  00FF2E  54                 	db	84	;'T'
  2524  00FF2F  45                 	db	69	;'E'
  2525  00FF30  53                 	db	83	;'S'
  2526  00FF31  54                 	db	84	;'T'
  2527  00FF32  20                 	db	32
  2528  00FF33  20                 	db	32
  2529  00FF34  00                 	db	0
  2530  00FF35                     STR_15:
  2531                           
  2532                           ; BSR set to: 57
  2533  00FF35  25                 	db	37
  2534  00FF36  64                 	db	100	;'d'
  2535  00FF37  20                 	db	32
  2536  00FF38  25                 	db	37
  2537  00FF39  32                 	db	50	;'2'
  2538  00FF3A  2E                 	db	46
  2539  00FF3B  34                 	db	52	;'4'
  2540  00FF3C  66                 	db	102	;'f'
  2541  00FF3D  2C                 	db	44
  2542  00FF3E  20                 	db	32
  2543  00FF3F  25                 	db	37
  2544  00FF40  64                 	db	100	;'d'
  2545  00FF41  20                 	db	32
  2546  00FF42  20                 	db	32
  2547  00FF43  20                 	db	32
  2548  00FF44  23                 	db	35
  2549  00FF45  00                 	db	0
  2550  00FF46                     STR_13:
  2551                           
  2552                           ; BSR set to: 57
  2553  00FF46  25                 	db	37
  2554  00FF47  64                 	db	100	;'d'
  2555  00FF48  20                 	db	32
  2556  00FF49  25                 	db	37
  2557  00FF4A  32                 	db	50	;'2'
  2558  00FF4B  2E                 	db	46
  2559  00FF4C  34                 	db	52	;'4'
  2560  00FF4D  66                 	db	102	;'f'
  2561  00FF4E  20                 	db	32
  2562  00FF4F  20                 	db	32
  2563  00FF50  20                 	db	32
  2564  00FF51  25                 	db	37
  2565  00FF52  64                 	db	100	;'d'
  2566  00FF53  20                 	db	32
  2567  00FF54  20                 	db	32
  2568  00FF55  00                 	db	0
  2569  00FF56                     STR_9:
  2570                           
  2571                           ; BSR set to: 57
  2572  00FF56  20                 	db	32
  2573  00FF57  53                 	db	83	;'S'
  2574  00FF58  54                 	db	84	;'T'
  2575  00FF59  41                 	db	65	;'A'
  2576  00FF5A  54                 	db	84	;'T'
  2577  00FF5B  49                 	db	73	;'I'
  2578  00FF5C  43                 	db	67	;'C'
  2579  00FF5D  20                 	db	32
  2580  00FF5E  53                 	db	83	;'S'
  2581  00FF5F  4F                 	db	79	;'O'
  2582  00FF60  43                 	db	67	;'C'
  2583  00FF61  20                 	db	32
  2584  00FF62  20                 	db	32
  2585  00FF63  20                 	db	32
  2586  00FF64  31                 	db	49	;'1'
  2587  00FF65  00                 	db	0
  2588  00FF66                     STR_10:
  2589                           
  2590                           ; BSR set to: 57
  2591  00FF66  20                 	db	32
  2592  00FF67  53                 	db	83	;'S'
  2593  00FF68  54                 	db	84	;'T'
  2594  00FF69  41                 	db	65	;'A'
  2595  00FF6A  54                 	db	84	;'T'
  2596  00FF6B  49                 	db	73	;'I'
  2597  00FF6C  43                 	db	67	;'C'
  2598  00FF6D  20                 	db	32
  2599  00FF6E  53                 	db	83	;'S'
  2600  00FF6F  4F                 	db	79	;'O'
  2601  00FF70  43                 	db	67	;'C'
  2602  00FF71  20                 	db	32
  2603  00FF72  20                 	db	32
  2604  00FF73  20                 	db	32
  2605  00FF74  32                 	db	50	;'2'
  2606  00FF75  00                 	db	0
  2607  00FF76                     STR_11:
  2608                           
  2609                           ; BSR set to: 57
  2610  00FF76  20                 	db	32
  2611  00FF77  53                 	db	83	;'S'
  2612  00FF78  54                 	db	84	;'T'
  2613  00FF79  41                 	db	65	;'A'
  2614  00FF7A  54                 	db	84	;'T'
  2615  00FF7B  49                 	db	73	;'I'
  2616  00FF7C  43                 	db	67	;'C'
  2617  00FF7D  20                 	db	32
  2618  00FF7E  53                 	db	83	;'S'
  2619  00FF7F  4F                 	db	79	;'O'
  2620  00FF80  43                 	db	67	;'C'
  2621  00FF81  20                 	db	32
  2622  00FF82  20                 	db	32
  2623  00FF83  20                 	db	32
  2624  00FF84  33                 	db	51	;'3'
  2625  00FF85  00                 	db	0
  2626  00FF86                     STR_12:
  2627                           
  2628                           ; BSR set to: 57
  2629  00FF86  20                 	db	32
  2630  00FF87  53                 	db	83	;'S'
  2631  00FF88  54                 	db	84	;'T'
  2632  00FF89  41                 	db	65	;'A'
  2633  00FF8A  54                 	db	84	;'T'
  2634  00FF8B  49                 	db	73	;'I'
  2635  00FF8C  43                 	db	67	;'C'
  2636  00FF8D  20                 	db	32
  2637  00FF8E  53                 	db	83	;'S'
  2638  00FF8F  4F                 	db	79	;'O'
  2639  00FF90  43                 	db	67	;'C'
  2640  00FF91  20                 	db	32
  2641  00FF92  20                 	db	32
  2642  00FF93  20                 	db	32
  2643  00FF94  34                 	db	52	;'4'
  2644  00FF95  00                 	db	0
  2645  00FF96                     STR_37:
  2646                           
  2647                           ; BSR set to: 57
  2648  00FF96  76                 	db	118	;'v'
  2649  00FF97  74                 	db	116	;'t'
  2650  00FF98  65                 	db	101	;'e'
  2651  00FF99  72                 	db	114	;'r'
  2652  00FF9A  6D                 	db	109	;'m'
  2653  00FF9B  20                 	db	32
  2654  00FF9C  25                 	db	37
  2655  00FF9D  78                 	db	120	;'x'
  2656  00FF9E  3A                 	db	58	;':'
  2657  00FF9F  25                 	db	37
  2658  00FFA0  78                 	db	120	;'x'
  2659  00FFA1  20                 	db	32
  2660  00FFA2  20                 	db	32
  2661  00FFA3  20                 	db	32
  2662  00FFA4  00                 	db	0
  2663  00FFA5                     STR_2:
  2664                           
  2665                           ; BSR set to: 57
  2666  00FFA5  20                 	db	32
  2667  00FFA6  56                 	db	86	;'V'
  2668  00FFA7  65                 	db	101	;'e'
  2669  00FFA8  72                 	db	114	;'r'
  2670  00FFA9  73                 	db	115	;'s'
  2671  00FFAA  69                 	db	105	;'i'
  2672  00FFAB  6F                 	db	111	;'o'
  2673  00FFAC  6E                 	db	110	;'n'
  2674  00FFAD  20                 	db	32
  2675  00FFAE  25                 	db	37
  2676  00FFAF  73                 	db	115	;'s'
  2677  00FFB0  20                 	db	32
  2678  00FFB1  20                 	db	32
  2679  00FFB2  20                 	db	32
  2680  00FFB3  00                 	db	0
  2681  00FFB4                     STR_31:
  2682                           
  2683                           ; BSR set to: 57
  2684  00FFB4  44                 	db	68	;'D'
  2685  00FFB5  65                 	db	101	;'e'
  2686  00FFB6  63                 	db	99	;'c'
  2687  00FFB7  20                 	db	32
  2688  00FFB8  31                 	db	49	;'1'
  2689  00FFB9  31                 	db	49	;'1'
  2690  00FFBA  20                 	db	32
  2691  00FFBB  32                 	db	50	;'2'
  2692  00FFBC  30                 	db	48	;'0'
  2693  00FFBD  31                 	db	49	;'1'
  2694  00FFBE  39                 	db	57	;'9'
  2695  00FFBF  00                 	db	0
  2696  00FFC0                     STR_35:
  2697                           
  2698                           ; BSR set to: 57
  2699  00FFC0  25                 	db	37
  2700  00FFC1  73                 	db	115	;'s'
  2701  00FFC2  20                 	db	32
  2702  00FFC3  20                 	db	32
  2703  00FFC4  20                 	db	32
  2704  00FFC5  20                 	db	32
  2705  00FFC6  20                 	db	32
  2706  00FFC7  20                 	db	32
  2707  00FFC8  20                 	db	32
  2708  00FFC9  00                 	db	0
  2709  00FFCA                     STR_32:
  2710                           
  2711                           ; BSR set to: 57
  2712  00FFCA  31                 	db	49	;'1'
  2713  00FFCB  30                 	db	48	;'0'
  2714  00FFCC  3A                 	db	58	;':'
  2715  00FFCD  32                 	db	50	;'2'
  2716  00FFCE  30                 	db	48	;'0'
  2717  00FFCF  3A                 	db	58	;':'
  2718  00FFD0  33                 	db	51	;'3'
  2719  00FFD1  32                 	db	50	;'2'
  2720  00FFD2  00                 	db	0
  2721  00FFD3                     STR_51:
  2722                           
  2723                           ; BSR set to: 57
  2724  00FFD3  49                 	db	73	;'I'
  2725  00FFD4  4E                 	db	78	;'N'
  2726  00FFD5  46                 	db	70	;'F'
  2727  00FFD6  00                 	db	0
  2728  00FFD7                     STR_55:
  2729                           
  2730                           ; BSR set to: 57
  2731  00FFD7  4E                 	db	78	;'N'
  2732  00FFD8  41                 	db	65	;'A'
  2733  00FFD9  4E                 	db	78	;'N'
  2734  00FFDA  00                 	db	0
  2735  00FFDB                     STR_52:
  2736                           
  2737                           ; BSR set to: 57
  2738  00FFDB  69                 	db	105	;'i'
  2739  00FFDC  6E                 	db	110	;'n'
  2740  00FFDD  66                 	db	102	;'f'
  2741  00FFDE  00                 	db	0
  2742  00FFDF                     STR_56:
  2743                           
  2744                           ; BSR set to: 57
  2745  00FFDF  6E                 	db	110	;'n'
  2746  00FFE0  61                 	db	97	;'a'
  2747  00FFE1  6E                 	db	110	;'n'
  2748  00FFE2  00                 	db	0
  2749  00FFE3                     STR_3:
  2750                           
  2751                           ; BSR set to: 57
  2752  00FFE3  31                 	db	49	;'1'
  2753  00FFE4  2E                 	db	46
  2754  00FFE5  30                 	db	48	;'0'
  2755  00FFE6  00                 	db	0
  2756  00FFE7                     STR_82:
  2757                           
  2758                           ; BSR set to: 57
  2759  00FFE7  6C                 	db	108	;'l'
  2760  00FFE8  58                 	db	88	;'X'
  2761  00FFE9  00                 	db	0
  2762  00FFEA                     STR_59:
  2763                           
  2764                           ; BSR set to: 57
  2765  00FFEA  6C                 	db	108	;'l'
  2766  00FFEB  64                 	db	100	;'d'
  2767  00FFEC  00                 	db	0
  2768  00FFED                     STR_68:
  2769                           
  2770                           ; BSR set to: 57
  2771  00FFED  6C                 	db	108	;'l'
  2772  00FFEE  66                 	db	102	;'f'
  2773  00FFEF  00                 	db	0
  2774  00FFF0                     STR_63:
  2775                           
  2776                           ; BSR set to: 57
  2777  00FFF0  6C                 	db	108	;'l'
  2778  00FFF1  69                 	db	105	;'i'
  2779  00FFF2  00                 	db	0
  2780  00FFF3                     STR_73:
  2781                           
  2782                           ; BSR set to: 57
  2783  00FFF3  6C                 	db	108	;'l'
  2784  00FFF4  75                 	db	117	;'u'
  2785  00FFF5  00                 	db	0
  2786  00FFF6                     STR_78:
  2787                           
  2788                           ; BSR set to: 57
  2789  00FFF6  6C                 	db	108	;'l'
  2790  00FFF7  78                 	db	120	;'x'
  2791  00FFF8  00                 	db	0
  2792  00FFF9                     STR_29:
  2793                           
  2794                           ; BSR set to: 57
  2795  00FFF9  25                 	db	37
  2796  00FFFA  63                 	db	99	;'c'
  2797  00FFFB  00                 	db	0
  2798  00FFFC                     STR_28:
  2799                           
  2800                           ; BSR set to: 57
  2801  00FFFC  25                 	db	37
  2802  00FFFD  73                 	db	115	;'s'
  2803  00FFFE  00                 	db	0
  2804  0000                     
  2805                           ; #config settings
  2806  00FFFF  00                 	db	0	; dummy byte at the end
  2807  0000                     
  2808                           	psect	cinit
  2809  0186F6                     __pcinit:
  2810                           	opt callstack 0
  2811  0186F6                     start_initialization:
  2812                           	opt callstack 0
  2813  0186F6                     __initialization:
  2814                           	opt callstack 0
  2815                           
  2816                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2817                           ; load TBLPTR registers with __pidataBIGRAM
  2818  0186F6  0E38               	movlw	low __pidataBIGRAM
  2819  0186F8  6EF6               	movwf	tblptrl,c
  2820  0186FA  0E71               	movlw	high __pidataBIGRAM
  2821  0186FC  6EF7               	movwf	tblptrh,c
  2822  0186FE  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2823  018700  6EF8               	movwf	tblptru,c
  2824  018702  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2825  018706  EE20 F200          	lfsr	2,512
  2826  01870A                     copy_data0:
  2827  01870A  0009               	tblrd		*+
  2828  01870C  006F FFD7 FFEE     	movff	tablat,postinc0
  2829  018712  50DD               	movf	postdec2,w,c
  2830  018714  50D9               	movf	fsr2l,w,c
  2831  018716  E1F9               	bnz	copy_data0
  2832  018718  50DA               	movf	fsr2h,w,c
  2833  01871A  E1F7               	bnz	copy_data0
  2834                           
  2835                           ; Initialize objects allocated to BANK2 (188 bytes)
  2836                           ; load TBLPTR registers with __pidataBANK2
  2837  01871C  0E6C               	movlw	low __pidataBANK2
  2838  01871E  6EF6               	movwf	tblptrl,c
  2839  018720  0E8D               	movlw	high __pidataBANK2
  2840  018722  6EF7               	movwf	tblptrh,c
  2841  018724  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2842  018726  6EF8               	movwf	tblptru,c
  2843  018728  EE00  F200         	lfsr	0,__pdataBANK2
  2844  01872C  EE20 F0BC          	lfsr	2,188
  2845  018730                     copy_data1:
  2846  018730  0009               	tblrd		*+
  2847  018732  006F FFD7 FFEE     	movff	tablat,postinc0
  2848  018738  50DD               	movf	postdec2,w,c
  2849  01873A  50D9               	movf	fsr2l,w,c
  2850  01873C  E1F9               	bnz	copy_data1
  2851                           
  2852                           ; Initialize objects allocated to BANK1 (218 bytes)
  2853                           ; load TBLPTR registers with __pidataBANK1
  2854  01873E  0EFA               	movlw	low __pidataBANK1
  2855  018740  6EF6               	movwf	tblptrl,c
  2856  018742  0E8A               	movlw	high __pidataBANK1
  2857  018744  6EF7               	movwf	tblptrh,c
  2858  018746  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2859  018748  6EF8               	movwf	tblptru,c
  2860  01874A  EE00  F100         	lfsr	0,__pdataBANK1
  2861  01874E  EE20 F0DA          	lfsr	2,218
  2862  018752                     copy_data2:
  2863  018752  0009               	tblrd		*+
  2864  018754  006F FFD7 FFEE     	movff	tablat,postinc0
  2865  01875A  50DD               	movf	postdec2,w,c
  2866  01875C  50D9               	movf	fsr2l,w,c
  2867  01875E  E1F9               	bnz	copy_data2
  2868                           
  2869                           ; Initialize objects allocated to BANK0 (47 bytes)
  2870                           ; load TBLPTR registers with __pidataBANK0
  2871  018760  0E9E               	movlw	low __pidataBANK0
  2872  018762  6EF6               	movwf	tblptrl,c
  2873  018764  0EA1               	movlw	high __pidataBANK0
  2874  018766  6EF7               	movwf	tblptrh,c
  2875  018768  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2876  01876A  6EF8               	movwf	tblptru,c
  2877  01876C  EE00  F0CB         	lfsr	0,__pdataBANK0
  2878  018770  EE20 F02F          	lfsr	2,47
  2879  018774                     copy_data3:
  2880  018774  0009               	tblrd		*+
  2881  018776  006F FFD7 FFEE     	movff	tablat,postinc0
  2882  01877C  50DD               	movf	postdec2,w,c
  2883  01877E  50D9               	movf	fsr2l,w,c
  2884  018780  E1F9               	bnz	copy_data3
  2885                           
  2886                           ; Clear objects allocated to BIGRAM (290 bytes)
  2887  018782  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  2888  018786  EE20 F122          	lfsr	2,290
  2889  01878A                     clear_0:
  2890  01878A  6AEE               	clrf	postinc0,c
  2891  01878C  50DD               	movf	postdec2,w,c
  2892  01878E  50D9               	movf	fsr2l,w,c
  2893  018790  E1FC               	bnz	clear_0
  2894  018792  50DA               	movf	fsr2h,w,c
  2895  018794  E1FA               	bnz	clear_0
  2896                           
  2897                           ; Clear objects allocated to BANK5 (255 bytes)
  2898  018796  EE01  F100         	lfsr	0,__pbssBANK5
  2899  01879A  EE20 F0FF          	lfsr	2,255
  2900  01879E                     clear_1:
  2901  01879E  6AEE               	clrf	postinc0,c
  2902  0187A0  50DD               	movf	postdec2,w,c
  2903  0187A2  50D9               	movf	fsr2l,w,c
  2904  0187A4  E1FC               	bnz	clear_1
  2905  0187A6  50DA               	movf	fsr2h,w,c
  2906  0187A8  E1FA               	bnz	clear_1
  2907                           
  2908                           ; Clear objects allocated to BANK4 (134 bytes)
  2909  0187AA  EE01  F000         	lfsr	0,__pbssBANK4
  2910  0187AE  0E86               	movlw	134
  2911  0187B0                     clear_2:
  2912  0187B0  6AEE               	clrf	postinc0,c
  2913  0187B2  06E8               	decf	wreg,f,c
  2914  0187B4  E1FD               	bnz	clear_2
  2915                           
  2916                           ; Clear objects allocated to BANK3 (228 bytes)
  2917  0187B6  EE00  F300         	lfsr	0,__pbssBANK3
  2918  0187BA  0EE4               	movlw	228
  2919  0187BC                     clear_3:
  2920  0187BC  6AEE               	clrf	postinc0,c
  2921  0187BE  06E8               	decf	wreg,f,c
  2922  0187C0  E1FD               	bnz	clear_3
  2923                           
  2924                           ; Clear objects allocated to BANK2 (8 bytes)
  2925  0187C2  EE00  F2D5         	lfsr	0,__pbssBANK2
  2926  0187C6  0E08               	movlw	8
  2927  0187C8                     clear_4:
  2928  0187C8  6AEE               	clrf	postinc0,c
  2929  0187CA  06E8               	decf	wreg,f,c
  2930  0187CC  E1FD               	bnz	clear_4
  2931                           
  2932                           ; Clear objects allocated to BANK1 (32 bytes)
  2933  0187CE  EE00  F1DA         	lfsr	0,__pbssBANK1
  2934  0187D2  0E20               	movlw	32
  2935  0187D4                     clear_5:
  2936  0187D4  6AEE               	clrf	postinc0,c
  2937  0187D6  06E8               	decf	wreg,f,c
  2938  0187D8  E1FD               	bnz	clear_5
  2939                           
  2940                           ; Clear objects allocated to BANK0 (107 bytes)
  2941  0187DA  EE00  F060         	lfsr	0,__pbssBANK0
  2942  0187DE  0E6B               	movlw	107
  2943  0187E0                     clear_6:
  2944  0187E0  6AEE               	clrf	postinc0,c
  2945  0187E2  06E8               	decf	wreg,f,c
  2946  0187E4  E1FD               	bnz	clear_6
  2947                           
  2948                           ; Clear objects allocated to COMRAM (23 bytes)
  2949  0187E6  EE00  F021         	lfsr	0,__pbssCOMRAM
  2950  0187EA  0E17               	movlw	23
  2951  0187EC                     clear_7:
  2952  0187EC  6AEE               	clrf	postinc0,c
  2953  0187EE  06E8               	decf	wreg,f,c
  2954  0187F0  E1FD               	bnz	clear_7
  2955                           
  2956                           ;
  2957                           ; Setup IVTBASE
  2958                           ;
  2959  0187F2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2960  0187F4  6ED5               	movwf	213,c
  2961  0187F6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2962  0187F8  6ED6               	movwf	214,c
  2963  0187FA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2964  0187FC  6ED7               	movwf	215,c
  2965  0187FE                     end_of_initialization:
  2966                           	opt callstack 0
  2967  0187FE                     __end_of__initialization:
  2968                           	opt callstack 0
  2969  0187FE  0100               	movlb	0
  2970  018800  EFF8  F090         	goto	_main	;jump to C main() function
  2971                           
  2972                           	psect	bssCOMRAM
  2973  000021                     __pbssCOMRAM:
  2974                           	opt callstack 0
  2975  000021                     _width:
  2976                           	opt callstack 0
  2977  000021                     	ds	2
  2978  000023                     _prec:
  2979                           	opt callstack 0
  2980  000023                     	ds	2
  2981  000025                     _flags:
  2982                           	opt callstack 0
  2983  000025                     	ds	2
  2984  000027                     _timer3ReloadVal:
  2985                           	opt callstack 0
  2986  000027                     	ds	2
  2987  000029                     TMR5_ISR@CountCallBack:
  2988                           	opt callstack 0
  2989  000029                     	ds	2
  2990  00002B                     _timer5ReloadVal:
  2991                           	opt callstack 0
  2992  00002B                     	ds	2
  2993  00002D                     Volts_to_SOC@slot:
  2994                           	opt callstack 0
  2995  00002D                     	ds	1
  2996  00002E                     _mode_sw:
  2997                           	opt callstack 0
  2998  00002E                     	ds	1
  2999  00002F                     _uart2RxCount:
  3000                           	opt callstack 0
  3001  00002F                     	ds	1
  3002  000030                     _uart2RxTail:
  3003                           	opt callstack 0
  3004  000030                     	ds	1
  3005  000031                     _uart2RxHead:
  3006                           	opt callstack 0
  3007  000031                     	ds	1
  3008  000032                     _uart2TxBufferRemaining:
  3009                           	opt callstack 0
  3010  000032                     	ds	1
  3011  000033                     _uart2TxTail:
  3012                           	opt callstack 0
  3013  000033                     	ds	1
  3014  000034                     _uart2TxHead:
  3015                           	opt callstack 0
  3016  000034                     	ds	1
  3017  000035                     _uart1RxCount:
  3018                           	opt callstack 0
  3019  000035                     	ds	1
  3020  000036                     _uart1RxTail:
  3021                           	opt callstack 0
  3022  000036                     	ds	1
  3023  000037                     _uart1RxHead:
  3024                           	opt callstack 0
  3025  000037                     	ds	1
  3026                           
  3027                           	psect	bssBANK0
  3028  000060                     __pbssBANK0:
  3029                           	opt callstack 0
  3030  000060                     _S:
  3031                           	opt callstack 0
  3032  000060                     	ds	41
  3033  000089                     _spi_link:
  3034                           	opt callstack 0
  3035  000089                     	ds	12
  3036  000095                     floorf@F524:
  3037                           	opt callstack 0
  3038  000095                     	ds	4
  3039  000099                     ___fpclassifyf@F463:
  3040                           	opt callstack 0
  3041  000099                     	ds	4
  3042  00009D                     _utctime:
  3043                           	opt callstack 0
  3044  00009D                     	ds	4
  3045  0000A1                     wdtdelay@dcount:
  3046                           	opt callstack 0
  3047  0000A1                     	ds	4
  3048  0000A5                     _P:
  3049                           	opt callstack 0
  3050  0000A5                     	ds	4
  3051  0000A9                     _TMR3_InterruptHandler:
  3052                           	opt callstack 0
  3053  0000A9                     	ds	3
  3054  0000AC                     _TMR5_InterruptHandler:
  3055                           	opt callstack 0
  3056  0000AC                     	ds	3
  3057  0000AF                     _TMR6_InterruptHandler:
  3058                           	opt callstack 0
  3059  0000AF                     	ds	3
  3060  0000B2                     _ADCC_ADTI_InterruptHandler:
  3061                           	opt callstack 0
  3062  0000B2                     	ds	3
  3063  0000B5                     _ADCC_ADI_InterruptHandler:
  3064                           	opt callstack 0
  3065  0000B5                     	ds	3
  3066  0000B8                     _UART1_RxInterruptHandler:
  3067                           	opt callstack 0
  3068  0000B8                     	ds	3
  3069  0000BB                     _UART2_TxInterruptHandler:
  3070                           	opt callstack 0
  3071  0000BB                     	ds	3
  3072  0000BE                     _UART2_RxInterruptHandler:
  3073                           	opt callstack 0
  3074  0000BE                     	ds	3
  3075  0000C1                     _INT1_InterruptHandler:
  3076                           	opt callstack 0
  3077  0000C1                     	ds	3
  3078  0000C4                     _INT0_InterruptHandler:
  3079                           	opt callstack 0
  3080  0000C4                     	ds	3
  3081  0000C7                     _nout:
  3082                           	opt callstack 0
  3083  0000C7                     	ds	2
  3084  0000C9                     TMR3_ISR@CountCallBack:
  3085                           	opt callstack 0
  3086  0000C9                     	ds	2
  3087                           
  3088                           	psect	dataBANK0
  3089  0000CB                     __pdataBANK0:
  3090                           	opt callstack 0
  3091  0000CB                     _R:
  3092                           	opt callstack 0
  3093  0000CB                     	ds	40
  3094  0000F3                     _H:
  3095                           	opt callstack 0
  3096  0000F3                     	ds	7
  3097                           
  3098                           	psect	bssBANK1
  3099  0001DA                     __pbssBANK1:
  3100                           	opt callstack 0
  3101  0001DA                     _tickCount:
  3102                           	opt callstack 0
  3103  0001DA                     	ds	24
  3104  0001F2                     _uart1RxBuffer:
  3105                           	opt callstack 0
  3106  0001F2                     	ds	8
  3107                           
  3108                           	psect	dataBANK1
  3109  000100                     __pdataBANK1:
  3110                           	opt callstack 0
  3111  000100                     _C:
  3112                           	opt callstack 0
  3113  000100                     	ds	211
  3114  0001D3                     stoa@F1166:
  3115                           	opt callstack 0
  3116  0001D3                     	ds	7
  3117                           
  3118                           	psect	bssBANK2
  3119  0002D5                     __pbssBANK2:
  3120                           	opt callstack 0
  3121  0002D5                     _seed:
  3122                           	opt callstack 0
  3123  0002D5                     	ds	8
  3124                           
  3125                           	psect	dataBANK2
  3126  000200                     __pdataBANK2:
  3127                           	opt callstack 0
  3128  000200                     _V:
  3129                           	opt callstack 0
  3130  000200                     	ds	188
  3131                           
  3132                           	psect	bssBANK3
  3133  000300                     __pbssBANK3:
  3134                           	opt callstack 0
  3135  000300                     lp_filter@smooth:
  3136                           	opt callstack 0
  3137  000300                     	ds	84
  3138  000354                     _uart2TxBuffer:
  3139                           	opt callstack 0
  3140  000354                     	ds	64
  3141  000394                     _dbuf:
  3142                           	opt callstack 0
  3143  000394                     	ds	80
  3144                           
  3145                           	psect	bssBANK4
  3146  000400                     __pbssBANK4:
  3147                           	opt callstack 0
  3148  000400                     _ring_buf2:
  3149                           	opt callstack 0
  3150  000400                     	ds	67
  3151  000443                     _ring_buf1:
  3152                           	opt callstack 0
  3153  000443                     	ds	67
  3154                           
  3155                           	psect	bssBANK5
  3156  000500                     __pbssBANK5:
  3157                           	opt callstack 0
  3158  000500                     _uart2RxBuffer:
  3159                           	opt callstack 0
  3160  000500                     	ds	255
  3161                           
  3162                           	psect	bssBIGRAM
  3163  0007FF                     __pbssBIGRAM:
  3164                           	opt callstack 0
  3165  0007FF                     _D:
  3166                           	opt callstack 0
  3167  0007FF                     	ds	290
  3168                           
  3169                           	psect	dataBIGRAM
  3170  0005FF                     __pdataBIGRAM:
  3171                           	opt callstack 0
  3172  0005FF                     _port_data:
  3173                           	opt callstack 0
  3174  0005FF                     	ds	512
  3175                           
  3176                           	psect	cstackBANK2
  3177  0002BC                     __pcstackBANK2:
  3178                           	opt callstack 0
  3179  0002BC                     ??_TMR3_ISR:
  3180                           
  3181                           ; 1 bytes @ 0x0
  3182  0002BC                     	ds	25
  3183                           
  3184                           	psect	cstackCOMRAM
  3185  000038                     __pcstackCOMRAM:
  3186                           	opt callstack 0
  3187  000038                     ??_ADCC_ThresholdISR:
  3188  000038                     
  3189                           ; 1 bytes @ 0x0
  3190  000038                     	ds	5
  3191  00003D                     ??_TMR6_ISR:
  3192                           
  3193                           ; 1 bytes @ 0x5
  3194  00003D                     	ds	1
  3195  00003E                     ??_INT1_ISR:
  3196  00003E                     
  3197                           ; 1 bytes @ 0x6
  3198  00003E                     	ds	4
  3199  000042                     ??_TMR5_ISR:
  3200                           
  3201                           ; 1 bytes @ 0xA
  3202  000042                     	ds	4
  3203                           
  3204 ;;
  3205 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  3206 ;;
  3207 ;; *************** function _main *****************
  3208 ;; Defined at:
  3209 ;;		line 174 in file "main.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  k               1  [STACK] unsigned char 
  3214 ;;  j               1  [STACK] unsigned char 
  3215 ;;  i               1  [STACK] unsigned char 
  3216 ;;  inp_index       1  [STACK] unsigned char 
  3217 ;;  mode            1  [STACK] enum E17013
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1  [STACK] void 
  3220 ;; Registers used:
  3221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3231 ;;Total ram usage:        0 bytes
  3232 ;; Hardware stack levels required when called:   28
  3233 ;; This function calls:
  3234 ;;		_SYSTEM_Initialize
  3235 ;;		_StartTimer
  3236 ;;		_TimerDone
  3237 ;;		_WaitMs
  3238 ;;		_calc_model_data
  3239 ;;		_check_adc_scan
  3240 ;;		_check_enter_button
  3241 ;;		_check_help
  3242 ;;		_clear_adc_scan
  3243 ;;		_clear_hid_pflags
  3244 ;;		_convert_adc_data
  3245 ;;		_eaDogM_WriteCommand
  3246 ;;		_get_raw_result
  3247 ;;		_get_switch
  3248 ;;		_get_vterm_ptr
  3249 ;;		_hid_display
  3250 ;;		_init_bsoc
  3251 ;;		_init_display
  3252 ;;		_init_port_dma
  3253 ;;		_lp_filter
  3254 ;;		_mode_lamp_dim
  3255 ;;		_set_display_info
  3256 ;;		_set_load_relay_one
  3257 ;;		_set_load_relay_two
  3258 ;;		_set_vterm
  3259 ;;		_sprintf
  3260 ;;		_srand
  3261 ;;		_start_adc_scan
  3262 ;;		_start_switch_handler
  3263 ;;		_static_soc
  3264 ;;		_update_lcd
  3265 ;; This function is called by:
  3266 ;;		Startup code after reset
  3267 ;; This function uses a reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text0
  3271  0121F0                     __ptext0:
  3272                           	opt callstack 0
  3273  0121F0                     _main:
  3274                           	opt callstack 0
  3275                           
  3276                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3277  0121F0  0E05               	movlw	5
  3278  0121F2  26E1               	addwf	fsr1l,f,c
  3279  0121F4  0E00               	movlw	0
  3280  0121F6  22E2               	addwfc	fsr1h,f,c
  3281                           
  3282                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  3283                           ;stkvar	_inp_index @ sp[(-5)+3]
  3284                           
  3285                           ;incstack = 0
  3286  0121F8  0EFE               	movlw	-2
  3287  0121FA  6AE3               	clrf	plusw1,c
  3288                           
  3289                           ;stkvar	_i @ sp[(-5)+2]
  3290  0121FC  0EFD               	movlw	-3
  3291  0121FE  6AE3               	clrf	plusw1,c
  3292                           
  3293                           ;stkvar	_j @ sp[(-5)+1]
  3294  012200  0EFC               	movlw	-4
  3295  012202  6AE3               	clrf	plusw1,c
  3296  012204  2AE3               	incf	plusw1,f,c
  3297                           
  3298                           ;stkvar	_k @ sp[(-5)+0]
  3299  012206  0EFB               	movlw	-5
  3300  012208  6AE3               	clrf	plusw1,c
  3301  01220A  82E3               	bsf	plusw1,1,c
  3302                           
  3303                           ;main.c: 180:  SYSTEM_Initialize();
  3304  01220C  ECF5  F0CD         	call	_SYSTEM_Initialize	;wreg free
  3305                           
  3306                           ; BSR set to: 60
  3307                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3308  012210  8ED2               	bsf	210,7,c	;volatile
  3309                           
  3310                           ; BSR set to: 60
  3311                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3312  012212  8CD2               	bsf	210,6,c	;volatile
  3313                           
  3314                           ; BSR set to: 60
  3315                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3316  012214  0102               	movlb	2	; () banked
  3317  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3318                           
  3319                           ; BSR set to: 2
  3320                           ;main.c: 193:  WaitMs(300);
  3321  012218  0E2C               	movlw	44
  3322  01221A  6EE6               	movwf	postinc1,c
  3323  01221C  0E01               	movlw	1
  3324  01221E  6EE6               	movwf	postinc1,c
  3325  012220  ECEB  F0CF         	call	_WaitMs	;wreg free
  3326                           
  3327                           ;main.c: 194:  if (PORTBbits.RB0) {
  3328  012224  A0CB               	btfss	203,0,c	;volatile
  3329  012226  D004               	goto	l12183
  3330                           
  3331                           ;main.c: 195:   mode = UI_STATE_HOST;
  3332                           ;stkvar	_mode @ sp[(-5)+4]
  3333  012228  0EFF               	movlw	-1
  3334  01222A  6AE3               	clrf	plusw1,c
  3335  01222C  2AE3               	incf	plusw1,f,c
  3336                           
  3337                           ;main.c: 196:  } else {
  3338  01222E  D004               	goto	l12185
  3339  012230                     l12183:
  3340                           
  3341                           ;main.c: 197:   mode = UI_STATE_LOG;
  3342                           ;stkvar	_mode @ sp[(-5)+4]
  3343  012230  0EFF               	movlw	-1
  3344  012232  6AE3               	clrf	plusw1,c
  3345  012234  80E3               	bsf	plusw1,0,c
  3346  012236  82E3               	bsf	plusw1,1,c	;indir
  3347  012238                     l12185:
  3348                           
  3349                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3350                           ;stkvar	_mode @ sp[(-5)+4]
  3351  012238  0EFF               	movlw	-1
  3352  01223A  04E3               	decf	plusw1,w,c
  3353  01223C  A4D8               	btfss	status,2,c
  3354  01223E  D007               	goto	l1312
  3355                           
  3356                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3357  012240  80BD               	bsf	189,0,c	;volatile
  3358                           
  3359                           ;main.c: 202:   V.mode_pwm = 70;
  3360  012242  0E00               	movlw	0
  3361  012244  0102               	movlb	2	; () banked
  3362  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3363  012248  0E46               	movlw	70
  3364  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3365                           
  3366                           ;main.c: 203:  } else {
  3367  01224C  D004               	goto	l12189
  3368  01224E                     l1312:
  3369  01224E  90BD               	bcf	189,0,c	;volatile
  3370                           
  3371                           ;main.c: 205:   V.mode_pwm = 0;
  3372  012250  0102               	movlb	2	; () banked
  3373  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3374  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3375  012256                     l12189:
  3376                           
  3377                           ; BSR set to: 2
  3378                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3379  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3380  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3381  012262  ECCB  F0D3         	call	_mode_lamp_dim	;wreg free
  3382  012266  D16A               	goto	l12275
  3383  012268                     l12191:
  3384                           
  3385                           ; BSR set to: 2
  3386                           ;main.c: 215:    init_port_dma();
  3387  012268  EC6F  F0D0         	call	_init_port_dma	;wreg free
  3388                           
  3389                           ; BSR set to: 59
  3390                           ;main.c: 217:    init_display();
  3391  01226C  EC08  F0C5         	call	_init_display	;wreg free
  3392                           
  3393                           ; BSR set to: 61
  3394                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3395  012270  0E0C               	movlw	12
  3396  012272  6EE6               	movwf	postinc1,c
  3397  012274  EC2F  F0D4         	call	_eaDogM_WriteCommand	;wreg free
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;main.c: 219:    set_load_relay_one(1);
  3401  012278  0E01               	movlw	1
  3402  01227A  6EE6               	movwf	postinc1,c
  3403  01227C  EC1F  F0D4         	call	_set_load_relay_one	;wreg free
  3404                           
  3405                           ;main.c: 220:    set_load_relay_two(1);
  3406  012280  0E01               	movlw	1
  3407  012282  6EE6               	movwf	postinc1,c
  3408  012284  EC17  F0D4         	call	_set_load_relay_two	;wreg free
  3409                           
  3410                           ;main.c: 222:    V.ui_state = mode;
  3411                           ;stkvar	_mode @ sp[(-5)+4]
  3412  012288  0EFF               	movlw	-1
  3413  01228A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3414                           
  3415                           ;main.c: 223:    srand(1957);
  3416  012290  0EA5               	movlw	165
  3417  012292  6EE6               	movwf	postinc1,c
  3418  012294  0E07               	movlw	7
  3419  012296  6EE6               	movwf	postinc1,c
  3420  012298  EC21  F0D0         	call	_srand	;wreg free
  3421                           
  3422                           ; BSR set to: 2
  3423                           ;main.c: 224:    set_vterm(0);
  3424  01229C  0E00               	movlw	0
  3425  01229E  6EE6               	movwf	postinc1,c
  3426  0122A0  EC75  F0D3         	call	_set_vterm	;wreg free
  3427                           
  3428                           ;main.c: 225:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3429  0122A4  0E13               	movlw	low STR_1
  3430  0122A6  6EE6               	movwf	postinc1,c
  3431  0122A8  0EFF               	movlw	high STR_1
  3432  0122AA  6EE6               	movwf	postinc1,c
  3433  0122AC  0E00               	movlw	0
  3434  0122AE  6EE6               	movwf	postinc1,c
  3435  0122B0  0E00               	movlw	0
  3436  0122B2  6EE6               	movwf	postinc1,c
  3437  0122B4  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3438  0122B8  0060  F007  FFE6   	movff	btemp,postinc1
  3439  0122BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3440  0122C4  0E04               	movlw	4
  3441  0122C6  6EE6               	movwf	postinc1,c
  3442  0122C8  EC02  F0C4         	call	_sprintf	;wreg free
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;main.c: 226:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.0");
  3446  0122CC  0EE3               	movlw	low STR_3
  3447  0122CE  6EE6               	movwf	postinc1,c
  3448  0122D0  0EFF               	movlw	high STR_3
  3449  0122D2  6EE6               	movwf	postinc1,c
  3450  0122D4  0EA5               	movlw	low STR_2
  3451  0122D6  6EE6               	movwf	postinc1,c
  3452  0122D8  0EFF               	movlw	high STR_2
  3453  0122DA  6EE6               	movwf	postinc1,c
  3454  0122DC  0E00               	movlw	0
  3455  0122DE  6EE6               	movwf	postinc1,c
  3456  0122E0  0E01               	movlw	1
  3457  0122E2  6EE6               	movwf	postinc1,c
  3458  0122E4  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3459  0122E8  0060  F007  FFE6   	movff	btemp,postinc1
  3460  0122EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3461  0122F4  0E06               	movlw	6
  3462  0122F6  6EE6               	movwf	postinc1,c
  3463  0122F8  EC02  F0C4         	call	_sprintf	;wreg free
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;main.c: 227:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3467  0122FC  0E02               	movlw	low STR_4
  3468  0122FE  6EE6               	movwf	postinc1,c
  3469  012300  0EFF               	movlw	high STR_4
  3470  012302  6EE6               	movwf	postinc1,c
  3471  012304  0E00               	movlw	0
  3472  012306  6EE6               	movwf	postinc1,c
  3473  012308  0E02               	movlw	2
  3474  01230A  6EE6               	movwf	postinc1,c
  3475  01230C  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3476  012310  0060  F007  FFE6   	movff	btemp,postinc1
  3477  012316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3478  01231C  0E04               	movlw	4
  3479  01231E  6EE6               	movwf	postinc1,c
  3480  012320  EC02  F0C4         	call	_sprintf	;wreg free
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;main.c: 228:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  3484  012324  0E24               	movlw	low STR_5
  3485  012326  6EE6               	movwf	postinc1,c
  3486  012328  0EFF               	movlw	high STR_5
  3487  01232A  6EE6               	movwf	postinc1,c
  3488  01232C  0E02               	movlw	2
  3489  01232E  6EE6               	movwf	postinc1,c
  3490  012330  0E00               	movlw	0
  3491  012332  6EE6               	movwf	postinc1,c
  3492  012334  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3493  012338  0060  F007  FFE6   	movff	btemp,postinc1
  3494  01233E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3495  012344  0E04               	movlw	4
  3496  012346  6EE6               	movwf	postinc1,c
  3497  012348  EC02  F0C4         	call	_sprintf	;wreg free
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;main.c: 229:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "1.0");
  3501  01234C  0EE3               	movlw	low STR_3
  3502  01234E  6EE6               	movwf	postinc1,c
  3503  012350  0EFF               	movlw	high STR_3
  3504  012352  6EE6               	movwf	postinc1,c
  3505  012354  0EA5               	movlw	low STR_2
  3506  012356  6EE6               	movwf	postinc1,c
  3507  012358  0EFF               	movlw	high STR_2
  3508  01235A  6EE6               	movwf	postinc1,c
  3509  01235C  0E02               	movlw	2
  3510  01235E  6EE6               	movwf	postinc1,c
  3511  012360  0E01               	movlw	1
  3512  012362  6EE6               	movwf	postinc1,c
  3513  012364  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3514  012368  0060  F007  FFE6   	movff	btemp,postinc1
  3515  01236E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3516  012374  0E06               	movlw	6
  3517  012376  6EE6               	movwf	postinc1,c
  3518  012378  EC02  F0C4         	call	_sprintf	;wreg free
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;main.c: 230:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  3522  01237C  0EF1               	movlw	low STR_8
  3523  01237E  6EE6               	movwf	postinc1,c
  3524  012380  0EFE               	movlw	high STR_8
  3525  012382  6EE6               	movwf	postinc1,c
  3526  012384  0E02               	movlw	2
  3527  012386  6EE6               	movwf	postinc1,c
  3528  012388  0E02               	movlw	2
  3529  01238A  6EE6               	movwf	postinc1,c
  3530  01238C  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3531  012390  0060  F007  FFE6   	movff	btemp,postinc1
  3532  012396  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3533  01239C  0E04               	movlw	4
  3534  01239E  6EE6               	movwf	postinc1,c
  3535  0123A0  EC02  F0C4         	call	_sprintf	;wreg free
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;main.c: 231:    update_lcd(0);
  3539  0123A4  0E00               	movlw	0
  3540  0123A6  6EE6               	movwf	postinc1,c
  3541  0123A8  ECF3  F0C2         	call	_update_lcd	;wreg free
  3542                           
  3543                           ;main.c: 232:    WaitMs(1000);
  3544  0123AC  0EE8               	movlw	232
  3545  0123AE  6EE6               	movwf	postinc1,c
  3546  0123B0  0E03               	movlw	3
  3547  0123B2  6EE6               	movwf	postinc1,c
  3548  0123B4  ECEB  F0CF         	call	_WaitMs	;wreg free
  3549                           
  3550                           ;main.c: 233:    StartTimer(TMR_DISPLAY, 250);
  3551  0123B8  0EFA               	movlw	250
  3552  0123BA  6EE6               	movwf	postinc1,c
  3553  0123BC  0E00               	movlw	0
  3554  0123BE  6EE6               	movwf	postinc1,c
  3555  0123C0  0E0A               	movlw	10
  3556  0123C2  6EE6               	movwf	postinc1,c
  3557  0123C4  EC30  F0CF         	call	_StartTimer	;wreg free
  3558                           
  3559                           ;main.c: 234:    StartTimer(TMR_ADC, 200);
  3560  0123C8  0EC8               	movlw	200
  3561  0123CA  6EE6               	movwf	postinc1,c
  3562  0123CC  0E00               	movlw	0
  3563  0123CE  6EE6               	movwf	postinc1,c
  3564  0123D0  0E01               	movlw	1
  3565  0123D2  6EE6               	movwf	postinc1,c
  3566  0123D4  EC30  F0CF         	call	_StartTimer	;wreg free
  3567                           
  3568                           ;main.c: 235:    StartTimer(TMR_INFO, 3000);
  3569  0123D8  0EB8               	movlw	184
  3570  0123DA  6EE6               	movwf	postinc1,c
  3571  0123DC  0E0B               	movlw	11
  3572  0123DE  6EE6               	movwf	postinc1,c
  3573  0123E0  0E07               	movlw	7
  3574  0123E2  6EE6               	movwf	postinc1,c
  3575  0123E4  EC30  F0CF         	call	_StartTimer	;wreg free
  3576                           
  3577                           ;main.c: 236:    StartTimer(TMR_FLIPPER, 1500);
  3578  0123E8  0EDC               	movlw	220
  3579  0123EA  6EE6               	movwf	postinc1,c
  3580  0123EC  0E05               	movlw	5
  3581  0123EE  6EE6               	movwf	postinc1,c
  3582  0123F0  0E0B               	movlw	11
  3583  0123F2  6EE6               	movwf	postinc1,c
  3584  0123F4  EC30  F0CF         	call	_StartTimer	;wreg free
  3585                           
  3586                           ;main.c: 237:    StartTimer(TMR_HELPDIS, 3000);
  3587  0123F8  0EB8               	movlw	184
  3588  0123FA  6EE6               	movwf	postinc1,c
  3589  0123FC  0E0B               	movlw	11
  3590  0123FE  6EE6               	movwf	postinc1,c
  3591  012400  0E09               	movlw	9
  3592  012402  6EE6               	movwf	postinc1,c
  3593  012404  EC30  F0CF         	call	_StartTimer	;wreg free
  3594                           
  3595                           ;main.c: 239:    start_adc_scan();
  3596  012408  EC08  F0CC         	call	_start_adc_scan	;wreg free
  3597                           
  3598                           ;main.c: 240:    start_switch_handler();
  3599  01240C  EC37  F0D3         	call	_start_switch_handler	;wreg free
  3600                           
  3601                           ; BSR set to: 57
  3602                           ;main.c: 241:    WaitMs(1000);
  3603  012410  0EE8               	movlw	232
  3604  012412  6EE6               	movwf	postinc1,c
  3605  012414  0E03               	movlw	3
  3606  012416  6EE6               	movwf	postinc1,c
  3607  012418  ECEB  F0CF         	call	_WaitMs	;wreg free
  3608                           
  3609                           ;main.c: 242:    sprintf(get_vterm_ptr(2, 0), " STATIC SOC   1");
  3610  01241C  0E56               	movlw	low STR_9
  3611  01241E  6EE6               	movwf	postinc1,c
  3612  012420  0EFF               	movlw	high STR_9
  3613  012422  6EE6               	movwf	postinc1,c
  3614  012424  0E00               	movlw	0
  3615  012426  6EE6               	movwf	postinc1,c
  3616  012428  0E02               	movlw	2
  3617  01242A  6EE6               	movwf	postinc1,c
  3618  01242C  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3619  012430  0060  F007  FFE6   	movff	btemp,postinc1
  3620  012436  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3621  01243C  0E04               	movlw	4
  3622  01243E  6EE6               	movwf	postinc1,c
  3623  012440  EC02  F0C4         	call	_sprintf	;wreg free
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;main.c: 243:    update_lcd(0);
  3627  012444  0E00               	movlw	0
  3628  012446  6EE6               	movwf	postinc1,c
  3629  012448  ECF3  F0C2         	call	_update_lcd	;wreg free
  3630                           
  3631                           ;main.c: 244:    WaitMs(1000);
  3632  01244C  0EE8               	movlw	232
  3633  01244E  6EE6               	movwf	postinc1,c
  3634  012450  0E03               	movlw	3
  3635  012452  6EE6               	movwf	postinc1,c
  3636  012454  ECEB  F0CF         	call	_WaitMs	;wreg free
  3637                           
  3638                           ;main.c: 245:    sprintf(get_vterm_ptr(2, 0), " STATIC SOC   2");
  3639  012458  0E66               	movlw	low STR_10
  3640  01245A  6EE6               	movwf	postinc1,c
  3641  01245C  0EFF               	movlw	high STR_10
  3642  01245E  6EE6               	movwf	postinc1,c
  3643  012460  0E00               	movlw	0
  3644  012462  6EE6               	movwf	postinc1,c
  3645  012464  0E02               	movlw	2
  3646  012466  6EE6               	movwf	postinc1,c
  3647  012468  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3648  01246C  0060  F007  FFE6   	movff	btemp,postinc1
  3649  012472  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3650  012478  0E04               	movlw	4
  3651  01247A  6EE6               	movwf	postinc1,c
  3652  01247C  EC02  F0C4         	call	_sprintf	;wreg free
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;main.c: 246:    update_lcd(0);
  3656  012480  0E00               	movlw	0
  3657  012482  6EE6               	movwf	postinc1,c
  3658  012484  ECF3  F0C2         	call	_update_lcd	;wreg free
  3659                           
  3660                           ;main.c: 247:    WaitMs(1000);
  3661  012488  0EE8               	movlw	232
  3662  01248A  6EE6               	movwf	postinc1,c
  3663  01248C  0E03               	movlw	3
  3664  01248E  6EE6               	movwf	postinc1,c
  3665  012490  ECEB  F0CF         	call	_WaitMs	;wreg free
  3666                           
  3667                           ;main.c: 248:    sprintf(get_vterm_ptr(2, 0), " STATIC SOC   3");
  3668  012494  0E76               	movlw	low STR_11
  3669  012496  6EE6               	movwf	postinc1,c
  3670  012498  0EFF               	movlw	high STR_11
  3671  01249A  6EE6               	movwf	postinc1,c
  3672  01249C  0E00               	movlw	0
  3673  01249E  6EE6               	movwf	postinc1,c
  3674  0124A0  0E02               	movlw	2
  3675  0124A2  6EE6               	movwf	postinc1,c
  3676  0124A4  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3677  0124A8  0060  F007  FFE6   	movff	btemp,postinc1
  3678  0124AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3679  0124B4  0E04               	movlw	4
  3680  0124B6  6EE6               	movwf	postinc1,c
  3681  0124B8  EC02  F0C4         	call	_sprintf	;wreg free
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;main.c: 249:    update_lcd(0);
  3685  0124BC  0E00               	movlw	0
  3686  0124BE  6EE6               	movwf	postinc1,c
  3687  0124C0  ECF3  F0C2         	call	_update_lcd	;wreg free
  3688                           
  3689                           ;main.c: 250:    WaitMs(1000);
  3690  0124C4  0EE8               	movlw	232
  3691  0124C6  6EE6               	movwf	postinc1,c
  3692  0124C8  0E03               	movlw	3
  3693  0124CA  6EE6               	movwf	postinc1,c
  3694  0124CC  ECEB  F0CF         	call	_WaitMs	;wreg free
  3695                           
  3696                           ;main.c: 251:    sprintf(get_vterm_ptr(2, 0), " STATIC SOC   4");
  3697  0124D0  0E86               	movlw	low STR_12
  3698  0124D2  6EE6               	movwf	postinc1,c
  3699  0124D4  0EFF               	movlw	high STR_12
  3700  0124D6  6EE6               	movwf	postinc1,c
  3701  0124D8  0E00               	movlw	0
  3702  0124DA  6EE6               	movwf	postinc1,c
  3703  0124DC  0E02               	movlw	2
  3704  0124DE  6EE6               	movwf	postinc1,c
  3705  0124E0  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3706  0124E4  0060  F007  FFE6   	movff	btemp,postinc1
  3707  0124EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3708  0124F0  0E04               	movlw	4
  3709  0124F2  6EE6               	movwf	postinc1,c
  3710  0124F4  EC02  F0C4         	call	_sprintf	;wreg free
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;main.c: 252:    update_lcd(0);
  3714  0124F8  0E00               	movlw	0
  3715  0124FA  6EE6               	movwf	postinc1,c
  3716  0124FC  ECF3  F0C2         	call	_update_lcd	;wreg free
  3717                           
  3718                           ;main.c: 253:    WaitMs(2000);
  3719  012500  0ED0               	movlw	208
  3720  012502  6EE6               	movwf	postinc1,c
  3721  012504  0E07               	movlw	7
  3722  012506  6EE6               	movwf	postinc1,c
  3723  012508  ECEB  F0CF         	call	_WaitMs	;wreg free
  3724                           
  3725                           ;main.c: 254:    static_soc();
  3726  01250C  ECA8  F0D2         	call	_static_soc	;wreg free
  3727                           
  3728                           ; BSR set to: 1
  3729                           ;main.c: 255:    init_bsoc();
  3730  012510  ECBE  F0BC         	call	_init_bsoc	;wreg free
  3731                           
  3732                           ;main.c: 256:    WaitMs(1000);
  3733  012514  0EE8               	movlw	232
  3734  012516  6EE6               	movwf	postinc1,c
  3735  012518  0E03               	movlw	3
  3736  01251A  6EE6               	movwf	postinc1,c
  3737  01251C  ECEB  F0CF         	call	_WaitMs	;wreg free
  3738                           
  3739                           ;main.c: 257:    set_load_relay_one(0);
  3740  012520  0E00               	movlw	0
  3741  012522  6EE6               	movwf	postinc1,c
  3742  012524  EC1F  F0D4         	call	_set_load_relay_one	;wreg free
  3743                           
  3744                           ;main.c: 258:    set_load_relay_two(0);
  3745  012528  0E00               	movlw	0
  3746  01252A  6EE6               	movwf	postinc1,c
  3747  01252C  EC17  F0D4         	call	_set_load_relay_two	;wreg free
  3748                           
  3749                           ;main.c: 260:    break;
  3750  012530  D01C               	goto	l12277
  3751  012532                     l1320:
  3752                           
  3753                           ; BSR set to: 2
  3754                           ;main.c: 266:    P.SYSTEM_STABLE = 1;
  3755  012532  0100               	movlb	0	; () banked
  3756  012534  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  3757                           
  3758                           ;main.c: 267:    break;
  3759  012536  D019               	goto	l12277
  3760  012538                     l1322:
  3761                           
  3762                           ; BSR set to: 2
  3763                           ;main.c: 270:    V.ui_state = UI_STATE_INIT;
  3764  012538  6B00               	clrf	_V& (0+255),b	;volatile
  3765                           
  3766                           ;main.c: 271:    break;
  3767  01253A  D017               	goto	l12277
  3768  01253C                     l12275:
  3769  01253C  0102               	movlb	2	; () banked
  3770  01253E  5100               	movf	_V& (0+255),w,b	;volatile
  3771  012540  6E0B               	movwf	(btemp+10)^0,c
  3772  012542  6A0C               	clrf	(btemp+11)^0,c
  3773                           
  3774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3775                           ; Switch size 1, requested type "simple"
  3776                           ; Number of cases is 1, Range of values is 0 to 0
  3777                           ; switch strategies available:
  3778                           ; Name         Instructions Cycles
  3779                           ; simple_byte            4     3 (average)
  3780                           ;	Chosen strategy is simple_byte
  3781  012544  500C               	movf	(btemp+11)^0,w,c
  3782  012546  0A00               	xorlw	0	; case 0
  3783  012548  A4D8               	btfss	status,2,c
  3784  01254A  D7F6               	goto	l1322
  3785                           
  3786                           ; BSR set to: 2
  3787                           ; Switch size 1, requested type "simple"
  3788                           ; Number of cases is 5, Range of values is 0 to 5
  3789                           ; switch strategies available:
  3790                           ; Name         Instructions Cycles
  3791                           ; simple_byte           16     9 (average)
  3792                           ;	Chosen strategy is simple_byte
  3793  01254C  500B               	movf	(btemp+10)^0,w,c
  3794  01254E  0A00               	xorlw	0	; case 0
  3795  012550  B4D8               	btfsc	status,2,c
  3796  012552  D68A               	goto	l12191
  3797  012554  0A01               	xorlw	1	; case 1
  3798  012556  B4D8               	btfsc	status,2,c
  3799  012558  D008               	goto	l12277
  3800  01255A  0A02               	xorlw	2	; case 3
  3801  01255C  B4D8               	btfsc	status,2,c
  3802  01255E  D005               	goto	l12277
  3803  012560  0A07               	xorlw	7	; case 4
  3804  012562  B4D8               	btfsc	status,2,c
  3805  012564  D7E6               	goto	l1320
  3806  012566  0A01               	xorlw	1	; case 5
  3807  012568  D7E7               	goto	l1322
  3808  01256A                     l12277:
  3809                           
  3810                           ;main.c: 274:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  3811  01256A  0E01               	movlw	1
  3812  01256C  6EE6               	movwf	postinc1,c
  3813  01256E  EC8F  F0D1         	call	_TimerDone	;wreg free
  3814  012572  5001               	movf	btemp^0,w,c
  3815  012574  B4D8               	btfsc	status,2,c
  3816  012576  D013               	goto	l12289
  3817  012578  EC75  F0D4         	call	_check_adc_scan	;wreg free
  3818  01257C  5001               	movf	btemp^0,w,c
  3819  01257E  B4D8               	btfsc	status,2,c
  3820  012580  D00E               	goto	l12289
  3821                           
  3822                           ;main.c: 278:    convert_adc_data();
  3823  012582  EC14  F0C7         	call	_convert_adc_data	;wreg free
  3824                           
  3825                           ;main.c: 282:    clear_adc_scan();
  3826  012586  EC7D  F0D4         	call	_clear_adc_scan	;wreg free
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;main.c: 283:    start_adc_scan();
  3830  01258A  EC08  F0CC         	call	_start_adc_scan	;wreg free
  3831                           
  3832                           ;main.c: 284:    StartTimer(TMR_ADC, 200);
  3833  01258E  0EC8               	movlw	200
  3834  012590  6EE6               	movwf	postinc1,c
  3835  012592  0E00               	movlw	0
  3836  012594  6EE6               	movwf	postinc1,c
  3837  012596  0E01               	movlw	1
  3838  012598  6EE6               	movwf	postinc1,c
  3839  01259A  EC30  F0CF         	call	_StartTimer	;wreg free
  3840  01259E                     l12289:
  3841                           
  3842                           ;main.c: 291:   if (TimerDone(TMR_DISPLAY)) {
  3843                           
  3844                           ;main.c: 287:   if (V.ticks) {
  3845  01259E  0E0A               	movlw	10
  3846  0125A0  6EE6               	movwf	postinc1,c
  3847  0125A2  EC8F  F0D1         	call	_TimerDone	;wreg free
  3848  0125A6  5001               	movf	btemp^0,w,c
  3849  0125A8  B4D8               	btfsc	status,2,c
  3850  0125AA  D27F               	goto	l12331
  3851                           
  3852                           ;main.c: 292:    if (TimerDone(TMR_HELPDIS)) {
  3853  0125AC  0E09               	movlw	9
  3854  0125AE  6EE6               	movwf	postinc1,c
  3855  0125B0  EC8F  F0D1         	call	_TimerDone	;wreg free
  3856  0125B4  5001               	movf	btemp^0,w,c
  3857  0125B6  B4D8               	btfsc	status,2,c
  3858  0125B8  D004               	goto	l12297
  3859                           
  3860                           ;main.c: 293:     set_display_info(DIS_STR);
  3861  0125BA  0E00               	movlw	0
  3862  0125BC  6EE6               	movwf	postinc1,c
  3863  0125BE  EC84  F0D3         	call	_set_display_info	;wreg free
  3864  0125C2                     l12297:
  3865                           
  3866                           ;main.c: 295:    calc_model_data();
  3867  0125C2  EC13  F0AF         	call	_calc_model_data	;wreg free
  3868                           
  3869                           ; BSR set to: 1
  3870                           ;main.c: 302:     hid_display(&H);
  3871                           
  3872                           ;main.c: 297:    if (0) {
  3873  0125C6  0EF3               	movlw	_H& (0+255)
  3874  0125C8  6EE6               	movwf	postinc1,c
  3875  0125CA  EC87  F0C4         	call	_hid_display	;wreg free
  3876                           
  3877                           ;main.c: 303:     switch (H.hid_display) {
  3878  0125CE  D248               	goto	l12323
  3879  0125D0                     l1330:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;main.c: 305:      V.calib = 0;
  3883  0125D0  0102               	movlb	2	; () banked
  3884  0125D2  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3885                           
  3886                           ; BSR set to: 2
  3887                           ;main.c: 306:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  3888  0125D4  0060  F5C3  FFE6   	movff	_C+112,postinc1
  3889  0125DA  0060  F5C7  FFE6   	movff	_C+113,postinc1
  3890  0125E0  0060  F5CB  FFE6   	movff	_C+114,postinc1
  3891  0125E6  0060  F5CF  FFE6   	movff	_C+115,postinc1
  3892  0125EC  0E6C               	movlw	low STR_16
  3893  0125EE  6EE6               	movwf	postinc1,c
  3894  0125F0  0EFE               	movlw	high STR_16
  3895  0125F2  6EE6               	movwf	postinc1,c
  3896  0125F4  0E00               	movlw	0
  3897  0125F6  6EE6               	movwf	postinc1,c
  3898  0125F8  0E00               	movlw	0
  3899  0125FA  6EE6               	movwf	postinc1,c
  3900  0125FC  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3901  012600  0060  F007  FFE6   	movff	btemp,postinc1
  3902  012606  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3903  01260C  0E08               	movlw	8
  3904  01260E  6EE6               	movwf	postinc1,c
  3905  012610  EC02  F0C4         	call	_sprintf	;wreg free
  3906                           
  3907                           ;main.c: 307:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  3908  012614  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3909  01261A  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3910  012620  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3911  012626  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3912  01262C  0E92               	movlw	low STR_17
  3913  01262E  6EE6               	movwf	postinc1,c
  3914  012630  0EFE               	movlw	high STR_17
  3915  012632  6EE6               	movwf	postinc1,c
  3916  012634  0E00               	movlw	0
  3917  012636  6EE6               	movwf	postinc1,c
  3918  012638  0E01               	movlw	1
  3919  01263A  6EE6               	movwf	postinc1,c
  3920  01263C  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3921  012640  0060  F007  FFE6   	movff	btemp,postinc1
  3922  012646  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3923  01264C  0E08               	movlw	8
  3924  01264E  6EE6               	movwf	postinc1,c
  3925  012650  EC02  F0C4         	call	_sprintf	;wreg free
  3926                           
  3927                           ;main.c: 308:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  3928  012654  0060  F5B3  FFE6   	movff	_C+108,postinc1
  3929  01265A  0060  F5B7  FFE6   	movff	_C+109,postinc1
  3930  012660  0060  F5BB  FFE6   	movff	_C+110,postinc1
  3931  012666  0060  F5BF  FFE6   	movff	_C+111,postinc1
  3932  01266C  0E7F               	movlw	low STR_18
  3933  01266E  6EE6               	movwf	postinc1,c
  3934  012670  0EFE               	movlw	high STR_18
  3935  012672  6EE6               	movwf	postinc1,c
  3936  012674  0E00               	movlw	0
  3937  012676  6EE6               	movwf	postinc1,c
  3938  012678  0E02               	movlw	2
  3939  01267A  6EE6               	movwf	postinc1,c
  3940  01267C  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3941  012680  0060  F007  FFE6   	movff	btemp,postinc1
  3942  012686  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3943  01268C  0E08               	movlw	8
  3944  01268E  6EE6               	movwf	postinc1,c
  3945  012690  EC02  F0C4         	call	_sprintf	;wreg free
  3946                           
  3947                           ;main.c: 309:      break;
  3948  012694  D1FA               	goto	l12325
  3949  012696                     l1332:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;main.c: 311:      V.calib = 0;
  3953  012696  0102               	movlb	2	; () banked
  3954  012698  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3955                           
  3956                           ; BSR set to: 2
  3957                           ;main.c: 312:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  3958  01269A  0060  F413  FFE6   	movff	_C+4,postinc1
  3959  0126A0  0060  F417  FFE6   	movff	_C+5,postinc1
  3960  0126A6  0060  F41B  FFE6   	movff	_C+6,postinc1
  3961  0126AC  0060  F41F  FFE6   	movff	_C+7,postinc1
  3962  0126B2  0060  F453  FFE6   	movff	_C+20,postinc1
  3963  0126B8  0060  F457  FFE6   	movff	_C+21,postinc1
  3964  0126BE  0060  F45B  FFE6   	movff	_C+22,postinc1
  3965  0126C4  0060  F45F  FFE6   	movff	_C+23,postinc1
  3966  0126CA  0EDE               	movlw	low STR_19
  3967  0126CC  6EE6               	movwf	postinc1,c
  3968  0126CE  0EFE               	movlw	high STR_19
  3969  0126D0  6EE6               	movwf	postinc1,c
  3970  0126D2  0E00               	movlw	0
  3971  0126D4  6EE6               	movwf	postinc1,c
  3972  0126D6  0E00               	movlw	0
  3973  0126D8  6EE6               	movwf	postinc1,c
  3974  0126DA  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3975  0126DE  0060  F007  FFE6   	movff	btemp,postinc1
  3976  0126E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3977  0126EA  0E0C               	movlw	12
  3978  0126EC  6EE6               	movwf	postinc1,c
  3979  0126EE  EC02  F0C4         	call	_sprintf	;wreg free
  3980                           
  3981                           ;main.c: 313:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  3982  0126F2  0060  F403  FFE6   	movff	_C,postinc1
  3983  0126F8  0060  F407  FFE6   	movff	_C+1,postinc1
  3984  0126FE  0060  F40B  FFE6   	movff	_C+2,postinc1
  3985  012704  0060  F40F  FFE6   	movff	_C+3,postinc1
  3986  01270A  0060  F443  FFE6   	movff	_C+16,postinc1
  3987  012710  0060  F447  FFE6   	movff	_C+17,postinc1
  3988  012716  0060  F44B  FFE6   	movff	_C+18,postinc1
  3989  01271C  0060  F44F  FFE6   	movff	_C+19,postinc1
  3990  012722  0EB8               	movlw	low STR_20
  3991  012724  6EE6               	movwf	postinc1,c
  3992  012726  0EFE               	movlw	high STR_20
  3993  012728  6EE6               	movwf	postinc1,c
  3994  01272A  0E00               	movlw	0
  3995  01272C  6EE6               	movwf	postinc1,c
  3996  01272E  0E01               	movlw	1
  3997  012730  6EE6               	movwf	postinc1,c
  3998  012732  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  3999  012736  0060  F007  FFE6   	movff	btemp,postinc1
  4000  01273C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4001  012742  0E0C               	movlw	12
  4002  012744  6EE6               	movwf	postinc1,c
  4003  012746  EC02  F0C4         	call	_sprintf	;wreg free
  4004                           
  4005                           ;main.c: 314:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4006  01274A  0060  F503  FFE6   	movff	_C+64,postinc1
  4007  012750  0060  F507  FFE6   	movff	_C+65,postinc1
  4008  012756  0060  F50B  FFE6   	movff	_C+66,postinc1
  4009  01275C  0060  F50F  FFE6   	movff	_C+67,postinc1
  4010  012762  0060  F423  FFE6   	movff	_C+8,postinc1
  4011  012768  0060  F427  FFE6   	movff	_C+9,postinc1
  4012  01276E  0060  F42B  FFE6   	movff	_C+10,postinc1
  4013  012774  0060  F42F  FFE6   	movff	_C+11,postinc1
  4014  01277A  0ECB               	movlw	low STR_21
  4015  01277C  6EE6               	movwf	postinc1,c
  4016  01277E  0EFE               	movlw	high STR_21
  4017  012780  6EE6               	movwf	postinc1,c
  4018  012782  0E00               	movlw	0
  4019  012784  6EE6               	movwf	postinc1,c
  4020  012786  0E02               	movlw	2
  4021  012788  6EE6               	movwf	postinc1,c
  4022  01278A  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  4023  01278E  0060  F007  FFE6   	movff	btemp,postinc1
  4024  012794  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4025  01279A  0E0C               	movlw	12
  4026  01279C  6EE6               	movwf	postinc1,c
  4027  01279E  EC02  F0C4         	call	_sprintf	;wreg free
  4028                           
  4029                           ;main.c: 315:      break;
  4030  0127A2  D173               	goto	l12325
  4031  0127A4                     l1333:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;main.c: 317:      V.calib = 0;
  4035  0127A4  0102               	movlb	2	; () banked
  4036  0127A6  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4037                           
  4038                           ; BSR set to: 2
  4039                           ;main.c: 318:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  4040  0127A8  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4041  0127AE  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4042  0127B4  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4043  0127BA  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4044  0127C0  0EA5               	movlw	low STR_22
  4045  0127C2  6EE6               	movwf	postinc1,c
  4046  0127C4  0EFE               	movlw	high STR_22
  4047  0127C6  6EE6               	movwf	postinc1,c
  4048  0127C8  0E00               	movlw	0
  4049  0127CA  6EE6               	movwf	postinc1,c
  4050  0127CC  0E00               	movlw	0
  4051  0127CE  6EE6               	movwf	postinc1,c
  4052  0127D0  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  4053  0127D4  0060  F007  FFE6   	movff	btemp,postinc1
  4054  0127DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4055  0127E0  0E08               	movlw	8
  4056  0127E2  6EE6               	movwf	postinc1,c
  4057  0127E4  EC02  F0C4         	call	_sprintf	;wreg free
  4058                           
  4059                           ;main.c: 319:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  4060  0127E8  0060  F613  FFE6   	movff	_C+132,postinc1
  4061  0127EE  0060  F617  FFE6   	movff	_C+133,postinc1
  4062  0127F4  0060  F61B  FFE6   	movff	_C+134,postinc1
  4063  0127FA  0060  F61F  FFE6   	movff	_C+135,postinc1
  4064  012800  0060  F603  FFE6   	movff	_C+128,postinc1
  4065  012806  0060  F607  FFE6   	movff	_C+129,postinc1
  4066  01280C  0060  F60B  FFE6   	movff	_C+130,postinc1
  4067  012812  0060  F60F  FFE6   	movff	_C+131,postinc1
  4068  012818  0E0C               	movlw	low STR_23
  4069  01281A  6EE6               	movwf	postinc1,c
  4070  01281C  0EFE               	movlw	high STR_23
  4071  01281E  6EE6               	movwf	postinc1,c
  4072  012820  0E00               	movlw	0
  4073  012822  6EE6               	movwf	postinc1,c
  4074  012824  0E01               	movlw	1
  4075  012826  6EE6               	movwf	postinc1,c
  4076  012828  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  4077  01282C  0060  F007  FFE6   	movff	btemp,postinc1
  4078  012832  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4079  012838  0E0C               	movlw	12
  4080  01283A  6EE6               	movwf	postinc1,c
  4081  01283C  EC02  F0C4         	call	_sprintf	;wreg free
  4082                           
  4083                           ;main.c: 320:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  4084  012840  0060  F673  FFE6   	movff	_C+156,postinc1
  4085  012846  0060  F677  FFE6   	movff	_C+157,postinc1
  4086  01284C  0060  F67B  FFE6   	movff	_C+158,postinc1
  4087  012852  0060  F67F  FFE6   	movff	_C+159,postinc1
  4088  012858  0E59               	movlw	low STR_24
  4089  01285A  6EE6               	movwf	postinc1,c
  4090  01285C  0EFE               	movlw	high STR_24
  4091  01285E  6EE6               	movwf	postinc1,c
  4092  012860  0E00               	movlw	0
  4093  012862  6EE6               	movwf	postinc1,c
  4094  012864  0E02               	movlw	2
  4095  012866  6EE6               	movwf	postinc1,c
  4096  012868  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  4097  01286C  0060  F007  FFE6   	movff	btemp,postinc1
  4098  012872  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4099  012878  0E08               	movlw	8
  4100  01287A  6EE6               	movwf	postinc1,c
  4101  01287C  EC02  F0C4         	call	_sprintf	;wreg free
  4102                           
  4103                           ;main.c: 321:      break;
  4104  012880  D104               	goto	l12325
  4105  012882                     l12309:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;main.c: 323:      if (!V.calib) {
  4109  012882  0102               	movlb	2	; () banked
  4110  012884  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4111  012886  A4D8               	btfss	status,2,c
  4112  012888  D02D               	goto	l12313
  4113                           
  4114                           ; BSR set to: 2
  4115                           ;main.c: 324:       lp_filter(0.0, i, -1);
  4116  01288A  0EFF               	movlw	255
  4117  01288C  6EE6               	movwf	postinc1,c
  4118                           
  4119                           ;stkvar	_i @ sp[(-6)+2]
  4120  01288E  0EFC               	movlw	-4
  4121  012890  50E3               	movf	plusw1,w,c
  4122  012892  6EE6               	movwf	postinc1,c
  4123  012894  0E00               	movlw	0
  4124  012896  6EE6               	movwf	postinc1,c
  4125  012898  0E00               	movlw	0
  4126  01289A  6EE6               	movwf	postinc1,c
  4127  01289C  0E00               	movlw	0
  4128  01289E  6EE6               	movwf	postinc1,c
  4129  0128A0  0E00               	movlw	0
  4130  0128A2  6EE6               	movwf	postinc1,c
  4131  0128A4  EC9C  F0B9         	call	_lp_filter	;wreg free
  4132                           
  4133                           ;main.c: 325:       lp_filter(0.0, j, -1);
  4134  0128A8  0EFF               	movlw	255
  4135  0128AA  6EE6               	movwf	postinc1,c
  4136                           
  4137                           ;stkvar	_j @ sp[(-6)+1]
  4138  0128AC  0EFB               	movlw	-5
  4139  0128AE  50E3               	movf	plusw1,w,c
  4140  0128B0  6EE6               	movwf	postinc1,c
  4141  0128B2  0E00               	movlw	0
  4142  0128B4  6EE6               	movwf	postinc1,c
  4143  0128B6  0E00               	movlw	0
  4144  0128B8  6EE6               	movwf	postinc1,c
  4145  0128BA  0E00               	movlw	0
  4146  0128BC  6EE6               	movwf	postinc1,c
  4147  0128BE  0E00               	movlw	0
  4148  0128C0  6EE6               	movwf	postinc1,c
  4149  0128C2  EC9C  F0B9         	call	_lp_filter	;wreg free
  4150                           
  4151                           ;main.c: 326:       lp_filter(0.0, k, -1);
  4152  0128C6  0EFF               	movlw	255
  4153  0128C8  6EE6               	movwf	postinc1,c
  4154                           
  4155                           ;stkvar	_k @ sp[(-6)+0]
  4156  0128CA  0EFA               	movlw	-6
  4157  0128CC  50E3               	movf	plusw1,w,c
  4158  0128CE  6EE6               	movwf	postinc1,c
  4159  0128D0  0E00               	movlw	0
  4160  0128D2  6EE6               	movwf	postinc1,c
  4161  0128D4  0E00               	movlw	0
  4162  0128D6  6EE6               	movwf	postinc1,c
  4163  0128D8  0E00               	movlw	0
  4164  0128DA  6EE6               	movwf	postinc1,c
  4165  0128DC  0E00               	movlw	0
  4166  0128DE  6EE6               	movwf	postinc1,c
  4167  0128E0  EC9C  F0B9         	call	_lp_filter	;wreg free
  4168  0128E4                     l12313:
  4169                           
  4170                           ;main.c: 328:      V.calib = 1;
  4171  0128E4  0E01               	movlw	1
  4172  0128E6  0102               	movlb	2	; () banked
  4173  0128E8  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  4174                           
  4175                           ; BSR set to: 2
  4176                           ;main.c: 329:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  4177  0128EA  0E02               	movlw	2
  4178  0128EC  6EE6               	movwf	postinc1,c
  4179  0128EE  EC7B  F0D1         	call	_get_switch	;wreg free
  4180  0128F2  5001               	movf	btemp^0,w,c
  4181  0128F4  6EE6               	movwf	postinc1,c
  4182  0128F6  0E00               	movlw	0
  4183  0128F8  6EE6               	movwf	postinc1,c
  4184                           
  4185                           ;stkvar	_i @ sp[(-7)+2]
  4186  0128FA  0EFB               	movlw	-5
  4187  0128FC  50E3               	movf	plusw1,w,c
  4188  0128FE  0D04               	mullw	4
  4189  012900  0E00               	movlw	low _C
  4190  012902  24F3               	addwf	243,w,c
  4191  012904  6ED9               	movwf	fsr2l,c
  4192  012906  0E01               	movlw	high _C
  4193  012908  20F4               	addwfc	prodh,w,c
  4194  01290A  6EDA               	movwf	fsr2h,c
  4195  01290C  006F FF7B FFE6     	movff	postinc2,postinc1
  4196  012912  006F FF7B FFE6     	movff	postinc2,postinc1
  4197  012918  006F FF7B FFE6     	movff	postinc2,postinc1
  4198  01291E  006F FF7B FFE6     	movff	postinc2,postinc1
  4199                           
  4200                           ;stkvar	_i @ sp[(-11)+2]
  4201  012924  0EF7               	movlw	-9
  4202  012926  50E3               	movf	plusw1,w,c
  4203  012928  6EE6               	movwf	postinc1,c
  4204  01292A  EC66  F0D3         	call	_get_raw_result	;wreg free
  4205  01292E  0060  F007  FFE6   	movff	btemp,postinc1
  4206  012934  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4207  01293A  0E46               	movlw	low STR_13
  4208  01293C  6EE6               	movwf	postinc1,c
  4209  01293E  0EFF               	movlw	high STR_13
  4210  012940  6EE6               	movwf	postinc1,c
  4211  012942  0E00               	movlw	0
  4212  012944  6EE6               	movwf	postinc1,c
  4213  012946  0E00               	movlw	0
  4214  012948  6EE6               	movwf	postinc1,c
  4215  01294A  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  4216  01294E  0060  F007  FFE6   	movff	btemp,postinc1
  4217  012954  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4218  01295A  0E0C               	movlw	12
  4219  01295C  6EE6               	movwf	postinc1,c
  4220  01295E  EC02  F0C4         	call	_sprintf	;wreg free
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;main.c: 330:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4224  012962  0E03               	movlw	3
  4225  012964  6EE6               	movwf	postinc1,c
  4226  012966  EC7B  F0D1         	call	_get_switch	;wreg free
  4227  01296A  5001               	movf	btemp^0,w,c
  4228  01296C  6EE6               	movwf	postinc1,c
  4229  01296E  0E00               	movlw	0
  4230  012970  6EE6               	movwf	postinc1,c
  4231                           
  4232                           ;stkvar	_j @ sp[(-7)+1]
  4233  012972  0EFA               	movlw	-6
  4234  012974  50E3               	movf	plusw1,w,c
  4235  012976  0D04               	mullw	4
  4236  012978  0E00               	movlw	low _C
  4237  01297A  24F3               	addwf	243,w,c
  4238  01297C  6ED9               	movwf	fsr2l,c
  4239  01297E  0E01               	movlw	high _C
  4240  012980  20F4               	addwfc	prodh,w,c
  4241  012982  6EDA               	movwf	fsr2h,c
  4242  012984  006F FF7B FFE6     	movff	postinc2,postinc1
  4243  01298A  006F FF7B FFE6     	movff	postinc2,postinc1
  4244  012990  006F FF7B FFE6     	movff	postinc2,postinc1
  4245  012996  006F FF7B FFE6     	movff	postinc2,postinc1
  4246                           
  4247                           ;stkvar	_j @ sp[(-11)+1]
  4248  01299C  0EF6               	movlw	-10
  4249  01299E  50E3               	movf	plusw1,w,c
  4250  0129A0  6EE6               	movwf	postinc1,c
  4251  0129A2  EC66  F0D3         	call	_get_raw_result	;wreg free
  4252  0129A6  0060  F007  FFE6   	movff	btemp,postinc1
  4253  0129AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4254  0129B2  0E46               	movlw	low STR_13
  4255  0129B4  6EE6               	movwf	postinc1,c
  4256  0129B6  0EFF               	movlw	high STR_13
  4257  0129B8  6EE6               	movwf	postinc1,c
  4258  0129BA  0E00               	movlw	0
  4259  0129BC  6EE6               	movwf	postinc1,c
  4260  0129BE  0E01               	movlw	1
  4261  0129C0  6EE6               	movwf	postinc1,c
  4262  0129C2  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  4263  0129C6  0060  F007  FFE6   	movff	btemp,postinc1
  4264  0129CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4265  0129D2  0E0C               	movlw	12
  4266  0129D4  6EE6               	movwf	postinc1,c
  4267  0129D6  EC02  F0C4         	call	_sprintf	;wreg free
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;main.c: 331:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4271                           ;stkvar	_inp_index @ sp[(-5)+3]
  4272  0129DA  0EFE               	movlw	-2
  4273  0129DC  50E3               	movf	plusw1,w,c
  4274  0129DE  6E0B               	movwf	(btemp+10)^0,c
  4275  0129E0  6A0C               	clrf	(btemp+11)^0,c
  4276  0129E2  0E01               	movlw	1
  4277  0129E4  260B               	addwf	(btemp+10)^0,f,c
  4278  0129E6  0E00               	movlw	0
  4279  0129E8  220C               	addwfc	(btemp+11)^0,f,c
  4280  0129EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4281  0129F0  0060  F033  FFE6   	movff	btemp+11,postinc1
  4282                           
  4283                           ;stkvar	_k @ sp[(-7)+0]
  4284  0129F6  0EF9               	movlw	-7
  4285  0129F8  50E3               	movf	plusw1,w,c
  4286  0129FA  0D04               	mullw	4
  4287  0129FC  0E00               	movlw	low _C
  4288  0129FE  24F3               	addwf	243,w,c
  4289  012A00  6ED9               	movwf	fsr2l,c
  4290  012A02  0E01               	movlw	high _C
  4291  012A04  20F4               	addwfc	prodh,w,c
  4292  012A06  6EDA               	movwf	fsr2h,c
  4293  012A08  006F FF7B FFE6     	movff	postinc2,postinc1
  4294  012A0E  006F FF7B FFE6     	movff	postinc2,postinc1
  4295  012A14  006F FF7B FFE6     	movff	postinc2,postinc1
  4296  012A1A  006F FF7B FFE6     	movff	postinc2,postinc1
  4297                           
  4298                           ;stkvar	_k @ sp[(-11)+0]
  4299  012A20  0EF5               	movlw	-11
  4300  012A22  50E3               	movf	plusw1,w,c
  4301  012A24  6EE6               	movwf	postinc1,c
  4302  012A26  EC66  F0D3         	call	_get_raw_result	;wreg free
  4303  012A2A  0060  F007  FFE6   	movff	btemp,postinc1
  4304  012A30  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4305  012A36  0E35               	movlw	low STR_15
  4306  012A38  6EE6               	movwf	postinc1,c
  4307  012A3A  0EFF               	movlw	high STR_15
  4308  012A3C  6EE6               	movwf	postinc1,c
  4309  012A3E  0E00               	movlw	0
  4310  012A40  6EE6               	movwf	postinc1,c
  4311  012A42  0E02               	movlw	2
  4312  012A44  6EE6               	movwf	postinc1,c
  4313  012A46  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  4314  012A4A  0060  F007  FFE6   	movff	btemp,postinc1
  4315  012A50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4316  012A56  0E0C               	movlw	12
  4317  012A58  6EE6               	movwf	postinc1,c
  4318  012A5A  EC02  F0C4         	call	_sprintf	;wreg free
  4319                           
  4320                           ;main.c: 332:      break;
  4321  012A5E  D015               	goto	l12325
  4322  012A60                     l12323:
  4323  012A60  0100               	movlb	0	; () banked
  4324  012A62  51F3               	movf	_H& (0+255),w,b
  4325  012A64  6E0B               	movwf	(btemp+10)^0,c
  4326  012A66  6A0C               	clrf	(btemp+11)^0,c
  4327                           
  4328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4329                           ; Switch size 1, requested type "simple"
  4330                           ; Number of cases is 1, Range of values is 0 to 0
  4331                           ; switch strategies available:
  4332                           ; Name         Instructions Cycles
  4333                           ; simple_byte            4     3 (average)
  4334                           ;	Chosen strategy is simple_byte
  4335  012A68  500C               	movf	(btemp+11)^0,w,c
  4336  012A6A  0A00               	xorlw	0	; case 0
  4337  012A6C  A4D8               	btfss	status,2,c
  4338  012A6E  D00D               	goto	l12325
  4339                           
  4340                           ; BSR set to: 0
  4341                           ; Switch size 1, requested type "simple"
  4342                           ; Number of cases is 4, Range of values is 0 to 3
  4343                           ; switch strategies available:
  4344                           ; Name         Instructions Cycles
  4345                           ; simple_byte           13     7 (average)
  4346                           ;	Chosen strategy is simple_byte
  4347  012A70  500B               	movf	(btemp+10)^0,w,c
  4348  012A72  0A00               	xorlw	0	; case 0
  4349  012A74  B4D8               	btfsc	status,2,c
  4350  012A76  D60F               	goto	l1332
  4351  012A78  0A01               	xorlw	1	; case 1
  4352  012A7A  B4D8               	btfsc	status,2,c
  4353  012A7C  D5A9               	goto	l1330
  4354  012A7E  0A03               	xorlw	3	; case 2
  4355  012A80  B4D8               	btfsc	status,2,c
  4356  012A82  D690               	goto	l1333
  4357  012A84  0A01               	xorlw	1	; case 3
  4358  012A86  B4D8               	btfsc	status,2,c
  4359  012A88  D6FC               	goto	l12309
  4360  012A8A                     l12325:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;main.c: 336:     clear_hid_pflags(&H);
  4364  012A8A  0EF3               	movlw	_H& (0+255)
  4365  012A8C  6EE6               	movwf	postinc1,c
  4366  012A8E  ECBA  F0D2         	call	_clear_hid_pflags	;wreg free
  4367                           
  4368                           ;main.c: 338:    StartTimer(TMR_DISPLAY, 250);
  4369  012A92  0EFA               	movlw	250
  4370  012A94  6EE6               	movwf	postinc1,c
  4371  012A96  0E00               	movlw	0
  4372  012A98  6EE6               	movwf	postinc1,c
  4373  012A9A  0E0A               	movlw	10
  4374  012A9C  6EE6               	movwf	postinc1,c
  4375  012A9E  EC30  F0CF         	call	_StartTimer	;wreg free
  4376                           
  4377                           ;main.c: 339:    update_lcd(0);
  4378  012AA2  0E00               	movlw	0
  4379  012AA4  6EE6               	movwf	postinc1,c
  4380  012AA6  ECF3  F0C2         	call	_update_lcd	;wreg free
  4381  012AAA                     l12331:
  4382                           
  4383                           ;main.c: 345:   check_help(V.flipper);
  4384  012AAA  0102               	movlb	2	; () banked
  4385  012AAC  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4386  012AAE  6EE6               	movwf	postinc1,c
  4387  012AB0  EC91  F0B6         	call	_check_help	;wreg free
  4388                           
  4389                           ;main.c: 347:   if (check_enter_button(&H)) {
  4390  012AB4  0EF3               	movlw	_H& (0+255)
  4391  012AB6  6EE6               	movwf	postinc1,c
  4392  012AB8  EC50  F0CF         	call	_check_enter_button	;wreg free
  4393  012ABC  5001               	movf	btemp^0,w,c
  4394  012ABE  B4D8               	btfsc	status,2,c
  4395  012AC0  D062               	goto	l1337
  4396                           
  4397                           ;main.c: 348:    V.calib = 0;
  4398  012AC2  0102               	movlb	2	; () banked
  4399  012AC4  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4400                           
  4401                           ; BSR set to: 2
  4402                           ;main.c: 349:    inp_index += 3;
  4403                           ;stkvar	_inp_index @ sp[(-5)+3]
  4404  012AC6  0EFE               	movlw	-2
  4405  012AC8  006F FF8C  F001    	movff	plusw1,btemp
  4406  012ACE  0E03               	movlw	3
  4407  012AD0  2601               	addwf	btemp^0,f,c
  4408  012AD2  0EFE               	movlw	-2
  4409  012AD4  0060  F007  FFE3   	movff	btemp,plusw1
  4410                           
  4411                           ;main.c: 350:    if (inp_index > 9)
  4412                           ;stkvar	_inp_index @ sp[(-5)+3]
  4413  012ADA  0EFE               	movlw	-2
  4414  012ADC  006F FF8C  F001    	movff	plusw1,btemp
  4415  012AE2  0E09               	movlw	9
  4416  012AE4  6401               	cpfsgt	btemp^0,c
  4417  012AE6  D03A               	goto	l12359
  4418                           
  4419                           ; BSR set to: 2
  4420                           ;main.c: 351:     inp_index = 0;
  4421                           ;stkvar	_inp_index @ sp[(-5)+3]
  4422  012AE8  0EFE               	movlw	-2
  4423  012AEA  6AE3               	clrf	plusw1,c
  4424  012AEC  D037               	goto	l12359
  4425  012AEE                     l12341:
  4426                           
  4427                           ; BSR set to: 2
  4428                           ;main.c: 354:     i = C_BATT;
  4429                           ;stkvar	_i @ sp[(-5)+2]
  4430  012AEE  0EFD               	movlw	-3
  4431  012AF0  6AE3               	clrf	plusw1,c
  4432                           
  4433                           ; BSR set to: 2
  4434                           ;main.c: 355:     j = C_PV;
  4435                           ;stkvar	_j @ sp[(-5)+1]
  4436  012AF2  0EFC               	movlw	-4
  4437  012AF4  6AE3               	clrf	plusw1,c
  4438  012AF6  2AE3               	incf	plusw1,f,c
  4439                           
  4440                           ; BSR set to: 2
  4441                           ;main.c: 356:     k = V_CC;
  4442                           ;stkvar	_k @ sp[(-5)+0]
  4443  012AF8  0EFB               	movlw	-5
  4444  012AFA  6AE3               	clrf	plusw1,c
  4445  012AFC  82E3               	bsf	plusw1,1,c
  4446                           
  4447                           ;main.c: 357:     break;
  4448  012AFE  D043               	goto	l1337
  4449  012B00                     l12347:
  4450                           
  4451                           ; BSR set to: 2
  4452                           ;main.c: 359:     i = V_BAT;
  4453                           ;stkvar	_i @ sp[(-5)+2]
  4454  012B00  0EFD               	movlw	-3
  4455  012B02  6AE3               	clrf	plusw1,c
  4456  012B04  84E3               	bsf	plusw1,2,c
  4457                           
  4458                           ;main.c: 360:     j = V_PV;
  4459                           ;stkvar	_j @ sp[(-5)+1]
  4460  012B06  0EFC               	movlw	-4
  4461  012B08  6AE3               	clrf	plusw1,c
  4462  012B0A  80E3               	bsf	plusw1,0,c
  4463  012B0C  84E3               	bsf	plusw1,2,c	;indir
  4464                           
  4465                           ;main.c: 361:     k = V_CBUS;
  4466                           ;stkvar	_k @ sp[(-5)+0]
  4467  012B0E  0EFB               	movlw	-5
  4468  012B10  6AE3               	clrf	plusw1,c
  4469  012B12  82E3               	bsf	plusw1,1,c
  4470  012B14  84E3               	bsf	plusw1,2,c	;indir
  4471                           
  4472                           ;main.c: 362:     break;
  4473  012B16  D037               	goto	l1337
  4474  012B18                     l12349:
  4475                           
  4476                           ; BSR set to: 2
  4477                           ;main.c: 364:     i = V_BBAT;
  4478                           ;stkvar	_i @ sp[(-5)+2]
  4479  012B18  0EFD               	movlw	-3
  4480  012B1A  6AE3               	clrf	plusw1,c
  4481  012B1C  82E3               	bsf	plusw1,1,c
  4482  012B1E  86E3               	bsf	plusw1,3,c	;indir
  4483                           
  4484                           ; BSR set to: 2
  4485                           ;main.c: 365:     j = V_TEMP;
  4486  012B20  0E0B               	movlw	11
  4487  012B22  6E0C               	movwf	(btemp+11)^0,c
  4488                           
  4489                           ;stkvar	_j @ sp[(-5)+1]
  4490  012B24  0EFC               	movlw	-4
  4491  012B26  0060  F033  FFE3   	movff	btemp+11,plusw1
  4492                           
  4493                           ; BSR set to: 2
  4494                           ;main.c: 366:     k = V_INVERTER;
  4495                           ;stkvar	_k @ sp[(-5)+0]
  4496  012B2C  0EFB               	movlw	-5
  4497  012B2E  6AE3               	clrf	plusw1,c
  4498  012B30  84E3               	bsf	plusw1,2,c
  4499  012B32  86E3               	bsf	plusw1,3,c	;indir
  4500                           
  4501                           ;main.c: 367:     break;
  4502  012B34  D028               	goto	l1337
  4503  012B36                     l12355:
  4504                           
  4505                           ; BSR set to: 2
  4506                           ;main.c: 369:     i = channel_ANB5;
  4507  012B36  0E0D               	movlw	13
  4508  012B38  6E0C               	movwf	(btemp+11)^0,c
  4509                           
  4510                           ;stkvar	_i @ sp[(-5)+2]
  4511  012B3A  0EFD               	movlw	-3
  4512  012B3C  0060  F033  FFE3   	movff	btemp+11,plusw1
  4513                           
  4514                           ;main.c: 370:     j = channel_ANB5;
  4515  012B42  0E0D               	movlw	13
  4516  012B44  6E0C               	movwf	(btemp+11)^0,c
  4517                           
  4518                           ;stkvar	_j @ sp[(-5)+1]
  4519  012B46  0EFC               	movlw	-4
  4520  012B48  0060  F033  FFE3   	movff	btemp+11,plusw1
  4521                           
  4522                           ;main.c: 371:     k = channel_ANB5;
  4523  012B4E  0E0D               	movlw	13
  4524  012B50  6E0C               	movwf	(btemp+11)^0,c
  4525                           
  4526                           ;stkvar	_k @ sp[(-5)+0]
  4527  012B52  0EFB               	movlw	-5
  4528  012B54  0060  F033  FFE3   	movff	btemp+11,plusw1
  4529                           
  4530                           ;main.c: 372:     break;
  4531  012B5A  D015               	goto	l1337
  4532  012B5C                     l12359:
  4533                           
  4534                           ; BSR set to: 2
  4535                           ;stkvar	_inp_index @ sp[(-5)+3]
  4536  012B5C  0EFE               	movlw	-2
  4537  012B5E  50E3               	movf	plusw1,w,c
  4538  012B60  6E0B               	movwf	(btemp+10)^0,c
  4539  012B62  6A0C               	clrf	(btemp+11)^0,c
  4540                           
  4541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4542                           ; Switch size 1, requested type "simple"
  4543                           ; Number of cases is 1, Range of values is 0 to 0
  4544                           ; switch strategies available:
  4545                           ; Name         Instructions Cycles
  4546                           ; simple_byte            4     3 (average)
  4547                           ;	Chosen strategy is simple_byte
  4548  012B64  500C               	movf	(btemp+11)^0,w,c
  4549  012B66  0A00               	xorlw	0	; case 0
  4550  012B68  A4D8               	btfss	status,2,c
  4551  012B6A  D00D               	goto	l1337
  4552                           
  4553                           ; BSR set to: 2
  4554                           ; Switch size 1, requested type "simple"
  4555                           ; Number of cases is 4, Range of values is 0 to 9
  4556                           ; switch strategies available:
  4557                           ; Name         Instructions Cycles
  4558                           ; simple_byte           13     7 (average)
  4559                           ;	Chosen strategy is simple_byte
  4560  012B6C  500B               	movf	(btemp+10)^0,w,c
  4561  012B6E  0A00               	xorlw	0	; case 0
  4562  012B70  B4D8               	btfsc	status,2,c
  4563  012B72  D7BD               	goto	l12341
  4564  012B74  0A03               	xorlw	3	; case 3
  4565  012B76  B4D8               	btfsc	status,2,c
  4566  012B78  D7C3               	goto	l12347
  4567  012B7A  0A05               	xorlw	5	; case 6
  4568  012B7C  B4D8               	btfsc	status,2,c
  4569  012B7E  D7CC               	goto	l12349
  4570  012B80  0A0F               	xorlw	15	; case 9
  4571  012B82  B4D8               	btfsc	status,2,c
  4572  012B84  D7D8               	goto	l12355
  4573  012B86                     l1337:
  4574                           
  4575                           ;main.c: 381:   if (V.set_sequ) {
  4576  012B86  0102               	movlb	2	; () banked
  4577  012B88  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4578  012B8A  D4D8               	goto	l12275
  4579                           
  4580                           ; BSR set to: 2
  4581                           ;main.c: 382:    if (TimerDone(TMR_INFO)) {
  4582  012B8C  0E07               	movlw	7
  4583  012B8E  6EE6               	movwf	postinc1,c
  4584  012B90  EC8F  F0D1         	call	_TimerDone	;wreg free
  4585  012B94  5001               	movf	btemp^0,w,c
  4586  012B96  B4D8               	btfsc	status,2,c
  4587  012B98  D00B               	goto	l12369
  4588                           
  4589                           ;main.c: 383:     V.set_sequ = 0;
  4590  012B9A  0102               	movlb	2	; () banked
  4591  012B9C  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4592                           
  4593                           ; BSR set to: 2
  4594                           ;main.c: 384:     set_vterm(0);
  4595  012B9E  0E00               	movlw	0
  4596  012BA0  6EE6               	movwf	postinc1,c
  4597  012BA2  EC75  F0D3         	call	_set_vterm	;wreg free
  4598                           
  4599                           ;main.c: 385:     update_lcd(0);
  4600  012BA6  0E00               	movlw	0
  4601  012BA8  6EE6               	movwf	postinc1,c
  4602  012BAA  ECF3  F0C2         	call	_update_lcd	;wreg free
  4603                           
  4604                           ;main.c: 386:    } else {
  4605  012BAE  D4C6               	goto	l12275
  4606  012BB0                     l12369:
  4607                           
  4608                           ;main.c: 387:     set_vterm(2);
  4609  012BB0  0E02               	movlw	2
  4610  012BB2  6EE6               	movwf	postinc1,c
  4611  012BB4  EC75  F0D3         	call	_set_vterm	;wreg free
  4612                           
  4613                           ;main.c: 388:     update_lcd(2);
  4614  012BB8  0E02               	movlw	2
  4615  012BBA  6EE6               	movwf	postinc1,c
  4616  012BBC  ECF3  F0C2         	call	_update_lcd	;wreg free
  4617  012BC0  D4BD               	goto	l12275
  4618  012BC2                     __end_of_main:
  4619                           	opt callstack 0
  4620                           
  4621 ;; *************** function _static_soc *****************
  4622 ;; Defined at:
  4623 ;;		line 85 in file "mbmc.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1  [STACK] void 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 3F/1
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4641 ;;Total ram usage:        0 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:   15
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_main
  4648 ;; This function uses a reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text1
  4652  01A550                     __ptext1:
  4653                           	opt callstack 0
  4654  01A550                     _static_soc:
  4655                           	opt callstack 15
  4656                           
  4657                           ;mbmc.c: 87:  C.runtime = 120;
  4658                           
  4659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4660                           ;incstack = 0
  4661  01A550  0E00               	movlw	0
  4662  01A552  0101               	movlb	1	; () banked
  4663  01A554  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
  4664  01A556  0E78               	movlw	120
  4665  01A558  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
  4666                           
  4667                           ;mbmc.c: 88:  C.soc = 100;
  4668  01A55A  0E00               	movlw	0
  4669  01A55C  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
  4670  01A55E  0E64               	movlw	100
  4671  01A560  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
  4672                           
  4673                           ; BSR set to: 1
  4674                           ;mbmc.c: 89:  C.dynamic_ah = C.bank_ah;
  4675  01A562  C17C  F180         	movff	_C+124,_C+128	;volatile
  4676  01A566  C17D  F181         	movff	_C+125,_C+129	;volatile
  4677  01A56A  C17E  F182         	movff	_C+126,_C+130	;volatile
  4678  01A56E  C17F  F183         	movff	_C+127,_C+131	;volatile
  4679                           
  4680                           ; BSR set to: 1
  4681                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4682  01A572  0012               	return		;funcret
  4683  01A574                     __end_of_static_soc:
  4684                           	opt callstack 0
  4685                           
  4686 ;; *************** function _start_switch_handler *****************
  4687 ;; Defined at:
  4688 ;;		line 119 in file "dio.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1  [STACK] void 
  4695 ;; Registers used:
  4696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4697 ;; Tracked objects:
  4698 ;;		On entry : 1/0
  4699 ;;		On exit  : 3F/39
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4706 ;;Total ram usage:        0 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:   16
  4709 ;; This function calls:
  4710 ;;		_INT1_SetInterruptHandler
  4711 ;; This function is called by:
  4712 ;;		_main
  4713 ;; This function uses a reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text2
  4717  01A66E                     __ptext2:
  4718                           	opt callstack 0
  4719  01A66E                     _start_switch_handler:
  4720                           	opt callstack 14
  4721                           
  4722                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  4723                           
  4724                           ; BSR set to: 1
  4725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4726                           ;incstack = 0
  4727  01A66E  0139               	movlb	57	; () banked
  4728  01A670  9195               	bcf	149,0,b	;volatile
  4729                           
  4730                           ; BSR set to: 57
  4731                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  4732  01A672  0E6E               	movlw	low _switch_handler
  4733  01A674  6EE6               	movwf	postinc1,c
  4734  01A676  0E81               	movlw	high _switch_handler
  4735  01A678  6EE6               	movwf	postinc1,c
  4736  01A67A  0E01               	movlw	low (_switch_handler shr (0+16))
  4737  01A67C  6EE6               	movwf	postinc1,c
  4738  01A67E  EC1B  F0D2         	call	_INT1_SetInterruptHandler	;wreg free
  4739                           
  4740                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  4741  01A682  0E02               	movlw	2
  4742  01A684  0100               	movlb	0	; () banked
  4743  01A686  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  4747  01A688  0139               	movlb	57	; () banked
  4748  01A68A  8195               	bsf	149,0,b	;volatile
  4749                           
  4750                           ; BSR set to: 57
  4751                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  4752  01A68C  0012               	return		;funcret
  4753  01A68E                     __end_of_start_switch_handler:
  4754                           	opt callstack 0
  4755                           
  4756 ;; *************** function _start_adc_scan *****************
  4757 ;; Defined at:
  4758 ;;		line 33 in file "daq.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1  [STACK] _Bool 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 1/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4776 ;;Total ram usage:        0 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:   16
  4779 ;; This function calls:
  4780 ;;		_ADCC_DischargeSampleCapacitor
  4781 ;;		_ADCC_SetADIInterruptHandler
  4782 ;;		_ADCC_SetADTIInterruptHandler
  4783 ;;		_ADCC_StartConversion
  4784 ;; This function is called by:
  4785 ;;		_main
  4786 ;; This function uses a reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text3
  4790  019810                     __ptext3:
  4791                           	opt callstack 0
  4792  019810                     _start_adc_scan:
  4793                           	opt callstack 14
  4794                           
  4795                           ;daq.c: 35:  if (R.done)
  4796                           
  4797                           ; BSR set to: 57
  4798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4799                           ;incstack = 0
  4800  019810  0100               	movlb	0	; () banked
  4801  019812  51F2               	movf	(_R+39)& (0+255),w,b	;volatile
  4802  019814  A4D8               	btfss	status,2,c
  4803  019816  0012               	return	
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;daq.c: 38:  R.scan_index = 0;
  4807  019818  6BEF               	clrf	(_R+36)& (0+255),b	;volatile
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  4811  01981A  013A               	movlb	58	; () banked
  4812  01981C  5140               	movf	64,w,b	;volatile
  4813  01981E  006E F940  F001    	movff	14928,btemp	;volatile
  4814  019824  6A02               	clrf	(btemp+1)^0,c
  4815  019826  0060  F004  F002   	movff	btemp,btemp+1
  4816  01982C  6A01               	clrf	btemp^0,c
  4817  01982E  2601               	addwf	btemp^0,f,c
  4818  019830  0E00               	movlw	0
  4819  019832  2202               	addwfc	(btemp+1)^0,f,c
  4820  019834  0E77               	movlw	119
  4821  019836  1401               	andwf	btemp^0,w,c
  4822  019838  0100               	movlb	0	; () banked
  4823  01983A  6FF0               	movwf	(_R+37)& (0+255),b	;volatile
  4824  01983C  0E3C               	movlw	60
  4825  01983E  1402               	andwf	(btemp+1)^0,w,c
  4826  019840  6FF1               	movwf	(_R+38)& (0+255),b	;volatile
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  4830  019842  0E22               	movlw	low _adc_int_handler
  4831  019844  6EE6               	movwf	postinc1,c
  4832  019846  0EA9               	movlw	high _adc_int_handler
  4833  019848  6EE6               	movwf	postinc1,c
  4834  01984A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  4835  01984C  6EE6               	movwf	postinc1,c
  4836  01984E  EC57  F0D2         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4837                           
  4838                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  4839  019852  0EEC               	movlw	low _adc_int_t_handler
  4840  019854  6EE6               	movwf	postinc1,c
  4841  019856  0E95               	movlw	high _adc_int_t_handler
  4842  019858  6EE6               	movwf	postinc1,c
  4843  01985A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  4844  01985C  6EE6               	movwf	postinc1,c
  4845  01985E  EC43  F0D2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  4846                           
  4847                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  4848  019862  EC69  F0D4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  4849                           
  4850                           ; BSR set to: 62
  4851                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  4852  019866  0100               	movlb	0	; () banked
  4853  019868  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
  4854  01986A  0B0F               	andlw	15
  4855  01986C  6EE6               	movwf	postinc1,c
  4856  01986E  EC0E  F0D4         	call	_ADCC_StartConversion	;wreg free
  4857                           
  4858                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4859  019872  0012               	return		;funcret
  4860  019874                     __end_of_start_adc_scan:
  4861                           	opt callstack 0
  4862                           
  4863 ;; *************** function _ADCC_StartConversion *****************
  4864 ;; Defined at:
  4865 ;;		line 128 in file "mcc_generated_files/adcc.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  channel         1  [STACK] enum E16136
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1  [STACK] void 
  4872 ;; Registers used:
  4873 ;;		fsr1l, fsr1h
  4874 ;; Tracked objects:
  4875 ;;		On entry : 3F/0
  4876 ;;		On exit  : 3F/3E
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:   15
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_start_adc_scan
  4890 ;;		_adc_int_t_handler
  4891 ;; This function uses a reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text4
  4895  01A81C                     __ptext4:
  4896                           	opt callstack 0
  4897  01A81C                     _ADCC_StartConversion:
  4898                           	opt callstack 0
  4899                           
  4900                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  4901                           ;stkvar	_channel @ sp[(0)+-1]
  4902                           
  4903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4904                           ;incstack = 0
  4905 ;; hardware stack exceeded
  4906  01A81C  0EFF               	movlw	-1
  4907  01A81E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  4908                           
  4909                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  4910  01A824  013E               	movlb	62	; () banked
  4911  01A826  8FF8               	bsf	248,7,b	;volatile
  4912                           
  4913                           ; BSR set to: 62
  4914                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  4915  01A828  81F8               	bsf	248,0,b	;volatile
  4916                           
  4917                           ; BSR set to: 62
  4918                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  4919  01A82A  52E5               	movf	postdec1,f,c
  4920  01A82C  0012               	return		;funcret
  4921  01A82E                     __end_of_ADCC_StartConversion:
  4922                           	opt callstack 0
  4923                           
  4924 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4925 ;; Defined at:
  4926 ;;		line 189 in file "mcc_generated_files/adcc.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1  [STACK] void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 3F/3E
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:   15
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_start_adc_scan
  4951 ;;		_adc_int_t_handler
  4952 ;; This function uses a reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text5
  4956  01A8D2                     __ptext5:
  4957                           	opt callstack 0
  4958  01A8D2                     _ADCC_DischargeSampleCapacitor:
  4959                           	opt callstack 0
  4960                           
  4961                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  4962                           
  4963                           ; BSR set to: 62
  4964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4965                           ;incstack = 0
  4966 ;; hardware stack exceeded
  4967  01A8D2  0E3B               	movlw	59
  4968  01A8D4  013E               	movlb	62	; () banked
  4969  01A8D6  6FF1               	movwf	241,b	;volatile
  4970                           
  4971                           ; BSR set to: 62
  4972                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  4973  01A8D8  0012               	return		;funcret
  4974  01A8DA                     __end_of_ADCC_DischargeSampleCapacitor:
  4975                           	opt callstack 0
  4976                           
  4977 ;; *************** function _srand *****************
  4978 ;; Defined at:
  4979 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  s               2  [STACK] unsigned int 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1  [STACK] void 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 3F/2
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4997 ;;Total ram usage:        0 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:   15
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_main
  5004 ;; This function uses a reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text6
  5008  01A042                     __ptext6:
  5009                           	opt callstack 0
  5010  01A042                     _srand:
  5011                           	opt callstack 15
  5012                           
  5013                           ;stkvar	_s @ sp[(0)+-2]
  5014                           
  5015                           ; BSR set to: 62
  5016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5017                           ;incstack = 0
  5018  01A042  0EFE               	movlw	-2
  5019  01A044  50E3               	movf	plusw1,w,c
  5020  01A046  0FFF               	addlw	255
  5021  01A048  6E0B               	movwf	(btemp+10)^0,c
  5022  01A04A  0EFF               	movlw	-1
  5023  01A04C  006F FF8C  F00C    	movff	plusw1,btemp+11
  5024  01A052  0EFF               	movlw	255
  5025  01A054  220C               	addwfc	(btemp+11)^0,f,c
  5026  01A056  0060  F02C  F2D5   	movff	btemp+10,_seed
  5027  01A05C  0060  F030  F2D6   	movff	btemp+11,_seed+1
  5028  01A062  0102               	movlb	2	; () banked
  5029  01A064  6BD7               	clrf	(_seed+2)& (0+255),b
  5030  01A066  6BD8               	clrf	(_seed+3)& (0+255),b
  5031  01A068  6BD9               	clrf	(_seed+4)& (0+255),b
  5032  01A06A  6BDA               	clrf	(_seed+5)& (0+255),b
  5033  01A06C  6BDB               	clrf	(_seed+6)& (0+255),b
  5034  01A06E  6BDC               	clrf	(_seed+7)& (0+255),b
  5035                           
  5036                           ; BSR set to: 2
  5037                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5038  01A070  52E5               	movf	postdec1,f,c
  5039  01A072  52E5               	movf	postdec1,f,c
  5040  01A074  0012               	return		;funcret
  5041  01A076                     __end_of_srand:
  5042                           	opt callstack 0
  5043                           
  5044 ;; *************** function _set_load_relay_two *****************
  5045 ;; Defined at:
  5046 ;;		line 97 in file "mbmc.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  mode            1  [STACK] _Bool 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1  [STACK] void 
  5053 ;; Registers used:
  5054 ;;		wreg, fsr1l, fsr1h
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5064 ;;Total ram usage:        0 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:   15
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_main
  5071 ;; This function uses a reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text7
  5075  01A82E                     __ptext7:
  5076                           	opt callstack 0
  5077  01A82E                     _set_load_relay_two:
  5078                           	opt callstack 15
  5079                           
  5080                           ;mbmc.c: 97: void set_load_relay_two(_Bool mode);mbmc.c: 98: {;mbmc.c: 99:  LATDbits.LAT
      +                          D5=mode;
  5081                           ;stkvar	_mode @ sp[(0)+-1]
  5082                           
  5083                           ; BSR set to: 2
  5084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5085                           ;incstack = 0
  5086  01A82E  0EFF               	movlw	-1
  5087  01A830  B0E3               	btfsc	plusw1,0,c
  5088  01A832  D002               	bra	u9455
  5089  01A834  9ABD               	bcf	189,5,c	;volatile
  5090  01A836  D001               	bra	u9456
  5091  01A838                     u9455:
  5092  01A838  8ABD               	bsf	189,5,c	;volatile
  5093  01A83A                     u9456:
  5094                           
  5095                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5096  01A83A  52E5               	movf	postdec1,f,c
  5097  01A83C  0012               	return		;funcret
  5098  01A83E                     __end_of_set_load_relay_two:
  5099                           	opt callstack 0
  5100                           
  5101 ;; *************** function _set_load_relay_one *****************
  5102 ;; Defined at:
  5103 ;;		line 92 in file "mbmc.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  mode            1  [STACK] _Bool 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1  [STACK] void 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr1l, fsr1h
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5121 ;;Total ram usage:        0 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:   15
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_main
  5128 ;; This function uses a reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text8
  5132  01A83E                     __ptext8:
  5133                           	opt callstack 0
  5134  01A83E                     _set_load_relay_one:
  5135                           	opt callstack 15
  5136                           
  5137                           ;mbmc.c: 92: void set_load_relay_one(_Bool mode);mbmc.c: 93: {;mbmc.c: 94:  LATDbits.LAT
      +                          D4=mode;
  5138                           ;stkvar	_mode @ sp[(0)+-1]
  5139                           
  5140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5141                           ;incstack = 0
  5142  01A83E  0EFF               	movlw	-1
  5143  01A840  B0E3               	btfsc	plusw1,0,c
  5144  01A842  D002               	bra	u9445
  5145  01A844  98BD               	bcf	189,4,c	;volatile
  5146  01A846  D001               	bra	u9446
  5147  01A848                     u9445:
  5148  01A848  88BD               	bsf	189,4,c	;volatile
  5149  01A84A                     u9446:
  5150                           
  5151                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5152  01A84A  52E5               	movf	postdec1,f,c
  5153  01A84C  0012               	return		;funcret
  5154  01A84E                     __end_of_set_load_relay_one:
  5155                           	opt callstack 0
  5156                           
  5157 ;; *************** function _init_port_dma *****************
  5158 ;; Defined at:
  5159 ;;		line 90 in file "eadog.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1  [STACK] void 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/2
  5170 ;;		On exit  : 3F/3B
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:   15
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_main
  5184 ;; This function uses a reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text9
  5188  01A0DE                     __ptext9:
  5189                           	opt callstack 0
  5190  01A0DE                     _init_port_dma:
  5191                           	opt callstack 15
  5192                           
  5193                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  5194                           
  5195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5196                           ;incstack = 0
  5197  01A0DE  0E3F               	movlw	-193
  5198  01A0E0  013B               	movlb	59	; () banked
  5199  01A0E2  17DD               	andwf	221,f,b	;volatile
  5200                           
  5201                           ; BSR set to: 59
  5202                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  5203  01A0E4  9BDD               	bcf	221,5,b	;volatile
  5204                           
  5205                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  5206  01A0E6  51DD               	movf	221,w,b	;volatile
  5207  01A0E8  0BF9               	andlw	-7
  5208  01A0EA  0902               	iorlw	2
  5209  01A0EC  6FDD               	movwf	221,b	;volatile
  5210                           
  5211                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  5212  01A0EE  0EE7               	movlw	-25
  5213  01A0F0  17DD               	andwf	221,f,b	;volatile
  5214                           
  5215                           ; BSR set to: 59
  5216                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  5217  01A0F2  81DD               	bsf	221,0,b	;volatile
  5218                           
  5219                           ; BSR set to: 59
  5220                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  5221  01A0F4  9DDC               	bcf	220,6,b	;volatile
  5222                           
  5223                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  5224  01A0F6  0E3D               	movlw	61
  5225  01A0F8  6FD1               	movwf	209,b	;volatile
  5226  01A0FA  0EEA               	movlw	234
  5227  01A0FC  6FD0               	movwf	208,b	;volatile
  5228                           
  5229                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  5230  01A0FE  0EFF               	movlw	low _port_data
  5231  01A100  6FD9               	movwf	217,b	;volatile
  5232  01A102  0E05               	movlw	high _port_data
  5233  01A104  6FDA               	movwf	218,b	;volatile
  5234  01A106  0E00               	movlw	low (_port_data shr (0+16))
  5235  01A108  6FDB               	movwf	219,b	;volatile
  5236                           
  5237                           ; BSR set to: 59
  5238                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  5239  01A10A  9BDC               	bcf	220,5,b	;volatile
  5240                           
  5241                           ; BSR set to: 59
  5242                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5243  01A10C  0012               	return		;funcret
  5244  01A10E                     __end_of_init_port_dma:
  5245                           	opt callstack 0
  5246                           
  5247 ;; *************** function _init_display *****************
  5248 ;; Defined at:
  5249 ;;		line 38 in file "eadog.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1  [STACK] void 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5258 ;; Tracked objects:
  5259 ;;		On entry : 3F/3B
  5260 ;;		On exit  : 3F/3D
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:   17
  5270 ;; This function calls:
  5271 ;;		_ringBufS_init
  5272 ;;		_send_lcd_cmd
  5273 ;;		_send_lcd_cmd_long
  5274 ;;		_wdtdelay
  5275 ;; This function is called by:
  5276 ;;		_main
  5277 ;; This function uses a reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text10
  5281  018A10                     __ptext10:
  5282                           	opt callstack 0
  5283  018A10                     _init_display:
  5284                           	opt callstack 13
  5285                           
  5286                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  5287                           
  5288                           ; BSR set to: 59
  5289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5290                           ;incstack = 0
  5291  018A10  0E43               	movlw	low _ring_buf1
  5292  018A12  0100               	movlb	0	; () banked
  5293  018A14  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5294  018A16  0E04               	movlw	high _ring_buf1
  5295  018A18  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5296                           
  5297                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  5298  018A1A  0E00               	movlw	low _ring_buf2
  5299  018A1C  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5300  018A1E  0E04               	movlw	high _ring_buf2
  5301  018A20  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  5305  018A22  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  5306  018A28  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  5307  018A2E  EC67  F0D1         	call	_ringBufS_init	;wreg free
  5308                           
  5309                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  5310  018A32  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  5311  018A38  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  5312  018A3E  EC67  F0D1         	call	_ringBufS_init	;wreg free
  5313                           
  5314                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  5315  018A42  84BE               	bsf	190,2,c	;volatile
  5316  018A44  84BC               	bsf	188,2,c	;volatile
  5317                           
  5318                           ;eadog.c: 59:  wdtdelay(350000);
  5319  018A46  0E30               	movlw	48
  5320  018A48  6EE6               	movwf	postinc1,c
  5321  018A4A  0E57               	movlw	87
  5322  018A4C  6EE6               	movwf	postinc1,c
  5323  018A4E  0E05               	movlw	5
  5324  018A50  6EE6               	movwf	postinc1,c
  5325  018A52  0E00               	movlw	0
  5326  018A54  6EE6               	movwf	postinc1,c
  5327  018A56  ECCB  F0CC         	call	_wdtdelay	;wreg free
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5331  018A5A  0E39               	movlw	57
  5332  018A5C  6EE6               	movwf	postinc1,c
  5333  018A5E  EC53  F0D1         	call	_send_lcd_cmd	;wreg free
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5337  018A62  0E1D               	movlw	29
  5338  018A64  6EE6               	movwf	postinc1,c
  5339  018A66  EC53  F0D1         	call	_send_lcd_cmd	;wreg free
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5343  018A6A  0E50               	movlw	80
  5344  018A6C  6EE6               	movwf	postinc1,c
  5345  018A6E  EC53  F0D1         	call	_send_lcd_cmd	;wreg free
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5349  018A72  0E6C               	movlw	108
  5350  018A74  6EE6               	movwf	postinc1,c
  5351  018A76  EC53  F0D1         	call	_send_lcd_cmd	;wreg free
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5355  018A7A  0E76               	movlw	118
  5356  018A7C  6EE6               	movwf	postinc1,c
  5357  018A7E  EC53  F0D1         	call	_send_lcd_cmd	;wreg free
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5361  018A82  0E38               	movlw	56
  5362  018A84  6EE6               	movwf	postinc1,c
  5363  018A86  EC3F  F0D1         	call	_send_lcd_cmd_long	;wreg free
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5367  018A8A  0E0F               	movlw	15
  5368  018A8C  6EE6               	movwf	postinc1,c
  5369  018A8E  EC53  F0D1         	call	_send_lcd_cmd	;wreg free
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5373  018A92  0E01               	movlw	1
  5374  018A94  6EE6               	movwf	postinc1,c
  5375  018A96  EC3F  F0D1         	call	_send_lcd_cmd_long	;wreg free
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5379  018A9A  0E02               	movlw	2
  5380  018A9C  6EE6               	movwf	postinc1,c
  5381  018A9E  EC53  F0D1         	call	_send_lcd_cmd	;wreg free
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5385  018AA2  0E06               	movlw	6
  5386  018AA4  6EE6               	movwf	postinc1,c
  5387  018AA6  EC53  F0D1         	call	_send_lcd_cmd	;wreg free
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;eadog.c: 70:  wdtdelay(30);
  5391  018AAA  0E1E               	movlw	30
  5392  018AAC  6EE6               	movwf	postinc1,c
  5393  018AAE  0E00               	movlw	0
  5394  018AB0  6EE6               	movwf	postinc1,c
  5395  018AB2  0E00               	movlw	0
  5396  018AB4  6EE6               	movwf	postinc1,c
  5397  018AB6  0E00               	movlw	0
  5398  018AB8  6EE6               	movwf	postinc1,c
  5399  018ABA  ECCB  F0CC         	call	_wdtdelay	;wreg free
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5403  018ABE  0E02               	movlw	2
  5404  018AC0  013D               	movlb	61	; () banked
  5405  018AC2  6F16               	movwf	22,b	;volatile
  5406                           
  5407                           ; BSR set to: 61
  5408                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5409  018AC4  0E40               	movlw	64
  5410  018AC6  6F15               	movwf	21,b	;volatile
  5411                           
  5412                           ; BSR set to: 61
  5413                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5414  018AC8  0E83               	movlw	131
  5415  018ACA  6F14               	movwf	20,b	;volatile
  5416                           
  5417                           ; BSR set to: 61
  5418                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5419  018ACC  931A               	bcf	26,1,b	;volatile
  5420                           
  5421                           ; BSR set to: 61
  5422                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5423  018ACE  0E3F               	movlw	-193
  5424  018AD0  013B               	movlb	59	; () banked
  5425  018AD2  17FD               	andwf	253,f,b	;volatile
  5426                           
  5427                           ; BSR set to: 59
  5428                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5429  018AD4  9BFD               	bcf	253,5,b	;volatile
  5430                           
  5431                           ; BSR set to: 59
  5432                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5433  018AD6  51FD               	movf	253,w,b	;volatile
  5434  018AD8  0BF9               	andlw	-7
  5435  018ADA  0902               	iorlw	2
  5436  018ADC  6FFD               	movwf	253,b	;volatile
  5437                           
  5438                           ; BSR set to: 59
  5439                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5440  018ADE  0EE7               	movlw	-25
  5441  018AE0  17FD               	andwf	253,f,b	;volatile
  5442                           
  5443                           ; BSR set to: 59
  5444                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5445  018AE2  81FD               	bsf	253,0,b	;volatile
  5446                           
  5447                           ; BSR set to: 59
  5448                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5449  018AE4  0E43               	movlw	low _ring_buf1
  5450  018AE6  6FF9               	movwf	249,b	;volatile
  5451  018AE8  0E04               	movlw	high _ring_buf1
  5452  018AEA  6FFA               	movwf	250,b	;volatile
  5453  018AEC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5454  018AEE  6FFB               	movwf	251,b	;volatile
  5455                           
  5456                           ; BSR set to: 59
  5457                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5458  018AF0  9BFC               	bcf	252,5,b	;volatile
  5459                           
  5460                           ; BSR set to: 59
  5461                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5462  018AF2  013D               	movlb	61	; () banked
  5463  018AF4  831A               	bsf	26,1,b	;volatile
  5464                           
  5465                           ; BSR set to: 61
  5466                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5467  018AF6  94BE               	bcf	190,2,c	;volatile
  5468                           
  5469                           ; BSR set to: 61
  5470                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5471  018AF8  0012               	return		;funcret
  5472  018AFA                     __end_of_init_display:
  5473                           	opt callstack 0
  5474                           
  5475 ;; *************** function _send_lcd_cmd_long *****************
  5476 ;; Defined at:
  5477 ;;		line 129 in file "eadog.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  cmd             1  [STACK] const unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1  [STACK] void 
  5484 ;; Registers used:
  5485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5486 ;; Tracked objects:
  5487 ;;		On entry : 3F/0
  5488 ;;		On exit  : 3F/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:   16
  5498 ;; This function calls:
  5499 ;;		_SPI1_Exchange8bit
  5500 ;;		_wdtdelay
  5501 ;; This function is called by:
  5502 ;;		_init_display
  5503 ;; This function uses a reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text11
  5507  01A27E                     __ptext11:
  5508                           	opt callstack 0
  5509  01A27E                     _send_lcd_cmd_long:
  5510                           	opt callstack 13
  5511                           
  5512                           ; BSR set to: 61
  5513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5514                           ;incstack = 0
  5515                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5516  01A27E  92BC               	bcf	188,1,c	;volatile
  5517                           
  5518                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5519  01A280  94BC               	bcf	188,2,c	;volatile
  5520                           
  5521                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5522                           ;stkvar	_cmd @ sp[(0)+-1]
  5523  01A282  0EFF               	movlw	-1
  5524  01A284  50E3               	movf	plusw1,w,c
  5525  01A286  6EE6               	movwf	postinc1,c
  5526  01A288  EC57  F0D3         	call	_SPI1_Exchange8bit	;wreg free
  5527                           
  5528                           ; BSR set to: 57
  5529                           ;eadog.c: 134:  wdtdelay(800);
  5530  01A28C  0E20               	movlw	32
  5531  01A28E  6EE6               	movwf	postinc1,c
  5532  01A290  0E03               	movlw	3
  5533  01A292  6EE6               	movwf	postinc1,c
  5534  01A294  0E00               	movlw	0
  5535  01A296  6EE6               	movwf	postinc1,c
  5536  01A298  0E00               	movlw	0
  5537  01A29A  6EE6               	movwf	postinc1,c
  5538  01A29C  ECCB  F0CC         	call	_wdtdelay	;wreg free
  5539                           
  5540                           ; BSR set to: 0
  5541  01A2A0  82BC               	bsf	188,1,c	;volatile
  5542                           
  5543                           ; BSR set to: 0
  5544                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5545  01A2A2  52E5               	movf	postdec1,f,c
  5546  01A2A4  0012               	return		;funcret
  5547  01A2A6                     __end_of_send_lcd_cmd_long:
  5548                           	opt callstack 0
  5549                           
  5550 ;; *************** function _send_lcd_cmd *****************
  5551 ;; Defined at:
  5552 ;;		line 117 in file "eadog.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  cmd             1  [STACK] const unsigned char 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1  [STACK] void 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5561 ;; Tracked objects:
  5562 ;;		On entry : 3F/0
  5563 ;;		On exit  : 3F/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:   16
  5573 ;; This function calls:
  5574 ;;		_SPI1_Exchange8bit
  5575 ;;		_wdtdelay
  5576 ;; This function is called by:
  5577 ;;		_init_display
  5578 ;; This function uses a reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text12
  5582  01A2A6                     __ptext12:
  5583                           	opt callstack 0
  5584  01A2A6                     _send_lcd_cmd:
  5585                           	opt callstack 13
  5586                           
  5587                           ; BSR set to: 0
  5588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5589                           ;incstack = 0
  5590                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5591  01A2A6  92BC               	bcf	188,1,c	;volatile
  5592                           
  5593                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5594  01A2A8  94BC               	bcf	188,2,c	;volatile
  5595                           
  5596                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5597                           ;stkvar	_cmd @ sp[(0)+-1]
  5598  01A2AA  0EFF               	movlw	-1
  5599  01A2AC  50E3               	movf	plusw1,w,c
  5600  01A2AE  6EE6               	movwf	postinc1,c
  5601  01A2B0  EC57  F0D3         	call	_SPI1_Exchange8bit	;wreg free
  5602                           
  5603                           ; BSR set to: 57
  5604                           ;eadog.c: 122:  wdtdelay(30);
  5605  01A2B4  0E1E               	movlw	30
  5606  01A2B6  6EE6               	movwf	postinc1,c
  5607  01A2B8  0E00               	movlw	0
  5608  01A2BA  6EE6               	movwf	postinc1,c
  5609  01A2BC  0E00               	movlw	0
  5610  01A2BE  6EE6               	movwf	postinc1,c
  5611  01A2C0  0E00               	movlw	0
  5612  01A2C2  6EE6               	movwf	postinc1,c
  5613  01A2C4  ECCB  F0CC         	call	_wdtdelay	;wreg free
  5614                           
  5615                           ; BSR set to: 0
  5616  01A2C8  82BC               	bsf	188,1,c	;volatile
  5617                           
  5618                           ; BSR set to: 0
  5619                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5620  01A2CA  52E5               	movf	postdec1,f,c
  5621  01A2CC  0012               	return		;funcret
  5622  01A2CE                     __end_of_send_lcd_cmd:
  5623                           	opt callstack 0
  5624                           
  5625 ;; *************** function _SPI1_Exchange8bit *****************
  5626 ;; Defined at:
  5627 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  data            1  [STACK] unsigned char 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1  [STACK] unsigned char 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 3F/39
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5645 ;;Total ram usage:        0 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:   15
  5648 ;; This function calls:
  5649 ;;		Nothing
  5650 ;; This function is called by:
  5651 ;;		_send_lcd_cmd
  5652 ;;		_send_lcd_cmd_long
  5653 ;; This function uses a reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text13
  5657  01A6AE                     __ptext13:
  5658                           	opt callstack 0
  5659  01A6AE                     _SPI1_Exchange8bit:
  5660                           	opt callstack 13
  5661                           
  5662                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5663                           
  5664                           ; BSR set to: 0
  5665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5666                           ;incstack = 0
  5667  01A6AE  0E01               	movlw	1
  5668  01A6B0  013D               	movlb	61	; () banked
  5669  01A6B2  6F12               	movwf	18,b	;volatile
  5670                           
  5671                           ; BSR set to: 61
  5672                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5673                           ;stkvar	_data @ sp[(0)+-1]
  5674  01A6B4  0EFF               	movlw	-1
  5675  01A6B6  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5676  01A6BC                     l807:
  5677                           
  5678                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5679  01A6BC  0139               	movlb	57	; () banked
  5680  01A6BE  A9A2               	btfss	162,4,b	;volatile
  5681  01A6C0  D7FD               	goto	l807
  5682                           
  5683                           ; BSR set to: 57
  5684                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5685  01A6C2  006F F440  F001    	movff	15632,btemp	;volatile
  5686                           
  5687                           ; BSR set to: 57
  5688                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5689  01A6C8  52E5               	movf	postdec1,f,c
  5690  01A6CA  0012               	return		;funcret
  5691  01A6CC                     __end_of_SPI1_Exchange8bit:
  5692                           	opt callstack 0
  5693                           
  5694 ;; *************** function _ringBufS_init *****************
  5695 ;; Defined at:
  5696 ;;		line 22 in file "ringbufs.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  _this           2  [STACK] PTR volatile struct ring
  5699 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;		None
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1  [STACK] void 
  5704 ;; Registers used:
  5705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5715 ;;Total ram usage:        0 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; Hardware stack levels required when called:   16
  5718 ;; This function calls:
  5719 ;;		_memset
  5720 ;; This function is called by:
  5721 ;;		_init_display
  5722 ;; This function uses a reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text14
  5726  01A2CE                     __ptext14:
  5727                           	opt callstack 0
  5728  01A2CE                     _ringBufS_init:
  5729                           	opt callstack 13
  5730                           
  5731                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5732                           
  5733                           ; BSR set to: 57
  5734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5735                           ;incstack = 0
  5736  01A2CE  0E43               	movlw	67
  5737  01A2D0  6EE6               	movwf	postinc1,c
  5738  01A2D2  0E00               	movlw	0
  5739  01A2D4  6EE6               	movwf	postinc1,c
  5740  01A2D6  0E00               	movlw	0
  5741  01A2D8  6EE6               	movwf	postinc1,c
  5742  01A2DA  0E00               	movlw	0
  5743  01A2DC  6EE6               	movwf	postinc1,c
  5744                           
  5745                           ;stkvar	__this @ sp[(-4)+-2]
  5746  01A2DE  0EFA               	movlw	-6
  5747  01A2E0  006F FF8F FFE6     	movff	plusw1,postinc1
  5748  01A2E6  006F FF8F FFE6     	movff	plusw1,postinc1
  5749  01A2EC  EC9D  F0AD         	call	_memset	;wreg free
  5750                           
  5751                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5752  01A2F0  52E5               	movf	postdec1,f,c
  5753  01A2F2  52E5               	movf	postdec1,f,c
  5754  01A2F4  0012               	return		;funcret
  5755  01A2F6                     __end_of_ringBufS_init:
  5756                           	opt callstack 0
  5757                           
  5758 ;; *************** function _init_bsoc *****************
  5759 ;; Defined at:
  5760 ;;		line 87 in file "bsoc.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;		None
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  1  [STACK] void 
  5767 ;; Registers used:
  5768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5769 ;; Tracked objects:
  5770 ;;		On entry : 3F/1
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5778 ;;Total ram usage:        0 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; Hardware stack levels required when called:   18
  5781 ;; This function calls:
  5782 ;;		_TMR3_SetInterruptHandler
  5783 ;;		_Volts_to_SOC
  5784 ;;		___fldiv
  5785 ;;		___flmul
  5786 ;;		___fltol
  5787 ;;		___xxtofl
  5788 ;;		_conv_raw_result
  5789 ;; This function is called by:
  5790 ;;		_main
  5791 ;; This function uses a reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text15
  5795  01797C                     __ptext15:
  5796                           	opt callstack 0
  5797  01797C                     _init_bsoc:
  5798                           	opt callstack 12
  5799                           
  5800                           ;bsoc.c: 92:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5801                           
  5802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5803                           ;incstack = 0
  5804  01797C  0E00               	movlw	0
  5805  01797E  6EE6               	movwf	postinc1,c
  5806  017980  0E00               	movlw	0
  5807  017982  6EE6               	movwf	postinc1,c
  5808  017984  0E7A               	movlw	122
  5809  017986  6EE6               	movwf	postinc1,c
  5810  017988  0E44               	movlw	68
  5811  01798A  6EE6               	movwf	postinc1,c
  5812  01798C  0E00               	movlw	0
  5813  01798E  6EE6               	movwf	postinc1,c
  5814  017990  0E04               	movlw	4
  5815  017992  6EE6               	movwf	postinc1,c
  5816  017994  ECD4  F0A3         	call	_conv_raw_result	;wreg free
  5817  017998  0060  F007  FFE6   	movff	btemp,postinc1
  5818  01799E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5819  0179A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5820  0179AA  0060  F013  FFE6   	movff	btemp+3,postinc1
  5821  0179B0  EC05  F0BC         	call	___fltol	;wreg free
  5822  0179B4  0060  F007  FFE6   	movff	btemp,postinc1
  5823  0179BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5824  0179C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5825  0179C6  0060  F013  FFE6   	movff	btemp+3,postinc1
  5826  0179CC  0E00               	movlw	0
  5827  0179CE  6EE6               	movwf	postinc1,c
  5828  0179D0  EC9A  F0B7         	call	___xxtofl	;wreg free
  5829  0179D4  0060  F007  FFE6   	movff	btemp,postinc1
  5830  0179DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5831  0179E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5832  0179E6  0060  F013  FFE6   	movff	btemp+3,postinc1
  5833  0179EC  ECE1  F095         	call	___flmul	;wreg free
  5834  0179F0  0060  F007  FFE6   	movff	btemp,postinc1
  5835  0179F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5836  0179FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5837  017A02  0060  F013  FFE6   	movff	btemp+3,postinc1
  5838  017A08  EC05  F0BC         	call	___fltol	;wreg free
  5839  017A0C  0060  F007  FFE6   	movff	btemp,postinc1
  5840  017A12  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5841  017A18  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5842  017A1E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5843  017A24  EC0B  F0C9         	call	_Volts_to_SOC	;wreg free
  5844  017A28  0060  F004  F19E   	movff	btemp,_C+158	;volatile
  5845  017A2E  0060  F008  F19F   	movff	btemp+1,_C+159	;volatile
  5846                           
  5847                           ;bsoc.c: 93:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5848  017A34  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5849  017A3A  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5850  017A40  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5851  017A46  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5852  017A4C  0E00               	movlw	0
  5853  017A4E  6EE6               	movwf	postinc1,c
  5854  017A50  0E00               	movlw	0
  5855  017A52  6EE6               	movwf	postinc1,c
  5856  017A54  0EC8               	movlw	200
  5857  017A56  6EE6               	movwf	postinc1,c
  5858  017A58  0E42               	movlw	66
  5859  017A5A  6EE6               	movwf	postinc1,c
  5860  017A5C  0101               	movlb	1	; () banked
  5861  017A5E  519E               	movf	(_C+158)& (0+255),w,b	;volatile
  5862  017A60  6E09               	movwf	(btemp+8)^0,c
  5863  017A62  519F               	movf	(_C+159)& (0+255),w,b	;volatile
  5864  017A64  6E0A               	movwf	(btemp+9)^0,c
  5865  017A66  6A0B               	clrf	(btemp+10)^0,c
  5866  017A68  6A0C               	clrf	(btemp+11)^0,c
  5867  017A6A  0060  F027  FFE6   	movff	btemp+8,postinc1
  5868  017A70  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5869  017A76  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5870  017A7C  0060  F033  FFE6   	movff	btemp+11,postinc1
  5871  017A82  0E00               	movlw	0
  5872  017A84  6EE6               	movwf	postinc1,c
  5873  017A86  EC9A  F0B7         	call	___xxtofl	;wreg free
  5874  017A8A  0060  F007  FFE6   	movff	btemp,postinc1
  5875  017A90  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5876  017A96  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5877  017A9C  0060  F013  FFE6   	movff	btemp+3,postinc1
  5878  017AA2  EC17  F0A1         	call	___fldiv	;wreg free
  5879  017AA6  0060  F007  FFE6   	movff	btemp,postinc1
  5880  017AAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5881  017AB2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5882  017AB8  0060  F013  FFE6   	movff	btemp+3,postinc1
  5883  017ABE  ECE1  F095         	call	___flmul	;wreg free
  5884  017AC2  0060  F004  F180   	movff	btemp,_C+128	;volatile
  5885  017AC8  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
  5886  017ACE  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
  5887  017AD4  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
  5888                           
  5889                           ;bsoc.c: 94:  TMR3_SetInterruptHandler(calc_bsoc);
  5890  017ADA  0EA8               	movlw	low _calc_bsoc
  5891  017ADC  6EE6               	movwf	postinc1,c
  5892  017ADE  0E3B               	movlw	high _calc_bsoc
  5893  017AE0  6EE6               	movwf	postinc1,c
  5894  017AE2  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5895  017AE4  6EE6               	movwf	postinc1,c
  5896  017AE6  EC07  F0D2         	call	_TMR3_SetInterruptHandler	;wreg free
  5897                           
  5898                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5899  017AEA  0012               	return		;funcret
  5900  017AEC                     __end_of_init_bsoc:
  5901                           	opt callstack 0
  5902                           
  5903 ;; *************** function _Volts_to_SOC *****************
  5904 ;; Defined at:
  5905 ;;		line 151 in file "bsoc.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  cvoltage        4  [STACK] unsigned long 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  2  [STACK] unsigned short 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/1
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:   15
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_init_bsoc
  5930 ;; This function uses a reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text16
  5934  019216                     __ptext16:
  5935                           	opt callstack 0
  5936  019216                     _Volts_to_SOC:
  5937                           	opt callstack 14
  5938                           
  5939                           ;bsoc.c: 151: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 152: {;bsoc.c: 153:  stat
      +                          ic uint8_t slot;;bsoc.c: 155:  C.soc = 0;
  5940                           
  5941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5942                           ;incstack = 0
  5943  019216  0101               	movlb	1	; () banked
  5944  019218  6B9E               	clrf	(_C+158)& (0+255),b	;volatile
  5945  01921A  6B9F               	clrf	(_C+159)& (0+255),b	;volatile
  5946                           
  5947                           ;bsoc.c: 156:  for (slot = 0; slot < 26; slot++) {
  5948  01921C  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5949  01921E                     l9931:
  5950                           
  5951                           ;bsoc.c: 157:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5952                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5953  01921E  502D               	movf	Volts_to_SOC@slot^0,w,c
  5954  019220  0D08               	mullw	8
  5955  019222  0E31               	movlw	low _BVSOC_TABLE
  5956  019224  24F3               	addwf	243,w,c
  5957  019226  6EF6               	movwf	tblptrl,c
  5958  019228  0EFC               	movlw	high _BVSOC_TABLE
  5959  01922A  20F4               	addwfc	244,w,c
  5960  01922C  6EF7               	movwf	tblptrh,c
  5961  01922E                     	if	1	;There are 3 active tblptr bytes
  5962  01922E  6AF8               	clrf	tblptru,c
  5963  019230  0E00               	movlw	low (__mediumconst shr (0+16))
  5964  019232  22F8               	addwfc	tblptru,f,c
  5965  019234                     	endif
  5966  019234  0EFC               	movlw	-4
  5967  019236  50E3               	movf	plusw1,w,c
  5968  019238  0009               	tblrd		*+
  5969  01923A  5CF5               	subwf	tablat,w,c
  5970  01923C  0EFD               	movlw	-3
  5971  01923E  50E3               	movf	plusw1,w,c
  5972  019240  0009               	tblrd		*+
  5973  019242  58F5               	subwfb	tablat,w,c
  5974  019244  0EFE               	movlw	-2
  5975  019246  50E3               	movf	plusw1,w,c
  5976  019248  0009               	tblrd		*+
  5977  01924A  58F5               	subwfb	tablat,w,c
  5978  01924C  0EFF               	movlw	-1
  5979  01924E  50E3               	movf	plusw1,w,c
  5980  019250  0009               	tblrd		*+
  5981  019252  58F5               	subwfb	tablat,w,c
  5982  019254  B0D8               	btfsc	status,0,c
  5983  019256  D017               	goto	l9935
  5984                           
  5985                           ;bsoc.c: 158:    C.soc = BVSOC_TABLE[slot][1];
  5986  019258  502D               	movf	Volts_to_SOC@slot^0,w,c
  5987  01925A  0D08               	mullw	8
  5988  01925C  0E04               	movlw	4
  5989  01925E  26F3               	addwf	243,f,c
  5990  019260  0E00               	movlw	0
  5991  019262  22F4               	addwfc	244,f,c
  5992  019264  0E31               	movlw	low _BVSOC_TABLE
  5993  019266  24F3               	addwf	243,w,c
  5994  019268  6EF6               	movwf	tblptrl,c
  5995  01926A  0EFC               	movlw	high _BVSOC_TABLE
  5996  01926C  20F4               	addwfc	244,w,c
  5997  01926E  6EF7               	movwf	tblptrh,c
  5998  019270                     	if	1	;There are 3 active tblptr bytes
  5999  019270  6AF8               	clrf	tblptru,c
  6000  019272  0E00               	movlw	low (__mediumconst shr (0+16))
  6001  019274  22F8               	addwfc	tblptru,f,c
  6002  019276                     	endif
  6003  019276  0009               	tblrd		*+
  6004  019278  006F FFD4  F19E    	movff	tablat,_C+158	;volatile
  6005  01927E  000A               	tblrd		*-
  6006  019280  006F FFD4  F19F    	movff	tablat,_C+159	;volatile
  6007  019286                     l9935:
  6008                           
  6009                           ;bsoc.c: 160:  }
  6010  019286  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  6011  019288  0E19               	movlw	25
  6012  01928A  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  6013  01928C  D7C8               	goto	l9931
  6014                           
  6015                           ;bsoc.c: 162:  return C.soc;
  6016  01928E  EE20  F19E         	lfsr	2,_C+158	;volatile
  6017  019292  006F FF78  F001    	movff	postinc2,btemp
  6018  019298  006F FF74  F002    	movff	postdec2,btemp+1
  6019                           
  6020                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6021  01929E  52E5               	movf	postdec1,f,c
  6022  0192A0  52E5               	movf	postdec1,f,c
  6023  0192A2  52E5               	movf	postdec1,f,c
  6024  0192A4  52E5               	movf	postdec1,f,c
  6025  0192A6  0012               	return		;funcret
  6026  0192A8                     __end_of_Volts_to_SOC:
  6027                           	opt callstack 0
  6028                           
  6029 ;; *************** function _hid_display *****************
  6030 ;; Defined at:
  6031 ;;		line 17 in file "hid.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  h               1  [STACK] PTR struct H_data
  6034 ;;		 -> H(7), 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  1  [STACK] PTR struct H_data
  6039 ;; Registers used:
  6040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6041 ;; Tracked objects:
  6042 ;;		On entry : 3F/1
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6050 ;;Total ram usage:        0 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:   17
  6053 ;; This function calls:
  6054 ;;		_hid_input
  6055 ;; This function is called by:
  6056 ;;		_main
  6057 ;; This function uses a reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text17
  6061  01890E                     __ptext17:
  6062                           	opt callstack 0
  6063  01890E                     _hid_display:
  6064                           	opt callstack 13
  6065                           
  6066                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  6067                           ;stkvar	_h @ sp[(0)+-1]
  6068                           
  6069                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6070                           ;incstack = 0
  6071  01890E  0EFF               	movlw	-1
  6072  018910  50E3               	movf	plusw1,w,c
  6073  018912  6EE6               	movwf	postinc1,c
  6074  018914  ECE6  F0C9         	call	_hid_input	;wreg free
  6075                           
  6076                           ;hid.c: 21:  switch (h->h_state) {
  6077  018918  D066               	goto	l10227
  6078  01891A                     l10205:
  6079                           
  6080                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  6081                           ;stkvar	_h @ sp[(0)+-1]
  6082  01891A  0EFF               	movlw	-1
  6083  01891C  50E3               	movf	plusw1,w,c
  6084  01891E  6ED9               	movwf	fsr2l,c
  6085  018920  6ADA               	clrf	fsr2h,c
  6086  018922  0E01               	movlw	1
  6087  018924  26D9               	addwf	fsr2l,f,c
  6088  018926  0E01               	movlw	1
  6089  018928  6EDF               	movwf	indf2,c
  6090                           
  6091                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  6092                           ;stkvar	_h @ sp[(0)+-1]
  6093  01892A  0EFF               	movlw	-1
  6094  01892C  50E3               	movf	plusw1,w,c
  6095  01892E  6ED9               	movwf	fsr2l,c
  6096  018930  6ADA               	clrf	fsr2h,c
  6097  018932  0E00               	movlw	0
  6098  018934  6EDF               	movwf	indf2,c
  6099                           
  6100                           ;hid.c: 25:   h->wait_enter = 1;
  6101                           ;stkvar	_h @ sp[(0)+-1]
  6102  018936  0EFF               	movlw	-1
  6103  018938  50E3               	movf	plusw1,w,c
  6104  01893A  6ED9               	movwf	fsr2l,c
  6105  01893C  6ADA               	clrf	fsr2h,c
  6106  01893E  0E04               	movlw	4
  6107  018940  26D9               	addwf	fsr2l,f,c
  6108  018942  0E01               	movlw	1
  6109  018944  6EDF               	movwf	indf2,c
  6110                           
  6111                           ;hid.c: 26:   h->wait_select = 1;
  6112                           ;stkvar	_h @ sp[(0)+-1]
  6113  018946  0EFF               	movlw	-1
  6114  018948  50E3               	movf	plusw1,w,c
  6115  01894A  6ED9               	movwf	fsr2l,c
  6116  01894C  6ADA               	clrf	fsr2h,c
  6117  01894E  0E02               	movlw	2
  6118  018950  26D9               	addwf	fsr2l,f,c
  6119  018952  0E01               	movlw	1
  6120  018954  6EDF               	movwf	indf2,c
  6121                           
  6122                           ;hid.c: 27:   h->select_p = SW_OFF;
  6123                           ;stkvar	_h @ sp[(0)+-1]
  6124  018956  0EFF               	movlw	-1
  6125  018958  50E3               	movf	plusw1,w,c
  6126  01895A  6ED9               	movwf	fsr2l,c
  6127  01895C  6ADA               	clrf	fsr2h,c
  6128  01895E  0E03               	movlw	3
  6129  018960  26D9               	addwf	fsr2l,f,c
  6130  018962  0E00               	movlw	0
  6131  018964  6EDF               	movwf	indf2,c
  6132                           
  6133                           ;hid.c: 28:   h->enter_p = SW_OFF;
  6134                           ;stkvar	_h @ sp[(0)+-1]
  6135  018966  0EFF               	movlw	-1
  6136  018968  50E3               	movf	plusw1,w,c
  6137  01896A  6ED9               	movwf	fsr2l,c
  6138  01896C  6ADA               	clrf	fsr2h,c
  6139  01896E  0E05               	movlw	5
  6140  018970  26D9               	addwf	fsr2l,f,c
  6141  018972  0E00               	movlw	0
  6142  018974  D036               	goto	L1
  6143  018976                     l10217:
  6144                           
  6145                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  6146                           ;stkvar	_h @ sp[(0)+-1]
  6147  018976  0EFF               	movlw	-1
  6148  018978  50E3               	movf	plusw1,w,c
  6149  01897A  6ED9               	movwf	fsr2l,c
  6150  01897C  6ADA               	clrf	fsr2h,c
  6151  01897E  0E02               	movlw	2
  6152  018980  26D9               	addwf	fsr2l,f,c
  6153  018982  50DF               	movf	indf2,w,c
  6154  018984  A4D8               	btfss	status,2,c
  6155  018986  D042               	goto	l1878
  6156                           
  6157                           ;stkvar	_h @ sp[(0)+-1]
  6158  018988  0EFF               	movlw	-1
  6159  01898A  50E3               	movf	plusw1,w,c
  6160  01898C  6ED9               	movwf	fsr2l,c
  6161  01898E  6ADA               	clrf	fsr2h,c
  6162  018990  0E03               	movlw	3
  6163  018992  26D9               	addwf	fsr2l,f,c
  6164  018994  50DF               	movf	indf2,w,c
  6165  018996  A4D8               	btfss	status,2,c
  6166  018998  D039               	goto	l1878
  6167                           
  6168                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  6169                           ;stkvar	_h @ sp[(0)+-1]
  6170  01899A  0EFF               	movlw	-1
  6171  01899C  50E3               	movf	plusw1,w,c
  6172  01899E  6ED9               	movwf	fsr2l,c
  6173  0189A0  6ADA               	clrf	fsr2h,c
  6174  0189A2  0E06               	movlw	6
  6175  0189A4  26D9               	addwf	fsr2l,f,c
  6176                           
  6177                           ;stkvar	_h @ sp[(0)+-1]
  6178  0189A6  0EFF               	movlw	-1
  6179  0189A8  50E3               	movf	plusw1,w,c
  6180  0189AA  6EE9               	movwf	fsr0l,c
  6181  0189AC  6AEA               	clrf	fsr0h,c
  6182  0189AE  0E06               	movlw	6
  6183  0189B0  26E9               	addwf	fsr0l,f,c
  6184  0189B2  2AEF               	incf	indf0,f,c
  6185  0189B4  50EF               	movf	indf0,w,c
  6186  0189B6  0B03               	andlw	3
  6187  0189B8  6EDF               	movwf	indf2,c
  6188                           
  6189                           ;hid.c: 34:    h->hid_display = h->sequence;
  6190                           ;stkvar	_h @ sp[(0)+-1]
  6191  0189BA  0EFF               	movlw	-1
  6192  0189BC  50E3               	movf	plusw1,w,c
  6193  0189BE  6ED9               	movwf	fsr2l,c
  6194  0189C0  6ADA               	clrf	fsr2h,c
  6195  0189C2  0E06               	movlw	6
  6196  0189C4  26D9               	addwf	fsr2l,f,c
  6197                           
  6198                           ;stkvar	_h @ sp[(0)+-1]
  6199  0189C6  0EFF               	movlw	-1
  6200  0189C8  50E3               	movf	plusw1,w,c
  6201  0189CA  6EE9               	movwf	fsr0l,c
  6202  0189CC  6AEA               	clrf	fsr0h,c
  6203  0189CE  006F FF7F FFEF     	movff	indf2,indf0
  6204                           
  6205                           ;hid.c: 35:    h->wait_select = 1;
  6206                           ;stkvar	_h @ sp[(0)+-1]
  6207  0189D4  0EFF               	movlw	-1
  6208  0189D6  50E3               	movf	plusw1,w,c
  6209  0189D8  6ED9               	movwf	fsr2l,c
  6210  0189DA  6ADA               	clrf	fsr2h,c
  6211  0189DC  0E02               	movlw	2
  6212  0189DE  26D9               	addwf	fsr2l,f,c
  6213  0189E0  0E01               	movlw	1
  6214  0189E2                     L1:
  6215  0189E2  6EDF               	movwf	indf2,c
  6216  0189E4  D013               	goto	l1878
  6217  0189E6                     l10227:
  6218                           
  6219                           ;stkvar	_h @ sp[(0)+-1]
  6220  0189E6  0EFF               	movlw	-1
  6221  0189E8  50E3               	movf	plusw1,w,c
  6222  0189EA  6ED9               	movwf	fsr2l,c
  6223  0189EC  6ADA               	clrf	fsr2h,c
  6224  0189EE  0E01               	movlw	1
  6225  0189F0  26D9               	addwf	fsr2l,f,c
  6226  0189F2  50DF               	movf	indf2,w,c
  6227  0189F4  6E0B               	movwf	(btemp+10)^0,c
  6228  0189F6  6A0C               	clrf	(btemp+11)^0,c
  6229                           
  6230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6231                           ; Switch size 1, requested type "simple"
  6232                           ; Number of cases is 1, Range of values is 0 to 0
  6233                           ; switch strategies available:
  6234                           ; Name         Instructions Cycles
  6235                           ; simple_byte            4     3 (average)
  6236                           ;	Chosen strategy is simple_byte
  6237  0189F8  500C               	movf	(btemp+11)^0,w,c
  6238  0189FA  0A00               	xorlw	0	; case 0
  6239  0189FC  A4D8               	btfss	status,2,c
  6240  0189FE  D7BB               	goto	l10217
  6241                           
  6242                           ; Switch size 1, requested type "simple"
  6243                           ; Number of cases is 2, Range of values is 0 to 1
  6244                           ; switch strategies available:
  6245                           ; Name         Instructions Cycles
  6246                           ; simple_byte            7     4 (average)
  6247                           ;	Chosen strategy is simple_byte
  6248  018A00  500B               	movf	(btemp+10)^0,w,c
  6249  018A02  0A00               	xorlw	0	; case 0
  6250  018A04  B4D8               	btfsc	status,2,c
  6251  018A06  D789               	goto	l10205
  6252  018A08  0A01               	xorlw	1	; case 1
  6253  018A0A  D7B5               	goto	l10217
  6254  018A0C                     l1878:
  6255                           
  6256                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6257  018A0C  52E5               	movf	postdec1,f,c
  6258  018A0E  0012               	return		;funcret
  6259  018A10                     __end_of_hid_display:
  6260                           	opt callstack 0
  6261                           
  6262 ;; *************** function _hid_input *****************
  6263 ;; Defined at:
  6264 ;;		line 3 in file "hid.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  h               1  [STACK] PTR struct H_data
  6267 ;;		 -> H(7), 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1  [STACK] PTR struct H_data
  6272 ;; Registers used:
  6273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/1
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:   16
  6286 ;; This function calls:
  6287 ;;		_get_switch
  6288 ;; This function is called by:
  6289 ;;		_hid_display
  6290 ;; This function uses a reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text18
  6294  0193CC                     __ptext18:
  6295                           	opt callstack 0
  6296  0193CC                     _hid_input:
  6297                           	opt callstack 13
  6298                           
  6299                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  6300                           
  6301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6302                           ;incstack = 0
  6303  0193CC  0E02               	movlw	2
  6304  0193CE  6EE6               	movwf	postinc1,c
  6305  0193D0  EC7B  F0D1         	call	_get_switch	;wreg free
  6306  0193D4  5001               	movf	btemp^0,w,c
  6307  0193D6  B4D8               	btfsc	status,2,c
  6308  0193D8  D01C               	goto	l9863
  6309                           
  6310                           ;hid.c: 6:   h->wait_select = 0;
  6311                           ;stkvar	_h @ sp[(0)+-1]
  6312  0193DA  0EFF               	movlw	-1
  6313  0193DC  50E3               	movf	plusw1,w,c
  6314  0193DE  6ED9               	movwf	fsr2l,c
  6315  0193E0  6ADA               	clrf	fsr2h,c
  6316  0193E2  0E02               	movlw	2
  6317  0193E4  26D9               	addwf	fsr2l,f,c
  6318  0193E6  0E00               	movlw	0
  6319  0193E8  6EDF               	movwf	indf2,c
  6320                           
  6321                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6322  0193EA  0E02               	movlw	2
  6323  0193EC  6EE6               	movwf	postinc1,c
  6324  0193EE  EC7B  F0D1         	call	_get_switch	;wreg free
  6325  0193F2  5001               	movf	btemp^0,w,c
  6326  0193F4  B4D8               	btfsc	status,2,c
  6327  0193F6  D003               	goto	u9140
  6328  0193F8  6A0C               	clrf	(btemp+11)^0,c
  6329  0193FA  2A0C               	incf	(btemp+11)^0,f,c
  6330  0193FC  D001               	goto	u9158
  6331  0193FE                     u9140:
  6332  0193FE  6A0C               	clrf	(btemp+11)^0,c
  6333  019400                     u9158:
  6334                           
  6335                           ;stkvar	_h @ sp[(0)+-1]
  6336  019400  0EFF               	movlw	-1
  6337  019402  50E3               	movf	plusw1,w,c
  6338  019404  6ED9               	movwf	fsr2l,c
  6339  019406  6ADA               	clrf	fsr2h,c
  6340  019408  0E03               	movlw	3
  6341  01940A  26D9               	addwf	fsr2l,f,c
  6342  01940C  0060  F033  FFDF   	movff	btemp+11,indf2
  6343  019412                     l9863:
  6344                           
  6345                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6346  019412  0E03               	movlw	3
  6347  019414  6EE6               	movwf	postinc1,c
  6348  019416  EC7B  F0D1         	call	_get_switch	;wreg free
  6349  01941A  5001               	movf	btemp^0,w,c
  6350  01941C  B4D8               	btfsc	status,2,c
  6351  01941E  D01C               	goto	l1869
  6352                           
  6353                           ;hid.c: 11:   h->wait_enter = 0;
  6354                           ;stkvar	_h @ sp[(0)+-1]
  6355  019420  0EFF               	movlw	-1
  6356  019422  50E3               	movf	plusw1,w,c
  6357  019424  6ED9               	movwf	fsr2l,c
  6358  019426  6ADA               	clrf	fsr2h,c
  6359  019428  0E04               	movlw	4
  6360  01942A  26D9               	addwf	fsr2l,f,c
  6361  01942C  0E00               	movlw	0
  6362  01942E  6EDF               	movwf	indf2,c
  6363                           
  6364                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6365  019430  0E03               	movlw	3
  6366  019432  6EE6               	movwf	postinc1,c
  6367  019434  EC7B  F0D1         	call	_get_switch	;wreg free
  6368  019438  5001               	movf	btemp^0,w,c
  6369  01943A  B4D8               	btfsc	status,2,c
  6370  01943C  D003               	goto	u9170
  6371  01943E  6A0C               	clrf	(btemp+11)^0,c
  6372  019440  2A0C               	incf	(btemp+11)^0,f,c
  6373  019442  D001               	goto	u9188
  6374  019444                     u9170:
  6375  019444  6A0C               	clrf	(btemp+11)^0,c
  6376  019446                     u9188:
  6377                           
  6378                           ;stkvar	_h @ sp[(0)+-1]
  6379  019446  0EFF               	movlw	-1
  6380  019448  50E3               	movf	plusw1,w,c
  6381  01944A  6ED9               	movwf	fsr2l,c
  6382  01944C  6ADA               	clrf	fsr2h,c
  6383  01944E  0E05               	movlw	5
  6384  019450  26D9               	addwf	fsr2l,f,c
  6385  019452  0060  F033  FFDF   	movff	btemp+11,indf2
  6386  019458                     l1869:
  6387                           
  6388                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6389  019458  52E5               	movf	postdec1,f,c
  6390  01945A  0012               	return		;funcret
  6391  01945C                     __end_of_hid_input:
  6392                           	opt callstack 0
  6393                           
  6394 ;; *************** function _get_switch *****************
  6395 ;; Defined at:
  6396 ;;		line 18 in file "dio.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  i               1  [STACK] unsigned char 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1  [STACK] enum E17021
  6403 ;; Registers used:
  6404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/2
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6414 ;;Total ram usage:        0 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:   15
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_main
  6421 ;;		_hid_input
  6422 ;; This function uses a reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text19
  6426  01A2F6                     __ptext19:
  6427                           	opt callstack 0
  6428  01A2F6                     _get_switch:
  6429                           	opt callstack 13
  6430                           
  6431                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6432                           ;stkvar	_i @ sp[(0)+-1]
  6433                           
  6434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6435                           ;incstack = 0
  6436  01A2F6  0EFF               	movlw	-1
  6437  01A2F8  006F FF8C  F001    	movff	plusw1,btemp
  6438  01A2FE  0E03               	movlw	3
  6439  01A300  6401               	cpfsgt	btemp^0,c
  6440  01A302  D002               	goto	l9153
  6441                           
  6442                           ;dio.c: 21:   return SW_OFF;
  6443  01A304  0E00               	movlw	0
  6444  01A306  D008               	goto	L2
  6445  01A308                     l9153:
  6446                           
  6447                           ;dio.c: 23:  return S.button[i].sw;
  6448                           ;stkvar	_i @ sp[(0)+-1]
  6449  01A308  0EFF               	movlw	-1
  6450  01A30A  50E3               	movf	plusw1,w,c
  6451  01A30C  0D05               	mullw	5
  6452  01A30E  50F3               	movf	243,w,c
  6453  01A310  0F60               	addlw	low _S
  6454  01A312  6ED9               	movwf	fsr2l,c
  6455  01A314  6ADA               	clrf	fsr2h,c
  6456  01A316  50DF               	movf	indf2,w,c
  6457  01A318                     L2:
  6458  01A318  6E01               	movwf	btemp^0,c
  6459                           
  6460                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6461  01A31A  52E5               	movf	postdec1,f,c
  6462  01A31C  0012               	return		;funcret
  6463  01A31E                     __end_of_get_switch:
  6464                           	opt callstack 0
  6465                           
  6466 ;; *************** function _eaDogM_WriteCommand *****************
  6467 ;; Defined at:
  6468 ;;		line 175 in file "eadog.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  cmd             1  [STACK] const unsigned char 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;		None
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  1  [STACK] void 
  6475 ;; Registers used:
  6476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6477 ;; Tracked objects:
  6478 ;;		On entry : 3F/3D
  6479 ;;		On exit  : 3F/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6486 ;;Total ram usage:        0 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:   25
  6489 ;; This function calls:
  6490 ;;		_send_lcd_cmd_dma
  6491 ;; This function is called by:
  6492 ;;		_main
  6493 ;; This function uses a reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text20
  6497  01A85E                     __ptext20:
  6498                           	opt callstack 0
  6499  01A85E                     _eaDogM_WriteCommand:
  6500                           	opt callstack 5
  6501                           
  6502                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  6503                           ;stkvar	_cmd @ sp[(0)+-1]
  6504                           
  6505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6506                           ;incstack = 0
  6507  01A85E  0EFF               	movlw	-1
  6508  01A860  50E3               	movf	plusw1,w,c
  6509  01A862  6EE6               	movwf	postinc1,c
  6510  01A864  EC53  F0CD         	call	_send_lcd_cmd_dma	;wreg free
  6511                           
  6512                           ; BSR set to: 0
  6513                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  6514  01A868  52E5               	movf	postdec1,f,c
  6515  01A86A  0012               	return		;funcret
  6516  01A86C                     __end_of_eaDogM_WriteCommand:
  6517                           	opt callstack 0
  6518                           
  6519 ;; *************** function _convert_adc_data *****************
  6520 ;; Defined at:
  6521 ;;		line 40 in file "mbmc.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  i               1  [STACK] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  1  [STACK] void 
  6528 ;; Registers used:
  6529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/1
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6539 ;;Total ram usage:        0 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:   18
  6542 ;; This function calls:
  6543 ;;		_conv_raw_result
  6544 ;;		_lp_filter
  6545 ;; This function is called by:
  6546 ;;		_main
  6547 ;; This function uses a reentrant model
  6548 ;;
  6549                           
  6550                           	psect	text21
  6551  018E28                     __ptext21:
  6552                           	opt callstack 0
  6553  018E28                     _convert_adc_data:
  6554                           	opt callstack 0
  6555                           
  6556                           ; BSR set to: 0
  6557                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6558  018E28  52E6               	movf	postinc1,f,c
  6559                           
  6560                           ;mbmc.c: 42:  uint8_t i = 0;
  6561                           ;stkvar	_i @ sp[(-1)+0]
  6562                           
  6563                           ;incstack = 0
  6564  018E2A  0EFF               	movlw	-1
  6565  018E2C  6AE3               	clrf	plusw1,c
  6566  018E2E                     l10177:
  6567                           
  6568                           ;mbmc.c: 45:   if (V.calib) {
  6569  018E2E  0102               	movlb	2	; () banked
  6570  018E30  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6571  018E32  B4D8               	btfsc	status,2,c
  6572  018E34  D01B               	goto	l10181
  6573                           
  6574                           ; BSR set to: 2
  6575                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  6576  018E36  0E01               	movlw	1
  6577  018E38  6EE6               	movwf	postinc1,c
  6578                           
  6579                           ;stkvar	_i @ sp[(-2)+0]
  6580  018E3A  0EFE               	movlw	-2
  6581  018E3C  50E3               	movf	plusw1,w,c
  6582  018E3E  6EE6               	movwf	postinc1,c
  6583  018E40  0E01               	movlw	1
  6584  018E42  6EE6               	movwf	postinc1,c
  6585                           
  6586                           ;stkvar	_i @ sp[(-4)+0]
  6587  018E44  0EFC               	movlw	-4
  6588  018E46  50E3               	movf	plusw1,w,c
  6589  018E48  6EE6               	movwf	postinc1,c
  6590  018E4A  ECD4  F0A3         	call	_conv_raw_result	;wreg free
  6591  018E4E  0060  F007  FFE6   	movff	btemp,postinc1
  6592  018E54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6593  018E5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6594  018E60  0060  F013  FFE6   	movff	btemp+3,postinc1
  6595  018E66  EC9C  F0B9         	call	_lp_filter	;wreg free
  6596  018E6A  D01A               	goto	L3
  6597  018E6C                     l10181:
  6598                           
  6599                           ; BSR set to: 2
  6600                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  6601  018E6C  0E00               	movlw	0
  6602  018E6E  6EE6               	movwf	postinc1,c
  6603                           
  6604                           ;stkvar	_i @ sp[(-2)+0]
  6605  018E70  0EFE               	movlw	-2
  6606  018E72  50E3               	movf	plusw1,w,c
  6607  018E74  6EE6               	movwf	postinc1,c
  6608  018E76  0E00               	movlw	0
  6609  018E78  6EE6               	movwf	postinc1,c
  6610                           
  6611                           ;stkvar	_i @ sp[(-4)+0]
  6612  018E7A  0EFC               	movlw	-4
  6613  018E7C  50E3               	movf	plusw1,w,c
  6614  018E7E  6EE6               	movwf	postinc1,c
  6615  018E80  ECD4  F0A3         	call	_conv_raw_result	;wreg free
  6616  018E84  0060  F007  FFE6   	movff	btemp,postinc1
  6617  018E8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6618  018E90  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6619  018E96  0060  F013  FFE6   	movff	btemp+3,postinc1
  6620  018E9C  EC9C  F0B9         	call	_lp_filter	;wreg free
  6621  018EA0                     L3:
  6622                           
  6623                           ;stkvar	_i @ sp[(-1)+0]
  6624  018EA0  0EFF               	movlw	-1
  6625  018EA2  50E3               	movf	plusw1,w,c
  6626  018EA4  0D04               	mullw	4
  6627  018EA6  0E00               	movlw	low _C
  6628  018EA8  24F3               	addwf	243,w,c
  6629  018EAA  6ED9               	movwf	fsr2l,c
  6630  018EAC  0E01               	movlw	high _C
  6631  018EAE  20F4               	addwfc	prodh,w,c
  6632  018EB0  6EDA               	movwf	fsr2h,c
  6633  018EB2  0060  F007  FFDE   	movff	btemp,postinc2
  6634  018EB8  0060  F00B  FFDE   	movff	btemp+1,postinc2
  6635  018EBE  0060  F00F  FFDE   	movff	btemp+2,postinc2
  6636  018EC4  0060  F013  FFDE   	movff	btemp+3,postinc2
  6637                           
  6638                           ;mbmc.c: 50:  } while (++i < 16);
  6639                           ;stkvar	_i @ sp[(-1)+0]
  6640  018ECA  0EFF               	movlw	-1
  6641  018ECC  2AE3               	incf	plusw1,f,c
  6642  018ECE  0EFF               	movlw	-1
  6643  018ED0  006F FF8C  F001    	movff	plusw1,btemp
  6644  018ED6  0E0F               	movlw	15
  6645  018ED8  6401               	cpfsgt	btemp^0,c
  6646  018EDA  D7A9               	goto	l10177
  6647                           
  6648                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6649  018EDC  52E5               	movf	postdec1,f,c
  6650  018EDE  0012               	return		;funcret
  6651  018EE0                     __end_of_convert_adc_data:
  6652                           	opt callstack 0
  6653                           
  6654 ;; *************** function _conv_raw_result *****************
  6655 ;; Defined at:
  6656 ;;		line 80 in file "daq.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  chan            1  [STACK] const enum E16136
  6659 ;;  to_what         1  [STACK] const enum E16198
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  4  [STACK] float 
  6664 ;; Registers used:
  6665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/1
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6675 ;;Total ram usage:        0 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:   17
  6678 ;; This function calls:
  6679 ;;		___fldiv
  6680 ;;		___flmul
  6681 ;;		___flsub
  6682 ;;		___xxtofl
  6683 ;;		_get_raw_result
  6684 ;;		_nanf
  6685 ;; This function is called by:
  6686 ;;		_convert_adc_data
  6687 ;;		_init_bsoc
  6688 ;; This function uses a reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text22
  6692  0147A8                     __ptext22:
  6693                           	opt callstack 0
  6694  0147A8                     _conv_raw_result:
  6695                           	opt callstack 12
  6696                           
  6697                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  6698                           
  6699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6700                           ;incstack = 0
  6701  0147A8  D242               	goto	l9797
  6702  0147AA                     l9743:
  6703                           
  6704                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  6705                           ;stkvar	_chan @ sp[(0)+-1]
  6706  0147AA  0EFF               	movlw	-1
  6707  0147AC  006F FF8C  F00C    	movff	plusw1,btemp+11
  6708  0147B2  0E77               	movlw	119
  6709  0147B4  6E09               	movwf	(btemp+8)^0,c
  6710  0147B6  0E3C               	movlw	60
  6711  0147B8  6E0A               	movwf	(btemp+9)^0,c
  6712  0147BA  2A0C               	incf	(btemp+11)^0,f,c
  6713  0147BC  D003               	goto	u8914
  6714  0147BE                     u8915:
  6715  0147BE  340A               	rlcf	(btemp+9)^0,w,c
  6716  0147C0  320A               	rrcf	(btemp+9)^0,f,c
  6717  0147C2  3209               	rrcf	(btemp+8)^0,f,c
  6718  0147C4                     u8914:
  6719  0147C4  2E0C               	decfsz	(btemp+11)^0,f,c
  6720  0147C6  D7FB               	goto	u8915
  6721  0147C8  B009               	btfsc	(btemp+8)^0,0,c
  6722  0147CA  D007               	goto	l9749
  6723                           
  6724                           ;daq.c: 86:    return nanf("");
  6725  0147CC  0EF3               	movlw	low (STR_50+78)
  6726  0147CE  6EE6               	movwf	postinc1,c
  6727  0147D0  0EFD               	movlw	high (STR_50+78)
  6728  0147D2  6EE6               	movwf	postinc1,c
  6729  0147D4  EC3A  F0CC         	call	_nanf	;wreg free
  6730  0147D8  D23A               	goto	l1741
  6731  0147DA                     l9749:
  6732                           
  6733                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  6734                           ;stkvar	_chan @ sp[(0)+-1]
  6735  0147DA  0EFF               	movlw	-1
  6736  0147DC  006F FF8C  F00C    	movff	plusw1,btemp+11
  6737  0147E2  0E03               	movlw	3
  6738  0147E4  6E09               	movwf	(btemp+8)^0,c
  6739  0147E6  0E00               	movlw	0
  6740  0147E8  6E0A               	movwf	(btemp+9)^0,c
  6741  0147EA  2A0C               	incf	(btemp+11)^0,f,c
  6742  0147EC  D003               	goto	u8934
  6743  0147EE                     u8935:
  6744  0147EE  340A               	rlcf	(btemp+9)^0,w,c
  6745  0147F0  320A               	rrcf	(btemp+9)^0,f,c
  6746  0147F2  3209               	rrcf	(btemp+8)^0,f,c
  6747  0147F4                     u8934:
  6748  0147F4  2E0C               	decfsz	(btemp+11)^0,f,c
  6749  0147F6  D7FB               	goto	u8935
  6750  0147F8  A009               	btfss	(btemp+8)^0,0,c
  6751  0147FA  D0EB               	goto	l9763
  6752                           
  6753                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  6754                           ;stkvar	_chan @ sp[(0)+-1]
  6755  0147FC  0EFF               	movlw	-1
  6756  0147FE  006F FF8C  F00C    	movff	plusw1,btemp+11
  6757  014804  0E01               	movlw	1
  6758  014806  6E09               	movwf	(btemp+8)^0,c
  6759  014808  0E00               	movlw	0
  6760  01480A  6E0A               	movwf	(btemp+9)^0,c
  6761  01480C  2A0C               	incf	(btemp+11)^0,f,c
  6762  01480E  D003               	goto	u8954
  6763  014810                     u8955:
  6764  014810  340A               	rlcf	(btemp+9)^0,w,c
  6765  014812  320A               	rrcf	(btemp+9)^0,f,c
  6766  014814  3209               	rrcf	(btemp+8)^0,f,c
  6767  014816                     u8954:
  6768  014816  2E0C               	decfsz	(btemp+11)^0,f,c
  6769  014818  D7FB               	goto	u8955
  6770  01481A  A009               	btfss	(btemp+8)^0,0,c
  6771  01481C  D06D               	goto	l9759
  6772                           
  6773                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  6774  01481E  0E7B               	movlw	123
  6775  014820  6EE6               	movwf	postinc1,c
  6776  014822  0E14               	movlw	20
  6777  014824  6EE6               	movwf	postinc1,c
  6778  014826  0EAE               	movlw	174
  6779  014828  6EE6               	movwf	postinc1,c
  6780  01482A  0E3D               	movlw	61
  6781  01482C  6EE6               	movwf	postinc1,c
  6782  01482E  0060  F3AC  F009   	movff	_R+32,btemp+8	;volatile
  6783  014834  0060  F3B0  F00A   	movff	_R+33,btemp+9	;volatile
  6784  01483A  0E00               	movlw	0
  6785  01483C  BE0A               	btfsc	(btemp+9)^0,7,c
  6786  01483E  0EFF               	movlw	255
  6787  014840  6E0B               	movwf	(btemp+10)^0,c
  6788  014842  6E0C               	movwf	(btemp+11)^0,c
  6789  014844  0060  F027  FFE6   	movff	btemp+8,postinc1
  6790  01484A  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6791  014850  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6792  014856  0060  F033  FFE6   	movff	btemp+11,postinc1
  6793  01485C  0E01               	movlw	1
  6794  01485E  6EE6               	movwf	postinc1,c
  6795  014860  EC9A  F0B7         	call	___xxtofl	;wreg free
  6796  014864  0060  F007  FFE6   	movff	btemp,postinc1
  6797  01486A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6798  014870  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6799  014876  0060  F013  FFE6   	movff	btemp+3,postinc1
  6800                           
  6801                           ;stkvar	_chan @ sp[(-8)+-1]
  6802  01487C  0EF7               	movlw	-9
  6803  01487E  50E3               	movf	plusw1,w,c
  6804  014880  6EE6               	movwf	postinc1,c
  6805  014882  EC66  F0D3         	call	_get_raw_result	;wreg free
  6806  014886  0060  F004  F00B   	movff	btemp,btemp+10
  6807  01488C  0060  F008  F00C   	movff	btemp+1,btemp+11
  6808  014892  500B               	movf	(btemp+10)^0,w,c
  6809  014894  6E05               	movwf	(btemp+4)^0,c
  6810  014896  500C               	movf	(btemp+11)^0,w,c
  6811  014898  6E06               	movwf	(btemp+5)^0,c
  6812  01489A  6A07               	clrf	(btemp+6)^0,c
  6813  01489C  6A08               	clrf	(btemp+7)^0,c
  6814  01489E  0060  F017  FFE6   	movff	btemp+4,postinc1
  6815  0148A4  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6816  0148AA  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6817  0148B0  0060  F023  FFE6   	movff	btemp+7,postinc1
  6818  0148B6  0E00               	movlw	0
  6819  0148B8  6EE6               	movwf	postinc1,c
  6820  0148BA  EC9A  F0B7         	call	___xxtofl	;wreg free
  6821  0148BE  0060  F007  FFE6   	movff	btemp,postinc1
  6822  0148C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6823  0148CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6824  0148D0  0060  F013  FFE6   	movff	btemp+3,postinc1
  6825  0148D6  EC61  F0CE         	call	___flsub	;wreg free
  6826  0148DA  0060  F007  FFE6   	movff	btemp,postinc1
  6827  0148E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6828  0148E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6829  0148EC  0060  F013  FFE6   	movff	btemp+3,postinc1
  6830  0148F2  ECE1  F095         	call	___flmul	;wreg free
  6831  0148F6  D1AB               	goto	l1741
  6832  0148F8                     l9759:
  6833                           
  6834                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  6835  0148F8  0E29               	movlw	41
  6836  0148FA  6EE6               	movwf	postinc1,c
  6837  0148FC  0E5C               	movlw	92
  6838  0148FE  6EE6               	movwf	postinc1,c
  6839  014900  0E0F               	movlw	15
  6840  014902  6EE6               	movwf	postinc1,c
  6841  014904  0E3D               	movlw	61
  6842  014906  6EE6               	movwf	postinc1,c
  6843  014908  0060  F3B4  F009   	movff	_R+34,btemp+8	;volatile
  6844  01490E  0060  F3B8  F00A   	movff	_R+35,btemp+9	;volatile
  6845  014914  0E00               	movlw	0
  6846  014916  BE0A               	btfsc	(btemp+9)^0,7,c
  6847  014918  0EFF               	movlw	255
  6848  01491A  6E0B               	movwf	(btemp+10)^0,c
  6849  01491C  6E0C               	movwf	(btemp+11)^0,c
  6850  01491E  0060  F027  FFE6   	movff	btemp+8,postinc1
  6851  014924  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6852  01492A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6853  014930  0060  F033  FFE6   	movff	btemp+11,postinc1
  6854  014936  0E01               	movlw	1
  6855  014938  6EE6               	movwf	postinc1,c
  6856  01493A  EC9A  F0B7         	call	___xxtofl	;wreg free
  6857  01493E  0060  F007  FFE6   	movff	btemp,postinc1
  6858  014944  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6859  01494A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6860  014950  0060  F013  FFE6   	movff	btemp+3,postinc1
  6861                           
  6862                           ;stkvar	_chan @ sp[(-8)+-1]
  6863  014956  0EF7               	movlw	-9
  6864  014958  50E3               	movf	plusw1,w,c
  6865  01495A  6EE6               	movwf	postinc1,c
  6866  01495C  EC66  F0D3         	call	_get_raw_result	;wreg free
  6867  014960  0060  F004  F00B   	movff	btemp,btemp+10
  6868  014966  0060  F008  F00C   	movff	btemp+1,btemp+11
  6869  01496C  500B               	movf	(btemp+10)^0,w,c
  6870  01496E  6E05               	movwf	(btemp+4)^0,c
  6871  014970  500C               	movf	(btemp+11)^0,w,c
  6872  014972  6E06               	movwf	(btemp+5)^0,c
  6873  014974  6A07               	clrf	(btemp+6)^0,c
  6874  014976  6A08               	clrf	(btemp+7)^0,c
  6875  014978  0060  F017  FFE6   	movff	btemp+4,postinc1
  6876  01497E  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6877  014984  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6878  01498A  0060  F023  FFE6   	movff	btemp+7,postinc1
  6879  014990  0E00               	movlw	0
  6880  014992  6EE6               	movwf	postinc1,c
  6881  014994  EC9A  F0B7         	call	___xxtofl	;wreg free
  6882  014998  0060  F007  FFE6   	movff	btemp,postinc1
  6883  01499E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6884  0149A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6885  0149AA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6886  0149B0  EC61  F0CE         	call	___flsub	;wreg free
  6887  0149B4  0060  F007  FFE6   	movff	btemp,postinc1
  6888  0149BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6889  0149C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6890  0149C6  0060  F013  FFE6   	movff	btemp+3,postinc1
  6891  0149CC  ECE1  F095         	call	___flmul	;wreg free
  6892  0149D0  D13E               	goto	l1741
  6893  0149D2                     l9763:
  6894                           
  6895                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  6896                           ;stkvar	_chan @ sp[(0)+-1]
  6897  0149D2  0EFF               	movlw	-1
  6898  0149D4  006F FF8C  F00C    	movff	plusw1,btemp+11
  6899  0149DA  0E00               	movlw	0
  6900  0149DC  6E09               	movwf	(btemp+8)^0,c
  6901  0149DE  0E08               	movlw	8
  6902  0149E0  6E0A               	movwf	(btemp+9)^0,c
  6903  0149E2  2A0C               	incf	(btemp+11)^0,f,c
  6904  0149E4  D003               	goto	u8974
  6905  0149E6                     u8975:
  6906  0149E6  340A               	rlcf	(btemp+9)^0,w,c
  6907  0149E8  320A               	rrcf	(btemp+9)^0,f,c
  6908  0149EA  3209               	rrcf	(btemp+8)^0,f,c
  6909  0149EC                     u8974:
  6910  0149EC  2E0C               	decfsz	(btemp+11)^0,f,c
  6911  0149EE  D7FB               	goto	u8975
  6912  0149F0  A009               	btfss	(btemp+8)^0,0,c
  6913  0149F2  D008               	goto	l9771
  6914                           
  6915                           ;daq.c: 96:     return 25.0;
  6916  0149F4  0E00               	movlw	0
  6917  0149F6  6E01               	movwf	btemp^0,c
  6918  0149F8  0E00               	movlw	0
  6919  0149FA  6E02               	movwf	(btemp+1)^0,c
  6920  0149FC  0EC8               	movlw	200
  6921  0149FE  6E03               	movwf	(btemp+2)^0,c
  6922  014A00  0E41               	movlw	65
  6923  014A02  D113               	goto	L4
  6924  014A04                     l9771:
  6925                           
  6926                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6927  014A04  0E00               	movlw	0
  6928  014A06  6EE6               	movwf	postinc1,c
  6929  014A08  0E00               	movlw	0
  6930  014A0A  6EE6               	movwf	postinc1,c
  6931  014A0C  0E7A               	movlw	122
  6932  014A0E  6EE6               	movwf	postinc1,c
  6933  014A10  0E44               	movlw	68
  6934  014A12  6EE6               	movwf	postinc1,c
  6935  014A14  0E61               	movlw	97
  6936  014A16  6EE6               	movwf	postinc1,c
  6937  014A18  0E03               	movlw	3
  6938  014A1A  6EE6               	movwf	postinc1,c
  6939  014A1C  0E84               	movlw	132
  6940  014A1E  6EE6               	movwf	postinc1,c
  6941  014A20  0E40               	movlw	64
  6942  014A22  6EE6               	movwf	postinc1,c
  6943                           
  6944                           ;stkvar	_chan @ sp[(-8)+-1]
  6945  014A24  0EF7               	movlw	-9
  6946  014A26  50E3               	movf	plusw1,w,c
  6947  014A28  6EE6               	movwf	postinc1,c
  6948  014A2A  EC66  F0D3         	call	_get_raw_result	;wreg free
  6949  014A2E  0060  F004  F00B   	movff	btemp,btemp+10
  6950  014A34  0060  F008  F00C   	movff	btemp+1,btemp+11
  6951  014A3A  500B               	movf	(btemp+10)^0,w,c
  6952  014A3C  6E05               	movwf	(btemp+4)^0,c
  6953  014A3E  500C               	movf	(btemp+11)^0,w,c
  6954  014A40  6E06               	movwf	(btemp+5)^0,c
  6955  014A42  6A07               	clrf	(btemp+6)^0,c
  6956  014A44  6A08               	clrf	(btemp+7)^0,c
  6957  014A46  0060  F017  FFE6   	movff	btemp+4,postinc1
  6958  014A4C  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6959  014A52  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6960  014A58  0060  F023  FFE6   	movff	btemp+7,postinc1
  6961  014A5E  0E00               	movlw	0
  6962  014A60  6EE6               	movwf	postinc1,c
  6963  014A62  EC9A  F0B7         	call	___xxtofl	;wreg free
  6964  014A66  0060  F007  FFE6   	movff	btemp,postinc1
  6965  014A6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6966  014A72  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6967  014A78  0060  F013  FFE6   	movff	btemp+3,postinc1
  6968  014A7E  ECE1  F095         	call	___flmul	;wreg free
  6969  014A82  0060  F007  FFE6   	movff	btemp,postinc1
  6970  014A88  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6971  014A8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6972  014A94  0060  F013  FFE6   	movff	btemp+3,postinc1
  6973  014A9A  EC17  F0A1         	call	___fldiv	;wreg free
  6974  014A9E  D0D7               	goto	l1741
  6975  014AA0                     l9775:
  6976                           
  6977                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  6978                           ;stkvar	_chan @ sp[(0)+-1]
  6979  014AA0  0EFF               	movlw	-1
  6980  014AA2  006F FF8C  F00C    	movff	plusw1,btemp+11
  6981  014AA8  0E03               	movlw	3
  6982  014AAA  6E09               	movwf	(btemp+8)^0,c
  6983  014AAC  0E00               	movlw	0
  6984  014AAE  6E0A               	movwf	(btemp+9)^0,c
  6985  014AB0  2A0C               	incf	(btemp+11)^0,f,c
  6986  014AB2  D003               	goto	u8994
  6987  014AB4                     u8995:
  6988  014AB4  340A               	rlcf	(btemp+9)^0,w,c
  6989  014AB6  320A               	rrcf	(btemp+9)^0,f,c
  6990  014AB8  3209               	rrcf	(btemp+8)^0,f,c
  6991  014ABA                     u8994:
  6992  014ABA  2E0C               	decfsz	(btemp+11)^0,f,c
  6993  014ABC  D7FB               	goto	u8995
  6994  014ABE  B009               	btfsc	(btemp+8)^0,0,c
  6995  014AC0  D011               	goto	u9020
  6996                           
  6997                           ;stkvar	_chan @ sp[(0)+-1]
  6998  014AC2  0EFF               	movlw	-1
  6999  014AC4  006F FF8C  F00C    	movff	plusw1,btemp+11
  7000  014ACA  0E00               	movlw	0
  7001  014ACC  6E09               	movwf	(btemp+8)^0,c
  7002  014ACE  0E08               	movlw	8
  7003  014AD0  6E0A               	movwf	(btemp+9)^0,c
  7004  014AD2  2A0C               	incf	(btemp+11)^0,f,c
  7005  014AD4  D003               	goto	u9014
  7006  014AD6                     u9015:
  7007  014AD6  340A               	rlcf	(btemp+9)^0,w,c
  7008  014AD8  320A               	rrcf	(btemp+9)^0,f,c
  7009  014ADA  3209               	rrcf	(btemp+8)^0,f,c
  7010  014ADC                     u9014:
  7011  014ADC  2E0C               	decfsz	(btemp+11)^0,f,c
  7012  014ADE  D7FB               	goto	u9015
  7013  014AE0  A009               	btfss	(btemp+8)^0,0,c
  7014  014AE2  D04E               	goto	l9783
  7015  014AE4                     u9020:
  7016                           
  7017                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  7018  014AE4  0E00               	movlw	0
  7019  014AE6  6EE6               	movwf	postinc1,c
  7020  014AE8  0E00               	movlw	0
  7021  014AEA  6EE6               	movwf	postinc1,c
  7022  014AEC  0E7A               	movlw	122
  7023  014AEE  6EE6               	movwf	postinc1,c
  7024  014AF0  0E44               	movlw	68
  7025  014AF2  6EE6               	movwf	postinc1,c
  7026  014AF4  0E00               	movlw	0
  7027  014AF6  6EE6               	movwf	postinc1,c
  7028  014AF8  0E00               	movlw	0
  7029  014AFA  6EE6               	movwf	postinc1,c
  7030  014AFC  0E20               	movlw	32
  7031  014AFE  6EE6               	movwf	postinc1,c
  7032  014B00  0E3F               	movlw	63
  7033  014B02  6EE6               	movwf	postinc1,c
  7034                           
  7035                           ;stkvar	_chan @ sp[(-8)+-1]
  7036  014B04  0EF7               	movlw	-9
  7037  014B06  50E3               	movf	plusw1,w,c
  7038  014B08  6EE6               	movwf	postinc1,c
  7039  014B0A  EC66  F0D3         	call	_get_raw_result	;wreg free
  7040  014B0E  0060  F004  F00B   	movff	btemp,btemp+10
  7041  014B14  0060  F008  F00C   	movff	btemp+1,btemp+11
  7042  014B1A  500B               	movf	(btemp+10)^0,w,c
  7043  014B1C  6E05               	movwf	(btemp+4)^0,c
  7044  014B1E  500C               	movf	(btemp+11)^0,w,c
  7045  014B20  6E06               	movwf	(btemp+5)^0,c
  7046  014B22  6A07               	clrf	(btemp+6)^0,c
  7047  014B24  6A08               	clrf	(btemp+7)^0,c
  7048  014B26  0060  F017  FFE6   	movff	btemp+4,postinc1
  7049  014B2C  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7050  014B32  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7051  014B38  0060  F023  FFE6   	movff	btemp+7,postinc1
  7052  014B3E  0E00               	movlw	0
  7053  014B40  6EE6               	movwf	postinc1,c
  7054  014B42  EC9A  F0B7         	call	___xxtofl	;wreg free
  7055  014B46  0060  F007  FFE6   	movff	btemp,postinc1
  7056  014B4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7057  014B52  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7058  014B58  0060  F013  FFE6   	movff	btemp+3,postinc1
  7059  014B5E  ECE1  F095         	call	___flmul	;wreg free
  7060  014B62  0060  F007  FFE6   	movff	btemp,postinc1
  7061  014B68  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7062  014B6E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7063  014B74  0060  F013  FFE6   	movff	btemp+3,postinc1
  7064  014B7A  EC17  F0A1         	call	___fldiv	;wreg free
  7065  014B7E  D067               	goto	l1741
  7066  014B80                     l9783:
  7067                           
  7068                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  7069  014B80  0E00               	movlw	0
  7070  014B82  6EE6               	movwf	postinc1,c
  7071  014B84  0E00               	movlw	0
  7072  014B86  6EE6               	movwf	postinc1,c
  7073  014B88  0E7A               	movlw	122
  7074  014B8A  6EE6               	movwf	postinc1,c
  7075  014B8C  0E44               	movlw	68
  7076  014B8E  6EE6               	movwf	postinc1,c
  7077  014B90  0E61               	movlw	97
  7078  014B92  6EE6               	movwf	postinc1,c
  7079  014B94  0E03               	movlw	3
  7080  014B96  6EE6               	movwf	postinc1,c
  7081  014B98  0E84               	movlw	132
  7082  014B9A  6EE6               	movwf	postinc1,c
  7083  014B9C  0E40               	movlw	64
  7084  014B9E  6EE6               	movwf	postinc1,c
  7085                           
  7086                           ;stkvar	_chan @ sp[(-8)+-1]
  7087  014BA0  0EF7               	movlw	-9
  7088  014BA2  50E3               	movf	plusw1,w,c
  7089  014BA4  6EE6               	movwf	postinc1,c
  7090  014BA6  EC66  F0D3         	call	_get_raw_result	;wreg free
  7091  014BAA  0060  F004  F00B   	movff	btemp,btemp+10
  7092  014BB0  0060  F008  F00C   	movff	btemp+1,btemp+11
  7093  014BB6  500B               	movf	(btemp+10)^0,w,c
  7094  014BB8  6E05               	movwf	(btemp+4)^0,c
  7095  014BBA  500C               	movf	(btemp+11)^0,w,c
  7096  014BBC  6E06               	movwf	(btemp+5)^0,c
  7097  014BBE  6A07               	clrf	(btemp+6)^0,c
  7098  014BC0  6A08               	clrf	(btemp+7)^0,c
  7099  014BC2  0060  F017  FFE6   	movff	btemp+4,postinc1
  7100  014BC8  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7101  014BCE  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7102  014BD4  0060  F023  FFE6   	movff	btemp+7,postinc1
  7103  014BDA  0E00               	movlw	0
  7104  014BDC  6EE6               	movwf	postinc1,c
  7105  014BDE  EC9A  F0B7         	call	___xxtofl	;wreg free
  7106  014BE2  0060  F007  FFE6   	movff	btemp,postinc1
  7107  014BE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7108  014BEE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7109  014BF4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7110  014BFA  ECE1  F095         	call	___flmul	;wreg free
  7111  014BFE  0060  F007  FFE6   	movff	btemp,postinc1
  7112  014C04  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7113  014C0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7114  014C10  0060  F013  FFE6   	movff	btemp+3,postinc1
  7115  014C16  EC17  F0A1         	call	___fldiv	;wreg free
  7116  014C1A  D019               	goto	l1741
  7117  014C1C                     l9789:
  7118                           
  7119                           ;daq.c: 109:   return 0.0;
  7120  014C1C  0E00               	movlw	0
  7121  014C1E  6E01               	movwf	btemp^0,c
  7122  014C20  0E00               	movlw	0
  7123  014C22  6E02               	movwf	(btemp+1)^0,c
  7124  014C24  0E00               	movlw	0
  7125  014C26  6E03               	movwf	(btemp+2)^0,c
  7126  014C28  0E00               	movlw	0
  7127  014C2A                     L4:
  7128  014C2A  6E04               	movwf	(btemp+3)^0,c
  7129  014C2C  D010               	goto	l1741
  7130  014C2E                     l9797:
  7131                           
  7132                           ;stkvar	_to_what @ sp[(0)+-2]
  7133  014C2E  0EFE               	movlw	-2
  7134  014C30  50E3               	movf	plusw1,w,c
  7135  014C32  6E0B               	movwf	(btemp+10)^0,c
  7136  014C34  6A0C               	clrf	(btemp+11)^0,c
  7137                           
  7138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7139                           ; Switch size 1, requested type "simple"
  7140                           ; Number of cases is 1, Range of values is 0 to 0
  7141                           ; switch strategies available:
  7142                           ; Name         Instructions Cycles
  7143                           ; simple_byte            4     3 (average)
  7144                           ;	Chosen strategy is simple_byte
  7145  014C36  500C               	movf	(btemp+11)^0,w,c
  7146  014C38  0A00               	xorlw	0	; case 0
  7147  014C3A  A4D8               	btfss	status,2,c
  7148  014C3C  D7EF               	goto	l9789
  7149                           
  7150                           ; Switch size 1, requested type "simple"
  7151                           ; Number of cases is 2, Range of values is 0 to 1
  7152                           ; switch strategies available:
  7153                           ; Name         Instructions Cycles
  7154                           ; simple_byte            7     4 (average)
  7155                           ;	Chosen strategy is simple_byte
  7156  014C3E  500B               	movf	(btemp+10)^0,w,c
  7157  014C40  0A00               	xorlw	0	; case 0
  7158  014C42  B4D8               	btfsc	status,2,c
  7159  014C44  D5B2               	goto	l9743
  7160  014C46  0A01               	xorlw	1	; case 1
  7161  014C48  B4D8               	btfsc	status,2,c
  7162  014C4A  D72A               	goto	l9775
  7163  014C4C  D7E7               	goto	l9789
  7164  014C4E                     l1741:
  7165                           
  7166                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  7167  014C4E  52E5               	movf	postdec1,f,c
  7168  014C50  52E5               	movf	postdec1,f,c
  7169  014C52  0012               	return		;funcret
  7170  014C54                     __end_of_conv_raw_result:
  7171                           	opt callstack 0
  7172                           
  7173 ;; *************** function _nanf *****************
  7174 ;; Defined at:
  7175 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  s               2  [STACK] PTR const unsigned char 
  7178 ;;		 -> STR_87(1), STR_49(1), 
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;  u               4  [STACK] struct .
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  4  [STACK] float 
  7183 ;; Registers used:
  7184 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/1
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7194 ;;Total ram usage:        0 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; Hardware stack levels required when called:   15
  7197 ;; This function calls:
  7198 ;;		Nothing
  7199 ;; This function is called by:
  7200 ;;		_conv_raw_result
  7201 ;; This function uses a reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text23
  7205  019874                     __ptext23:
  7206                           	opt callstack 0
  7207  019874                     _nanf:
  7208                           	opt callstack 0
  7209                           
  7210                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7211  019874  52E6               	movf	postinc1,f,c
  7212  019876  52E6               	movf	postinc1,f,c
  7213  019878  52E6               	movf	postinc1,f,c
  7214  01987A  52E6               	movf	postinc1,f,c
  7215                           
  7216                           ;incstack = 0
  7217  01987C  0EFF               	movlw	255
  7218  01987E  6E09               	movwf	(btemp+8)^0,c
  7219  019880  0EFF               	movlw	255
  7220  019882  6E0A               	movwf	(btemp+9)^0,c
  7221  019884  0EFF               	movlw	255
  7222  019886  6E0B               	movwf	(btemp+10)^0,c
  7223  019888  0E7F               	movlw	127
  7224  01988A  6E0C               	movwf	(btemp+11)^0,c
  7225                           
  7226                           ;stkvar	_u @ sp[(-4)+0]
  7227  01988C  0EFC               	movlw	-4
  7228  01988E  0060  F027  FFE3   	movff	btemp+8,plusw1
  7229  019894  0EFD               	movlw	-3
  7230  019896  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7231  01989C  0EFE               	movlw	-2
  7232  01989E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7233  0198A4  0EFF               	movlw	-1
  7234  0198A6  0060  F033  FFE3   	movff	btemp+11,plusw1
  7235                           
  7236                           ;stkvar	_u @ sp[(-4)+0]
  7237  0198AC  0EFC               	movlw	-4
  7238  0198AE  006F FF8C  F001    	movff	plusw1,btemp
  7239  0198B4  0EFD               	movlw	-3
  7240  0198B6  006F FF8C  F002    	movff	plusw1,btemp+1
  7241  0198BC  0EFE               	movlw	-2
  7242  0198BE  006F FF8C  F003    	movff	plusw1,btemp+2
  7243  0198C4  0EFF               	movlw	-1
  7244  0198C6  006F FF8C  F004    	movff	plusw1,btemp+3
  7245                           
  7246                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  7247  0198CC  0EFA               	movlw	250
  7248  0198CE  26E1               	addwf	fsr1l,f,c
  7249  0198D0  0EFF               	movlw	255
  7250  0198D2  22E2               	addwfc	fsr1h,f,c
  7251  0198D4  0012               	return		;funcret
  7252  0198D6                     __end_of_nanf:
  7253                           	opt callstack 0
  7254                           
  7255 ;; *************** function _get_raw_result *****************
  7256 ;; Defined at:
  7257 ;;		line 72 in file "daq.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  index           1  [STACK] const enum E16136
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  2  [STACK] unsigned short 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/2
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:   15
  7278 ;; This function calls:
  7279 ;;		Nothing
  7280 ;; This function is called by:
  7281 ;;		_main
  7282 ;;		_conv_raw_result
  7283 ;; This function uses a reentrant model
  7284 ;;
  7285                           
  7286                           	psect	text24
  7287  01A6CC                     __ptext24:
  7288                           	opt callstack 0
  7289  01A6CC                     _get_raw_result:
  7290                           	opt callstack 13
  7291                           
  7292                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  7293                           ;stkvar	_index @ sp[(0)+-1]
  7294                           
  7295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7296                           ;incstack = 0
  7297  01A6CC  0EFF               	movlw	-1
  7298  01A6CE  50E3               	movf	plusw1,w,c
  7299  01A6D0  0D02               	mullw	2
  7300  01A6D2  50F3               	movf	243,w,c
  7301  01A6D4  0FCB               	addlw	low _R
  7302  01A6D6  6ED9               	movwf	fsr2l,c
  7303  01A6D8  6ADA               	clrf	fsr2h,c
  7304  01A6DA  006F FF78  F001    	movff	postinc2,btemp
  7305  01A6E0  006F FF74  F002    	movff	postdec2,btemp+1
  7306                           
  7307                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  7308  01A6E6  52E5               	movf	postdec1,f,c
  7309  01A6E8  0012               	return		;funcret
  7310  01A6EA                     __end_of_get_raw_result:
  7311                           	opt callstack 0
  7312                           
  7313 ;; *************** function ___xxtofl *****************
  7314 ;; Defined at:
  7315 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  sign            1  [STACK] unsigned char 
  7318 ;;  val             4  [STACK] long 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  arg             4  [STACK] unsigned long 
  7321 ;;  exp             1  [STACK] unsigned char 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  4  [STACK] unsigned char 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/1
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7335 ;;Total ram usage:        0 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:   15
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_conv_raw_result
  7342 ;;		_init_bsoc
  7343 ;; This function uses a reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text25
  7347  016F34                     __ptext25:
  7348                           	opt callstack 0
  7349  016F34                     ___xxtofl:
  7350                           	opt callstack 0
  7351                           
  7352                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7353  016F34  0E05               	movlw	5
  7354  016F36  26E1               	addwf	fsr1l,f,c
  7355  016F38  0E00               	movlw	0
  7356  016F3A  22E2               	addwfc	fsr1h,f,c
  7357                           
  7358                           ;stkvar	_sign @ sp[(-5)+-1]
  7359                           
  7360                           ;incstack = 0
  7361  016F3C  0EFA               	movlw	-6
  7362  016F3E  50E3               	movf	plusw1,w,c
  7363  016F40  B4D8               	btfsc	status,2,c
  7364  016F42  D01D               	goto	l9189
  7365                           
  7366                           ;stkvar	_val @ sp[(-5)+-5]
  7367  016F44  0EF9               	movlw	-7
  7368  016F46  AEE3               	btfss	plusw1,7,c
  7369  016F48  D01A               	goto	l9189
  7370                           
  7371                           ;stkvar	_val @ sp[(-5)+-5]
  7372  016F4A  0EF6               	movlw	-10
  7373  016F4C  006F FF8C  F009    	movff	plusw1,btemp+8
  7374  016F52  0EF7               	movlw	-9
  7375  016F54  006F FF8C  F00A    	movff	plusw1,btemp+9
  7376  016F5A  0EF8               	movlw	-8
  7377  016F5C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7378  016F62  0EF9               	movlw	-7
  7379  016F64  006F FF8C  F00C    	movff	plusw1,btemp+11
  7380  016F6A  1E09               	comf	(btemp+8)^0,f,c
  7381  016F6C  1E0A               	comf	(btemp+9)^0,f,c
  7382  016F6E  1E0B               	comf	(btemp+10)^0,f,c
  7383  016F70  1E0C               	comf	(btemp+11)^0,f,c
  7384  016F72  2A09               	incf	(btemp+8)^0,f,c
  7385  016F74  0E00               	movlw	0
  7386  016F76  220A               	addwfc	(btemp+9)^0,f,c
  7387  016F78  220B               	addwfc	(btemp+10)^0,f,c
  7388  016F7A  220C               	addwfc	(btemp+11)^0,f,c
  7389  016F7C  D010               	goto	L5
  7390  016F7E                     l9189:
  7391                           
  7392                           ;stkvar	_val @ sp[(-5)+-5]
  7393  016F7E  0EF6               	movlw	-10
  7394  016F80  006F FF8C  F009    	movff	plusw1,btemp+8
  7395  016F86  0EF7               	movlw	-9
  7396  016F88  006F FF8C  F00A    	movff	plusw1,btemp+9
  7397  016F8E  0EF8               	movlw	-8
  7398  016F90  006F FF8C  F00B    	movff	plusw1,btemp+10
  7399  016F96  0EF9               	movlw	-7
  7400  016F98  006F FF8C  F00C    	movff	plusw1,btemp+11
  7401  016F9E                     L5:
  7402                           
  7403                           ;stkvar	_arg @ sp[(-5)+0]
  7404  016F9E  0EFB               	movlw	-5
  7405  016FA0  0060  F027  FFE3   	movff	btemp+8,plusw1
  7406  016FA6  0EFC               	movlw	-4
  7407  016FA8  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7408  016FAE  0EFD               	movlw	-3
  7409  016FB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7410  016FB6  0EFE               	movlw	-2
  7411  016FB8  0060  F033  FFE3   	movff	btemp+11,plusw1
  7412                           
  7413                           ;stkvar	_val @ sp[(-5)+-5]
  7414  016FBE  0EF6               	movlw	-10
  7415  016FC0  50E3               	movf	plusw1,w,c
  7416  016FC2  E113               	bnz	l9197
  7417  016FC4  0EF7               	movlw	-9
  7418  016FC6  50E3               	movf	plusw1,w,c
  7419  016FC8  E110               	bnz	l9197
  7420  016FCA  0EF8               	movlw	-8
  7421  016FCC  50E3               	movf	plusw1,w,c
  7422  016FCE  E10D               	bnz	l9197
  7423  016FD0  0EF9               	movlw	-7
  7424  016FD2  50E3               	movf	plusw1,w,c
  7425  016FD4  A4D8               	btfss	status,2,c
  7426  016FD6  D009               	goto	l9197
  7427  016FD8  0E00               	movlw	0
  7428  016FDA  6E01               	movwf	btemp^0,c
  7429  016FDC  0E00               	movlw	0
  7430  016FDE  6E02               	movwf	(btemp+1)^0,c
  7431  016FE0  0E00               	movlw	0
  7432  016FE2  6E03               	movwf	(btemp+2)^0,c
  7433  016FE4  0E00               	movlw	0
  7434  016FE6  6E04               	movwf	(btemp+3)^0,c
  7435  016FE8  D0A2               	goto	l2928
  7436  016FEA                     l9197:
  7437  016FEA  0E96               	movlw	150
  7438  016FEC  6E0C               	movwf	(btemp+11)^0,c
  7439                           
  7440                           ;stkvar	_exp @ sp[(-5)+4]
  7441  016FEE  0EFF               	movlw	-1
  7442  016FF0  0060  F033  FFE3   	movff	btemp+11,plusw1
  7443  016FF6  D00B               	goto	l9201
  7444  016FF8                     l9199:
  7445                           
  7446                           ;stkvar	_exp @ sp[(-5)+4]
  7447  016FF8  0EFF               	movlw	-1
  7448  016FFA  2AE3               	incf	plusw1,f,c
  7449                           
  7450                           ;stkvar	_arg @ sp[(-5)+0]
  7451  016FFC  90D8               	bcf	status,0,c
  7452  016FFE  0EFE               	movlw	-2
  7453  017000  32E3               	rrcf	plusw1,f,c
  7454  017002  0EFD               	movlw	-3
  7455  017004  32E3               	rrcf	plusw1,f,c
  7456  017006  0EFC               	movlw	-4
  7457  017008  32E3               	rrcf	plusw1,f,c
  7458  01700A  0EFB               	movlw	-5
  7459  01700C  32E3               	rrcf	plusw1,f,c
  7460  01700E                     l9201:
  7461                           
  7462                           ;stkvar	_arg @ sp[(-5)+0]
  7463  01700E  50E1               	movf	fsr1l,w,c
  7464  017010  0FFB               	addlw	-5
  7465  017012  6ED9               	movwf	fsr2l,c
  7466  017014  50E2               	movf	fsr1h,w,c
  7467  017016  6EDA               	movwf	fsr2h,c
  7468  017018  0EFF               	movlw	255
  7469  01701A  22DA               	addwfc	fsr2h,f,c
  7470  01701C  52DE               	movf	postinc2,f,c
  7471  01701E  52DE               	movf	postinc2,f,c
  7472  017020  52DE               	movf	postinc2,f,c
  7473  017022  0EFE               	movlw	254
  7474  017024  14DD               	andwf	postdec2,w,c
  7475  017026  B4D8               	btfsc	status,2,c
  7476  017028  D018               	goto	l9209
  7477  01702A  D7E6               	goto	l9199
  7478  01702C                     l9203:
  7479                           
  7480                           ;stkvar	_exp @ sp[(-5)+4]
  7481  01702C  0EFF               	movlw	-1
  7482  01702E  2AE3               	incf	plusw1,f,c
  7483                           
  7484                           ;stkvar	_arg @ sp[(-5)+0]
  7485  017030  50E1               	movf	fsr1l,w,c
  7486  017032  0FFB               	addlw	-5
  7487  017034  6ED9               	movwf	fsr2l,c
  7488  017036  50E2               	movf	fsr1h,w,c
  7489  017038  6EDA               	movwf	fsr2h,c
  7490  01703A  0EFF               	movlw	255
  7491  01703C  22DA               	addwfc	fsr2h,f,c
  7492  01703E  2ADE               	incf	postinc2,f,c
  7493  017040  0E00               	movlw	0
  7494  017042  22DE               	addwfc	postinc2,f,c
  7495  017044  22DE               	addwfc	postinc2,f,c
  7496  017046  22DE               	addwfc	postinc2,f,c
  7497                           
  7498                           ;stkvar	_arg @ sp[(-5)+0]
  7499  017048  90D8               	bcf	status,0,c
  7500  01704A  0EFE               	movlw	-2
  7501  01704C  32E3               	rrcf	plusw1,f,c
  7502  01704E  0EFD               	movlw	-3
  7503  017050  32E3               	rrcf	plusw1,f,c
  7504  017052  0EFC               	movlw	-4
  7505  017054  32E3               	rrcf	plusw1,f,c
  7506  017056  0EFB               	movlw	-5
  7507  017058  32E3               	rrcf	plusw1,f,c
  7508  01705A                     l9209:
  7509                           
  7510                           ;stkvar	_arg @ sp[(-5)+0]
  7511  01705A  50E1               	movf	fsr1l,w,c
  7512  01705C  0FFB               	addlw	-5
  7513  01705E  6ED9               	movwf	fsr2l,c
  7514  017060  50E2               	movf	fsr1h,w,c
  7515  017062  6EDA               	movwf	fsr2h,c
  7516  017064  0EFF               	movlw	255
  7517  017066  22DA               	addwfc	fsr2h,f,c
  7518  017068  52DE               	movf	postinc2,f,c
  7519  01706A  52DE               	movf	postinc2,f,c
  7520  01706C  52DE               	movf	postinc2,f,c
  7521  01706E  0EFF               	movlw	255
  7522  017070  14DD               	andwf	postdec2,w,c
  7523  017072  B4D8               	btfsc	status,2,c
  7524  017074  D00C               	goto	l9213
  7525  017076  D7DA               	goto	l9203
  7526  017078                     l9211:
  7527                           
  7528                           ;stkvar	_exp @ sp[(-5)+4]
  7529  017078  0EFF               	movlw	-1
  7530  01707A  06E3               	decf	plusw1,f,c
  7531                           
  7532                           ;stkvar	_arg @ sp[(-5)+0]
  7533  01707C  90D8               	bcf	status,0,c
  7534  01707E  0EFB               	movlw	-5
  7535  017080  36E3               	rlcf	plusw1,f,c
  7536  017082  0EFC               	movlw	-4
  7537  017084  36E3               	rlcf	plusw1,f,c
  7538  017086  0EFD               	movlw	-3
  7539  017088  36E3               	rlcf	plusw1,f,c
  7540  01708A  0EFE               	movlw	-2
  7541  01708C  36E3               	rlcf	plusw1,f,c
  7542  01708E                     l9213:
  7543                           
  7544                           ;stkvar	_arg @ sp[(-5)+0]
  7545  01708E  0EFD               	movlw	-3
  7546  017090  BEE3               	btfsc	plusw1,7,c
  7547  017092  D007               	goto	u8710
  7548                           
  7549                           ;stkvar	_exp @ sp[(-5)+4]
  7550  017094  0EFF               	movlw	-1
  7551  017096  006F FF8C  F001    	movff	plusw1,btemp
  7552  01709C  0E02               	movlw	2
  7553  01709E  6001               	cpfslt	btemp^0,c
  7554  0170A0  D7EB               	goto	l9211
  7555  0170A2                     u8710:
  7556                           
  7557                           ;stkvar	_exp @ sp[(-5)+4]
  7558  0170A2  0EFF               	movlw	-1
  7559  0170A4  B0E3               	btfsc	plusw1,0,c
  7560  0170A6  D002               	goto	l9221
  7561                           
  7562                           ;stkvar	_arg @ sp[(-5)+0]
  7563  0170A8  0EFD               	movlw	-3
  7564  0170AA  9EE3               	bcf	plusw1,7,c
  7565  0170AC                     l9221:
  7566                           
  7567                           ;stkvar	_exp @ sp[(-5)+4]
  7568  0170AC  50E1               	movf	fsr1l,w,c
  7569  0170AE  0FFF               	addlw	-1
  7570  0170B0  6ED9               	movwf	fsr2l,c
  7571  0170B2  50E2               	movf	fsr1h,w,c
  7572  0170B4  6EDA               	movwf	fsr2h,c
  7573  0170B6  0EFF               	movlw	255
  7574  0170B8  22DA               	addwfc	fsr2h,f,c
  7575  0170BA  90D8               	bcf	status,0,c
  7576  0170BC  32DF               	rrcf	indf2,f,c
  7577                           
  7578                           ;stkvar	_exp @ sp[(-5)+4]
  7579  0170BE  0EFF               	movlw	-1
  7580  0170C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7581  0170C6  0060  F030  F005   	movff	btemp+11,btemp+4
  7582  0170CC  6A06               	clrf	(btemp+5)^0,c
  7583  0170CE  6A07               	clrf	(btemp+6)^0,c
  7584  0170D0  6A08               	clrf	(btemp+7)^0,c
  7585  0170D2  0060  F014  F008   	movff	btemp+4,btemp+7
  7586  0170D8  6A07               	clrf	(btemp+6)^0,c
  7587  0170DA  6A06               	clrf	(btemp+5)^0,c
  7588  0170DC  6A05               	clrf	(btemp+4)^0,c
  7589                           
  7590                           ;stkvar	_arg @ sp[(-5)+0]
  7591  0170DE  50E1               	movf	fsr1l,w,c
  7592  0170E0  0FFB               	addlw	-5
  7593  0170E2  6ED9               	movwf	fsr2l,c
  7594  0170E4  50E2               	movf	fsr1h,w,c
  7595  0170E6  6EDA               	movwf	fsr2h,c
  7596  0170E8  0EFF               	movlw	255
  7597  0170EA  22DA               	addwfc	fsr2h,f,c
  7598  0170EC  5005               	movf	(btemp+4)^0,w,c
  7599  0170EE  12DE               	iorwf	postinc2,f,c
  7600  0170F0  5006               	movf	(btemp+5)^0,w,c
  7601  0170F2  12DE               	iorwf	postinc2,f,c
  7602  0170F4  5007               	movf	(btemp+6)^0,w,c
  7603  0170F6  12DE               	iorwf	postinc2,f,c
  7604  0170F8  5008               	movf	(btemp+7)^0,w,c
  7605  0170FA  12DE               	iorwf	postinc2,f,c
  7606                           
  7607                           ;stkvar	_sign @ sp[(-5)+-1]
  7608  0170FC  0EFA               	movlw	-6
  7609  0170FE  50E3               	movf	plusw1,w,c
  7610  017100  B4D8               	btfsc	status,2,c
  7611  017102  D005               	goto	l9231
  7612                           
  7613                           ;stkvar	_val @ sp[(-5)+-5]
  7614  017104  0EF9               	movlw	-7
  7615  017106  AEE3               	btfss	plusw1,7,c
  7616  017108  D002               	goto	l9231
  7617                           
  7618                           ;stkvar	_arg @ sp[(-5)+0]
  7619  01710A  0EFE               	movlw	-2
  7620  01710C  8EE3               	bsf	plusw1,7,c
  7621  01710E                     l9231:
  7622                           
  7623                           ;stkvar	_arg @ sp[(-5)+0]
  7624  01710E  0EFB               	movlw	-5
  7625  017110  006F FF8C  F001    	movff	plusw1,btemp
  7626  017116  0EFC               	movlw	-4
  7627  017118  006F FF8C  F002    	movff	plusw1,btemp+1
  7628  01711E  0EFD               	movlw	-3
  7629  017120  006F FF8C  F003    	movff	plusw1,btemp+2
  7630  017126  0EFE               	movlw	-2
  7631  017128  006F FF8C  F004    	movff	plusw1,btemp+3
  7632  01712E                     l2928:
  7633                           
  7634                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  7635  01712E  0EF6               	movlw	246
  7636  017130  26E1               	addwf	fsr1l,f,c
  7637  017132  0EFF               	movlw	255
  7638  017134  22E2               	addwfc	fsr1h,f,c
  7639  017136  0012               	return		;funcret
  7640  017138                     __end_of___xxtofl:
  7641                           	opt callstack 0
  7642                           
  7643 ;; *************** function _clear_hid_pflags *****************
  7644 ;; Defined at:
  7645 ;;		line 51 in file "hid.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  h               1  [STACK] PTR struct H_data
  7648 ;;		 -> H(7), 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1  [STACK] void 
  7653 ;; Registers used:
  7654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7655 ;; Tracked objects:
  7656 ;;		On entry : 3F/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7664 ;;Total ram usage:        0 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; Hardware stack levels required when called:   15
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_main
  7671 ;; This function uses a reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text26
  7675  01A574                     __ptext26:
  7676                           	opt callstack 0
  7677  01A574                     _clear_hid_pflags:
  7678                           	opt callstack 15
  7679                           
  7680                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7681                           ;stkvar	_h @ sp[(0)+-1]
  7682                           
  7683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7684                           ;incstack = 0
  7685  01A574  0EFF               	movlw	-1
  7686  01A576  50E3               	movf	plusw1,w,c
  7687  01A578  6ED9               	movwf	fsr2l,c
  7688  01A57A  6ADA               	clrf	fsr2h,c
  7689  01A57C  0E03               	movlw	3
  7690  01A57E  26D9               	addwf	fsr2l,f,c
  7691  01A580  0E00               	movlw	0
  7692  01A582  6EDF               	movwf	indf2,c
  7693                           
  7694                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7695                           ;stkvar	_h @ sp[(0)+-1]
  7696  01A584  0EFF               	movlw	-1
  7697  01A586  50E3               	movf	plusw1,w,c
  7698  01A588  6ED9               	movwf	fsr2l,c
  7699  01A58A  6ADA               	clrf	fsr2h,c
  7700  01A58C  0E05               	movlw	5
  7701  01A58E  26D9               	addwf	fsr2l,f,c
  7702  01A590  0E00               	movlw	0
  7703  01A592  6EDF               	movwf	indf2,c
  7704                           
  7705                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7706  01A594  52E5               	movf	postdec1,f,c
  7707  01A596  0012               	return		;funcret
  7708  01A598                     __end_of_clear_hid_pflags:
  7709                           	opt callstack 0
  7710                           
  7711 ;; *************** function _clear_adc_scan *****************
  7712 ;; Defined at:
  7713 ;;		line 64 in file "daq.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;		None
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;		None
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  1  [STACK] void 
  7720 ;; Registers used:
  7721 ;;		None
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/1
  7724 ;;		On exit  : 3F/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7731 ;;Total ram usage:        0 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:   15
  7734 ;; This function calls:
  7735 ;;		Nothing
  7736 ;; This function is called by:
  7737 ;;		_main
  7738 ;; This function uses a reentrant model
  7739 ;;
  7740                           
  7741                           	psect	text27
  7742  01A8FA                     __ptext27:
  7743                           	opt callstack 0
  7744  01A8FA                     _clear_adc_scan:
  7745                           	opt callstack 15
  7746                           
  7747                           ;daq.c: 66:  R.done = 0;
  7748                           
  7749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7750                           ;incstack = 0
  7751  01A8FA  0100               	movlb	0	; () banked
  7752  01A8FC  6BF2               	clrf	(_R+39)& (0+255),b	;volatile
  7753                           
  7754                           ; BSR set to: 0
  7755                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7756  01A8FE  0012               	return		;funcret
  7757  01A900                     __end_of_clear_adc_scan:
  7758                           	opt callstack 0
  7759                           
  7760 ;; *************** function _check_help *****************
  7761 ;; Defined at:
  7762 ;;		line 40 in file "mconfig.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  flipper         1  [STACK] const _Bool 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  estatus         1    0        _Bool 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1  [STACK] _Bool 
  7769 ;; Registers used:
  7770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7771 ;; Tracked objects:
  7772 ;;		On entry : 3F/2
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7780 ;;Total ram usage:        0 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:   27
  7783 ;; This function calls:
  7784 ;;		_StartTimer
  7785 ;;		_TimerDone
  7786 ;;		_display_help
  7787 ;;		_display_info
  7788 ;;		_get_vterm_ptr
  7789 ;;		_help_button
  7790 ;;		_mode_lamp_bright
  7791 ;;		_mode_lamp_dim
  7792 ;;		_set_display_info
  7793 ;;		_set_temp_display_help
  7794 ;;		_set_vterm
  7795 ;;		_sprintf
  7796 ;;		_update_lcd
  7797 ;;		_vterm_dump
  7798 ;; This function is called by:
  7799 ;;		_main
  7800 ;; This function uses a reentrant model
  7801 ;;
  7802                           
  7803                           	psect	text28
  7804  016D22                     __ptext28:
  7805                           	opt callstack 0
  7806  016D22                     _check_help:
  7807                           	opt callstack 3
  7808                           
  7809                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7810                           
  7811                           ; BSR set to: 0
  7812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7813                           ;incstack = 0
  7814  016D22  ECCF  F0CF         	call	_help_button	;wreg free
  7815  016D26  5001               	movf	btemp^0,w,c
  7816  016D28  B4D8               	btfsc	status,2,c
  7817  016D2A  D0D0               	goto	l12127
  7818  016D2C  EC6D  F0D4         	call	_display_info	;wreg free
  7819  016D30  0401               	decf	btemp^0,w,c
  7820  016D32  B4D8               	btfsc	status,2,c
  7821  016D34  D0CB               	goto	l12127
  7822                           
  7823                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7824  016D36  0EDC               	movlw	220
  7825  016D38  6EE6               	movwf	postinc1,c
  7826  016D3A  0E05               	movlw	5
  7827  016D3C  6EE6               	movwf	postinc1,c
  7828  016D3E  0E0B               	movlw	11
  7829  016D40  6EE6               	movwf	postinc1,c
  7830  016D42  EC30  F0CF         	call	_StartTimer	;wreg free
  7831                           
  7832                           ;mconfig.c: 48:   if (V.debug)
  7833  016D46  0102               	movlb	2	; () banked
  7834  016D48  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7835                           
  7836                           ; BSR set to: 2
  7837                           ;mconfig.c: 49:    vterm_dump();
  7838  016D4A  EC20  F0C0         	call	_vterm_dump	;wreg free
  7839                           
  7840                           ;mconfig.c: 51:   set_vterm(1);
  7841  016D4E  0E01               	movlw	1
  7842  016D50  6EE6               	movwf	postinc1,c
  7843  016D52  EC75  F0D3         	call	_set_vterm	;wreg free
  7844                           
  7845                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7846  016D56  EC6D  F0D4         	call	_display_info	;wreg free
  7847  016D5A  5001               	movf	btemp^0,w,c
  7848  016D5C  6EE6               	movwf	postinc1,c
  7849  016D5E  EC27  F0D4         	call	_set_temp_display_help	;wreg free
  7850                           
  7851                           ; BSR set to: 2
  7852                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7853  016D62  0E01               	movlw	1
  7854  016D64  6EE6               	movwf	postinc1,c
  7855  016D66  EC84  F0D3         	call	_set_display_info	;wreg free
  7856                           
  7857                           ;mconfig.c: 54:   if (flipper) {
  7858                           ;stkvar	_flipper @ sp[(0)+-1]
  7859  016D6A  0EFF               	movlw	-1
  7860  016D6C  50E3               	movf	plusw1,w,c
  7861  016D6E  B4D8               	btfsc	status,2,c
  7862  016D70  D019               	goto	l12113
  7863                           
  7864                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7865  016D72  0EB4               	movlw	low STR_31
  7866  016D74  6EE6               	movwf	postinc1,c
  7867  016D76  0EFF               	movlw	high STR_31
  7868  016D78  6EE6               	movwf	postinc1,c
  7869  016D7A  0E33               	movlw	low STR_33
  7870  016D7C  6EE6               	movwf	postinc1,c
  7871  016D7E  0EFE               	movlw	high STR_33
  7872  016D80  6EE6               	movwf	postinc1,c
  7873  016D82  0E01               	movlw	1
  7874  016D84  6EE6               	movwf	postinc1,c
  7875  016D86  0E00               	movlw	0
  7876  016D88  6EE6               	movwf	postinc1,c
  7877  016D8A  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  7878  016D8E  0060  F007  FFE6   	movff	btemp,postinc1
  7879  016D94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7880  016D9A  0E06               	movlw	6
  7881  016D9C  6EE6               	movwf	postinc1,c
  7882  016D9E  EC02  F0C4         	call	_sprintf	;wreg free
  7883                           
  7884                           ;mconfig.c: 56:   } else {
  7885  016DA2  D018               	goto	l1645
  7886  016DA4                     l12113:
  7887                           
  7888                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7889  016DA4  0ECA               	movlw	low STR_32
  7890  016DA6  6EE6               	movwf	postinc1,c
  7891  016DA8  0EFF               	movlw	high STR_32
  7892  016DAA  6EE6               	movwf	postinc1,c
  7893  016DAC  0E33               	movlw	low STR_33
  7894  016DAE  6EE6               	movwf	postinc1,c
  7895  016DB0  0EFE               	movlw	high STR_33
  7896  016DB2  6EE6               	movwf	postinc1,c
  7897  016DB4  0E01               	movlw	1
  7898  016DB6  6EE6               	movwf	postinc1,c
  7899  016DB8  0E00               	movlw	0
  7900  016DBA  6EE6               	movwf	postinc1,c
  7901  016DBC  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  7902  016DC0  0060  F007  FFE6   	movff	btemp,postinc1
  7903  016DC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7904  016DCC  0E06               	movlw	6
  7905  016DCE  6EE6               	movwf	postinc1,c
  7906  016DD0  EC02  F0C4         	call	_sprintf	;wreg free
  7907  016DD4                     l1645:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7911  016DD4  0102               	movlb	2	; () banked
  7912  016DD6  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7913  016DD8  32E8               	rrcf	wreg,f,c
  7914  016DDA  32E8               	rrcf	wreg,f,c
  7915  016DDC  0B03               	andlw	3
  7916  016DDE  0D24               	mullw	36
  7917  016DE0  0E12               	movlw	18
  7918  016DE2  26F3               	addwf	243,f,c
  7919  016DE4  0E00               	movlw	0
  7920  016DE6  22F4               	addwfc	244,f,c
  7921  016DE8  0E01               	movlw	low _T
  7922  016DEA  6E0B               	movwf	(btemp+10)^0,c
  7923  016DEC  0EFD               	movlw	high _T
  7924  016DEE  6E0C               	movwf	(btemp+11)^0,c
  7925  016DF0  50F3               	movf	243,w,c
  7926  016DF2  260B               	addwf	(btemp+10)^0,f,c
  7927  016DF4  50F4               	movf	244,w,c
  7928  016DF6  220C               	addwfc	(btemp+11)^0,f,c
  7929  016DF8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7930  016DFE  0060  F033  FFE6   	movff	btemp+11,postinc1
  7931  016E04  0EC0               	movlw	low STR_35
  7932  016E06  6EE6               	movwf	postinc1,c
  7933  016E08  0EFF               	movlw	high STR_35
  7934  016E0A  6EE6               	movwf	postinc1,c
  7935  016E0C  0E01               	movlw	1
  7936  016E0E  6EE6               	movwf	postinc1,c
  7937  016E10  0E01               	movlw	1
  7938  016E12  6EE6               	movwf	postinc1,c
  7939  016E14  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  7940  016E18  0060  F007  FFE6   	movff	btemp,postinc1
  7941  016E1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7942  016E24  0E06               	movlw	6
  7943  016E26  6EE6               	movwf	postinc1,c
  7944  016E28  EC02  F0C4         	call	_sprintf	;wreg free
  7945                           
  7946                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  7947  016E2C  0102               	movlb	2	; () banked
  7948  016E2E  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7949  016E30  32E8               	rrcf	wreg,f,c
  7950  016E32  32E8               	rrcf	wreg,f,c
  7951  016E34  0B03               	andlw	3
  7952  016E36  0D24               	mullw	36
  7953  016E38  0E01               	movlw	low _T
  7954  016E3A  6E0B               	movwf	(btemp+10)^0,c
  7955  016E3C  0EFD               	movlw	high _T
  7956  016E3E  6E0C               	movwf	(btemp+11)^0,c
  7957  016E40  50F3               	movf	243,w,c
  7958  016E42  260B               	addwf	(btemp+10)^0,f,c
  7959  016E44  50F4               	movf	244,w,c
  7960  016E46  220C               	addwfc	(btemp+11)^0,f,c
  7961  016E48  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7962  016E4E  0060  F033  FFE6   	movff	btemp+11,postinc1
  7963  016E54  0EC0               	movlw	low STR_35
  7964  016E56  6EE6               	movwf	postinc1,c
  7965  016E58  0EFF               	movlw	high STR_35
  7966  016E5A  6EE6               	movwf	postinc1,c
  7967  016E5C  0E01               	movlw	1
  7968  016E5E  6EE6               	movwf	postinc1,c
  7969  016E60  0E02               	movlw	2
  7970  016E62  6EE6               	movwf	postinc1,c
  7971  016E64  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  7972  016E68  0060  F007  FFE6   	movff	btemp,postinc1
  7973  016E6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7974  016E74  0E06               	movlw	6
  7975  016E76  6EE6               	movwf	postinc1,c
  7976  016E78  EC02  F0C4         	call	_sprintf	;wreg free
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;mconfig.c: 61:   V.help_id++;
  7980  016E7C  EE20  F29B         	lfsr	2,_V+155	;volatile
  7981  016E80  38DF               	swapf	223,w,c
  7982  016E82  6E0C               	movwf	(btemp+11)^0,c
  7983  016E84  320C               	rrcf	(btemp+11)^0,f,c
  7984  016E86  300C               	rrcf	(btemp+11)^0,w,c
  7985  016E88  0B03               	andlw	3
  7986  016E8A  6E0C               	movwf	(btemp+11)^0,c
  7987  016E8C  2A0C               	incf	(btemp+11)^0,f,c
  7988  016E8E  3A0C               	swapf	(btemp+11)^0,f,c
  7989  016E90  360C               	rlcf	(btemp+11)^0,f,c
  7990  016E92  360C               	rlcf	(btemp+11)^0,f,c
  7991  016E94  50DF               	movf	223,w,c
  7992  016E96  180C               	xorwf	(btemp+11)^0,w,c
  7993  016E98  0B3F               	andlw	-193
  7994  016E9A  180C               	xorwf	(btemp+11)^0,w,c
  7995  016E9C  6EDF               	movwf	223,c
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  7999  016E9E  0EB8               	movlw	184
  8000  016EA0  6EE6               	movwf	postinc1,c
  8001  016EA2  0E0B               	movlw	11
  8002  016EA4  6EE6               	movwf	postinc1,c
  8003  016EA6  0E09               	movlw	9
  8004  016EA8  6EE6               	movwf	postinc1,c
  8005  016EAA  EC30  F0CF         	call	_StartTimer	;wreg free
  8006                           
  8007                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8008  016EAE  0EB8               	movlw	184
  8009  016EB0  6EE6               	movwf	postinc1,c
  8010  016EB2  0E0B               	movlw	11
  8011  016EB4  6EE6               	movwf	postinc1,c
  8012  016EB6  0E07               	movlw	7
  8013  016EB8  6EE6               	movwf	postinc1,c
  8014  016EBA  EC30  F0CF         	call	_StartTimer	;wreg free
  8015                           
  8016                           ;mconfig.c: 64:   mode_lamp_bright();
  8017  016EBE  EC36  F0D4         	call	_mode_lamp_bright	;wreg free
  8018                           
  8019                           ;mconfig.c: 65:   update_lcd(1);
  8020  016EC2  0E01               	movlw	1
  8021  016EC4  6EE6               	movwf	postinc1,c
  8022  016EC6  ECF3  F0C2         	call	_update_lcd	;wreg free
  8023                           
  8024                           ;mconfig.c: 67:  } else {
  8025  016ECA  D032               	goto	l1646
  8026  016ECC                     l12127:
  8027                           
  8028                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8029  016ECC  0E09               	movlw	9
  8030  016ECE  6EE6               	movwf	postinc1,c
  8031  016ED0  EC8F  F0D1         	call	_TimerDone	;wreg free
  8032  016ED4  5001               	movf	btemp^0,w,c
  8033  016ED6  B4D8               	btfsc	status,2,c
  8034  016ED8  D02B               	goto	l1646
  8035                           
  8036                           ;mconfig.c: 69:    set_vterm(0);
  8037  016EDA  0E00               	movlw	0
  8038  016EDC  6EE6               	movwf	postinc1,c
  8039  016EDE  EC75  F0D3         	call	_set_vterm	;wreg free
  8040                           
  8041                           ;mconfig.c: 70:    V.help = 0;
  8042  016EE2  0102               	movlb	2	; () banked
  8043  016EE4  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8044                           
  8045                           ; BSR set to: 2
  8046                           ;mconfig.c: 71:    set_display_info(display_help());
  8047  016EE6  EC71  F0D4         	call	_display_help	;wreg free
  8048  016EEA  5001               	movf	btemp^0,w,c
  8049  016EEC  6EE6               	movwf	postinc1,c
  8050  016EEE  EC84  F0D3         	call	_set_display_info	;wreg free
  8051                           
  8052                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8053  016EF2  0060  FA57  FFE6   	movff	_V+149,postinc1
  8054  016EF8  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8055  016EFE  ECCB  F0D3         	call	_mode_lamp_dim	;wreg free
  8056                           
  8057                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8058  016F02  0E0B               	movlw	11
  8059  016F04  6EE6               	movwf	postinc1,c
  8060  016F06  EC8F  F0D1         	call	_TimerDone	;wreg free
  8061  016F0A  5001               	movf	btemp^0,w,c
  8062  016F0C  B4D8               	btfsc	status,2,c
  8063  016F0E  D010               	goto	l1646
  8064                           
  8065                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8066  016F10  0102               	movlb	2	; () banked
  8067  016F12  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  8068  016F14  A4D8               	btfss	status,2,c
  8069  016F16  D002               	goto	u11690
  8070  016F18  0E01               	movlw	1
  8071  016F1A  D001               	goto	u11700
  8072  016F1C                     u11690:
  8073  016F1C  0E00               	movlw	0
  8074  016F1E                     u11700:
  8075  016F1E  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  8076                           
  8077                           ; BSR set to: 2
  8078                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8079  016F20  0EDC               	movlw	220
  8080  016F22  6EE6               	movwf	postinc1,c
  8081  016F24  0E05               	movlw	5
  8082  016F26  6EE6               	movwf	postinc1,c
  8083  016F28  0E0B               	movlw	11
  8084  016F2A  6EE6               	movwf	postinc1,c
  8085  016F2C  EC30  F0CF         	call	_StartTimer	;wreg free
  8086  016F30                     l1646:
  8087                           
  8088                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8089  016F30  52E5               	movf	postdec1,f,c
  8090  016F32  0012               	return		;funcret
  8091  016F34                     __end_of_check_help:
  8092                           	opt callstack 0
  8093                           
  8094 ;; *************** function _vterm_dump *****************
  8095 ;; Defined at:
  8096 ;;		line 121 in file "mconfig.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;		None
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1  [STACK] void 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8105 ;; Tracked objects:
  8106 ;;		On entry : 3F/2
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8114 ;;Total ram usage:        0 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:   26
  8117 ;; This function calls:
  8118 ;;		_WaitMs
  8119 ;;		_eaDogM_WriteStringAtPos
  8120 ;;		_get_vterm_ptr
  8121 ;;		_sprintf
  8122 ;;		_wait_lcd_done
  8123 ;; This function is called by:
  8124 ;;		_check_help
  8125 ;; This function uses a reentrant model
  8126 ;;
  8127                           
  8128                           	psect	text29
  8129  018040                     __ptext29:
  8130                           	opt callstack 0
  8131  018040                     _vterm_dump:
  8132                           	opt callstack 3
  8133                           
  8134                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8135                           
  8136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8137                           ;incstack = 0
  8138  018040  0E01               	movlw	1
  8139  018042  6EE6               	movwf	postinc1,c
  8140  018044  0E00               	movlw	0
  8141  018046  6EE6               	movwf	postinc1,c
  8142  018048  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  8143  01804C  0060  F007  FFE6   	movff	btemp,postinc1
  8144  018052  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8145  018058  0E00               	movlw	0
  8146  01805A  6EE6               	movwf	postinc1,c
  8147  01805C  0E00               	movlw	0
  8148  01805E  6EE6               	movwf	postinc1,c
  8149  018060  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  8150  018064  0060  F007  FFE6   	movff	btemp,postinc1
  8151  01806A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8152  018070  0E96               	movlw	low STR_37
  8153  018072  6EE6               	movwf	postinc1,c
  8154  018074  0EFF               	movlw	high STR_37
  8155  018076  6EE6               	movwf	postinc1,c
  8156  018078  0E01               	movlw	low (_V+1)
  8157  01807A  6EE6               	movwf	postinc1,c
  8158  01807C  0E02               	movlw	high (_V+1)
  8159  01807E  6EE6               	movwf	postinc1,c
  8160  018080  0E08               	movlw	8
  8161  018082  6EE6               	movwf	postinc1,c
  8162  018084  EC02  F0C4         	call	_sprintf	;wreg free
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;mconfig.c: 124:  wait_lcd_done();
  8166  018088  ECA2  F0D3         	call	_wait_lcd_done	;wreg free
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8170  01808C  0E01               	movlw	low (_V+1)
  8171  01808E  6EE6               	movwf	postinc1,c
  8172  018090  0E02               	movlw	high (_V+1)
  8173  018092  6EE6               	movwf	postinc1,c
  8174  018094  0E00               	movlw	0
  8175  018096  6EE6               	movwf	postinc1,c
  8176  018098  0E00               	movlw	0
  8177  01809A  6EE6               	movwf	postinc1,c
  8178  01809C  EC06  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8179                           
  8180                           ; BSR set to: 59
  8181                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  8182  0180A0  0E01               	movlw	1
  8183  0180A2  6EE6               	movwf	postinc1,c
  8184  0180A4  0E01               	movlw	1
  8185  0180A6  6EE6               	movwf	postinc1,c
  8186  0180A8  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  8187  0180AC  0060  F007  FFE6   	movff	btemp,postinc1
  8188  0180B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8189  0180B8  0E00               	movlw	0
  8190  0180BA  6EE6               	movwf	postinc1,c
  8191  0180BC  0E01               	movlw	1
  8192  0180BE  6EE6               	movwf	postinc1,c
  8193  0180C0  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  8194  0180C4  0060  F007  FFE6   	movff	btemp,postinc1
  8195  0180CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8196  0180D0  0E96               	movlw	low STR_37
  8197  0180D2  6EE6               	movwf	postinc1,c
  8198  0180D4  0EFF               	movlw	high STR_37
  8199  0180D6  6EE6               	movwf	postinc1,c
  8200  0180D8  0E01               	movlw	low (_V+1)
  8201  0180DA  6EE6               	movwf	postinc1,c
  8202  0180DC  0E02               	movlw	high (_V+1)
  8203  0180DE  6EE6               	movwf	postinc1,c
  8204  0180E0  0E08               	movlw	8
  8205  0180E2  6EE6               	movwf	postinc1,c
  8206  0180E4  EC02  F0C4         	call	_sprintf	;wreg free
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;mconfig.c: 127:  wait_lcd_done();
  8210  0180E8  ECA2  F0D3         	call	_wait_lcd_done	;wreg free
  8211                           
  8212                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  8213  0180EC  0E01               	movlw	low (_V+1)
  8214  0180EE  6EE6               	movwf	postinc1,c
  8215  0180F0  0E02               	movlw	high (_V+1)
  8216  0180F2  6EE6               	movwf	postinc1,c
  8217  0180F4  0E00               	movlw	0
  8218  0180F6  6EE6               	movwf	postinc1,c
  8219  0180F8  0E01               	movlw	1
  8220  0180FA  6EE6               	movwf	postinc1,c
  8221  0180FC  EC06  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8222                           
  8223                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  8224  018100  0E01               	movlw	1
  8225  018102  6EE6               	movwf	postinc1,c
  8226  018104  0E02               	movlw	2
  8227  018106  6EE6               	movwf	postinc1,c
  8228  018108  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  8229  01810C  0060  F007  FFE6   	movff	btemp,postinc1
  8230  018112  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8231  018118  0E00               	movlw	0
  8232  01811A  6EE6               	movwf	postinc1,c
  8233  01811C  0E02               	movlw	2
  8234  01811E  6EE6               	movwf	postinc1,c
  8235  018120  ECE7  F0D0         	call	_get_vterm_ptr	;wreg free
  8236  018124  0060  F007  FFE6   	movff	btemp,postinc1
  8237  01812A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8238  018130  0E96               	movlw	low STR_37
  8239  018132  6EE6               	movwf	postinc1,c
  8240  018134  0EFF               	movlw	high STR_37
  8241  018136  6EE6               	movwf	postinc1,c
  8242  018138  0E01               	movlw	low (_V+1)
  8243  01813A  6EE6               	movwf	postinc1,c
  8244  01813C  0E02               	movlw	high (_V+1)
  8245  01813E  6EE6               	movwf	postinc1,c
  8246  018140  0E08               	movlw	8
  8247  018142  6EE6               	movwf	postinc1,c
  8248  018144  EC02  F0C4         	call	_sprintf	;wreg free
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;mconfig.c: 130:  wait_lcd_done();
  8252  018148  ECA2  F0D3         	call	_wait_lcd_done	;wreg free
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  8256  01814C  0E01               	movlw	low (_V+1)
  8257  01814E  6EE6               	movwf	postinc1,c
  8258  018150  0E02               	movlw	high (_V+1)
  8259  018152  6EE6               	movwf	postinc1,c
  8260  018154  0E00               	movlw	0
  8261  018156  6EE6               	movwf	postinc1,c
  8262  018158  0E02               	movlw	2
  8263  01815A  6EE6               	movwf	postinc1,c
  8264  01815C  EC06  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8265                           
  8266                           ; BSR set to: 59
  8267                           ;mconfig.c: 132:  WaitMs(3000);
  8268  018160  0EB8               	movlw	184
  8269  018162  6EE6               	movwf	postinc1,c
  8270  018164  0E0B               	movlw	11
  8271  018166  6EE6               	movwf	postinc1,c
  8272  018168  ECEB  F0CF         	call	_WaitMs	;wreg free
  8273                           
  8274                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8275  01816C  0012               	return		;funcret
  8276  01816E                     __end_of_vterm_dump:
  8277                           	opt callstack 0
  8278                           
  8279 ;; *************** function _sprintf *****************
  8280 ;; Defined at:
  8281 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  s               2  [STACK] PTR unsigned char 
  8284 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  8285 ;;  fmt             2  [STACK] PTR const unsigned char 
  8286 ;;		 -> STR_50(79), STR_48(3), STR_47(3), STR_46(19), 
  8287 ;;		 -> STR_45(19), STR_44(19), STR_43(19), STR_42(19), 
  8288 ;;		 -> STR_41(19), STR_40(24), STR_39(15), STR_38(15), 
  8289 ;;		 -> STR_37(15), STR_36(10), STR_35(10), STR_34(19), 
  8290 ;;		 -> STR_33(19), STR_27(17), STR_26(16), STR_25(16), 
  8291 ;;		 -> STR_24(19), STR_23(20), STR_22(19), STR_21(19), 
  8292 ;;		 -> STR_20(19), STR_19(19), STR_18(19), STR_17(19), 
  8293 ;;		 -> STR_16(19), STR_15(17), STR_14(16), STR_13(16), 
  8294 ;;		 -> STR_12(16), STR_11(16), STR_10(16), STR_9(16), 
  8295 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  8296 ;;		 -> STR_2(15), STR_1(17), 
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;  f               6  [STACK] struct _IO_FILE
  8299 ;;  ap              2  [STACK] PTR void [1]
  8300 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8301 ;;  ret             2    0        int 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  2  [STACK] int 
  8304 ;; Registers used:
  8305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/2
  8308 ;;		On exit  : 3F/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8315 ;;Total ram usage:        0 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:   23
  8318 ;; This function calls:
  8319 ;;		_vfprintf
  8320 ;; This function is called by:
  8321 ;;		_main
  8322 ;;		_check_help
  8323 ;;		_vterm_dump
  8324 ;;		_calc_bsoc
  8325 ;; This function uses a reentrant model
  8326 ;;
  8327                           
  8328                           	psect	text30
  8329  018804                     __ptext30:
  8330                           	opt callstack 0
  8331  018804                     _sprintf:
  8332                           	opt callstack 0
  8333                           
  8334                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8335  018804  0E08               	movlw	8
  8336  018806  26E1               	addwf	fsr1l,f,c
  8337  018808  0E00               	movlw	0
  8338  01880A  22E2               	addwfc	fsr1h,f,c
  8339                           
  8340                           ;incstack = 0
  8341 ;; hardware stack exceeded
  8342  01880C  0EFE               	movlw	254
  8343  01880E  6E0B               	movwf	(btemp+10)^0,c
  8344  018810  0EFF               	movlw	255
  8345  018812  6E0C               	movwf	(btemp+11)^0,c
  8346                           
  8347                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  8348  018814  0EF5               	movlw	245
  8349  018816  24E1               	addwf	fsr1l,w,c
  8350  018818  6E09               	movwf	(btemp+8)^0,c
  8351  01881A  0EFF               	movlw	255
  8352  01881C  20E2               	addwfc	fsr1h,w,c
  8353  01881E  6E0A               	movwf	(btemp+9)^0,c
  8354  018820  500B               	movf	(btemp+10)^0,w,c
  8355  018822  2609               	addwf	(btemp+8)^0,f,c
  8356  018824  500C               	movf	(btemp+11)^0,w,c
  8357  018826  220A               	addwfc	(btemp+9)^0,f,c
  8358                           
  8359                           ;stkvar	_ap @ sp[(-8)+6]
  8360  018828  0EFF               	movlw	-1
  8361  01882A  0060  F02B  FFE3   	movff	btemp+9,plusw1
  8362  018830  0EFE               	movlw	-2
  8363  018832  0060  F027  FFE3   	movff	btemp+8,plusw1
  8364                           
  8365                           ;stkvar	_s @ sp[(-8)+-3]
  8366  018838  0EF5               	movlw	-11
  8367  01883A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8368  018840  0EF6               	movlw	-10
  8369  018842  006F FF8C  F00C    	movff	plusw1,btemp+11
  8370                           
  8371                           ;stkvar	_f @ sp[(-8)+0]
  8372  018848  0EF9               	movlw	-7
  8373  01884A  0060  F033  FFE3   	movff	btemp+11,plusw1
  8374  018850  0EF8               	movlw	-8
  8375  018852  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8376                           
  8377                           ;stkvar	_f @ sp[(-8)+0]
  8378  018858  0EFA               	movlw	250
  8379  01885A  24E1               	addwf	fsr1l,w,c
  8380  01885C  6ED9               	movwf	fsr2l,c
  8381  01885E  0EFF               	movlw	255
  8382  018860  20E2               	addwfc	fsr1h,w,c
  8383  018862  6EDA               	movwf	fsr2h,c
  8384  018864  0E00               	movlw	0
  8385  018866  6EDE               	movwf	postinc2,c
  8386  018868  0E00               	movlw	0
  8387  01886A  6EDD               	movwf	postdec2,c
  8388                           
  8389                           ;stkvar	_f @ sp[(-8)+0]
  8390  01886C  0EFC               	movlw	252
  8391  01886E  24E1               	addwf	fsr1l,w,c
  8392  018870  6ED9               	movwf	fsr2l,c
  8393  018872  0EFF               	movlw	255
  8394  018874  20E2               	addwfc	fsr1h,w,c
  8395  018876  6EDA               	movwf	fsr2h,c
  8396  018878  0E00               	movlw	0
  8397  01887A  6EDE               	movwf	postinc2,c
  8398  01887C  0E00               	movlw	0
  8399  01887E  6EDD               	movwf	postdec2,c
  8400                           
  8401                           ;stkvar	_ap @ sp[(-8)+6]
  8402  018880  0EFE               	movlw	254
  8403  018882  24E1               	addwf	fsr1l,w,c
  8404  018884  6E01               	movwf	btemp^0,c
  8405  018886  0EFF               	movlw	255
  8406  018888  20E2               	addwfc	fsr1h,w,c
  8407  01888A  6E02               	movwf	(btemp+1)^0,c
  8408  01888C  0060  F007  FFE6   	movff	btemp,postinc1
  8409  018892  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8410                           
  8411                           ;stkvar	_fmt @ sp[(-10)+-5]
  8412  018898  0EF1               	movlw	-15
  8413  01889A  006F FF8F FFE6     	movff	plusw1,postinc1
  8414  0188A0  006F FF8F FFE6     	movff	plusw1,postinc1
  8415                           
  8416                           ;stkvar	_f @ sp[(-12)+0]
  8417  0188A6  0EF4               	movlw	244
  8418  0188A8  24E1               	addwf	fsr1l,w,c
  8419  0188AA  6E01               	movwf	btemp^0,c
  8420  0188AC  0EFF               	movlw	255
  8421  0188AE  20E2               	addwfc	fsr1h,w,c
  8422  0188B0  6E02               	movwf	(btemp+1)^0,c
  8423  0188B2  0060  F007  FFE6   	movff	btemp,postinc1
  8424  0188B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8425  0188BE  EC70  F0C7         	call	_vfprintf	;wreg free
  8426                           
  8427                           ; BSR set to: 0
  8428                           ;stkvar	_f @ sp[(-8)+0]
  8429  0188C2  0EFA               	movlw	250
  8430  0188C4  24E1               	addwf	fsr1l,w,c
  8431  0188C6  6ED9               	movwf	fsr2l,c
  8432  0188C8  0EFF               	movlw	255
  8433  0188CA  20E2               	addwfc	fsr1h,w,c
  8434  0188CC  6EDA               	movwf	fsr2h,c
  8435  0188CE  006F FF78  F00B    	movff	postinc2,btemp+10
  8436  0188D4  006F FF74  F00C    	movff	postdec2,btemp+11
  8437                           
  8438                           ;stkvar	_s @ sp[(-8)+-3]
  8439  0188DA  0EF5               	movlw	-11
  8440  0188DC  006F FF8C  F009    	movff	plusw1,btemp+8
  8441  0188E2  0EF6               	movlw	-10
  8442  0188E4  006F FF8C  F00A    	movff	plusw1,btemp+9
  8443  0188EA  500B               	movf	(btemp+10)^0,w,c
  8444  0188EC  2409               	addwf	(btemp+8)^0,w,c
  8445  0188EE  6ED9               	movwf	fsr2l,c
  8446  0188F0  500C               	movf	(btemp+11)^0,w,c
  8447  0188F2  200A               	addwfc	(btemp+9)^0,w,c
  8448  0188F4  6EDA               	movwf	fsr2h,c
  8449  0188F6  0E00               	movlw	0
  8450  0188F8  6EDF               	movwf	indf2,c
  8451                           
  8452                           ; BSR set to: 0
  8453                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, args
      +                          ize = 4, vargsize = 0
  8454  0188FA  0EF8               	movlw	248
  8455  0188FC  26E1               	addwf	fsr1l,f,c
  8456  0188FE  0EFF               	movlw	255
  8457  018900  22E2               	addwfc	fsr1h,f,c
  8458  018902  52E5               	movf	postdec1,f,c
  8459  018904  50E7               	movf	indf1,w,c
  8460  018906  5EE1               	subwf	fsr1l,f,c
  8461  018908  0E00               	movlw	0
  8462  01890A  5AE2               	subwfb	fsr1h,f,c
  8463  01890C  0012               	return		;funcret
  8464  01890E                     __end_of_sprintf:
  8465                           	opt callstack 0
  8466                           
  8467 ;; *************** function _get_vterm_ptr *****************
  8468 ;; Defined at:
  8469 ;;		line 116 in file "mconfig.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  line            1  [STACK] const unsigned char 
  8472 ;;  vterm           1  [STACK] const unsigned char 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  2  [STACK] PTR unsigned char 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/2
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8488 ;;Total ram usage:        0 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:   15
  8491 ;; This function calls:
  8492 ;;		Nothing
  8493 ;; This function is called by:
  8494 ;;		_main
  8495 ;;		_check_help
  8496 ;;		_vterm_dump
  8497 ;; This function uses a reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text31
  8501  01A1CE                     __ptext31:
  8502                           	opt callstack 0
  8503  01A1CE                     _get_vterm_ptr:
  8504                           	opt callstack 15
  8505                           
  8506                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8507                           ;stkvar	_vterm @ sp[(0)+-2]
  8508                           
  8509                           ; BSR set to: 0
  8510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8511                           ;incstack = 0
  8512  01A1CE  0EFE               	movlw	-2
  8513  01A1D0  50E3               	movf	plusw1,w,c
  8514  01A1D2  0B03               	andlw	3
  8515  01A1D4  0D48               	mullw	72
  8516  01A1D6  0EFF               	movlw	low _D
  8517  01A1D8  6E01               	movwf	btemp^0,c
  8518  01A1DA  0E07               	movlw	high _D
  8519  01A1DC  6E02               	movwf	(btemp+1)^0,c
  8520  01A1DE  50F3               	movf	243,w,c
  8521  01A1E0  2601               	addwf	btemp^0,f,c
  8522  01A1E2  50F4               	movf	244,w,c
  8523  01A1E4  2202               	addwfc	(btemp+1)^0,f,c
  8524                           
  8525                           ;stkvar	_line @ sp[(0)+-1]
  8526  01A1E6  0EFF               	movlw	-1
  8527  01A1E8  50E3               	movf	plusw1,w,c
  8528  01A1EA  0B03               	andlw	3
  8529  01A1EC  0D18               	mullw	24
  8530  01A1EE  50F3               	movf	243,w,c
  8531  01A1F0  2601               	addwf	btemp^0,f,c
  8532  01A1F2  50F4               	movf	244,w,c
  8533  01A1F4  2202               	addwfc	(btemp+1)^0,f,c
  8534                           
  8535                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8536  01A1F6  52E5               	movf	postdec1,f,c
  8537  01A1F8  52E5               	movf	postdec1,f,c
  8538  01A1FA  0012               	return		;funcret
  8539  01A1FC                     __end_of_get_vterm_ptr:
  8540                           	opt callstack 0
  8541                           
  8542 ;; *************** function _WaitMs *****************
  8543 ;; Defined at:
  8544 ;;		line 32 in file "timers.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  numMilliseco    2  [STACK] const unsigned short 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1  [STACK] void 
  8551 ;; Registers used:
  8552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/2
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8562 ;;Total ram usage:        0 bytes
  8563 ;; Hardware stack levels used:    1
  8564 ;; Hardware stack levels required when called:   16
  8565 ;; This function calls:
  8566 ;;		_StartTimer
  8567 ;;		_TimerDone
  8568 ;; This function is called by:
  8569 ;;		_main
  8570 ;;		_vterm_dump
  8571 ;; This function uses a reentrant model
  8572 ;;
  8573                           
  8574                           	psect	text32
  8575  019FD6                     __ptext32:
  8576                           	opt callstack 0
  8577  019FD6                     _WaitMs:
  8578                           	opt callstack 12
  8579                           
  8580                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8581                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8582                           
  8583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8584                           ;incstack = 0
  8585  019FD6  0EFE               	movlw	-2
  8586  019FD8  006F FF8F FFE6     	movff	plusw1,postinc1
  8587  019FDE  006F FF8F FFE6     	movff	plusw1,postinc1
  8588  019FE4  0E00               	movlw	0
  8589  019FE6  6EE6               	movwf	postinc1,c
  8590  019FE8  EC30  F0CF         	call	_StartTimer	;wreg free
  8591                           
  8592                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8593  019FEC  D005               	goto	l9121
  8594  019FEE                     l1577:
  8595                           
  8596                           ;timers.c: 36:   __nop();
  8597  019FEE  F000               	nop	
  8598                           
  8599                           ;timers.c: 37:   __nop();
  8600  019FF0  F000               	nop	
  8601                           
  8602                           ;timers.c: 38:   __nop();
  8603  019FF2  F000               	nop	
  8604                           
  8605                           ;timers.c: 39:   __nop();
  8606  019FF4  F000               	nop	
  8607  019FF6  0004               	clrwdt		;# 
  8608  019FF8                     l9121:
  8609                           
  8610                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8611  019FF8  0E00               	movlw	0
  8612  019FFA  6EE6               	movwf	postinc1,c
  8613  019FFC  EC8F  F0D1         	call	_TimerDone	;wreg free
  8614  01A000  5001               	movf	btemp^0,w,c
  8615  01A002  B4D8               	btfsc	status,2,c
  8616  01A004  D7F4               	goto	l1577
  8617                           
  8618                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8619  01A006  52E5               	movf	postdec1,f,c
  8620  01A008  52E5               	movf	postdec1,f,c
  8621  01A00A  0012               	return		;funcret
  8622  01A00C                     __end_of_WaitMs:
  8623                           	opt callstack 0
  8624                           
  8625 ;; *************** function _update_lcd *****************
  8626 ;; Defined at:
  8627 ;;		line 85 in file "mconfig.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;  vterm           1  [STACK] unsigned char 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;		None
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1  [STACK] unsigned char 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8645 ;;Total ram usage:        0 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:   26
  8648 ;; This function calls:
  8649 ;;		_eaDogM_WriteStringAtPos
  8650 ;;		_wait_lcd_done
  8651 ;; This function is called by:
  8652 ;;		_main
  8653 ;;		_check_help
  8654 ;; This function uses a reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text33
  8658  0185E6                     __ptext33:
  8659                           	opt callstack 0
  8660  0185E6                     _update_lcd:
  8661                           	opt callstack 4
  8662                           
  8663                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8664                           ;stkvar	_vterm @ sp[(0)+-1]
  8665                           
  8666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8667                           ;incstack = 0
  8668  0185E6  0EFF               	movlw	-1
  8669  0185E8  006F FF8C  F001    	movff	plusw1,btemp
  8670  0185EE  0E03               	movlw	3
  8671  0185F0  1601               	andwf	btemp^0,f,c
  8672  0185F2  0EFF               	movlw	-1
  8673  0185F4  0060  F007  FFE3   	movff	btemp,plusw1
  8674                           
  8675                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8676  0185FA  EE22  F11F         	lfsr	2,_D+288
  8677  0185FE  A0DF               	btfss	indf2,0,c
  8678  018600  D004               	goto	l11859
  8679                           
  8680                           ;stkvar	_vterm @ sp[(0)+-1]
  8681  018602  0EFF               	movlw	-1
  8682  018604  50E3               	movf	plusw1,w,c
  8683  018606  B4D8               	btfsc	status,2,c
  8684  018608  D074               	goto	l1653
  8685  01860A                     l11859:
  8686                           
  8687                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8688                           ;stkvar	_vterm @ sp[(0)+-1]
  8689  01860A  0EFF               	movlw	-1
  8690  01860C  50E3               	movf	plusw1,w,c
  8691  01860E  0D48               	mullw	72
  8692  018610  0E0F               	movlw	low (_D+16)
  8693  018612  24F3               	addwf	243,w,c
  8694  018614  6ED9               	movwf	fsr2l,c
  8695  018616  0E08               	movlw	high (_D+16)
  8696  018618  20F4               	addwfc	prodh,w,c
  8697  01861A  6EDA               	movwf	fsr2h,c
  8698  01861C  0E00               	movlw	0
  8699  01861E  6EDF               	movwf	indf2,c
  8700                           
  8701                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8702                           ;stkvar	_vterm @ sp[(0)+-1]
  8703  018620  0EFF               	movlw	-1
  8704  018622  50E3               	movf	plusw1,w,c
  8705  018624  0D48               	mullw	72
  8706  018626  0E27               	movlw	low (_D+40)
  8707  018628  24F3               	addwf	243,w,c
  8708  01862A  6ED9               	movwf	fsr2l,c
  8709  01862C  0E08               	movlw	high (_D+40)
  8710  01862E  20F4               	addwfc	prodh,w,c
  8711  018630  6EDA               	movwf	fsr2h,c
  8712  018632  0E00               	movlw	0
  8713  018634  6EDF               	movwf	indf2,c
  8714                           
  8715                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8716                           ;stkvar	_vterm @ sp[(0)+-1]
  8717  018636  0EFF               	movlw	-1
  8718  018638  50E3               	movf	plusw1,w,c
  8719  01863A  0D48               	mullw	72
  8720  01863C  0E3F               	movlw	low (_D+64)
  8721  01863E  24F3               	addwf	243,w,c
  8722  018640  6ED9               	movwf	fsr2l,c
  8723  018642  0E08               	movlw	high (_D+64)
  8724  018644  20F4               	addwfc	prodh,w,c
  8725  018646  6EDA               	movwf	fsr2h,c
  8726  018648  0E00               	movlw	0
  8727  01864A  6EDF               	movwf	indf2,c
  8728                           
  8729                           ;mconfig.c: 95:  wait_lcd_done();
  8730  01864C  ECA2  F0D3         	call	_wait_lcd_done	;wreg free
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8734                           ;stkvar	_vterm @ sp[(0)+-1]
  8735  018650  0EFF               	movlw	-1
  8736  018652  50E3               	movf	plusw1,w,c
  8737  018654  0D48               	mullw	72
  8738  018656  0EFF               	movlw	low _D
  8739  018658  6E0B               	movwf	(btemp+10)^0,c
  8740  01865A  0E07               	movlw	high _D
  8741  01865C  6E0C               	movwf	(btemp+11)^0,c
  8742  01865E  50F3               	movf	243,w,c
  8743  018660  260B               	addwf	(btemp+10)^0,f,c
  8744  018662  50F4               	movf	244,w,c
  8745  018664  220C               	addwfc	(btemp+11)^0,f,c
  8746  018666  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8747  01866C  0060  F033  FFE6   	movff	btemp+11,postinc1
  8748  018672  0E00               	movlw	0
  8749  018674  6EE6               	movwf	postinc1,c
  8750  018676  0E00               	movlw	0
  8751  018678  6EE6               	movwf	postinc1,c
  8752  01867A  EC06  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8753                           
  8754                           ; BSR set to: 59
  8755                           ;mconfig.c: 97:  wait_lcd_done();
  8756  01867E  ECA2  F0D3         	call	_wait_lcd_done	;wreg free
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8760                           ;stkvar	_vterm @ sp[(0)+-1]
  8761  018682  0EFF               	movlw	-1
  8762  018684  50E3               	movf	plusw1,w,c
  8763  018686  0D48               	mullw	72
  8764  018688  0EFF               	movlw	low _D
  8765  01868A  6E0B               	movwf	(btemp+10)^0,c
  8766  01868C  0E07               	movlw	high _D
  8767  01868E  6E0C               	movwf	(btemp+11)^0,c
  8768  018690  0E18               	movlw	24
  8769  018692  260B               	addwf	(btemp+10)^0,f,c
  8770  018694  0E00               	movlw	0
  8771  018696  220C               	addwfc	(btemp+11)^0,f,c
  8772  018698  50F3               	movf	243,w,c
  8773  01869A  260B               	addwf	(btemp+10)^0,f,c
  8774  01869C  50F4               	movf	244,w,c
  8775  01869E  220C               	addwfc	(btemp+11)^0,f,c
  8776  0186A0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8777  0186A6  0060  F033  FFE6   	movff	btemp+11,postinc1
  8778  0186AC  0E00               	movlw	0
  8779  0186AE  6EE6               	movwf	postinc1,c
  8780  0186B0  0E01               	movlw	1
  8781  0186B2  6EE6               	movwf	postinc1,c
  8782  0186B4  EC06  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8783                           
  8784                           ; BSR set to: 59
  8785                           ;mconfig.c: 99:  wait_lcd_done();
  8786  0186B8  ECA2  F0D3         	call	_wait_lcd_done	;wreg free
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8790                           ;stkvar	_vterm @ sp[(0)+-1]
  8791  0186BC  0EFF               	movlw	-1
  8792  0186BE  50E3               	movf	plusw1,w,c
  8793  0186C0  0D48               	mullw	72
  8794  0186C2  0EFF               	movlw	low _D
  8795  0186C4  6E0B               	movwf	(btemp+10)^0,c
  8796  0186C6  0E07               	movlw	high _D
  8797  0186C8  6E0C               	movwf	(btemp+11)^0,c
  8798  0186CA  0E30               	movlw	48
  8799  0186CC  260B               	addwf	(btemp+10)^0,f,c
  8800  0186CE  0E00               	movlw	0
  8801  0186D0  220C               	addwfc	(btemp+11)^0,f,c
  8802  0186D2  50F3               	movf	243,w,c
  8803  0186D4  260B               	addwf	(btemp+10)^0,f,c
  8804  0186D6  50F4               	movf	244,w,c
  8805  0186D8  220C               	addwfc	(btemp+11)^0,f,c
  8806  0186DA  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8807  0186E0  0060  F033  FFE6   	movff	btemp+11,postinc1
  8808  0186E6  0E00               	movlw	0
  8809  0186E8  6EE6               	movwf	postinc1,c
  8810  0186EA  0E02               	movlw	2
  8811  0186EC  6EE6               	movwf	postinc1,c
  8812  0186EE  EC06  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8813  0186F2                     l1653:
  8814                           
  8815                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8816  0186F2  52E5               	movf	postdec1,f,c
  8817  0186F4  0012               	return		;funcret
  8818  0186F6                     __end_of_update_lcd:
  8819                           	opt callstack 0
  8820                           
  8821 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8822 ;; Defined at:
  8823 ;;		line 278 in file "eadog.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  r               1  [STACK] const unsigned char 
  8826 ;;  c               1  [STACK] const unsigned char 
  8827 ;;  strPtr          2  [STACK] PTR unsigned char 
  8828 ;;		 -> D.lcd(288), D(290), V(188), 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;		None
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  1  [STACK] void 
  8833 ;; Registers used:
  8834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8835 ;; Tracked objects:
  8836 ;;		On entry : 3F/0
  8837 ;;		On exit  : 3F/3B
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8844 ;;Total ram usage:        0 bytes
  8845 ;; Hardware stack levels used:    1
  8846 ;; Hardware stack levels required when called:   25
  8847 ;; This function calls:
  8848 ;;		_eaDogM_WriteString
  8849 ;;		_send_lcd_cmd_dma
  8850 ;; This function is called by:
  8851 ;;		_update_lcd
  8852 ;;		_vterm_dump
  8853 ;; This function uses a reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text34
  8857  01A00C                     __ptext34:
  8858                           	opt callstack 0
  8859  01A00C                     _eaDogM_WriteStringAtPos:
  8860                           	opt callstack 4
  8861                           
  8862                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8863                           ;stkvar	_c @ sp[(0)+-2]
  8864                           
  8865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8866                           ;incstack = 0
  8867  01A00C  0EFE               	movlw	-2
  8868  01A00E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8869                           
  8870                           ;stkvar	_r @ sp[(0)+-1]
  8871  01A014  0EFF               	movlw	-1
  8872  01A016  50E3               	movf	plusw1,w,c
  8873  01A018  0D10               	mullw	16
  8874  01A01A  50F3               	movf	243,w,c
  8875  01A01C  240C               	addwf	(btemp+11)^0,w,c
  8876  01A01E  0F80               	addlw	128
  8877  01A020  6EE6               	movwf	postinc1,c
  8878  01A022  EC53  F0CD         	call	_send_lcd_cmd_dma	;wreg free
  8879                           
  8880                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  8881                           ;stkvar	_strPtr @ sp[(0)+-4]
  8882  01A026  0EFC               	movlw	-4
  8883  01A028  006F FF8F FFE6     	movff	plusw1,postinc1
  8884  01A02E  006F FF8F FFE6     	movff	plusw1,postinc1
  8885  01A034  EC1B  F0C8         	call	_eaDogM_WriteString	;wreg free
  8886                           
  8887                           ; BSR set to: 59
  8888                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8889  01A038  52E5               	movf	postdec1,f,c
  8890  01A03A  52E5               	movf	postdec1,f,c
  8891  01A03C  52E5               	movf	postdec1,f,c
  8892  01A03E  52E5               	movf	postdec1,f,c
  8893  01A040  0012               	return		;funcret
  8894  01A042                     __end_of_eaDogM_WriteStringAtPos:
  8895                           	opt callstack 0
  8896                           
  8897 ;; *************** function _send_lcd_cmd_dma *****************
  8898 ;; Defined at:
  8899 ;;		line 220 in file "eadog.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  strPtr          1  [STACK] unsigned char 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;		None
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1  [STACK] void 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/3D
  8910 ;;		On exit  : 3F/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8917 ;;Total ram usage:        0 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:   24
  8920 ;; This function calls:
  8921 ;;		_printf
  8922 ;;		_ringBufS_flush
  8923 ;;		_start_lcd
  8924 ;;		_wait_lcd_done
  8925 ;;		_wait_lcd_set
  8926 ;; This function is called by:
  8927 ;;		_eaDogM_WriteCommand
  8928 ;;		_eaDogM_WriteStringAtPos
  8929 ;; This function uses a reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text35
  8933  019AA6                     __ptext35:
  8934                           	opt callstack 0
  8935  019AA6                     _send_lcd_cmd_dma:
  8936                           	opt callstack 4
  8937                           
  8938                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8939                           
  8940                           ; BSR set to: 59
  8941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8942                           ;incstack = 0
  8943  019AA6  EC80  F0D4         	call	_wait_lcd_set	;wreg free
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  8947  019AAA  0E00               	movlw	0
  8948  019AAC  6EE6               	movwf	postinc1,c
  8949  019AAE  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8950  019AB4  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8951  019ABA  EC54  F0C9         	call	_ringBufS_flush	;wreg free
  8952  019ABE  92BC               	bcf	188,1,c	;volatile
  8953  019AC0  94BC               	bcf	188,2,c	;volatile
  8954                           
  8955                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  8956  019AC2  013B               	movlb	59	; () banked
  8957  019AC4  9FFC               	bcf	252,7,b	;volatile
  8958                           
  8959                           ; BSR set to: 59
  8960                           ;eadog.c: 229:  DMA1SSZ = 1;
  8961  019AC6  0E00               	movlw	0
  8962  019AC8  6FF8               	movwf	248,b	;volatile
  8963  019ACA  0E01               	movlw	1
  8964  019ACC  6FF7               	movwf	247,b	;volatile
  8965                           
  8966                           ; BSR set to: 59
  8967                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  8968  019ACE  8FFC               	bsf	252,7,b	;volatile
  8969                           
  8970                           ; BSR set to: 59
  8971                           ;eadog.c: 231:  printf("%c", strPtr);
  8972                           ;stkvar	_strPtr @ sp[(0)+-1]
  8973  019AD0  0EFF               	movlw	-1
  8974  019AD2  50E3               	movf	plusw1,w,c
  8975  019AD4  6EE6               	movwf	postinc1,c
  8976  019AD6  0E00               	movlw	0
  8977  019AD8  6EE6               	movwf	postinc1,c
  8978  019ADA  0EF9               	movlw	low STR_29
  8979  019ADC  6EE6               	movwf	postinc1,c
  8980  019ADE  0EFF               	movlw	high STR_29
  8981  019AE0  6EE6               	movwf	postinc1,c
  8982  019AE2  0E04               	movlw	4
  8983  019AE4  6EE6               	movwf	postinc1,c
  8984  019AE6  EC6B  F0CC         	call	_printf	;wreg free
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;eadog.c: 232:  start_lcd();
  8988  019AEA  EC83  F0D4         	call	_start_lcd	;wreg free
  8989                           
  8990                           ; BSR set to: 59
  8991                           ;eadog.c: 233:  wait_lcd_done();
  8992  019AEE  ECA2  F0D3         	call	_wait_lcd_done	;wreg free
  8993                           
  8994                           ; BSR set to: 0
  8995  019AF2  82BC               	bsf	188,1,c	;volatile
  8996                           
  8997                           ; BSR set to: 0
  8998                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8999  019AF4  52E5               	movf	postdec1,f,c
  9000  019AF6  0012               	return		;funcret
  9001  019AF8                     __end_of_send_lcd_cmd_dma:
  9002                           	opt callstack 0
  9003                           
  9004 ;; *************** function _wait_lcd_done *****************
  9005 ;; Defined at:
  9006 ;;		line 156 in file "eadog.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1  [STACK] void 
  9013 ;; Registers used:
  9014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 3F/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9024 ;;Total ram usage:        0 bytes
  9025 ;; Hardware stack levels used:    1
  9026 ;; Hardware stack levels required when called:   16
  9027 ;; This function calls:
  9028 ;;		_wdtdelay
  9029 ;; This function is called by:
  9030 ;;		_send_lcd_cmd_dma
  9031 ;;		_update_lcd
  9032 ;;		_vterm_dump
  9033 ;; This function uses a reentrant model
  9034 ;;
  9035                           
  9036                           	psect	text36
  9037  01A744                     __ptext36:
  9038                           	opt callstack 0
  9039  01A744                     _wait_lcd_done:
  9040                           	opt callstack 13
  9041                           
  9042                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9043                           
  9044                           ; BSR set to: 0
  9045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9046                           ;incstack = 0
  9047  01A744  0100               	movlb	0	; () banked
  9048  01A746  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  9049  01A748  D7FD               	goto	_wait_lcd_done
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;eadog.c: 159:  wdtdelay(50);
  9053  01A74A  0E32               	movlw	50
  9054  01A74C  6EE6               	movwf	postinc1,c
  9055  01A74E  0E00               	movlw	0
  9056  01A750  6EE6               	movwf	postinc1,c
  9057  01A752  0E00               	movlw	0
  9058  01A754  6EE6               	movwf	postinc1,c
  9059  01A756  0E00               	movlw	0
  9060  01A758  6EE6               	movwf	postinc1,c
  9061  01A75A  ECCB  F0CC         	call	_wdtdelay	;wreg free
  9062                           
  9063                           ; BSR set to: 0
  9064                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9065  01A75E  0012               	return		;funcret
  9066  01A760                     __end_of_wait_lcd_done:
  9067                           	opt callstack 0
  9068                           
  9069 ;; *************** function _wdtdelay *****************
  9070 ;; Defined at:
  9071 ;;		line 23 in file "eadog.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  delay           4  [STACK] const unsigned long 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1  [STACK] void 
  9078 ;; Registers used:
  9079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 3F/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9089 ;;Total ram usage:        0 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:   15
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_init_display
  9096 ;;		_send_lcd_cmd
  9097 ;;		_send_lcd_cmd_long
  9098 ;;		_wait_lcd_done
  9099 ;; This function uses a reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text37
  9103  019996                     __ptext37:
  9104                           	opt callstack 0
  9105  019996                     _wdtdelay:
  9106                           	opt callstack 13
  9107                           
  9108                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9109                           
  9110                           ; BSR set to: 0
  9111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9112                           ;incstack = 0
  9113  019996  0100               	movlb	0	; () banked
  9114  019998  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  9115  01999A  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9116  01999C  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9117  01999E  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9118  0199A0                     l1418:
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;eadog.c: 28:   __nop();
  9122  0199A0  F000               	nop	
  9123  0199A2  0004               	clrwdt		;# 
  9124                           
  9125                           ;eadog.c: 30:  };
  9126  0199A4  0E01               	movlw	1
  9127  0199A6  0100               	movlb	0	; () banked
  9128  0199A8  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  9129  0199AA  0E00               	movlw	0
  9130  0199AC  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9131  0199AE  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9132  0199B0  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;stkvar	_delay @ sp[(0)+-4]
  9136  0199B2  0EFC               	movlw	-4
  9137  0199B4  006F FF8C  F001    	movff	plusw1,btemp
  9138  0199BA  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  9139  0199BC  5C01               	subwf	btemp^0,w,c
  9140  0199BE  0EFD               	movlw	-3
  9141  0199C0  006F FF8C  F001    	movff	plusw1,btemp
  9142  0199C6  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9143  0199C8  5801               	subwfb	btemp^0,w,c
  9144  0199CA  0EFE               	movlw	-2
  9145  0199CC  006F FF8C  F001    	movff	plusw1,btemp
  9146  0199D2  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9147  0199D4  5801               	subwfb	btemp^0,w,c
  9148  0199D6  0EFF               	movlw	-1
  9149  0199D8  006F FF8C  F001    	movff	plusw1,btemp
  9150  0199DE  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9151  0199E0  5801               	subwfb	btemp^0,w,c
  9152  0199E2  B0D8               	btfsc	status,0,c
  9153  0199E4  D7DD               	goto	l1418
  9154                           
  9155                           ; BSR set to: 0
  9156                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9157  0199E6  52E5               	movf	postdec1,f,c
  9158  0199E8  52E5               	movf	postdec1,f,c
  9159  0199EA  52E5               	movf	postdec1,f,c
  9160  0199EC  52E5               	movf	postdec1,f,c
  9161  0199EE  0012               	return		;funcret
  9162  0199F0                     __end_of_wdtdelay:
  9163                           	opt callstack 0
  9164                           
  9165 ;; *************** function _eaDogM_WriteString *****************
  9166 ;; Defined at:
  9167 ;;		line 199 in file "eadog.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  strPtr          2  [STACK] PTR unsigned char 
  9170 ;;		 -> D.lcd(288), D(290), V(188), 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;		None
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1  [STACK] void 
  9175 ;; Registers used:
  9176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9177 ;; Tracked objects:
  9178 ;;		On entry : 3F/0
  9179 ;;		On exit  : 3F/3B
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9186 ;;Total ram usage:        0 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:   24
  9189 ;; This function calls:
  9190 ;;		_printf
  9191 ;;		_ringBufS_flush
  9192 ;;		_start_lcd
  9193 ;;		_strlen
  9194 ;;		_wait_lcd_set
  9195 ;; This function is called by:
  9196 ;;		_eaDogM_WriteStringAtPos
  9197 ;; This function uses a reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text38
  9201  019036                     __ptext38:
  9202                           	opt callstack 0
  9203  019036                     _eaDogM_WriteString:
  9204                           	opt callstack 4
  9205                           
  9206                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  9207                           
  9208                           ; BSR set to: 0
  9209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9210                           ;incstack = 0
  9211  019036  EC80  F0D4         	call	_wait_lcd_set	;wreg free
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  9215  01903A  0E00               	movlw	0
  9216  01903C  6EE6               	movwf	postinc1,c
  9217  01903E  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  9218  019044  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  9219  01904A  EC54  F0C9         	call	_ringBufS_flush	;wreg free
  9220  01904E  94BC               	bcf	188,2,c	;volatile
  9221                           
  9222                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  9223                           ;stkvar	_strPtr @ sp[(0)+-2]
  9224  019050  0EFE               	movlw	-2
  9225  019052  006F FF8F FFE6     	movff	plusw1,postinc1
  9226  019058  006F FF8F FFE6     	movff	plusw1,postinc1
  9227  01905E  EC6E  F0C8         	call	_strlen	;wreg free
  9228  019062  5002               	movf	(btemp+1)^0,w,c
  9229  019064  E104               	bnz	u11460
  9230  019066  0E41               	movlw	65
  9231  019068  5C01               	subwf	btemp^0,w,c
  9232  01906A  A0D8               	btfss	status,0,c
  9233  01906C  D010               	goto	l11719
  9234  01906E                     u11460:
  9235                           
  9236                           ;stkvar	_strPtr @ sp[(0)+-2]
  9237  01906E  0EFE               	movlw	-2
  9238  019070  006F FF8C  F00B    	movff	plusw1,btemp+10
  9239  019076  0EFF               	movlw	-1
  9240  019078  006F FF8C  F00C    	movff	plusw1,btemp+11
  9241  01907E  0E40               	movlw	64
  9242  019080  240B               	addwf	(btemp+10)^0,w,c
  9243  019082  6ED9               	movwf	fsr2l,c
  9244  019084  0E00               	movlw	0
  9245  019086  200C               	addwfc	(btemp+11)^0,w,c
  9246  019088  6EDA               	movwf	fsr2h,c
  9247  01908A  0E00               	movlw	0
  9248  01908C  6EDF               	movwf	indf2,c
  9249  01908E                     l11719:
  9250                           
  9251                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  9252  01908E  013B               	movlb	59	; () banked
  9253  019090  9FFC               	bcf	252,7,b	;volatile
  9254                           
  9255                           ; BSR set to: 59
  9256                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  9257                           ;stkvar	_strPtr @ sp[(0)+-2]
  9258  019092  0EFE               	movlw	-2
  9259  019094  006F FF8F FFE6     	movff	plusw1,postinc1
  9260  01909A  006F FF8F FFE6     	movff	plusw1,postinc1
  9261  0190A0  EC6E  F0C8         	call	_strlen	;wreg free
  9262  0190A4  0060  F007  FBF7   	movff	btemp,15351	;volatile
  9263  0190AA  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  9264                           
  9265                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  9266  0190B0  013B               	movlb	59	; () banked
  9267  0190B2  8FFC               	bsf	252,7,b	;volatile
  9268                           
  9269                           ; BSR set to: 59
  9270                           ;eadog.c: 210:  printf("%s", strPtr);
  9271                           ;stkvar	_strPtr @ sp[(0)+-2]
  9272  0190B4  0EFE               	movlw	-2
  9273  0190B6  006F FF8F FFE6     	movff	plusw1,postinc1
  9274  0190BC  006F FF8F FFE6     	movff	plusw1,postinc1
  9275  0190C2  0EFC               	movlw	low STR_28
  9276  0190C4  6EE6               	movwf	postinc1,c
  9277  0190C6  0EFF               	movlw	high STR_28
  9278  0190C8  6EE6               	movwf	postinc1,c
  9279  0190CA  0E04               	movlw	4
  9280  0190CC  6EE6               	movwf	postinc1,c
  9281  0190CE  EC6B  F0CC         	call	_printf	;wreg free
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;eadog.c: 211:  start_lcd();
  9285  0190D2  EC83  F0D4         	call	_start_lcd	;wreg free
  9286                           
  9287                           ; BSR set to: 59
  9288                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9289  0190D6  52E5               	movf	postdec1,f,c
  9290  0190D8  52E5               	movf	postdec1,f,c
  9291  0190DA  0012               	return		;funcret
  9292  0190DC                     __end_of_eaDogM_WriteString:
  9293                           	opt callstack 0
  9294                           
  9295 ;; *************** function _wait_lcd_set *****************
  9296 ;; Defined at:
  9297 ;;		line 146 in file "eadog.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;		None
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;		None
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  1  [STACK] void 
  9304 ;; Registers used:
  9305 ;;		None
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/3D
  9308 ;;		On exit  : 3F/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9315 ;;Total ram usage:        0 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; Hardware stack levels required when called:   15
  9318 ;; This function calls:
  9319 ;;		Nothing
  9320 ;; This function is called by:
  9321 ;;		_eaDogM_WriteString
  9322 ;;		_send_lcd_cmd_dma
  9323 ;; This function uses a reentrant model
  9324 ;;
  9325                           
  9326                           	psect	text39
  9327  01A900                     __ptext39:
  9328                           	opt callstack 0
  9329  01A900                     _wait_lcd_set:
  9330                           	opt callstack 12
  9331                           
  9332                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  9333                           
  9334                           ; BSR set to: 59
  9335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9336                           ;incstack = 0
  9337  01A900  0100               	movlb	0	; () banked
  9338  01A902  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  9339                           
  9340                           ; BSR set to: 0
  9341                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9342  01A904  0012               	return		;funcret
  9343  01A906                     __end_of_wait_lcd_set:
  9344                           	opt callstack 0
  9345                           
  9346 ;; *************** function _start_lcd *****************
  9347 ;; Defined at:
  9348 ;;		line 141 in file "eadog.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1  [STACK] void 
  9355 ;; Registers used:
  9356 ;;		None
  9357 ;; Tracked objects:
  9358 ;;		On entry : 3F/0
  9359 ;;		On exit  : 3F/3B
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9366 ;;Total ram usage:        0 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:   15
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_eaDogM_WriteString
  9373 ;;		_send_lcd_cmd_dma
  9374 ;; This function uses a reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text40
  9378  01A906                     __ptext40:
  9379                           	opt callstack 0
  9380  01A906                     _start_lcd:
  9381                           	opt callstack 12
  9382                           
  9383                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9384                           
  9385                           ; BSR set to: 0
  9386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9387                           ;incstack = 0
  9388  01A906  013B               	movlb	59	; () banked
  9389  01A908  8DFC               	bsf	252,6,b	;volatile
  9390                           
  9391                           ; BSR set to: 59
  9392                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9393  01A90A  0012               	return		;funcret
  9394  01A90C                     __end_of_start_lcd:
  9395                           	opt callstack 0
  9396                           
  9397 ;; *************** function _ringBufS_flush *****************
  9398 ;; Defined at:
  9399 ;;		line 76 in file "ringbufs.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9402 ;;		 -> ring_buf1(67), 
  9403 ;;  clearBuffer     1  [STACK] const char 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1  [STACK] void 
  9408 ;; Registers used:
  9409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9410 ;; Tracked objects:
  9411 ;;		On entry : 3F/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9419 ;;Total ram usage:        0 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:   16
  9422 ;; This function calls:
  9423 ;;		_memset
  9424 ;; This function is called by:
  9425 ;;		_eaDogM_WriteString
  9426 ;;		_send_lcd_cmd_dma
  9427 ;; This function uses a reentrant model
  9428 ;;
  9429                           
  9430                           	psect	text41
  9431  0192A8                     __ptext41:
  9432                           	opt callstack 0
  9433  0192A8                     _ringBufS_flush:
  9434                           	opt callstack 11
  9435                           
  9436                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9437                           ;stkvar	__this @ sp[(0)+-2]
  9438                           
  9439                           ; BSR set to: 59
  9440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9441                           ;incstack = 0
  9442  0192A8  0EFE               	movlw	-2
  9443  0192AA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9444  0192B0  0EFF               	movlw	-1
  9445  0192B2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9446  0192B8  0E42               	movlw	66
  9447  0192BA  240B               	addwf	(btemp+10)^0,w,c
  9448  0192BC  6ED9               	movwf	fsr2l,c
  9449  0192BE  0E00               	movlw	0
  9450  0192C0  200C               	addwfc	(btemp+11)^0,w,c
  9451  0192C2  6EDA               	movwf	fsr2h,c
  9452  0192C4  0E00               	movlw	0
  9453  0192C6  6EDF               	movwf	indf2,c
  9454                           
  9455                           ;ringbufs.c: 79:  _this->head = 0;
  9456                           ;stkvar	__this @ sp[(0)+-2]
  9457  0192C8  0EFE               	movlw	-2
  9458  0192CA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9459  0192D0  0EFF               	movlw	-1
  9460  0192D2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9461  0192D8  0E40               	movlw	64
  9462  0192DA  240B               	addwf	(btemp+10)^0,w,c
  9463  0192DC  6ED9               	movwf	fsr2l,c
  9464  0192DE  0E00               	movlw	0
  9465  0192E0  200C               	addwfc	(btemp+11)^0,w,c
  9466  0192E2  6EDA               	movwf	fsr2h,c
  9467  0192E4  0E00               	movlw	0
  9468  0192E6  6EDF               	movwf	indf2,c
  9469                           
  9470                           ;ringbufs.c: 80:  _this->tail = 0;
  9471                           ;stkvar	__this @ sp[(0)+-2]
  9472  0192E8  0EFE               	movlw	-2
  9473  0192EA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9474  0192F0  0EFF               	movlw	-1
  9475  0192F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9476  0192F8  0E41               	movlw	65
  9477  0192FA  240B               	addwf	(btemp+10)^0,w,c
  9478  0192FC  6ED9               	movwf	fsr2l,c
  9479  0192FE  0E00               	movlw	0
  9480  019300  200C               	addwfc	(btemp+11)^0,w,c
  9481  019302  6EDA               	movwf	fsr2h,c
  9482  019304  0E00               	movlw	0
  9483  019306  6EDF               	movwf	indf2,c
  9484                           
  9485                           ;ringbufs.c: 81:  if (clearBuffer) {
  9486                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9487  019308  0EFD               	movlw	-3
  9488  01930A  50E3               	movf	plusw1,w,c
  9489  01930C  B4D8               	btfsc	status,2,c
  9490  01930E  D011               	goto	l1562
  9491                           
  9492                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9493  019310  0E40               	movlw	64
  9494  019312  6EE6               	movwf	postinc1,c
  9495  019314  0E00               	movlw	0
  9496  019316  6EE6               	movwf	postinc1,c
  9497  019318  0E00               	movlw	0
  9498  01931A  6EE6               	movwf	postinc1,c
  9499  01931C  0E00               	movlw	0
  9500  01931E  6EE6               	movwf	postinc1,c
  9501                           
  9502                           ;stkvar	__this @ sp[(-4)+-2]
  9503  019320  0EFA               	movlw	-6
  9504  019322  006F FF8F FFE6     	movff	plusw1,postinc1
  9505  019328  006F FF8F FFE6     	movff	plusw1,postinc1
  9506  01932E  EC9D  F0AD         	call	_memset	;wreg free
  9507  019332                     l1562:
  9508                           
  9509                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9510  019332  52E5               	movf	postdec1,f,c
  9511  019334  52E5               	movf	postdec1,f,c
  9512  019336  52E5               	movf	postdec1,f,c
  9513  019338  0012               	return		;funcret
  9514  01933A                     __end_of_ringBufS_flush:
  9515                           	opt callstack 0
  9516                           
  9517 ;; *************** function _memset *****************
  9518 ;; Defined at:
  9519 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  dest            2  [STACK] PTR void 
  9522 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9523 ;;  c               2  [STACK] int 
  9524 ;;  n               2  [STACK] unsigned int 
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  s               2  [STACK] PTR unsigned char 
  9527 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9528 ;;  k               2  [STACK] unsigned int 
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  2  [STACK] PTR void 
  9531 ;; Registers used:
  9532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9542 ;;Total ram usage:        0 bytes
  9543 ;; Hardware stack levels used:    1
  9544 ;; Hardware stack levels required when called:   15
  9545 ;; This function calls:
  9546 ;;		Nothing
  9547 ;; This function is called by:
  9548 ;;		_ringBufS_init
  9549 ;;		_ringBufS_flush
  9550 ;; This function uses a reentrant model
  9551 ;;
  9552                           
  9553                           	psect	text42
  9554  015B3A                     __ptext42:
  9555                           	opt callstack 0
  9556  015B3A                     _memset:
  9557                           	opt callstack 0
  9558                           
  9559                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9560  015B3A  52E6               	movf	postinc1,f,c
  9561  015B3C  52E6               	movf	postinc1,f,c
  9562  015B3E  52E6               	movf	postinc1,f,c
  9563  015B40  52E6               	movf	postinc1,f,c
  9564                           
  9565                           ;stkvar	_dest @ sp[(-4)+-2]
  9566                           
  9567                           ;incstack = 0
  9568  015B42  0EFA               	movlw	-6
  9569  015B44  006F FF8C  F00B    	movff	plusw1,btemp+10
  9570  015B4A  0EFB               	movlw	-5
  9571  015B4C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9572                           
  9573                           ;stkvar	_s @ sp[(-4)+0]
  9574  015B52  0EFD               	movlw	-3
  9575  015B54  0060  F033  FFE3   	movff	btemp+11,plusw1
  9576  015B5A  0EFC               	movlw	-4
  9577  015B5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9578                           
  9579                           ;stkvar	_n @ sp[(-4)+-6]
  9580  015B62  0EF6               	movlw	-10
  9581  015B64  006F FF8C  F001    	movff	plusw1,btemp
  9582  015B6A  0EF7               	movlw	-9
  9583  015B6C  50E3               	movf	plusw1,w,c
  9584  015B6E  1001               	iorwf	btemp^0,w,c
  9585  015B70  B4D8               	btfsc	status,2,c
  9586  015B72  D154               	goto	u10060
  9587                           
  9588                           ;stkvar	_c @ sp[(-4)+-4]
  9589                           ;stkvar	_s @ sp[(-4)+0]
  9590  015B74  0EFC               	movlw	-4
  9591  015B76  006F FF8F FFD9     	movff	plusw1,fsr2l
  9592  015B7C  0EFD               	movlw	-3
  9593  015B7E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9594  015B84  0EF8               	movlw	-8
  9595  015B86  006F FF8F FFDF     	movff	plusw1,indf2
  9596                           
  9597                           ;stkvar	_c @ sp[(-4)+-4]
  9598                           ;stkvar	_n @ sp[(-4)+-6]
  9599                           ;stkvar	_s @ sp[(-4)+0]
  9600  015B8C  0EFC               	movlw	-4
  9601  015B8E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9602  015B94  0EFD               	movlw	-3
  9603  015B96  006F FF8C  F00C    	movff	plusw1,btemp+11
  9604  015B9C  0EF6               	movlw	-10
  9605  015B9E  50E3               	movf	plusw1,w,c
  9606  015BA0  260B               	addwf	(btemp+10)^0,f,c
  9607  015BA2  0EF7               	movlw	-9
  9608  015BA4  50E3               	movf	plusw1,w,c
  9609  015BA6  220C               	addwfc	(btemp+11)^0,f,c
  9610  015BA8  0EFF               	movlw	255
  9611  015BAA  240B               	addwf	(btemp+10)^0,w,c
  9612  015BAC  6ED9               	movwf	fsr2l,c
  9613  015BAE  0EFF               	movlw	255
  9614  015BB0  200C               	addwfc	(btemp+11)^0,w,c
  9615  015BB2  6EDA               	movwf	fsr2h,c
  9616  015BB4  0EF8               	movlw	-8
  9617  015BB6  006F FF8F FFDF     	movff	plusw1,indf2
  9618                           
  9619                           ;stkvar	_n @ sp[(-4)+-6]
  9620  015BBC  0EF7               	movlw	-9
  9621  015BBE  50E3               	movf	plusw1,w,c
  9622  015BC0  E108               	bnz	l10887
  9623  015BC2  0EF6               	movlw	-10
  9624  015BC4  006F FF8C  F001    	movff	plusw1,btemp
  9625  015BCA  0E03               	movlw	3
  9626  015BCC  5E01               	subwf	btemp^0,f,c
  9627  015BCE  A0D8               	btfss	status,0,c
  9628  015BD0  D125               	goto	u10060
  9629  015BD2                     l10887:
  9630                           
  9631                           ;stkvar	_c @ sp[(-4)+-4]
  9632                           ;stkvar	_s @ sp[(-4)+0]
  9633  015BD2  0EFC               	movlw	-4
  9634  015BD4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9635  015BDA  0EFD               	movlw	-3
  9636  015BDC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9637  015BE2  0E01               	movlw	1
  9638  015BE4  240B               	addwf	(btemp+10)^0,w,c
  9639  015BE6  6ED9               	movwf	fsr2l,c
  9640  015BE8  0E00               	movlw	0
  9641  015BEA  200C               	addwfc	(btemp+11)^0,w,c
  9642  015BEC  6EDA               	movwf	fsr2h,c
  9643  015BEE  0EF8               	movlw	-8
  9644  015BF0  006F FF8F FFDF     	movff	plusw1,indf2
  9645                           
  9646                           ;stkvar	_c @ sp[(-4)+-4]
  9647                           ;stkvar	_s @ sp[(-4)+0]
  9648  015BF6  0EFC               	movlw	-4
  9649  015BF8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9650  015BFE  0EFD               	movlw	-3
  9651  015C00  006F FF8C  F00C    	movff	plusw1,btemp+11
  9652  015C06  0E02               	movlw	2
  9653  015C08  240B               	addwf	(btemp+10)^0,w,c
  9654  015C0A  6ED9               	movwf	fsr2l,c
  9655  015C0C  0E00               	movlw	0
  9656  015C0E  200C               	addwfc	(btemp+11)^0,w,c
  9657  015C10  6EDA               	movwf	fsr2h,c
  9658  015C12  0EF8               	movlw	-8
  9659  015C14  006F FF8F FFDF     	movff	plusw1,indf2
  9660                           
  9661                           ;stkvar	_c @ sp[(-4)+-4]
  9662                           ;stkvar	_n @ sp[(-4)+-6]
  9663                           ;stkvar	_s @ sp[(-4)+0]
  9664  015C1A  0EFC               	movlw	-4
  9665  015C1C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9666  015C22  0EFD               	movlw	-3
  9667  015C24  006F FF8C  F00C    	movff	plusw1,btemp+11
  9668  015C2A  0EF6               	movlw	-10
  9669  015C2C  50E3               	movf	plusw1,w,c
  9670  015C2E  260B               	addwf	(btemp+10)^0,f,c
  9671  015C30  0EF7               	movlw	-9
  9672  015C32  50E3               	movf	plusw1,w,c
  9673  015C34  220C               	addwfc	(btemp+11)^0,f,c
  9674  015C36  0EFE               	movlw	254
  9675  015C38  240B               	addwf	(btemp+10)^0,w,c
  9676  015C3A  6ED9               	movwf	fsr2l,c
  9677  015C3C  0EFF               	movlw	255
  9678  015C3E  200C               	addwfc	(btemp+11)^0,w,c
  9679  015C40  6EDA               	movwf	fsr2h,c
  9680  015C42  0EF8               	movlw	-8
  9681  015C44  006F FF8F FFDF     	movff	plusw1,indf2
  9682                           
  9683                           ;stkvar	_c @ sp[(-4)+-4]
  9684                           ;stkvar	_n @ sp[(-4)+-6]
  9685                           ;stkvar	_s @ sp[(-4)+0]
  9686  015C4A  0EFC               	movlw	-4
  9687  015C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9688  015C52  0EFD               	movlw	-3
  9689  015C54  006F FF8C  F00C    	movff	plusw1,btemp+11
  9690  015C5A  0EF6               	movlw	-10
  9691  015C5C  50E3               	movf	plusw1,w,c
  9692  015C5E  260B               	addwf	(btemp+10)^0,f,c
  9693  015C60  0EF7               	movlw	-9
  9694  015C62  50E3               	movf	plusw1,w,c
  9695  015C64  220C               	addwfc	(btemp+11)^0,f,c
  9696  015C66  0EFD               	movlw	253
  9697  015C68  240B               	addwf	(btemp+10)^0,w,c
  9698  015C6A  6ED9               	movwf	fsr2l,c
  9699  015C6C  0EFF               	movlw	255
  9700  015C6E  200C               	addwfc	(btemp+11)^0,w,c
  9701  015C70  6EDA               	movwf	fsr2h,c
  9702  015C72  0EF8               	movlw	-8
  9703  015C74  006F FF8F FFDF     	movff	plusw1,indf2
  9704                           
  9705                           ;stkvar	_n @ sp[(-4)+-6]
  9706  015C7A  0EF7               	movlw	-9
  9707  015C7C  50E3               	movf	plusw1,w,c
  9708  015C7E  E108               	bnz	l10893
  9709  015C80  0EF6               	movlw	-10
  9710  015C82  006F FF8C  F001    	movff	plusw1,btemp
  9711  015C88  0E07               	movlw	7
  9712  015C8A  5E01               	subwf	btemp^0,f,c
  9713  015C8C  A0D8               	btfss	status,0,c
  9714  015C8E  D0C6               	goto	u10060
  9715  015C90                     l10893:
  9716                           
  9717                           ;stkvar	_c @ sp[(-4)+-4]
  9718                           ;stkvar	_s @ sp[(-4)+0]
  9719  015C90  0EFC               	movlw	-4
  9720  015C92  006F FF8C  F00B    	movff	plusw1,btemp+10
  9721  015C98  0EFD               	movlw	-3
  9722  015C9A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9723  015CA0  0E03               	movlw	3
  9724  015CA2  240B               	addwf	(btemp+10)^0,w,c
  9725  015CA4  6ED9               	movwf	fsr2l,c
  9726  015CA6  0E00               	movlw	0
  9727  015CA8  200C               	addwfc	(btemp+11)^0,w,c
  9728  015CAA  6EDA               	movwf	fsr2h,c
  9729  015CAC  0EF8               	movlw	-8
  9730  015CAE  006F FF8F FFDF     	movff	plusw1,indf2
  9731                           
  9732                           ;stkvar	_c @ sp[(-4)+-4]
  9733                           ;stkvar	_n @ sp[(-4)+-6]
  9734                           ;stkvar	_s @ sp[(-4)+0]
  9735  015CB4  0EFC               	movlw	-4
  9736  015CB6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9737  015CBC  0EFD               	movlw	-3
  9738  015CBE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9739  015CC4  0EF6               	movlw	-10
  9740  015CC6  50E3               	movf	plusw1,w,c
  9741  015CC8  260B               	addwf	(btemp+10)^0,f,c
  9742  015CCA  0EF7               	movlw	-9
  9743  015CCC  50E3               	movf	plusw1,w,c
  9744  015CCE  220C               	addwfc	(btemp+11)^0,f,c
  9745  015CD0  0EFC               	movlw	252
  9746  015CD2  240B               	addwf	(btemp+10)^0,w,c
  9747  015CD4  6ED9               	movwf	fsr2l,c
  9748  015CD6  0EFF               	movlw	255
  9749  015CD8  200C               	addwfc	(btemp+11)^0,w,c
  9750  015CDA  6EDA               	movwf	fsr2h,c
  9751  015CDC  0EF8               	movlw	-8
  9752  015CDE  006F FF8F FFDF     	movff	plusw1,indf2
  9753                           
  9754                           ;stkvar	_n @ sp[(-4)+-6]
  9755  015CE4  0EF7               	movlw	-9
  9756  015CE6  50E3               	movf	plusw1,w,c
  9757  015CE8  E108               	bnz	l10899
  9758  015CEA  0EF6               	movlw	-10
  9759  015CEC  006F FF8C  F001    	movff	plusw1,btemp
  9760  015CF2  0E09               	movlw	9
  9761  015CF4  5E01               	subwf	btemp^0,f,c
  9762  015CF6  A0D8               	btfss	status,0,c
  9763  015CF8  D091               	goto	u10060
  9764  015CFA                     l10899:
  9765                           
  9766                           ;stkvar	_s @ sp[(-4)+0]
  9767  015CFA  0EFC               	movlw	-4
  9768  015CFC  006F FF8C  F00B    	movff	plusw1,btemp+10
  9769  015D02  1E0B               	comf	(btemp+10)^0,f,c
  9770  015D04  0EFD               	movlw	-3
  9771  015D06  006F FF8C  F00C    	movff	plusw1,btemp+11
  9772  015D0C  1E0C               	comf	(btemp+11)^0,f,c
  9773  015D0E  2A0B               	incf	(btemp+10)^0,f,c
  9774  015D10  B4D8               	btfsc	status,2,c
  9775  015D12  2A0C               	incf	(btemp+11)^0,f,c
  9776  015D14  0E03               	movlw	3
  9777  015D16  160B               	andwf	(btemp+10)^0,f,c
  9778  015D18  0E00               	movlw	0
  9779  015D1A  160C               	andwf	(btemp+11)^0,f,c
  9780                           
  9781                           ;stkvar	_k @ sp[(-4)+2]
  9782  015D1C  0EFE               	movlw	-2
  9783  015D1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9784  015D24  0EFF               	movlw	-1
  9785  015D26  0060  F033  FFE3   	movff	btemp+11,plusw1
  9786                           
  9787                           ;stkvar	_k @ sp[(-4)+2]
  9788                           ;stkvar	_s @ sp[(-4)+0]
  9789  015D2C  0EFC               	movlw	-4
  9790  015D2E  50E3               	movf	plusw1,w,c
  9791  015D30  6E01               	movwf	btemp^0,c
  9792  015D32  0EFE               	movlw	-2
  9793  015D34  50E3               	movf	plusw1,w,c
  9794  015D36  2601               	addwf	btemp^0,f,c
  9795  015D38  0EFC               	movlw	-4
  9796  015D3A  0060  F007  FFE3   	movff	btemp,plusw1
  9797  015D40  0EFD               	movlw	-3
  9798  015D42  50E3               	movf	plusw1,w,c
  9799  015D44  6E01               	movwf	btemp^0,c
  9800  015D46  0EFF               	movlw	-1
  9801  015D48  50E3               	movf	plusw1,w,c
  9802  015D4A  2201               	addwfc	btemp^0,f,c
  9803  015D4C  0EFD               	movlw	-3
  9804  015D4E  0060  F007  FFE3   	movff	btemp,plusw1
  9805                           
  9806                           ;stkvar	_k @ sp[(-4)+2]
  9807                           ;stkvar	_n @ sp[(-4)+-6]
  9808  015D54  0EF6               	movlw	-10
  9809  015D56  50E3               	movf	plusw1,w,c
  9810  015D58  6E01               	movwf	btemp^0,c
  9811  015D5A  0EFE               	movlw	-2
  9812  015D5C  50E3               	movf	plusw1,w,c
  9813  015D5E  5E01               	subwf	btemp^0,f,c
  9814  015D60  0EF6               	movlw	-10
  9815  015D62  0060  F007  FFE3   	movff	btemp,plusw1
  9816  015D68  0EF7               	movlw	-9
  9817  015D6A  50E3               	movf	plusw1,w,c
  9818  015D6C  6E01               	movwf	btemp^0,c
  9819  015D6E  0EFF               	movlw	-1
  9820  015D70  50E3               	movf	plusw1,w,c
  9821  015D72  5A01               	subwfb	btemp^0,f,c
  9822  015D74  0EF7               	movlw	-9
  9823  015D76  0060  F007  FFE3   	movff	btemp,plusw1
  9824  015D7C  0EFC               	movlw	252
  9825  015D7E  6E0B               	movwf	(btemp+10)^0,c
  9826  015D80  0EFF               	movlw	255
  9827  015D82  6E0C               	movwf	(btemp+11)^0,c
  9828                           
  9829                           ;stkvar	_n @ sp[(-4)+-6]
  9830  015D84  0EF6               	movlw	-10
  9831  015D86  006F FF8C  F001    	movff	plusw1,btemp
  9832  015D8C  500B               	movf	(btemp+10)^0,w,c
  9833  015D8E  1601               	andwf	btemp^0,f,c
  9834  015D90  0EF6               	movlw	-10
  9835  015D92  0060  F007  FFE3   	movff	btemp,plusw1
  9836  015D98  0EF7               	movlw	-9
  9837  015D9A  006F FF8C  F001    	movff	plusw1,btemp
  9838  015DA0  500C               	movf	(btemp+11)^0,w,c
  9839  015DA2  1601               	andwf	btemp^0,f,c
  9840  015DA4  0EF7               	movlw	-9
  9841  015DA6  D02E               	goto	L6
  9842  015DA8                     l10907:
  9843                           
  9844                           ;stkvar	_c @ sp[(-4)+-4]
  9845                           ;stkvar	_s @ sp[(-4)+0]
  9846  015DA8  0EFC               	movlw	-4
  9847  015DAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9848  015DB0  0EFD               	movlw	-3
  9849  015DB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9850  015DB8  0EF8               	movlw	-8
  9851  015DBA  006F FF8F FFDF     	movff	plusw1,indf2
  9852                           
  9853                           ;stkvar	_n @ sp[(-4)+-6]
  9854  015DC0  0EF6               	movlw	-10
  9855  015DC2  006F FF8C  F001    	movff	plusw1,btemp
  9856  015DC8  0E01               	movlw	1
  9857  015DCA  5E01               	subwf	btemp^0,f,c
  9858  015DCC  0EF6               	movlw	-10
  9859  015DCE  0060  F007  FFE3   	movff	btemp,plusw1
  9860  015DD4  0EF7               	movlw	-9
  9861  015DD6  006F FF8C  F001    	movff	plusw1,btemp
  9862  015DDC  0E00               	movlw	0
  9863  015DDE  5A01               	subwfb	btemp^0,f,c
  9864  015DE0  0EF7               	movlw	-9
  9865  015DE2  0060  F007  FFE3   	movff	btemp,plusw1
  9866                           
  9867                           ;stkvar	_s @ sp[(-4)+0]
  9868  015DE8  0EFC               	movlw	-4
  9869  015DEA  50E3               	movf	plusw1,w,c
  9870  015DEC  0F01               	addlw	1
  9871  015DEE  6E01               	movwf	btemp^0,c
  9872  015DF0  0EFC               	movlw	-4
  9873  015DF2  0060  F007  FFE3   	movff	btemp,plusw1
  9874  015DF8  6A01               	clrf	btemp^0,c
  9875  015DFA  0EFD               	movlw	-3
  9876  015DFC  50E3               	movf	plusw1,w,c
  9877  015DFE  2001               	addwfc	btemp^0,w,c
  9878  015E00  6E01               	movwf	btemp^0,c
  9879  015E02  0EFD               	movlw	-3
  9880  015E04                     L6:
  9881  015E04  0060  F007  FFE3   	movff	btemp,plusw1
  9882                           
  9883                           ;stkvar	_n @ sp[(-4)+-6]
  9884  015E0A  0EF6               	movlw	-10
  9885  015E0C  006F FF8C  F001    	movff	plusw1,btemp
  9886  015E12  0EF7               	movlw	-9
  9887  015E14  50E3               	movf	plusw1,w,c
  9888  015E16  1001               	iorwf	btemp^0,w,c
  9889  015E18  A4D8               	btfss	status,2,c
  9890  015E1A  D7C6               	goto	l10907
  9891  015E1C                     u10060:
  9892                           
  9893                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9894  015E1C  0EF6               	movlw	246
  9895  015E1E  26E1               	addwf	fsr1l,f,c
  9896  015E20  0EFF               	movlw	255
  9897  015E22  22E2               	addwfc	fsr1h,f,c
  9898  015E24  0012               	return		;funcret
  9899  015E26                     __end_of_memset:
  9900                           	opt callstack 0
  9901                           
  9902 ;; *************** function _printf *****************
  9903 ;; Defined at:
  9904 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  fmt             2  [STACK] PTR const unsigned char 
  9907 ;;		 -> STR_30(3), STR_29(3), STR_28(3), 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  ap              2  [STACK] PTR void [1]
  9910 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9911 ;;  ret             2    0        int 
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  2  [STACK] int 
  9914 ;; Registers used:
  9915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9916 ;; Tracked objects:
  9917 ;;		On entry : 3F/3B
  9918 ;;		On exit  : 3F/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9925 ;;Total ram usage:        0 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:   23
  9928 ;; This function calls:
  9929 ;;		_vfprintf
  9930 ;; This function is called by:
  9931 ;;		_eaDogM_WriteString
  9932 ;;		_send_lcd_cmd_dma
  9933 ;; This function uses a reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text43
  9937  0198D6                     __ptext43:
  9938                           	opt callstack 0
  9939  0198D6                     _printf:
  9940                           	opt callstack 0
  9941                           
  9942                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9943  0198D6  52E6               	movf	postinc1,f,c
  9944  0198D8  52E6               	movf	postinc1,f,c
  9945                           
  9946                           ;stkvar	?_printf @ sp[(-2)+-3]
  9947                           
  9948                           ;incstack = 0
  9949  0198DA  0EFB               	movlw	251
  9950  0198DC  24E1               	addwf	fsr1l,w,c
  9951  0198DE  6E0B               	movwf	(btemp+10)^0,c
  9952  0198E0  0EFF               	movlw	255
  9953  0198E2  20E2               	addwfc	fsr1h,w,c
  9954  0198E4  6E0C               	movwf	(btemp+11)^0,c
  9955                           
  9956                           ;stkvar	_ap @ sp[(-2)+0]
  9957  0198E6  0EFF               	movlw	-1
  9958  0198E8  0060  F033  FFE3   	movff	btemp+11,plusw1
  9959  0198EE  0EFE               	movlw	-2
  9960  0198F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9961                           
  9962                           ;stkvar	_ap @ sp[(-2)+0]
  9963  0198F6  0EFE               	movlw	254
  9964  0198F8  24E1               	addwf	fsr1l,w,c
  9965  0198FA  6E01               	movwf	btemp^0,c
  9966  0198FC  0EFF               	movlw	255
  9967  0198FE  20E2               	addwfc	fsr1h,w,c
  9968  019900  6E02               	movwf	(btemp+1)^0,c
  9969  019902  0060  F007  FFE6   	movff	btemp,postinc1
  9970  019908  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9971                           
  9972                           ;stkvar	_fmt @ sp[(-4)+-3]
  9973  01990E  0EF9               	movlw	-7
  9974  019910  006F FF8F FFE6     	movff	plusw1,postinc1
  9975  019916  006F FF8F FFE6     	movff	plusw1,postinc1
  9976  01991C  0E00               	movlw	0
  9977  01991E  6EE6               	movwf	postinc1,c
  9978  019920  0E00               	movlw	0
  9979  019922  6EE6               	movwf	postinc1,c
  9980  019924  EC70  F0C7         	call	_vfprintf	;wreg free
  9981                           
  9982                           ; BSR set to: 0
  9983                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  9984  019928  52E5               	movf	postdec1,f,c
  9985  01992A  52E5               	movf	postdec1,f,c
  9986  01992C  52E5               	movf	postdec1,f,c
  9987  01992E  50E7               	movf	indf1,w,c
  9988  019930  5EE1               	subwf	fsr1l,f,c
  9989  019932  0E00               	movlw	0
  9990  019934  5AE2               	subwfb	fsr1h,f,c
  9991  019936  0012               	return		;funcret
  9992  019938                     __end_of_printf:
  9993                           	opt callstack 0
  9994                           
  9995 ;; *************** function _vfprintf *****************
  9996 ;; Defined at:
  9997 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10000 ;;		 -> f(6), NULL(0), 
 10001 ;;  fmt             2  [STACK] PTR const unsigned char 
 10002 ;;		 -> STR_50(79), STR_48(3), STR_47(3), STR_46(19), 
 10003 ;;		 -> STR_45(19), STR_44(19), STR_43(19), STR_42(19), 
 10004 ;;		 -> STR_41(19), STR_40(24), STR_39(15), STR_38(15), 
 10005 ;;		 -> STR_37(15), STR_36(10), STR_35(10), STR_34(19), 
 10006 ;;		 -> STR_33(19), STR_30(3), STR_29(3), STR_28(3), 
 10007 ;;		 -> STR_27(17), STR_26(16), STR_25(16), STR_24(19), 
 10008 ;;		 -> STR_23(20), STR_22(19), STR_21(19), STR_20(19), 
 10009 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
 10010 ;;		 -> STR_15(17), STR_14(16), STR_13(16), STR_12(16), 
 10011 ;;		 -> STR_11(16), STR_10(16), STR_9(16), STR_8(17), 
 10012 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10013 ;;		 -> STR_1(17), 
 10014 ;;  ap              2  [STACK] PTR PTR void 
 10015 ;;		 -> ap(2), ap(2), 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;  cfmt            2  [STACK] PTR unsigned char 
 10018 ;;		 -> STR_50(79), STR_48(3), STR_47(3), STR_46(19), 
 10019 ;;		 -> STR_45(19), STR_44(19), STR_43(19), STR_42(19), 
 10020 ;;		 -> STR_41(19), STR_40(24), STR_39(15), STR_38(15), 
 10021 ;;		 -> STR_37(15), STR_36(10), STR_35(10), STR_34(19), 
 10022 ;;		 -> STR_33(19), STR_30(3), STR_29(3), STR_28(3), 
 10023 ;;		 -> STR_27(17), STR_26(16), STR_25(16), STR_24(19), 
 10024 ;;		 -> STR_23(20), STR_22(19), STR_21(19), STR_20(19), 
 10025 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
 10026 ;;		 -> STR_15(17), STR_14(16), STR_13(16), STR_12(16), 
 10027 ;;		 -> STR_11(16), STR_10(16), STR_9(16), STR_8(17), 
 10028 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10029 ;;		 -> STR_1(17), 
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  2  [STACK] int 
 10032 ;; Registers used:
 10033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/2
 10036 ;;		On exit  : 3F/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10043 ;;Total ram usage:        0 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; Hardware stack levels required when called:   22
 10046 ;; This function calls:
 10047 ;;		_vfpfcnvrt
 10048 ;; This function is called by:
 10049 ;;		_sprintf
 10050 ;;		_printf
 10051 ;; This function uses a reentrant model
 10052 ;;
 10053                           
 10054                           	psect	text44
 10055  018EE0                     __ptext44:
 10056                           	opt callstack 0
 10057  018EE0                     _vfprintf:
 10058                           	opt callstack 0
 10059                           
 10060                           ; BSR set to: 0
 10061                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10062  018EE0  52E6               	movf	postinc1,f,c
 10063  018EE2  52E6               	movf	postinc1,f,c
 10064                           
 10065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10066                           ;stkvar	_fmt @ sp[(-2)+-4]
 10067                           
 10068                           ;incstack = 0
 10069 ;; hardware stack exceeded
 10070  018EE4  0EFA               	movlw	-6
 10071  018EE6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10072  018EEC  0EFB               	movlw	-5
 10073  018EEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10074                           
 10075                           ;stkvar	_cfmt @ sp[(-2)+0]
 10076  018EF4  0EFF               	movlw	-1
 10077  018EF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10078  018EFC  0EFE               	movlw	-2
 10079  018EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10080                           
 10081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10082  018F04  0100               	movlb	0	; () banked
 10083  018F06  6BC7               	clrf	_nout& (0+255),b
 10084  018F08  6BC8               	clrf	(_nout+1)& (0+255),b
 10085                           
 10086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10087  018F0A  D021               	goto	l11735
 10088  018F0C                     l11733:
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10092                           ;stkvar	_ap @ sp[(-2)+-6]
 10093  018F0C  0EF8               	movlw	-8
 10094  018F0E  006F FF8F FFE6     	movff	plusw1,postinc1
 10095  018F14  006F FF8F FFE6     	movff	plusw1,postinc1
 10096                           
 10097                           ;stkvar	_cfmt @ sp[(-4)+0]
 10098  018F1A  0EFC               	movlw	252
 10099  018F1C  24E1               	addwf	fsr1l,w,c
 10100  018F1E  6E01               	movwf	btemp^0,c
 10101  018F20  0EFF               	movlw	255
 10102  018F22  20E2               	addwfc	fsr1h,w,c
 10103  018F24  6E02               	movwf	(btemp+1)^0,c
 10104  018F26  0060  F007  FFE6   	movff	btemp,postinc1
 10105  018F2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10106                           
 10107                           ;stkvar	_fp @ sp[(-6)+-2]
 10108  018F32  0EF8               	movlw	-8
 10109  018F34  006F FF8F FFE6     	movff	plusw1,postinc1
 10110  018F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 10111  018F40  EC22  F089         	call	_vfpfcnvrt	;wreg free
 10112  018F44  5001               	movf	btemp^0,w,c
 10113  018F46  0100               	movlb	0	; () banked
 10114  018F48  27C7               	addwf	_nout& (0+255),f,b
 10115  018F4A  5002               	movf	(btemp+1)^0,w,c
 10116  018F4C  23C8               	addwfc	(_nout+1)& (0+255),f,b
 10117  018F4E                     l11735:
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10121                           ;stkvar	_cfmt @ sp[(-2)+0]
 10122  018F4E  50E1               	movf	fsr1l,w,c
 10123  018F50  0FFE               	addlw	-2
 10124  018F52  6ED9               	movwf	fsr2l,c
 10125  018F54  50E2               	movf	fsr1h,w,c
 10126  018F56  6EDA               	movwf	fsr2h,c
 10127  018F58  0EFF               	movlw	255
 10128  018F5A  22DA               	addwfc	fsr2h,f,c
 10129  018F5C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10130  018F62  006F FF77 FFF7     	movff	postdec2,tblptrh
 10131  018F68                     	if	0	;tblptru may be non-zero
 10132  018F68                     	endif
 10133  018F68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10134  018F68  0E00               	movlw	low (__mediumconst shr (0+16))
 10135  018F6A  6EF8               	movwf	tblptru,c
 10136  018F6C                     	endif
 10137  018F6C  0008               	tblrd		*
 10138  018F6E  50F5               	movf	tablat,w,c
 10139  018F70  0900               	iorlw	0
 10140  018F72  A4D8               	btfss	status,2,c
 10141  018F74  D7CB               	goto	l11733
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10145  018F76  0060  F31C  F001   	movff	_nout,btemp
 10146  018F7C  0060  F320  F002   	movff	_nout+1,btemp+1
 10147                           
 10148                           ; BSR set to: 0
 10149                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10150  018F82  0EF8               	movlw	248
 10151  018F84  26E1               	addwf	fsr1l,f,c
 10152  018F86  0EFF               	movlw	255
 10153  018F88  22E2               	addwfc	fsr1h,f,c
 10154  018F8A  0012               	return		;funcret
 10155  018F8C                     __end_of_vfprintf:
 10156                           	opt callstack 0
 10157                           
 10158 ;; *************** function _vfpfcnvrt *****************
 10159 ;; Defined at:
 10160 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10163 ;;		 -> f(6), NULL(0), 
 10164 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10165 ;;		 -> cfmt(2), 
 10166 ;;  ap              2  [STACK] PTR PTR void 
 10167 ;;		 -> ap(2), ap(2), 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  llu             8  [STACK] unsigned long long 
 10170 ;;  ll              8  [STACK] long long 
 10171 ;;  f               4  [STACK] long long 
 10172 ;;  ct              3  [STACK] unsigned char [3]
 10173 ;;  vp              3    0        PTR void 
 10174 ;;  cp              2  [STACK] PTR unsigned char 
 10175 ;;		 -> ?_printf(2), ?_sprintf(2), STR_32(9), STR_31(12), 
 10176 ;;		 -> D.lcd(288), D(290), T(144), STR_7(4), 
 10177 ;;		 -> STR_3(4), V(188), 
 10178 ;;  i               2    0        int 
 10179 ;;  done            2    0        int 
 10180 ;;  c               1  [STACK] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  2  [STACK] int 
 10183 ;; Registers used:
 10184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10194 ;;Total ram usage:        0 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:   21
 10197 ;; This function calls:
 10198 ;;		_atoi
 10199 ;;		_ctoa
 10200 ;;		_dtoa
 10201 ;;		_efgtoa
 10202 ;;		_fputc
 10203 ;;		_isdigit
 10204 ;;		_isupper
 10205 ;;		_stoa
 10206 ;;		_strncmp
 10207 ;;		_tolower
 10208 ;;		_utoa
 10209 ;;		_xtoa
 10210 ;; This function is called by:
 10211 ;;		_vfprintf
 10212 ;; This function uses a reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text45
 10216  011244                     __ptext45:
 10217                           	opt callstack 0
 10218  011244                     _vfpfcnvrt:
 10219                           	opt callstack 0
 10220                           
 10221                           ; BSR set to: 0
 10222                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10223  011244  0E20               	movlw	32
 10224  011246  26E1               	addwf	fsr1l,f,c
 10225  011248  0E00               	movlw	0
 10226  01124A  22E2               	addwfc	fsr1h,f,c
 10227                           
 10228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10229                           ;stkvar	_fmt @ sp[(-32)+-4]
 10230                           
 10231                           ;incstack = 0
 10232 ;; hardware stack exceeded
 10233  01124C  0EDC               	movlw	-36
 10234  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10235  011254  0EDD               	movlw	-35
 10236  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
 10237  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10238  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
 10239  011268                     	if	0	;tblptru may be non-zero
 10240  011268                     	endif
 10241  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10242  011268  0E00               	movlw	low (__mediumconst shr (0+16))
 10243  01126A  6EF8               	movwf	tblptru,c
 10244  01126C                     	endif
 10245  01126C  0008               	tblrd		*
 10246  01126E  50F5               	movf	tablat,w,c
 10247  011270  0A25               	xorlw	37
 10248  011272  A4D8               	btfss	status,2,c
 10249  011274  EFC9  F090         	goto	l11679
 10250                           
 10251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10252                           ;stkvar	_fmt @ sp[(-32)+-4]
 10253  011278  0EDC               	movlw	-36
 10254  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10255  011280  0EDD               	movlw	-35
 10256  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
 10257  011288  2ADE               	incf	postinc2,f,c
 10258  01128A  0E00               	movlw	0
 10259  01128C  22DD               	addwfc	postdec2,f,c
 10260                           
 10261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10262  01128E  6A21               	clrf	_width^0,c
 10263  011290  6A22               	clrf	(_width+1)^0,c
 10264  011292  6A25               	clrf	_flags^0,c
 10265  011294  6A26               	clrf	(_flags+1)^0,c
 10266                           
 10267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10268  011296  6823               	setf	_prec^0,c
 10269  011298  6824               	setf	(_prec+1)^0,c
 10270                           
 10271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 10272                           ;stkvar	_fmt @ sp[(-32)+-4]
 10273  01129A  0EDC               	movlw	-36
 10274  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10275  0112A2  0EDD               	movlw	-35
 10276  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10277  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10278  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10279  0112B6                     	if	0	;tblptru may be non-zero
 10280  0112B6                     	endif
 10281  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10282  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
 10283  0112B8  6EF8               	movwf	tblptru,c
 10284  0112BA                     	endif
 10285  0112BA  0008               	tblrd		*
 10286  0112BC  50F5               	movf	tablat,w,c
 10287  0112BE  0A2A               	xorlw	42
 10288  0112C0  A4D8               	btfss	status,2,c
 10289  0112C2  D031               	goto	l11497
 10290                           
 10291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 10292                           ;stkvar	_fmt @ sp[(-32)+-4]
 10293  0112C4  0EDC               	movlw	-36
 10294  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10295  0112CC  0EDD               	movlw	-35
 10296  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10297  0112D4  2ADE               	incf	postinc2,f,c
 10298  0112D6  0E00               	movlw	0
 10299  0112D8  22DD               	addwfc	postdec2,f,c
 10300                           
 10301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 10302                           ;stkvar	_ap @ sp[(-32)+-6]
 10303  0112DA  0EDA               	movlw	-38
 10304  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10305  0112E2  0EDB               	movlw	-37
 10306  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10307  0112EA  0E02               	movlw	2
 10308  0112EC  5EDE               	subwf	postinc2,f,c
 10309  0112EE  0E00               	movlw	0
 10310  0112F0  5ADD               	subwfb	postdec2,f,c
 10311  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
 10312  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
 10313  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10314  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10315  01130A  006F FF78  F021    	movff	postinc2,_width
 10316  011310  006F FF74  F022    	movff	postdec2,_width+1
 10317                           
 10318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 10319  011316  AE22               	btfss	(_width+1)^0,7,c
 10320  011318  D066               	goto	u11200
 10321                           
 10322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 10323  01131A  8025               	bsf	_flags^0,0,c
 10324                           
 10325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10326  01131C  6C21               	negf	_width^0,c
 10327  01131E  1E22               	comf	(_width+1)^0,f,c
 10328  011320  B0D8               	btfsc	status,0,c
 10329  011322  2A22               	incf	(_width+1)^0,f,c
 10330  011324  D060               	goto	u11200
 10331  011326                     l11497:
 10332                           
 10333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10334                           ;stkvar	_fmt @ sp[(-32)+-4]
 10335  011326  0EDC               	movlw	-36
 10336  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 10337  01132E  0EDD               	movlw	-35
 10338  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 10339  011336  006F FF78  F00B    	movff	postinc2,btemp+10
 10340  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
 10341  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10342  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
 10343  01134E  EC27  F0B3         	call	_atoi	;wreg free
 10344  011352  0060  F004  F021   	movff	btemp,_width
 10345  011358  0060  F008  F022   	movff	btemp+1,_width+1
 10346                           
 10347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10348  01135E  D00B               	goto	l11501
 10349  011360                     l11499:
 10350                           
 10351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10352                           ;stkvar	_fmt @ sp[(-32)+-4]
 10353  011360  0EDC               	movlw	-36
 10354  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
 10355  011368  0EDD               	movlw	-35
 10356  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10357  011370  2ADE               	incf	postinc2,f,c
 10358  011372  0E00               	movlw	0
 10359  011374  22DD               	addwfc	postdec2,f,c
 10360  011376                     l11501:
 10361  011376  0ED0               	movlw	208
 10362  011378  6E0B               	movwf	(btemp+10)^0,c
 10363  01137A  0EFF               	movlw	255
 10364  01137C  6E0C               	movwf	(btemp+11)^0,c
 10365                           
 10366                           ;stkvar	_fmt @ sp[(-32)+-4]
 10367  01137E  0EDC               	movlw	-36
 10368  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
 10369  011386  0EDD               	movlw	-35
 10370  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
 10371  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10372  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
 10373  01139A                     	if	0	;tblptru may be non-zero
 10374  01139A                     	endif
 10375  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10376  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
 10377  01139C  6EF8               	movwf	tblptru,c
 10378  01139E                     	endif
 10379  01139E  0008               	tblrd		*
 10380  0113A0  50F5               	movf	tablat,w,c
 10381  0113A2  6E09               	movwf	(btemp+8)^0,c
 10382  0113A4  6A0A               	clrf	(btemp+9)^0,c
 10383  0113A6  500B               	movf	(btemp+10)^0,w,c
 10384  0113A8  2609               	addwf	(btemp+8)^0,f,c
 10385  0113AA  500C               	movf	(btemp+11)^0,w,c
 10386  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10387  0113AE  500A               	movf	(btemp+9)^0,w,c
 10388  0113B0  E106               	bnz	u11180
 10389  0113B2  0E0A               	movlw	10
 10390  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10391  0113B6  B0D8               	btfsc	status,0,c
 10392  0113B8  D002               	goto	u11180
 10393  0113BA  0E01               	movlw	1
 10394  0113BC  D001               	goto	u11190
 10395  0113BE                     u11180:
 10396  0113BE  0E00               	movlw	0
 10397  0113C0                     u11190:
 10398  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10399  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10400                           
 10401                           ;stkvar	_vfpfcnvrt$5250 @ sp[(-32)+4]
 10402  0113C4  0EE4               	movlw	-28
 10403  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10404  0113CC  0EE5               	movlw	-27
 10405  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10406                           
 10407                           ;stkvar	_vfpfcnvrt$5250 @ sp[(-32)+4]
 10408  0113D4  0EE4               	movlw	-28
 10409  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10410  0113DC  0EE5               	movlw	-27
 10411  0113DE  50E3               	movf	plusw1,w,c
 10412  0113E0  1001               	iorwf	btemp^0,w,c
 10413  0113E2  A4D8               	btfss	status,2,c
 10414  0113E4  D7BD               	goto	l11499
 10415  0113E6                     u11200:
 10416                           
 10417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10418                           ;stkvar	_fmt @ sp[(-32)+-4]
 10419  0113E6  0EDC               	movlw	-36
 10420  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10421  0113EE  0EDD               	movlw	-35
 10422  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10423  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10424  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10425  011402                     	if	0	;tblptru may be non-zero
 10426  011402                     	endif
 10427  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10428  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10429  011404  6EF8               	movwf	tblptru,c
 10430  011406                     	endif
 10431  011406  0008               	tblrd		*
 10432  011408  50F5               	movf	tablat,w,c
 10433  01140A  0A2E               	xorlw	46
 10434  01140C  A4D8               	btfss	status,2,c
 10435  01140E  D0AC               	goto	u11250
 10436                           
 10437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10438  011410  6A23               	clrf	_prec^0,c
 10439  011412  6A24               	clrf	(_prec+1)^0,c
 10440                           
 10441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10442                           ;stkvar	_fmt @ sp[(-32)+-4]
 10443  011414  0EDC               	movlw	-36
 10444  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10445  01141C  0EDD               	movlw	-35
 10446  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10447  011424  2ADE               	incf	postinc2,f,c
 10448  011426  0E00               	movlw	0
 10449  011428  22DD               	addwfc	postdec2,f,c
 10450                           
 10451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10452                           ;stkvar	_fmt @ sp[(-32)+-4]
 10453  01142A  0EDC               	movlw	-36
 10454  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10455  011432  0EDD               	movlw	-35
 10456  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10457  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10458  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10459  011446                     	if	0	;tblptru may be non-zero
 10460  011446                     	endif
 10461  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10462  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10463  011448  6EF8               	movwf	tblptru,c
 10464  01144A                     	endif
 10465  01144A  0008               	tblrd		*
 10466  01144C  50F5               	movf	tablat,w,c
 10467  01144E  0A2A               	xorlw	42
 10468  011450  A4D8               	btfss	status,2,c
 10469  011452  D02A               	goto	l11519
 10470                           
 10471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10472                           ;stkvar	_fmt @ sp[(-32)+-4]
 10473  011454  0EDC               	movlw	-36
 10474  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10475  01145C  0EDD               	movlw	-35
 10476  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10477  011464  2ADE               	incf	postinc2,f,c
 10478  011466  0E00               	movlw	0
 10479  011468  22DD               	addwfc	postdec2,f,c
 10480                           
 10481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10482                           ;stkvar	_ap @ sp[(-32)+-6]
 10483  01146A  0EDA               	movlw	-38
 10484  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10485  011472  0EDB               	movlw	-37
 10486  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10487  01147A  0E02               	movlw	2
 10488  01147C  5EDE               	subwf	postinc2,f,c
 10489  01147E  0E00               	movlw	0
 10490  011480  5ADD               	subwfb	postdec2,f,c
 10491  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10492  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10493  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10494  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10495  01149A  006F FF78  F023    	movff	postinc2,_prec
 10496  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10497                           
 10498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10499  0114A6  D060               	goto	u11250
 10500  0114A8                     l11519:
 10501                           
 10502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10503                           ;stkvar	_fmt @ sp[(-32)+-4]
 10504  0114A8  0EDC               	movlw	-36
 10505  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10506  0114B0  0EDD               	movlw	-35
 10507  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10508  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10509  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10510  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10511  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10512  0114D0  EC27  F0B3         	call	_atoi	;wreg free
 10513  0114D4  0060  F004  F023   	movff	btemp,_prec
 10514  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10515                           
 10516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10517  0114E0  D00B               	goto	l11523
 10518  0114E2                     l11521:
 10519                           
 10520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10521                           ;stkvar	_fmt @ sp[(-32)+-4]
 10522  0114E2  0EDC               	movlw	-36
 10523  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10524  0114EA  0EDD               	movlw	-35
 10525  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10526  0114F2  2ADE               	incf	postinc2,f,c
 10527  0114F4  0E00               	movlw	0
 10528  0114F6  22DD               	addwfc	postdec2,f,c
 10529  0114F8                     l11523:
 10530  0114F8  0ED0               	movlw	208
 10531  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10532  0114FC  0EFF               	movlw	255
 10533  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10534                           
 10535                           ;stkvar	_fmt @ sp[(-32)+-4]
 10536  011500  0EDC               	movlw	-36
 10537  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10538  011508  0EDD               	movlw	-35
 10539  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10540  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10541  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10542  01151C                     	if	0	;tblptru may be non-zero
 10543  01151C                     	endif
 10544  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10545  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10546  01151E  6EF8               	movwf	tblptru,c
 10547  011520                     	endif
 10548  011520  0008               	tblrd		*
 10549  011522  50F5               	movf	tablat,w,c
 10550  011524  6E09               	movwf	(btemp+8)^0,c
 10551  011526  6A0A               	clrf	(btemp+9)^0,c
 10552  011528  500B               	movf	(btemp+10)^0,w,c
 10553  01152A  2609               	addwf	(btemp+8)^0,f,c
 10554  01152C  500C               	movf	(btemp+11)^0,w,c
 10555  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10556  011530  500A               	movf	(btemp+9)^0,w,c
 10557  011532  E106               	bnz	u11230
 10558  011534  0E0A               	movlw	10
 10559  011536  5C09               	subwf	(btemp+8)^0,w,c
 10560  011538  B0D8               	btfsc	status,0,c
 10561  01153A  D002               	goto	u11230
 10562  01153C  0E01               	movlw	1
 10563  01153E  D001               	goto	u11240
 10564  011540                     u11230:
 10565  011540  0E00               	movlw	0
 10566  011542                     u11240:
 10567  011542  6E0B               	movwf	(btemp+10)^0,c
 10568  011544  6A0C               	clrf	(btemp+11)^0,c
 10569                           
 10570                           ;stkvar	_vfpfcnvrt$5251 @ sp[(-32)+0]
 10571  011546  0EE0               	movlw	-32
 10572  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10573  01154E  0EE1               	movlw	-31
 10574  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10575                           
 10576                           ;stkvar	_vfpfcnvrt$5251 @ sp[(-32)+0]
 10577  011556  0EE0               	movlw	-32
 10578  011558  006F FF8C  F001    	movff	plusw1,btemp
 10579  01155E  0EE1               	movlw	-31
 10580  011560  50E3               	movf	plusw1,w,c
 10581  011562  1001               	iorwf	btemp^0,w,c
 10582  011564  A4D8               	btfss	status,2,c
 10583  011566  D7BD               	goto	l11521
 10584  011568                     u11250:
 10585                           
 10586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10587                           ;stkvar	_fmt @ sp[(-32)+-4]
 10588  011568  0EDC               	movlw	-36
 10589  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10590  011570  0EDD               	movlw	-35
 10591  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10592  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10593  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10594  011584                     	if	0	;tblptru may be non-zero
 10595  011584                     	endif
 10596  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10597  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10598  011586  6EF8               	movwf	tblptru,c
 10599  011588                     	endif
 10600  011588  0008               	tblrd		*
 10601  01158A  50F5               	movf	tablat,w,c
 10602  01158C  6EE6               	movwf	postinc1,c
 10603  01158E  0E00               	movlw	0
 10604  011590  6EE6               	movwf	postinc1,c
 10605  011592  ECB4  F0CA         	call	_tolower	;wreg free
 10606                           
 10607                           ;stkvar	_ct @ sp[(-32)+26]
 10608  011596  0EFA               	movlw	-6
 10609  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10610                           
 10611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10612                           ;stkvar	_ct @ sp[(-32)+26]
 10613  01159E  0EFA               	movlw	-6
 10614  0115A0  50E3               	movf	plusw1,w,c
 10615  0115A2  B4D8               	btfsc	status,2,c
 10616  0115A4  D05B               	goto	l11539
 10617                           
 10618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10619                           ;stkvar	_ct @ sp[(-32)+26]
 10620  0115A6  0EFB               	movlw	251
 10621  0115A8  24E1               	addwf	fsr1l,w,c
 10622  0115AA  6ED9               	movwf	fsr2l,c
 10623  0115AC  0EFF               	movlw	255
 10624  0115AE  20E2               	addwfc	fsr1h,w,c
 10625  0115B0  6EDA               	movwf	fsr2h,c
 10626                           
 10627                           ;stkvar	_fmt @ sp[(-32)+-4]
 10628  0115B2  0EDC               	movlw	-36
 10629  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10630  0115BA  0EDD               	movlw	-35
 10631  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10632  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10633  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10634  0115CE  0E01               	movlw	1
 10635  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10636  0115D2  0E00               	movlw	0
 10637  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10638  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10639  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10640  0115E2                     	if	0	;tblptru may be non-zero
 10641  0115E2                     	endif
 10642  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10643  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10644  0115E4  6EF8               	movwf	tblptru,c
 10645  0115E6                     	endif
 10646  0115E6  0008               	tblrd		*
 10647  0115E8  50F5               	movf	tablat,w,c
 10648  0115EA  6EE6               	movwf	postinc1,c
 10649  0115EC  0E00               	movlw	0
 10650  0115EE  6EE6               	movwf	postinc1,c
 10651  0115F0  ECB4  F0CA         	call	_tolower	;wreg free
 10652  0115F4  5001               	movf	btemp^0,w,c
 10653  0115F6  6EDF               	movwf	indf2,c
 10654                           
 10655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10656                           ;stkvar	_ct @ sp[(-32)+26]
 10657  0115F8  0EFB               	movlw	251
 10658  0115FA  24E1               	addwf	fsr1l,w,c
 10659  0115FC  6ED9               	movwf	fsr2l,c
 10660  0115FE  0EFF               	movlw	255
 10661  011600  20E2               	addwfc	fsr1h,w,c
 10662  011602  6EDA               	movwf	fsr2h,c
 10663  011604  50DF               	movf	indf2,w,c
 10664  011606  B4D8               	btfsc	status,2,c
 10665  011608  D029               	goto	l11539
 10666                           
 10667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10668                           ;stkvar	_ct @ sp[(-32)+26]
 10669  01160A  0EFC               	movlw	252
 10670  01160C  24E1               	addwf	fsr1l,w,c
 10671  01160E  6ED9               	movwf	fsr2l,c
 10672  011610  0EFF               	movlw	255
 10673  011612  20E2               	addwfc	fsr1h,w,c
 10674  011614  6EDA               	movwf	fsr2h,c
 10675                           
 10676                           ;stkvar	_fmt @ sp[(-32)+-4]
 10677  011616  0EDC               	movlw	-36
 10678  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10679  01161E  0EDD               	movlw	-35
 10680  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10681  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10682  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10683  011632  0E02               	movlw	2
 10684  011634  260B               	addwf	(btemp+10)^0,f,c
 10685  011636  0E00               	movlw	0
 10686  011638  220C               	addwfc	(btemp+11)^0,f,c
 10687  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10688  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10689  011646                     	if	0	;tblptru may be non-zero
 10690  011646                     	endif
 10691  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10692  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10693  011648  6EF8               	movwf	tblptru,c
 10694  01164A                     	endif
 10695  01164A  0008               	tblrd		*
 10696  01164C  50F5               	movf	tablat,w,c
 10697  01164E  6EE6               	movwf	postinc1,c
 10698  011650  0E00               	movlw	0
 10699  011652  6EE6               	movwf	postinc1,c
 10700  011654  ECB4  F0CA         	call	_tolower	;wreg free
 10701  011658  5001               	movf	btemp^0,w,c
 10702  01165A  6EDF               	movwf	indf2,c
 10703  01165C                     l11539:
 10704                           
 10705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10706                           ;stkvar	_fmt @ sp[(-32)+-4]
 10707  01165C  0EDC               	movlw	-36
 10708  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10709  011664  0EDD               	movlw	-35
 10710  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10711  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10712  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10713  011678                     	if	0	;tblptru may be non-zero
 10714  011678                     	endif
 10715  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10716  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10717  01167A  6EF8               	movwf	tblptru,c
 10718  01167C                     	endif
 10719  01167C  0008               	tblrd		*
 10720  01167E  50F5               	movf	tablat,w,c
 10721  011680  0A63               	xorlw	99
 10722  011682  A4D8               	btfss	status,2,c
 10723  011684  D037               	goto	l11549
 10724                           
 10725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10726                           ;stkvar	_fmt @ sp[(-32)+-4]
 10727  011686  0EDC               	movlw	-36
 10728  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10729  01168E  0EDD               	movlw	-35
 10730  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10731  011696  2ADE               	incf	postinc2,f,c
 10732  011698  0E00               	movlw	0
 10733  01169A  22DD               	addwfc	postdec2,f,c
 10734                           
 10735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10736                           ;stkvar	_ap @ sp[(-32)+-6]
 10737  01169C  0EDA               	movlw	-38
 10738  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10739  0116A4  0EDB               	movlw	-37
 10740  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10741  0116AC  0E02               	movlw	2
 10742  0116AE  5EDE               	subwf	postinc2,f,c
 10743  0116B0  0E00               	movlw	0
 10744  0116B2  5ADD               	subwfb	postdec2,f,c
 10745  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10746  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10747  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10748  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10749  0116CC  50DF               	movf	indf2,w,c
 10750  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10751                           
 10752                           ;stkvar	_c @ sp[(-32)+31]
 10753  0116D0  0EFF               	movlw	-1
 10754  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10755                           
 10756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10757                           ;stkvar	_c @ sp[(-32)+31]
 10758  0116D8  0EFF               	movlw	-1
 10759  0116DA  50E3               	movf	plusw1,w,c
 10760  0116DC  6EE6               	movwf	postinc1,c
 10761                           
 10762                           ;stkvar	_fp @ sp[(-33)+-2]
 10763  0116DE  0EDD               	movlw	-35
 10764  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10765  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10766  0116EC  EC2E  F0CA         	call	_ctoa	;wreg free
 10767  0116F0  EFF3  F090         	goto	l2237
 10768  0116F4                     l11549:
 10769                           
 10770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10771                           ;stkvar	_fmt @ sp[(-32)+-4]
 10772  0116F4  0EDC               	movlw	-36
 10773  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10774  0116FC  0EDD               	movlw	-35
 10775  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10776  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
 10777  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10778  011710                     	if	0	;tblptru may be non-zero
 10779  011710                     	endif
 10780  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10781  011710  0E00               	movlw	low (__mediumconst shr (0+16))
 10782  011712  6EF8               	movwf	tblptru,c
 10783  011714                     	endif
 10784  011714  0008               	tblrd		*
 10785  011716  50F5               	movf	tablat,w,c
 10786  011718  0A64               	xorlw	100
 10787  01171A  B4D8               	btfsc	status,2,c
 10788  01171C  D015               	goto	u11300
 10789                           
 10790                           ;stkvar	_fmt @ sp[(-32)+-4]
 10791  01171E  0EDC               	movlw	-36
 10792  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
 10793  011726  0EDD               	movlw	-35
 10794  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
 10795  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10796  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
 10797  01173A                     	if	0	;tblptru may be non-zero
 10798  01173A                     	endif
 10799  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10800  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
 10801  01173C  6EF8               	movwf	tblptru,c
 10802  01173E                     	endif
 10803  01173E  0008               	tblrd		*
 10804  011740  50F5               	movf	tablat,w,c
 10805  011742  0A69               	xorlw	105
 10806  011744  A4D8               	btfss	status,2,c
 10807  011746  D076               	goto	l11561
 10808  011748                     u11300:
 10809                           
 10810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10811                           ;stkvar	_fmt @ sp[(-32)+-4]
 10812  011748  0EDC               	movlw	-36
 10813  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10814  011750  0EDD               	movlw	-35
 10815  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
 10816  011758  2ADE               	incf	postinc2,f,c
 10817  01175A  0E00               	movlw	0
 10818  01175C  22DD               	addwfc	postdec2,f,c
 10819                           
 10820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10821                           ;stkvar	_ap @ sp[(-32)+-6]
 10822  01175E  0EDA               	movlw	-38
 10823  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
 10824  011766  0EDB               	movlw	-37
 10825  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
 10826  01176E  0E02               	movlw	2
 10827  011770  5EDE               	subwf	postinc2,f,c
 10828  011772  0E00               	movlw	0
 10829  011774  5ADD               	subwfb	postdec2,f,c
 10830  011776  006F FF78  F00B    	movff	postinc2,btemp+10
 10831  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
 10832  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10833  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10834  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
 10835  011794  006F FF74  F00C    	movff	postdec2,btemp+11
 10836                           
 10837                           ;stkvar	_ll @ sp[(-32)+14]
 10838  01179A  0EEE               	movlw	-18
 10839  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10840  0117A2  0EEF               	movlw	-17
 10841  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10842  0117AA  6A01               	clrf	btemp^0,c
 10843  0117AC  BEE3               	btfsc	plusw1,7,c
 10844  0117AE  6801               	setf	btemp^0,c
 10845  0117B0  0EF0               	movlw	-16
 10846  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
 10847  0117B8  0EF1               	movlw	-15
 10848  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
 10849  0117C0  0EF2               	movlw	-14
 10850  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
 10851  0117C8  0EF3               	movlw	-13
 10852  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
 10853  0117D0  0EF4               	movlw	-12
 10854  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
 10855  0117D8  0EF5               	movlw	-11
 10856  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
 10857  0117E0                     l11557:
 10858                           
 10859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10860                           ;stkvar	_ll @ sp[(-32)+14]
 10861  0117E0  50E1               	movf	fsr1l,w,c
 10862  0117E2  0FEE               	addlw	-18
 10863  0117E4  6ED9               	movwf	fsr2l,c
 10864  0117E6  50E2               	movf	fsr1h,w,c
 10865  0117E8  6EDA               	movwf	fsr2h,c
 10866  0117EA  0EFF               	movlw	255
 10867  0117EC  22DA               	addwfc	fsr2h,f,c
 10868  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
 10869  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
 10870  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
 10871  011800  006F FF7B FFE6     	movff	postinc2,postinc1
 10872  011806  006F FF7B FFE6     	movff	postinc2,postinc1
 10873  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
 10874  011812  006F FF7B FFE6     	movff	postinc2,postinc1
 10875  011818  006F FF7B FFE6     	movff	postinc2,postinc1
 10876                           
 10877                           ;stkvar	_fp @ sp[(-40)+-2]
 10878  01181E  0ED6               	movlw	-42
 10879  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 10880  011826  006F FF8F FFE6     	movff	plusw1,postinc1
 10881  01182C  EC2A  F0A6         	call	_dtoa	;wreg free
 10882  011830  EFF3  F090         	goto	l2237
 10883  011834                     l11561:
 10884                           
 10885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10886  011834  0E02               	movlw	2
 10887  011836  6EE6               	movwf	postinc1,c
 10888  011838  0E00               	movlw	0
 10889  01183A  6EE6               	movwf	postinc1,c
 10890  01183C  0EEA               	movlw	low STR_59
 10891  01183E  6EE6               	movwf	postinc1,c
 10892  011840  0EFF               	movlw	high STR_59
 10893  011842  6EE6               	movwf	postinc1,c
 10894                           
 10895                           ;stkvar	_fmt @ sp[(-36)+-4]
 10896  011844  0ED8               	movlw	-40
 10897  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
 10898  01184C  0ED9               	movlw	-39
 10899  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10900  011854  006F FF78  F00B    	movff	postinc2,btemp+10
 10901  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
 10902  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10903  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
 10904  01186C  EC81  F0B5         	call	_strncmp	;wreg free
 10905  011870  5001               	movf	btemp^0,w,c
 10906  011872  1002               	iorwf	(btemp+1)^0,w,c
 10907  011874  B4D8               	btfsc	status,2,c
 10908  011876  D022               	goto	u11320
 10909  011878  0E02               	movlw	2
 10910  01187A  6EE6               	movwf	postinc1,c
 10911  01187C  0E00               	movlw	0
 10912  01187E  6EE6               	movwf	postinc1,c
 10913  011880  0EF0               	movlw	low STR_63
 10914  011882  6EE6               	movwf	postinc1,c
 10915  011884  0EFF               	movlw	high STR_63
 10916  011886  6EE6               	movwf	postinc1,c
 10917                           
 10918                           ;stkvar	_fmt @ sp[(-36)+-4]
 10919  011888  0ED8               	movlw	-40
 10920  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10921  011890  0ED9               	movlw	-39
 10922  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
 10923  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10924  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10925  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10926  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10927  0118B0  EC81  F0B5         	call	_strncmp	;wreg free
 10928  0118B4  5001               	movf	btemp^0,w,c
 10929  0118B6  1002               	iorwf	(btemp+1)^0,w,c
 10930  0118B8  A4D8               	btfss	status,2,c
 10931  0118BA  D069               	goto	l11573
 10932  0118BC                     u11320:
 10933                           
 10934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10935                           ;stkvar	_fmt @ sp[(-32)+-4]
 10936  0118BC  0EDC               	movlw	-36
 10937  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10938  0118C4  0EDD               	movlw	-35
 10939  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10940  0118CC  0E02               	movlw	2
 10941  0118CE  26DE               	addwf	postinc2,f,c
 10942  0118D0  0E00               	movlw	0
 10943  0118D2  22DD               	addwfc	postdec2,f,c
 10944                           
 10945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10946                           ;stkvar	_ap @ sp[(-32)+-6]
 10947  0118D4  0EDA               	movlw	-38
 10948  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10949  0118DC  0EDB               	movlw	-37
 10950  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10951  0118E4  0E04               	movlw	4
 10952  0118E6  5EDE               	subwf	postinc2,f,c
 10953  0118E8  0E00               	movlw	0
 10954  0118EA  5ADD               	subwfb	postdec2,f,c
 10955  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
 10956  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
 10957  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10958  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10959  011904  006F FF78  F009    	movff	postinc2,btemp+8
 10960  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
 10961  011910  006F FF78  F00B    	movff	postinc2,btemp+10
 10962  011916  006F FF78  F00C    	movff	postinc2,btemp+11
 10963  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
 10964  011922  0060  F028  F012   	movff	btemp+9,btemp+17
 10965  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
 10966  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
 10967  011934  6A15               	clrf	(btemp+20)^0,c
 10968  011936  BE14               	btfsc	(btemp+19)^0,7,c
 10969  011938  6815               	setf	(btemp+20)^0,c
 10970  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
 10971  011940  0060  F054  F017   	movff	btemp+20,btemp+22
 10972  011946  0060  F054  F018   	movff	btemp+20,btemp+23
 10973                           
 10974                           ;stkvar	_ll @ sp[(-32)+14]
 10975  01194C  0EEE               	movlw	-18
 10976  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 10977  011954  0EEF               	movlw	-17
 10978  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10979  01195C  0EF0               	movlw	-16
 10980  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10981  011964  0EF1               	movlw	-15
 10982  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 10983  01196C  0EF2               	movlw	-14
 10984  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 10985  011974  0EF3               	movlw	-13
 10986  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10987  01197C  0EF4               	movlw	-12
 10988  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10989  011984  0EF5               	movlw	-11
 10990  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 10991  01198C  D729               	goto	l11557
 10992  01198E                     l11573:
 10993                           
 10994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 10995                           ;stkvar	_ct @ sp[(-32)+26]
 10996  01198E  0EFA               	movlw	-6
 10997  011990  006F FF8C  F001    	movff	plusw1,btemp
 10998  011996  0E66               	movlw	102
 10999  011998  1801               	xorwf	btemp^0,w,c
 11000  01199A  A4D8               	btfss	status,2,c
 11001  01199C  D06E               	goto	l11585
 11002                           
 11003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11004                           ;stkvar	_fmt @ sp[(-32)+-4]
 11005  01199E  0EDC               	movlw	-36
 11006  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11007  0119A6  0EDD               	movlw	-35
 11008  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11009  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11010  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11011  0119BA                     	if	0	;tblptru may be non-zero
 11012  0119BA                     	endif
 11013  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11014  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 11015  0119BC  6EF8               	movwf	tblptru,c
 11016  0119BE                     	endif
 11017                           
 11018                           ;stkvar	_c @ sp[(-32)+31]
 11019  0119BE  0008               	tblrd		*
 11020  0119C0  0EFF               	movlw	-1
 11021  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 11022                           
 11023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11024                           ;stkvar	_fmt @ sp[(-32)+-4]
 11025  0119C8  0EDC               	movlw	-36
 11026  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11027  0119D0  0EDD               	movlw	-35
 11028  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11029  0119D8  2ADE               	incf	postinc2,f,c
 11030  0119DA  0E00               	movlw	0
 11031  0119DC  22DD               	addwfc	postdec2,f,c
 11032                           
 11033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11034                           ;stkvar	_ap @ sp[(-32)+-6]
 11035  0119DE  0EDA               	movlw	-38
 11036  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11037  0119E6  0EDB               	movlw	-37
 11038  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11039  0119EE  0E04               	movlw	4
 11040  0119F0  5EDE               	subwf	postinc2,f,c
 11041  0119F2  0E00               	movlw	0
 11042  0119F4  5ADD               	subwfb	postdec2,f,c
 11043  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11044  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 11045  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11046  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11047  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 11048  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 11049  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 11050  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 11051                           
 11052                           ;stkvar	_f @ sp[(-32)+22]
 11053  011A26  0EF6               	movlw	-10
 11054  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 11055  011A2E  0EF7               	movlw	-9
 11056  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11057  011A36  0EF8               	movlw	-8
 11058  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11059  011A3E  0EF9               	movlw	-7
 11060  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 11061  011A46                     l11581:
 11062                           
 11063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11064                           ;stkvar	_c @ sp[(-32)+31]
 11065  011A46  0EFF               	movlw	-1
 11066  011A48  50E3               	movf	plusw1,w,c
 11067  011A4A  6EE6               	movwf	postinc1,c
 11068                           
 11069                           ;stkvar	_f @ sp[(-33)+22]
 11070  011A4C  0EF5               	movlw	-11
 11071  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 11072  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 11073  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 11074  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 11075                           
 11076                           ;stkvar	_fp @ sp[(-37)+-2]
 11077  011A66  0ED9               	movlw	-39
 11078  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 11079  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11080  011A74  EC00  F080         	call	_efgtoa	;wreg free
 11081  011A78  D3B6               	goto	l2237
 11082  011A7A                     l11585:
 11083                           
 11084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11085  011A7A  0E02               	movlw	2
 11086  011A7C  6EE6               	movwf	postinc1,c
 11087  011A7E  0E00               	movlw	0
 11088  011A80  6EE6               	movwf	postinc1,c
 11089  011A82  0EED               	movlw	low STR_68
 11090  011A84  6EE6               	movwf	postinc1,c
 11091  011A86  0EFF               	movlw	high STR_68
 11092  011A88  6EE6               	movwf	postinc1,c
 11093                           
 11094                           ;stkvar	_ct @ sp[(-36)+26]
 11095  011A8A  0EF6               	movlw	246
 11096  011A8C  24E1               	addwf	fsr1l,w,c
 11097  011A8E  6E01               	movwf	btemp^0,c
 11098  011A90  0EFF               	movlw	255
 11099  011A92  20E2               	addwfc	fsr1h,w,c
 11100  011A94  6E02               	movwf	(btemp+1)^0,c
 11101  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 11102  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11103  011AA2  EC81  F0B5         	call	_strncmp	;wreg free
 11104  011AA6  5001               	movf	btemp^0,w,c
 11105  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 11106  011AAA  A4D8               	btfss	status,2,c
 11107  011AAC  D096               	goto	l11605
 11108                           
 11109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11110                           ;stkvar	_fmt @ sp[(-32)+-4]
 11111  011AAE  0EDC               	movlw	-36
 11112  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11113  011AB6  0EDD               	movlw	-35
 11114  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11115  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 11116  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 11117  011ACA  0E01               	movlw	1
 11118  011ACC  260B               	addwf	(btemp+10)^0,f,c
 11119  011ACE  0E00               	movlw	0
 11120  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 11121  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11122  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11123  011ADE                     	if	0	;tblptru may be non-zero
 11124  011ADE                     	endif
 11125  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11126  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 11127  011AE0  6EF8               	movwf	tblptru,c
 11128  011AE2                     	endif
 11129                           
 11130                           ;stkvar	_c @ sp[(-32)+31]
 11131  011AE2  0008               	tblrd		*
 11132  011AE4  0EFF               	movlw	-1
 11133  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 11134  011AEC  0EBF               	movlw	191
 11135  011AEE  6E0B               	movwf	(btemp+10)^0,c
 11136  011AF0  0EFF               	movlw	255
 11137  011AF2  6E0C               	movwf	(btemp+11)^0,c
 11138                           
 11139                           ;stkvar	_fmt @ sp[(-32)+-4]
 11140  011AF4  0EDC               	movlw	-36
 11141  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11142  011AFC  0EDD               	movlw	-35
 11143  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11144  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 11145  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11146  011B10                     	if	0	;tblptru may be non-zero
 11147  011B10                     	endif
 11148  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11149  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 11150  011B12  6EF8               	movwf	tblptru,c
 11151  011B14                     	endif
 11152  011B14  0008               	tblrd		*
 11153  011B16  50F5               	movf	tablat,w,c
 11154  011B18  6E09               	movwf	(btemp+8)^0,c
 11155  011B1A  6A0A               	clrf	(btemp+9)^0,c
 11156  011B1C  500B               	movf	(btemp+10)^0,w,c
 11157  011B1E  2609               	addwf	(btemp+8)^0,f,c
 11158  011B20  500C               	movf	(btemp+11)^0,w,c
 11159  011B22  220A               	addwfc	(btemp+9)^0,f,c
 11160  011B24  500A               	movf	(btemp+9)^0,w,c
 11161  011B26  E106               	bnz	u11350
 11162  011B28  0E1A               	movlw	26
 11163  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 11164  011B2C  B0D8               	btfsc	status,0,c
 11165  011B2E  D002               	goto	u11350
 11166  011B30  0E01               	movlw	1
 11167  011B32  D001               	goto	u11360
 11168  011B34                     u11350:
 11169  011B34  0E00               	movlw	0
 11170  011B36                     u11360:
 11171  011B36  6E0B               	movwf	(btemp+10)^0,c
 11172  011B38  6A0C               	clrf	(btemp+11)^0,c
 11173                           
 11174                           ;stkvar	_vfpfcnvrt$5262 @ sp[(-32)+2]
 11175  011B3A  0EE2               	movlw	-30
 11176  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11177  011B42  0EE3               	movlw	-29
 11178  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 11179                           
 11180                           ;stkvar	_vfpfcnvrt$5262 @ sp[(-32)+2]
 11181  011B4A  0EE2               	movlw	-30
 11182  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 11183  011B52  0EE3               	movlw	-29
 11184  011B54  50E3               	movf	plusw1,w,c
 11185  011B56  1001               	iorwf	btemp^0,w,c
 11186                           
 11187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11188                           ;stkvar	_ap @ sp[(-32)+-6]
 11189                           
 11190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 11191                           
 11192                           ;stkvar	_f @ sp[(-32)+22]
 11193                           
 11194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 11195                           ;stkvar	_ap @ sp[(-32)+-6]
 11196  011B58  0EDA               	movlw	-38
 11197  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11198  011B60  0EDB               	movlw	-37
 11199  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 11200  011B68  0E04               	movlw	4
 11201  011B6A  5EDE               	subwf	postinc2,f,c
 11202  011B6C  0E00               	movlw	0
 11203  011B6E  5ADD               	subwfb	postdec2,f,c
 11204  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 11205  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 11206  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11207  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11208  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 11209  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 11210  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 11211  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 11212                           
 11213                           ;stkvar	_f @ sp[(-32)+22]
 11214  011BA0  0EF6               	movlw	-10
 11215  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 11216  011BA8  0EF7               	movlw	-9
 11217  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11218  011BB0  0EF8               	movlw	-8
 11219  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11220  011BB8  0EF9               	movlw	-7
 11221  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11222                           
 11223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 11224                           ;stkvar	_fmt @ sp[(-32)+-4]
 11225  011BC0  0EDC               	movlw	-36
 11226  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11227  011BC8  0EDD               	movlw	-35
 11228  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11229  011BD0  0E02               	movlw	2
 11230  011BD2  26DE               	addwf	postinc2,f,c
 11231  011BD4  0E00               	movlw	0
 11232  011BD6  22DD               	addwfc	postdec2,f,c
 11233  011BD8  D736               	goto	l11581
 11234  011BDA                     l11605:
 11235                           
 11236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 11237                           ;stkvar	_fmt @ sp[(-32)+-4]
 11238  011BDA  0EDC               	movlw	-36
 11239  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11240  011BE2  0EDD               	movlw	-35
 11241  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11242  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11243  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11244  011BF6                     	if	0	;tblptru may be non-zero
 11245  011BF6                     	endif
 11246  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11247  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 11248  011BF8  6EF8               	movwf	tblptru,c
 11249  011BFA                     	endif
 11250  011BFA  0008               	tblrd		*
 11251  011BFC  50F5               	movf	tablat,w,c
 11252  011BFE  0A73               	xorlw	115
 11253  011C00  A4D8               	btfss	status,2,c
 11254  011C02  D042               	goto	l11615
 11255                           
 11256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 11257                           ;stkvar	_fmt @ sp[(-32)+-4]
 11258  011C04  0EDC               	movlw	-36
 11259  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 11260  011C0C  0EDD               	movlw	-35
 11261  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11262  011C14  2ADE               	incf	postinc2,f,c
 11263  011C16  0E00               	movlw	0
 11264  011C18  22DD               	addwfc	postdec2,f,c
 11265                           
 11266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 11267                           ;stkvar	_ap @ sp[(-32)+-6]
 11268  011C1A  0EDA               	movlw	-38
 11269  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11270  011C22  0EDB               	movlw	-37
 11271  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 11272  011C2A  0E02               	movlw	2
 11273  011C2C  5EDE               	subwf	postinc2,f,c
 11274  011C2E  0E00               	movlw	0
 11275  011C30  5ADD               	subwfb	postdec2,f,c
 11276  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 11277  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 11278  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11279  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11280  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 11281  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 11282                           
 11283                           ;stkvar	_cp @ sp[(-32)+29]
 11284  011C56  0EFE               	movlw	-2
 11285  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 11286  011C5E  0EFD               	movlw	-3
 11287  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11288                           
 11289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 11290                           ;stkvar	_cp @ sp[(-32)+29]
 11291  011C66  0EFD               	movlw	-3
 11292  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 11293  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11294                           
 11295                           ;stkvar	_fp @ sp[(-34)+-2]
 11296  011C74  0EDC               	movlw	-36
 11297  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 11298  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11299  011C82  EC88  F0B0         	call	_stoa	;wreg free
 11300  011C86  D2AF               	goto	l2237
 11301  011C88                     l11615:
 11302                           
 11303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 11304                           ;stkvar	_fmt @ sp[(-32)+-4]
 11305  011C88  0EDC               	movlw	-36
 11306  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11307  011C90  0EDD               	movlw	-35
 11308  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 11309  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 11310  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11311  011CA4                     	if	0	;tblptru may be non-zero
 11312  011CA4                     	endif
 11313  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11314  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 11315  011CA6  6EF8               	movwf	tblptru,c
 11316  011CA8                     	endif
 11317  011CA8  0008               	tblrd		*
 11318  011CAA  50F5               	movf	tablat,w,c
 11319  011CAC  0A75               	xorlw	117
 11320  011CAE  A4D8               	btfss	status,2,c
 11321  011CB0  D07C               	goto	l11625
 11322                           
 11323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 11324                           ;stkvar	_fmt @ sp[(-32)+-4]
 11325  011CB2  0EDC               	movlw	-36
 11326  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11327  011CBA  0EDD               	movlw	-35
 11328  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11329  011CC2  2ADE               	incf	postinc2,f,c
 11330  011CC4  0E00               	movlw	0
 11331  011CC6  22DD               	addwfc	postdec2,f,c
 11332                           
 11333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11334                           ;stkvar	_ap @ sp[(-32)+-6]
 11335  011CC8  0EDA               	movlw	-38
 11336  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11337  011CD0  0EDB               	movlw	-37
 11338  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11339  011CD8  0E02               	movlw	2
 11340  011CDA  5EDE               	subwf	postinc2,f,c
 11341  011CDC  0E00               	movlw	0
 11342  011CDE  5ADD               	subwfb	postdec2,f,c
 11343  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 11344  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 11345  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11346  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11347  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 11348  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 11349  011D04  500B               	movf	(btemp+10)^0,w,c
 11350  011D06  6E11               	movwf	(btemp+16)^0,c
 11351  011D08  500C               	movf	(btemp+11)^0,w,c
 11352  011D0A  6E12               	movwf	(btemp+17)^0,c
 11353  011D0C  6A13               	clrf	(btemp+18)^0,c
 11354  011D0E  6A14               	clrf	(btemp+19)^0,c
 11355  011D10  6A15               	clrf	(btemp+20)^0,c
 11356  011D12  6A16               	clrf	(btemp+21)^0,c
 11357  011D14  6A17               	clrf	(btemp+22)^0,c
 11358  011D16  6A18               	clrf	(btemp+23)^0,c
 11359                           
 11360                           ;stkvar	_llu @ sp[(-32)+6]
 11361  011D18  0EE6               	movlw	-26
 11362  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11363  011D20  0EE7               	movlw	-25
 11364  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11365  011D28  0EE8               	movlw	-24
 11366  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11367  011D30  0EE9               	movlw	-23
 11368  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 11369  011D38  0EEA               	movlw	-22
 11370  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11371  011D40  0EEB               	movlw	-21
 11372  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11373  011D48  0EEC               	movlw	-20
 11374  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11375  011D50  0EED               	movlw	-19
 11376  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 11377                           
 11378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 11379                           ;stkvar	_llu @ sp[(-32)+6]
 11380  011D58  50E1               	movf	fsr1l,w,c
 11381  011D5A  0FE6               	addlw	-26
 11382  011D5C  6ED9               	movwf	fsr2l,c
 11383  011D5E  50E2               	movf	fsr1h,w,c
 11384  011D60  6EDA               	movwf	fsr2h,c
 11385  011D62  0EFF               	movlw	255
 11386  011D64  22DA               	addwfc	fsr2h,f,c
 11387  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 11388  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11389  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 11390  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 11391  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11392  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 11393  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 11394  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 11395                           
 11396                           ;stkvar	_fp @ sp[(-40)+-2]
 11397  011D96  0ED6               	movlw	-42
 11398  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11399  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11400  011DA4  ECFD  F0AB         	call	_utoa	;wreg free
 11401  011DA8  D21E               	goto	l2237
 11402  011DAA                     l11625:
 11403                           
 11404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11405  011DAA  0E02               	movlw	2
 11406  011DAC  6EE6               	movwf	postinc1,c
 11407  011DAE  0E00               	movlw	0
 11408  011DB0  6EE6               	movwf	postinc1,c
 11409  011DB2  0EF3               	movlw	low STR_73
 11410  011DB4  6EE6               	movwf	postinc1,c
 11411  011DB6  0EFF               	movlw	high STR_73
 11412  011DB8  6EE6               	movwf	postinc1,c
 11413                           
 11414                           ;stkvar	_fmt @ sp[(-36)+-4]
 11415  011DBA  0ED8               	movlw	-40
 11416  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11417  011DC2  0ED9               	movlw	-39
 11418  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11419  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 11420  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 11421  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11422  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11423  011DE2  EC81  F0B5         	call	_strncmp	;wreg free
 11424  011DE6  5001               	movf	btemp^0,w,c
 11425  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 11426  011DEA  A4D8               	btfss	status,2,c
 11427  011DEC  D039               	goto	l11635
 11428                           
 11429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 11430                           ;stkvar	_fmt @ sp[(-32)+-4]
 11431  011DEE  0EDC               	movlw	-36
 11432  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11433  011DF6  0EDD               	movlw	-35
 11434  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11435  011DFE  0E02               	movlw	2
 11436  011E00  26DE               	addwf	postinc2,f,c
 11437  011E02  0E00               	movlw	0
 11438  011E04  22DD               	addwfc	postdec2,f,c
 11439                           
 11440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11441                           ;stkvar	_ap @ sp[(-32)+-6]
 11442  011E06  0EDA               	movlw	-38
 11443  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 11444  011E0E  0EDB               	movlw	-37
 11445  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 11446  011E16  0E04               	movlw	4
 11447  011E18  5EDE               	subwf	postinc2,f,c
 11448  011E1A  0E00               	movlw	0
 11449  011E1C  5ADD               	subwfb	postdec2,f,c
 11450  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11451  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 11452  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11453  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11454  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 11455  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 11456  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 11457  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 11458  011E4E  5009               	movf	(btemp+8)^0,w,c
 11459  011E50  6E11               	movwf	(btemp+16)^0,c
 11460  011E52  500A               	movf	(btemp+9)^0,w,c
 11461  011E54  6E12               	movwf	(btemp+17)^0,c
 11462  011E56  500B               	movf	(btemp+10)^0,w,c
 11463  011E58  6E13               	movwf	(btemp+18)^0,c
 11464  011E5A  500C               	movf	(btemp+11)^0,w,c
 11465  011E5C  6E14               	movwf	(btemp+19)^0,c
 11466  011E5E  D758               	goto	L7
 11467  011E60                     l11635:
 11468                           
 11469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 11470                           ;stkvar	_fmt @ sp[(-32)+-4]
 11471  011E60  0EDC               	movlw	-36
 11472  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11473  011E68  0EDD               	movlw	-35
 11474  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11475  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 11476  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 11477  011E7C                     	if	0	;tblptru may be non-zero
 11478  011E7C                     	endif
 11479  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11480  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 11481  011E7E  6EF8               	movwf	tblptru,c
 11482  011E80                     	endif
 11483  011E80  0008               	tblrd		*
 11484  011E82  50F5               	movf	tablat,w,c
 11485  011E84  0A78               	xorlw	120
 11486  011E86  B4D8               	btfsc	status,2,c
 11487  011E88  D015               	goto	u11420
 11488                           
 11489                           ;stkvar	_fmt @ sp[(-32)+-4]
 11490  011E8A  0EDC               	movlw	-36
 11491  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11492  011E92  0EDD               	movlw	-35
 11493  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 11494  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11495  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11496  011EA6                     	if	0	;tblptru may be non-zero
 11497  011EA6                     	endif
 11498  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11499  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 11500  011EA8  6EF8               	movwf	tblptru,c
 11501  011EAA                     	endif
 11502  011EAA  0008               	tblrd		*
 11503  011EAC  50F5               	movf	tablat,w,c
 11504  011EAE  0A58               	xorlw	88
 11505  011EB0  A4D8               	btfss	status,2,c
 11506  011EB2  D094               	goto	l11649
 11507  011EB4                     u11420:
 11508                           
 11509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 11510                           ;stkvar	_fmt @ sp[(-32)+-4]
 11511  011EB4  0EDC               	movlw	-36
 11512  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11513  011EBC  0EDD               	movlw	-35
 11514  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11515  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11516  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11517  011ED0                     	if	0	;tblptru may be non-zero
 11518  011ED0                     	endif
 11519  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11520  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 11521  011ED2  6EF8               	movwf	tblptru,c
 11522  011ED4                     	endif
 11523                           
 11524                           ;stkvar	_c @ sp[(-32)+31]
 11525  011ED4  0008               	tblrd		*
 11526  011ED6  0EFF               	movlw	-1
 11527  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 11528                           
 11529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 11530                           ;stkvar	_fmt @ sp[(-32)+-4]
 11531  011EDE  0EDC               	movlw	-36
 11532  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11533  011EE6  0EDD               	movlw	-35
 11534  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11535  011EEE  2ADE               	incf	postinc2,f,c
 11536  011EF0  0E00               	movlw	0
 11537  011EF2  22DD               	addwfc	postdec2,f,c
 11538                           
 11539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11540                           ;stkvar	_ap @ sp[(-32)+-6]
 11541  011EF4  0EDA               	movlw	-38
 11542  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11543  011EFC  0EDB               	movlw	-37
 11544  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11545  011F04  0E02               	movlw	2
 11546  011F06  5EDE               	subwf	postinc2,f,c
 11547  011F08  0E00               	movlw	0
 11548  011F0A  5ADD               	subwfb	postdec2,f,c
 11549  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 11550  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 11551  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11552  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11553  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 11554  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 11555  011F30  500B               	movf	(btemp+10)^0,w,c
 11556  011F32  6E11               	movwf	(btemp+16)^0,c
 11557  011F34  500C               	movf	(btemp+11)^0,w,c
 11558  011F36  6E12               	movwf	(btemp+17)^0,c
 11559  011F38  6A13               	clrf	(btemp+18)^0,c
 11560  011F3A  6A14               	clrf	(btemp+19)^0,c
 11561  011F3C  6A15               	clrf	(btemp+20)^0,c
 11562  011F3E  6A16               	clrf	(btemp+21)^0,c
 11563  011F40  6A17               	clrf	(btemp+22)^0,c
 11564  011F42  6A18               	clrf	(btemp+23)^0,c
 11565                           
 11566                           ;stkvar	_llu @ sp[(-32)+6]
 11567  011F44  0EE6               	movlw	-26
 11568  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 11569  011F4C  0EE7               	movlw	-25
 11570  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11571  011F54  0EE8               	movlw	-24
 11572  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11573  011F5C  0EE9               	movlw	-23
 11574  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 11575  011F64  0EEA               	movlw	-22
 11576  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 11577  011F6C  0EEB               	movlw	-21
 11578  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11579  011F74  0EEC               	movlw	-20
 11580  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11581  011F7C  0EED               	movlw	-19
 11582  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 11583                           
 11584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 11585                           ;stkvar	_c @ sp[(-32)+31]
 11586  011F84  0EFF               	movlw	-1
 11587  011F86  50E3               	movf	plusw1,w,c
 11588  011F88  6EE6               	movwf	postinc1,c
 11589                           
 11590                           ;stkvar	_llu @ sp[(-33)+6]
 11591  011F8A  50E1               	movf	fsr1l,w,c
 11592  011F8C  0FE5               	addlw	-27
 11593  011F8E  6ED9               	movwf	fsr2l,c
 11594  011F90  50E2               	movf	fsr1h,w,c
 11595  011F92  6EDA               	movwf	fsr2h,c
 11596  011F94  0EFF               	movlw	255
 11597  011F96  22DA               	addwfc	fsr2h,f,c
 11598  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 11599  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11600  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 11601  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11602  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11603  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11604  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 11605  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 11606                           
 11607                           ;stkvar	_fp @ sp[(-41)+-2]
 11608  011FC8  0ED5               	movlw	-43
 11609  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 11610  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 11611  011FD6  EC6A  F0A8         	call	_xtoa	;wreg free
 11612  011FDA  D105               	goto	l2237
 11613  011FDC                     l11649:
 11614                           
 11615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 11616  011FDC  0E02               	movlw	2
 11617  011FDE  6EE6               	movwf	postinc1,c
 11618  011FE0  0E00               	movlw	0
 11619  011FE2  6EE6               	movwf	postinc1,c
 11620  011FE4  0EF6               	movlw	low STR_78
 11621  011FE6  6EE6               	movwf	postinc1,c
 11622  011FE8  0EFF               	movlw	high STR_78
 11623  011FEA  6EE6               	movwf	postinc1,c
 11624                           
 11625                           ;stkvar	_fmt @ sp[(-36)+-4]
 11626  011FEC  0ED8               	movlw	-40
 11627  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11628  011FF4  0ED9               	movlw	-39
 11629  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11630  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 11631  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 11632  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11633  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11634  012014  EC81  F0B5         	call	_strncmp	;wreg free
 11635  012018  5001               	movf	btemp^0,w,c
 11636  01201A  1002               	iorwf	(btemp+1)^0,w,c
 11637  01201C  B4D8               	btfsc	status,2,c
 11638  01201E  D022               	goto	u11440
 11639  012020  0E02               	movlw	2
 11640  012022  6EE6               	movwf	postinc1,c
 11641  012024  0E00               	movlw	0
 11642  012026  6EE6               	movwf	postinc1,c
 11643  012028  0EE7               	movlw	low STR_82
 11644  01202A  6EE6               	movwf	postinc1,c
 11645  01202C  0EFF               	movlw	high STR_82
 11646  01202E  6EE6               	movwf	postinc1,c
 11647                           
 11648                           ;stkvar	_fmt @ sp[(-36)+-4]
 11649  012030  0ED8               	movlw	-40
 11650  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 11651  012038  0ED9               	movlw	-39
 11652  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11653  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 11654  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 11655  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11656  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 11657  012058  EC81  F0B5         	call	_strncmp	;wreg free
 11658  01205C  5001               	movf	btemp^0,w,c
 11659  01205E  1002               	iorwf	(btemp+1)^0,w,c
 11660  012060  A4D8               	btfss	status,2,c
 11661  012062  D058               	goto	l11663
 11662  012064                     u11440:
 11663                           
 11664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 11665                           ;stkvar	_fmt @ sp[(-32)+-4]
 11666  012064  0EDC               	movlw	-36
 11667  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 11668  01206C  0EDD               	movlw	-35
 11669  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11670  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 11671  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 11672  012080  0E01               	movlw	1
 11673  012082  260B               	addwf	(btemp+10)^0,f,c
 11674  012084  0E00               	movlw	0
 11675  012086  220C               	addwfc	(btemp+11)^0,f,c
 11676  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11677  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11678  012094                     	if	0	;tblptru may be non-zero
 11679  012094                     	endif
 11680  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11681  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 11682  012096  6EF8               	movwf	tblptru,c
 11683  012098                     	endif
 11684                           
 11685                           ;stkvar	_c @ sp[(-32)+31]
 11686  012098  0008               	tblrd		*
 11687  01209A  0EFF               	movlw	-1
 11688  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 11689                           
 11690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 11691                           ;stkvar	_fmt @ sp[(-32)+-4]
 11692  0120A2  0EDC               	movlw	-36
 11693  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11694  0120AA  0EDD               	movlw	-35
 11695  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11696  0120B2  0E02               	movlw	2
 11697  0120B4  26DE               	addwf	postinc2,f,c
 11698  0120B6  0E00               	movlw	0
 11699  0120B8  22DD               	addwfc	postdec2,f,c
 11700                           
 11701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11702                           ;stkvar	_ap @ sp[(-32)+-6]
 11703  0120BA  0EDA               	movlw	-38
 11704  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11705  0120C2  0EDB               	movlw	-37
 11706  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11707  0120CA  0E04               	movlw	4
 11708  0120CC  5EDE               	subwf	postinc2,f,c
 11709  0120CE  0E00               	movlw	0
 11710  0120D0  5ADD               	subwfb	postdec2,f,c
 11711  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11712  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11713  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11714  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11715  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 11716  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 11717  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11718  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 11719  012102  5009               	movf	(btemp+8)^0,w,c
 11720  012104  6E11               	movwf	(btemp+16)^0,c
 11721  012106  500A               	movf	(btemp+9)^0,w,c
 11722  012108  6E12               	movwf	(btemp+17)^0,c
 11723  01210A  500B               	movf	(btemp+10)^0,w,c
 11724  01210C  6E13               	movwf	(btemp+18)^0,c
 11725  01210E  500C               	movf	(btemp+11)^0,w,c
 11726  012110  6E14               	movwf	(btemp+19)^0,c
 11727  012112  D714               	goto	L8
 11728  012114                     l11663:
 11729                           
 11730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 11731                           ;stkvar	_fmt @ sp[(-32)+-4]
 11732  012114  0EDC               	movlw	-36
 11733  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 11734  01211C  0EDD               	movlw	-35
 11735  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11736  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 11737  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11738  012130                     	if	0	;tblptru may be non-zero
 11739  012130                     	endif
 11740  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11741  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 11742  012132  6EF8               	movwf	tblptru,c
 11743  012134                     	endif
 11744  012134  0008               	tblrd		*
 11745  012136  50F5               	movf	tablat,w,c
 11746  012138  0A25               	xorlw	37
 11747  01213A  A4D8               	btfss	status,2,c
 11748  01213C  D01A               	goto	l11673
 11749                           
 11750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 11751                           ;stkvar	_fmt @ sp[(-32)+-4]
 11752  01213E  0EDC               	movlw	-36
 11753  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 11754  012146  0EDD               	movlw	-35
 11755  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 11756  01214E  2ADE               	incf	postinc2,f,c
 11757  012150  0E00               	movlw	0
 11758  012152  22DD               	addwfc	postdec2,f,c
 11759                           
 11760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 11761                           ;stkvar	_fp @ sp[(-32)+-2]
 11762  012154  0EDE               	movlw	-34
 11763  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 11764  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 11765  012162  0E25               	movlw	37
 11766  012164  6EE6               	movwf	postinc1,c
 11767  012166  0E00               	movlw	0
 11768  012168  6EE6               	movwf	postinc1,c
 11769  01216A  EC4B  F0C1         	call	_fputc	;wreg free
 11770  01216E                     l11669:
 11771                           
 11772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 11773  01216E  0E01               	movlw	1
 11774  012170  D00C               	goto	L9
 11775  012172                     l11673:
 11776                           
 11777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11778                           ;stkvar	_fmt @ sp[(-32)+-4]
 11779  012172  0EDC               	movlw	-36
 11780  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 11781  01217A  0EDD               	movlw	-35
 11782  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11783  012182  2ADE               	incf	postinc2,f,c
 11784  012184  0E00               	movlw	0
 11785  012186  22DD               	addwfc	postdec2,f,c
 11786                           
 11787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11788  012188  0E00               	movlw	0
 11789  01218A                     L9:
 11790  01218A  6E01               	movwf	btemp^0,c
 11791  01218C  0E00               	movlw	0
 11792  01218E  6E02               	movwf	(btemp+1)^0,c
 11793  012190  D02A               	goto	l2237
 11794  012192                     l11679:
 11795                           
 11796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11797                           ;stkvar	_fp @ sp[(-32)+-2]
 11798  012192  0EDE               	movlw	-34
 11799  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 11800  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 11801                           
 11802                           ;stkvar	_fmt @ sp[(-34)+-4]
 11803  0121A0  0EDA               	movlw	-38
 11804  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11805  0121A8  0EDB               	movlw	-37
 11806  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11807  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11808  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11809  0121BC                     	if	0	;tblptru may be non-zero
 11810  0121BC                     	endif
 11811  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11812  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 11813  0121BE  6EF8               	movwf	tblptru,c
 11814  0121C0                     	endif
 11815  0121C0  0008               	tblrd		*
 11816  0121C2  50F5               	movf	tablat,w,c
 11817  0121C4  6EE6               	movwf	postinc1,c
 11818  0121C6  0E00               	movlw	0
 11819  0121C8  6EE6               	movwf	postinc1,c
 11820  0121CA  EC4B  F0C1         	call	_fputc	;wreg free
 11821                           
 11822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11823                           ;stkvar	_fmt @ sp[(-32)+-4]
 11824  0121CE  0EDC               	movlw	-36
 11825  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11826  0121D6  0EDD               	movlw	-35
 11827  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11828  0121DE  2ADE               	incf	postinc2,f,c
 11829  0121E0  0E00               	movlw	0
 11830  0121E2  22DD               	addwfc	postdec2,f,c
 11831  0121E4  D7C4               	goto	l11669
 11832  0121E6                     l2237:
 11833                           
 11834                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11835  0121E6  0EDA               	movlw	218
 11836  0121E8  26E1               	addwf	fsr1l,f,c
 11837  0121EA  0EFF               	movlw	255
 11838  0121EC  22E2               	addwfc	fsr1h,f,c
 11839  0121EE  0012               	return		;funcret
 11840  0121F0                     __end_of_vfpfcnvrt:
 11841                           	opt callstack 0
 11842                           
 11843 ;; *************** function _xtoa *****************
 11844 ;; Defined at:
 11845 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11846 ;; Parameters:    Size  Location     Type
 11847 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11848 ;;		 -> f(6), NULL(0), 
 11849 ;;  d               8  [STACK] unsigned long long 
 11850 ;;  x               1  [STACK] unsigned char 
 11851 ;; Auto vars:     Size  Location     Type
 11852 ;;  n               8  [STACK] unsigned long long 
 11853 ;;  c               2  [STACK] int 
 11854 ;;  i               2  [STACK] int 
 11855 ;;  w               2  [STACK] int 
 11856 ;;  p               2  [STACK] int 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  2  [STACK] int 
 11859 ;; Registers used:
 11860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;Total ram usage:        0 bytes
 11871 ;; Hardware stack levels used:    1
 11872 ;; Hardware stack levels required when called:   20
 11873 ;; This function calls:
 11874 ;;		_isalpha
 11875 ;;		_isupper
 11876 ;;		_pad
 11877 ;;		_toupper
 11878 ;; This function is called by:
 11879 ;;		_vfpfcnvrt
 11880 ;; This function uses a reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text46
 11884  0150D4                     __ptext46:
 11885                           	opt callstack 0
 11886  0150D4                     _xtoa:
 11887                           	opt callstack 0
 11888                           
 11889                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11890  0150D4  0E14               	movlw	20
 11891  0150D6  26E1               	addwf	fsr1l,f,c
 11892  0150D8  0E00               	movlw	0
 11893  0150DA  22E2               	addwfc	fsr1h,f,c
 11894                           
 11895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11896                           
 11897                           ;incstack = 0
 11898 ;; hardware stack exceeded
 11899  0150DC  AE24               	btfss	(_prec+1)^0,7,c
 11900                           
 11901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11902  0150DE  9225               	bcf	_flags^0,1,c
 11903                           
 11904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11905  0150E0  BE24               	btfsc	(_prec+1)^0,7,c
 11906  0150E2  D005               	goto	u10960
 11907  0150E4  5024               	movf	(_prec+1)^0,w,c
 11908  0150E6  E110               	bnz	l11399
 11909  0150E8  0423               	decf	_prec^0,w,c
 11910  0150EA  B0D8               	btfsc	status,0,c
 11911  0150EC  D00D               	goto	l11399
 11912  0150EE                     u10960:
 11913  0150EE  0E01               	movlw	1
 11914  0150F0  6E0B               	movwf	(btemp+10)^0,c
 11915  0150F2  0E00               	movlw	0
 11916  0150F4  6E0C               	movwf	(btemp+11)^0,c
 11917                           
 11918                           ;stkvar	_p @ sp[(-20)+18]
 11919  0150F6  0EFE               	movlw	-2
 11920  0150F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11921  0150FE  0EFF               	movlw	-1
 11922  015100  0060  F033  FFE3   	movff	btemp+11,plusw1
 11923  015106  D008               	goto	l2187
 11924  015108                     l11399:
 11925                           
 11926                           ;stkvar	_p @ sp[(-20)+18]
 11927  015108  0EFE               	movlw	-2
 11928  01510A  0060  F08F  FFE3   	movff	_prec,plusw1
 11929  015110  0EFF               	movlw	-1
 11930  015112  0060  F093  FFE3   	movff	_prec+1,plusw1
 11931  015118                     l2187:
 11932                           
 11933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11934                           ;stkvar	_w @ sp[(-20)+16]
 11935  015118  0EFC               	movlw	-4
 11936  01511A  0060  F087  FFE3   	movff	_width,plusw1
 11937  015120  0EFD               	movlw	-3
 11938  015122  0060  F08B  FFE3   	movff	_width+1,plusw1
 11939                           
 11940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11941  015128  A825               	btfss	_flags^0,4,c
 11942  01512A  D00B               	goto	l11405
 11943                           
 11944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 11945                           ;stkvar	_w @ sp[(-20)+16]
 11946  01512C  50E1               	movf	fsr1l,w,c
 11947  01512E  0FFC               	addlw	-4
 11948  015130  6ED9               	movwf	fsr2l,c
 11949  015132  50E2               	movf	fsr1h,w,c
 11950  015134  6EDA               	movwf	fsr2h,c
 11951  015136  0EFF               	movlw	255
 11952  015138  22DA               	addwfc	fsr2h,f,c
 11953  01513A  0EFE               	movlw	254
 11954  01513C  26DE               	addwf	postinc2,f,c
 11955  01513E  0EFF               	movlw	255
 11956  015140  22DD               	addwfc	postdec2,f,c
 11957  015142                     l11405:
 11958                           
 11959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 11960                           ;stkvar	_d @ sp[(-20)+-10]
 11961  015142  0EE2               	movlw	226
 11962  015144  24E1               	addwf	fsr1l,w,c
 11963  015146  6ED9               	movwf	fsr2l,c
 11964  015148  0EFF               	movlw	255
 11965  01514A  20E2               	addwfc	fsr1h,w,c
 11966  01514C  6EDA               	movwf	fsr2h,c
 11967                           
 11968                           ;stkvar	_n @ sp[(-20)+4]
 11969  01514E  0E08               	movlw	8
 11970  015150  6E01               	movwf	btemp^0,c
 11971  015152  0EF0               	movlw	-16
 11972  015154                     us1098999:
 11973  015154  006F FF7B FFE3     	movff	postinc2,plusw1
 11974  01515A  28E8               	incf	wreg,w,c
 11975  01515C  2E01               	decfsz	btemp^0,f,c
 11976  01515E  D7FA               	bra	us1098999
 11977                           
 11978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 11979  015160  0E4F               	movlw	79
 11980  015162  6E0B               	movwf	(btemp+10)^0,c
 11981  015164  0E00               	movlw	0
 11982  015166  6E0C               	movwf	(btemp+11)^0,c
 11983                           
 11984                           ;stkvar	_i @ sp[(-20)+14]
 11985  015168  0EFA               	movlw	-6
 11986  01516A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11987  015170  0EFB               	movlw	-5
 11988  015172  0060  F033  FFE3   	movff	btemp+11,plusw1
 11989                           
 11990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 11991  015178  0103               	movlb	3	; () banked
 11992  01517A  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11993                           
 11994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11995  01517C  D0EE               	goto	l11443
 11996  01517E                     l11411:
 11997                           
 11998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 11999                           ;stkvar	_i @ sp[(-20)+14]
 12000  01517E  50E1               	movf	fsr1l,w,c
 12001  015180  0FFA               	addlw	-6
 12002  015182  6ED9               	movwf	fsr2l,c
 12003  015184  50E2               	movf	fsr1h,w,c
 12004  015186  6EDA               	movwf	fsr2h,c
 12005  015188  0EFF               	movlw	255
 12006  01518A  22DA               	addwfc	fsr2h,f,c
 12007  01518C  06DE               	decf	postinc2,f,c
 12008  01518E  0E00               	movlw	0
 12009  015190  5ADD               	subwfb	postdec2,f,c
 12010                           
 12011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12012                           ;stkvar	_n @ sp[(-20)+4]
 12013  015192  0EF0               	movlw	-16
 12014  015194  006F FF8C  F00B    	movff	plusw1,btemp+10
 12015  01519A  0EF1               	movlw	-15
 12016  01519C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12017  0151A2  0E0F               	movlw	15
 12018  0151A4  160B               	andwf	(btemp+10)^0,f,c
 12019  0151A6  0E00               	movlw	0
 12020  0151A8  160C               	andwf	(btemp+11)^0,f,c
 12021                           
 12022                           ;stkvar	_c @ sp[(-20)+12]
 12023  0151AA  0EF8               	movlw	-8
 12024  0151AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12025  0151B2  0EF9               	movlw	-7
 12026  0151B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12027                           
 12028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12029                           ;stkvar	_c @ sp[(-20)+12]
 12030  0151BA  0EF9               	movlw	-7
 12031  0151BC  BEE3               	btfsc	plusw1,7,c
 12032  0151BE  D00F               	goto	l11419
 12033  0151C0  0EF9               	movlw	-7
 12034  0151C2  50E3               	movf	plusw1,w,c
 12035  0151C4  E108               	bnz	u10990
 12036  0151C6  0EF8               	movlw	-8
 12037  0151C8  006F FF8C  F001    	movff	plusw1,btemp
 12038  0151CE  0E0A               	movlw	10
 12039  0151D0  5E01               	subwf	btemp^0,f,c
 12040  0151D2  A0D8               	btfss	status,0,c
 12041  0151D4  D004               	goto	l11419
 12042  0151D6                     u10990:
 12043                           
 12044                           ;stkvar	_c @ sp[(-20)+12]
 12045  0151D6  0EF8               	movlw	-8
 12046  0151D8  50E3               	movf	plusw1,w,c
 12047  0151DA  0F57               	addlw	87
 12048  0151DC  D003               	goto	L10
 12049  0151DE                     l11419:
 12050                           
 12051                           ;stkvar	_c @ sp[(-20)+12]
 12052  0151DE  0EF8               	movlw	-8
 12053  0151E0  50E3               	movf	plusw1,w,c
 12054  0151E2  0F30               	addlw	48
 12055  0151E4                     L10:
 12056  0151E4  6E0B               	movwf	(btemp+10)^0,c
 12057  0151E6  0EF9               	movlw	-7
 12058  0151E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12059  0151EE  0E00               	movlw	0
 12060  0151F0  220C               	addwfc	(btemp+11)^0,f,c
 12061                           
 12062                           ;stkvar	_c @ sp[(-20)+12]
 12063  0151F2  0EF8               	movlw	-8
 12064  0151F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12065  0151FA  0EF9               	movlw	-7
 12066  0151FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12067  015202  0EBF               	movlw	191
 12068  015204  6E0B               	movwf	(btemp+10)^0,c
 12069  015206  0EFF               	movlw	255
 12070  015208  6E0C               	movwf	(btemp+11)^0,c
 12071                           
 12072                           ;stkvar	_x @ sp[(-20)+-11]
 12073  01520A  0EE1               	movlw	-31
 12074  01520C  50E3               	movf	plusw1,w,c
 12075  01520E  6E09               	movwf	(btemp+8)^0,c
 12076  015210  6A0A               	clrf	(btemp+9)^0,c
 12077  015212  500B               	movf	(btemp+10)^0,w,c
 12078  015214  2609               	addwf	(btemp+8)^0,f,c
 12079  015216  500C               	movf	(btemp+11)^0,w,c
 12080  015218  220A               	addwfc	(btemp+9)^0,f,c
 12081  01521A  500A               	movf	(btemp+9)^0,w,c
 12082  01521C  E106               	bnz	u11000
 12083  01521E  0E1A               	movlw	26
 12084  015220  5C09               	subwf	(btemp+8)^0,w,c
 12085  015222  B0D8               	btfsc	status,0,c
 12086  015224  D002               	goto	u11000
 12087  015226  0E01               	movlw	1
 12088  015228  D001               	goto	u11010
 12089  01522A                     u11000:
 12090  01522A  0E00               	movlw	0
 12091  01522C                     u11010:
 12092  01522C  6E0B               	movwf	(btemp+10)^0,c
 12093  01522E  6A0C               	clrf	(btemp+11)^0,c
 12094                           
 12095                           ;stkvar	_xtoa$5235 @ sp[(-20)+2]
 12096  015230  0EEE               	movlw	-18
 12097  015232  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12098  015238  0EEF               	movlw	-17
 12099  01523A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12100                           
 12101                           ;stkvar	_xtoa$5235 @ sp[(-20)+2]
 12102  015240  0EEE               	movlw	-18
 12103  015242  006F FF8C  F001    	movff	plusw1,btemp
 12104  015248  0EEF               	movlw	-17
 12105  01524A  50E3               	movf	plusw1,w,c
 12106  01524C  1001               	iorwf	btemp^0,w,c
 12107  01524E  B4D8               	btfsc	status,2,c
 12108  015250  D041               	goto	l11435
 12109  015252  0E9F               	movlw	159
 12110  015254  6E0B               	movwf	(btemp+10)^0,c
 12111  015256  0EFF               	movlw	255
 12112  015258  6E0C               	movwf	(btemp+11)^0,c
 12113                           
 12114                           ;stkvar	_c @ sp[(-20)+12]
 12115  01525A  0EF8               	movlw	-8
 12116  01525C  006F FF8C  F009    	movff	plusw1,btemp+8
 12117  015262  0EF9               	movlw	-7
 12118  015264  006F FF8C  F00A    	movff	plusw1,btemp+9
 12119  01526A  0E20               	movlw	32
 12120  01526C  1209               	iorwf	(btemp+8)^0,f,c
 12121  01526E  0E00               	movlw	0
 12122  015270  120A               	iorwf	(btemp+9)^0,f,c
 12123  015272  500B               	movf	(btemp+10)^0,w,c
 12124  015274  2609               	addwf	(btemp+8)^0,f,c
 12125  015276  500C               	movf	(btemp+11)^0,w,c
 12126  015278  220A               	addwfc	(btemp+9)^0,f,c
 12127  01527A  500A               	movf	(btemp+9)^0,w,c
 12128  01527C  E106               	bnz	u11030
 12129  01527E  0E1A               	movlw	26
 12130  015280  5C09               	subwf	(btemp+8)^0,w,c
 12131  015282  B0D8               	btfsc	status,0,c
 12132  015284  D002               	goto	u11030
 12133  015286  0E01               	movlw	1
 12134  015288  D001               	goto	u11040
 12135  01528A                     u11030:
 12136  01528A  0E00               	movlw	0
 12137  01528C                     u11040:
 12138  01528C  6E0B               	movwf	(btemp+10)^0,c
 12139  01528E  6A0C               	clrf	(btemp+11)^0,c
 12140                           
 12141                           ;stkvar	_xtoa$5236 @ sp[(-20)+0]
 12142  015290  0EEC               	movlw	-20
 12143  015292  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12144  015298  0EED               	movlw	-19
 12145  01529A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12146                           
 12147                           ;stkvar	_xtoa$5236 @ sp[(-20)+0]
 12148  0152A0  0EEC               	movlw	-20
 12149  0152A2  006F FF8C  F001    	movff	plusw1,btemp
 12150  0152A8  0EED               	movlw	-19
 12151  0152AA  50E3               	movf	plusw1,w,c
 12152  0152AC  1001               	iorwf	btemp^0,w,c
 12153  0152AE  B4D8               	btfsc	status,2,c
 12154  0152B0  D011               	goto	l11435
 12155                           
 12156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12157                           ;stkvar	_c @ sp[(-20)+12]
 12158  0152B2  0EF8               	movlw	-8
 12159  0152B4  006F FF8F FFE6     	movff	plusw1,postinc1
 12160  0152BA  006F FF8F FFE6     	movff	plusw1,postinc1
 12161  0152C0  EC72  F0CA         	call	_toupper	;wreg free
 12162                           
 12163                           ;stkvar	_c @ sp[(-20)+12]
 12164  0152C4  0EF8               	movlw	-8
 12165  0152C6  0060  F007  FFE3   	movff	btemp,plusw1
 12166  0152CC  0EF9               	movlw	-7
 12167  0152CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12168  0152D4                     l11435:
 12169                           
 12170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 12171                           ;stkvar	_c @ sp[(-20)+12]
 12172                           ;stkvar	_i @ sp[(-20)+14]
 12173  0152D4  0EFA               	movlw	-6
 12174  0152D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 12175  0152DC  0EFB               	movlw	-5
 12176  0152DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 12177  0152E4  0E94               	movlw	low _dbuf
 12178  0152E6  240B               	addwf	(btemp+10)^0,w,c
 12179  0152E8  6ED9               	movwf	fsr2l,c
 12180  0152EA  0E03               	movlw	high _dbuf
 12181  0152EC  200C               	addwfc	(btemp+11)^0,w,c
 12182  0152EE  6EDA               	movwf	fsr2h,c
 12183  0152F0  0EF8               	movlw	-8
 12184  0152F2  006F FF8F FFDF     	movff	plusw1,indf2
 12185                           
 12186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 12187                           ;stkvar	_p @ sp[(-20)+18]
 12188  0152F8  50E1               	movf	fsr1l,w,c
 12189  0152FA  0FFE               	addlw	-2
 12190  0152FC  6ED9               	movwf	fsr2l,c
 12191  0152FE  50E2               	movf	fsr1h,w,c
 12192  015300  6EDA               	movwf	fsr2h,c
 12193  015302  0EFF               	movlw	255
 12194  015304  22DA               	addwfc	fsr2h,f,c
 12195  015306  06DE               	decf	postinc2,f,c
 12196  015308  0E00               	movlw	0
 12197  01530A  5ADD               	subwfb	postdec2,f,c
 12198                           
 12199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 12200                           ;stkvar	_w @ sp[(-20)+16]
 12201  01530C  50E1               	movf	fsr1l,w,c
 12202  01530E  0FFC               	addlw	-4
 12203  015310  6ED9               	movwf	fsr2l,c
 12204  015312  50E2               	movf	fsr1h,w,c
 12205  015314  6EDA               	movwf	fsr2h,c
 12206  015316  0EFF               	movlw	255
 12207  015318  22DA               	addwfc	fsr2h,f,c
 12208  01531A  06DE               	decf	postinc2,f,c
 12209  01531C  0E00               	movlw	0
 12210  01531E  5ADD               	subwfb	postdec2,f,c
 12211                           
 12212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 12213  015320  0E04               	movlw	4
 12214  015322  6E0C               	movwf	(btemp+11)^0,c
 12215                           
 12216                           ;stkvar	_n @ sp[(-20)+4]
 12217  015324  50E1               	movf	fsr1l,w,c
 12218  015326  0FF0               	addlw	-16
 12219  015328  6ED9               	movwf	fsr2l,c
 12220  01532A  50E2               	movf	fsr1h,w,c
 12221  01532C  6EDA               	movwf	fsr2h,c
 12222  01532E  0EFF               	movlw	255
 12223  015330  22DA               	addwfc	fsr2h,f,c
 12224  015332  280C               	incf	(btemp+11)^0,w,c
 12225  015334  52DE               	movf	postinc2,f,c
 12226  015336  D00F               	goto	u11060
 12227  015338                     u11065:
 12228  015338  52DE               	movf	postinc2,f,c
 12229  01533A  52DE               	movf	postinc2,f,c
 12230  01533C  52DE               	movf	postinc2,f,c
 12231  01533E  52DE               	movf	postinc2,f,c
 12232  015340  52DE               	movf	postinc2,f,c
 12233  015342  52DE               	movf	postinc2,f,c
 12234  015344  90D8               	bcf	status,0,c
 12235  015346  32DD               	rrcf	postdec2,f,c
 12236  015348  32DD               	rrcf	postdec2,f,c
 12237  01534A  32DD               	rrcf	postdec2,f,c
 12238  01534C  32DD               	rrcf	postdec2,f,c
 12239  01534E  32DD               	rrcf	postdec2,f,c
 12240  015350  32DD               	rrcf	postdec2,f,c
 12241  015352  32DD               	rrcf	postdec2,f,c
 12242  015354  32DE               	rrcf	postinc2,f,c
 12243  015356                     u11060:
 12244  015356  2EE8               	decfsz	wreg,f,c
 12245  015358  D7EF               	goto	u11065
 12246  01535A                     l11443:
 12247                           
 12248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12249                           ;stkvar	_i @ sp[(-20)+14]
 12250  01535A  0EFB               	movlw	-5
 12251  01535C  BEE3               	btfsc	plusw1,7,c
 12252  01535E  D03A               	goto	u11110
 12253  015360  0EFB               	movlw	-5
 12254  015362  50E3               	movf	plusw1,w,c
 12255  015364  E108               	bnz	u11070
 12256  015366  0EFA               	movlw	-6
 12257  015368  006F FF8C  F001    	movff	plusw1,btemp
 12258  01536E  0E02               	movlw	2
 12259  015370  5E01               	subwf	btemp^0,f,c
 12260  015372  A0D8               	btfss	status,0,c
 12261  015374  D02F               	goto	u11110
 12262  015376                     u11070:
 12263                           
 12264                           ;stkvar	_n @ sp[(-20)+4]
 12265  015376  0EF0               	movlw	-16
 12266  015378  50E3               	movf	plusw1,w,c
 12267  01537A  E115               	bnz	u11081
 12268  01537C  0EF1               	movlw	-15
 12269  01537E  50E3               	movf	plusw1,w,c
 12270  015380  E112               	bnz	u11081
 12271  015382  0EF2               	movlw	-14
 12272  015384  50E3               	movf	plusw1,w,c
 12273  015386  E10F               	bnz	u11081
 12274  015388  0EF3               	movlw	-13
 12275  01538A  50E3               	movf	plusw1,w,c
 12276  01538C  E10C               	bnz	u11081
 12277  01538E  0EF4               	movlw	-12
 12278  015390  50E3               	movf	plusw1,w,c
 12279  015392  E109               	bnz	u11081
 12280  015394  0EF5               	movlw	-11
 12281  015396  50E3               	movf	plusw1,w,c
 12282  015398  E106               	bnz	u11081
 12283  01539A  0EF6               	movlw	-10
 12284  01539C  50E3               	movf	plusw1,w,c
 12285  01539E  E103               	bnz	u11081
 12286  0153A0  0EF7               	movlw	-9
 12287  0153A2  50E3               	movf	plusw1,w,c
 12288  0153A4  A4D8               	btfss	status,2,c
 12289  0153A6                     u11081:
 12290  0153A6  D6EB               	goto	l11411
 12291                           
 12292                           ;stkvar	_p @ sp[(-20)+18]
 12293  0153A8  0EFF               	movlw	-1
 12294  0153AA  BEE3               	btfsc	plusw1,7,c
 12295  0153AC  D007               	goto	u11090
 12296  0153AE  0EFF               	movlw	-1
 12297  0153B0  50E3               	movf	plusw1,w,c
 12298  0153B2  E103               	bnz	u11091
 12299  0153B4  0EFE               	movlw	-2
 12300  0153B6  04E3               	decf	plusw1,w,c
 12301  0153B8  B0D8               	btfsc	status,0,c
 12302  0153BA                     u11091:
 12303  0153BA  D6E1               	goto	l11411
 12304  0153BC                     u11090:
 12305                           
 12306                           ;stkvar	_w @ sp[(-20)+16]
 12307  0153BC  0EFD               	movlw	-3
 12308  0153BE  BEE3               	btfsc	plusw1,7,c
 12309  0153C0  D009               	goto	u11110
 12310  0153C2  0EFD               	movlw	-3
 12311  0153C4  50E3               	movf	plusw1,w,c
 12312  0153C6  E104               	bnz	u11100
 12313  0153C8  0EFC               	movlw	-4
 12314  0153CA  04E3               	decf	plusw1,w,c
 12315  0153CC  A0D8               	btfss	status,0,c
 12316  0153CE  D002               	goto	u11110
 12317  0153D0                     u11100:
 12318  0153D0  B225               	btfsc	_flags^0,1,c
 12319  0153D2  D6D5               	goto	l11411
 12320  0153D4                     u11110:
 12321                           
 12322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 12323  0153D4  A825               	btfss	_flags^0,4,c
 12324  0153D6  D036               	goto	l11459
 12325                           
 12326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 12327                           ;stkvar	_i @ sp[(-20)+14]
 12328  0153D8  50E1               	movf	fsr1l,w,c
 12329  0153DA  0FFA               	addlw	-6
 12330  0153DC  6ED9               	movwf	fsr2l,c
 12331  0153DE  50E2               	movf	fsr1h,w,c
 12332  0153E0  6EDA               	movwf	fsr2h,c
 12333  0153E2  0EFF               	movlw	255
 12334  0153E4  22DA               	addwfc	fsr2h,f,c
 12335  0153E6  06DE               	decf	postinc2,f,c
 12336  0153E8  0E00               	movlw	0
 12337  0153EA  5ADD               	subwfb	postdec2,f,c
 12338                           
 12339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 12340                           ;stkvar	_x @ sp[(-20)+-11]
 12341                           ;stkvar	_i @ sp[(-20)+14]
 12342  0153EC  0EFA               	movlw	-6
 12343  0153EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 12344  0153F4  0EFB               	movlw	-5
 12345  0153F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 12346  0153FC  0E94               	movlw	low _dbuf
 12347  0153FE  240B               	addwf	(btemp+10)^0,w,c
 12348  015400  6ED9               	movwf	fsr2l,c
 12349  015402  0E03               	movlw	high _dbuf
 12350  015404  200C               	addwfc	(btemp+11)^0,w,c
 12351  015406  6EDA               	movwf	fsr2h,c
 12352  015408  0EE1               	movlw	-31
 12353  01540A  006F FF8F FFDF     	movff	plusw1,indf2
 12354                           
 12355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 12356                           ;stkvar	_i @ sp[(-20)+14]
 12357  015410  50E1               	movf	fsr1l,w,c
 12358  015412  0FFA               	addlw	-6
 12359  015414  6ED9               	movwf	fsr2l,c
 12360  015416  50E2               	movf	fsr1h,w,c
 12361  015418  6EDA               	movwf	fsr2h,c
 12362  01541A  0EFF               	movlw	255
 12363  01541C  22DA               	addwfc	fsr2h,f,c
 12364  01541E  06DE               	decf	postinc2,f,c
 12365  015420  0E00               	movlw	0
 12366  015422  5ADD               	subwfb	postdec2,f,c
 12367                           
 12368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 12369                           ;stkvar	_i @ sp[(-20)+14]
 12370  015424  0EFA               	movlw	-6
 12371  015426  006F FF8C  F00B    	movff	plusw1,btemp+10
 12372  01542C  0EFB               	movlw	-5
 12373  01542E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12374  015434  0E94               	movlw	low _dbuf
 12375  015436  240B               	addwf	(btemp+10)^0,w,c
 12376  015438  6ED9               	movwf	fsr2l,c
 12377  01543A  0E03               	movlw	high _dbuf
 12378  01543C  200C               	addwfc	(btemp+11)^0,w,c
 12379  01543E  6EDA               	movwf	fsr2h,c
 12380  015440  0E30               	movlw	48
 12381  015442  6EDF               	movwf	indf2,c
 12382  015444                     l11459:
 12383                           
 12384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 12385                           ;stkvar	_w @ sp[(-20)+16]
 12386  015444  0EFC               	movlw	-4
 12387  015446  006F FF8F FFE6     	movff	plusw1,postinc1
 12388  01544C  006F FF8F FFE6     	movff	plusw1,postinc1
 12389                           
 12390                           ;stkvar	_i @ sp[(-22)+14]
 12391  015452  0E94               	movlw	low _dbuf
 12392  015454  6E0B               	movwf	(btemp+10)^0,c
 12393  015456  0E03               	movlw	high _dbuf
 12394  015458  6E0C               	movwf	(btemp+11)^0,c
 12395  01545A  0EF8               	movlw	-8
 12396  01545C  50E3               	movf	plusw1,w,c
 12397  01545E  260B               	addwf	(btemp+10)^0,f,c
 12398  015460  0EF9               	movlw	-7
 12399  015462  50E3               	movf	plusw1,w,c
 12400  015464  220C               	addwfc	(btemp+11)^0,f,c
 12401  015466  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12402  01546C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12403                           
 12404                           ;stkvar	_fp @ sp[(-24)+-2]
 12405  015472  0EE6               	movlw	-26
 12406  015474  006F FF8F FFE6     	movff	plusw1,postinc1
 12407  01547A  006F FF8F FFE6     	movff	plusw1,postinc1
 12408  015480  EC69  F0C2         	call	_pad	;wreg free
 12409                           
 12410                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 12411  015484  0EE1               	movlw	225
 12412  015486  26E1               	addwf	fsr1l,f,c
 12413  015488  0EFF               	movlw	255
 12414  01548A  22E2               	addwfc	fsr1h,f,c
 12415  01548C  0012               	return		;funcret
 12416  01548E                     __end_of_xtoa:
 12417                           	opt callstack 0
 12418                           
 12419 ;; *************** function _toupper *****************
 12420 ;; Defined at:
 12421 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;  c               2  [STACK] int 
 12424 ;; Auto vars:     Size  Location     Type
 12425 ;;		None
 12426 ;; Return value:  Size  Location     Type
 12427 ;;                  2  [STACK] int 
 12428 ;; Registers used:
 12429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12430 ;; Tracked objects:
 12431 ;;		On entry : 0/3
 12432 ;;		On exit  : 0/0
 12433 ;;		Unchanged: 0/0
 12434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12439 ;;Total ram usage:        0 bytes
 12440 ;; Hardware stack levels used:    1
 12441 ;; Hardware stack levels required when called:   16
 12442 ;; This function calls:
 12443 ;;		_islower
 12444 ;; This function is called by:
 12445 ;;		_xtoa
 12446 ;; This function uses a reentrant model
 12447 ;;
 12448                           
 12449                           	psect	text47
 12450  0194E4                     __ptext47:
 12451                           	opt callstack 0
 12452  0194E4                     _toupper:
 12453                           	opt callstack 0
 12454                           
 12455                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12456  0194E4  52E6               	movf	postinc1,f,c
 12457  0194E6  52E6               	movf	postinc1,f,c
 12458                           
 12459                           ;stkvar	_c @ sp[(-2)+-2]
 12460                           
 12461                           ;incstack = 0
 12462 ;; hardware stack exceeded
 12463  0194E8  0EFC               	movlw	-4
 12464  0194EA  50E3               	movf	plusw1,w,c
 12465  0194EC  0F9F               	addlw	159
 12466  0194EE  6E0B               	movwf	(btemp+10)^0,c
 12467  0194F0  0EFD               	movlw	-3
 12468  0194F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 12469  0194F8  0EFF               	movlw	255
 12470  0194FA  220C               	addwfc	(btemp+11)^0,f,c
 12471  0194FC  500C               	movf	(btemp+11)^0,w,c
 12472  0194FE  E106               	bnz	u5780
 12473  019500  0E1A               	movlw	26
 12474  019502  5C0B               	subwf	(btemp+10)^0,w,c
 12475  019504  B0D8               	btfsc	status,0,c
 12476  019506  D002               	goto	u5780
 12477  019508  0E01               	movlw	1
 12478  01950A  D001               	goto	u5790
 12479  01950C                     u5780:
 12480  01950C  0E00               	movlw	0
 12481  01950E                     u5790:
 12482  01950E  6E0B               	movwf	(btemp+10)^0,c
 12483  019510  6A0C               	clrf	(btemp+11)^0,c
 12484                           
 12485                           ;stkvar	_toupper$6035 @ sp[(-2)+0]
 12486  019512  0EFE               	movlw	-2
 12487  019514  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12488  01951A  0EFF               	movlw	-1
 12489  01951C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12490                           
 12491                           ;stkvar	_toupper$6035 @ sp[(-2)+0]
 12492  019522  0EFE               	movlw	-2
 12493  019524  006F FF8C  F001    	movff	plusw1,btemp
 12494  01952A  0EFF               	movlw	-1
 12495  01952C  50E3               	movf	plusw1,w,c
 12496  01952E  1001               	iorwf	btemp^0,w,c
 12497  019530  B4D8               	btfsc	status,2,c
 12498  019532  D00D               	goto	l7487
 12499                           
 12500                           ;stkvar	_c @ sp[(-2)+-2]
 12501  019534  0EFC               	movlw	-4
 12502  019536  006F FF8C  F001    	movff	plusw1,btemp
 12503  01953C  0EFD               	movlw	-3
 12504  01953E  006F FF8C  F002    	movff	plusw1,btemp+1
 12505  019544  0E5F               	movlw	95
 12506  019546  1601               	andwf	btemp^0,f,c
 12507  019548  0E00               	movlw	0
 12508  01954A  1602               	andwf	(btemp+1)^0,f,c
 12509  01954C  D008               	goto	l3349
 12510  01954E                     l7487:
 12511                           
 12512                           ;stkvar	_c @ sp[(-2)+-2]
 12513  01954E  0EFC               	movlw	-4
 12514  019550  006F FF8C  F001    	movff	plusw1,btemp
 12515  019556  0EFD               	movlw	-3
 12516  019558  006F FF8C  F002    	movff	plusw1,btemp+1
 12517  01955E                     l3349:
 12518                           
 12519                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12520  01955E  52E5               	movf	postdec1,f,c
 12521  019560  52E5               	movf	postdec1,f,c
 12522  019562  52E5               	movf	postdec1,f,c
 12523  019564  52E5               	movf	postdec1,f,c
 12524  019566  0012               	return		;funcret
 12525  019568                     __end_of_toupper:
 12526                           	opt callstack 0
 12527                           
 12528 ;; *************** function _islower *****************
 12529 ;; Defined at:
 12530 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;  c               2  [STACK] int 
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;		None
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  2  [STACK] int 
 12537 ;; Registers used:
 12538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12548 ;;Total ram usage:        0 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; Hardware stack levels required when called:   15
 12551 ;; This function calls:
 12552 ;;		Nothing
 12553 ;; This function is called by:
 12554 ;;		_toupper
 12555 ;; This function uses a reentrant model
 12556 ;;
 12557                           
 12558                           	psect	text48
 12559  01A10E                     __ptext48:
 12560                           	opt callstack 0
 12561  01A10E                     _islower:
 12562                           	opt callstack 0
 12563                           
 12564                           ;stkvar	_c @ sp[(0)+-2]
 12565                           
 12566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12567                           ;incstack = 0
 12568 ;; hardware stack exceeded
 12569  01A10E  0EFE               	movlw	-2
 12570  01A110  50E3               	movf	plusw1,w,c
 12571  01A112  0F9F               	addlw	159
 12572  01A114  6E0B               	movwf	(btemp+10)^0,c
 12573  01A116  0EFF               	movlw	-1
 12574  01A118  006F FF8C  F00C    	movff	plusw1,btemp+11
 12575  01A11E  0EFF               	movlw	255
 12576  01A120  220C               	addwfc	(btemp+11)^0,f,c
 12577  01A122  500C               	movf	(btemp+11)^0,w,c
 12578  01A124  E106               	bnz	u5470
 12579  01A126  0E1A               	movlw	26
 12580  01A128  5C0B               	subwf	(btemp+10)^0,w,c
 12581  01A12A  B0D8               	btfsc	status,0,c
 12582  01A12C  D002               	goto	u5470
 12583  01A12E  0E01               	movlw	1
 12584  01A130  D001               	goto	u5480
 12585  01A132                     u5470:
 12586  01A132  0E00               	movlw	0
 12587  01A134                     u5480:
 12588  01A134  6E01               	movwf	btemp^0,c
 12589  01A136  6A02               	clrf	(btemp+1)^0,c
 12590                           
 12591                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12592  01A138  52E5               	movf	postdec1,f,c
 12593  01A13A  52E5               	movf	postdec1,f,c
 12594  01A13C  0012               	return		;funcret
 12595  01A13E                     __end_of_islower:
 12596                           	opt callstack 0
 12597                           
 12598 ;; *************** function _isalpha *****************
 12599 ;; Defined at:
 12600 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 12601 ;; Parameters:    Size  Location     Type
 12602 ;;  c               2  [STACK] int 
 12603 ;; Auto vars:     Size  Location     Type
 12604 ;;		None
 12605 ;; Return value:  Size  Location     Type
 12606 ;;                  2  [STACK] int 
 12607 ;; Registers used:
 12608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 12609 ;; Tracked objects:
 12610 ;;		On entry : 0/0
 12611 ;;		On exit  : 0/0
 12612 ;;		Unchanged: 0/0
 12613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12618 ;;Total ram usage:        0 bytes
 12619 ;; Hardware stack levels used:    1
 12620 ;; Hardware stack levels required when called:   15
 12621 ;; This function calls:
 12622 ;;		Nothing
 12623 ;; This function is called by:
 12624 ;;		_xtoa
 12625 ;; This function uses a reentrant model
 12626 ;;
 12627                           
 12628                           	psect	text49
 12629  019DDA                     __ptext49:
 12630                           	opt callstack 0
 12631  019DDA                     _isalpha:
 12632                           	opt callstack 0
 12633                           
 12634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12635                           ;incstack = 0
 12636 ;; hardware stack exceeded
 12637  019DDA  0E9F               	movlw	159
 12638  019DDC  6E0B               	movwf	(btemp+10)^0,c
 12639  019DDE  0EFF               	movlw	255
 12640  019DE0  6E0C               	movwf	(btemp+11)^0,c
 12641                           
 12642                           ;stkvar	_c @ sp[(0)+-2]
 12643  019DE2  0EFE               	movlw	-2
 12644  019DE4  006F FF8C  F009    	movff	plusw1,btemp+8
 12645  019DEA  0EFF               	movlw	-1
 12646  019DEC  006F FF8C  F00A    	movff	plusw1,btemp+9
 12647  019DF2  0E20               	movlw	32
 12648  019DF4  1209               	iorwf	(btemp+8)^0,f,c
 12649  019DF6  0E00               	movlw	0
 12650  019DF8  120A               	iorwf	(btemp+9)^0,f,c
 12651  019DFA  500B               	movf	(btemp+10)^0,w,c
 12652  019DFC  2609               	addwf	(btemp+8)^0,f,c
 12653  019DFE  500C               	movf	(btemp+11)^0,w,c
 12654  019E00  220A               	addwfc	(btemp+9)^0,f,c
 12655  019E02  500A               	movf	(btemp+9)^0,w,c
 12656  019E04  E106               	bnz	u5760
 12657  019E06  0E1A               	movlw	26
 12658  019E08  5C09               	subwf	(btemp+8)^0,w,c
 12659  019E0A  B0D8               	btfsc	status,0,c
 12660  019E0C  D002               	goto	u5760
 12661  019E0E  0E01               	movlw	1
 12662  019E10  D001               	goto	u5770
 12663  019E12                     u5760:
 12664  019E12  0E00               	movlw	0
 12665  019E14                     u5770:
 12666  019E14  6E01               	movwf	btemp^0,c
 12667  019E16  6A02               	clrf	(btemp+1)^0,c
 12668                           
 12669                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12670  019E18  52E5               	movf	postdec1,f,c
 12671  019E1A  52E5               	movf	postdec1,f,c
 12672  019E1C  0012               	return		;funcret
 12673  019E1E                     __end_of_isalpha:
 12674                           	opt callstack 0
 12675                           
 12676 ;; *************** function _utoa *****************
 12677 ;; Defined at:
 12678 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12681 ;;		 -> f(6), NULL(0), 
 12682 ;;  d               8  [STACK] unsigned long long 
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  n               8  [STACK] unsigned long long 
 12685 ;;  i               2  [STACK] int 
 12686 ;;  w               2  [STACK] int 
 12687 ;;  p               2  [STACK] int 
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  2  [STACK] int 
 12690 ;; Registers used:
 12691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/0
 12694 ;;		On exit  : 0/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12701 ;;Total ram usage:        0 bytes
 12702 ;; Hardware stack levels used:    1
 12703 ;; Hardware stack levels required when called:   20
 12704 ;; This function calls:
 12705 ;;		___lodiv
 12706 ;;		___lomod
 12707 ;;		_pad
 12708 ;; This function is called by:
 12709 ;;		_vfpfcnvrt
 12710 ;; This function uses a reentrant model
 12711 ;;
 12712                           
 12713                           	psect	text50
 12714  0157FA                     __ptext50:
 12715                           	opt callstack 0
 12716  0157FA                     _utoa:
 12717                           	opt callstack 0
 12718                           
 12719                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12720  0157FA  0E0E               	movlw	14
 12721  0157FC  26E1               	addwf	fsr1l,f,c
 12722  0157FE  0E00               	movlw	0
 12723  015800  22E2               	addwfc	fsr1h,f,c
 12724                           
 12725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 12726                           
 12727                           ;incstack = 0
 12728 ;; hardware stack exceeded
 12729  015802  AE24               	btfss	(_prec+1)^0,7,c
 12730                           
 12731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 12732  015804  9225               	bcf	_flags^0,1,c
 12733                           
 12734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 12735  015806  BE24               	btfsc	(_prec+1)^0,7,c
 12736  015808  D005               	goto	u10880
 12737  01580A  5024               	movf	(_prec+1)^0,w,c
 12738  01580C  E110               	bnz	l11359
 12739  01580E  0423               	decf	_prec^0,w,c
 12740  015810  B0D8               	btfsc	status,0,c
 12741  015812  D00D               	goto	l11359
 12742  015814                     u10880:
 12743  015814  0E01               	movlw	1
 12744  015816  6E0B               	movwf	(btemp+10)^0,c
 12745  015818  0E00               	movlw	0
 12746  01581A  6E0C               	movwf	(btemp+11)^0,c
 12747                           
 12748                           ;stkvar	_p @ sp[(-14)+12]
 12749  01581C  0EFE               	movlw	-2
 12750  01581E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12751  015824  0EFF               	movlw	-1
 12752  015826  0060  F033  FFE3   	movff	btemp+11,plusw1
 12753  01582C  D008               	goto	l2172
 12754  01582E                     l11359:
 12755                           
 12756                           ;stkvar	_p @ sp[(-14)+12]
 12757  01582E  0EFE               	movlw	-2
 12758  015830  0060  F08F  FFE3   	movff	_prec,plusw1
 12759  015836  0EFF               	movlw	-1
 12760  015838  0060  F093  FFE3   	movff	_prec+1,plusw1
 12761  01583E                     l2172:
 12762                           
 12763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 12764                           ;stkvar	_w @ sp[(-14)+10]
 12765  01583E  0EFC               	movlw	-4
 12766  015840  0060  F087  FFE3   	movff	_width,plusw1
 12767  015846  0EFD               	movlw	-3
 12768  015848  0060  F08B  FFE3   	movff	_width+1,plusw1
 12769                           
 12770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 12771                           ;stkvar	_d @ sp[(-14)+-10]
 12772  01584E  0EE8               	movlw	232
 12773  015850  24E1               	addwf	fsr1l,w,c
 12774  015852  6ED9               	movwf	fsr2l,c
 12775  015854  0EFF               	movlw	255
 12776  015856  20E2               	addwfc	fsr1h,w,c
 12777  015858  6EDA               	movwf	fsr2h,c
 12778                           
 12779                           ;stkvar	_n @ sp[(-14)+0]
 12780  01585A  0E08               	movlw	8
 12781  01585C  6E01               	movwf	btemp^0,c
 12782  01585E  0EF2               	movlw	-14
 12783  015860                     us1089999:
 12784  015860  006F FF7B FFE3     	movff	postinc2,plusw1
 12785  015866  28E8               	incf	wreg,w,c
 12786  015868  2E01               	decfsz	btemp^0,f,c
 12787  01586A  D7FA               	bra	us1089999
 12788                           
 12789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 12790  01586C  0E4F               	movlw	79
 12791  01586E  6E0B               	movwf	(btemp+10)^0,c
 12792  015870  0E00               	movlw	0
 12793  015872  6E0C               	movwf	(btemp+11)^0,c
 12794                           
 12795                           ;stkvar	_i @ sp[(-14)+8]
 12796  015874  0EFA               	movlw	-6
 12797  015876  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12798  01587C  0EFB               	movlw	-5
 12799  01587E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12800                           
 12801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 12802  015884  0103               	movlb	3	; () banked
 12803  015886  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12804                           
 12805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12806  015888  D0FB               	goto	l11377
 12807  01588A                     l11367:
 12808                           
 12809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 12810                           ;stkvar	_i @ sp[(-14)+8]
 12811  01588A  50E1               	movf	fsr1l,w,c
 12812  01588C  0FFA               	addlw	-6
 12813  01588E  6ED9               	movwf	fsr2l,c
 12814  015890  50E2               	movf	fsr1h,w,c
 12815  015892  6EDA               	movwf	fsr2h,c
 12816  015894  0EFF               	movlw	255
 12817  015896  22DA               	addwfc	fsr2h,f,c
 12818  015898  06DE               	decf	postinc2,f,c
 12819  01589A  0E00               	movlw	0
 12820  01589C  5ADD               	subwfb	postdec2,f,c
 12821                           
 12822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 12823  01589E  0E0A               	movlw	10
 12824  0158A0  6EE6               	movwf	postinc1,c
 12825  0158A2  0E00               	movlw	0
 12826  0158A4  6EE6               	movwf	postinc1,c
 12827  0158A6  0E00               	movlw	0
 12828  0158A8  6EE6               	movwf	postinc1,c
 12829  0158AA  0E00               	movlw	0
 12830  0158AC  6EE6               	movwf	postinc1,c
 12831  0158AE  0E00               	movlw	0
 12832  0158B0  6EE6               	movwf	postinc1,c
 12833  0158B2  0E00               	movlw	0
 12834  0158B4  6EE6               	movwf	postinc1,c
 12835  0158B6  0E00               	movlw	0
 12836  0158B8  6EE6               	movwf	postinc1,c
 12837  0158BA  0E00               	movlw	0
 12838  0158BC  6EE6               	movwf	postinc1,c
 12839                           
 12840                           ;stkvar	_n @ sp[(-22)+0]
 12841  0158BE  50E1               	movf	fsr1l,w,c
 12842  0158C0  0FEA               	addlw	-22
 12843  0158C2  6ED9               	movwf	fsr2l,c
 12844  0158C4  50E2               	movf	fsr1h,w,c
 12845  0158C6  6EDA               	movwf	fsr2h,c
 12846  0158C8  0EFF               	movlw	255
 12847  0158CA  22DA               	addwfc	fsr2h,f,c
 12848  0158CC  006F FF7B FFE6     	movff	postinc2,postinc1
 12849  0158D2  006F FF7B FFE6     	movff	postinc2,postinc1
 12850  0158D8  006F FF7B FFE6     	movff	postinc2,postinc1
 12851  0158DE  006F FF7B FFE6     	movff	postinc2,postinc1
 12852  0158E4  006F FF7B FFE6     	movff	postinc2,postinc1
 12853  0158EA  006F FF7B FFE6     	movff	postinc2,postinc1
 12854  0158F0  006F FF7B FFE6     	movff	postinc2,postinc1
 12855  0158F6  006F FF7B FFE6     	movff	postinc2,postinc1
 12856  0158FC  EC80  F0BF         	call	___lomod	;wreg free
 12857  015900  52E5               	movf	postdec1,f,c
 12858  015902  006F FF9C  F018    	movff	indf1,btemp+23
 12859  015908  52E5               	movf	postdec1,f,c
 12860  01590A  006F FF9C  F017    	movff	indf1,btemp+22
 12861  015910  52E5               	movf	postdec1,f,c
 12862  015912  006F FF9C  F016    	movff	indf1,btemp+21
 12863  015918  52E5               	movf	postdec1,f,c
 12864  01591A  006F FF9C  F015    	movff	indf1,btemp+20
 12865  015920  52E5               	movf	postdec1,f,c
 12866  015922  006F FF9C  F014    	movff	indf1,btemp+19
 12867  015928  52E5               	movf	postdec1,f,c
 12868  01592A  006F FF9C  F013    	movff	indf1,btemp+18
 12869  015930  52E5               	movf	postdec1,f,c
 12870  015932  006F FF9C  F012    	movff	indf1,btemp+17
 12871  015938  52E5               	movf	postdec1,f,c
 12872  01593A  006F FF9C  F011    	movff	indf1,btemp+16
 12873  015940  0EF8               	movlw	248
 12874  015942  26E1               	addwf	fsr1l,f,c
 12875  015944  0EFF               	movlw	255
 12876  015946  22E2               	addwfc	fsr1h,f,c
 12877  015948  0E30               	movlw	48
 12878  01594A  2611               	addwf	(btemp+16)^0,f,c
 12879                           
 12880                           ;stkvar	_i @ sp[(-14)+8]
 12881  01594C  0EFA               	movlw	-6
 12882  01594E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12883  015954  0EFB               	movlw	-5
 12884  015956  006F FF8C  F00C    	movff	plusw1,btemp+11
 12885  01595C  0E94               	movlw	low _dbuf
 12886  01595E  240B               	addwf	(btemp+10)^0,w,c
 12887  015960  6ED9               	movwf	fsr2l,c
 12888  015962  0E03               	movlw	high _dbuf
 12889  015964  200C               	addwfc	(btemp+11)^0,w,c
 12890  015966  6EDA               	movwf	fsr2h,c
 12891  015968  0060  F047  FFDF   	movff	btemp+16,indf2
 12892                           
 12893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 12894                           ;stkvar	_p @ sp[(-14)+12]
 12895  01596E  50E1               	movf	fsr1l,w,c
 12896  015970  0FFE               	addlw	-2
 12897  015972  6ED9               	movwf	fsr2l,c
 12898  015974  50E2               	movf	fsr1h,w,c
 12899  015976  6EDA               	movwf	fsr2h,c
 12900  015978  0EFF               	movlw	255
 12901  01597A  22DA               	addwfc	fsr2h,f,c
 12902  01597C  06DE               	decf	postinc2,f,c
 12903  01597E  0E00               	movlw	0
 12904  015980  5ADD               	subwfb	postdec2,f,c
 12905                           
 12906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 12907                           ;stkvar	_w @ sp[(-14)+10]
 12908  015982  50E1               	movf	fsr1l,w,c
 12909  015984  0FFC               	addlw	-4
 12910  015986  6ED9               	movwf	fsr2l,c
 12911  015988  50E2               	movf	fsr1h,w,c
 12912  01598A  6EDA               	movwf	fsr2h,c
 12913  01598C  0EFF               	movlw	255
 12914  01598E  22DA               	addwfc	fsr2h,f,c
 12915  015990  06DE               	decf	postinc2,f,c
 12916  015992  0E00               	movlw	0
 12917  015994  5ADD               	subwfb	postdec2,f,c
 12918                           
 12919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 12920  015996  0E0A               	movlw	10
 12921  015998  6EE6               	movwf	postinc1,c
 12922  01599A  0E00               	movlw	0
 12923  01599C  6EE6               	movwf	postinc1,c
 12924  01599E  0E00               	movlw	0
 12925  0159A0  6EE6               	movwf	postinc1,c
 12926  0159A2  0E00               	movlw	0
 12927  0159A4  6EE6               	movwf	postinc1,c
 12928  0159A6  0E00               	movlw	0
 12929  0159A8  6EE6               	movwf	postinc1,c
 12930  0159AA  0E00               	movlw	0
 12931  0159AC  6EE6               	movwf	postinc1,c
 12932  0159AE  0E00               	movlw	0
 12933  0159B0  6EE6               	movwf	postinc1,c
 12934  0159B2  0E00               	movlw	0
 12935  0159B4  6EE6               	movwf	postinc1,c
 12936                           
 12937                           ;stkvar	_n @ sp[(-22)+0]
 12938  0159B6  50E1               	movf	fsr1l,w,c
 12939  0159B8  0FEA               	addlw	-22
 12940  0159BA  6ED9               	movwf	fsr2l,c
 12941  0159BC  50E2               	movf	fsr1h,w,c
 12942  0159BE  6EDA               	movwf	fsr2h,c
 12943  0159C0  0EFF               	movlw	255
 12944  0159C2  22DA               	addwfc	fsr2h,f,c
 12945  0159C4  006F FF7B FFE6     	movff	postinc2,postinc1
 12946  0159CA  006F FF7B FFE6     	movff	postinc2,postinc1
 12947  0159D0  006F FF7B FFE6     	movff	postinc2,postinc1
 12948  0159D6  006F FF7B FFE6     	movff	postinc2,postinc1
 12949  0159DC  006F FF7B FFE6     	movff	postinc2,postinc1
 12950  0159E2  006F FF7B FFE6     	movff	postinc2,postinc1
 12951  0159E8  006F FF7B FFE6     	movff	postinc2,postinc1
 12952  0159EE  006F FF7B FFE6     	movff	postinc2,postinc1
 12953  0159F4  EC45  F0BB         	call	___lodiv	;wreg free
 12954  0159F8  52E5               	movf	postdec1,f,c
 12955  0159FA  006F FF9C  F018    	movff	indf1,btemp+23
 12956  015A00  52E5               	movf	postdec1,f,c
 12957  015A02  006F FF9C  F017    	movff	indf1,btemp+22
 12958  015A08  52E5               	movf	postdec1,f,c
 12959  015A0A  006F FF9C  F016    	movff	indf1,btemp+21
 12960  015A10  52E5               	movf	postdec1,f,c
 12961  015A12  006F FF9C  F015    	movff	indf1,btemp+20
 12962  015A18  52E5               	movf	postdec1,f,c
 12963  015A1A  006F FF9C  F014    	movff	indf1,btemp+19
 12964  015A20  52E5               	movf	postdec1,f,c
 12965  015A22  006F FF9C  F013    	movff	indf1,btemp+18
 12966  015A28  52E5               	movf	postdec1,f,c
 12967  015A2A  006F FF9C  F012    	movff	indf1,btemp+17
 12968  015A30  52E5               	movf	postdec1,f,c
 12969  015A32  006F FF9C  F011    	movff	indf1,btemp+16
 12970  015A38  0EF8               	movlw	248
 12971  015A3A  26E1               	addwf	fsr1l,f,c
 12972  015A3C  0EFF               	movlw	255
 12973  015A3E  22E2               	addwfc	fsr1h,f,c
 12974                           
 12975                           ;stkvar	_n @ sp[(-14)+0]
 12976  015A40  0EF2               	movlw	-14
 12977  015A42  0060  F047  FFE3   	movff	btemp+16,plusw1
 12978  015A48  0EF3               	movlw	-13
 12979  015A4A  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12980  015A50  0EF4               	movlw	-12
 12981  015A52  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12982  015A58  0EF5               	movlw	-11
 12983  015A5A  0060  F053  FFE3   	movff	btemp+19,plusw1
 12984  015A60  0EF6               	movlw	-10
 12985  015A62  0060  F057  FFE3   	movff	btemp+20,plusw1
 12986  015A68  0EF7               	movlw	-9
 12987  015A6A  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12988  015A70  0EF8               	movlw	-8
 12989  015A72  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12990  015A78  0EF9               	movlw	-7
 12991  015A7A  0060  F063  FFE3   	movff	btemp+23,plusw1
 12992  015A80                     l11377:
 12993                           
 12994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12995                           ;stkvar	_i @ sp[(-14)+8]
 12996  015A80  0EFA               	movlw	-6
 12997  015A82  006F FF8C  F001    	movff	plusw1,btemp
 12998  015A88  0EFB               	movlw	-5
 12999  015A8A  50E3               	movf	plusw1,w,c
 13000  015A8C  1001               	iorwf	btemp^0,w,c
 13001  015A8E  B4D8               	btfsc	status,2,c
 13002  015A90  D02F               	goto	u10940
 13003                           
 13004                           ;stkvar	_n @ sp[(-14)+0]
 13005  015A92  0EF2               	movlw	-14
 13006  015A94  50E3               	movf	plusw1,w,c
 13007  015A96  E115               	bnz	u10911
 13008  015A98  0EF3               	movlw	-13
 13009  015A9A  50E3               	movf	plusw1,w,c
 13010  015A9C  E112               	bnz	u10911
 13011  015A9E  0EF4               	movlw	-12
 13012  015AA0  50E3               	movf	plusw1,w,c
 13013  015AA2  E10F               	bnz	u10911
 13014  015AA4  0EF5               	movlw	-11
 13015  015AA6  50E3               	movf	plusw1,w,c
 13016  015AA8  E10C               	bnz	u10911
 13017  015AAA  0EF6               	movlw	-10
 13018  015AAC  50E3               	movf	plusw1,w,c
 13019  015AAE  E109               	bnz	u10911
 13020  015AB0  0EF7               	movlw	-9
 13021  015AB2  50E3               	movf	plusw1,w,c
 13022  015AB4  E106               	bnz	u10911
 13023  015AB6  0EF8               	movlw	-8
 13024  015AB8  50E3               	movf	plusw1,w,c
 13025  015ABA  E103               	bnz	u10911
 13026  015ABC  0EF9               	movlw	-7
 13027  015ABE  50E3               	movf	plusw1,w,c
 13028  015AC0  A4D8               	btfss	status,2,c
 13029  015AC2                     u10911:
 13030  015AC2  D6E3               	goto	l11367
 13031                           
 13032                           ;stkvar	_p @ sp[(-14)+12]
 13033  015AC4  0EFF               	movlw	-1
 13034  015AC6  BEE3               	btfsc	plusw1,7,c
 13035  015AC8  D007               	goto	u10920
 13036  015ACA  0EFF               	movlw	-1
 13037  015ACC  50E3               	movf	plusw1,w,c
 13038  015ACE  E103               	bnz	u10921
 13039  015AD0  0EFE               	movlw	-2
 13040  015AD2  04E3               	decf	plusw1,w,c
 13041  015AD4  B0D8               	btfsc	status,0,c
 13042  015AD6                     u10921:
 13043  015AD6  D6D9               	goto	l11367
 13044  015AD8                     u10920:
 13045                           
 13046                           ;stkvar	_w @ sp[(-14)+10]
 13047  015AD8  0EFD               	movlw	-3
 13048  015ADA  BEE3               	btfsc	plusw1,7,c
 13049  015ADC  D009               	goto	u10940
 13050  015ADE  0EFD               	movlw	-3
 13051  015AE0  50E3               	movf	plusw1,w,c
 13052  015AE2  E104               	bnz	u10930
 13053  015AE4  0EFC               	movlw	-4
 13054  015AE6  04E3               	decf	plusw1,w,c
 13055  015AE8  A0D8               	btfss	status,0,c
 13056  015AEA  D002               	goto	u10940
 13057  015AEC                     u10930:
 13058  015AEC  B225               	btfsc	_flags^0,1,c
 13059  015AEE  D6CD               	goto	l11367
 13060  015AF0                     u10940:
 13061                           
 13062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13063                           ;stkvar	_w @ sp[(-14)+10]
 13064  015AF0  0EFC               	movlw	-4
 13065  015AF2  006F FF8F FFE6     	movff	plusw1,postinc1
 13066  015AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 13067                           
 13068                           ;stkvar	_i @ sp[(-16)+8]
 13069  015AFE  0E94               	movlw	low _dbuf
 13070  015B00  6E0B               	movwf	(btemp+10)^0,c
 13071  015B02  0E03               	movlw	high _dbuf
 13072  015B04  6E0C               	movwf	(btemp+11)^0,c
 13073  015B06  0EF8               	movlw	-8
 13074  015B08  50E3               	movf	plusw1,w,c
 13075  015B0A  260B               	addwf	(btemp+10)^0,f,c
 13076  015B0C  0EF9               	movlw	-7
 13077  015B0E  50E3               	movf	plusw1,w,c
 13078  015B10  220C               	addwfc	(btemp+11)^0,f,c
 13079  015B12  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13080  015B18  0060  F033  FFE6   	movff	btemp+11,postinc1
 13081                           
 13082                           ;stkvar	_fp @ sp[(-18)+-2]
 13083  015B1E  0EEC               	movlw	-20
 13084  015B20  006F FF8F FFE6     	movff	plusw1,postinc1
 13085  015B26  006F FF8F FFE6     	movff	plusw1,postinc1
 13086  015B2C  EC69  F0C2         	call	_pad	;wreg free
 13087                           
 13088                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13089  015B30  0EE8               	movlw	232
 13090  015B32  26E1               	addwf	fsr1l,f,c
 13091  015B34  0EFF               	movlw	255
 13092  015B36  22E2               	addwfc	fsr1h,f,c
 13093  015B38  0012               	return		;funcret
 13094  015B3A                     __end_of_utoa:
 13095                           	opt callstack 0
 13096                           
 13097 ;; *************** function ___lomod *****************
 13098 ;; Defined at:
 13099 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;  dividend        8  [STACK] unsigned long long 
 13102 ;;  divisor         8  [STACK] unsigned long long 
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;  counter         1  [STACK] unsigned char 
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  8  [STACK] unsigned long long 
 13107 ;; Registers used:
 13108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/3
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13118 ;;Total ram usage:        0 bytes
 13119 ;; Hardware stack levels used:    1
 13120 ;; Hardware stack levels required when called:   15
 13121 ;; This function calls:
 13122 ;;		Nothing
 13123 ;; This function is called by:
 13124 ;;		_utoa
 13125 ;; This function uses a reentrant model
 13126 ;;
 13127                           
 13128                           	psect	text51
 13129  017F00                     __ptext51:
 13130                           	opt callstack 0
 13131  017F00                     ___lomod:
 13132                           	opt callstack 0
 13133                           
 13134                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13135  017F00  52E6               	movf	postinc1,f,c
 13136                           
 13137                           ;stkvar	_divisor @ sp[(-1)+-16]
 13138                           
 13139                           ;incstack = 0
 13140 ;; hardware stack exceeded
 13141  017F02  0EEF               	movlw	-17
 13142  017F04  50E3               	movf	plusw1,w,c
 13143  017F06  E116               	bnz	u6910
 13144  017F08  0EF0               	movlw	-16
 13145  017F0A  50E3               	movf	plusw1,w,c
 13146  017F0C  E113               	bnz	u6910
 13147  017F0E  0EF1               	movlw	-15
 13148  017F10  50E3               	movf	plusw1,w,c
 13149  017F12  E110               	bnz	u6910
 13150  017F14  0EF2               	movlw	-14
 13151  017F16  50E3               	movf	plusw1,w,c
 13152  017F18  E10D               	bnz	u6910
 13153  017F1A  0EF3               	movlw	-13
 13154  017F1C  50E3               	movf	plusw1,w,c
 13155  017F1E  E10A               	bnz	u6910
 13156  017F20  0EF4               	movlw	-12
 13157  017F22  50E3               	movf	plusw1,w,c
 13158  017F24  E107               	bnz	u6910
 13159  017F26  0EF5               	movlw	-11
 13160  017F28  50E3               	movf	plusw1,w,c
 13161  017F2A  E104               	bnz	u6910
 13162  017F2C  0EF6               	movlw	-10
 13163  017F2E  50E3               	movf	plusw1,w,c
 13164  017F30  B4D8               	btfsc	status,2,c
 13165  017F32  D075               	goto	u6940
 13166  017F34                     u6910:
 13167                           
 13168                           ;stkvar	_counter @ sp[(-1)+0]
 13169  017F34  0EFF               	movlw	-1
 13170  017F36  6AE3               	clrf	plusw1,c
 13171  017F38  D012               	goto	L11
 13172  017F3A                     l8097:
 13173                           
 13174                           ;stkvar	_divisor @ sp[(-1)+-16]
 13175  017F3A  90D8               	bcf	status,0,c
 13176  017F3C  0EEF               	movlw	-17
 13177  017F3E  36E3               	rlcf	plusw1,f,c
 13178  017F40  0EF0               	movlw	-16
 13179  017F42  36E3               	rlcf	plusw1,f,c
 13180  017F44  0EF1               	movlw	-15
 13181  017F46  36E3               	rlcf	plusw1,f,c
 13182  017F48  0EF2               	movlw	-14
 13183  017F4A  36E3               	rlcf	plusw1,f,c
 13184  017F4C  0EF3               	movlw	-13
 13185  017F4E  36E3               	rlcf	plusw1,f,c
 13186  017F50  0EF4               	movlw	-12
 13187  017F52  36E3               	rlcf	plusw1,f,c
 13188  017F54  0EF5               	movlw	-11
 13189  017F56  36E3               	rlcf	plusw1,f,c
 13190  017F58  0EF6               	movlw	-10
 13191  017F5A  36E3               	rlcf	plusw1,f,c
 13192                           
 13193                           ;stkvar	_counter @ sp[(-1)+0]
 13194  017F5C  0EFF               	movlw	-1
 13195  017F5E                     L11:
 13196  017F5E  2AE3               	incf	plusw1,f,c
 13197                           
 13198                           ;stkvar	_divisor @ sp[(-1)+-16]
 13199  017F60  0EF6               	movlw	-10
 13200  017F62  AEE3               	btfss	plusw1,7,c
 13201  017F64  D7EA               	goto	l8097
 13202  017F66                     u6920:
 13203                           
 13204                           ;stkvar	_divisor @ sp[(-1)+-16]
 13205                           ;stkvar	_dividend @ sp[(-1)+-8]
 13206  017F66  50E1               	movf	fsr1l,w,c
 13207  017F68  0FF7               	addlw	-9
 13208  017F6A  6ED9               	movwf	fsr2l,c
 13209  017F6C  50E2               	movf	fsr1h,w,c
 13210  017F6E  6EDA               	movwf	fsr2h,c
 13211  017F70  0EFF               	movlw	255
 13212  017F72  22DA               	addwfc	fsr2h,f,c
 13213  017F74  0EEF               	movlw	-17
 13214  017F76  50E3               	movf	plusw1,w,c
 13215  017F78  5CDE               	subwf	postinc2,w,c
 13216  017F7A  0EF0               	movlw	-16
 13217  017F7C  50E3               	movf	plusw1,w,c
 13218  017F7E  58DE               	subwfb	postinc2,w,c
 13219  017F80  0EF1               	movlw	-15
 13220  017F82  50E3               	movf	plusw1,w,c
 13221  017F84  58DE               	subwfb	postinc2,w,c
 13222  017F86  0EF2               	movlw	-14
 13223  017F88  50E3               	movf	plusw1,w,c
 13224  017F8A  58DE               	subwfb	postinc2,w,c
 13225  017F8C  0EF3               	movlw	-13
 13226  017F8E  50E3               	movf	plusw1,w,c
 13227  017F90  58DE               	subwfb	postinc2,w,c
 13228  017F92  0EF4               	movlw	-12
 13229  017F94  50E3               	movf	plusw1,w,c
 13230  017F96  58DE               	subwfb	postinc2,w,c
 13231  017F98  0EF5               	movlw	-11
 13232  017F9A  50E3               	movf	plusw1,w,c
 13233  017F9C  58DE               	subwfb	postinc2,w,c
 13234  017F9E  0EF6               	movlw	-10
 13235  017FA0  50E3               	movf	plusw1,w,c
 13236  017FA2  58DE               	subwfb	postinc2,w,c
 13237  017FA4  A0D8               	btfss	status,0,c
 13238  017FA6  D01F               	goto	l8105
 13239                           
 13240                           ;stkvar	_divisor @ sp[(-1)+-16]
 13241                           ;stkvar	_dividend @ sp[(-1)+-8]
 13242  017FA8  50E1               	movf	fsr1l,w,c
 13243  017FAA  0FF7               	addlw	-9
 13244  017FAC  6ED9               	movwf	fsr2l,c
 13245  017FAE  50E2               	movf	fsr1h,w,c
 13246  017FB0  6EDA               	movwf	fsr2h,c
 13247  017FB2  0EFF               	movlw	255
 13248  017FB4  22DA               	addwfc	fsr2h,f,c
 13249  017FB6  0EEF               	movlw	-17
 13250  017FB8  50E3               	movf	plusw1,w,c
 13251  017FBA  5EDE               	subwf	postinc2,f,c
 13252  017FBC  0EF0               	movlw	-16
 13253  017FBE  50E3               	movf	plusw1,w,c
 13254  017FC0  5ADE               	subwfb	postinc2,f,c
 13255  017FC2  0EF1               	movlw	-15
 13256  017FC4  50E3               	movf	plusw1,w,c
 13257  017FC6  5ADE               	subwfb	postinc2,f,c
 13258  017FC8  0EF2               	movlw	-14
 13259  017FCA  50E3               	movf	plusw1,w,c
 13260  017FCC  5ADE               	subwfb	postinc2,f,c
 13261  017FCE  0EF3               	movlw	-13
 13262  017FD0  50E3               	movf	plusw1,w,c
 13263  017FD2  5ADE               	subwfb	postinc2,f,c
 13264  017FD4  0EF4               	movlw	-12
 13265  017FD6  50E3               	movf	plusw1,w,c
 13266  017FD8  5ADE               	subwfb	postinc2,f,c
 13267  017FDA  0EF5               	movlw	-11
 13268  017FDC  50E3               	movf	plusw1,w,c
 13269  017FDE  5ADE               	subwfb	postinc2,f,c
 13270  017FE0  0EF6               	movlw	-10
 13271  017FE2  50E3               	movf	plusw1,w,c
 13272  017FE4  5ADE               	subwfb	postinc2,f,c
 13273  017FE6                     l8105:
 13274                           
 13275                           ;stkvar	_divisor @ sp[(-1)+-16]
 13276  017FE6  90D8               	bcf	status,0,c
 13277  017FE8  0EF6               	movlw	-10
 13278  017FEA  32E3               	rrcf	plusw1,f,c
 13279  017FEC  0EF5               	movlw	-11
 13280  017FEE  32E3               	rrcf	plusw1,f,c
 13281  017FF0  0EF4               	movlw	-12
 13282  017FF2  32E3               	rrcf	plusw1,f,c
 13283  017FF4  0EF3               	movlw	-13
 13284  017FF6  32E3               	rrcf	plusw1,f,c
 13285  017FF8  0EF2               	movlw	-14
 13286  017FFA  32E3               	rrcf	plusw1,f,c
 13287  017FFC  0EF1               	movlw	-15
 13288  017FFE  32E3               	rrcf	plusw1,f,c
 13289  018000  0EF0               	movlw	-16
 13290  018002  32E3               	rrcf	plusw1,f,c
 13291  018004  0EEF               	movlw	-17
 13292  018006  32E3               	rrcf	plusw1,f,c
 13293                           
 13294                           ;stkvar	_counter @ sp[(-1)+0]
 13295  018008  0EFF               	movlw	-1
 13296  01800A  50E3               	movf	plusw1,w,c
 13297  01800C  6E01               	movwf	btemp^0,c
 13298  01800E  0E01               	movlw	1
 13299  018010  5E01               	subwf	btemp^0,f,c
 13300  018012  0EFF               	movlw	-1
 13301  018014  0060  F007  FFE3   	movff	btemp,plusw1
 13302  01801A  A4D8               	btfss	status,2,c
 13303  01801C  D7A4               	goto	u6920
 13304  01801E                     u6940:
 13305                           
 13306                           ;stkvar	_dividend @ sp[(-1)+-8]
 13307  01801E  0EF7               	movlw	247
 13308  018020  24E1               	addwf	fsr1l,w,c
 13309  018022  6ED9               	movwf	fsr2l,c
 13310  018024  0EFF               	movlw	255
 13311  018026  20E2               	addwfc	fsr1h,w,c
 13312  018028  6EDA               	movwf	fsr2h,c
 13313                           
 13314                           ;stkvar	?___lomod @ sp[(-1)+-8]
 13315  01802A  0E08               	movlw	8
 13316  01802C  6E01               	movwf	btemp^0,c
 13317  01802E  0EF7               	movlw	-9
 13318  018030                     us695999:
 13319  018030  006F FF7B FFE3     	movff	postinc2,plusw1
 13320  018036  28E8               	incf	wreg,w,c
 13321  018038  2E01               	decfsz	btemp^0,f,c
 13322  01803A  D7FA               	bra	us695999
 13323                           
 13324                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13325  01803C  52E5               	movf	postdec1,f,c
 13326  01803E  0012               	return		;funcret
 13327  018040                     __end_of___lomod:
 13328                           	opt callstack 0
 13329                           
 13330 ;; *************** function ___lodiv *****************
 13331 ;; Defined at:
 13332 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  dividend        8  [STACK] unsigned long long 
 13335 ;;  divisor         8  [STACK] unsigned long long 
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;  quotient        8  [STACK] unsigned long long 
 13338 ;;  counter         1  [STACK] unsigned char 
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  8  [STACK] unsigned long long 
 13341 ;; Registers used:
 13342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/3
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13352 ;;Total ram usage:        0 bytes
 13353 ;; Hardware stack levels used:    1
 13354 ;; Hardware stack levels required when called:   15
 13355 ;; This function calls:
 13356 ;;		Nothing
 13357 ;; This function is called by:
 13358 ;;		_utoa
 13359 ;; This function uses a reentrant model
 13360 ;;
 13361                           
 13362                           	psect	text52
 13363  01768A                     __ptext52:
 13364                           	opt callstack 0
 13365  01768A                     ___lodiv:
 13366                           	opt callstack 0
 13367                           
 13368                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13369  01768A  0E09               	movlw	9
 13370  01768C  26E1               	addwf	fsr1l,f,c
 13371  01768E  0E00               	movlw	0
 13372  017690  22E2               	addwfc	fsr1h,f,c
 13373                           
 13374                           ;stkvar	_quotient @ sp[(-9)+0]
 13375                           
 13376                           ;incstack = 0
 13377 ;; hardware stack exceeded
 13378  017692  0E07               	movlw	7
 13379  017694  6E01               	movwf	btemp^0,c
 13380  017696  0EF7               	movlw	-9
 13381  017698                     u6851:
 13382  017698  6AE3               	clrf	plusw1,c
 13383  01769A  2AE8               	incf	wreg,f,c
 13384  01769C  0601               	decf	btemp^0,f,c
 13385  01769E  E2FC               	bc	u6851
 13386                           
 13387                           ;stkvar	_divisor @ sp[(-9)+-16]
 13388  0176A0  0EE7               	movlw	-25
 13389  0176A2  50E3               	movf	plusw1,w,c
 13390  0176A4  E116               	bnz	u6860
 13391  0176A6  0EE8               	movlw	-24
 13392  0176A8  50E3               	movf	plusw1,w,c
 13393  0176AA  E113               	bnz	u6860
 13394  0176AC  0EE9               	movlw	-23
 13395  0176AE  50E3               	movf	plusw1,w,c
 13396  0176B0  E110               	bnz	u6860
 13397  0176B2  0EEA               	movlw	-22
 13398  0176B4  50E3               	movf	plusw1,w,c
 13399  0176B6  E10D               	bnz	u6860
 13400  0176B8  0EEB               	movlw	-21
 13401  0176BA  50E3               	movf	plusw1,w,c
 13402  0176BC  E10A               	bnz	u6860
 13403  0176BE  0EEC               	movlw	-20
 13404  0176C0  50E3               	movf	plusw1,w,c
 13405  0176C2  E107               	bnz	u6860
 13406  0176C4  0EED               	movlw	-19
 13407  0176C6  50E3               	movf	plusw1,w,c
 13408  0176C8  E104               	bnz	u6860
 13409  0176CA  0EEE               	movlw	-18
 13410  0176CC  50E3               	movf	plusw1,w,c
 13411  0176CE  B4D8               	btfsc	status,2,c
 13412  0176D0  D088               	goto	u6890
 13413  0176D2                     u6860:
 13414                           
 13415                           ;stkvar	_counter @ sp[(-9)+8]
 13416  0176D2  0EFF               	movlw	-1
 13417  0176D4  6AE3               	clrf	plusw1,c
 13418  0176D6  D012               	goto	L12
 13419  0176D8                     l8073:
 13420                           
 13421                           ;stkvar	_divisor @ sp[(-9)+-16]
 13422  0176D8  90D8               	bcf	status,0,c
 13423  0176DA  0EE7               	movlw	-25
 13424  0176DC  36E3               	rlcf	plusw1,f,c
 13425  0176DE  0EE8               	movlw	-24
 13426  0176E0  36E3               	rlcf	plusw1,f,c
 13427  0176E2  0EE9               	movlw	-23
 13428  0176E4  36E3               	rlcf	plusw1,f,c
 13429  0176E6  0EEA               	movlw	-22
 13430  0176E8  36E3               	rlcf	plusw1,f,c
 13431  0176EA  0EEB               	movlw	-21
 13432  0176EC  36E3               	rlcf	plusw1,f,c
 13433  0176EE  0EEC               	movlw	-20
 13434  0176F0  36E3               	rlcf	plusw1,f,c
 13435  0176F2  0EED               	movlw	-19
 13436  0176F4  36E3               	rlcf	plusw1,f,c
 13437  0176F6  0EEE               	movlw	-18
 13438  0176F8  36E3               	rlcf	plusw1,f,c
 13439                           
 13440                           ;stkvar	_counter @ sp[(-9)+8]
 13441  0176FA  0EFF               	movlw	-1
 13442  0176FC                     L12:
 13443  0176FC  2AE3               	incf	plusw1,f,c
 13444                           
 13445                           ;stkvar	_divisor @ sp[(-9)+-16]
 13446  0176FE  0EEE               	movlw	-18
 13447  017700  AEE3               	btfss	plusw1,7,c
 13448  017702  D7EA               	goto	l8073
 13449  017704                     u6870:
 13450                           
 13451                           ;stkvar	_quotient @ sp[(-9)+0]
 13452  017704  90D8               	bcf	status,0,c
 13453  017706  0EF7               	movlw	-9
 13454  017708  36E3               	rlcf	plusw1,f,c
 13455  01770A  0EF8               	movlw	-8
 13456  01770C  36E3               	rlcf	plusw1,f,c
 13457  01770E  0EF9               	movlw	-7
 13458  017710  36E3               	rlcf	plusw1,f,c
 13459  017712  0EFA               	movlw	-6
 13460  017714  36E3               	rlcf	plusw1,f,c
 13461  017716  0EFB               	movlw	-5
 13462  017718  36E3               	rlcf	plusw1,f,c
 13463  01771A  0EFC               	movlw	-4
 13464  01771C  36E3               	rlcf	plusw1,f,c
 13465  01771E  0EFD               	movlw	-3
 13466  017720  36E3               	rlcf	plusw1,f,c
 13467  017722  0EFE               	movlw	-2
 13468  017724  36E3               	rlcf	plusw1,f,c
 13469                           
 13470                           ;stkvar	_divisor @ sp[(-9)+-16]
 13471                           ;stkvar	_dividend @ sp[(-9)+-8]
 13472  017726  50E1               	movf	fsr1l,w,c
 13473  017728  0FEF               	addlw	-17
 13474  01772A  6ED9               	movwf	fsr2l,c
 13475  01772C  50E2               	movf	fsr1h,w,c
 13476  01772E  6EDA               	movwf	fsr2h,c
 13477  017730  0EFF               	movlw	255
 13478  017732  22DA               	addwfc	fsr2h,f,c
 13479  017734  0EE7               	movlw	-25
 13480  017736  50E3               	movf	plusw1,w,c
 13481  017738  5CDE               	subwf	postinc2,w,c
 13482  01773A  0EE8               	movlw	-24
 13483  01773C  50E3               	movf	plusw1,w,c
 13484  01773E  58DE               	subwfb	postinc2,w,c
 13485  017740  0EE9               	movlw	-23
 13486  017742  50E3               	movf	plusw1,w,c
 13487  017744  58DE               	subwfb	postinc2,w,c
 13488  017746  0EEA               	movlw	-22
 13489  017748  50E3               	movf	plusw1,w,c
 13490  01774A  58DE               	subwfb	postinc2,w,c
 13491  01774C  0EEB               	movlw	-21
 13492  01774E  50E3               	movf	plusw1,w,c
 13493  017750  58DE               	subwfb	postinc2,w,c
 13494  017752  0EEC               	movlw	-20
 13495  017754  50E3               	movf	plusw1,w,c
 13496  017756  58DE               	subwfb	postinc2,w,c
 13497  017758  0EED               	movlw	-19
 13498  01775A  50E3               	movf	plusw1,w,c
 13499  01775C  58DE               	subwfb	postinc2,w,c
 13500  01775E  0EEE               	movlw	-18
 13501  017760  50E3               	movf	plusw1,w,c
 13502  017762  58DE               	subwfb	postinc2,w,c
 13503  017764  A0D8               	btfss	status,0,c
 13504  017766  D021               	goto	l8085
 13505                           
 13506                           ;stkvar	_divisor @ sp[(-9)+-16]
 13507                           ;stkvar	_dividend @ sp[(-9)+-8]
 13508  017768  50E1               	movf	fsr1l,w,c
 13509  01776A  0FEF               	addlw	-17
 13510  01776C  6ED9               	movwf	fsr2l,c
 13511  01776E  50E2               	movf	fsr1h,w,c
 13512  017770  6EDA               	movwf	fsr2h,c
 13513  017772  0EFF               	movlw	255
 13514  017774  22DA               	addwfc	fsr2h,f,c
 13515  017776  0EE7               	movlw	-25
 13516  017778  50E3               	movf	plusw1,w,c
 13517  01777A  5EDE               	subwf	postinc2,f,c
 13518  01777C  0EE8               	movlw	-24
 13519  01777E  50E3               	movf	plusw1,w,c
 13520  017780  5ADE               	subwfb	postinc2,f,c
 13521  017782  0EE9               	movlw	-23
 13522  017784  50E3               	movf	plusw1,w,c
 13523  017786  5ADE               	subwfb	postinc2,f,c
 13524  017788  0EEA               	movlw	-22
 13525  01778A  50E3               	movf	plusw1,w,c
 13526  01778C  5ADE               	subwfb	postinc2,f,c
 13527  01778E  0EEB               	movlw	-21
 13528  017790  50E3               	movf	plusw1,w,c
 13529  017792  5ADE               	subwfb	postinc2,f,c
 13530  017794  0EEC               	movlw	-20
 13531  017796  50E3               	movf	plusw1,w,c
 13532  017798  5ADE               	subwfb	postinc2,f,c
 13533  01779A  0EED               	movlw	-19
 13534  01779C  50E3               	movf	plusw1,w,c
 13535  01779E  5ADE               	subwfb	postinc2,f,c
 13536  0177A0  0EEE               	movlw	-18
 13537  0177A2  50E3               	movf	plusw1,w,c
 13538  0177A4  5ADE               	subwfb	postinc2,f,c
 13539                           
 13540                           ;stkvar	_quotient @ sp[(-9)+0]
 13541  0177A6  0EF7               	movlw	-9
 13542  0177A8  80E3               	bsf	plusw1,0,c
 13543  0177AA                     l8085:
 13544                           
 13545                           ;stkvar	_divisor @ sp[(-9)+-16]
 13546  0177AA  90D8               	bcf	status,0,c
 13547  0177AC  0EEE               	movlw	-18
 13548  0177AE  32E3               	rrcf	plusw1,f,c
 13549  0177B0  0EED               	movlw	-19
 13550  0177B2  32E3               	rrcf	plusw1,f,c
 13551  0177B4  0EEC               	movlw	-20
 13552  0177B6  32E3               	rrcf	plusw1,f,c
 13553  0177B8  0EEB               	movlw	-21
 13554  0177BA  32E3               	rrcf	plusw1,f,c
 13555  0177BC  0EEA               	movlw	-22
 13556  0177BE  32E3               	rrcf	plusw1,f,c
 13557  0177C0  0EE9               	movlw	-23
 13558  0177C2  32E3               	rrcf	plusw1,f,c
 13559  0177C4  0EE8               	movlw	-24
 13560  0177C6  32E3               	rrcf	plusw1,f,c
 13561  0177C8  0EE7               	movlw	-25
 13562  0177CA  32E3               	rrcf	plusw1,f,c
 13563                           
 13564                           ;stkvar	_counter @ sp[(-9)+8]
 13565  0177CC  0EFF               	movlw	-1
 13566  0177CE  50E3               	movf	plusw1,w,c
 13567  0177D0  6E01               	movwf	btemp^0,c
 13568  0177D2  0E01               	movlw	1
 13569  0177D4  5E01               	subwf	btemp^0,f,c
 13570  0177D6  0EFF               	movlw	-1
 13571  0177D8  0060  F007  FFE3   	movff	btemp,plusw1
 13572  0177DE  A4D8               	btfss	status,2,c
 13573  0177E0  D791               	goto	u6870
 13574  0177E2                     u6890:
 13575                           
 13576                           ;stkvar	_quotient @ sp[(-9)+0]
 13577  0177E2  0EF7               	movlw	247
 13578  0177E4  24E1               	addwf	fsr1l,w,c
 13579  0177E6  6ED9               	movwf	fsr2l,c
 13580  0177E8  0EFF               	movlw	255
 13581  0177EA  20E2               	addwfc	fsr1h,w,c
 13582  0177EC  6EDA               	movwf	fsr2h,c
 13583                           
 13584                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 13585  0177EE  0E08               	movlw	8
 13586  0177F0  6E01               	movwf	btemp^0,c
 13587  0177F2  0EEF               	movlw	-17
 13588  0177F4                     us690999:
 13589  0177F4  006F FF7B FFE3     	movff	postinc2,plusw1
 13590  0177FA  28E8               	incf	wreg,w,c
 13591  0177FC  2E01               	decfsz	btemp^0,f,c
 13592  0177FE  D7FA               	bra	us690999
 13593                           
 13594                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13595  017800  0EF7               	movlw	247
 13596  017802  26E1               	addwf	fsr1l,f,c
 13597  017804  0EFF               	movlw	255
 13598  017806  22E2               	addwfc	fsr1h,f,c
 13599  017808  0012               	return		;funcret
 13600  01780A                     __end_of___lodiv:
 13601                           	opt callstack 0
 13602                           
 13603 ;; *************** function _strncmp *****************
 13604 ;; Defined at:
 13605 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;  _l              2  [STACK] PTR const unsigned char 
 13608 ;;		 -> ct(3), STR_50(79), STR_48(3), STR_47(3), 
 13609 ;;		 -> STR_46(19), STR_45(19), STR_44(19), STR_43(19), 
 13610 ;;		 -> STR_42(19), STR_41(19), STR_40(24), STR_39(15), 
 13611 ;;		 -> STR_38(15), STR_37(15), STR_36(10), STR_35(10), 
 13612 ;;		 -> STR_34(19), STR_33(19), STR_30(3), STR_29(3), 
 13613 ;;		 -> STR_28(3), STR_27(17), STR_26(16), STR_25(16), 
 13614 ;;		 -> STR_24(19), STR_23(20), STR_22(19), STR_21(19), 
 13615 ;;		 -> STR_20(19), STR_19(19), STR_18(19), STR_17(19), 
 13616 ;;		 -> STR_16(19), STR_15(17), STR_14(16), STR_13(16), 
 13617 ;;		 -> STR_12(16), STR_11(16), STR_10(16), STR_9(16), 
 13618 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
 13619 ;;		 -> STR_2(15), STR_1(17), 
 13620 ;;  _r              2  [STACK] PTR const unsigned char 
 13621 ;;		 -> STR_84(3), STR_80(3), STR_75(3), STR_70(3), 
 13622 ;;		 -> STR_65(3), STR_61(3), 
 13623 ;;  n               2  [STACK] unsigned int 
 13624 ;; Auto vars:     Size  Location     Type
 13625 ;;  r               2  [STACK] PTR const unsigned char 
 13626 ;;		 -> STR_84(3), STR_80(3), STR_75(3), STR_70(3), 
 13627 ;;		 -> STR_65(3), STR_61(3), 
 13628 ;;  l               2  [STACK] PTR const unsigned char 
 13629 ;;		 -> ct(3), STR_50(79), STR_48(3), STR_47(3), 
 13630 ;;		 -> STR_46(19), STR_45(19), STR_44(19), STR_43(19), 
 13631 ;;		 -> STR_42(19), STR_41(19), STR_40(24), STR_39(15), 
 13632 ;;		 -> STR_38(15), STR_37(15), STR_36(10), STR_35(10), 
 13633 ;;		 -> STR_34(19), STR_33(19), STR_30(3), STR_29(3), 
 13634 ;;		 -> STR_28(3), STR_27(17), STR_26(16), STR_25(16), 
 13635 ;;		 -> STR_24(19), STR_23(20), STR_22(19), STR_21(19), 
 13636 ;;		 -> STR_20(19), STR_19(19), STR_18(19), STR_17(19), 
 13637 ;;		 -> STR_16(19), STR_15(17), STR_14(16), STR_13(16), 
 13638 ;;		 -> STR_12(16), STR_11(16), STR_10(16), STR_9(16), 
 13639 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
 13640 ;;		 -> STR_2(15), STR_1(17), 
 13641 ;; Return value:  Size  Location     Type
 13642 ;;                  2  [STACK] int 
 13643 ;; Registers used:
 13644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 13645 ;; Tracked objects:
 13646 ;;		On entry : 0/0
 13647 ;;		On exit  : 0/0
 13648 ;;		Unchanged: 0/0
 13649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13654 ;;Total ram usage:        0 bytes
 13655 ;; Hardware stack levels used:    1
 13656 ;; Hardware stack levels required when called:   15
 13657 ;; This function calls:
 13658 ;;		Nothing
 13659 ;; This function is called by:
 13660 ;;		_vfpfcnvrt
 13661 ;; This function uses a reentrant model
 13662 ;;
 13663                           
 13664                           	psect	text53
 13665  016B02                     __ptext53:
 13666                           	opt callstack 0
 13667  016B02                     _strncmp:
 13668                           	opt callstack 0
 13669                           
 13670                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13671  016B02  52E6               	movf	postinc1,f,c
 13672  016B04  52E6               	movf	postinc1,f,c
 13673  016B06  52E6               	movf	postinc1,f,c
 13674  016B08  52E6               	movf	postinc1,f,c
 13675                           
 13676                           ;stkvar	__l @ sp[(-4)+-2]
 13677                           
 13678                           ;incstack = 0
 13679 ;; hardware stack exceeded
 13680  016B0A  0EFA               	movlw	-6
 13681  016B0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13682  016B12  0EFB               	movlw	-5
 13683  016B14  006F FF8C  F00C    	movff	plusw1,btemp+11
 13684                           
 13685                           ;stkvar	_l @ sp[(-4)+2]
 13686  016B1A  0EFF               	movlw	-1
 13687  016B1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13688  016B22  0EFE               	movlw	-2
 13689  016B24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13690                           
 13691                           ;stkvar	__r @ sp[(-4)+-4]
 13692  016B2A  0EF8               	movlw	-8
 13693  016B2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13694  016B32  0EF9               	movlw	-7
 13695  016B34  006F FF8C  F00C    	movff	plusw1,btemp+11
 13696                           
 13697                           ;stkvar	_r @ sp[(-4)+0]
 13698  016B3A  0EFD               	movlw	-3
 13699  016B3C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13700  016B42  0EFC               	movlw	-4
 13701  016B44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13702                           
 13703                           ;stkvar	_n @ sp[(-4)+-6]
 13704  016B4A  0EF6               	movlw	-10
 13705  016B4C  006F FF8C  F001    	movff	plusw1,btemp
 13706  016B52  0E01               	movlw	1
 13707  016B54  5E01               	subwf	btemp^0,f,c
 13708  016B56  0EF6               	movlw	-10
 13709  016B58  0060  F007  FFE3   	movff	btemp,plusw1
 13710  016B5E  0EF7               	movlw	-9
 13711  016B60  006F FF8C  F001    	movff	plusw1,btemp
 13712  016B66  0E00               	movlw	0
 13713  016B68  5A01               	subwfb	btemp^0,f,c
 13714  016B6A  0EF7               	movlw	-9
 13715  016B6C  0060  F007  FFE3   	movff	btemp,plusw1
 13716  016B72  0EF6               	movlw	-10
 13717  016B74  28E3               	incf	plusw1,w,c
 13718  016B76  E13F               	bnz	l8781
 13719  016B78  0EF7               	movlw	-9
 13720  016B7A  28E3               	incf	plusw1,w,c
 13721  016B7C  A4D8               	btfss	status,2,c
 13722  016B7E  D03B               	goto	l8781
 13723  016B80  0E00               	movlw	0
 13724  016B82  6E01               	movwf	btemp^0,c
 13725  016B84  0E00               	movlw	0
 13726  016B86  6E02               	movwf	(btemp+1)^0,c
 13727  016B88  D0C7               	goto	l3321
 13728  016B8A                     l8779:
 13729                           
 13730                           ;stkvar	_l @ sp[(-4)+2]
 13731  016B8A  0EFE               	movlw	-2
 13732  016B8C  50E3               	movf	plusw1,w,c
 13733  016B8E  0F01               	addlw	1
 13734  016B90  6E01               	movwf	btemp^0,c
 13735  016B92  0EFE               	movlw	-2
 13736  016B94  0060  F007  FFE3   	movff	btemp,plusw1
 13737  016B9A  6A01               	clrf	btemp^0,c
 13738  016B9C  0EFF               	movlw	-1
 13739  016B9E  50E3               	movf	plusw1,w,c
 13740  016BA0  2001               	addwfc	btemp^0,w,c
 13741  016BA2  6E01               	movwf	btemp^0,c
 13742  016BA4  0EFF               	movlw	-1
 13743  016BA6  0060  F007  FFE3   	movff	btemp,plusw1
 13744                           
 13745                           ;stkvar	_r @ sp[(-4)+0]
 13746  016BAC  0EFC               	movlw	-4
 13747  016BAE  50E3               	movf	plusw1,w,c
 13748  016BB0  0F01               	addlw	1
 13749  016BB2  6E01               	movwf	btemp^0,c
 13750  016BB4  0EFC               	movlw	-4
 13751  016BB6  0060  F007  FFE3   	movff	btemp,plusw1
 13752  016BBC  6A01               	clrf	btemp^0,c
 13753  016BBE  0EFD               	movlw	-3
 13754  016BC0  50E3               	movf	plusw1,w,c
 13755  016BC2  2001               	addwfc	btemp^0,w,c
 13756  016BC4  6E01               	movwf	btemp^0,c
 13757  016BC6  0EFD               	movlw	-3
 13758  016BC8  0060  F007  FFE3   	movff	btemp,plusw1
 13759                           
 13760                           ;stkvar	_n @ sp[(-4)+-6]
 13761  016BCE  0EF6               	movlw	-10
 13762  016BD0  006F FF8C  F001    	movff	plusw1,btemp
 13763  016BD6  0E01               	movlw	1
 13764  016BD8  5E01               	subwf	btemp^0,f,c
 13765  016BDA  0EF6               	movlw	-10
 13766  016BDC  0060  F007  FFE3   	movff	btemp,plusw1
 13767  016BE2  0EF7               	movlw	-9
 13768  016BE4  006F FF8C  F001    	movff	plusw1,btemp
 13769  016BEA  0E00               	movlw	0
 13770  016BEC  5A01               	subwfb	btemp^0,f,c
 13771  016BEE  0EF7               	movlw	-9
 13772  016BF0  0060  F007  FFE3   	movff	btemp,plusw1
 13773  016BF6                     l8781:
 13774                           
 13775                           ;stkvar	_l @ sp[(-4)+2]
 13776  016BF6  0EFE               	movlw	-2
 13777  016BF8  006F FF8F FFF6     	movff	plusw1,tblptrl
 13778  016BFE  0EFF               	movlw	-1
 13779  016C00  006F FF8F FFF7     	movff	plusw1,tblptrh
 13780  016C06  0E00               	movlw	low (__mediumconst shr (0+16))
 13781  016C08  6EF8               	movwf	tblptru,c
 13782  016C0A  0E1F               	movlw	(high __ramtop+-1)
 13783  016C0C  64F7               	cpfsgt	tblptrh,c
 13784  016C0E  D003               	bra	u8187
 13785  016C10  0008               	tblrd		*
 13786  016C12  50F5               	movf	tablat,w,c
 13787  016C14  D007               	bra	u8180
 13788  016C16                     u8187:
 13789  016C16  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13790  016C1C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13791  016C22  50EF               	movf	indf0,w,c
 13792  016C24                     u8180:
 13793  016C24  0900               	iorlw	0
 13794  016C26  B4D8               	btfsc	status,2,c
 13795  016C28  D04A               	goto	u8220
 13796                           
 13797                           ;stkvar	_r @ sp[(-4)+0]
 13798  016C2A  50E1               	movf	fsr1l,w,c
 13799  016C2C  0FFC               	addlw	-4
 13800  016C2E  6ED9               	movwf	fsr2l,c
 13801  016C30  50E2               	movf	fsr1h,w,c
 13802  016C32  6EDA               	movwf	fsr2h,c
 13803  016C34  0EFF               	movlw	255
 13804  016C36  22DA               	addwfc	fsr2h,f,c
 13805  016C38  006F FF7B FFF6     	movff	postinc2,tblptrl
 13806  016C3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13807  016C44                     	if	0	;tblptru may be non-zero
 13808  016C44                     	endif
 13809  016C44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13810  016C44  0E00               	movlw	low (__mediumconst shr (0+16))
 13811  016C46  6EF8               	movwf	tblptru,c
 13812  016C48                     	endif
 13813  016C48  0008               	tblrd		*
 13814  016C4A  50F5               	movf	tablat,w,c
 13815  016C4C  0900               	iorlw	0
 13816  016C4E  B4D8               	btfsc	status,2,c
 13817  016C50  D036               	goto	u8220
 13818                           
 13819                           ;stkvar	_n @ sp[(-4)+-6]
 13820  016C52  0EF6               	movlw	-10
 13821  016C54  006F FF8C  F001    	movff	plusw1,btemp
 13822  016C5A  0EF7               	movlw	-9
 13823  016C5C  50E3               	movf	plusw1,w,c
 13824  016C5E  1001               	iorwf	btemp^0,w,c
 13825  016C60  B4D8               	btfsc	status,2,c
 13826  016C62  D02D               	goto	u8220
 13827                           
 13828                           ;stkvar	_r @ sp[(-4)+0]
 13829  016C64  50E1               	movf	fsr1l,w,c
 13830  016C66  0FFC               	addlw	-4
 13831  016C68  6ED9               	movwf	fsr2l,c
 13832  016C6A  50E2               	movf	fsr1h,w,c
 13833  016C6C  6EDA               	movwf	fsr2h,c
 13834  016C6E  0EFF               	movlw	255
 13835  016C70  22DA               	addwfc	fsr2h,f,c
 13836  016C72  006F FF7B FFF6     	movff	postinc2,tblptrl
 13837  016C78  006F FF77 FFF7     	movff	postdec2,tblptrh
 13838  016C7E                     	if	0	;tblptru may be non-zero
 13839  016C7E                     	endif
 13840  016C7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13841  016C7E  0E00               	movlw	low (__mediumconst shr (0+16))
 13842  016C80  6EF8               	movwf	tblptru,c
 13843  016C82                     	endif
 13844  016C82  0008               	tblrd		*
 13845  016C84  006F FFD4  F00C    	movff	tablat,btemp+11
 13846                           
 13847                           ;stkvar	_l @ sp[(-4)+2]
 13848  016C8A  0EFE               	movlw	-2
 13849  016C8C  006F FF8F FFF6     	movff	plusw1,tblptrl
 13850  016C92  0EFF               	movlw	-1
 13851  016C94  006F FF8F FFF7     	movff	plusw1,tblptrh
 13852  016C9A  0E00               	movlw	low (__mediumconst shr (0+16))
 13853  016C9C  6EF8               	movwf	tblptru,c
 13854  016C9E  0E1F               	movlw	(high __ramtop+-1)
 13855  016CA0  64F7               	cpfsgt	tblptrh,c
 13856  016CA2  D003               	bra	u8227
 13857  016CA4  0008               	tblrd		*
 13858  016CA6  50F5               	movf	tablat,w,c
 13859  016CA8  D007               	bra	u8225
 13860  016CAA                     u8227:
 13861  016CAA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13862  016CB0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13863  016CB6  50EF               	movf	indf0,w,c
 13864  016CB8                     u8225:
 13865  016CB8  180C               	xorwf	(btemp+11)^0,w,c
 13866  016CBA  B4D8               	btfsc	status,2,c
 13867  016CBC  D766               	goto	l8779
 13868  016CBE                     u8220:
 13869                           
 13870                           ;stkvar	_l @ sp[(-4)+2]
 13871  016CBE  0EFE               	movlw	-2
 13872  016CC0  006F FF8F FFF6     	movff	plusw1,tblptrl
 13873  016CC6  0EFF               	movlw	-1
 13874  016CC8  006F FF8F FFF7     	movff	plusw1,tblptrh
 13875  016CCE  0E00               	movlw	low (__mediumconst shr (0+16))
 13876  016CD0  6EF8               	movwf	tblptru,c
 13877  016CD2  0E1F               	movlw	(high __ramtop+-1)
 13878  016CD4  64F7               	cpfsgt	tblptrh,c
 13879  016CD6  D003               	bra	u8237
 13880  016CD8  0008               	tblrd		*
 13881  016CDA  50F5               	movf	tablat,w,c
 13882  016CDC  D007               	bra	u8230
 13883  016CDE                     u8237:
 13884  016CDE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13885  016CE4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13886  016CEA  50EF               	movf	indf0,w,c
 13887  016CEC                     u8230:
 13888  016CEC  6E01               	movwf	btemp^0,c
 13889  016CEE  6A02               	clrf	(btemp+1)^0,c
 13890                           
 13891                           ;stkvar	_r @ sp[(-4)+0]
 13892  016CF0  50E1               	movf	fsr1l,w,c
 13893  016CF2  0FFC               	addlw	-4
 13894  016CF4  6ED9               	movwf	fsr2l,c
 13895  016CF6  50E2               	movf	fsr1h,w,c
 13896  016CF8  6EDA               	movwf	fsr2h,c
 13897  016CFA  0EFF               	movlw	255
 13898  016CFC  22DA               	addwfc	fsr2h,f,c
 13899  016CFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 13900  016D04  006F FF77 FFF7     	movff	postdec2,tblptrh
 13901  016D0A                     	if	0	;tblptru may be non-zero
 13902  016D0A                     	endif
 13903  016D0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13904  016D0A  0E00               	movlw	low (__mediumconst shr (0+16))
 13905  016D0C  6EF8               	movwf	tblptru,c
 13906  016D0E                     	endif
 13907  016D0E  0008               	tblrd		*
 13908  016D10  50F5               	movf	tablat,w,c
 13909  016D12  5E01               	subwf	btemp^0,f,c
 13910  016D14  0E00               	movlw	0
 13911  016D16  5A02               	subwfb	(btemp+1)^0,f,c
 13912  016D18                     l3321:
 13913                           
 13914                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 13915  016D18  0EF6               	movlw	246
 13916  016D1A  26E1               	addwf	fsr1l,f,c
 13917  016D1C  0EFF               	movlw	255
 13918  016D1E  22E2               	addwfc	fsr1h,f,c
 13919  016D20  0012               	return		;funcret
 13920  016D22                     __end_of_strncmp:
 13921                           	opt callstack 0
 13922                           
 13923 ;; *************** function _stoa *****************
 13924 ;; Defined at:
 13925 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13928 ;;		 -> f(6), NULL(0), 
 13929 ;;  s               2  [STACK] PTR unsigned char 
 13930 ;;		 -> ?_printf(2), ?_sprintf(2), STR_32(9), STR_31(12), 
 13931 ;;		 -> D.lcd(288), D(290), T(144), STR_7(4), 
 13932 ;;		 -> STR_3(4), V(188), 
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;  nuls            7  [STACK] unsigned char [7]
 13935 ;;  l               2  [STACK] int 
 13936 ;;  p               2  [STACK] int 
 13937 ;;  cp              2  [STACK] PTR unsigned char 
 13938 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_32(9), 
 13939 ;;		 -> STR_31(12), D.lcd(288), D(290), T(144), 
 13940 ;;		 -> STR_7(4), STR_3(4), V(188), 
 13941 ;;  w               2  [STACK] int 
 13942 ;;  i               2  [STACK] int 
 13943 ;; Return value:  Size  Location     Type
 13944 ;;                  2  [STACK] int 
 13945 ;; Registers used:
 13946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13947 ;; Tracked objects:
 13948 ;;		On entry : 0/0
 13949 ;;		On exit  : 0/0
 13950 ;;		Unchanged: 0/0
 13951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13956 ;;Total ram usage:        0 bytes
 13957 ;; Hardware stack levels used:    1
 13958 ;; Hardware stack levels required when called:   18
 13959 ;; This function calls:
 13960 ;;		_fputc
 13961 ;;		_strlen
 13962 ;; This function is called by:
 13963 ;;		_vfpfcnvrt
 13964 ;; This function uses a reentrant model
 13965 ;;
 13966                           
 13967                           	psect	text54
 13968  016110                     __ptext54:
 13969                           	opt callstack 0
 13970  016110                     _stoa:
 13971                           	opt callstack 0
 13972                           
 13973                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13974  016110  0E11               	movlw	17
 13975  016112  26E1               	addwf	fsr1l,f,c
 13976  016114  0E00               	movlw	0
 13977  016116  22E2               	addwfc	fsr1h,f,c
 13978                           
 13979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 13980                           
 13981                           ;incstack = 0
 13982 ;; hardware stack exceeded
 13983  016118  EE20  F1D3         	lfsr	2,stoa@F1166
 13984                           
 13985                           ;stkvar	_nuls @ sp[(-17)+0]
 13986  01611C  0E07               	movlw	7
 13987  01611E  6E01               	movwf	btemp^0,c
 13988  016120  0EEF               	movlw	-17
 13989  016122                     us1077999:
 13990  016122  006F FF7B FFE3     	movff	postinc2,plusw1
 13991  016128  28E8               	incf	wreg,w,c
 13992  01612A  2E01               	decfsz	btemp^0,f,c
 13993  01612C  D7FA               	bra	us1077999
 13994                           
 13995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 13996                           ;stkvar	_s @ sp[(-17)+-4]
 13997  01612E  0EEB               	movlw	-21
 13998  016130  006F FF8C  F00B    	movff	plusw1,btemp+10
 13999  016136  0EEC               	movlw	-20
 14000  016138  006F FF8C  F00C    	movff	plusw1,btemp+11
 14001                           
 14002                           ;stkvar	_cp @ sp[(-17)+11]
 14003  01613E  0EFB               	movlw	-5
 14004  016140  0060  F033  FFE3   	movff	btemp+11,plusw1
 14005  016146  0EFA               	movlw	-6
 14006  016148  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14007                           
 14008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14009                           ;stkvar	_cp @ sp[(-17)+11]
 14010  01614E  0EFA               	movlw	-6
 14011  016150  006F FF8C  F001    	movff	plusw1,btemp
 14012  016156  0EFB               	movlw	-5
 14013  016158  50E3               	movf	plusw1,w,c
 14014  01615A  1001               	iorwf	btemp^0,w,c
 14015  01615C  A4D8               	btfss	status,2,c
 14016  01615E  D00E               	goto	l11307
 14017                           
 14018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14019                           ;stkvar	_nuls @ sp[(-17)+0]
 14020  016160  0EEF               	movlw	239
 14021  016162  24E1               	addwf	fsr1l,w,c
 14022  016164  6E0B               	movwf	(btemp+10)^0,c
 14023  016166  0EFF               	movlw	255
 14024  016168  20E2               	addwfc	fsr1h,w,c
 14025  01616A  6E0C               	movwf	(btemp+11)^0,c
 14026                           
 14027                           ;stkvar	_cp @ sp[(-17)+11]
 14028  01616C  0EFB               	movlw	-5
 14029  01616E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14030  016174  0EFA               	movlw	-6
 14031  016176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14032  01617C                     l11307:
 14033                           
 14034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14035                           ;stkvar	_cp @ sp[(-17)+11]
 14036  01617C  0EFA               	movlw	-6
 14037  01617E  006F FF8F FFE6     	movff	plusw1,postinc1
 14038  016184  006F FF8F FFE6     	movff	plusw1,postinc1
 14039  01618A  EC6E  F0C8         	call	_strlen	;wreg free
 14040                           
 14041                           ;stkvar	_l @ sp[(-17)+7]
 14042  01618E  0EF6               	movlw	-10
 14043  016190  0060  F007  FFE3   	movff	btemp,plusw1
 14044  016196  0EF7               	movlw	-9
 14045  016198  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14046                           
 14047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14048                           ;stkvar	_p @ sp[(-17)+9]
 14049  01619E  0EF8               	movlw	-8
 14050  0161A0  0060  F08F  FFE3   	movff	_prec,plusw1
 14051  0161A6  0EF9               	movlw	-7
 14052  0161A8  0060  F093  FFE3   	movff	_prec+1,plusw1
 14053                           
 14054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14055                           ;stkvar	_p @ sp[(-17)+9]
 14056  0161AE  0EF9               	movlw	-7
 14057  0161B0  BEE3               	btfsc	plusw1,7,c
 14058  0161B2  D023               	goto	l2151
 14059                           
 14060                           ;stkvar	_l @ sp[(-17)+7]
 14061                           ;stkvar	_p @ sp[(-17)+9]
 14062  0161B4  50E1               	movf	fsr1l,w,c
 14063  0161B6  0FF8               	addlw	-8
 14064  0161B8  6ED9               	movwf	fsr2l,c
 14065  0161BA  50E2               	movf	fsr1h,w,c
 14066  0161BC  6EDA               	movwf	fsr2h,c
 14067  0161BE  0EFF               	movlw	255
 14068  0161C0  22DA               	addwfc	fsr2h,f,c
 14069  0161C2  0EF6               	movlw	-10
 14070  0161C4  50E3               	movf	plusw1,w,c
 14071  0161C6  5CDE               	subwf	postinc2,w,c
 14072  0161C8  50DE               	movf	postinc2,w,c
 14073  0161CA  0A80               	xorlw	128
 14074  0161CC  6E01               	movwf	btemp^0,c
 14075  0161CE  0EF7               	movlw	-9
 14076  0161D0  50E3               	movf	plusw1,w,c
 14077  0161D2  0A80               	xorlw	128
 14078  0161D4  5801               	subwfb	btemp^0,w,c
 14079  0161D6  B0D8               	btfsc	status,0,c
 14080  0161D8  D010               	goto	l2151
 14081                           
 14082                           ;stkvar	_p @ sp[(-17)+9]
 14083                           ;stkvar	_l @ sp[(-17)+7]
 14084  0161DA  0EF8               	movlw	-8
 14085  0161DC  006F FF8C  F001    	movff	plusw1,btemp
 14086  0161E2  0EF6               	movlw	-10
 14087  0161E4  0060  F007  FFE3   	movff	btemp,plusw1
 14088  0161EA  0EF9               	movlw	-7
 14089  0161EC  006F FF8C  F001    	movff	plusw1,btemp
 14090  0161F2  0EF7               	movlw	-9
 14091  0161F4  0060  F007  FFE3   	movff	btemp,plusw1
 14092  0161FA                     l2151:
 14093                           
 14094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14095                           ;stkvar	_l @ sp[(-17)+7]
 14096                           ;stkvar	_p @ sp[(-17)+9]
 14097  0161FA  0EF6               	movlw	-10
 14098  0161FC  006F FF8C  F001    	movff	plusw1,btemp
 14099  016202  0EF8               	movlw	-8
 14100  016204  0060  F007  FFE3   	movff	btemp,plusw1
 14101  01620A  0EF7               	movlw	-9
 14102  01620C  006F FF8C  F001    	movff	plusw1,btemp
 14103  016212  0EF9               	movlw	-7
 14104  016214  0060  F007  FFE3   	movff	btemp,plusw1
 14105                           
 14106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14107                           ;stkvar	_w @ sp[(-17)+13]
 14108  01621A  0EFC               	movlw	-4
 14109  01621C  0060  F087  FFE3   	movff	_width,plusw1
 14110  016222  0EFD               	movlw	-3
 14111  016224  0060  F08B  FFE3   	movff	_width+1,plusw1
 14112                           
 14113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14114  01622A  A025               	btfss	_flags^0,0,c
 14115  01622C  D01F               	goto	l11327
 14116  01622E  D031               	goto	u10820
 14117  016230                     l11323:
 14118                           
 14119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14120                           ;stkvar	_fp @ sp[(-17)+-2]
 14121  016230  0EED               	movlw	-19
 14122  016232  006F FF8F FFE6     	movff	plusw1,postinc1
 14123  016238  006F FF8F FFE6     	movff	plusw1,postinc1
 14124  01623E  0E20               	movlw	32
 14125  016240  6EE6               	movwf	postinc1,c
 14126  016242  0E00               	movlw	0
 14127  016244  6EE6               	movwf	postinc1,c
 14128  016246  EC4B  F0C1         	call	_fputc	;wreg free
 14129                           
 14130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14131                           ;stkvar	_l @ sp[(-17)+7]
 14132  01624A  0EF6               	movlw	-10
 14133  01624C  50E3               	movf	plusw1,w,c
 14134  01624E  0F01               	addlw	1
 14135  016250  6E01               	movwf	btemp^0,c
 14136  016252  0EF6               	movlw	-10
 14137  016254  0060  F007  FFE3   	movff	btemp,plusw1
 14138  01625A  6A01               	clrf	btemp^0,c
 14139  01625C  0EF7               	movlw	-9
 14140  01625E  50E3               	movf	plusw1,w,c
 14141  016260  2001               	addwfc	btemp^0,w,c
 14142  016262  6E01               	movwf	btemp^0,c
 14143  016264  0EF7               	movlw	-9
 14144  016266  0060  F007  FFE3   	movff	btemp,plusw1
 14145  01626C                     l11327:
 14146                           
 14147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14148                           ;stkvar	_w @ sp[(-17)+13]
 14149                           ;stkvar	_l @ sp[(-17)+7]
 14150  01626C  50E1               	movf	fsr1l,w,c
 14151  01626E  0FF6               	addlw	-10
 14152  016270  6ED9               	movwf	fsr2l,c
 14153  016272  50E2               	movf	fsr1h,w,c
 14154  016274  6EDA               	movwf	fsr2h,c
 14155  016276  0EFF               	movlw	255
 14156  016278  22DA               	addwfc	fsr2h,f,c
 14157  01627A  0EFC               	movlw	-4
 14158  01627C  50E3               	movf	plusw1,w,c
 14159  01627E  5CDE               	subwf	postinc2,w,c
 14160  016280  50DE               	movf	postinc2,w,c
 14161  016282  0A80               	xorlw	128
 14162  016284  6E01               	movwf	btemp^0,c
 14163  016286  0EFD               	movlw	-3
 14164  016288  50E3               	movf	plusw1,w,c
 14165  01628A  0A80               	xorlw	128
 14166  01628C  5801               	subwfb	btemp^0,w,c
 14167  01628E  A0D8               	btfss	status,0,c
 14168  016290  D7CF               	goto	l11323
 14169  016292                     u10820:
 14170                           
 14171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 14172                           ;stkvar	_i @ sp[(-17)+15]
 14173  016292  0EFE               	movlw	-2
 14174  016294  6AE3               	clrf	plusw1,c
 14175  016296  0EFF               	movlw	-1
 14176  016298  6AE3               	clrf	plusw1,c
 14177                           
 14178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14179  01629A  D045               	goto	l11337
 14180  01629C                     l11331:
 14181                           
 14182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 14183                           ;stkvar	_fp @ sp[(-17)+-2]
 14184  01629C  0EED               	movlw	-19
 14185  01629E  006F FF8F FFE6     	movff	plusw1,postinc1
 14186  0162A4  006F FF8F FFE6     	movff	plusw1,postinc1
 14187                           
 14188                           ;stkvar	_cp @ sp[(-19)+11]
 14189  0162AA  0EF8               	movlw	-8
 14190  0162AC  006F FF8F FFF6     	movff	plusw1,tblptrl
 14191  0162B2  0EF9               	movlw	-7
 14192  0162B4  006F FF8F FFF7     	movff	plusw1,tblptrh
 14193  0162BA  0E00               	movlw	low (__mediumconst shr (0+16))
 14194  0162BC  6EF8               	movwf	tblptru,c
 14195  0162BE  0E1F               	movlw	(high __ramtop+-1)
 14196  0162C0  64F7               	cpfsgt	tblptrh,c
 14197  0162C2  D003               	bra	u10837
 14198  0162C4  0008               	tblrd		*
 14199  0162C6  50F5               	movf	tablat,w,c
 14200  0162C8  D007               	bra	u10830
 14201  0162CA                     u10837:
 14202  0162CA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14203  0162D0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14204  0162D6  50EF               	movf	indf0,w,c
 14205  0162D8                     u10830:
 14206  0162D8  6EE6               	movwf	postinc1,c
 14207  0162DA  0E00               	movlw	0
 14208  0162DC  6EE6               	movwf	postinc1,c
 14209  0162DE  EC4B  F0C1         	call	_fputc	;wreg free
 14210                           
 14211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 14212                           ;stkvar	_cp @ sp[(-17)+11]
 14213  0162E2  0EFA               	movlw	-6
 14214  0162E4  50E3               	movf	plusw1,w,c
 14215  0162E6  0F01               	addlw	1
 14216  0162E8  6E01               	movwf	btemp^0,c
 14217  0162EA  0EFA               	movlw	-6
 14218  0162EC  0060  F007  FFE3   	movff	btemp,plusw1
 14219  0162F2  6A01               	clrf	btemp^0,c
 14220  0162F4  0EFB               	movlw	-5
 14221  0162F6  50E3               	movf	plusw1,w,c
 14222  0162F8  2001               	addwfc	btemp^0,w,c
 14223  0162FA  6E01               	movwf	btemp^0,c
 14224  0162FC  0EFB               	movlw	-5
 14225  0162FE  0060  F007  FFE3   	movff	btemp,plusw1
 14226                           
 14227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 14228                           ;stkvar	_i @ sp[(-17)+15]
 14229  016304  0EFE               	movlw	-2
 14230  016306  50E3               	movf	plusw1,w,c
 14231  016308  0F01               	addlw	1
 14232  01630A  6E01               	movwf	btemp^0,c
 14233  01630C  0EFE               	movlw	-2
 14234  01630E  0060  F007  FFE3   	movff	btemp,plusw1
 14235  016314  6A01               	clrf	btemp^0,c
 14236  016316  0EFF               	movlw	-1
 14237  016318  50E3               	movf	plusw1,w,c
 14238  01631A  2001               	addwfc	btemp^0,w,c
 14239  01631C  6E01               	movwf	btemp^0,c
 14240  01631E  0EFF               	movlw	-1
 14241  016320  0060  F007  FFE3   	movff	btemp,plusw1
 14242  016326                     l11337:
 14243                           
 14244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14245                           ;stkvar	_p @ sp[(-17)+9]
 14246                           ;stkvar	_i @ sp[(-17)+15]
 14247  016326  50E1               	movf	fsr1l,w,c
 14248  016328  0FFE               	addlw	-2
 14249  01632A  6ED9               	movwf	fsr2l,c
 14250  01632C  50E2               	movf	fsr1h,w,c
 14251  01632E  6EDA               	movwf	fsr2h,c
 14252  016330  0EFF               	movlw	255
 14253  016332  22DA               	addwfc	fsr2h,f,c
 14254  016334  0EF8               	movlw	-8
 14255  016336  50E3               	movf	plusw1,w,c
 14256  016338  5CDE               	subwf	postinc2,w,c
 14257  01633A  50DE               	movf	postinc2,w,c
 14258  01633C  0A80               	xorlw	128
 14259  01633E  6E01               	movwf	btemp^0,c
 14260  016340  0EF9               	movlw	-7
 14261  016342  50E3               	movf	plusw1,w,c
 14262  016344  0A80               	xorlw	128
 14263  016346  5801               	subwfb	btemp^0,w,c
 14264  016348  A0D8               	btfss	status,0,c
 14265  01634A  D7A8               	goto	l11331
 14266                           
 14267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 14268  01634C  B025               	btfsc	_flags^0,0,c
 14269  01634E  D01F               	goto	l11345
 14270  016350  D031               	goto	u10860
 14271  016352                     l11341:
 14272                           
 14273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 14274                           ;stkvar	_fp @ sp[(-17)+-2]
 14275  016352  0EED               	movlw	-19
 14276  016354  006F FF8F FFE6     	movff	plusw1,postinc1
 14277  01635A  006F FF8F FFE6     	movff	plusw1,postinc1
 14278  016360  0E20               	movlw	32
 14279  016362  6EE6               	movwf	postinc1,c
 14280  016364  0E00               	movlw	0
 14281  016366  6EE6               	movwf	postinc1,c
 14282  016368  EC4B  F0C1         	call	_fputc	;wreg free
 14283                           
 14284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 14285                           ;stkvar	_l @ sp[(-17)+7]
 14286  01636C  0EF6               	movlw	-10
 14287  01636E  50E3               	movf	plusw1,w,c
 14288  016370  0F01               	addlw	1
 14289  016372  6E01               	movwf	btemp^0,c
 14290  016374  0EF6               	movlw	-10
 14291  016376  0060  F007  FFE3   	movff	btemp,plusw1
 14292  01637C  6A01               	clrf	btemp^0,c
 14293  01637E  0EF7               	movlw	-9
 14294  016380  50E3               	movf	plusw1,w,c
 14295  016382  2001               	addwfc	btemp^0,w,c
 14296  016384  6E01               	movwf	btemp^0,c
 14297  016386  0EF7               	movlw	-9
 14298  016388  0060  F007  FFE3   	movff	btemp,plusw1
 14299  01638E                     l11345:
 14300                           
 14301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 14302                           ;stkvar	_w @ sp[(-17)+13]
 14303                           ;stkvar	_l @ sp[(-17)+7]
 14304  01638E  50E1               	movf	fsr1l,w,c
 14305  016390  0FF6               	addlw	-10
 14306  016392  6ED9               	movwf	fsr2l,c
 14307  016394  50E2               	movf	fsr1h,w,c
 14308  016396  6EDA               	movwf	fsr2h,c
 14309  016398  0EFF               	movlw	255
 14310  01639A  22DA               	addwfc	fsr2h,f,c
 14311  01639C  0EFC               	movlw	-4
 14312  01639E  50E3               	movf	plusw1,w,c
 14313  0163A0  5CDE               	subwf	postinc2,w,c
 14314  0163A2  50DE               	movf	postinc2,w,c
 14315  0163A4  0A80               	xorlw	128
 14316  0163A6  6E01               	movwf	btemp^0,c
 14317  0163A8  0EFD               	movlw	-3
 14318  0163AA  50E3               	movf	plusw1,w,c
 14319  0163AC  0A80               	xorlw	128
 14320  0163AE  5801               	subwfb	btemp^0,w,c
 14321  0163B0  A0D8               	btfss	status,0,c
 14322  0163B2  D7CF               	goto	l11341
 14323  0163B4                     u10860:
 14324                           
 14325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 14326                           ;stkvar	_l @ sp[(-17)+7]
 14327  0163B4  0EF6               	movlw	-10
 14328  0163B6  006F FF8C  F001    	movff	plusw1,btemp
 14329  0163BC  0EF7               	movlw	-9
 14330  0163BE  006F FF8C  F002    	movff	plusw1,btemp+1
 14331                           
 14332                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14333  0163C4  0EEB               	movlw	235
 14334  0163C6  26E1               	addwf	fsr1l,f,c
 14335  0163C8  0EFF               	movlw	255
 14336  0163CA  22E2               	addwfc	fsr1h,f,c
 14337  0163CC  0012               	return		;funcret
 14338  0163CE                     __end_of_stoa:
 14339                           	opt callstack 0
 14340                           
 14341 ;; *************** function _efgtoa *****************
 14342 ;; Defined at:
 14343 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14344 ;; Parameters:    Size  Location     Type
 14345 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14346 ;;		 -> f(6), NULL(0), 
 14347 ;;  f               4  [STACK] PTR struct _IO_FILE
 14348 ;;  c               1  [STACK] unsigned char 
 14349 ;; Auto vars:     Size  Location     Type
 14350 ;;  u               4  [STACK] unsigned char 
 14351 ;;  g               4  [STACK] unsigned char 
 14352 ;;  l               4  [STACK] unsigned char 
 14353 ;;  h               4  [STACK] unsigned char 
 14354 ;;  ou              4  [STACK] unsigned char 
 14355 ;;  n               2  [STACK] int 
 14356 ;;  e               2  [STACK] int 
 14357 ;;  i               2  [STACK] int 
 14358 ;;  w               2  [STACK] int 
 14359 ;;  p               2  [STACK] int 
 14360 ;;  sign            2  [STACK] int 
 14361 ;;  d               2  [STACK] int 
 14362 ;;  ne              2  [STACK] int 
 14363 ;;  m               2  [STACK] int 
 14364 ;;  pp              2  [STACK] int 
 14365 ;;  t               2  [STACK] int 
 14366 ;;  mode            1  [STACK] unsigned char 
 14367 ;;  nmode           1  [STACK] unsigned char 
 14368 ;; Return value:  Size  Location     Type
 14369 ;;                  2  [STACK] int 
 14370 ;; Registers used:
 14371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14372 ;; Tracked objects:
 14373 ;;		On entry : 0/0
 14374 ;;		On exit  : 0/0
 14375 ;;		Unchanged: 0/0
 14376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14381 ;;Total ram usage:        0 bytes
 14382 ;; Hardware stack levels used:    1
 14383 ;; Hardware stack levels required when called:   20
 14384 ;; This function calls:
 14385 ;;		___awdiv
 14386 ;;		___awmod
 14387 ;;		___fladd
 14388 ;;		___fldiv
 14389 ;;		___fleq
 14390 ;;		___flge
 14391 ;;		___flmul
 14392 ;;		___flneg
 14393 ;;		___flsub
 14394 ;;		___fltol
 14395 ;;		___fpclassifyf
 14396 ;;		_floorf
 14397 ;;		_isupper
 14398 ;;		_pad
 14399 ;;		_strcpy
 14400 ;;		_tolower
 14401 ;; This function is called by:
 14402 ;;		_vfpfcnvrt
 14403 ;; This function uses a reentrant model
 14404 ;;
 14405                           
 14406                           	psect	text55
 14407  010000                     __ptext55:
 14408                           	opt callstack 0
 14409  010000                     _efgtoa:
 14410                           	opt callstack 0
 14411                           
 14412                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14413  010000  0E38               	movlw	56
 14414  010002  26E1               	addwf	fsr1l,f,c
 14415  010004  0E00               	movlw	0
 14416  010006  22E2               	addwfc	fsr1h,f,c
 14417                           
 14418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 14419                           ;stkvar	_sign @ sp[(-56)+42]
 14420                           
 14421                           ;incstack = 0
 14422 ;; hardware stack exceeded
 14423  010008  0EF2               	movlw	-14
 14424  01000A  6AE3               	clrf	plusw1,c
 14425  01000C  0EF3               	movlw	-13
 14426  01000E  6AE3               	clrf	plusw1,c
 14427                           
 14428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 14429                           ;stkvar	_f @ sp[(-56)+-6]
 14430  010010  0EC2               	movlw	-62
 14431  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 14432  010018  0EC3               	movlw	-61
 14433  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14434  010020  0EC4               	movlw	-60
 14435  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 14436  010028  0EC5               	movlw	-59
 14437  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14438                           
 14439                           ;stkvar	_g @ sp[(-56)+16]
 14440  010030  0ED8               	movlw	-40
 14441  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 14442  010038  0ED9               	movlw	-39
 14443  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14444  010040  0EDA               	movlw	-38
 14445  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14446  010048  0EDB               	movlw	-37
 14447  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14448                           
 14449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 14450                           ;stkvar	_g @ sp[(-56)+16]
 14451  010050  0EDB               	movlw	-37
 14452  010052  AEE3               	btfss	plusw1,7,c
 14453  010054  D02B               	goto	l11005
 14454                           
 14455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 14456  010056  0E01               	movlw	1
 14457  010058  6E0B               	movwf	(btemp+10)^0,c
 14458  01005A  0E00               	movlw	0
 14459  01005C  6E0C               	movwf	(btemp+11)^0,c
 14460                           
 14461                           ;stkvar	_sign @ sp[(-56)+42]
 14462  01005E  0EF2               	movlw	-14
 14463  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14464  010066  0EF3               	movlw	-13
 14465  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 14466                           
 14467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 14468                           ;stkvar	_g @ sp[(-56)+16]
 14469  01006E  0ED8               	movlw	-40
 14470  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 14471  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 14472  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 14473  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 14474  010088  EC1A  F0CE         	call	___flneg	;wreg free
 14475                           
 14476                           ;stkvar	_g @ sp[(-56)+16]
 14477  01008C  0ED8               	movlw	-40
 14478  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 14479  010094  0ED9               	movlw	-39
 14480  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14481  01009C  0EDA               	movlw	-38
 14482  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14483  0100A4  0EDB               	movlw	-37
 14484  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 14485  0100AC                     l11005:
 14486                           
 14487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 14488                           ;stkvar	_n @ sp[(-56)+32]
 14489  0100AC  0EE8               	movlw	-24
 14490  0100AE  6AE3               	clrf	plusw1,c
 14491  0100B0  0EE9               	movlw	-23
 14492  0100B2  6AE3               	clrf	plusw1,c
 14493                           
 14494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 14495                           ;stkvar	_w @ sp[(-56)+38]
 14496  0100B4  0EEE               	movlw	-18
 14497  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 14498  0100BC  0EEF               	movlw	-17
 14499  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14500                           
 14501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 14502                           ;stkvar	_sign @ sp[(-56)+42]
 14503  0100C4  0EF2               	movlw	-14
 14504  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 14505  0100CC  0EF3               	movlw	-13
 14506  0100CE  50E3               	movf	plusw1,w,c
 14507  0100D0  1001               	iorwf	btemp^0,w,c
 14508  0100D2  A4D8               	btfss	status,2,c
 14509  0100D4  D002               	goto	u10270
 14510  0100D6  A425               	btfss	_flags^0,2,c
 14511  0100D8  D036               	goto	l11025
 14512  0100DA                     u10270:
 14513                           
 14514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 14515                           ;stkvar	_sign @ sp[(-56)+42]
 14516  0100DA  0EF2               	movlw	-14
 14517  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 14518  0100E2  0EF3               	movlw	-13
 14519  0100E4  50E3               	movf	plusw1,w,c
 14520  0100E6  1001               	iorwf	btemp^0,w,c
 14521  0100E8  A4D8               	btfss	status,2,c
 14522  0100EA  D002               	goto	l11017
 14523  0100EC  0E2B               	movlw	43
 14524  0100EE  D001               	goto	L13
 14525  0100F0                     l11017:
 14526  0100F0  0E2D               	movlw	45
 14527  0100F2                     L13:
 14528  0100F2  6E0B               	movwf	(btemp+10)^0,c
 14529  0100F4  0E00               	movlw	0
 14530  0100F6  6E0C               	movwf	(btemp+11)^0,c
 14531                           
 14532                           ;stkvar	_efgtoa$5197 @ sp[(-56)+10]
 14533  0100F8  0ED2               	movlw	-46
 14534  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14535  010100  0ED3               	movlw	-45
 14536  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 14537                           
 14538                           ;stkvar	_efgtoa$5197 @ sp[(-56)+10]
 14539  010108  0ED2               	movlw	-46
 14540  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 14541                           
 14542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 14543                           ;stkvar	_n @ sp[(-56)+32]
 14544  010110  0EE8               	movlw	-24
 14545  010112  50E3               	movf	plusw1,w,c
 14546  010114  0F01               	addlw	1
 14547  010116  6E01               	movwf	btemp^0,c
 14548  010118  0EE8               	movlw	-24
 14549  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 14550  010120  6A01               	clrf	btemp^0,c
 14551  010122  0EE9               	movlw	-23
 14552  010124  50E3               	movf	plusw1,w,c
 14553  010126  2001               	addwfc	btemp^0,w,c
 14554  010128  6E01               	movwf	btemp^0,c
 14555  01012A  0EE9               	movlw	-23
 14556  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 14557                           
 14558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 14559                           ;stkvar	_w @ sp[(-56)+38]
 14560  010132  50E1               	movf	fsr1l,w,c
 14561  010134  0FEE               	addlw	-18
 14562  010136  6ED9               	movwf	fsr2l,c
 14563  010138  50E2               	movf	fsr1h,w,c
 14564  01013A  6EDA               	movwf	fsr2h,c
 14565  01013C  0EFF               	movlw	255
 14566  01013E  22DA               	addwfc	fsr2h,f,c
 14567  010140  06DE               	decf	postinc2,f,c
 14568  010142  0E00               	movlw	0
 14569  010144  5ADD               	subwfb	postdec2,f,c
 14570  010146                     l11025:
 14571                           
 14572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14573                           ;stkvar	_g @ sp[(-56)+16]
 14574  010146  0ED8               	movlw	-40
 14575  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 14576  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 14577  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 14578  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 14579  010160  EC7A  F0BA         	call	___fpclassifyf	;wreg free
 14580  010164  0401               	decf	btemp^0,w,c
 14581  010166  1002               	iorwf	(btemp+1)^0,w,c
 14582  010168  A4D8               	btfss	status,2,c
 14583  01016A  D076               	goto	l11043
 14584  01016C  0EBF               	movlw	191
 14585  01016E  6E0B               	movwf	(btemp+10)^0,c
 14586  010170  0EFF               	movlw	255
 14587  010172  6E0C               	movwf	(btemp+11)^0,c
 14588                           
 14589                           ;stkvar	_c @ sp[(-56)+-7]
 14590  010174  0EC1               	movlw	-63
 14591  010176  50E3               	movf	plusw1,w,c
 14592  010178  6E09               	movwf	(btemp+8)^0,c
 14593  01017A  6A0A               	clrf	(btemp+9)^0,c
 14594  01017C  500B               	movf	(btemp+10)^0,w,c
 14595  01017E  2609               	addwf	(btemp+8)^0,f,c
 14596  010180  500C               	movf	(btemp+11)^0,w,c
 14597  010182  220A               	addwfc	(btemp+9)^0,f,c
 14598  010184  500A               	movf	(btemp+9)^0,w,c
 14599  010186  E106               	bnz	u10300
 14600  010188  0E1A               	movlw	26
 14601  01018A  5C09               	subwf	(btemp+8)^0,w,c
 14602  01018C  B0D8               	btfsc	status,0,c
 14603  01018E  D002               	goto	u10300
 14604  010190  0E01               	movlw	1
 14605  010192  D001               	goto	u10310
 14606  010194                     u10300:
 14607  010194  0E00               	movlw	0
 14608  010196                     u10310:
 14609  010196  6E0B               	movwf	(btemp+10)^0,c
 14610  010198  6A0C               	clrf	(btemp+11)^0,c
 14611                           
 14612                           ;stkvar	_efgtoa$5198 @ sp[(-56)+8]
 14613  01019A  0ED0               	movlw	-48
 14614  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14615  0101A2  0ED1               	movlw	-47
 14616  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14617                           
 14618                           ;stkvar	_efgtoa$5198 @ sp[(-56)+8]
 14619  0101AA  0ED0               	movlw	-48
 14620  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 14621  0101B2  0ED1               	movlw	-47
 14622  0101B4  50E3               	movf	plusw1,w,c
 14623  0101B6  1001               	iorwf	btemp^0,w,c
 14624  0101B8  B4D8               	btfsc	status,2,c
 14625  0101BA  D017               	goto	l11035
 14626                           
 14627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 14628  0101BC  0ED3               	movlw	low STR_51
 14629  0101BE  6EE6               	movwf	postinc1,c
 14630  0101C0  0EFF               	movlw	high STR_51
 14631  0101C2  6EE6               	movwf	postinc1,c
 14632                           
 14633                           ;stkvar	_n @ sp[(-58)+32]
 14634  0101C4  0E94               	movlw	low _dbuf
 14635  0101C6  6E0B               	movwf	(btemp+10)^0,c
 14636  0101C8  0E03               	movlw	high _dbuf
 14637  0101CA  6E0C               	movwf	(btemp+11)^0,c
 14638  0101CC  0EE6               	movlw	-26
 14639  0101CE  50E3               	movf	plusw1,w,c
 14640  0101D0  260B               	addwf	(btemp+10)^0,f,c
 14641  0101D2  0EE7               	movlw	-25
 14642  0101D4  50E3               	movf	plusw1,w,c
 14643  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 14644  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14645  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14646  0101E4  ECEA  F0C5         	call	_strcpy	;wreg free
 14647                           
 14648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 14649  0101E8  D016               	goto	l11037
 14650  0101EA                     l11035:
 14651                           
 14652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 14653  0101EA  0EDB               	movlw	low STR_52
 14654  0101EC  6EE6               	movwf	postinc1,c
 14655  0101EE  0EFF               	movlw	high STR_52
 14656  0101F0  6EE6               	movwf	postinc1,c
 14657                           
 14658                           ;stkvar	_n @ sp[(-58)+32]
 14659  0101F2  0E94               	movlw	low _dbuf
 14660  0101F4  6E0B               	movwf	(btemp+10)^0,c
 14661  0101F6  0E03               	movlw	high _dbuf
 14662  0101F8  6E0C               	movwf	(btemp+11)^0,c
 14663  0101FA  0EE6               	movlw	-26
 14664  0101FC  50E3               	movf	plusw1,w,c
 14665  0101FE  260B               	addwf	(btemp+10)^0,f,c
 14666  010200  0EE7               	movlw	-25
 14667  010202  50E3               	movf	plusw1,w,c
 14668  010204  220C               	addwfc	(btemp+11)^0,f,c
 14669  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14670  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14671  010212  ECEA  F0C5         	call	_strcpy	;wreg free
 14672  010216                     l11037:
 14673                           
 14674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 14675                           ;stkvar	_w @ sp[(-56)+38]
 14676  010216  50E1               	movf	fsr1l,w,c
 14677  010218  0FEE               	addlw	-18
 14678  01021A  6ED9               	movwf	fsr2l,c
 14679  01021C  50E2               	movf	fsr1h,w,c
 14680  01021E  6EDA               	movwf	fsr2h,c
 14681  010220  0EFF               	movlw	255
 14682  010222  22DA               	addwfc	fsr2h,f,c
 14683  010224  0EFD               	movlw	253
 14684  010226  26DE               	addwf	postinc2,f,c
 14685  010228  0EFF               	movlw	255
 14686  01022A  22DD               	addwfc	postdec2,f,c
 14687  01022C                     l11039:
 14688                           
 14689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 14690                           ;stkvar	_w @ sp[(-56)+38]
 14691  01022C  0EEE               	movlw	-18
 14692  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 14693  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 14694  01023A  0E94               	movlw	low _dbuf
 14695  01023C  6EE6               	movwf	postinc1,c
 14696  01023E  0E03               	movlw	high _dbuf
 14697  010240  6EE6               	movwf	postinc1,c
 14698                           
 14699                           ;stkvar	_fp @ sp[(-60)+-2]
 14700  010242  0EC2               	movlw	-62
 14701  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 14702  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 14703  010250  EC69  F0C2         	call	_pad	;wreg free
 14704  010254  EF1D  F089         	goto	l2069
 14705  010258                     l11043:
 14706                           
 14707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14708                           ;stkvar	_g @ sp[(-56)+16]
 14709  010258  0ED8               	movlw	-40
 14710  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 14711  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 14712  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 14713  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 14714  010272  EC7A  F0BA         	call	___fpclassifyf	;wreg free
 14715  010276  5001               	movf	btemp^0,w,c
 14716  010278  1002               	iorwf	(btemp+1)^0,w,c
 14717  01027A  A4D8               	btfss	status,2,c
 14718  01027C  D056               	goto	l11061
 14719  01027E  0EBF               	movlw	191
 14720  010280  6E0B               	movwf	(btemp+10)^0,c
 14721  010282  0EFF               	movlw	255
 14722  010284  6E0C               	movwf	(btemp+11)^0,c
 14723                           
 14724                           ;stkvar	_c @ sp[(-56)+-7]
 14725  010286  0EC1               	movlw	-63
 14726  010288  50E3               	movf	plusw1,w,c
 14727  01028A  6E09               	movwf	(btemp+8)^0,c
 14728  01028C  6A0A               	clrf	(btemp+9)^0,c
 14729  01028E  500B               	movf	(btemp+10)^0,w,c
 14730  010290  2609               	addwf	(btemp+8)^0,f,c
 14731  010292  500C               	movf	(btemp+11)^0,w,c
 14732  010294  220A               	addwfc	(btemp+9)^0,f,c
 14733  010296  500A               	movf	(btemp+9)^0,w,c
 14734  010298  E106               	bnz	u10340
 14735  01029A  0E1A               	movlw	26
 14736  01029C  5C09               	subwf	(btemp+8)^0,w,c
 14737  01029E  B0D8               	btfsc	status,0,c
 14738  0102A0  D002               	goto	u10340
 14739  0102A2  0E01               	movlw	1
 14740  0102A4  D001               	goto	u10350
 14741  0102A6                     u10340:
 14742  0102A6  0E00               	movlw	0
 14743  0102A8                     u10350:
 14744  0102A8  6E0B               	movwf	(btemp+10)^0,c
 14745  0102AA  6A0C               	clrf	(btemp+11)^0,c
 14746                           
 14747                           ;stkvar	_efgtoa$5202 @ sp[(-56)+6]
 14748  0102AC  0ECE               	movlw	-50
 14749  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14750  0102B4  0ECF               	movlw	-49
 14751  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14752                           
 14753                           ;stkvar	_efgtoa$5202 @ sp[(-56)+6]
 14754  0102BC  0ECE               	movlw	-50
 14755  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 14756  0102C4  0ECF               	movlw	-49
 14757  0102C6  50E3               	movf	plusw1,w,c
 14758  0102C8  1001               	iorwf	btemp^0,w,c
 14759  0102CA  B4D8               	btfsc	status,2,c
 14760  0102CC  D017               	goto	l11053
 14761                           
 14762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 14763  0102CE  0ED7               	movlw	low STR_55
 14764  0102D0  6EE6               	movwf	postinc1,c
 14765  0102D2  0EFF               	movlw	high STR_55
 14766  0102D4  6EE6               	movwf	postinc1,c
 14767                           
 14768                           ;stkvar	_n @ sp[(-58)+32]
 14769  0102D6  0E94               	movlw	low _dbuf
 14770  0102D8  6E0B               	movwf	(btemp+10)^0,c
 14771  0102DA  0E03               	movlw	high _dbuf
 14772  0102DC  6E0C               	movwf	(btemp+11)^0,c
 14773  0102DE  0EE6               	movlw	-26
 14774  0102E0  50E3               	movf	plusw1,w,c
 14775  0102E2  260B               	addwf	(btemp+10)^0,f,c
 14776  0102E4  0EE7               	movlw	-25
 14777  0102E6  50E3               	movf	plusw1,w,c
 14778  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 14779  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14780  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14781  0102F6  ECEA  F0C5         	call	_strcpy	;wreg free
 14782                           
 14783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 14784  0102FA  D78D               	goto	l11037
 14785  0102FC                     l11053:
 14786                           
 14787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 14788  0102FC  0EDF               	movlw	low STR_56
 14789  0102FE  6EE6               	movwf	postinc1,c
 14790  010300  0EFF               	movlw	high STR_56
 14791  010302  6EE6               	movwf	postinc1,c
 14792                           
 14793                           ;stkvar	_n @ sp[(-58)+32]
 14794  010304  0E94               	movlw	low _dbuf
 14795  010306  6E0B               	movwf	(btemp+10)^0,c
 14796  010308  0E03               	movlw	high _dbuf
 14797  01030A  6E0C               	movwf	(btemp+11)^0,c
 14798  01030C  0EE6               	movlw	-26
 14799  01030E  50E3               	movf	plusw1,w,c
 14800  010310  260B               	addwf	(btemp+10)^0,f,c
 14801  010312  0EE7               	movlw	-25
 14802  010314  50E3               	movf	plusw1,w,c
 14803  010316  220C               	addwfc	(btemp+11)^0,f,c
 14804  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14805  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14806  010324  ECEA  F0C5         	call	_strcpy	;wreg free
 14807  010328  D776               	goto	l11037
 14808  01032A                     l11061:
 14809                           
 14810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 14811  01032A  0E00               	movlw	0
 14812  01032C  6E09               	movwf	(btemp+8)^0,c
 14813  01032E  0E00               	movlw	0
 14814  010330  6E0A               	movwf	(btemp+9)^0,c
 14815  010332  0E80               	movlw	128
 14816  010334  6E0B               	movwf	(btemp+10)^0,c
 14817  010336  0E3F               	movlw	63
 14818  010338  6E0C               	movwf	(btemp+11)^0,c
 14819                           
 14820                           ;stkvar	_u @ sp[(-56)+12]
 14821  01033A  0ED4               	movlw	-44
 14822  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 14823  010342  0ED5               	movlw	-43
 14824  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14825  01034A  0ED6               	movlw	-42
 14826  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14827  010352  0ED7               	movlw	-41
 14828  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 14829                           
 14830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 14831                           ;stkvar	_e @ sp[(-56)+34]
 14832  01035A  0EEA               	movlw	-22
 14833  01035C  6AE3               	clrf	plusw1,c
 14834  01035E  0EEB               	movlw	-21
 14835  010360  6AE3               	clrf	plusw1,c
 14836                           
 14837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 14838  010362  0E00               	movlw	0
 14839  010364  6EE6               	movwf	postinc1,c
 14840  010366  0E00               	movlw	0
 14841  010368  6EE6               	movwf	postinc1,c
 14842  01036A  0E00               	movlw	0
 14843  01036C  6EE6               	movwf	postinc1,c
 14844  01036E  0E00               	movlw	0
 14845  010370  6EE6               	movwf	postinc1,c
 14846                           
 14847                           ;stkvar	_g @ sp[(-60)+16]
 14848  010372  0ED4               	movlw	-44
 14849  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 14850  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 14851  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 14852  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 14853  01038C  EC54  F0C6         	call	___fleq	;wreg free
 14854  010390  A001               	btfss	btemp& (0+255),0,c
 14855  010392  D039               	goto	l11073
 14856  010394  D0BC               	goto	u10390
 14857  010396                     l11069:
 14858                           
 14859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 14860  010396  0E00               	movlw	0
 14861  010398  6EE6               	movwf	postinc1,c
 14862  01039A  0E00               	movlw	0
 14863  01039C  6EE6               	movwf	postinc1,c
 14864  01039E  0E20               	movlw	32
 14865  0103A0  6EE6               	movwf	postinc1,c
 14866  0103A2  0E41               	movlw	65
 14867  0103A4  6EE6               	movwf	postinc1,c
 14868                           
 14869                           ;stkvar	_u @ sp[(-60)+12]
 14870  0103A6  0ED0               	movlw	-48
 14871  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14872  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14873  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14874  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 14875  0103C0  ECE1  F095         	call	___flmul	;wreg free
 14876                           
 14877                           ;stkvar	_u @ sp[(-56)+12]
 14878  0103C4  0ED4               	movlw	-44
 14879  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 14880  0103CC  0ED5               	movlw	-43
 14881  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14882  0103D4  0ED6               	movlw	-42
 14883  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14884  0103DC  0ED7               	movlw	-41
 14885  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 14886                           
 14887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 14888                           ;stkvar	_e @ sp[(-56)+34]
 14889  0103E4  0EEA               	movlw	-22
 14890  0103E6  50E3               	movf	plusw1,w,c
 14891  0103E8  0F01               	addlw	1
 14892  0103EA  6E01               	movwf	btemp^0,c
 14893  0103EC  0EEA               	movlw	-22
 14894  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 14895  0103F4  6A01               	clrf	btemp^0,c
 14896  0103F6  0EEB               	movlw	-21
 14897  0103F8  50E3               	movf	plusw1,w,c
 14898  0103FA  2001               	addwfc	btemp^0,w,c
 14899  0103FC  6E01               	movwf	btemp^0,c
 14900  0103FE  0EEB               	movlw	-21
 14901  010400  0060  F007  FFE3   	movff	btemp,plusw1
 14902  010406                     l11073:
 14903                           
 14904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 14905  010406  0E00               	movlw	0
 14906  010408  6EE6               	movwf	postinc1,c
 14907  01040A  0E00               	movlw	0
 14908  01040C  6EE6               	movwf	postinc1,c
 14909  01040E  0E20               	movlw	32
 14910  010410  6EE6               	movwf	postinc1,c
 14911  010412  0E41               	movlw	65
 14912  010414  6EE6               	movwf	postinc1,c
 14913                           
 14914                           ;stkvar	_u @ sp[(-60)+12]
 14915  010416  0ED0               	movlw	-48
 14916  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 14917  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 14918  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 14919  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 14920  010430  ECE1  F095         	call	___flmul	;wreg free
 14921  010434  0060  F007  FFE6   	movff	btemp,postinc1
 14922  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14923  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14924  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 14925                           
 14926                           ;stkvar	_g @ sp[(-60)+16]
 14927  01044C  0ED4               	movlw	-44
 14928  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 14929  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 14930  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 14931  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 14932  010466  EC76  F0BD         	call	___flge	;wreg free
 14933  01046A  A001               	btfss	btemp& (0+255),0,c
 14934  01046C  D032               	goto	l11079
 14935  01046E  D793               	goto	l11069
 14936  010470                     l11075:
 14937                           
 14938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 14939  010470  0E00               	movlw	0
 14940  010472  6EE6               	movwf	postinc1,c
 14941  010474  0E00               	movlw	0
 14942  010476  6EE6               	movwf	postinc1,c
 14943  010478  0E20               	movlw	32
 14944  01047A  6EE6               	movwf	postinc1,c
 14945  01047C  0E41               	movlw	65
 14946  01047E  6EE6               	movwf	postinc1,c
 14947                           
 14948                           ;stkvar	_u @ sp[(-60)+12]
 14949  010480  0ED0               	movlw	-48
 14950  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 14951  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 14952  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 14953  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 14954  01049A  EC17  F0A1         	call	___fldiv	;wreg free
 14955                           
 14956                           ;stkvar	_u @ sp[(-56)+12]
 14957  01049E  0ED4               	movlw	-44
 14958  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 14959  0104A6  0ED5               	movlw	-43
 14960  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14961  0104AE  0ED6               	movlw	-42
 14962  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14963  0104B6  0ED7               	movlw	-41
 14964  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 14965                           
 14966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 14967                           ;stkvar	_e @ sp[(-56)+34]
 14968  0104BE  50E1               	movf	fsr1l,w,c
 14969  0104C0  0FEA               	addlw	-22
 14970  0104C2  6ED9               	movwf	fsr2l,c
 14971  0104C4  50E2               	movf	fsr1h,w,c
 14972  0104C6  6EDA               	movwf	fsr2h,c
 14973  0104C8  0EFF               	movlw	255
 14974  0104CA  22DA               	addwfc	fsr2h,f,c
 14975  0104CC  06DE               	decf	postinc2,f,c
 14976  0104CE  0E00               	movlw	0
 14977  0104D0  5ADD               	subwfb	postdec2,f,c
 14978  0104D2                     l11079:
 14979                           
 14980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 14981                           ;stkvar	_u @ sp[(-56)+12]
 14982  0104D2  0ED4               	movlw	-44
 14983  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14984  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 14985  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 14986  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 14987                           
 14988                           ;stkvar	_g @ sp[(-60)+16]
 14989  0104EC  0ED4               	movlw	-44
 14990  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 14991  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 14992  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14993  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 14994  010506  EC76  F0BD         	call	___flge	;wreg free
 14995  01050A  A001               	btfss	btemp& (0+255),0,c
 14996  01050C  D7B1               	goto	l11075
 14997  01050E                     u10390:
 14998                           
 14999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15000                           ;stkvar	_c @ sp[(-56)+-7]
 15001  01050E  0EC1               	movlw	-63
 15002  010510  50E3               	movf	plusw1,w,c
 15003  010512  6EE6               	movwf	postinc1,c
 15004  010514  0E00               	movlw	0
 15005  010516  6EE6               	movwf	postinc1,c
 15006  010518  ECB4  F0CA         	call	_tolower	;wreg free
 15007                           
 15008                           ;stkvar	_mode @ sp[(-56)+54]
 15009  01051C  0EFE               	movlw	-2
 15010  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 15011                           
 15012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15013                           ;stkvar	_mode @ sp[(-56)+54]
 15014                           ;stkvar	_nmode @ sp[(-56)+55]
 15015  010524  0EFE               	movlw	-2
 15016  010526  006F FF8C  F001    	movff	plusw1,btemp
 15017  01052C  0EFF               	movlw	-1
 15018  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 15019                           
 15020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15021                           ;stkvar	_mode @ sp[(-56)+54]
 15022  010534  0EFE               	movlw	-2
 15023  010536  006F FF8C  F001    	movff	plusw1,btemp
 15024  01053C  0E67               	movlw	103
 15025  01053E  1801               	xorwf	btemp^0,w,c
 15026  010540  A4D8               	btfss	status,2,c
 15027  010542  D025               	goto	l11097
 15028                           
 15029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15030  010544  5023               	movf	_prec^0,w,c
 15031  010546  1024               	iorwf	(_prec+1)^0,w,c
 15032  010548  A4D8               	btfss	status,2,c
 15033  01054A  D004               	goto	l11091
 15034                           
 15035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15036  01054C  0E00               	movlw	0
 15037  01054E  6E24               	movwf	(_prec+1)^0,c
 15038  010550  0E01               	movlw	1
 15039  010552  6E23               	movwf	_prec^0,c
 15040  010554                     l11091:
 15041                           
 15042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15043  010554  BE24               	btfsc	(_prec+1)^0,7,c
 15044  010556  D005               	goto	u10420
 15045  010558  5024               	movf	(_prec+1)^0,w,c
 15046  01055A  E110               	bnz	l11095
 15047  01055C  0423               	decf	_prec^0,w,c
 15048  01055E  B0D8               	btfsc	status,0,c
 15049  010560  D00D               	goto	l11095
 15050  010562                     u10420:
 15051  010562  0E06               	movlw	6
 15052  010564  6E0B               	movwf	(btemp+10)^0,c
 15053  010566  0E00               	movlw	0
 15054  010568  6E0C               	movwf	(btemp+11)^0,c
 15055                           
 15056                           ;stkvar	_p @ sp[(-56)+40]
 15057  01056A  0EF0               	movlw	-16
 15058  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15059  010572  0EF1               	movlw	-15
 15060  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 15061  01057A  D00C               	goto	l11103
 15062  01057C                     l11095:
 15063                           
 15064                           ;stkvar	_p @ sp[(-56)+40]
 15065  01057C  0EF0               	movlw	-16
 15066  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 15067  010584  0EF1               	movlw	-15
 15068  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 15069  01058C  D003               	goto	l11103
 15070  01058E                     l11097:
 15071                           
 15072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15073  01058E  AE24               	btfss	(_prec+1)^0,7,c
 15074  010590  D7F5               	goto	l11095
 15075  010592  D7E7               	goto	u10420
 15076  010594                     l11103:
 15077                           
 15078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15079                           ;stkvar	_mode @ sp[(-56)+54]
 15080  010594  0EFE               	movlw	-2
 15081  010596  006F FF8C  F001    	movff	plusw1,btemp
 15082  01059C  0E67               	movlw	103
 15083  01059E  1801               	xorwf	btemp^0,w,c
 15084  0105A0  A4D8               	btfss	status,2,c
 15085  0105A2  D02F               	goto	l11113
 15086                           
 15087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15088                           ;stkvar	_e @ sp[(-56)+34]
 15089  0105A4  0EEB               	movlw	-21
 15090  0105A6  AEE3               	btfss	plusw1,7,c
 15091  0105A8  D00E               	goto	u10450
 15092  0105AA  0EEA               	movlw	-22
 15093  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 15094  0105B2  0EFC               	movlw	252
 15095  0105B4  5E01               	subwf	btemp^0,f,c
 15096  0105B6  0EEB               	movlw	-21
 15097  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 15098  0105BE  0EFF               	movlw	255
 15099  0105C0  5A01               	subwfb	btemp^0,f,c
 15100  0105C2  A0D8               	btfss	status,0,c
 15101  0105C4  D018               	goto	l11111
 15102  0105C6                     u10450:
 15103                           
 15104                           ;stkvar	_e @ sp[(-56)+34]
 15105                           ;stkvar	_p @ sp[(-56)+40]
 15106  0105C6  0EF0               	movlw	-16
 15107  0105C8  50E3               	movf	plusw1,w,c
 15108  0105CA  0FFF               	addlw	255
 15109  0105CC  6E0B               	movwf	(btemp+10)^0,c
 15110  0105CE  0EF1               	movlw	-15
 15111  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15112  0105D6  0EFF               	movlw	255
 15113  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 15114  0105DA  0EEA               	movlw	-22
 15115  0105DC  50E3               	movf	plusw1,w,c
 15116  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 15117  0105E0  500C               	movf	(btemp+11)^0,w,c
 15118  0105E2  0A80               	xorlw	128
 15119  0105E4  6E01               	movwf	btemp^0,c
 15120  0105E6  0EEB               	movlw	-21
 15121  0105E8  50E3               	movf	plusw1,w,c
 15122  0105EA  0A80               	xorlw	128
 15123  0105EC  5801               	subwfb	btemp^0,w,c
 15124  0105EE  A0D8               	btfss	status,0,c
 15125  0105F0  D002               	goto	l11111
 15126                           
 15127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15128  0105F2  0E66               	movlw	102
 15129  0105F4  D001               	goto	L14
 15130  0105F6                     l11111:
 15131                           
 15132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15133  0105F6  0E65               	movlw	101
 15134  0105F8                     L14:
 15135  0105F8  6E0C               	movwf	(btemp+11)^0,c
 15136                           
 15137                           ;stkvar	_nmode @ sp[(-56)+55]
 15138  0105FA  0EFF               	movlw	-1
 15139  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15140  010602                     l11113:
 15141                           
 15142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15143                           ;stkvar	_p @ sp[(-56)+40]
 15144                           ;stkvar	_m @ sp[(-56)+48]
 15145  010602  0EF0               	movlw	-16
 15146  010604  006F FF8C  F001    	movff	plusw1,btemp
 15147  01060A  0EF8               	movlw	-8
 15148  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 15149  010612  0EF1               	movlw	-15
 15150  010614  006F FF8C  F001    	movff	plusw1,btemp
 15151  01061A  0EF9               	movlw	-7
 15152  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 15153                           
 15154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15155                           ;stkvar	_mode @ sp[(-56)+54]
 15156  010622  0EFE               	movlw	-2
 15157  010624  006F FF8C  F001    	movff	plusw1,btemp
 15158  01062A  0E67               	movlw	103
 15159  01062C  1801               	xorwf	btemp^0,w,c
 15160  01062E  A4D8               	btfss	status,2,c
 15161  010630  D00B               	goto	u10490
 15162                           
 15163                           ;stkvar	_nmode @ sp[(-56)+55]
 15164  010632  0EFF               	movlw	-1
 15165  010634  006F FF8C  F001    	movff	plusw1,btemp
 15166  01063A  0E66               	movlw	102
 15167  01063C  1801               	xorwf	btemp^0,w,c
 15168  01063E  A4D8               	btfss	status,2,c
 15169  010640  D014               	goto	l2098
 15170                           
 15171                           ;stkvar	_e @ sp[(-56)+34]
 15172  010642  0EEB               	movlw	-21
 15173  010644  AEE3               	btfss	plusw1,7,c
 15174  010646  D011               	goto	l2098
 15175  010648                     u10490:
 15176                           
 15177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 15178                           ;stkvar	_m @ sp[(-56)+48]
 15179  010648  0EF8               	movlw	-8
 15180  01064A  50E3               	movf	plusw1,w,c
 15181  01064C  0F01               	addlw	1
 15182  01064E  6E01               	movwf	btemp^0,c
 15183  010650  0EF8               	movlw	-8
 15184  010652  0060  F007  FFE3   	movff	btemp,plusw1
 15185  010658  6A01               	clrf	btemp^0,c
 15186  01065A  0EF9               	movlw	-7
 15187  01065C  50E3               	movf	plusw1,w,c
 15188  01065E  2001               	addwfc	btemp^0,w,c
 15189  010660  6E01               	movwf	btemp^0,c
 15190  010662  0EF9               	movlw	-7
 15191  010664  0060  F007  FFE3   	movff	btemp,plusw1
 15192  01066A                     l2098:
 15193                           
 15194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 15195                           ;stkvar	_nmode @ sp[(-56)+55]
 15196  01066A  0EFF               	movlw	-1
 15197  01066C  006F FF8C  F001    	movff	plusw1,btemp
 15198  010672  0E66               	movlw	102
 15199  010674  1801               	xorwf	btemp^0,w,c
 15200  010676  A4D8               	btfss	status,2,c
 15201  010678  D03B               	goto	l11133
 15202                           
 15203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 15204                           ;stkvar	_e @ sp[(-56)+34]
 15205  01067A  0EEB               	movlw	-21
 15206  01067C  AEE3               	btfss	plusw1,7,c
 15207  01067E  D01C               	goto	l11129
 15208                           
 15209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 15210  010680  0E00               	movlw	0
 15211  010682  6E09               	movwf	(btemp+8)^0,c
 15212  010684  0E00               	movlw	0
 15213  010686  6E0A               	movwf	(btemp+9)^0,c
 15214  010688  0E80               	movlw	128
 15215  01068A  6E0B               	movwf	(btemp+10)^0,c
 15216  01068C  0E3F               	movlw	63
 15217  01068E  6E0C               	movwf	(btemp+11)^0,c
 15218                           
 15219                           ;stkvar	_u @ sp[(-56)+12]
 15220  010690  0ED4               	movlw	-44
 15221  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 15222  010698  0ED5               	movlw	-43
 15223  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15224  0106A0  0ED6               	movlw	-42
 15225  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15226  0106A8  0ED7               	movlw	-41
 15227  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15228                           
 15229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 15230                           ;stkvar	_e @ sp[(-56)+34]
 15231  0106B0  0EEA               	movlw	-22
 15232  0106B2  6AE3               	clrf	plusw1,c
 15233  0106B4  0EEB               	movlw	-21
 15234  0106B6  6AE3               	clrf	plusw1,c
 15235  0106B8                     l11129:
 15236                           
 15237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 15238                           ;stkvar	_mode @ sp[(-56)+54]
 15239  0106B8  0EFE               	movlw	-2
 15240  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 15241  0106C0  0E67               	movlw	103
 15242  0106C2  1801               	xorwf	btemp^0,w,c
 15243  0106C4  B4D8               	btfsc	status,2,c
 15244  0106C6  D014               	goto	l11133
 15245                           
 15246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 15247                           ;stkvar	_e @ sp[(-56)+34]
 15248                           ;stkvar	_m @ sp[(-56)+48]
 15249  0106C8  0EF8               	movlw	-8
 15250  0106CA  50E3               	movf	plusw1,w,c
 15251  0106CC  6E01               	movwf	btemp^0,c
 15252  0106CE  0EEA               	movlw	-22
 15253  0106D0  50E3               	movf	plusw1,w,c
 15254  0106D2  2601               	addwf	btemp^0,f,c
 15255  0106D4  0EF8               	movlw	-8
 15256  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 15257  0106DC  0EF9               	movlw	-7
 15258  0106DE  50E3               	movf	plusw1,w,c
 15259  0106E0  6E01               	movwf	btemp^0,c
 15260  0106E2  0EEB               	movlw	-21
 15261  0106E4  50E3               	movf	plusw1,w,c
 15262  0106E6  2201               	addwfc	btemp^0,f,c
 15263  0106E8  0EF9               	movlw	-7
 15264  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 15265  0106F0                     l11133:
 15266                           
 15267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 15268                           ;stkvar	_i @ sp[(-56)+36]
 15269  0106F0  0EEC               	movlw	-20
 15270  0106F2  6AE3               	clrf	plusw1,c
 15271  0106F4  0EED               	movlw	-19
 15272  0106F6  6AE3               	clrf	plusw1,c
 15273                           
 15274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 15275                           ;stkvar	_g @ sp[(-56)+16]
 15276  0106F8  0ED8               	movlw	-40
 15277  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 15278  010700  0ED9               	movlw	-39
 15279  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 15280  010708  0EDA               	movlw	-38
 15281  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15282  010710  0EDB               	movlw	-37
 15283  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 15284                           
 15285                           ;stkvar	_h @ sp[(-56)+24]
 15286  010718  0EE0               	movlw	-32
 15287  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15288  010720  0EE1               	movlw	-31
 15289  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15290  010728  0EE2               	movlw	-30
 15291  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15292  010730  0EE3               	movlw	-29
 15293  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 15294                           
 15295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 15296                           ;stkvar	_u @ sp[(-56)+12]
 15297  010738  0ED4               	movlw	-44
 15298  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 15299  010740  0ED5               	movlw	-43
 15300  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 15301  010748  0ED6               	movlw	-42
 15302  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15303  010750  0ED7               	movlw	-41
 15304  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 15305                           
 15306                           ;stkvar	_ou @ sp[(-56)+28]
 15307  010758  0EE4               	movlw	-28
 15308  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15309  010760  0EE5               	movlw	-27
 15310  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15311  010768  0EE6               	movlw	-26
 15312  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15313  010770  0EE7               	movlw	-25
 15314  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 15315                           
 15316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15317  010778  D0D6               	goto	l11149
 15318  01077A                     l11139:
 15319                           
 15320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 15321                           ;stkvar	_u @ sp[(-56)+12]
 15322  01077A  0ED4               	movlw	-44
 15323  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 15324  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 15325  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 15326  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 15327                           
 15328                           ;stkvar	_h @ sp[(-60)+24]
 15329  010794  0EDC               	movlw	-36
 15330  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 15331  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 15332  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15333  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15334  0107AE  EC17  F0A1         	call	___fldiv	;wreg free
 15335  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 15336  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15337  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15338  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 15339  0107CA  EC47  F0AA         	call	_floorf	;wreg free
 15340                           
 15341                           ;stkvar	_l @ sp[(-56)+20]
 15342  0107CE  0EDC               	movlw	-36
 15343  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 15344  0107D6  0EDD               	movlw	-35
 15345  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15346  0107DE  0EDE               	movlw	-34
 15347  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15348  0107E6  0EDF               	movlw	-33
 15349  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15350                           
 15351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 15352                           ;stkvar	_l @ sp[(-56)+20]
 15353  0107EE  0EDC               	movlw	-36
 15354  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15355  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 15356  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 15357  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 15358  010808  EC05  F0BC         	call	___fltol	;wreg free
 15359  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 15360  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 15361                           
 15362                           ;stkvar	_d @ sp[(-56)+44]
 15363  010818  0EF4               	movlw	-12
 15364  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15365  010820  0EF5               	movlw	-11
 15366  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 15367                           
 15368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 15369                           ;stkvar	_u @ sp[(-56)+12]
 15370  010828  0ED4               	movlw	-44
 15371  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 15372  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 15373  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 15374  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 15375                           
 15376                           ;stkvar	_l @ sp[(-60)+20]
 15377  010842  0ED8               	movlw	-40
 15378  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 15379  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 15380  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 15381  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 15382  01085C  ECE1  F095         	call	___flmul	;wreg free
 15383  010860  0060  F007  FFE6   	movff	btemp,postinc1
 15384  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15385  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15386  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 15387                           
 15388                           ;stkvar	_h @ sp[(-60)+24]
 15389  010878  0EDC               	movlw	-36
 15390  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 15391  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 15392  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 15393  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 15394  010892  EC61  F0CE         	call	___flsub	;wreg free
 15395                           
 15396                           ;stkvar	_h @ sp[(-56)+24]
 15397  010896  0EE0               	movlw	-32
 15398  010898  0060  F007  FFE3   	movff	btemp,plusw1
 15399  01089E  0EE1               	movlw	-31
 15400  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15401  0108A6  0EE2               	movlw	-30
 15402  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15403  0108AE  0EE3               	movlw	-29
 15404  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 15405                           
 15406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 15407  0108B6  0E00               	movlw	0
 15408  0108B8  6EE6               	movwf	postinc1,c
 15409  0108BA  0E00               	movlw	0
 15410  0108BC  6EE6               	movwf	postinc1,c
 15411  0108BE  0E20               	movlw	32
 15412  0108C0  6EE6               	movwf	postinc1,c
 15413  0108C2  0E41               	movlw	65
 15414  0108C4  6EE6               	movwf	postinc1,c
 15415                           
 15416                           ;stkvar	_u @ sp[(-60)+12]
 15417  0108C6  0ED0               	movlw	-48
 15418  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15419  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15420  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15421  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15422  0108E0  EC17  F0A1         	call	___fldiv	;wreg free
 15423                           
 15424                           ;stkvar	_u @ sp[(-56)+12]
 15425  0108E4  0ED4               	movlw	-44
 15426  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 15427  0108EC  0ED5               	movlw	-43
 15428  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15429  0108F4  0ED6               	movlw	-42
 15430  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15431  0108FC  0ED7               	movlw	-41
 15432  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15433                           
 15434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 15435                           ;stkvar	_i @ sp[(-56)+36]
 15436  010904  0EEC               	movlw	-20
 15437  010906  50E3               	movf	plusw1,w,c
 15438  010908  0F01               	addlw	1
 15439  01090A  6E01               	movwf	btemp^0,c
 15440  01090C  0EEC               	movlw	-20
 15441  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 15442  010914  6A01               	clrf	btemp^0,c
 15443  010916  0EED               	movlw	-19
 15444  010918  50E3               	movf	plusw1,w,c
 15445  01091A  2001               	addwfc	btemp^0,w,c
 15446  01091C  6E01               	movwf	btemp^0,c
 15447  01091E  0EED               	movlw	-19
 15448  010920  0060  F007  FFE3   	movff	btemp,plusw1
 15449  010926                     l11149:
 15450                           
 15451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15452                           ;stkvar	_m @ sp[(-56)+48]
 15453                           ;stkvar	_i @ sp[(-56)+36]
 15454  010926  50E1               	movf	fsr1l,w,c
 15455  010928  0FEC               	addlw	-20
 15456  01092A  6ED9               	movwf	fsr2l,c
 15457  01092C  50E2               	movf	fsr1h,w,c
 15458  01092E  6EDA               	movwf	fsr2h,c
 15459  010930  0EFF               	movlw	255
 15460  010932  22DA               	addwfc	fsr2h,f,c
 15461  010934  0EF8               	movlw	-8
 15462  010936  50E3               	movf	plusw1,w,c
 15463  010938  5CDE               	subwf	postinc2,w,c
 15464  01093A  50DE               	movf	postinc2,w,c
 15465  01093C  0A80               	xorlw	128
 15466  01093E  6E01               	movwf	btemp^0,c
 15467  010940  0EF9               	movlw	-7
 15468  010942  50E3               	movf	plusw1,w,c
 15469  010944  0A80               	xorlw	128
 15470  010946  5801               	subwfb	btemp^0,w,c
 15471  010948  A0D8               	btfss	status,0,c
 15472  01094A  D717               	goto	l11139
 15473                           
 15474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 15475  01094C  0E00               	movlw	0
 15476  01094E  6EE6               	movwf	postinc1,c
 15477  010950  0E00               	movlw	0
 15478  010952  6EE6               	movwf	postinc1,c
 15479  010954  0EA0               	movlw	160
 15480  010956  6EE6               	movwf	postinc1,c
 15481  010958  0E40               	movlw	64
 15482  01095A  6EE6               	movwf	postinc1,c
 15483                           
 15484                           ;stkvar	_u @ sp[(-60)+12]
 15485  01095C  0ED0               	movlw	-48
 15486  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 15487  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 15488  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 15489  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 15490  010976  ECE1  F095         	call	___flmul	;wreg free
 15491                           
 15492                           ;stkvar	_l @ sp[(-56)+20]
 15493  01097A  0EDC               	movlw	-36
 15494  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 15495  010982  0EDD               	movlw	-35
 15496  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15497  01098A  0EDE               	movlw	-34
 15498  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15499  010992  0EDF               	movlw	-33
 15500  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 15501                           
 15502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 15503                           ;stkvar	_l @ sp[(-56)+20]
 15504  01099A  0EDC               	movlw	-36
 15505  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 15506  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15507  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15508  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15509                           
 15510                           ;stkvar	_h @ sp[(-60)+24]
 15511  0109B4  0EDC               	movlw	-36
 15512  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15513  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15514  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 15515  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15516  0109CE  EC76  F0BD         	call	___flge	;wreg free
 15517  0109D2  A001               	btfss	btemp& (0+255),0,c
 15518  0109D4  D021               	goto	u10560
 15519                           
 15520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 15521                           ;stkvar	_l @ sp[(-56)+20]
 15522                           
 15523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 15524                           
 15525                           ;stkvar	_l @ sp[(-56)+20]
 15526                           
 15527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 15528  0109D6  0EDC               	movlw	-36
 15529  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 15530  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 15531  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 15532  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 15533                           
 15534                           ;stkvar	_h @ sp[(-60)+24]
 15535  0109F0  0EDC               	movlw	-36
 15536  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 15537  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 15538  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15539  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 15540  010A0A  EC54  F0C6         	call	___fleq	;wreg free
 15541  010A0E  A001               	btfss	btemp& (0+255),0,c
 15542  010A10  D01B               	goto	l11163
 15543                           
 15544                           ;stkvar	_d @ sp[(-56)+44]
 15545  010A12  0EF4               	movlw	-12
 15546  010A14  B0E3               	btfsc	plusw1,0,c
 15547  010A16  D018               	goto	l11163
 15548  010A18                     u10560:
 15549                           
 15550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 15551  010A18  0E00               	movlw	0
 15552  010A1A  6E09               	movwf	(btemp+8)^0,c
 15553  010A1C  0E00               	movlw	0
 15554  010A1E  6E0A               	movwf	(btemp+9)^0,c
 15555  010A20  0E00               	movlw	0
 15556  010A22  6E0B               	movwf	(btemp+10)^0,c
 15557  010A24  0E00               	movlw	0
 15558  010A26  6E0C               	movwf	(btemp+11)^0,c
 15559                           
 15560                           ;stkvar	_l @ sp[(-56)+20]
 15561  010A28  0EDC               	movlw	-36
 15562  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15563  010A30  0EDD               	movlw	-35
 15564  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15565  010A38  0EDE               	movlw	-34
 15566  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15567  010A40  0EDF               	movlw	-33
 15568  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 15569  010A48                     l11163:
 15570                           
 15571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 15572                           ;stkvar	_l @ sp[(-56)+20]
 15573  010A48  0EDC               	movlw	-36
 15574  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 15575  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 15576  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 15577  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15578                           
 15579                           ;stkvar	_g @ sp[(-60)+16]
 15580  010A62  0ED4               	movlw	-44
 15581  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 15582  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 15583  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 15584  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 15585  010A7C  ECF6  F099         	call	___fladd	;wreg free
 15586                           
 15587                           ;stkvar	_h @ sp[(-56)+24]
 15588  010A80  0EE0               	movlw	-32
 15589  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 15590  010A88  0EE1               	movlw	-31
 15591  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15592  010A90  0EE2               	movlw	-30
 15593  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15594  010A98  0EE3               	movlw	-29
 15595  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 15596                           
 15597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 15598                           ;stkvar	_ou @ sp[(-56)+28]
 15599  010AA0  0EE4               	movlw	-28
 15600  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 15601  010AA8  0EE5               	movlw	-27
 15602  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15603  010AB0  0EE6               	movlw	-26
 15604  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15605  010AB8  0EE7               	movlw	-25
 15606  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15607                           
 15608                           ;stkvar	_u @ sp[(-56)+12]
 15609  010AC0  0ED4               	movlw	-44
 15610  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 15611  010AC8  0ED5               	movlw	-43
 15612  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15613  010AD0  0ED6               	movlw	-42
 15614  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15615  010AD8  0ED7               	movlw	-41
 15616  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15617                           
 15618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 15619                           ;stkvar	_nmode @ sp[(-56)+55]
 15620  010AE0  0EFF               	movlw	-1
 15621  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 15622  010AE8  0E65               	movlw	101
 15623  010AEA  1801               	xorwf	btemp^0,w,c
 15624  010AEC  B4D8               	btfsc	status,2,c
 15625  010AEE  D011               	goto	l11171
 15626                           
 15627                           ;stkvar	_e @ sp[(-56)+34]
 15628                           ;stkvar	_ne @ sp[(-56)+46]
 15629  010AF0  0EEA               	movlw	-22
 15630  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 15631  010AF8  0EF6               	movlw	-10
 15632  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 15633  010B00  0EEB               	movlw	-21
 15634  010B02  006F FF8C  F001    	movff	plusw1,btemp
 15635  010B08  0EF7               	movlw	-9
 15636  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 15637  010B10  D004               	goto	l2113
 15638  010B12                     l11171:
 15639                           
 15640                           ;stkvar	_ne @ sp[(-56)+46]
 15641  010B12  0EF6               	movlw	-10
 15642  010B14  6AE3               	clrf	plusw1,c
 15643  010B16  0EF7               	movlw	-9
 15644  010B18  6AE3               	clrf	plusw1,c
 15645  010B1A                     l2113:
 15646                           
 15647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 15648                           ;stkvar	_pp @ sp[(-56)+50]
 15649  010B1A  0EFA               	movlw	-6
 15650  010B1C  6AE3               	clrf	plusw1,c
 15651  010B1E  0EFB               	movlw	-5
 15652  010B20  6AE3               	clrf	plusw1,c
 15653                           
 15654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 15655                           ;stkvar	_t @ sp[(-56)+52]
 15656  010B22  0EFC               	movlw	-4
 15657  010B24  6AE3               	clrf	plusw1,c
 15658  010B26  0EFD               	movlw	-3
 15659  010B28  6AE3               	clrf	plusw1,c
 15660                           
 15661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 15662                           ;stkvar	_i @ sp[(-56)+36]
 15663  010B2A  0EEC               	movlw	-20
 15664  010B2C  6AE3               	clrf	plusw1,c
 15665  010B2E  0EED               	movlw	-19
 15666  010B30  6AE3               	clrf	plusw1,c
 15667                           
 15668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15669  010B32  D1B7               	goto	l11223
 15670  010B34                     l11173:
 15671                           
 15672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 15673                           ;stkvar	_u @ sp[(-56)+12]
 15674  010B34  0ED4               	movlw	-44
 15675  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 15676  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15677  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 15678  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 15679                           
 15680                           ;stkvar	_h @ sp[(-60)+24]
 15681  010B4E  0EDC               	movlw	-36
 15682  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 15683  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15684  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15685  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 15686  010B68  EC17  F0A1         	call	___fldiv	;wreg free
 15687  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 15688  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15689  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15690  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 15691  010B84  EC47  F0AA         	call	_floorf	;wreg free
 15692                           
 15693                           ;stkvar	_l @ sp[(-56)+20]
 15694  010B88  0EDC               	movlw	-36
 15695  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 15696  010B90  0EDD               	movlw	-35
 15697  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15698  010B98  0EDE               	movlw	-34
 15699  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15700  010BA0  0EDF               	movlw	-33
 15701  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 15702                           
 15703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 15704                           ;stkvar	_l @ sp[(-56)+20]
 15705  010BA8  0EDC               	movlw	-36
 15706  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 15707  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15708  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15709  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 15710  010BC2  EC05  F0BC         	call	___fltol	;wreg free
 15711  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 15712  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 15713                           
 15714                           ;stkvar	_d @ sp[(-56)+44]
 15715  010BD2  0EF4               	movlw	-12
 15716  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15717  010BDA  0EF5               	movlw	-11
 15718  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15719                           
 15720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 15721  010BE2  B825               	btfsc	_flags^0,4,c
 15722  010BE4  D026               	goto	l11187
 15723                           
 15724                           ;stkvar	_d @ sp[(-56)+44]
 15725  010BE6  0EF4               	movlw	-12
 15726  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 15727  010BEE  0EF5               	movlw	-11
 15728  010BF0  50E3               	movf	plusw1,w,c
 15729  010BF2  1001               	iorwf	btemp^0,w,c
 15730  010BF4  A4D8               	btfss	status,2,c
 15731  010BF6  D01D               	goto	l11187
 15732                           
 15733                           ;stkvar	_mode @ sp[(-56)+54]
 15734  010BF8  0EFE               	movlw	-2
 15735  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 15736  010C00  0E67               	movlw	103
 15737  010C02  1801               	xorwf	btemp^0,w,c
 15738  010C04  A4D8               	btfss	status,2,c
 15739  010C06  D015               	goto	l11187
 15740                           
 15741                           ;stkvar	_ne @ sp[(-56)+46]
 15742  010C08  0EF7               	movlw	-9
 15743  010C0A  AEE3               	btfss	plusw1,7,c
 15744  010C0C  D012               	goto	l11187
 15745                           
 15746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 15747                           ;stkvar	_t @ sp[(-56)+52]
 15748  010C0E  0EFC               	movlw	-4
 15749  010C10  50E3               	movf	plusw1,w,c
 15750  010C12  0F01               	addlw	1
 15751  010C14  6E01               	movwf	btemp^0,c
 15752  010C16  0EFC               	movlw	-4
 15753  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 15754  010C1E  6A01               	clrf	btemp^0,c
 15755  010C20  0EFD               	movlw	-3
 15756  010C22  50E3               	movf	plusw1,w,c
 15757  010C24  2001               	addwfc	btemp^0,w,c
 15758  010C26  6E01               	movwf	btemp^0,c
 15759  010C28  0EFD               	movlw	-3
 15760  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 15761                           
 15762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 15763  010C30  D0AF               	goto	l11215
 15764  010C32                     l11187:
 15765                           
 15766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 15767                           ;stkvar	_pp @ sp[(-56)+50]
 15768  010C32  0EFA               	movlw	-6
 15769  010C34  006F FF8C  F001    	movff	plusw1,btemp
 15770  010C3A  0EFB               	movlw	-5
 15771  010C3C  50E3               	movf	plusw1,w,c
 15772  010C3E  1001               	iorwf	btemp^0,w,c
 15773  010C40  A4D8               	btfss	status,2,c
 15774  010C42  D070               	goto	l11207
 15775                           
 15776                           ;stkvar	_ne @ sp[(-56)+46]
 15777  010C44  0EF7               	movlw	-9
 15778  010C46  AEE3               	btfss	plusw1,7,c
 15779  010C48  D06D               	goto	l11207
 15780                           
 15781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 15782                           ;stkvar	_n @ sp[(-56)+32]
 15783  010C4A  0EE8               	movlw	-24
 15784  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15785  010C52  0EE9               	movlw	-23
 15786  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 15787  010C5A  0E94               	movlw	low _dbuf
 15788  010C5C  240B               	addwf	(btemp+10)^0,w,c
 15789  010C5E  6ED9               	movwf	fsr2l,c
 15790  010C60  0E03               	movlw	high _dbuf
 15791  010C62  200C               	addwfc	(btemp+11)^0,w,c
 15792  010C64  6EDA               	movwf	fsr2h,c
 15793  010C66  0E2E               	movlw	46
 15794  010C68  6EDF               	movwf	indf2,c
 15795                           
 15796                           ;stkvar	_n @ sp[(-56)+32]
 15797  010C6A  0EE8               	movlw	-24
 15798  010C6C  50E3               	movf	plusw1,w,c
 15799  010C6E  0F01               	addlw	1
 15800  010C70  6E01               	movwf	btemp^0,c
 15801  010C72  0EE8               	movlw	-24
 15802  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 15803  010C7A  6A01               	clrf	btemp^0,c
 15804  010C7C  0EE9               	movlw	-23
 15805  010C7E  50E3               	movf	plusw1,w,c
 15806  010C80  2001               	addwfc	btemp^0,w,c
 15807  010C82  6E01               	movwf	btemp^0,c
 15808  010C84  0EE9               	movlw	-23
 15809  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 15810                           
 15811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 15812                           ;stkvar	_w @ sp[(-56)+38]
 15813  010C8C  50E1               	movf	fsr1l,w,c
 15814  010C8E  0FEE               	addlw	-18
 15815  010C90  6ED9               	movwf	fsr2l,c
 15816  010C92  50E2               	movf	fsr1h,w,c
 15817  010C94  6EDA               	movwf	fsr2h,c
 15818  010C96  0EFF               	movlw	255
 15819  010C98  22DA               	addwfc	fsr2h,f,c
 15820  010C9A  06DE               	decf	postinc2,f,c
 15821  010C9C  0E00               	movlw	0
 15822  010C9E  5ADD               	subwfb	postdec2,f,c
 15823                           
 15824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 15825  010CA0  0E01               	movlw	1
 15826  010CA2  6E0B               	movwf	(btemp+10)^0,c
 15827  010CA4  0E00               	movlw	0
 15828  010CA6  6E0C               	movwf	(btemp+11)^0,c
 15829                           
 15830                           ;stkvar	_pp @ sp[(-56)+50]
 15831  010CA8  0EFA               	movlw	-6
 15832  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15833  010CB0  0EFB               	movlw	-5
 15834  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15835  010CB8  D035               	goto	l11207
 15836  010CBA                     l11199:
 15837                           
 15838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 15839                           ;stkvar	_n @ sp[(-56)+32]
 15840  010CBA  0EE8               	movlw	-24
 15841  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15842  010CC2  0EE9               	movlw	-23
 15843  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15844  010CCA  0E94               	movlw	low _dbuf
 15845  010CCC  240B               	addwf	(btemp+10)^0,w,c
 15846  010CCE  6ED9               	movwf	fsr2l,c
 15847  010CD0  0E03               	movlw	high _dbuf
 15848  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 15849  010CD4  6EDA               	movwf	fsr2h,c
 15850  010CD6  0E30               	movlw	48
 15851  010CD8  6EDF               	movwf	indf2,c
 15852                           
 15853                           ;stkvar	_n @ sp[(-56)+32]
 15854  010CDA  0EE8               	movlw	-24
 15855  010CDC  50E3               	movf	plusw1,w,c
 15856  010CDE  0F01               	addlw	1
 15857  010CE0  6E01               	movwf	btemp^0,c
 15858  010CE2  0EE8               	movlw	-24
 15859  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 15860  010CEA  6A01               	clrf	btemp^0,c
 15861  010CEC  0EE9               	movlw	-23
 15862  010CEE  50E3               	movf	plusw1,w,c
 15863  010CF0  2001               	addwfc	btemp^0,w,c
 15864  010CF2  6E01               	movwf	btemp^0,c
 15865  010CF4  0EE9               	movlw	-23
 15866  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 15867                           
 15868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 15869                           ;stkvar	_w @ sp[(-56)+38]
 15870  010CFC  50E1               	movf	fsr1l,w,c
 15871  010CFE  0FEE               	addlw	-18
 15872  010D00  6ED9               	movwf	fsr2l,c
 15873  010D02  50E2               	movf	fsr1h,w,c
 15874  010D04  6EDA               	movwf	fsr2h,c
 15875  010D06  0EFF               	movlw	255
 15876  010D08  22DA               	addwfc	fsr2h,f,c
 15877  010D0A  06DE               	decf	postinc2,f,c
 15878  010D0C  0E00               	movlw	0
 15879  010D0E  5ADD               	subwfb	postdec2,f,c
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 15882                           ;stkvar	_t @ sp[(-56)+52]
 15883  010D10  50E1               	movf	fsr1l,w,c
 15884  010D12  0FFC               	addlw	-4
 15885  010D14  6ED9               	movwf	fsr2l,c
 15886  010D16  50E2               	movf	fsr1h,w,c
 15887  010D18  6EDA               	movwf	fsr2h,c
 15888  010D1A  0EFF               	movlw	255
 15889  010D1C  22DA               	addwfc	fsr2h,f,c
 15890  010D1E  06DE               	decf	postinc2,f,c
 15891  010D20  0E00               	movlw	0
 15892  010D22  5ADD               	subwfb	postdec2,f,c
 15893  010D24                     l11207:
 15894                           
 15895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 15896                           ;stkvar	_t @ sp[(-56)+52]
 15897  010D24  0EFC               	movlw	-4
 15898  010D26  006F FF8C  F001    	movff	plusw1,btemp
 15899  010D2C  0EFD               	movlw	-3
 15900  010D2E  50E3               	movf	plusw1,w,c
 15901  010D30  1001               	iorwf	btemp^0,w,c
 15902  010D32  A4D8               	btfss	status,2,c
 15903  010D34  D7C2               	goto	l11199
 15904                           
 15905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 15906                           ;stkvar	_n @ sp[(-56)+32]
 15907  010D36  0EE8               	movlw	-24
 15908  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 15909  010D3E  0EE9               	movlw	-23
 15910  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 15911  010D46  0E94               	movlw	low _dbuf
 15912  010D48  240B               	addwf	(btemp+10)^0,w,c
 15913  010D4A  6ED9               	movwf	fsr2l,c
 15914  010D4C  0E03               	movlw	high _dbuf
 15915  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 15916  010D50  6EDA               	movwf	fsr2h,c
 15917                           
 15918                           ;stkvar	_d @ sp[(-56)+44]
 15919  010D52  0EF4               	movlw	-12
 15920  010D54  50E3               	movf	plusw1,w,c
 15921  010D56  0F30               	addlw	48
 15922  010D58  6EDF               	movwf	indf2,c
 15923                           
 15924                           ;stkvar	_n @ sp[(-56)+32]
 15925  010D5A  0EE8               	movlw	-24
 15926  010D5C  50E3               	movf	plusw1,w,c
 15927  010D5E  0F01               	addlw	1
 15928  010D60  6E01               	movwf	btemp^0,c
 15929  010D62  0EE8               	movlw	-24
 15930  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 15931  010D6A  6A01               	clrf	btemp^0,c
 15932  010D6C  0EE9               	movlw	-23
 15933  010D6E  50E3               	movf	plusw1,w,c
 15934  010D70  2001               	addwfc	btemp^0,w,c
 15935  010D72  6E01               	movwf	btemp^0,c
 15936  010D74  0EE9               	movlw	-23
 15937  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 15938                           
 15939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 15940                           ;stkvar	_w @ sp[(-56)+38]
 15941  010D7C  50E1               	movf	fsr1l,w,c
 15942  010D7E  0FEE               	addlw	-18
 15943  010D80  6ED9               	movwf	fsr2l,c
 15944  010D82  50E2               	movf	fsr1h,w,c
 15945  010D84  6EDA               	movwf	fsr2h,c
 15946  010D86  0EFF               	movlw	255
 15947  010D88  22DA               	addwfc	fsr2h,f,c
 15948  010D8A  06DE               	decf	postinc2,f,c
 15949  010D8C  0E00               	movlw	0
 15950  010D8E  5ADD               	subwfb	postdec2,f,c
 15951  010D90                     l11215:
 15952                           
 15953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 15954                           ;stkvar	_u @ sp[(-56)+12]
 15955  010D90  0ED4               	movlw	-44
 15956  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 15957  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 15958  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15959  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15960                           
 15961                           ;stkvar	_l @ sp[(-60)+20]
 15962  010DAA  0ED8               	movlw	-40
 15963  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 15964  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 15965  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 15966  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 15967  010DC4  ECE1  F095         	call	___flmul	;wreg free
 15968  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 15969  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15970  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15971  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 15972                           
 15973                           ;stkvar	_h @ sp[(-60)+24]
 15974  010DE0  0EDC               	movlw	-36
 15975  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 15976  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 15977  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 15978  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 15979  010DFA  EC61  F0CE         	call	___flsub	;wreg free
 15980                           
 15981                           ;stkvar	_h @ sp[(-56)+24]
 15982  010DFE  0EE0               	movlw	-32
 15983  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 15984  010E06  0EE1               	movlw	-31
 15985  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15986  010E0E  0EE2               	movlw	-30
 15987  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15988  010E16  0EE3               	movlw	-29
 15989  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 15990                           
 15991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 15992  010E1E  0E00               	movlw	0
 15993  010E20  6EE6               	movwf	postinc1,c
 15994  010E22  0E00               	movlw	0
 15995  010E24  6EE6               	movwf	postinc1,c
 15996  010E26  0E20               	movlw	32
 15997  010E28  6EE6               	movwf	postinc1,c
 15998  010E2A  0E41               	movlw	65
 15999  010E2C  6EE6               	movwf	postinc1,c
 16000                           
 16001                           ;stkvar	_u @ sp[(-60)+12]
 16002  010E2E  0ED0               	movlw	-48
 16003  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16004  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16005  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16006  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16007  010E48  EC17  F0A1         	call	___fldiv	;wreg free
 16008                           
 16009                           ;stkvar	_u @ sp[(-56)+12]
 16010  010E4C  0ED4               	movlw	-44
 16011  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 16012  010E54  0ED5               	movlw	-43
 16013  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16014  010E5C  0ED6               	movlw	-42
 16015  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16016  010E64  0ED7               	movlw	-41
 16017  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 16018                           
 16019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16020                           ;stkvar	_ne @ sp[(-56)+46]
 16021  010E6C  50E1               	movf	fsr1l,w,c
 16022  010E6E  0FF6               	addlw	-10
 16023  010E70  6ED9               	movwf	fsr2l,c
 16024  010E72  50E2               	movf	fsr1h,w,c
 16025  010E74  6EDA               	movwf	fsr2h,c
 16026  010E76  0EFF               	movlw	255
 16027  010E78  22DA               	addwfc	fsr2h,f,c
 16028  010E7A  06DE               	decf	postinc2,f,c
 16029  010E7C  0E00               	movlw	0
 16030  010E7E  5ADD               	subwfb	postdec2,f,c
 16031                           
 16032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16033                           ;stkvar	_i @ sp[(-56)+36]
 16034  010E80  0EEC               	movlw	-20
 16035  010E82  50E3               	movf	plusw1,w,c
 16036  010E84  0F01               	addlw	1
 16037  010E86  6E01               	movwf	btemp^0,c
 16038  010E88  0EEC               	movlw	-20
 16039  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 16040  010E90  6A01               	clrf	btemp^0,c
 16041  010E92  0EED               	movlw	-19
 16042  010E94  50E3               	movf	plusw1,w,c
 16043  010E96  2001               	addwfc	btemp^0,w,c
 16044  010E98  6E01               	movwf	btemp^0,c
 16045  010E9A  0EED               	movlw	-19
 16046  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 16047  010EA2                     l11223:
 16048                           
 16049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16050                           ;stkvar	_m @ sp[(-56)+48]
 16051                           ;stkvar	_i @ sp[(-56)+36]
 16052  010EA2  50E1               	movf	fsr1l,w,c
 16053  010EA4  0FEC               	addlw	-20
 16054  010EA6  6ED9               	movwf	fsr2l,c
 16055  010EA8  50E2               	movf	fsr1h,w,c
 16056  010EAA  6EDA               	movwf	fsr2h,c
 16057  010EAC  0EFF               	movlw	255
 16058  010EAE  22DA               	addwfc	fsr2h,f,c
 16059  010EB0  0EF8               	movlw	-8
 16060  010EB2  50E3               	movf	plusw1,w,c
 16061  010EB4  5CDE               	subwf	postinc2,w,c
 16062  010EB6  50DE               	movf	postinc2,w,c
 16063  010EB8  0A80               	xorlw	128
 16064  010EBA  6E01               	movwf	btemp^0,c
 16065  010EBC  0EF9               	movlw	-7
 16066  010EBE  50E3               	movf	plusw1,w,c
 16067  010EC0  0A80               	xorlw	128
 16068  010EC2  5801               	subwfb	btemp^0,w,c
 16069  010EC4  B0D8               	btfsc	status,0,c
 16070  010EC6  D00E               	goto	u10660
 16071                           
 16072                           ;stkvar	_n @ sp[(-56)+32]
 16073  010EC8  0EE9               	movlw	-23
 16074  010ECA  BEE3               	btfsc	plusw1,7,c
 16075  010ECC  D633               	goto	l11173
 16076  010ECE  0EE9               	movlw	-23
 16077  010ED0  50E3               	movf	plusw1,w,c
 16078  010ED2  E108               	bnz	u10660
 16079  010ED4  0EE8               	movlw	-24
 16080  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 16081  010EDC  0E4B               	movlw	75
 16082  010EDE  5E01               	subwf	btemp^0,f,c
 16083  010EE0  A0D8               	btfss	status,0,c
 16084  010EE2  D628               	goto	l11173
 16085  010EE4                     u10660:
 16086                           
 16087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16088                           ;stkvar	_pp @ sp[(-56)+50]
 16089  010EE4  0EFA               	movlw	-6
 16090  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 16091  010EEC  0EFB               	movlw	-5
 16092  010EEE  50E3               	movf	plusw1,w,c
 16093  010EF0  1001               	iorwf	btemp^0,w,c
 16094  010EF2  B4D8               	btfsc	status,2,c
 16095  010EF4  A825               	btfss	_flags^0,4,c
 16096  010EF6  D021               	goto	l11235
 16097                           
 16098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16099                           ;stkvar	_n @ sp[(-56)+32]
 16100  010EF8  0EE8               	movlw	-24
 16101  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16102  010F00  0EE9               	movlw	-23
 16103  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16104  010F08  0E94               	movlw	low _dbuf
 16105  010F0A  240B               	addwf	(btemp+10)^0,w,c
 16106  010F0C  6ED9               	movwf	fsr2l,c
 16107  010F0E  0E03               	movlw	high _dbuf
 16108  010F10  200C               	addwfc	(btemp+11)^0,w,c
 16109  010F12  6EDA               	movwf	fsr2h,c
 16110  010F14  0E2E               	movlw	46
 16111  010F16  6EDF               	movwf	indf2,c
 16112                           
 16113                           ;stkvar	_n @ sp[(-56)+32]
 16114  010F18  0EE8               	movlw	-24
 16115  010F1A  50E3               	movf	plusw1,w,c
 16116  010F1C  0F01               	addlw	1
 16117  010F1E  6E01               	movwf	btemp^0,c
 16118  010F20  0EE8               	movlw	-24
 16119  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 16120  010F28  6A01               	clrf	btemp^0,c
 16121  010F2A  0EE9               	movlw	-23
 16122  010F2C  50E3               	movf	plusw1,w,c
 16123  010F2E  2001               	addwfc	btemp^0,w,c
 16124  010F30  6E01               	movwf	btemp^0,c
 16125  010F32  0EE9               	movlw	-23
 16126  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 16127  010F3A                     l11235:
 16128                           
 16129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16130                           ;stkvar	_n @ sp[(-56)+32]
 16131  010F3A  0EE8               	movlw	-24
 16132  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16133  010F42  0EE9               	movlw	-23
 16134  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 16135  010F4A  0E94               	movlw	low _dbuf
 16136  010F4C  240B               	addwf	(btemp+10)^0,w,c
 16137  010F4E  6ED9               	movwf	fsr2l,c
 16138  010F50  0E03               	movlw	high _dbuf
 16139  010F52  200C               	addwfc	(btemp+11)^0,w,c
 16140  010F54  6EDA               	movwf	fsr2h,c
 16141  010F56  0E00               	movlw	0
 16142  010F58  6EDF               	movwf	indf2,c
 16143                           
 16144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16145                           ;stkvar	_nmode @ sp[(-56)+55]
 16146  010F5A  0EFF               	movlw	-1
 16147  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 16148  010F62  0E65               	movlw	101
 16149  010F64  1801               	xorwf	btemp^0,w,c
 16150  010F66  A4D8               	btfss	status,2,c
 16151  010F68  EF16  F081         	goto	l11039
 16152                           
 16153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16154  010F6C  0E4F               	movlw	79
 16155  010F6E  6E0B               	movwf	(btemp+10)^0,c
 16156  010F70  0E00               	movlw	0
 16157  010F72  6E0C               	movwf	(btemp+11)^0,c
 16158                           
 16159                           ;stkvar	_i @ sp[(-56)+36]
 16160  010F74  0EEC               	movlw	-20
 16161  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16162  010F7C  0EED               	movlw	-19
 16163  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16164                           
 16165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 16166                           ;stkvar	_i @ sp[(-56)+36]
 16167  010F84  0EEC               	movlw	-20
 16168  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 16169  010F8C  0EED               	movlw	-19
 16170  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16171  010F94  0E94               	movlw	low _dbuf
 16172  010F96  240B               	addwf	(btemp+10)^0,w,c
 16173  010F98  6ED9               	movwf	fsr2l,c
 16174  010F9A  0E03               	movlw	high _dbuf
 16175  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 16176  010F9E  6EDA               	movwf	fsr2h,c
 16177  010FA0  0E00               	movlw	0
 16178  010FA2  6EDF               	movwf	indf2,c
 16179                           
 16180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 16181                           ;stkvar	_sign @ sp[(-56)+42]
 16182  010FA4  0EF2               	movlw	-14
 16183  010FA6  6AE3               	clrf	plusw1,c
 16184  010FA8  0EF3               	movlw	-13
 16185  010FAA  6AE3               	clrf	plusw1,c
 16186                           
 16187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 16188                           ;stkvar	_e @ sp[(-56)+34]
 16189  010FAC  0EEB               	movlw	-21
 16190  010FAE  AEE3               	btfss	plusw1,7,c
 16191  010FB0  D012               	goto	l11249
 16192                           
 16193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 16194  010FB2  0E01               	movlw	1
 16195  010FB4  6E0B               	movwf	(btemp+10)^0,c
 16196  010FB6  0E00               	movlw	0
 16197  010FB8  6E0C               	movwf	(btemp+11)^0,c
 16198                           
 16199                           ;stkvar	_sign @ sp[(-56)+42]
 16200  010FBA  0EF2               	movlw	-14
 16201  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16202  010FC2  0EF3               	movlw	-13
 16203  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16204                           
 16205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 16206                           ;stkvar	_e @ sp[(-56)+34]
 16207                           ;stkvar	_e @ sp[(-56)+34]
 16208  010FCA  0EEA               	movlw	-22
 16209  010FCC  6CE3               	negf	plusw1,c
 16210  010FCE  0EEB               	movlw	-21
 16211  010FD0  1EE3               	comf	plusw1,f,c
 16212  010FD2  B0D8               	btfsc	status,0,c
 16213  010FD4  2AE3               	incf	plusw1,f,c
 16214  010FD6                     l11249:
 16215                           
 16216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 16217  010FD6  0E02               	movlw	2
 16218  010FD8  6E0B               	movwf	(btemp+10)^0,c
 16219  010FDA  0E00               	movlw	0
 16220  010FDC  6E0C               	movwf	(btemp+11)^0,c
 16221                           
 16222                           ;stkvar	_p @ sp[(-56)+40]
 16223  010FDE  0EF0               	movlw	-16
 16224  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16225  010FE6  0EF1               	movlw	-15
 16226  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16227                           
 16228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16229  010FEE  D051               	goto	l11261
 16230  010FF0                     l11251:
 16231                           
 16232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 16233                           ;stkvar	_i @ sp[(-56)+36]
 16234  010FF0  50E1               	movf	fsr1l,w,c
 16235  010FF2  0FEC               	addlw	-20
 16236  010FF4  6ED9               	movwf	fsr2l,c
 16237  010FF6  50E2               	movf	fsr1h,w,c
 16238  010FF8  6EDA               	movwf	fsr2h,c
 16239  010FFA  0EFF               	movlw	255
 16240  010FFC  22DA               	addwfc	fsr2h,f,c
 16241  010FFE  06DE               	decf	postinc2,f,c
 16242  011000  0E00               	movlw	0
 16243  011002  5ADD               	subwfb	postdec2,f,c
 16244                           
 16245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 16246                           ;stkvar	_i @ sp[(-56)+36]
 16247  011004  0EEC               	movlw	-20
 16248  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 16249  01100C  0EED               	movlw	-19
 16250  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16251  011014  0E94               	movlw	low _dbuf
 16252  011016  240B               	addwf	(btemp+10)^0,w,c
 16253  011018  6ED9               	movwf	fsr2l,c
 16254  01101A  0E03               	movlw	high _dbuf
 16255  01101C  200C               	addwfc	(btemp+11)^0,w,c
 16256  01101E  6EDA               	movwf	fsr2h,c
 16257  011020  0E0A               	movlw	10
 16258  011022  6EE6               	movwf	postinc1,c
 16259  011024  0E00               	movlw	0
 16260  011026  6EE6               	movwf	postinc1,c
 16261                           
 16262                           ;stkvar	_e @ sp[(-58)+34]
 16263  011028  0EE8               	movlw	-24
 16264  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 16265  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 16266  011036  ECDD  F0C1         	call	___awmod	;wreg free
 16267  01103A  5001               	movf	btemp^0,w,c
 16268  01103C  0F30               	addlw	48
 16269  01103E  6EDF               	movwf	indf2,c
 16270                           
 16271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 16272  011040  0E0A               	movlw	10
 16273  011042  6EE6               	movwf	postinc1,c
 16274  011044  0E00               	movlw	0
 16275  011046  6EE6               	movwf	postinc1,c
 16276                           
 16277                           ;stkvar	_e @ sp[(-58)+34]
 16278  011048  0EE8               	movlw	-24
 16279  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 16280  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 16281  011056  ECD9  F0BE         	call	___awdiv	;wreg free
 16282                           
 16283                           ;stkvar	_e @ sp[(-56)+34]
 16284  01105A  0EEA               	movlw	-22
 16285  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 16286  011062  0EEB               	movlw	-21
 16287  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16288                           
 16289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 16290                           ;stkvar	_p @ sp[(-56)+40]
 16291  01106A  50E1               	movf	fsr1l,w,c
 16292  01106C  0FF0               	addlw	-16
 16293  01106E  6ED9               	movwf	fsr2l,c
 16294  011070  50E2               	movf	fsr1h,w,c
 16295  011072  6EDA               	movwf	fsr2h,c
 16296  011074  0EFF               	movlw	255
 16297  011076  22DA               	addwfc	fsr2h,f,c
 16298  011078  06DE               	decf	postinc2,f,c
 16299  01107A  0E00               	movlw	0
 16300  01107C  5ADD               	subwfb	postdec2,f,c
 16301                           
 16302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 16303                           ;stkvar	_w @ sp[(-56)+38]
 16304  01107E  50E1               	movf	fsr1l,w,c
 16305  011080  0FEE               	addlw	-18
 16306  011082  6ED9               	movwf	fsr2l,c
 16307  011084  50E2               	movf	fsr1h,w,c
 16308  011086  6EDA               	movwf	fsr2h,c
 16309  011088  0EFF               	movlw	255
 16310  01108A  22DA               	addwfc	fsr2h,f,c
 16311  01108C  06DE               	decf	postinc2,f,c
 16312  01108E  0E00               	movlw	0
 16313  011090  5ADD               	subwfb	postdec2,f,c
 16314  011092                     l11261:
 16315                           
 16316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16317                           ;stkvar	_e @ sp[(-56)+34]
 16318  011092  0EEA               	movlw	-22
 16319  011094  006F FF8C  F001    	movff	plusw1,btemp
 16320  01109A  0EEB               	movlw	-21
 16321  01109C  50E3               	movf	plusw1,w,c
 16322  01109E  1001               	iorwf	btemp^0,w,c
 16323  0110A0  A4D8               	btfss	status,2,c
 16324  0110A2  D7A6               	goto	l11251
 16325                           
 16326                           ;stkvar	_p @ sp[(-56)+40]
 16327  0110A4  0EF1               	movlw	-15
 16328  0110A6  BEE3               	btfsc	plusw1,7,c
 16329  0110A8  D007               	goto	u10720
 16330  0110AA  0EF1               	movlw	-15
 16331  0110AC  50E3               	movf	plusw1,w,c
 16332  0110AE  E1A0               	bnz	l11251
 16333  0110B0  0EF0               	movlw	-16
 16334  0110B2  04E3               	decf	plusw1,w,c
 16335  0110B4  B0D8               	btfsc	status,0,c
 16336  0110B6  D79C               	goto	l11251
 16337  0110B8                     u10720:
 16338                           
 16339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 16340                           ;stkvar	_i @ sp[(-56)+36]
 16341  0110B8  50E1               	movf	fsr1l,w,c
 16342  0110BA  0FEC               	addlw	-20
 16343  0110BC  6ED9               	movwf	fsr2l,c
 16344  0110BE  50E2               	movf	fsr1h,w,c
 16345  0110C0  6EDA               	movwf	fsr2h,c
 16346  0110C2  0EFF               	movlw	255
 16347  0110C4  22DA               	addwfc	fsr2h,f,c
 16348  0110C6  06DE               	decf	postinc2,f,c
 16349  0110C8  0E00               	movlw	0
 16350  0110CA  5ADD               	subwfb	postdec2,f,c
 16351                           
 16352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 16353                           ;stkvar	_sign @ sp[(-56)+42]
 16354  0110CC  0EF2               	movlw	-14
 16355  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 16356  0110D4  0EF3               	movlw	-13
 16357  0110D6  50E3               	movf	plusw1,w,c
 16358  0110D8  1001               	iorwf	btemp^0,w,c
 16359  0110DA  A4D8               	btfss	status,2,c
 16360  0110DC  D002               	goto	l11271
 16361  0110DE  0E2B               	movlw	43
 16362  0110E0  D001               	goto	L15
 16363  0110E2                     l11271:
 16364  0110E2  0E2D               	movlw	45
 16365  0110E4                     L15:
 16366  0110E4  6E0B               	movwf	(btemp+10)^0,c
 16367  0110E6  0E00               	movlw	0
 16368  0110E8  6E0C               	movwf	(btemp+11)^0,c
 16369                           
 16370                           ;stkvar	_efgtoa$5206 @ sp[(-56)+4]
 16371  0110EA  0ECC               	movlw	-52
 16372  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16373  0110F2  0ECD               	movlw	-51
 16374  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16375                           
 16376                           ;stkvar	_efgtoa$5206 @ sp[(-56)+4]
 16377                           ;stkvar	_i @ sp[(-56)+36]
 16378  0110FA  0EEC               	movlw	-20
 16379  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16380  011102  0EED               	movlw	-19
 16381  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 16382  01110A  0E94               	movlw	low _dbuf
 16383  01110C  240B               	addwf	(btemp+10)^0,w,c
 16384  01110E  6ED9               	movwf	fsr2l,c
 16385  011110  0E03               	movlw	high _dbuf
 16386  011112  200C               	addwfc	(btemp+11)^0,w,c
 16387  011114  6EDA               	movwf	fsr2h,c
 16388  011116  0ECC               	movlw	-52
 16389  011118  006F FF8F FFDF     	movff	plusw1,indf2
 16390                           
 16391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 16392                           ;stkvar	_w @ sp[(-56)+38]
 16393  01111E  50E1               	movf	fsr1l,w,c
 16394  011120  0FEE               	addlw	-18
 16395  011122  6ED9               	movwf	fsr2l,c
 16396  011124  50E2               	movf	fsr1h,w,c
 16397  011126  6EDA               	movwf	fsr2h,c
 16398  011128  0EFF               	movlw	255
 16399  01112A  22DA               	addwfc	fsr2h,f,c
 16400  01112C  06DE               	decf	postinc2,f,c
 16401  01112E  0E00               	movlw	0
 16402  011130  5ADD               	subwfb	postdec2,f,c
 16403                           
 16404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16405                           ;stkvar	_i @ sp[(-56)+36]
 16406  011132  50E1               	movf	fsr1l,w,c
 16407  011134  0FEC               	addlw	-20
 16408  011136  6ED9               	movwf	fsr2l,c
 16409  011138  50E2               	movf	fsr1h,w,c
 16410  01113A  6EDA               	movwf	fsr2h,c
 16411  01113C  0EFF               	movlw	255
 16412  01113E  22DA               	addwfc	fsr2h,f,c
 16413  011140  06DE               	decf	postinc2,f,c
 16414  011142  0E00               	movlw	0
 16415  011144  5ADD               	subwfb	postdec2,f,c
 16416  011146  0EBF               	movlw	191
 16417  011148  6E0B               	movwf	(btemp+10)^0,c
 16418  01114A  0EFF               	movlw	255
 16419  01114C  6E0C               	movwf	(btemp+11)^0,c
 16420                           
 16421                           ;stkvar	_c @ sp[(-56)+-7]
 16422  01114E  0EC1               	movlw	-63
 16423  011150  50E3               	movf	plusw1,w,c
 16424  011152  6E09               	movwf	(btemp+8)^0,c
 16425  011154  6A0A               	clrf	(btemp+9)^0,c
 16426  011156  500B               	movf	(btemp+10)^0,w,c
 16427  011158  2609               	addwf	(btemp+8)^0,f,c
 16428  01115A  500C               	movf	(btemp+11)^0,w,c
 16429  01115C  220A               	addwfc	(btemp+9)^0,f,c
 16430  01115E  500A               	movf	(btemp+9)^0,w,c
 16431  011160  E106               	bnz	u10740
 16432  011162  0E1A               	movlw	26
 16433  011164  5C09               	subwf	(btemp+8)^0,w,c
 16434  011166  B0D8               	btfsc	status,0,c
 16435  011168  D002               	goto	u10740
 16436  01116A  0E01               	movlw	1
 16437  01116C  D001               	goto	u10750
 16438  01116E                     u10740:
 16439  01116E  0E00               	movlw	0
 16440  011170                     u10750:
 16441  011170  6E0B               	movwf	(btemp+10)^0,c
 16442  011172  6A0C               	clrf	(btemp+11)^0,c
 16443                           
 16444                           ;stkvar	_efgtoa$5208 @ sp[(-56)+0]
 16445  011174  0EC8               	movlw	-56
 16446  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16447  01117C  0EC9               	movlw	-55
 16448  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16449                           
 16450                           ;stkvar	_efgtoa$5208 @ sp[(-56)+0]
 16451  011184  0EC8               	movlw	-56
 16452  011186  006F FF8C  F001    	movff	plusw1,btemp
 16453  01118C  0EC9               	movlw	-55
 16454  01118E  50E3               	movf	plusw1,w,c
 16455  011190  1001               	iorwf	btemp^0,w,c
 16456  011192  A4D8               	btfss	status,2,c
 16457  011194  D002               	goto	l11287
 16458  011196  0E65               	movlw	101
 16459  011198  D001               	goto	L16
 16460  01119A                     l11287:
 16461  01119A  0E45               	movlw	69
 16462  01119C                     L16:
 16463  01119C  6E0B               	movwf	(btemp+10)^0,c
 16464  01119E  0E00               	movlw	0
 16465  0111A0  6E0C               	movwf	(btemp+11)^0,c
 16466                           
 16467                           ;stkvar	_efgtoa$5207 @ sp[(-56)+2]
 16468  0111A2  0ECA               	movlw	-54
 16469  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16470  0111AA  0ECB               	movlw	-53
 16471  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16472                           
 16473                           ;stkvar	_efgtoa$5207 @ sp[(-56)+2]
 16474                           ;stkvar	_i @ sp[(-56)+36]
 16475  0111B2  0EEC               	movlw	-20
 16476  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16477  0111BA  0EED               	movlw	-19
 16478  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16479  0111C2  0E94               	movlw	low _dbuf
 16480  0111C4  240B               	addwf	(btemp+10)^0,w,c
 16481  0111C6  6ED9               	movwf	fsr2l,c
 16482  0111C8  0E03               	movlw	high _dbuf
 16483  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 16484  0111CC  6EDA               	movwf	fsr2h,c
 16485  0111CE  0ECA               	movlw	-54
 16486  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 16487                           
 16488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 16489                           ;stkvar	_w @ sp[(-56)+38]
 16490  0111D6  50E1               	movf	fsr1l,w,c
 16491  0111D8  0FEE               	addlw	-18
 16492  0111DA  6ED9               	movwf	fsr2l,c
 16493  0111DC  50E2               	movf	fsr1h,w,c
 16494  0111DE  6EDA               	movwf	fsr2h,c
 16495  0111E0  0EFF               	movlw	255
 16496  0111E2  22DA               	addwfc	fsr2h,f,c
 16497  0111E4  06DE               	decf	postinc2,f,c
 16498  0111E6  0E00               	movlw	0
 16499  0111E8  5ADD               	subwfb	postdec2,f,c
 16500                           
 16501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 16502                           ;stkvar	_i @ sp[(-56)+36]
 16503  0111EA  0EEC               	movlw	-20
 16504  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16505  0111F2  0EED               	movlw	-19
 16506  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16507  0111FA  0E94               	movlw	low _dbuf
 16508  0111FC  240B               	addwf	(btemp+10)^0,w,c
 16509  0111FE  6E09               	movwf	(btemp+8)^0,c
 16510  011200  0E03               	movlw	high _dbuf
 16511  011202  200C               	addwfc	(btemp+11)^0,w,c
 16512  011204  6E0A               	movwf	(btemp+9)^0,c
 16513  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 16514  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 16515                           
 16516                           ;stkvar	_n @ sp[(-58)+32]
 16517  011212  0E94               	movlw	low _dbuf
 16518  011214  6E0B               	movwf	(btemp+10)^0,c
 16519  011216  0E03               	movlw	high _dbuf
 16520  011218  6E0C               	movwf	(btemp+11)^0,c
 16521  01121A  0EE6               	movlw	-26
 16522  01121C  50E3               	movf	plusw1,w,c
 16523  01121E  260B               	addwf	(btemp+10)^0,f,c
 16524  011220  0EE7               	movlw	-25
 16525  011222  50E3               	movf	plusw1,w,c
 16526  011224  220C               	addwfc	(btemp+11)^0,f,c
 16527  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16528  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16529  011232  ECEA  F0C5         	call	_strcpy	;wreg free
 16530  011236  EF16  F081         	goto	l11039
 16531  01123A                     l2069:
 16532                           
 16533                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 16534  01123A  0EC1               	movlw	193
 16535  01123C  26E1               	addwf	fsr1l,f,c
 16536  01123E  0EFF               	movlw	255
 16537  011240  22E2               	addwfc	fsr1h,f,c
 16538  011242  0012               	return		;funcret
 16539  011244                     __end_of_efgtoa:
 16540                           	opt callstack 0
 16541                           
 16542 ;; *************** function _tolower *****************
 16543 ;; Defined at:
 16544 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 16545 ;; Parameters:    Size  Location     Type
 16546 ;;  c               2  [STACK] int 
 16547 ;; Auto vars:     Size  Location     Type
 16548 ;;		None
 16549 ;; Return value:  Size  Location     Type
 16550 ;;                  2  [STACK] int 
 16551 ;; Registers used:
 16552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16553 ;; Tracked objects:
 16554 ;;		On entry : 0/0
 16555 ;;		On exit  : 0/0
 16556 ;;		Unchanged: 0/0
 16557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16562 ;;Total ram usage:        0 bytes
 16563 ;; Hardware stack levels used:    1
 16564 ;; Hardware stack levels required when called:   16
 16565 ;; This function calls:
 16566 ;;		_isupper
 16567 ;; This function is called by:
 16568 ;;		_efgtoa
 16569 ;;		_vfpfcnvrt
 16570 ;; This function uses a reentrant model
 16571 ;;
 16572                           
 16573                           	psect	text56
 16574  019568                     __ptext56:
 16575                           	opt callstack 0
 16576  019568                     _tolower:
 16577                           	opt callstack 0
 16578                           
 16579                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16580  019568  52E6               	movf	postinc1,f,c
 16581  01956A  52E6               	movf	postinc1,f,c
 16582                           
 16583                           ;stkvar	_c @ sp[(-2)+-2]
 16584                           
 16585                           ;incstack = 0
 16586 ;; hardware stack exceeded
 16587  01956C  0EFC               	movlw	-4
 16588  01956E  50E3               	movf	plusw1,w,c
 16589  019570  0FBF               	addlw	191
 16590  019572  6E0B               	movwf	(btemp+10)^0,c
 16591  019574  0EFD               	movlw	-3
 16592  019576  006F FF8C  F00C    	movff	plusw1,btemp+11
 16593  01957C  0EFF               	movlw	255
 16594  01957E  220C               	addwfc	(btemp+11)^0,f,c
 16595  019580  500C               	movf	(btemp+11)^0,w,c
 16596  019582  E106               	bnz	u5630
 16597  019584  0E1A               	movlw	26
 16598  019586  5C0B               	subwf	(btemp+10)^0,w,c
 16599  019588  B0D8               	btfsc	status,0,c
 16600  01958A  D002               	goto	u5630
 16601  01958C  0E01               	movlw	1
 16602  01958E  D001               	goto	u5640
 16603  019590                     u5630:
 16604  019590  0E00               	movlw	0
 16605  019592                     u5640:
 16606  019592  6E0B               	movwf	(btemp+10)^0,c
 16607  019594  6A0C               	clrf	(btemp+11)^0,c
 16608                           
 16609                           ;stkvar	_tolower$6020 @ sp[(-2)+0]
 16610  019596  0EFE               	movlw	-2
 16611  019598  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16612  01959E  0EFF               	movlw	-1
 16613  0195A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 16614                           
 16615                           ;stkvar	_tolower$6020 @ sp[(-2)+0]
 16616  0195A6  0EFE               	movlw	-2
 16617  0195A8  006F FF8C  F001    	movff	plusw1,btemp
 16618  0195AE  0EFF               	movlw	-1
 16619  0195B0  50E3               	movf	plusw1,w,c
 16620  0195B2  1001               	iorwf	btemp^0,w,c
 16621  0195B4  B4D8               	btfsc	status,2,c
 16622  0195B6  D00D               	goto	l7431
 16623                           
 16624                           ;stkvar	_c @ sp[(-2)+-2]
 16625  0195B8  0EFC               	movlw	-4
 16626  0195BA  006F FF8C  F001    	movff	plusw1,btemp
 16627  0195C0  0EFD               	movlw	-3
 16628  0195C2  006F FF8C  F002    	movff	plusw1,btemp+1
 16629  0195C8  0E20               	movlw	32
 16630  0195CA  1201               	iorwf	btemp^0,f,c
 16631  0195CC  0E00               	movlw	0
 16632  0195CE  1202               	iorwf	(btemp+1)^0,f,c
 16633  0195D0  D008               	goto	l3336
 16634  0195D2                     l7431:
 16635                           
 16636                           ;stkvar	_c @ sp[(-2)+-2]
 16637  0195D2  0EFC               	movlw	-4
 16638  0195D4  006F FF8C  F001    	movff	plusw1,btemp
 16639  0195DA  0EFD               	movlw	-3
 16640  0195DC  006F FF8C  F002    	movff	plusw1,btemp+1
 16641  0195E2                     l3336:
 16642                           
 16643                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16644  0195E2  52E5               	movf	postdec1,f,c
 16645  0195E4  52E5               	movf	postdec1,f,c
 16646  0195E6  52E5               	movf	postdec1,f,c
 16647  0195E8  52E5               	movf	postdec1,f,c
 16648  0195EA  0012               	return		;funcret
 16649  0195EC                     __end_of_tolower:
 16650                           	opt callstack 0
 16651                           
 16652 ;; *************** function _isupper *****************
 16653 ;; Defined at:
 16654 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 16655 ;; Parameters:    Size  Location     Type
 16656 ;;  c               2  [STACK] int 
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;		None
 16659 ;; Return value:  Size  Location     Type
 16660 ;;                  2  [STACK] int 
 16661 ;; Registers used:
 16662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16663 ;; Tracked objects:
 16664 ;;		On entry : 0/0
 16665 ;;		On exit  : 0/0
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16672 ;;Total ram usage:        0 bytes
 16673 ;; Hardware stack levels used:    1
 16674 ;; Hardware stack levels required when called:   15
 16675 ;; This function calls:
 16676 ;;		Nothing
 16677 ;; This function is called by:
 16678 ;;		_efgtoa
 16679 ;;		_xtoa
 16680 ;;		_vfpfcnvrt
 16681 ;;		_tolower
 16682 ;; This function uses a reentrant model
 16683 ;;
 16684                           
 16685                           	psect	text57
 16686  01A13E                     __ptext57:
 16687                           	opt callstack 0
 16688  01A13E                     _isupper:
 16689                           	opt callstack 0
 16690                           
 16691                           ;stkvar	_c @ sp[(0)+-2]
 16692                           
 16693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16694                           ;incstack = 0
 16695 ;; hardware stack exceeded
 16696  01A13E  0EFE               	movlw	-2
 16697  01A140  50E3               	movf	plusw1,w,c
 16698  01A142  0FBF               	addlw	191
 16699  01A144  6E0B               	movwf	(btemp+10)^0,c
 16700  01A146  0EFF               	movlw	-1
 16701  01A148  006F FF8C  F00C    	movff	plusw1,btemp+11
 16702  01A14E  0EFF               	movlw	255
 16703  01A150  220C               	addwfc	(btemp+11)^0,f,c
 16704  01A152  500C               	movf	(btemp+11)^0,w,c
 16705  01A154  E106               	bnz	u5030
 16706  01A156  0E1A               	movlw	26
 16707  01A158  5C0B               	subwf	(btemp+10)^0,w,c
 16708  01A15A  B0D8               	btfsc	status,0,c
 16709  01A15C  D002               	goto	u5030
 16710  01A15E  0E01               	movlw	1
 16711  01A160  D001               	goto	u5040
 16712  01A162                     u5030:
 16713  01A162  0E00               	movlw	0
 16714  01A164                     u5040:
 16715  01A164  6E01               	movwf	btemp^0,c
 16716  01A166  6A02               	clrf	(btemp+1)^0,c
 16717                           
 16718                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16719  01A168  52E5               	movf	postdec1,f,c
 16720  01A16A  52E5               	movf	postdec1,f,c
 16721  01A16C  0012               	return		;funcret
 16722  01A16E                     __end_of_isupper:
 16723                           	opt callstack 0
 16724                           
 16725 ;; *************** function _strcpy *****************
 16726 ;; Defined at:
 16727 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 16728 ;; Parameters:    Size  Location     Type
 16729 ;;  dest            2  [STACK] PTR unsigned char 
 16730 ;;		 -> dbuf(80), 
 16731 ;;  src             2  [STACK] PTR const unsigned char 
 16732 ;;		 -> STR_56(4), STR_55(4), STR_52(4), STR_51(4), 
 16733 ;;		 -> dbuf(80), 
 16734 ;; Auto vars:     Size  Location     Type
 16735 ;;  d               2  [STACK] PTR unsigned char 
 16736 ;;		 -> dbuf(80), 
 16737 ;;  s               2  [STACK] PTR const unsigned char 
 16738 ;;		 -> STR_56(4), STR_55(4), STR_52(4), STR_51(4), 
 16739 ;;		 -> dbuf(80), 
 16740 ;; Return value:  Size  Location     Type
 16741 ;;                  2  [STACK] PTR unsigned char 
 16742 ;; Registers used:
 16743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 16744 ;; Tracked objects:
 16745 ;;		On entry : 0/0
 16746 ;;		On exit  : 0/0
 16747 ;;		Unchanged: 0/0
 16748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16753 ;;Total ram usage:        0 bytes
 16754 ;; Hardware stack levels used:    1
 16755 ;; Hardware stack levels required when called:   15
 16756 ;; This function calls:
 16757 ;;		Nothing
 16758 ;; This function is called by:
 16759 ;;		_efgtoa
 16760 ;; This function uses a reentrant model
 16761 ;;
 16762                           
 16763                           	psect	text58
 16764  018BD4                     __ptext58:
 16765                           	opt callstack 0
 16766  018BD4                     _strcpy:
 16767                           	opt callstack 0
 16768                           
 16769                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16770  018BD4  52E6               	movf	postinc1,f,c
 16771  018BD6  52E6               	movf	postinc1,f,c
 16772  018BD8  52E6               	movf	postinc1,f,c
 16773  018BDA  52E6               	movf	postinc1,f,c
 16774                           
 16775                           ;stkvar	_src @ sp[(-4)+-4]
 16776                           
 16777                           ;incstack = 0
 16778 ;; hardware stack exceeded
 16779  018BDC  0EF8               	movlw	-8
 16780  018BDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 16781  018BE4  0EF9               	movlw	-7
 16782  018BE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16783                           
 16784                           ;stkvar	_s @ sp[(-4)+2]
 16785  018BEC  0EFF               	movlw	-1
 16786  018BEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16787  018BF4  0EFE               	movlw	-2
 16788  018BF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16789                           
 16790                           ;stkvar	_dest @ sp[(-4)+-2]
 16791  018BFC  0EFA               	movlw	-6
 16792  018BFE  006F FF8C  F00B    	movff	plusw1,btemp+10
 16793  018C04  0EFB               	movlw	-5
 16794  018C06  006F FF8C  F00C    	movff	plusw1,btemp+11
 16795                           
 16796                           ;stkvar	_d @ sp[(-4)+0]
 16797  018C0C  0EFD               	movlw	-3
 16798  018C0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16799  018C14  0EFC               	movlw	-4
 16800  018C16  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16801  018C1C                     l10861:
 16802                           
 16803                           ;stkvar	_s @ sp[(-4)+2]
 16804  018C1C  50E1               	movf	fsr1l,w,c
 16805  018C1E  0FFE               	addlw	-2
 16806  018C20  6ED9               	movwf	fsr2l,c
 16807  018C22  50E2               	movf	fsr1h,w,c
 16808  018C24  6EDA               	movwf	fsr2h,c
 16809  018C26  0EFF               	movlw	255
 16810  018C28  22DA               	addwfc	fsr2h,f,c
 16811  018C2A  006F FF7C  F00B    	movff	indf2,btemp+10
 16812  018C30  0E01               	movlw	1
 16813  018C32  26DE               	addwf	postinc2,f,c
 16814  018C34  006F FF7C  F00C    	movff	indf2,btemp+11
 16815  018C3A  0E00               	movlw	0
 16816  018C3C  22DD               	addwfc	postdec2,f,c
 16817  018C3E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16818  018C44  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16819  018C4A  0E00               	movlw	low (__mediumconst shr (0+16))
 16820  018C4C  6EF8               	movwf	tblptru,c
 16821                           
 16822                           ;stkvar	_d @ sp[(-4)+0]
 16823  018C4E  50E1               	movf	fsr1l,w,c
 16824  018C50  0FFC               	addlw	-4
 16825  018C52  6ED9               	movwf	fsr2l,c
 16826  018C54  50E2               	movf	fsr1h,w,c
 16827  018C56  6EDA               	movwf	fsr2h,c
 16828  018C58  0EFF               	movlw	255
 16829  018C5A  22DA               	addwfc	fsr2h,f,c
 16830  018C5C  006F FF7C  F00B    	movff	indf2,btemp+10
 16831  018C62  0E01               	movlw	1
 16832  018C64  26DE               	addwf	postinc2,f,c
 16833  018C66  006F FF7C  F00C    	movff	indf2,btemp+11
 16834  018C6C  0E00               	movlw	0
 16835  018C6E  22DD               	addwfc	postdec2,f,c
 16836  018C70  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16837  018C76  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16838  018C7C  0E1F               	movlw	(high __ramtop+-1)
 16839  018C7E  64F7               	cpfsgt	tblptrh,c
 16840  018C80  D003               	bra	u9997
 16841  018C82  0008               	tblrd		*
 16842  018C84  50F5               	movf	tablat,w,c
 16843  018C86  D007               	bra	u9990
 16844  018C88                     u9997:
 16845  018C88  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16846  018C8E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16847  018C94  50EF               	movf	indf0,w,c
 16848  018C96                     u9990:
 16849  018C96  6EDF               	movwf	indf2,c
 16850  018C98  50DF               	movf	indf2,w,c
 16851  018C9A  A4D8               	btfss	status,2,c
 16852  018C9C  D7BF               	goto	l10861
 16853                           
 16854                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 16855  018C9E  0EF8               	movlw	248
 16856  018CA0  26E1               	addwf	fsr1l,f,c
 16857  018CA2  0EFF               	movlw	255
 16858  018CA4  22E2               	addwfc	fsr1h,f,c
 16859  018CA6  0012               	return		;funcret
 16860  018CA8                     __end_of_strcpy:
 16861                           	opt callstack 0
 16862                           
 16863 ;; *************** function _floorf *****************
 16864 ;; Defined at:
 16865 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 16866 ;; Parameters:    Size  Location     Type
 16867 ;;  x               4  [STACK] float 
 16868 ;; Auto vars:     Size  Location     Type
 16869 ;;  u               4  [STACK] struct .
 16870 ;;  m               4  [STACK] unsigned long 
 16871 ;;  e               2  [STACK] int 
 16872 ;; Return value:  Size  Location     Type
 16873 ;;                  4  [STACK] float 
 16874 ;; Registers used:
 16875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 16876 ;; Tracked objects:
 16877 ;;		On entry : 0/0
 16878 ;;		On exit  : 0/0
 16879 ;;		Unchanged: 0/0
 16880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16885 ;;Total ram usage:        0 bytes
 16886 ;; Hardware stack levels used:    1
 16887 ;; Hardware stack levels required when called:   15
 16888 ;; This function calls:
 16889 ;;		Nothing
 16890 ;; This function is called by:
 16891 ;;		_efgtoa
 16892 ;; This function uses a reentrant model
 16893 ;;
 16894                           
 16895                           	psect	text59
 16896  01548E                     __ptext59:
 16897                           	opt callstack 0
 16898  01548E                     _floorf:
 16899                           	opt callstack 0
 16900                           
 16901                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16902  01548E  0E0A               	movlw	10
 16903  015490  26E1               	addwf	fsr1l,f,c
 16904  015492  0E00               	movlw	0
 16905  015494  22E2               	addwfc	fsr1h,f,c
 16906                           
 16907                           ;incstack = 0
 16908 ;; hardware stack exceeded
 16909  015496  0060  F254  F009   	movff	floorf@F524,btemp+8
 16910  01549C  0060  F258  F00A   	movff	floorf@F524+1,btemp+9
 16911  0154A2  0060  F25C  F00B   	movff	floorf@F524+2,btemp+10
 16912  0154A8  0060  F260  F00C   	movff	floorf@F524+3,btemp+11
 16913                           
 16914                           ;stkvar	_u @ sp[(-10)+0]
 16915  0154AE  0EF6               	movlw	-10
 16916  0154B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 16917  0154B6  0EF7               	movlw	-9
 16918  0154B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16919  0154BE  0EF8               	movlw	-8
 16920  0154C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16921  0154C6  0EF9               	movlw	-7
 16922  0154C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16923                           
 16924                           ;stkvar	_x @ sp[(-10)+-4]
 16925  0154CE  0EF2               	movlw	-14
 16926  0154D0  006F FF8C  F009    	movff	plusw1,btemp+8
 16927  0154D6  0EF3               	movlw	-13
 16928  0154D8  006F FF8C  F00A    	movff	plusw1,btemp+9
 16929  0154DE  0EF4               	movlw	-12
 16930  0154E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 16931  0154E6  0EF5               	movlw	-11
 16932  0154E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 16933                           
 16934                           ;stkvar	_u @ sp[(-10)+0]
 16935  0154EE  0EF6               	movlw	-10
 16936  0154F0  0060  F027  FFE3   	movff	btemp+8,plusw1
 16937  0154F6  0EF7               	movlw	-9
 16938  0154F8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16939  0154FE  0EF8               	movlw	-8
 16940  015500  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16941  015506  0EF9               	movlw	-7
 16942  015508  0060  F033  FFE3   	movff	btemp+11,plusw1
 16943  01550E  0E81               	movlw	129
 16944  015510  6E0B               	movwf	(btemp+10)^0,c
 16945  015512  0EFF               	movlw	255
 16946  015514  6E0C               	movwf	(btemp+11)^0,c
 16947                           
 16948                           ;stkvar	_u @ sp[(-10)+0]
 16949  015516  0EF6               	movlw	-10
 16950  015518  006F FF8C  F005    	movff	plusw1,btemp+4
 16951  01551E  0EF7               	movlw	-9
 16952  015520  006F FF8C  F006    	movff	plusw1,btemp+5
 16953  015526  0EF8               	movlw	-8
 16954  015528  006F FF8C  F007    	movff	plusw1,btemp+6
 16955  01552E  0EF9               	movlw	-7
 16956  015530  006F FF8C  F008    	movff	plusw1,btemp+7
 16957  015536  0E18               	movlw	24
 16958  015538  D005               	goto	u5660
 16959  01553A                     u5665:
 16960  01553A  90D8               	bcf	status,0,c
 16961  01553C  3208               	rrcf	(btemp+7)^0,f,c
 16962  01553E  3207               	rrcf	(btemp+6)^0,f,c
 16963  015540  3206               	rrcf	(btemp+5)^0,f,c
 16964  015542  3205               	rrcf	(btemp+4)^0,f,c
 16965  015544                     u5660:
 16966  015544  2EE8               	decfsz	wreg,f,c
 16967  015546  D7F9               	goto	u5665
 16968  015548  0060  F014  F009   	movff	btemp+4,btemp+8
 16969  01554E  0060  F018  F00A   	movff	btemp+5,btemp+9
 16970  015554  0EFF               	movlw	255
 16971  015556  1609               	andwf	(btemp+8)^0,f,c
 16972  015558  0E00               	movlw	0
 16973  01555A  160A               	andwf	(btemp+9)^0,f,c
 16974  01555C  500B               	movf	(btemp+10)^0,w,c
 16975  01555E  2609               	addwf	(btemp+8)^0,f,c
 16976  015560  500C               	movf	(btemp+11)^0,w,c
 16977  015562  220A               	addwfc	(btemp+9)^0,f,c
 16978                           
 16979                           ;stkvar	_e @ sp[(-10)+8]
 16980  015564  0EFE               	movlw	-2
 16981  015566  0060  F027  FFE3   	movff	btemp+8,plusw1
 16982  01556C  0EFF               	movlw	-1
 16983  01556E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16984                           
 16985                           ;stkvar	_e @ sp[(-10)+8]
 16986  015574  0EFF               	movlw	-1
 16987  015576  BEE3               	btfsc	plusw1,7,c
 16988  015578  D019               	goto	l7445
 16989  01557A  0EFF               	movlw	-1
 16990  01557C  50E3               	movf	plusw1,w,c
 16991  01557E  E108               	bnz	u5670
 16992  015580  0EFE               	movlw	-2
 16993  015582  006F FF8C  F001    	movff	plusw1,btemp
 16994  015588  0E17               	movlw	23
 16995  01558A  5E01               	subwf	btemp^0,f,c
 16996  01558C  A0D8               	btfss	status,0,c
 16997  01558E  D00E               	goto	l7445
 16998  015590                     u5670:
 16999                           
 17000                           ;stkvar	_x @ sp[(-10)+-4]
 17001  015590  0EF2               	movlw	-14
 17002  015592  006F FF8C  F001    	movff	plusw1,btemp
 17003  015598  0EF3               	movlw	-13
 17004  01559A  006F FF8C  F002    	movff	plusw1,btemp+1
 17005  0155A0  0EF4               	movlw	-12
 17006  0155A2  006F FF8C  F003    	movff	plusw1,btemp+2
 17007  0155A8  0EF5               	movlw	-11
 17008  0155AA  D11F               	goto	L17
 17009  0155AC                     l7445:
 17010                           
 17011                           ;stkvar	_e @ sp[(-10)+8]
 17012  0155AC  0EFF               	movlw	-1
 17013  0155AE  BEE3               	btfsc	plusw1,7,c
 17014  0155B0  D0B4               	goto	l7461
 17015                           
 17016                           ;stkvar	_e @ sp[(-10)+8]
 17017  0155B2  0EFE               	movlw	-2
 17018  0155B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17019  0155BA  0EFF               	movlw	255
 17020  0155BC  6E05               	movwf	(btemp+4)^0,c
 17021  0155BE  0EFF               	movlw	255
 17022  0155C0  6E06               	movwf	(btemp+5)^0,c
 17023  0155C2  0E7F               	movlw	127
 17024  0155C4  6E07               	movwf	(btemp+6)^0,c
 17025  0155C6  0E00               	movlw	0
 17026  0155C8  6E08               	movwf	(btemp+7)^0,c
 17027  0155CA                     u5695:
 17028  0155CA  660C               	tstfsz	(btemp+11)^0,c
 17029  0155CC  D001               	goto	u5696
 17030  0155CE  D007               	goto	u5697
 17031  0155D0                     u5696:
 17032  0155D0  3408               	rlcf	(btemp+7)^0,w,c
 17033  0155D2  3208               	rrcf	(btemp+7)^0,f,c
 17034  0155D4  3207               	rrcf	(btemp+6)^0,f,c
 17035  0155D6  3206               	rrcf	(btemp+5)^0,f,c
 17036  0155D8  3205               	rrcf	(btemp+4)^0,f,c
 17037  0155DA  2E0C               	decfsz	(btemp+11)^0,f,c
 17038  0155DC  D7F6               	goto	u5695
 17039  0155DE                     u5697:
 17040                           
 17041                           ;stkvar	_m @ sp[(-10)+4]
 17042  0155DE  0EFA               	movlw	-6
 17043  0155E0  0060  F017  FFE3   	movff	btemp+4,plusw1
 17044  0155E6  0EFB               	movlw	-5
 17045  0155E8  0060  F01B  FFE3   	movff	btemp+5,plusw1
 17046  0155EE  0EFC               	movlw	-4
 17047  0155F0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17048  0155F6  0EFD               	movlw	-3
 17049  0155F8  0060  F023  FFE3   	movff	btemp+7,plusw1
 17050                           
 17051                           ;stkvar	_m @ sp[(-10)+4]
 17052                           ;stkvar	_u @ sp[(-10)+0]
 17053  0155FE  0EF6               	movlw	-10
 17054  015600  006F FF8C  F009    	movff	plusw1,btemp+8
 17055  015606  0EF7               	movlw	-9
 17056  015608  006F FF8C  F00A    	movff	plusw1,btemp+9
 17057  01560E  0EF8               	movlw	-8
 17058  015610  006F FF8C  F00B    	movff	plusw1,btemp+10
 17059  015616  0EF9               	movlw	-7
 17060  015618  006F FF8C  F00C    	movff	plusw1,btemp+11
 17061  01561E  0EFA               	movlw	-6
 17062  015620  50E3               	movf	plusw1,w,c
 17063  015622  1609               	andwf	(btemp+8)^0,f,c
 17064  015624  0EFB               	movlw	-5
 17065  015626  50E3               	movf	plusw1,w,c
 17066  015628  160A               	andwf	(btemp+9)^0,f,c
 17067  01562A  0EFC               	movlw	-4
 17068  01562C  50E3               	movf	plusw1,w,c
 17069  01562E  160B               	andwf	(btemp+10)^0,f,c
 17070  015630  0EFD               	movlw	-3
 17071  015632  50E3               	movf	plusw1,w,c
 17072  015634  160C               	andwf	(btemp+11)^0,f,c
 17073  015636  5009               	movf	(btemp+8)^0,w,c
 17074  015638  100A               	iorwf	(btemp+9)^0,w,c
 17075  01563A  100B               	iorwf	(btemp+10)^0,w,c
 17076  01563C  100C               	iorwf	(btemp+11)^0,w,c
 17077  01563E  B4D8               	btfsc	status,2,c
 17078  015640  D7A7               	goto	u5670
 17079                           
 17080                           ;stkvar	_u @ sp[(-10)+0]
 17081  015642  0EF6               	movlw	-10
 17082  015644  006F FF8C  F009    	movff	plusw1,btemp+8
 17083  01564A  0EF7               	movlw	-9
 17084  01564C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17085  015652  0EF8               	movlw	-8
 17086  015654  006F FF8C  F00B    	movff	plusw1,btemp+10
 17087  01565A  0EF9               	movlw	-7
 17088  01565C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17089  015662  0E20               	movlw	32
 17090  015664  D005               	goto	u5710
 17091  015666                     u5715:
 17092  015666  90D8               	bcf	status,0,c
 17093  015668  320C               	rrcf	(btemp+11)^0,f,c
 17094  01566A  320B               	rrcf	(btemp+10)^0,f,c
 17095  01566C  320A               	rrcf	(btemp+9)^0,f,c
 17096  01566E  3209               	rrcf	(btemp+8)^0,f,c
 17097  015670                     u5710:
 17098  015670  2EE8               	decfsz	wreg,f,c
 17099  015672  D7F9               	goto	u5715
 17100  015674  5009               	movf	(btemp+8)^0,w,c
 17101  015676  B4D8               	btfsc	status,2,c
 17102  015678  D028               	goto	l7459
 17103                           
 17104                           ;stkvar	_m @ sp[(-10)+4]
 17105                           ;stkvar	_u @ sp[(-10)+0]
 17106  01567A  0EF6               	movlw	-10
 17107  01567C  50E3               	movf	plusw1,w,c
 17108  01567E  6E01               	movwf	btemp^0,c
 17109  015680  0EFA               	movlw	-6
 17110  015682  50E3               	movf	plusw1,w,c
 17111  015684  2601               	addwf	btemp^0,f,c
 17112  015686  0EF6               	movlw	-10
 17113  015688  0060  F007  FFE3   	movff	btemp,plusw1
 17114  01568E  0EF7               	movlw	-9
 17115  015690  50E3               	movf	plusw1,w,c
 17116  015692  6E01               	movwf	btemp^0,c
 17117  015694  0EFB               	movlw	-5
 17118  015696  50E3               	movf	plusw1,w,c
 17119  015698  2201               	addwfc	btemp^0,f,c
 17120  01569A  0EF7               	movlw	-9
 17121  01569C  0060  F007  FFE3   	movff	btemp,plusw1
 17122  0156A2  0EF8               	movlw	-8
 17123  0156A4  50E3               	movf	plusw1,w,c
 17124  0156A6  6E01               	movwf	btemp^0,c
 17125  0156A8  0EFC               	movlw	-4
 17126  0156AA  50E3               	movf	plusw1,w,c
 17127  0156AC  2201               	addwfc	btemp^0,f,c
 17128  0156AE  0EF8               	movlw	-8
 17129  0156B0  0060  F007  FFE3   	movff	btemp,plusw1
 17130  0156B6  0EF9               	movlw	-7
 17131  0156B8  50E3               	movf	plusw1,w,c
 17132  0156BA  6E01               	movwf	btemp^0,c
 17133  0156BC  0EFD               	movlw	-3
 17134  0156BE  50E3               	movf	plusw1,w,c
 17135  0156C0  2201               	addwfc	btemp^0,f,c
 17136  0156C2  0EF9               	movlw	-7
 17137  0156C4  0060  F007  FFE3   	movff	btemp,plusw1
 17138  0156CA                     l7459:
 17139                           
 17140                           ;stkvar	_m @ sp[(-10)+4]
 17141  0156CA  0EFA               	movlw	-6
 17142  0156CC  006F FF8C  F009    	movff	plusw1,btemp+8
 17143  0156D2  0EFB               	movlw	-5
 17144  0156D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 17145  0156DA  0EFC               	movlw	-4
 17146  0156DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17147  0156E2  0EFD               	movlw	-3
 17148  0156E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17149  0156EA  1C09               	comf	(btemp+8)^0,w,c
 17150  0156EC  6E05               	movwf	(btemp+4)^0,c
 17151  0156EE  1C0A               	comf	(btemp+9)^0,w,c
 17152  0156F0  6E06               	movwf	(btemp+5)^0,c
 17153  0156F2  1C0B               	comf	(btemp+10)^0,w,c
 17154  0156F4  6E07               	movwf	(btemp+6)^0,c
 17155  0156F6  1C0C               	comf	(btemp+11)^0,w,c
 17156  0156F8  6E08               	movwf	(btemp+7)^0,c
 17157                           
 17158                           ;stkvar	_u @ sp[(-10)+0]
 17159  0156FA  50E1               	movf	fsr1l,w,c
 17160  0156FC  0FF6               	addlw	-10
 17161  0156FE  6ED9               	movwf	fsr2l,c
 17162  015700  50E2               	movf	fsr1h,w,c
 17163  015702  6EDA               	movwf	fsr2h,c
 17164  015704  0EFF               	movlw	255
 17165  015706  22DA               	addwfc	fsr2h,f,c
 17166  015708  5005               	movf	(btemp+4)^0,w,c
 17167  01570A  16DE               	andwf	postinc2,f,c
 17168  01570C  5006               	movf	(btemp+5)^0,w,c
 17169  01570E  16DE               	andwf	postinc2,f,c
 17170  015710  5007               	movf	(btemp+6)^0,w,c
 17171  015712  16DE               	andwf	postinc2,f,c
 17172  015714  5008               	movf	(btemp+7)^0,w,c
 17173  015716  16DE               	andwf	postinc2,f,c
 17174  015718  D05B               	goto	l7469
 17175  01571A                     l7461:
 17176                           
 17177                           ;stkvar	_u @ sp[(-10)+0]
 17178  01571A  0EF6               	movlw	-10
 17179  01571C  006F FF8C  F009    	movff	plusw1,btemp+8
 17180  015722  0EF7               	movlw	-9
 17181  015724  006F FF8C  F00A    	movff	plusw1,btemp+9
 17182  01572A  0EF8               	movlw	-8
 17183  01572C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17184  015732  0EF9               	movlw	-7
 17185  015734  006F FF8C  F00C    	movff	plusw1,btemp+11
 17186  01573A  0E20               	movlw	32
 17187  01573C  D005               	goto	u5730
 17188  01573E                     u5735:
 17189  01573E  90D8               	bcf	status,0,c
 17190  015740  320C               	rrcf	(btemp+11)^0,f,c
 17191  015742  320B               	rrcf	(btemp+10)^0,f,c
 17192  015744  320A               	rrcf	(btemp+9)^0,f,c
 17193  015746  3209               	rrcf	(btemp+8)^0,f,c
 17194  015748                     u5730:
 17195  015748  2EE8               	decfsz	wreg,f,c
 17196  01574A  D7F9               	goto	u5735
 17197  01574C  6609               	tstfsz	(btemp+8)^0,c
 17198  01574E  D009               	goto	l7465
 17199                           
 17200                           ;stkvar	_u @ sp[(-10)+0]
 17201  015750  0EF6               	movlw	-10
 17202  015752  6AE3               	clrf	plusw1,c
 17203  015754  0EF7               	movlw	-9
 17204  015756  6AE3               	clrf	plusw1,c
 17205  015758  0EF8               	movlw	-8
 17206  01575A  6AE3               	clrf	plusw1,c
 17207  01575C  0EF9               	movlw	-7
 17208  01575E  6AE3               	clrf	plusw1,c
 17209  015760  D037               	goto	l7469
 17210  015762                     l7465:
 17211                           
 17212                           ;stkvar	_u @ sp[(-10)+0]
 17213  015762  0EF6               	movlw	-10
 17214  015764  006F FF8C  F009    	movff	plusw1,btemp+8
 17215  01576A  0EF7               	movlw	-9
 17216  01576C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17217  015772  0EF8               	movlw	-8
 17218  015774  006F FF8C  F00B    	movff	plusw1,btemp+10
 17219  01577A  0EF9               	movlw	-7
 17220  01577C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17221  015782  90D8               	bcf	status,0,c
 17222  015784  3409               	rlcf	(btemp+8)^0,w,c
 17223  015786  6E05               	movwf	(btemp+4)^0,c
 17224  015788  340A               	rlcf	(btemp+9)^0,w,c
 17225  01578A  6E06               	movwf	(btemp+5)^0,c
 17226  01578C  340B               	rlcf	(btemp+10)^0,w,c
 17227  01578E  6E07               	movwf	(btemp+6)^0,c
 17228  015790  340C               	rlcf	(btemp+11)^0,w,c
 17229  015792  6E08               	movwf	(btemp+7)^0,c
 17230  015794  5005               	movf	(btemp+4)^0,w,c
 17231  015796  1006               	iorwf	(btemp+5)^0,w,c
 17232  015798  1007               	iorwf	(btemp+6)^0,w,c
 17233  01579A  1008               	iorwf	(btemp+7)^0,w,c
 17234  01579C  B4D8               	btfsc	status,2,c
 17235  01579E  D018               	goto	l7469
 17236  0157A0  0E00               	movlw	0
 17237  0157A2  6E09               	movwf	(btemp+8)^0,c
 17238  0157A4  0E00               	movlw	0
 17239  0157A6  6E0A               	movwf	(btemp+9)^0,c
 17240  0157A8  0E80               	movlw	128
 17241  0157AA  6E0B               	movwf	(btemp+10)^0,c
 17242  0157AC  0EBF               	movlw	191
 17243  0157AE  6E0C               	movwf	(btemp+11)^0,c
 17244                           
 17245                           ;stkvar	_u @ sp[(-10)+0]
 17246  0157B0  0EF6               	movlw	-10
 17247  0157B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17248  0157B8  0EF7               	movlw	-9
 17249  0157BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17250  0157C0  0EF8               	movlw	-8
 17251  0157C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17252  0157C8  0EF9               	movlw	-7
 17253  0157CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17254  0157D0                     l7469:
 17255                           
 17256                           ;stkvar	_u @ sp[(-10)+0]
 17257  0157D0  0EF6               	movlw	-10
 17258  0157D2  006F FF8C  F001    	movff	plusw1,btemp
 17259  0157D8  0EF7               	movlw	-9
 17260  0157DA  006F FF8C  F002    	movff	plusw1,btemp+1
 17261  0157E0  0EF8               	movlw	-8
 17262  0157E2  006F FF8C  F003    	movff	plusw1,btemp+2
 17263  0157E8  0EF9               	movlw	-7
 17264  0157EA                     L17:
 17265  0157EA  006F FF8C  F004    	movff	plusw1,btemp+3
 17266                           
 17267                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17268  0157F0  0EF2               	movlw	242
 17269  0157F2  26E1               	addwf	fsr1l,f,c
 17270  0157F4  0EFF               	movlw	255
 17271  0157F6  22E2               	addwfc	fsr1h,f,c
 17272  0157F8  0012               	return		;funcret
 17273  0157FA                     __end_of_floorf:
 17274                           	opt callstack 0
 17275                           
 17276 ;; *************** function ___fpclassifyf *****************
 17277 ;; Defined at:
 17278 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 17279 ;; Parameters:    Size  Location     Type
 17280 ;;  x               4  [STACK] float 
 17281 ;; Auto vars:     Size  Location     Type
 17282 ;;  u               4  [STACK] struct .
 17283 ;;  e               2  [STACK] int 
 17284 ;; Return value:  Size  Location     Type
 17285 ;;                  2  [STACK] int 
 17286 ;; Registers used:
 17287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 17288 ;; Tracked objects:
 17289 ;;		On entry : 0/0
 17290 ;;		On exit  : 0/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17297 ;;Total ram usage:        0 bytes
 17298 ;; Hardware stack levels used:    1
 17299 ;; Hardware stack levels required when called:   15
 17300 ;; This function calls:
 17301 ;;		Nothing
 17302 ;; This function is called by:
 17303 ;;		_efgtoa
 17304 ;; This function uses a reentrant model
 17305 ;;
 17306                           
 17307                           	psect	text60
 17308  0174F4                     __ptext60:
 17309                           	opt callstack 0
 17310  0174F4                     ___fpclassifyf:
 17311                           	opt callstack 0
 17312                           
 17313                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17314  0174F4  0E06               	movlw	6
 17315  0174F6  26E1               	addwf	fsr1l,f,c
 17316  0174F8  0E00               	movlw	0
 17317  0174FA  22E2               	addwfc	fsr1h,f,c
 17318                           
 17319                           ;incstack = 0
 17320 ;; hardware stack exceeded
 17321  0174FC  0060  F264  F009   	movff	___fpclassifyf@F463,btemp+8
 17322  017502  0060  F268  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 17323  017508  0060  F26C  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 17324  01750E  0060  F270  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 17325                           
 17326                           ;stkvar	_u @ sp[(-6)+0]
 17327  017514  0EFA               	movlw	-6
 17328  017516  0060  F027  FFE3   	movff	btemp+8,plusw1
 17329  01751C  0EFB               	movlw	-5
 17330  01751E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17331  017524  0EFC               	movlw	-4
 17332  017526  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17333  01752C  0EFD               	movlw	-3
 17334  01752E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17335                           
 17336                           ;stkvar	_x @ sp[(-6)+-4]
 17337  017534  0EF6               	movlw	-10
 17338  017536  006F FF8C  F009    	movff	plusw1,btemp+8
 17339  01753C  0EF7               	movlw	-9
 17340  01753E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17341  017544  0EF8               	movlw	-8
 17342  017546  006F FF8C  F00B    	movff	plusw1,btemp+10
 17343  01754C  0EF9               	movlw	-7
 17344  01754E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17345                           
 17346                           ;stkvar	_u @ sp[(-6)+0]
 17347  017554  0EFA               	movlw	-6
 17348  017556  0060  F027  FFE3   	movff	btemp+8,plusw1
 17349  01755C  0EFB               	movlw	-5
 17350  01755E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17351  017564  0EFC               	movlw	-4
 17352  017566  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17353  01756C  0EFD               	movlw	-3
 17354  01756E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17355                           
 17356                           ;stkvar	_u @ sp[(-6)+0]
 17357  017574  0EFA               	movlw	-6
 17358  017576  006F FF8C  F009    	movff	plusw1,btemp+8
 17359  01757C  0EFB               	movlw	-5
 17360  01757E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17361  017584  0EFC               	movlw	-4
 17362  017586  006F FF8C  F00B    	movff	plusw1,btemp+10
 17363  01758C  0EFD               	movlw	-3
 17364  01758E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17365  017594  0E18               	movlw	24
 17366  017596  D005               	goto	u5540
 17367  017598                     u5545:
 17368  017598  90D8               	bcf	status,0,c
 17369  01759A  320C               	rrcf	(btemp+11)^0,f,c
 17370  01759C  320B               	rrcf	(btemp+10)^0,f,c
 17371  01759E  320A               	rrcf	(btemp+9)^0,f,c
 17372  0175A0  3209               	rrcf	(btemp+8)^0,f,c
 17373  0175A2                     u5540:
 17374  0175A2  2EE8               	decfsz	wreg,f,c
 17375  0175A4  D7F9               	goto	u5545
 17376  0175A6  0060  F024  F007   	movff	btemp+8,btemp+6
 17377  0175AC  0060  F028  F008   	movff	btemp+9,btemp+7
 17378  0175B2  0EFF               	movlw	255
 17379  0175B4  1607               	andwf	(btemp+6)^0,f,c
 17380  0175B6  0E00               	movlw	0
 17381  0175B8  1608               	andwf	(btemp+7)^0,f,c
 17382                           
 17383                           ;stkvar	_e @ sp[(-6)+4]
 17384  0175BA  0EFE               	movlw	-2
 17385  0175BC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17386  0175C2  0EFF               	movlw	-1
 17387  0175C4  0060  F023  FFE3   	movff	btemp+7,plusw1
 17388                           
 17389                           ;stkvar	_e @ sp[(-6)+4]
 17390  0175CA  0EFE               	movlw	-2
 17391  0175CC  006F FF8C  F001    	movff	plusw1,btemp
 17392  0175D2  0EFF               	movlw	-1
 17393  0175D4  50E3               	movf	plusw1,w,c
 17394  0175D6  1001               	iorwf	btemp^0,w,c
 17395  0175D8  A4D8               	btfss	status,2,c
 17396  0175DA  D023               	goto	l7407
 17397                           
 17398                           ;stkvar	_u @ sp[(-6)+0]
 17399  0175DC  0EFA               	movlw	-6
 17400  0175DE  006F FF8C  F009    	movff	plusw1,btemp+8
 17401  0175E4  0EFB               	movlw	-5
 17402  0175E6  006F FF8C  F00A    	movff	plusw1,btemp+9
 17403  0175EC  0EFC               	movlw	-4
 17404  0175EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17405  0175F4  0EFD               	movlw	-3
 17406  0175F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17407  0175FC  90D8               	bcf	status,0,c
 17408  0175FE  3409               	rlcf	(btemp+8)^0,w,c
 17409  017600  6E05               	movwf	(btemp+4)^0,c
 17410  017602  340A               	rlcf	(btemp+9)^0,w,c
 17411  017604  6E06               	movwf	(btemp+5)^0,c
 17412  017606  340B               	rlcf	(btemp+10)^0,w,c
 17413  017608  6E07               	movwf	(btemp+6)^0,c
 17414  01760A  340C               	rlcf	(btemp+11)^0,w,c
 17415  01760C  6E08               	movwf	(btemp+7)^0,c
 17416  01760E  5005               	movf	(btemp+4)^0,w,c
 17417  017610  1006               	iorwf	(btemp+5)^0,w,c
 17418  017612  1007               	iorwf	(btemp+6)^0,w,c
 17419  017614  1008               	iorwf	(btemp+7)^0,w,c
 17420  017616  A4D8               	btfss	status,2,c
 17421  017618  D002               	goto	l7403
 17422  01761A  0E02               	movlw	2
 17423  01761C  D02E               	goto	L18
 17424  01761E                     l7403:
 17425  01761E  0E03               	movlw	3
 17426  017620  D02C               	goto	L18
 17427  017622                     l7407:
 17428                           
 17429                           ;stkvar	_e @ sp[(-6)+4]
 17430  017622  0EFE               	movlw	-2
 17431  017624  28E3               	incf	plusw1,w,c
 17432  017626  E128               	bnz	l7413
 17433  017628  0EFF               	movlw	-1
 17434  01762A  50E3               	movf	plusw1,w,c
 17435  01762C  A4D8               	btfss	status,2,c
 17436  01762E  D024               	goto	l7413
 17437                           
 17438                           ;stkvar	_u @ sp[(-6)+0]
 17439  017630  0EFA               	movlw	-6
 17440  017632  006F FF8C  F009    	movff	plusw1,btemp+8
 17441  017638  0EFB               	movlw	-5
 17442  01763A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17443  017640  0EFC               	movlw	-4
 17444  017642  006F FF8C  F00B    	movff	plusw1,btemp+10
 17445  017648  0EFD               	movlw	-3
 17446  01764A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17447  017650  0E09               	movlw	9
 17448  017652                     u5585:
 17449  017652  90D8               	bcf	status,0,c
 17450  017654  3609               	rlcf	(btemp+8)^0,f,c
 17451  017656  360A               	rlcf	(btemp+9)^0,f,c
 17452  017658  360B               	rlcf	(btemp+10)^0,f,c
 17453  01765A  360C               	rlcf	(btemp+11)^0,f,c
 17454  01765C  2EE8               	decfsz	wreg,f,c
 17455  01765E  D7F9               	goto	u5585
 17456  017660  5009               	movf	(btemp+8)^0,w,c
 17457  017662  100A               	iorwf	(btemp+9)^0,w,c
 17458  017664  100B               	iorwf	(btemp+10)^0,w,c
 17459  017666  100C               	iorwf	(btemp+11)^0,w,c
 17460  017668  A4D8               	btfss	status,2,c
 17461  01766A  D002               	goto	u5590
 17462  01766C  0E01               	movlw	1
 17463  01766E  D001               	goto	u5600
 17464  017670                     u5590:
 17465  017670  0E00               	movlw	0
 17466  017672                     u5600:
 17467  017672  6E01               	movwf	btemp^0,c
 17468  017674  6A02               	clrf	(btemp+1)^0,c
 17469  017676  D004               	goto	l2951
 17470  017678                     l7413:
 17471  017678  0E04               	movlw	4
 17472  01767A                     L18:
 17473  01767A  6E01               	movwf	btemp^0,c
 17474  01767C  0E00               	movlw	0
 17475  01767E  6E02               	movwf	(btemp+1)^0,c
 17476  017680                     l2951:
 17477                           
 17478                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 17479  017680  0EF6               	movlw	246
 17480  017682  26E1               	addwf	fsr1l,f,c
 17481  017684  0EFF               	movlw	255
 17482  017686  22E2               	addwfc	fsr1h,f,c
 17483  017688  0012               	return		;funcret
 17484  01768A                     __end_of___fpclassifyf:
 17485                           	opt callstack 0
 17486                           
 17487 ;; *************** function ___fltol *****************
 17488 ;; Defined at:
 17489 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 17490 ;; Parameters:    Size  Location     Type
 17491 ;;  f1              4  [STACK] int 
 17492 ;; Auto vars:     Size  Location     Type
 17493 ;;  exp1            1  [STACK] unsigned char 
 17494 ;;  sign1           1  [STACK] unsigned char 
 17495 ;; Return value:  Size  Location     Type
 17496 ;;                  4  [STACK] long 
 17497 ;; Registers used:
 17498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17499 ;; Tracked objects:
 17500 ;;		On entry : 0/1
 17501 ;;		On exit  : 0/0
 17502 ;;		Unchanged: 0/0
 17503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17508 ;;Total ram usage:        0 bytes
 17509 ;; Hardware stack levels used:    1
 17510 ;; Hardware stack levels required when called:   15
 17511 ;; This function calls:
 17512 ;;		Nothing
 17513 ;; This function is called by:
 17514 ;;		_calc_bsoc
 17515 ;;		_init_bsoc
 17516 ;;		_efgtoa
 17517 ;; This function uses a reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text61
 17521  01780A                     __ptext61:
 17522                           	opt callstack 0
 17523  01780A                     ___fltol:
 17524                           	opt callstack 0
 17525                           
 17526                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17527  01780A  52E6               	movf	postinc1,f,c
 17528  01780C  52E6               	movf	postinc1,f,c
 17529                           
 17530                           ;stkvar	_f1 @ sp[(-2)+-4]
 17531                           
 17532                           ;incstack = 0
 17533 ;; hardware stack exceeded
 17534  01780E  0EFA               	movlw	-6
 17535  017810  006F FF8C  F009    	movff	plusw1,btemp+8
 17536  017816  0EFB               	movlw	-5
 17537  017818  006F FF8C  F00A    	movff	plusw1,btemp+9
 17538  01781E  0EFC               	movlw	-4
 17539  017820  006F FF8C  F00B    	movff	plusw1,btemp+10
 17540  017826  0EFD               	movlw	-3
 17541  017828  006F FF8C  F00C    	movff	plusw1,btemp+11
 17542  01782E  0E18               	movlw	24
 17543  017830  D005               	goto	u6750
 17544  017832                     u6755:
 17545  017832  90D8               	bcf	status,0,c
 17546  017834  320C               	rrcf	(btemp+11)^0,f,c
 17547  017836  320B               	rrcf	(btemp+10)^0,f,c
 17548  017838  320A               	rrcf	(btemp+9)^0,f,c
 17549  01783A  3209               	rrcf	(btemp+8)^0,f,c
 17550  01783C                     u6750:
 17551  01783C  2EE8               	decfsz	wreg,f,c
 17552  01783E  D7F9               	goto	u6755
 17553                           
 17554                           ;stkvar	_exp1 @ sp[(-2)+0]
 17555  017840  0EFE               	movlw	-2
 17556  017842  0060  F027  FFE3   	movff	btemp+8,plusw1
 17557  017848  0EFE               	movlw	-2
 17558  01784A  50E3               	movf	plusw1,w,c
 17559  01784C  A4D8               	btfss	status,2,c
 17560  01784E  D006               	goto	l8033
 17561  017850                     u6760:
 17562  017850  0E00               	movlw	0
 17563  017852  6E01               	movwf	btemp^0,c
 17564  017854  6A02               	clrf	(btemp+1)^0,c
 17565  017856  6A03               	clrf	(btemp+2)^0,c
 17566  017858  6A04               	clrf	(btemp+3)^0,c
 17567  01785A  D08B               	goto	l2567
 17568  01785C                     l8033:
 17569                           
 17570                           ;stkvar	_f1 @ sp[(-2)+-4]
 17571  01785C  0EFA               	movlw	-6
 17572  01785E  006F FF8C  F009    	movff	plusw1,btemp+8
 17573  017864  0EFB               	movlw	-5
 17574  017866  006F FF8C  F00A    	movff	plusw1,btemp+9
 17575  01786C  0EFC               	movlw	-4
 17576  01786E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17577  017874  0EFD               	movlw	-3
 17578  017876  006F FF8C  F00C    	movff	plusw1,btemp+11
 17579  01787C  0E20               	movlw	32
 17580  01787E  D005               	goto	u6770
 17581  017880                     u6775:
 17582  017880  90D8               	bcf	status,0,c
 17583  017882  320C               	rrcf	(btemp+11)^0,f,c
 17584  017884  320B               	rrcf	(btemp+10)^0,f,c
 17585  017886  320A               	rrcf	(btemp+9)^0,f,c
 17586  017888  3209               	rrcf	(btemp+8)^0,f,c
 17587  01788A                     u6770:
 17588  01788A  2EE8               	decfsz	wreg,f,c
 17589  01788C  D7F9               	goto	u6775
 17590                           
 17591                           ;stkvar	_sign1 @ sp[(-2)+1]
 17592  01788E  0EFF               	movlw	-1
 17593  017890  0060  F027  FFE3   	movff	btemp+8,plusw1
 17594                           
 17595                           ;stkvar	_f1 @ sp[(-2)+-4]
 17596  017896  0EFC               	movlw	-4
 17597  017898  8EE3               	bsf	plusw1,7,c
 17598                           
 17599                           ;stkvar	_f1 @ sp[(-2)+-4]
 17600  01789A  50E1               	movf	fsr1l,w,c
 17601  01789C  0FFA               	addlw	-6
 17602  01789E  6ED9               	movwf	fsr2l,c
 17603  0178A0  50E2               	movf	fsr1h,w,c
 17604  0178A2  6EDA               	movwf	fsr2h,c
 17605  0178A4  0EFF               	movlw	255
 17606  0178A6  22DA               	addwfc	fsr2h,f,c
 17607  0178A8  0EFF               	movlw	255
 17608  0178AA  16DE               	andwf	postinc2,f,c
 17609  0178AC  0EFF               	movlw	255
 17610  0178AE  16DE               	andwf	postinc2,f,c
 17611  0178B0  0EFF               	movlw	255
 17612  0178B2  16DE               	andwf	postinc2,f,c
 17613  0178B4  0E00               	movlw	0
 17614  0178B6  16DE               	andwf	postinc2,f,c
 17615                           
 17616                           ;stkvar	_exp1 @ sp[(-2)+0]
 17617  0178B8  0EFE               	movlw	-2
 17618  0178BA  006F FF8C  F001    	movff	plusw1,btemp
 17619  0178C0  0E96               	movlw	150
 17620  0178C2  5E01               	subwf	btemp^0,f,c
 17621  0178C4  0EFE               	movlw	-2
 17622  0178C6  0060  F007  FFE3   	movff	btemp,plusw1
 17623                           
 17624                           ;stkvar	_exp1 @ sp[(-2)+0]
 17625  0178CC  0EFE               	movlw	-2
 17626  0178CE  AEE3               	btfss	plusw1,7,c
 17627  0178D0  D014               	goto	l8051
 17628                           
 17629                           ;stkvar	_exp1 @ sp[(-2)+0]
 17630  0178D2  0EFE               	movlw	-2
 17631  0178D4  50E3               	movf	plusw1,w,c
 17632  0178D6  0A80               	xorlw	128
 17633  0178D8  0F97               	addlw	151
 17634  0178DA  A0D8               	btfss	status,0,c
 17635  0178DC  D7B9               	goto	u6760
 17636  0178DE                     l8049:
 17637                           
 17638                           ;stkvar	_f1 @ sp[(-2)+-4]
 17639  0178DE  90D8               	bcf	status,0,c
 17640  0178E0  0EFD               	movlw	-3
 17641  0178E2  32E3               	rrcf	plusw1,f,c
 17642  0178E4  0EFC               	movlw	-4
 17643  0178E6  32E3               	rrcf	plusw1,f,c
 17644  0178E8  0EFB               	movlw	-5
 17645  0178EA  32E3               	rrcf	plusw1,f,c
 17646  0178EC  0EFA               	movlw	-6
 17647  0178EE  32E3               	rrcf	plusw1,f,c
 17648                           
 17649                           ;stkvar	_exp1 @ sp[(-2)+0]
 17650  0178F0  0EFE               	movlw	-2
 17651  0178F2  2AE3               	incf	plusw1,f,c
 17652  0178F4  B4D8               	btfsc	status,2,c
 17653  0178F6  D018               	goto	u6820
 17654  0178F8  D7F2               	goto	l8049
 17655  0178FA                     l8051:
 17656                           
 17657                           ;stkvar	_exp1 @ sp[(-2)+0]
 17658  0178FA  0EFE               	movlw	-2
 17659  0178FC  006F FF8C  F001    	movff	plusw1,btemp
 17660  017902  0E1F               	movlw	31
 17661  017904  6401               	cpfsgt	btemp^0,c
 17662  017906  D00C               	goto	l8059
 17663  017908  D7A3               	goto	u6760
 17664  01790A                     l8057:
 17665                           
 17666                           ;stkvar	_f1 @ sp[(-2)+-4]
 17667  01790A  90D8               	bcf	status,0,c
 17668  01790C  0EFA               	movlw	-6
 17669  01790E  36E3               	rlcf	plusw1,f,c
 17670  017910  0EFB               	movlw	-5
 17671  017912  36E3               	rlcf	plusw1,f,c
 17672  017914  0EFC               	movlw	-4
 17673  017916  36E3               	rlcf	plusw1,f,c
 17674  017918  0EFD               	movlw	-3
 17675  01791A  36E3               	rlcf	plusw1,f,c
 17676                           
 17677                           ;stkvar	_exp1 @ sp[(-2)+0]
 17678  01791C  0EFE               	movlw	-2
 17679  01791E  06E3               	decf	plusw1,f,c
 17680  017920                     l8059:
 17681                           
 17682                           ;stkvar	_exp1 @ sp[(-2)+0]
 17683  017920  0EFE               	movlw	-2
 17684  017922  50E3               	movf	plusw1,w,c
 17685  017924  A4D8               	btfss	status,2,c
 17686  017926  D7F1               	goto	l8057
 17687  017928                     u6820:
 17688                           
 17689                           ;stkvar	_sign1 @ sp[(-2)+1]
 17690  017928  0EFF               	movlw	-1
 17691  01792A  50E3               	movf	plusw1,w,c
 17692  01792C  B4D8               	btfsc	status,2,c
 17693  01792E  D011               	goto	u6840
 17694                           
 17695                           ;stkvar	_f1 @ sp[(-2)+-4]
 17696                           ;stkvar	_f1 @ sp[(-2)+-4]
 17697  017930  0EFA               	movlw	-6
 17698  017932  6CE3               	negf	plusw1,c
 17699  017934  0EFB               	movlw	-5
 17700  017936  1EE3               	comf	plusw1,f,c
 17701  017938  0EFC               	movlw	-4
 17702  01793A  1EE3               	comf	plusw1,f,c
 17703  01793C  0EFD               	movlw	-3
 17704  01793E  1EE3               	comf	plusw1,f,c
 17705  017940  E308               	bnc	u6840
 17706  017942  0EFB               	movlw	-5
 17707  017944  2AE3               	incf	plusw1,f,c
 17708  017946  E305               	bnc	u6840
 17709  017948  0EFC               	movlw	-4
 17710  01794A  2AE3               	incf	plusw1,f,c
 17711  01794C  E302               	bnc	u6840
 17712  01794E  0EFD               	movlw	-3
 17713  017950  2AE3               	incf	plusw1,f,c
 17714  017952                     u6840:
 17715                           
 17716                           ;stkvar	_f1 @ sp[(-2)+-4]
 17717  017952  0EFA               	movlw	-6
 17718  017954  006F FF8C  F001    	movff	plusw1,btemp
 17719  01795A  0EFB               	movlw	-5
 17720  01795C  006F FF8C  F002    	movff	plusw1,btemp+1
 17721  017962  0EFC               	movlw	-4
 17722  017964  006F FF8C  F003    	movff	plusw1,btemp+2
 17723  01796A  0EFD               	movlw	-3
 17724  01796C  006F FF8C  F004    	movff	plusw1,btemp+3
 17725  017972                     l2567:
 17726                           
 17727                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17728  017972  0EFA               	movlw	250
 17729  017974  26E1               	addwf	fsr1l,f,c
 17730  017976  0EFF               	movlw	255
 17731  017978  22E2               	addwfc	fsr1h,f,c
 17732  01797A  0012               	return		;funcret
 17733  01797C                     __end_of___fltol:
 17734                           	opt callstack 0
 17735                           
 17736 ;; *************** function ___flneg *****************
 17737 ;; Defined at:
 17738 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 17739 ;; Parameters:    Size  Location     Type
 17740 ;;  f1              4  [STACK] long 
 17741 ;; Auto vars:     Size  Location     Type
 17742 ;;		None
 17743 ;; Return value:  Size  Location     Type
 17744 ;;                  4  [STACK] long 
 17745 ;; Registers used:
 17746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 17747 ;; Tracked objects:
 17748 ;;		On entry : 0/0
 17749 ;;		On exit  : 0/0
 17750 ;;		Unchanged: 0/0
 17751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17756 ;;Total ram usage:        0 bytes
 17757 ;; Hardware stack levels used:    1
 17758 ;; Hardware stack levels required when called:   15
 17759 ;; This function calls:
 17760 ;;		Nothing
 17761 ;; This function is called by:
 17762 ;;		_calc_bsoc
 17763 ;;		_efgtoa
 17764 ;; This function uses a reentrant model
 17765 ;;
 17766                           
 17767                           	psect	text62
 17768  019C34                     __ptext62:
 17769                           	opt callstack 0
 17770  019C34                     ___flneg:
 17771                           	opt callstack 0
 17772                           
 17773                           ;stkvar	_f1 @ sp[(0)+-4]
 17774                           
 17775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17776                           ;incstack = 0
 17777 ;; hardware stack exceeded
 17778  019C34  0EFC               	movlw	-4
 17779  019C36  50E3               	movf	plusw1,w,c
 17780  019C38  E10A               	bnz	u6740
 17781  019C3A  0EFD               	movlw	-3
 17782  019C3C  50E3               	movf	plusw1,w,c
 17783  019C3E  E107               	bnz	u6740
 17784  019C40  0EFE               	movlw	-2
 17785  019C42  50E3               	movf	plusw1,w,c
 17786  019C44  E104               	bnz	u6740
 17787  019C46  0EFF               	movlw	-1
 17788  019C48  50E3               	movf	plusw1,w,c
 17789  019C4A  B4D8               	btfsc	status,2,c
 17790  019C4C  D002               	goto	l8023
 17791  019C4E                     u6740:
 17792                           
 17793                           ;stkvar	_f1 @ sp[(0)+-4]
 17794  019C4E  0EFF               	movlw	-1
 17795  019C50  7EE3               	btg	plusw1,7,c
 17796  019C52                     l8023:
 17797                           
 17798                           ;stkvar	_f1 @ sp[(0)+-4]
 17799  019C52  0EFC               	movlw	-4
 17800  019C54  006F FF8C  F001    	movff	plusw1,btemp
 17801  019C5A  0EFD               	movlw	-3
 17802  019C5C  006F FF8C  F002    	movff	plusw1,btemp+1
 17803  019C62  0EFE               	movlw	-2
 17804  019C64  006F FF8C  F003    	movff	plusw1,btemp+2
 17805  019C6A  0EFF               	movlw	-1
 17806  019C6C  006F FF8C  F004    	movff	plusw1,btemp+3
 17807                           
 17808                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17809  019C72  52E5               	movf	postdec1,f,c
 17810  019C74  52E5               	movf	postdec1,f,c
 17811  019C76  52E5               	movf	postdec1,f,c
 17812  019C78  52E5               	movf	postdec1,f,c
 17813  019C7A  0012               	return		;funcret
 17814  019C7C                     __end_of___flneg:
 17815                           	opt callstack 0
 17816                           
 17817 ;; *************** function ___flge *****************
 17818 ;; Defined at:
 17819 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17820 ;; Parameters:    Size  Location     Type
 17821 ;;  ff1             4  [STACK] long 
 17822 ;;  ff2             4  [STACK] long 
 17823 ;; Auto vars:     Size  Location     Type
 17824 ;;		None
 17825 ;; Return value:  Size  Location     Type
 17826 ;;		None               void
 17827 ;; Registers used:
 17828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17829 ;; Tracked objects:
 17830 ;;		On entry : 0/0
 17831 ;;		On exit  : 0/0
 17832 ;;		Unchanged: 0/0
 17833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17838 ;;Total ram usage:        0 bytes
 17839 ;; Hardware stack levels used:    1
 17840 ;; Hardware stack levels required when called:   15
 17841 ;; This function calls:
 17842 ;;		Nothing
 17843 ;; This function is called by:
 17844 ;;		_calc_bsoc
 17845 ;;		_efgtoa
 17846 ;; This function uses a reentrant model
 17847 ;;
 17848                           
 17849                           	psect	text63
 17850  017AEC                     __ptext63:
 17851                           	opt callstack 0
 17852  017AEC                     ___flge:
 17853                           	opt callstack 0
 17854                           
 17855                           ;stkvar	_ff1 @ sp[(0)+-4]
 17856                           
 17857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17858                           ;incstack = 0
 17859 ;; hardware stack exceeded
 17860  017AEC  50E1               	movf	fsr1l,w,c
 17861  017AEE  0FFC               	addlw	-4
 17862  017AF0  6ED9               	movwf	fsr2l,c
 17863  017AF2  50E2               	movf	fsr1h,w,c
 17864  017AF4  6EDA               	movwf	fsr2h,c
 17865  017AF6  0EFF               	movlw	255
 17866  017AF8  22DA               	addwfc	fsr2h,f,c
 17867  017AFA  0E00               	movlw	0
 17868  017AFC  14DE               	andwf	postinc2,w,c
 17869  017AFE  6E09               	movwf	(btemp+8)^0,c
 17870  017B00  0E00               	movlw	0
 17871  017B02  14DE               	andwf	postinc2,w,c
 17872  017B04  6E0A               	movwf	(btemp+9)^0,c
 17873  017B06  0E80               	movlw	128
 17874  017B08  14DE               	andwf	postinc2,w,c
 17875  017B0A  6E0B               	movwf	(btemp+10)^0,c
 17876  017B0C  0E7F               	movlw	127
 17877  017B0E  14DE               	andwf	postinc2,w,c
 17878  017B10  6E0C               	movwf	(btemp+11)^0,c
 17879  017B12  5009               	movf	(btemp+8)^0,w,c
 17880  017B14  100A               	iorwf	(btemp+9)^0,w,c
 17881  017B16  100B               	iorwf	(btemp+10)^0,w,c
 17882  017B18  100C               	iorwf	(btemp+11)^0,w,c
 17883  017B1A  A4D8               	btfss	status,2,c
 17884  017B1C  D008               	goto	l7997
 17885                           
 17886                           ;stkvar	_ff1 @ sp[(0)+-4]
 17887  017B1E  0EFC               	movlw	-4
 17888  017B20  6AE3               	clrf	plusw1,c
 17889  017B22  0EFD               	movlw	-3
 17890  017B24  6AE3               	clrf	plusw1,c
 17891  017B26  0EFE               	movlw	-2
 17892  017B28  6AE3               	clrf	plusw1,c
 17893  017B2A  0EFF               	movlw	-1
 17894  017B2C  6AE3               	clrf	plusw1,c
 17895  017B2E                     l7997:
 17896                           
 17897                           ;stkvar	_ff2 @ sp[(0)+-8]
 17898  017B2E  50E1               	movf	fsr1l,w,c
 17899  017B30  0FF8               	addlw	-8
 17900  017B32  6ED9               	movwf	fsr2l,c
 17901  017B34  50E2               	movf	fsr1h,w,c
 17902  017B36  6EDA               	movwf	fsr2h,c
 17903  017B38  0EFF               	movlw	255
 17904  017B3A  22DA               	addwfc	fsr2h,f,c
 17905  017B3C  0E00               	movlw	0
 17906  017B3E  14DE               	andwf	postinc2,w,c
 17907  017B40  6E09               	movwf	(btemp+8)^0,c
 17908  017B42  0E00               	movlw	0
 17909  017B44  14DE               	andwf	postinc2,w,c
 17910  017B46  6E0A               	movwf	(btemp+9)^0,c
 17911  017B48  0E80               	movlw	128
 17912  017B4A  14DE               	andwf	postinc2,w,c
 17913  017B4C  6E0B               	movwf	(btemp+10)^0,c
 17914  017B4E  0E7F               	movlw	127
 17915  017B50  14DE               	andwf	postinc2,w,c
 17916  017B52  6E0C               	movwf	(btemp+11)^0,c
 17917  017B54  5009               	movf	(btemp+8)^0,w,c
 17918  017B56  100A               	iorwf	(btemp+9)^0,w,c
 17919  017B58  100B               	iorwf	(btemp+10)^0,w,c
 17920  017B5A  100C               	iorwf	(btemp+11)^0,w,c
 17921  017B5C  A4D8               	btfss	status,2,c
 17922  017B5E  D008               	goto	l2533
 17923                           
 17924                           ;stkvar	_ff2 @ sp[(0)+-8]
 17925  017B60  0EF8               	movlw	-8
 17926  017B62  6AE3               	clrf	plusw1,c
 17927  017B64  0EF9               	movlw	-7
 17928  017B66  6AE3               	clrf	plusw1,c
 17929  017B68  0EFA               	movlw	-6
 17930  017B6A  6AE3               	clrf	plusw1,c
 17931  017B6C  0EFB               	movlw	-5
 17932  017B6E  6AE3               	clrf	plusw1,c
 17933  017B70                     l2533:
 17934                           
 17935                           ;stkvar	_ff1 @ sp[(0)+-4]
 17936  017B70  0EFF               	movlw	-1
 17937  017B72  AEE3               	btfss	plusw1,7,c
 17938  017B74  D024               	goto	l8003
 17939                           
 17940                           ;stkvar	_ff1 @ sp[(0)+-4]
 17941  017B76  0E00               	movlw	0
 17942  017B78  6E09               	movwf	(btemp+8)^0,c
 17943  017B7A  0E00               	movlw	0
 17944  017B7C  6E0A               	movwf	(btemp+9)^0,c
 17945  017B7E  0E00               	movlw	0
 17946  017B80  6E0B               	movwf	(btemp+10)^0,c
 17947  017B82  0E80               	movlw	128
 17948  017B84  6E0C               	movwf	(btemp+11)^0,c
 17949  017B86  0EFC               	movlw	-4
 17950  017B88  50E3               	movf	plusw1,w,c
 17951  017B8A  5E09               	subwf	(btemp+8)^0,f,c
 17952  017B8C  0EFD               	movlw	-3
 17953  017B8E  50E3               	movf	plusw1,w,c
 17954  017B90  5A0A               	subwfb	(btemp+9)^0,f,c
 17955  017B92  0EFE               	movlw	-2
 17956  017B94  50E3               	movf	plusw1,w,c
 17957  017B96  5A0B               	subwfb	(btemp+10)^0,f,c
 17958  017B98  0EFF               	movlw	-1
 17959  017B9A  50E3               	movf	plusw1,w,c
 17960  017B9C  5A0C               	subwfb	(btemp+11)^0,f,c
 17961                           
 17962                           ;stkvar	_ff1 @ sp[(0)+-4]
 17963  017B9E  0EFC               	movlw	-4
 17964  017BA0  0060  F027  FFE3   	movff	btemp+8,plusw1
 17965  017BA6  0EFD               	movlw	-3
 17966  017BA8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17967  017BAE  0EFE               	movlw	-2
 17968  017BB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17969  017BB6  0EFF               	movlw	-1
 17970  017BB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17971  017BBE                     l8003:
 17972                           
 17973                           ;stkvar	_ff2 @ sp[(0)+-8]
 17974  017BBE  0EFB               	movlw	-5
 17975  017BC0  AEE3               	btfss	plusw1,7,c
 17976  017BC2  D024               	goto	l8007
 17977                           
 17978                           ;stkvar	_ff2 @ sp[(0)+-8]
 17979  017BC4  0E00               	movlw	0
 17980  017BC6  6E09               	movwf	(btemp+8)^0,c
 17981  017BC8  0E00               	movlw	0
 17982  017BCA  6E0A               	movwf	(btemp+9)^0,c
 17983  017BCC  0E00               	movlw	0
 17984  017BCE  6E0B               	movwf	(btemp+10)^0,c
 17985  017BD0  0E80               	movlw	128
 17986  017BD2  6E0C               	movwf	(btemp+11)^0,c
 17987  017BD4  0EF8               	movlw	-8
 17988  017BD6  50E3               	movf	plusw1,w,c
 17989  017BD8  5E09               	subwf	(btemp+8)^0,f,c
 17990  017BDA  0EF9               	movlw	-7
 17991  017BDC  50E3               	movf	plusw1,w,c
 17992  017BDE  5A0A               	subwfb	(btemp+9)^0,f,c
 17993  017BE0  0EFA               	movlw	-6
 17994  017BE2  50E3               	movf	plusw1,w,c
 17995  017BE4  5A0B               	subwfb	(btemp+10)^0,f,c
 17996  017BE6  0EFB               	movlw	-5
 17997  017BE8  50E3               	movf	plusw1,w,c
 17998  017BEA  5A0C               	subwfb	(btemp+11)^0,f,c
 17999                           
 18000                           ;stkvar	_ff2 @ sp[(0)+-8]
 18001  017BEC  0EF8               	movlw	-8
 18002  017BEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 18003  017BF4  0EF9               	movlw	-7
 18004  017BF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18005  017BFC  0EFA               	movlw	-6
 18006  017BFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18007  017C04  0EFB               	movlw	-5
 18008  017C06  0060  F033  FFE3   	movff	btemp+11,plusw1
 18009  017C0C                     l8007:
 18010                           
 18011                           ;stkvar	_ff1 @ sp[(0)+-4]
 18012  017C0C  0EFF               	movlw	-1
 18013  017C0E  7EE3               	btg	plusw1,7,c
 18014                           
 18015                           ;stkvar	_ff2 @ sp[(0)+-8]
 18016  017C10  0EFB               	movlw	-5
 18017  017C12  7EE3               	btg	plusw1,7,c
 18018                           
 18019                           ;stkvar	_ff2 @ sp[(0)+-8]
 18020                           ;stkvar	_ff1 @ sp[(0)+-4]
 18021  017C14  50E1               	movf	fsr1l,w,c
 18022  017C16  0FFC               	addlw	-4
 18023  017C18  6ED9               	movwf	fsr2l,c
 18024  017C1A  50E2               	movf	fsr1h,w,c
 18025  017C1C  6EDA               	movwf	fsr2h,c
 18026  017C1E  0EFF               	movlw	255
 18027  017C20  22DA               	addwfc	fsr2h,f,c
 18028  017C22  0EF8               	movlw	-8
 18029  017C24  50E3               	movf	plusw1,w,c
 18030  017C26  5CDE               	subwf	postinc2,w,c
 18031  017C28  0EF9               	movlw	-7
 18032  017C2A  50E3               	movf	plusw1,w,c
 18033  017C2C  58DE               	subwfb	postinc2,w,c
 18034  017C2E  0EFA               	movlw	-6
 18035  017C30  50E3               	movf	plusw1,w,c
 18036  017C32  58DE               	subwfb	postinc2,w,c
 18037  017C34  0EFB               	movlw	-5
 18038  017C36  50E3               	movf	plusw1,w,c
 18039  017C38  58DE               	subwfb	postinc2,w,c
 18040  017C3A  B0D8               	btfsc	status,0,c
 18041  017C3C  D002               	goto	l8015
 18042  017C3E  9001               	bcf	btemp& (0+255),0,c
 18043  017C40  D001               	goto	l2540
 18044  017C42                     l8015:
 18045  017C42  8001               	bsf	btemp& (0+255),0,c
 18046  017C44                     l2540:
 18047                           
 18048                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18049  017C44  0EF8               	movlw	248
 18050  017C46  26E1               	addwf	fsr1l,f,c
 18051  017C48  0EFF               	movlw	255
 18052  017C4A  22E2               	addwfc	fsr1h,f,c
 18053  017C4C  0012               	return		;funcret
 18054  017C4E                     __end_of___flge:
 18055                           	opt callstack 0
 18056                           
 18057 ;; *************** function ___fleq *****************
 18058 ;; Defined at:
 18059 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18060 ;; Parameters:    Size  Location     Type
 18061 ;;  ff1             4  [STACK] long 
 18062 ;;  ff2             4  [STACK] long 
 18063 ;; Auto vars:     Size  Location     Type
 18064 ;;		None
 18065 ;; Return value:  Size  Location     Type
 18066 ;;		None               void
 18067 ;; Registers used:
 18068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18069 ;; Tracked objects:
 18070 ;;		On entry : 0/0
 18071 ;;		On exit  : 0/0
 18072 ;;		Unchanged: 0/0
 18073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18078 ;;Total ram usage:        0 bytes
 18079 ;; Hardware stack levels used:    1
 18080 ;; Hardware stack levels required when called:   15
 18081 ;; This function calls:
 18082 ;;		Nothing
 18083 ;; This function is called by:
 18084 ;;		_efgtoa
 18085 ;; This function uses a reentrant model
 18086 ;;
 18087                           
 18088                           	psect	text64
 18089  018CA8                     __ptext64:
 18090                           	opt callstack 0
 18091  018CA8                     ___fleq:
 18092                           	opt callstack 0
 18093                           
 18094                           ;stkvar	_ff1 @ sp[(0)+-4]
 18095                           
 18096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18097                           ;incstack = 0
 18098 ;; hardware stack exceeded
 18099  018CA8  50E1               	movf	fsr1l,w,c
 18100  018CAA  0FFC               	addlw	-4
 18101  018CAC  6ED9               	movwf	fsr2l,c
 18102  018CAE  50E2               	movf	fsr1h,w,c
 18103  018CB0  6EDA               	movwf	fsr2h,c
 18104  018CB2  0EFF               	movlw	255
 18105  018CB4  22DA               	addwfc	fsr2h,f,c
 18106  018CB6  0E00               	movlw	0
 18107  018CB8  14DE               	andwf	postinc2,w,c
 18108  018CBA  6E09               	movwf	(btemp+8)^0,c
 18109  018CBC  0E00               	movlw	0
 18110  018CBE  14DE               	andwf	postinc2,w,c
 18111  018CC0  6E0A               	movwf	(btemp+9)^0,c
 18112  018CC2  0E80               	movlw	128
 18113  018CC4  14DE               	andwf	postinc2,w,c
 18114  018CC6  6E0B               	movwf	(btemp+10)^0,c
 18115  018CC8  0E7F               	movlw	127
 18116  018CCA  14DE               	andwf	postinc2,w,c
 18117  018CCC  6E0C               	movwf	(btemp+11)^0,c
 18118  018CCE  5009               	movf	(btemp+8)^0,w,c
 18119  018CD0  100A               	iorwf	(btemp+9)^0,w,c
 18120  018CD2  100B               	iorwf	(btemp+10)^0,w,c
 18121  018CD4  100C               	iorwf	(btemp+11)^0,w,c
 18122  018CD6  A4D8               	btfss	status,2,c
 18123  018CD8  D008               	goto	l7981
 18124                           
 18125                           ;stkvar	_ff1 @ sp[(0)+-4]
 18126  018CDA  0EFC               	movlw	-4
 18127  018CDC  6AE3               	clrf	plusw1,c
 18128  018CDE  0EFD               	movlw	-3
 18129  018CE0  6AE3               	clrf	plusw1,c
 18130  018CE2  0EFE               	movlw	-2
 18131  018CE4  6AE3               	clrf	plusw1,c
 18132  018CE6  0EFF               	movlw	-1
 18133  018CE8  6AE3               	clrf	plusw1,c
 18134  018CEA                     l7981:
 18135                           
 18136                           ;stkvar	_ff2 @ sp[(0)+-8]
 18137  018CEA  50E1               	movf	fsr1l,w,c
 18138  018CEC  0FF8               	addlw	-8
 18139  018CEE  6ED9               	movwf	fsr2l,c
 18140  018CF0  50E2               	movf	fsr1h,w,c
 18141  018CF2  6EDA               	movwf	fsr2h,c
 18142  018CF4  0EFF               	movlw	255
 18143  018CF6  22DA               	addwfc	fsr2h,f,c
 18144  018CF8  0E00               	movlw	0
 18145  018CFA  14DE               	andwf	postinc2,w,c
 18146  018CFC  6E09               	movwf	(btemp+8)^0,c
 18147  018CFE  0E00               	movlw	0
 18148  018D00  14DE               	andwf	postinc2,w,c
 18149  018D02  6E0A               	movwf	(btemp+9)^0,c
 18150  018D04  0E80               	movlw	128
 18151  018D06  14DE               	andwf	postinc2,w,c
 18152  018D08  6E0B               	movwf	(btemp+10)^0,c
 18153  018D0A  0E7F               	movlw	127
 18154  018D0C  14DE               	andwf	postinc2,w,c
 18155  018D0E  6E0C               	movwf	(btemp+11)^0,c
 18156  018D10  5009               	movf	(btemp+8)^0,w,c
 18157  018D12  100A               	iorwf	(btemp+9)^0,w,c
 18158  018D14  100B               	iorwf	(btemp+10)^0,w,c
 18159  018D16  100C               	iorwf	(btemp+11)^0,w,c
 18160  018D18  A4D8               	btfss	status,2,c
 18161  018D1A  D008               	goto	l7985
 18162                           
 18163                           ;stkvar	_ff2 @ sp[(0)+-8]
 18164  018D1C  0EF8               	movlw	-8
 18165  018D1E  6AE3               	clrf	plusw1,c
 18166  018D20  0EF9               	movlw	-7
 18167  018D22  6AE3               	clrf	plusw1,c
 18168  018D24  0EFA               	movlw	-6
 18169  018D26  6AE3               	clrf	plusw1,c
 18170  018D28  0EFB               	movlw	-5
 18171  018D2A  6AE3               	clrf	plusw1,c
 18172  018D2C                     l7985:
 18173                           
 18174                           ;stkvar	_ff2 @ sp[(0)+-8]
 18175                           ;stkvar	_ff1 @ sp[(0)+-4]
 18176  018D2C  50E1               	movf	fsr1l,w,c
 18177  018D2E  0FFC               	addlw	-4
 18178  018D30  6ED9               	movwf	fsr2l,c
 18179  018D32  50E2               	movf	fsr1h,w,c
 18180  018D34  6EDA               	movwf	fsr2h,c
 18181  018D36  0EFF               	movlw	255
 18182  018D38  22DA               	addwfc	fsr2h,f,c
 18183  018D3A  0EF8               	movlw	-8
 18184  018D3C  50E3               	movf	plusw1,w,c
 18185  018D3E  18DE               	xorwf	postinc2,w,c
 18186  018D40  E10D               	bnz	u6680
 18187  018D42  0EF9               	movlw	-7
 18188  018D44  50E3               	movf	plusw1,w,c
 18189  018D46  18DE               	xorwf	postinc2,w,c
 18190  018D48  E109               	bnz	u6680
 18191  018D4A  0EFA               	movlw	-6
 18192  018D4C  50E3               	movf	plusw1,w,c
 18193  018D4E  18DE               	xorwf	postinc2,w,c
 18194  018D50  E105               	bnz	u6680
 18195  018D52  0EFB               	movlw	-5
 18196  018D54  50E3               	movf	plusw1,w,c
 18197  018D56  18DE               	xorwf	postinc2,w,c
 18198  018D58  B4D8               	btfsc	status,2,c
 18199  018D5A  D002               	goto	l7989
 18200  018D5C                     u6680:
 18201  018D5C  9001               	bcf	btemp& (0+255),0,c
 18202  018D5E  D001               	goto	l2529
 18203  018D60                     l7989:
 18204  018D60  8001               	bsf	btemp& (0+255),0,c
 18205  018D62                     l2529:
 18206                           
 18207                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18208  018D62  0EF8               	movlw	248
 18209  018D64  26E1               	addwf	fsr1l,f,c
 18210  018D66  0EFF               	movlw	255
 18211  018D68  22E2               	addwfc	fsr1h,f,c
 18212  018D6A  0012               	return		;funcret
 18213  018D6C                     __end_of___fleq:
 18214                           	opt callstack 0
 18215                           
 18216 ;; *************** function ___fldiv *****************
 18217 ;; Defined at:
 18218 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 18219 ;; Parameters:    Size  Location     Type
 18220 ;;  b               4  [STACK] long 
 18221 ;;  a               4  [STACK] long 
 18222 ;; Auto vars:     Size  Location     Type
 18223 ;;  grs             4  [STACK] unsigned long 
 18224 ;;  rem             4  [STACK] unsigned long 
 18225 ;;  new_exp         2  [STACK] short 
 18226 ;;  aexp            1  [STACK] unsigned char 
 18227 ;;  bexp            1  [STACK] unsigned char 
 18228 ;;  sign            1  [STACK] unsigned char 
 18229 ;; Return value:  Size  Location     Type
 18230 ;;                  4  [STACK] unsigned char 
 18231 ;; Registers used:
 18232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18233 ;; Tracked objects:
 18234 ;;		On entry : 0/1
 18235 ;;		On exit  : 0/0
 18236 ;;		Unchanged: 0/0
 18237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18242 ;;Total ram usage:        0 bytes
 18243 ;; Hardware stack levels used:    1
 18244 ;; Hardware stack levels required when called:   15
 18245 ;; This function calls:
 18246 ;;		Nothing
 18247 ;; This function is called by:
 18248 ;;		_conv_raw_result
 18249 ;;		_calc_bsoc
 18250 ;;		_init_bsoc
 18251 ;;		_efgtoa
 18252 ;; This function uses a reentrant model
 18253 ;;
 18254                           
 18255                           	psect	text65
 18256  01422E                     __ptext65:
 18257                           	opt callstack 0
 18258  01422E                     ___fldiv:
 18259                           	opt callstack 0
 18260                           
 18261                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18262  01422E  0E0D               	movlw	13
 18263  014230  26E1               	addwf	fsr1l,f,c
 18264  014232  0E00               	movlw	0
 18265  014234  22E2               	addwfc	fsr1h,f,c
 18266                           
 18267                           ;stkvar	_b @ sp[(-13)+-4]
 18268                           
 18269                           ;incstack = 0
 18270 ;; hardware stack exceeded
 18271  014236  0EF2               	movlw	242
 18272  014238  24E1               	addwf	fsr1l,w,c
 18273  01423A  6ED9               	movwf	fsr2l,c
 18274  01423C  0EFF               	movlw	255
 18275  01423E  20E2               	addwfc	fsr1h,w,c
 18276  014240  6EDA               	movwf	fsr2h,c
 18277  014242  50DF               	movf	indf2,w,c
 18278  014244  6E0C               	movwf	(btemp+11)^0,c
 18279  014246  0E80               	movlw	128
 18280  014248  160C               	andwf	(btemp+11)^0,f,c
 18281                           
 18282                           ;stkvar	_sign @ sp[(-13)+12]
 18283  01424A  0EFF               	movlw	-1
 18284  01424C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18285                           
 18286                           ;stkvar	_b @ sp[(-13)+-4]
 18287  014252  0EF2               	movlw	242
 18288  014254  24E1               	addwf	fsr1l,w,c
 18289  014256  6ED9               	movwf	fsr2l,c
 18290  014258  0EFF               	movlw	255
 18291  01425A  20E2               	addwfc	fsr1h,w,c
 18292  01425C  6EDA               	movwf	fsr2h,c
 18293  01425E  50DF               	movf	indf2,w,c
 18294  014260  6E0C               	movwf	(btemp+11)^0,c
 18295  014262  90D8               	bcf	status,0,c
 18296  014264  340C               	rlcf	(btemp+11)^0,w,c
 18297  014266  6E0B               	movwf	(btemp+10)^0,c
 18298                           
 18299                           ;stkvar	_bexp @ sp[(-13)+11]
 18300  014268  0EFE               	movlw	-2
 18301  01426A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18302                           
 18303                           ;stkvar	_b @ sp[(-13)+-4]
 18304  014270  0EF1               	movlw	241
 18305  014272  24E1               	addwf	fsr1l,w,c
 18306  014274  6ED9               	movwf	fsr2l,c
 18307  014276  0EFF               	movlw	255
 18308  014278  20E2               	addwfc	fsr1h,w,c
 18309  01427A  6EDA               	movwf	fsr2h,c
 18310  01427C  AEDF               	btfss	indf2,7,c
 18311  01427E  D002               	goto	l7583
 18312                           
 18313                           ;stkvar	_bexp @ sp[(-13)+11]
 18314  014280  0EFE               	movlw	-2
 18315  014282  80E3               	bsf	plusw1,0,c
 18316  014284                     l7583:
 18317                           
 18318                           ;stkvar	_bexp @ sp[(-13)+11]
 18319  014284  0EFE               	movlw	-2
 18320  014286  50E3               	movf	plusw1,w,c
 18321  014288  B4D8               	btfsc	status,2,c
 18322  01428A  D027               	goto	l7593
 18323                           
 18324                           ;stkvar	_bexp @ sp[(-13)+11]
 18325  01428C  0EFE               	movlw	-2
 18326  01428E  28E3               	incf	plusw1,w,c
 18327  014290  A4D8               	btfss	status,2,c
 18328  014292  D018               	goto	l7589
 18329  014294  0E00               	movlw	0
 18330  014296  6E09               	movwf	(btemp+8)^0,c
 18331  014298  0E00               	movlw	0
 18332  01429A  6E0A               	movwf	(btemp+9)^0,c
 18333  01429C  0E00               	movlw	0
 18334  01429E  6E0B               	movwf	(btemp+10)^0,c
 18335  0142A0  0E00               	movlw	0
 18336  0142A2  6E0C               	movwf	(btemp+11)^0,c
 18337                           
 18338                           ;stkvar	_b @ sp[(-13)+-4]
 18339  0142A4  0EEF               	movlw	-17
 18340  0142A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 18341  0142AC  0EF0               	movlw	-16
 18342  0142AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18343  0142B4  0EF1               	movlw	-15
 18344  0142B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18345  0142BC  0EF2               	movlw	-14
 18346  0142BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18347  0142C4                     l7589:
 18348                           
 18349                           ;stkvar	_b @ sp[(-13)+-4]
 18350  0142C4  0EF1               	movlw	-15
 18351  0142C6  8EE3               	bsf	plusw1,7,c
 18352                           
 18353                           ;stkvar	_b @ sp[(-13)+-4]
 18354  0142C8  0EF2               	movlw	242
 18355  0142CA  24E1               	addwf	fsr1l,w,c
 18356  0142CC  6ED9               	movwf	fsr2l,c
 18357  0142CE  0EFF               	movlw	255
 18358  0142D0  20E2               	addwfc	fsr1h,w,c
 18359  0142D2  6EDA               	movwf	fsr2h,c
 18360  0142D4  0E00               	movlw	0
 18361  0142D6  6EDF               	movwf	indf2,c
 18362  0142D8  D018               	goto	l7595
 18363  0142DA                     l7593:
 18364  0142DA  0E00               	movlw	0
 18365  0142DC  6E09               	movwf	(btemp+8)^0,c
 18366  0142DE  0E00               	movlw	0
 18367  0142E0  6E0A               	movwf	(btemp+9)^0,c
 18368  0142E2  0E00               	movlw	0
 18369  0142E4  6E0B               	movwf	(btemp+10)^0,c
 18370  0142E6  0E00               	movlw	0
 18371  0142E8  6E0C               	movwf	(btemp+11)^0,c
 18372                           
 18373                           ;stkvar	_b @ sp[(-13)+-4]
 18374  0142EA  0EEF               	movlw	-17
 18375  0142EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 18376  0142F2  0EF0               	movlw	-16
 18377  0142F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18378  0142FA  0EF1               	movlw	-15
 18379  0142FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18380  014302  0EF2               	movlw	-14
 18381  014304  0060  F033  FFE3   	movff	btemp+11,plusw1
 18382  01430A                     l7595:
 18383                           
 18384                           ;stkvar	_a @ sp[(-13)+-8]
 18385  01430A  0EEE               	movlw	238
 18386  01430C  24E1               	addwf	fsr1l,w,c
 18387  01430E  6ED9               	movwf	fsr2l,c
 18388  014310  0EFF               	movlw	255
 18389  014312  20E2               	addwfc	fsr1h,w,c
 18390  014314  6EDA               	movwf	fsr2h,c
 18391  014316  50DF               	movf	indf2,w,c
 18392  014318  6E0C               	movwf	(btemp+11)^0,c
 18393  01431A  0E80               	movlw	128
 18394  01431C  160C               	andwf	(btemp+11)^0,f,c
 18395                           
 18396                           ;stkvar	_sign @ sp[(-13)+12]
 18397  01431E  50E1               	movf	fsr1l,w,c
 18398  014320  0FFF               	addlw	-1
 18399  014322  6ED9               	movwf	fsr2l,c
 18400  014324  50E2               	movf	fsr1h,w,c
 18401  014326  6EDA               	movwf	fsr2h,c
 18402  014328  0EFF               	movlw	255
 18403  01432A  22DA               	addwfc	fsr2h,f,c
 18404  01432C  500C               	movf	(btemp+11)^0,w,c
 18405  01432E  1ADF               	xorwf	indf2,f,c
 18406                           
 18407                           ;stkvar	_a @ sp[(-13)+-8]
 18408  014330  0EEE               	movlw	238
 18409  014332  24E1               	addwf	fsr1l,w,c
 18410  014334  6ED9               	movwf	fsr2l,c
 18411  014336  0EFF               	movlw	255
 18412  014338  20E2               	addwfc	fsr1h,w,c
 18413  01433A  6EDA               	movwf	fsr2h,c
 18414  01433C  50DF               	movf	indf2,w,c
 18415  01433E  6E0C               	movwf	(btemp+11)^0,c
 18416  014340  90D8               	bcf	status,0,c
 18417  014342  340C               	rlcf	(btemp+11)^0,w,c
 18418  014344  6E0B               	movwf	(btemp+10)^0,c
 18419                           
 18420                           ;stkvar	_aexp @ sp[(-13)+10]
 18421  014346  0EFD               	movlw	-3
 18422  014348  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18423                           
 18424                           ;stkvar	_a @ sp[(-13)+-8]
 18425  01434E  0EED               	movlw	237
 18426  014350  24E1               	addwf	fsr1l,w,c
 18427  014352  6ED9               	movwf	fsr2l,c
 18428  014354  0EFF               	movlw	255
 18429  014356  20E2               	addwfc	fsr1h,w,c
 18430  014358  6EDA               	movwf	fsr2h,c
 18431  01435A  AEDF               	btfss	indf2,7,c
 18432  01435C  D002               	goto	l7603
 18433                           
 18434                           ;stkvar	_aexp @ sp[(-13)+10]
 18435  01435E  0EFD               	movlw	-3
 18436  014360  80E3               	bsf	plusw1,0,c
 18437  014362                     l7603:
 18438                           
 18439                           ;stkvar	_aexp @ sp[(-13)+10]
 18440  014362  0EFD               	movlw	-3
 18441  014364  50E3               	movf	plusw1,w,c
 18442  014366  B4D8               	btfsc	status,2,c
 18443  014368  D027               	goto	l7613
 18444                           
 18445                           ;stkvar	_aexp @ sp[(-13)+10]
 18446  01436A  0EFD               	movlw	-3
 18447  01436C  28E3               	incf	plusw1,w,c
 18448  01436E  A4D8               	btfss	status,2,c
 18449  014370  D018               	goto	l7609
 18450  014372  0E00               	movlw	0
 18451  014374  6E09               	movwf	(btemp+8)^0,c
 18452  014376  0E00               	movlw	0
 18453  014378  6E0A               	movwf	(btemp+9)^0,c
 18454  01437A  0E00               	movlw	0
 18455  01437C  6E0B               	movwf	(btemp+10)^0,c
 18456  01437E  0E00               	movlw	0
 18457  014380  6E0C               	movwf	(btemp+11)^0,c
 18458                           
 18459                           ;stkvar	_a @ sp[(-13)+-8]
 18460  014382  0EEB               	movlw	-21
 18461  014384  0060  F027  FFE3   	movff	btemp+8,plusw1
 18462  01438A  0EEC               	movlw	-20
 18463  01438C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18464  014392  0EED               	movlw	-19
 18465  014394  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18466  01439A  0EEE               	movlw	-18
 18467  01439C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18468  0143A2                     l7609:
 18469                           
 18470                           ;stkvar	_a @ sp[(-13)+-8]
 18471  0143A2  0EED               	movlw	-19
 18472  0143A4  8EE3               	bsf	plusw1,7,c
 18473                           
 18474                           ;stkvar	_a @ sp[(-13)+-8]
 18475  0143A6  0EEE               	movlw	238
 18476  0143A8  24E1               	addwf	fsr1l,w,c
 18477  0143AA  6ED9               	movwf	fsr2l,c
 18478  0143AC  0EFF               	movlw	255
 18479  0143AE  20E2               	addwfc	fsr1h,w,c
 18480  0143B0  6EDA               	movwf	fsr2h,c
 18481  0143B2  0E00               	movlw	0
 18482  0143B4  6EDF               	movwf	indf2,c
 18483  0143B6  D018               	goto	l7615
 18484  0143B8                     l7613:
 18485  0143B8  0E00               	movlw	0
 18486  0143BA  6E09               	movwf	(btemp+8)^0,c
 18487  0143BC  0E00               	movlw	0
 18488  0143BE  6E0A               	movwf	(btemp+9)^0,c
 18489  0143C0  0E00               	movlw	0
 18490  0143C2  6E0B               	movwf	(btemp+10)^0,c
 18491  0143C4  0E00               	movlw	0
 18492  0143C6  6E0C               	movwf	(btemp+11)^0,c
 18493                           
 18494                           ;stkvar	_a @ sp[(-13)+-8]
 18495  0143C8  0EEB               	movlw	-21
 18496  0143CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 18497  0143D0  0EEC               	movlw	-20
 18498  0143D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18499  0143D8  0EED               	movlw	-19
 18500  0143DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18501  0143E0  0EEE               	movlw	-18
 18502  0143E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18503  0143E8                     l7615:
 18504                           
 18505                           ;stkvar	_a @ sp[(-13)+-8]
 18506  0143E8  0EEB               	movlw	-21
 18507  0143EA  50E3               	movf	plusw1,w,c
 18508  0143EC  E139               	bnz	l7627
 18509  0143EE  0EEC               	movlw	-20
 18510  0143F0  50E3               	movf	plusw1,w,c
 18511  0143F2  E136               	bnz	l7627
 18512  0143F4  0EED               	movlw	-19
 18513  0143F6  50E3               	movf	plusw1,w,c
 18514  0143F8  E133               	bnz	l7627
 18515  0143FA  0EEE               	movlw	-18
 18516  0143FC  50E3               	movf	plusw1,w,c
 18517  0143FE  A4D8               	btfss	status,2,c
 18518  014400  D02F               	goto	l7627
 18519                           
 18520                           ;stkvar	_b @ sp[(-13)+-4]
 18521  014402  0EEF               	movlw	-17
 18522  014404  6AE3               	clrf	plusw1,c
 18523  014406  0EF0               	movlw	-16
 18524  014408  6AE3               	clrf	plusw1,c
 18525  01440A  0EF1               	movlw	-15
 18526  01440C  6AE3               	clrf	plusw1,c
 18527  01440E  0EF2               	movlw	-14
 18528  014410  6AE3               	clrf	plusw1,c
 18529                           
 18530                           ;stkvar	_b @ sp[(-13)+-4]
 18531  014412  0EF1               	movlw	241
 18532  014414  24E1               	addwf	fsr1l,w,c
 18533  014416  6ED9               	movwf	fsr2l,c
 18534  014418  0EFF               	movlw	255
 18535  01441A  20E2               	addwfc	fsr1h,w,c
 18536  01441C  6EDA               	movwf	fsr2h,c
 18537  01441E  0E80               	movlw	128
 18538  014420  12DE               	iorwf	postinc2,f,c
 18539  014422  0E7F               	movlw	127
 18540  014424  12DD               	iorwf	postdec2,f,c
 18541  014426                     l7621:
 18542                           
 18543                           ;stkvar	_sign @ sp[(-13)+12]
 18544  014426  0EFF               	movlw	-1
 18545  014428  006F FF8C  F00C    	movff	plusw1,btemp+11
 18546                           
 18547                           ;stkvar	_b @ sp[(-13)+-4]
 18548  01442E  0EF2               	movlw	242
 18549  014430  24E1               	addwf	fsr1l,w,c
 18550  014432  6ED9               	movwf	fsr2l,c
 18551  014434  0EFF               	movlw	255
 18552  014436  20E2               	addwfc	fsr1h,w,c
 18553  014438  6EDA               	movwf	fsr2h,c
 18554  01443A  500C               	movf	(btemp+11)^0,w,c
 18555  01443C  12DF               	iorwf	indf2,f,c
 18556                           
 18557                           ;stkvar	_b @ sp[(-13)+-4]
 18558  01443E  0EEF               	movlw	-17
 18559  014440  006F FF8C  F001    	movff	plusw1,btemp
 18560  014446  0EF0               	movlw	-16
 18561  014448  006F FF8C  F002    	movff	plusw1,btemp+1
 18562  01444E  0EF1               	movlw	-15
 18563  014450  006F FF8C  F003    	movff	plusw1,btemp+2
 18564  014456  0EF2               	movlw	-14
 18565  014458  006F FF8C  F004    	movff	plusw1,btemp+3
 18566  01445E  D19F               	goto	l2852
 18567  014460                     l7627:
 18568                           
 18569                           ;stkvar	_bexp @ sp[(-13)+11]
 18570  014460  0EFE               	movlw	-2
 18571  014462  50E3               	movf	plusw1,w,c
 18572  014464  A4D8               	btfss	status,2,c
 18573  014466  D009               	goto	l7635
 18574  014468  0E00               	movlw	0
 18575  01446A  6E01               	movwf	btemp^0,c
 18576  01446C  0E00               	movlw	0
 18577  01446E  6E02               	movwf	(btemp+1)^0,c
 18578  014470  0E00               	movlw	0
 18579  014472  6E03               	movwf	(btemp+2)^0,c
 18580  014474  0E00               	movlw	0
 18581  014476  6E04               	movwf	(btemp+3)^0,c
 18582  014478  D192               	goto	l2852
 18583  01447A                     l7635:
 18584                           
 18585                           ;stkvar	_bexp @ sp[(-13)+11]
 18586  01447A  0EFE               	movlw	-2
 18587  01447C  50E3               	movf	plusw1,w,c
 18588  01447E  6E0B               	movwf	(btemp+10)^0,c
 18589  014480  6A0C               	clrf	(btemp+11)^0,c
 18590                           
 18591                           ;stkvar	_aexp @ sp[(-13)+10]
 18592  014482  0EFD               	movlw	-3
 18593  014484  50E3               	movf	plusw1,w,c
 18594  014486  5E0B               	subwf	(btemp+10)^0,f,c
 18595  014488  0E00               	movlw	0
 18596  01448A  5A0C               	subwfb	(btemp+11)^0,f,c
 18597  01448C  0E7F               	movlw	127
 18598  01448E  260B               	addwf	(btemp+10)^0,f,c
 18599  014490  0E00               	movlw	0
 18600  014492  220C               	addwfc	(btemp+11)^0,f,c
 18601                           
 18602                           ;stkvar	_new_exp @ sp[(-13)+8]
 18603  014494  0EFB               	movlw	-5
 18604  014496  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18605  01449C  0EFC               	movlw	-4
 18606  01449E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18607                           
 18608                           ;stkvar	_b @ sp[(-13)+-4]
 18609  0144A4  0EEF               	movlw	-17
 18610  0144A6  006F FF8C  F009    	movff	plusw1,btemp+8
 18611  0144AC  0EF0               	movlw	-16
 18612  0144AE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18613  0144B4  0EF1               	movlw	-15
 18614  0144B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18615  0144BC  0EF2               	movlw	-14
 18616  0144BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18617                           
 18618                           ;stkvar	_rem @ sp[(-13)+4]
 18619  0144C4  0EF7               	movlw	-9
 18620  0144C6  0060  F027  FFE3   	movff	btemp+8,plusw1
 18621  0144CC  0EF8               	movlw	-8
 18622  0144CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18623  0144D4  0EF9               	movlw	-7
 18624  0144D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18625  0144DC  0EFA               	movlw	-6
 18626  0144DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18627                           
 18628                           ;stkvar	_b @ sp[(-13)+-4]
 18629  0144E4  0EEF               	movlw	-17
 18630  0144E6  6AE3               	clrf	plusw1,c
 18631  0144E8  0EF0               	movlw	-16
 18632  0144EA  6AE3               	clrf	plusw1,c
 18633  0144EC  0EF1               	movlw	-15
 18634  0144EE  6AE3               	clrf	plusw1,c
 18635  0144F0  0EF2               	movlw	-14
 18636  0144F2  6AE3               	clrf	plusw1,c
 18637                           
 18638                           ;stkvar	_grs @ sp[(-13)+0]
 18639  0144F4  0EF3               	movlw	-13
 18640  0144F6  6AE3               	clrf	plusw1,c
 18641  0144F8  0EF4               	movlw	-12
 18642  0144FA  6AE3               	clrf	plusw1,c
 18643  0144FC  0EF5               	movlw	-11
 18644  0144FE  6AE3               	clrf	plusw1,c
 18645  014500  0EF6               	movlw	-10
 18646  014502  6AE3               	clrf	plusw1,c
 18647                           
 18648                           ;stkvar	_aexp @ sp[(-13)+10]
 18649  014504  0EFD               	movlw	-3
 18650  014506  6AE3               	clrf	plusw1,c
 18651  014508  D050               	goto	l7663
 18652  01450A                     l7645:
 18653                           
 18654                           ;stkvar	_aexp @ sp[(-13)+10]
 18655  01450A  0EFD               	movlw	-3
 18656  01450C  50E3               	movf	plusw1,w,c
 18657  01450E  B4D8               	btfsc	status,2,c
 18658  014510  D020               	goto	l7655
 18659                           
 18660                           ;stkvar	_rem @ sp[(-13)+4]
 18661  014512  90D8               	bcf	status,0,c
 18662  014514  0EF7               	movlw	-9
 18663  014516  36E3               	rlcf	plusw1,f,c
 18664  014518  0EF8               	movlw	-8
 18665  01451A  36E3               	rlcf	plusw1,f,c
 18666  01451C  0EF9               	movlw	-7
 18667  01451E  36E3               	rlcf	plusw1,f,c
 18668  014520  0EFA               	movlw	-6
 18669  014522  36E3               	rlcf	plusw1,f,c
 18670                           
 18671                           ;stkvar	_b @ sp[(-13)+-4]
 18672  014524  90D8               	bcf	status,0,c
 18673  014526  0EEF               	movlw	-17
 18674  014528  36E3               	rlcf	plusw1,f,c
 18675  01452A  0EF0               	movlw	-16
 18676  01452C  36E3               	rlcf	plusw1,f,c
 18677  01452E  0EF1               	movlw	-15
 18678  014530  36E3               	rlcf	plusw1,f,c
 18679  014532  0EF2               	movlw	-14
 18680  014534  36E3               	rlcf	plusw1,f,c
 18681                           
 18682                           ;stkvar	_grs @ sp[(-13)+0]
 18683  014536  0EF6               	movlw	-10
 18684  014538  AEE3               	btfss	plusw1,7,c
 18685  01453A  D002               	goto	l7653
 18686                           
 18687                           ;stkvar	_b @ sp[(-13)+-4]
 18688  01453C  0EEF               	movlw	-17
 18689  01453E  80E3               	bsf	plusw1,0,c
 18690  014540                     l7653:
 18691                           
 18692                           ;stkvar	_grs @ sp[(-13)+0]
 18693  014540  90D8               	bcf	status,0,c
 18694  014542  0EF3               	movlw	-13
 18695  014544  36E3               	rlcf	plusw1,f,c
 18696  014546  0EF4               	movlw	-12
 18697  014548  36E3               	rlcf	plusw1,f,c
 18698  01454A  0EF5               	movlw	-11
 18699  01454C  36E3               	rlcf	plusw1,f,c
 18700  01454E  0EF6               	movlw	-10
 18701  014550  36E3               	rlcf	plusw1,f,c
 18702  014552                     l7655:
 18703                           
 18704                           ;stkvar	_a @ sp[(-13)+-8]
 18705                           ;stkvar	_rem @ sp[(-13)+4]
 18706  014552  50E1               	movf	fsr1l,w,c
 18707  014554  0FF7               	addlw	-9
 18708  014556  6ED9               	movwf	fsr2l,c
 18709  014558  50E2               	movf	fsr1h,w,c
 18710  01455A  6EDA               	movwf	fsr2h,c
 18711  01455C  0EFF               	movlw	255
 18712  01455E  22DA               	addwfc	fsr2h,f,c
 18713  014560  0EEB               	movlw	-21
 18714  014562  50E3               	movf	plusw1,w,c
 18715  014564  5CDE               	subwf	postinc2,w,c
 18716  014566  0EEC               	movlw	-20
 18717  014568  50E3               	movf	plusw1,w,c
 18718  01456A  58DE               	subwfb	postinc2,w,c
 18719  01456C  0EED               	movlw	-19
 18720  01456E  50E3               	movf	plusw1,w,c
 18721  014570  58DE               	subwfb	postinc2,w,c
 18722  014572  0EEE               	movlw	-18
 18723  014574  50E3               	movf	plusw1,w,c
 18724  014576  58DE               	subwfb	postinc2,w,c
 18725  014578  A0D8               	btfss	status,0,c
 18726  01457A  D015               	goto	l7661
 18727                           
 18728                           ;stkvar	_grs @ sp[(-13)+0]
 18729  01457C  0EF6               	movlw	-10
 18730  01457E  8CE3               	bsf	plusw1,6,c
 18731                           
 18732                           ;stkvar	_a @ sp[(-13)+-8]
 18733                           ;stkvar	_rem @ sp[(-13)+4]
 18734  014580  50E1               	movf	fsr1l,w,c
 18735  014582  0FF7               	addlw	-9
 18736  014584  6ED9               	movwf	fsr2l,c
 18737  014586  50E2               	movf	fsr1h,w,c
 18738  014588  6EDA               	movwf	fsr2h,c
 18739  01458A  0EFF               	movlw	255
 18740  01458C  22DA               	addwfc	fsr2h,f,c
 18741  01458E  0EEB               	movlw	-21
 18742  014590  50E3               	movf	plusw1,w,c
 18743  014592  5EDE               	subwf	postinc2,f,c
 18744  014594  0EEC               	movlw	-20
 18745  014596  50E3               	movf	plusw1,w,c
 18746  014598  5ADE               	subwfb	postinc2,f,c
 18747  01459A  0EED               	movlw	-19
 18748  01459C  50E3               	movf	plusw1,w,c
 18749  01459E  5ADE               	subwfb	postinc2,f,c
 18750  0145A0  0EEE               	movlw	-18
 18751  0145A2  50E3               	movf	plusw1,w,c
 18752  0145A4  5ADE               	subwfb	postinc2,f,c
 18753  0145A6                     l7661:
 18754                           
 18755                           ;stkvar	_aexp @ sp[(-13)+10]
 18756  0145A6  0EFD               	movlw	-3
 18757  0145A8  2AE3               	incf	plusw1,f,c
 18758  0145AA                     l7663:
 18759                           
 18760                           ;stkvar	_aexp @ sp[(-13)+10]
 18761  0145AA  0EFD               	movlw	-3
 18762  0145AC  006F FF8C  F001    	movff	plusw1,btemp
 18763  0145B2  0E19               	movlw	25
 18764  0145B4  6401               	cpfsgt	btemp^0,c
 18765  0145B6  D7A9               	goto	l7645
 18766                           
 18767                           ;stkvar	_rem @ sp[(-13)+4]
 18768  0145B8  0EF7               	movlw	-9
 18769  0145BA  50E3               	movf	plusw1,w,c
 18770  0145BC  E10A               	bnz	u6180
 18771  0145BE  0EF8               	movlw	-8
 18772  0145C0  50E3               	movf	plusw1,w,c
 18773  0145C2  E107               	bnz	u6180
 18774  0145C4  0EF9               	movlw	-7
 18775  0145C6  50E3               	movf	plusw1,w,c
 18776  0145C8  E104               	bnz	u6180
 18777  0145CA  0EFA               	movlw	-6
 18778  0145CC  50E3               	movf	plusw1,w,c
 18779  0145CE  B4D8               	btfsc	status,2,c
 18780  0145D0  D024               	goto	l7679
 18781  0145D2                     u6180:
 18782                           
 18783                           ;stkvar	_grs @ sp[(-13)+0]
 18784  0145D2  0EF3               	movlw	-13
 18785  0145D4  80E3               	bsf	plusw1,0,c
 18786  0145D6  D021               	goto	l7679
 18787  0145D8                     l7669:
 18788                           
 18789                           ;stkvar	_b @ sp[(-13)+-4]
 18790  0145D8  90D8               	bcf	status,0,c
 18791  0145DA  0EEF               	movlw	-17
 18792  0145DC  36E3               	rlcf	plusw1,f,c
 18793  0145DE  0EF0               	movlw	-16
 18794  0145E0  36E3               	rlcf	plusw1,f,c
 18795  0145E2  0EF1               	movlw	-15
 18796  0145E4  36E3               	rlcf	plusw1,f,c
 18797  0145E6  0EF2               	movlw	-14
 18798  0145E8  36E3               	rlcf	plusw1,f,c
 18799                           
 18800                           ;stkvar	_grs @ sp[(-13)+0]
 18801  0145EA  0EF6               	movlw	-10
 18802  0145EC  AEE3               	btfss	plusw1,7,c
 18803  0145EE  D002               	goto	l7675
 18804                           
 18805                           ;stkvar	_b @ sp[(-13)+-4]
 18806  0145F0  0EEF               	movlw	-17
 18807  0145F2  80E3               	bsf	plusw1,0,c
 18808  0145F4                     l7675:
 18809                           
 18810                           ;stkvar	_grs @ sp[(-13)+0]
 18811  0145F4  90D8               	bcf	status,0,c
 18812  0145F6  0EF3               	movlw	-13
 18813  0145F8  36E3               	rlcf	plusw1,f,c
 18814  0145FA  0EF4               	movlw	-12
 18815  0145FC  36E3               	rlcf	plusw1,f,c
 18816  0145FE  0EF5               	movlw	-11
 18817  014600  36E3               	rlcf	plusw1,f,c
 18818  014602  0EF6               	movlw	-10
 18819  014604  36E3               	rlcf	plusw1,f,c
 18820                           
 18821                           ;stkvar	_new_exp @ sp[(-13)+8]
 18822  014606  50E1               	movf	fsr1l,w,c
 18823  014608  0FFB               	addlw	-5
 18824  01460A  6ED9               	movwf	fsr2l,c
 18825  01460C  50E2               	movf	fsr1h,w,c
 18826  01460E  6EDA               	movwf	fsr2h,c
 18827  014610  0EFF               	movlw	255
 18828  014612  22DA               	addwfc	fsr2h,f,c
 18829  014614  06DE               	decf	postinc2,f,c
 18830  014616  0E00               	movlw	0
 18831  014618  5ADD               	subwfb	postdec2,f,c
 18832  01461A                     l7679:
 18833                           
 18834                           ;stkvar	_b @ sp[(-13)+-4]
 18835  01461A  0EF1               	movlw	-15
 18836  01461C  AEE3               	btfss	plusw1,7,c
 18837  01461E  D7DC               	goto	l7669
 18838                           
 18839                           ;stkvar	_aexp @ sp[(-13)+10]
 18840  014620  0EFD               	movlw	-3
 18841  014622  6AE3               	clrf	plusw1,c
 18842                           
 18843                           ;stkvar	_grs @ sp[(-13)+0]
 18844  014624  0EF6               	movlw	-10
 18845  014626  AEE3               	btfss	plusw1,7,c
 18846  014628  D020               	goto	l7693
 18847                           
 18848                           ;stkvar	_grs @ sp[(-13)+0]
 18849  01462A  50E1               	movf	fsr1l,w,c
 18850  01462C  0FF3               	addlw	-13
 18851  01462E  6ED9               	movwf	fsr2l,c
 18852  014630  50E2               	movf	fsr1h,w,c
 18853  014632  6EDA               	movwf	fsr2h,c
 18854  014634  0EFF               	movlw	255
 18855  014636  22DA               	addwfc	fsr2h,f,c
 18856  014638  0EFF               	movlw	255
 18857  01463A  14DE               	andwf	postinc2,w,c
 18858  01463C  6E09               	movwf	(btemp+8)^0,c
 18859  01463E  0EFF               	movlw	255
 18860  014640  14DE               	andwf	postinc2,w,c
 18861  014642  6E0A               	movwf	(btemp+9)^0,c
 18862  014644  0EFF               	movlw	255
 18863  014646  14DE               	andwf	postinc2,w,c
 18864  014648  6E0B               	movwf	(btemp+10)^0,c
 18865  01464A  0E7F               	movlw	127
 18866  01464C  14DE               	andwf	postinc2,w,c
 18867  01464E  6E0C               	movwf	(btemp+11)^0,c
 18868  014650  5009               	movf	(btemp+8)^0,w,c
 18869  014652  100A               	iorwf	(btemp+9)^0,w,c
 18870  014654  100B               	iorwf	(btemp+10)^0,w,c
 18871  014656  100C               	iorwf	(btemp+11)^0,w,c
 18872  014658  B4D8               	btfsc	status,2,c
 18873  01465A  D004               	goto	l7689
 18874  01465C                     u6220:
 18875                           
 18876                           ;stkvar	_aexp @ sp[(-13)+10]
 18877  01465C  0EFD               	movlw	-3
 18878  01465E  6AE3               	clrf	plusw1,c
 18879  014660  2AE3               	incf	plusw1,f,c
 18880  014662  D003               	goto	l7693
 18881  014664                     l7689:
 18882                           
 18883                           ;stkvar	_b @ sp[(-13)+-4]
 18884  014664  0EEF               	movlw	-17
 18885  014666  B0E3               	btfsc	plusw1,0,c
 18886  014668  D7F9               	goto	u6220
 18887  01466A                     l7693:
 18888                           
 18889                           ;stkvar	_aexp @ sp[(-13)+10]
 18890  01466A  0EFD               	movlw	-3
 18891  01466C  50E3               	movf	plusw1,w,c
 18892  01466E  B4D8               	btfsc	status,2,c
 18893  014670  D036               	goto	l7703
 18894                           
 18895                           ;stkvar	_b @ sp[(-13)+-4]
 18896  014672  50E1               	movf	fsr1l,w,c
 18897  014674  0FEF               	addlw	-17
 18898  014676  6ED9               	movwf	fsr2l,c
 18899  014678  50E2               	movf	fsr1h,w,c
 18900  01467A  6EDA               	movwf	fsr2h,c
 18901  01467C  0EFF               	movlw	255
 18902  01467E  22DA               	addwfc	fsr2h,f,c
 18903  014680  2ADE               	incf	postinc2,f,c
 18904  014682  0E00               	movlw	0
 18905  014684  22DE               	addwfc	postinc2,f,c
 18906  014686  22DE               	addwfc	postinc2,f,c
 18907  014688  22DE               	addwfc	postinc2,f,c
 18908                           
 18909                           ;stkvar	_b @ sp[(-13)+-4]
 18910  01468A  0EF2               	movlw	-14
 18911  01468C  A0E3               	btfss	plusw1,0,c
 18912  01468E  D027               	goto	l7703
 18913  014690  0E01               	movlw	1
 18914  014692  6E0C               	movwf	(btemp+11)^0,c
 18915                           
 18916                           ;stkvar	_b @ sp[(-13)+-4]
 18917  014694  50E1               	movf	fsr1l,w,c
 18918  014696  0FEF               	addlw	-17
 18919  014698  6ED9               	movwf	fsr2l,c
 18920  01469A  50E2               	movf	fsr1h,w,c
 18921  01469C  6EDA               	movwf	fsr2h,c
 18922  01469E  0EFF               	movlw	255
 18923  0146A0  22DA               	addwfc	fsr2h,f,c
 18924  0146A2  280C               	incf	(btemp+11)^0,w,c
 18925  0146A4  52DE               	movf	postinc2,f,c
 18926  0146A6  D008               	goto	u6260
 18927  0146A8                     u6265:
 18928  0146A8  52DE               	movf	postinc2,f,c
 18929  0146AA  90D8               	bcf	status,0,c
 18930  0146AC  BEDC               	btfsc	preinc2,7,c
 18931  0146AE  80D8               	bsf	status,0,c
 18932  0146B0  32DD               	rrcf	postdec2,f,c
 18933  0146B2  32DD               	rrcf	postdec2,f,c
 18934  0146B4  32DD               	rrcf	postdec2,f,c
 18935  0146B6  32DE               	rrcf	postinc2,f,c
 18936  0146B8                     u6260:
 18937  0146B8  2EE8               	decfsz	wreg,f,c
 18938  0146BA  D7F6               	goto	u6265
 18939                           
 18940                           ;stkvar	_new_exp @ sp[(-13)+8]
 18941  0146BC  0EFB               	movlw	-5
 18942  0146BE  50E3               	movf	plusw1,w,c
 18943  0146C0  0F01               	addlw	1
 18944  0146C2  6E01               	movwf	btemp^0,c
 18945  0146C4  0EFB               	movlw	-5
 18946  0146C6  0060  F007  FFE3   	movff	btemp,plusw1
 18947  0146CC  6A01               	clrf	btemp^0,c
 18948  0146CE  0EFC               	movlw	-4
 18949  0146D0  50E3               	movf	plusw1,w,c
 18950  0146D2  2001               	addwfc	btemp^0,w,c
 18951  0146D4  6E01               	movwf	btemp^0,c
 18952  0146D6  0EFC               	movlw	-4
 18953  0146D8  0060  F007  FFE3   	movff	btemp,plusw1
 18954  0146DE                     l7703:
 18955                           
 18956                           ;stkvar	_new_exp @ sp[(-13)+8]
 18957  0146DE  0EFC               	movlw	-4
 18958  0146E0  BEE3               	btfsc	plusw1,7,c
 18959  0146E2  D01B               	goto	l7709
 18960  0146E4  0EFC               	movlw	-4
 18961  0146E6  50E3               	movf	plusw1,w,c
 18962  0146E8  E104               	bnz	u6270
 18963  0146EA  0EFB               	movlw	-5
 18964  0146EC  28E3               	incf	plusw1,w,c
 18965  0146EE  A0D8               	btfss	status,0,c
 18966  0146F0  D014               	goto	l7709
 18967  0146F2                     u6270:
 18968  0146F2  0EFF               	movlw	255
 18969  0146F4  6E0B               	movwf	(btemp+10)^0,c
 18970  0146F6  0E00               	movlw	0
 18971  0146F8  6E0C               	movwf	(btemp+11)^0,c
 18972                           
 18973                           ;stkvar	_new_exp @ sp[(-13)+8]
 18974  0146FA  0EFB               	movlw	-5
 18975  0146FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18976  014702  0EFC               	movlw	-4
 18977  014704  0060  F033  FFE3   	movff	btemp+11,plusw1
 18978                           
 18979                           ;stkvar	_b @ sp[(-13)+-4]
 18980  01470A  0EEF               	movlw	-17
 18981  01470C  6AE3               	clrf	plusw1,c
 18982  01470E  0EF0               	movlw	-16
 18983  014710  6AE3               	clrf	plusw1,c
 18984  014712  0EF1               	movlw	-15
 18985  014714  6AE3               	clrf	plusw1,c
 18986  014716  0EF2               	movlw	-14
 18987  014718  6AE3               	clrf	plusw1,c
 18988  01471A                     l7709:
 18989                           
 18990                           ;stkvar	_new_exp @ sp[(-13)+8]
 18991  01471A  0EFC               	movlw	-4
 18992  01471C  BEE3               	btfsc	plusw1,7,c
 18993  01471E  D007               	goto	u6280
 18994  014720  0EFC               	movlw	-4
 18995  014722  50E3               	movf	plusw1,w,c
 18996  014724  E112               	bnz	l7715
 18997  014726  0EFB               	movlw	-5
 18998  014728  04E3               	decf	plusw1,w,c
 18999  01472A  B0D8               	btfsc	status,0,c
 19000  01472C  D00E               	goto	l7715
 19001  01472E                     u6280:
 19002                           
 19003                           ;stkvar	_new_exp @ sp[(-13)+8]
 19004  01472E  0EFB               	movlw	-5
 19005  014730  6AE3               	clrf	plusw1,c
 19006  014732  0EFC               	movlw	-4
 19007  014734  6AE3               	clrf	plusw1,c
 19008                           
 19009                           ;stkvar	_b @ sp[(-13)+-4]
 19010  014736  0EEF               	movlw	-17
 19011  014738  6AE3               	clrf	plusw1,c
 19012  01473A  0EF0               	movlw	-16
 19013  01473C  6AE3               	clrf	plusw1,c
 19014  01473E  0EF1               	movlw	-15
 19015  014740  6AE3               	clrf	plusw1,c
 19016  014742  0EF2               	movlw	-14
 19017  014744  6AE3               	clrf	plusw1,c
 19018                           
 19019                           ;stkvar	_sign @ sp[(-13)+12]
 19020  014746  0EFF               	movlw	-1
 19021  014748  6AE3               	clrf	plusw1,c
 19022  01474A                     l7715:
 19023                           
 19024                           ;stkvar	_new_exp @ sp[(-13)+8]
 19025                           ;stkvar	_bexp @ sp[(-13)+11]
 19026  01474A  0EFB               	movlw	-5
 19027  01474C  006F FF8C  F001    	movff	plusw1,btemp
 19028  014752  0EFE               	movlw	-2
 19029  014754  0060  F007  FFE3   	movff	btemp,plusw1
 19030                           
 19031                           ;stkvar	_bexp @ sp[(-13)+11]
 19032  01475A  0EFE               	movlw	-2
 19033  01475C  A0E3               	btfss	plusw1,0,c
 19034  01475E  D009               	goto	l7721
 19035                           
 19036                           ;stkvar	_b @ sp[(-13)+-4]
 19037  014760  0EF1               	movlw	241
 19038  014762  24E1               	addwf	fsr1l,w,c
 19039  014764  6ED9               	movwf	fsr2l,c
 19040  014766  0EFF               	movlw	255
 19041  014768  20E2               	addwfc	fsr1h,w,c
 19042  01476A  6EDA               	movwf	fsr2h,c
 19043  01476C  0E00               	movlw	0
 19044  01476E  8EDB               	bsf	plusw2,7,c
 19045  014770  D008               	goto	l7723
 19046  014772                     l7721:
 19047                           
 19048                           ;stkvar	_b @ sp[(-13)+-4]
 19049  014772  0EF1               	movlw	241
 19050  014774  24E1               	addwf	fsr1l,w,c
 19051  014776  6ED9               	movwf	fsr2l,c
 19052  014778  0EFF               	movlw	255
 19053  01477A  20E2               	addwfc	fsr1h,w,c
 19054  01477C  6EDA               	movwf	fsr2h,c
 19055  01477E  0E7F               	movlw	127
 19056  014780  16DF               	andwf	indf2,f,c
 19057  014782                     l7723:
 19058                           
 19059                           ;stkvar	_b @ sp[(-13)+-4]
 19060  014782  0EF2               	movlw	242
 19061  014784  24E1               	addwf	fsr1l,w,c
 19062  014786  6ED9               	movwf	fsr2l,c
 19063  014788  0EFF               	movlw	255
 19064  01478A  20E2               	addwfc	fsr1h,w,c
 19065  01478C  6EDA               	movwf	fsr2h,c
 19066                           
 19067                           ;stkvar	_bexp @ sp[(-13)+11]
 19068  01478E  0EFE               	movlw	-2
 19069  014790  006F FF8C  F00C    	movff	plusw1,btemp+11
 19070  014796  90D8               	bcf	status,0,c
 19071  014798  300C               	rrcf	(btemp+11)^0,w,c
 19072  01479A  6EDF               	movwf	indf2,c
 19073  01479C  D644               	goto	l7621
 19074  01479E                     l2852:
 19075                           
 19076                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 19077  01479E  0EEB               	movlw	235
 19078  0147A0  26E1               	addwf	fsr1l,f,c
 19079  0147A2  0EFF               	movlw	255
 19080  0147A4  22E2               	addwfc	fsr1h,f,c
 19081  0147A6  0012               	return		;funcret
 19082  0147A8                     __end_of___fldiv:
 19083                           	opt callstack 0
 19084                           
 19085 ;; *************** function ___awmod *****************
 19086 ;; Defined at:
 19087 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19088 ;; Parameters:    Size  Location     Type
 19089 ;;  dividend        2  [STACK] int 
 19090 ;;  divisor         2  [STACK] int 
 19091 ;; Auto vars:     Size  Location     Type
 19092 ;;  sign            1  [STACK] unsigned char 
 19093 ;;  counter         1  [STACK] unsigned char 
 19094 ;; Return value:  Size  Location     Type
 19095 ;;                  2  [STACK] int 
 19096 ;; Registers used:
 19097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19098 ;; Tracked objects:
 19099 ;;		On entry : 0/0
 19100 ;;		On exit  : 0/0
 19101 ;;		Unchanged: 0/0
 19102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19107 ;;Total ram usage:        0 bytes
 19108 ;; Hardware stack levels used:    1
 19109 ;; Hardware stack levels required when called:   15
 19110 ;; This function calls:
 19111 ;;		Nothing
 19112 ;; This function is called by:
 19113 ;;		_efgtoa
 19114 ;; This function uses a reentrant model
 19115 ;;
 19116                           
 19117                           	psect	text66
 19118  0183BA                     __ptext66:
 19119                           	opt callstack 0
 19120  0183BA                     ___awmod:
 19121                           	opt callstack 0
 19122                           
 19123                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19124  0183BA  52E6               	movf	postinc1,f,c
 19125  0183BC  52E6               	movf	postinc1,f,c
 19126                           
 19127                           ;stkvar	_sign @ sp[(-2)+0]
 19128                           
 19129                           ;incstack = 0
 19130 ;; hardware stack exceeded
 19131  0183BE  0EFE               	movlw	-2
 19132  0183C0  6AE3               	clrf	plusw1,c
 19133                           
 19134                           ;stkvar	_dividend @ sp[(-2)+-2]
 19135  0183C2  0EFD               	movlw	-3
 19136  0183C4  AEE3               	btfss	plusw1,7,c
 19137  0183C6  D009               	goto	l7947
 19138                           
 19139                           ;stkvar	_dividend @ sp[(-2)+-2]
 19140                           ;stkvar	_dividend @ sp[(-2)+-2]
 19141  0183C8  0EFC               	movlw	-4
 19142  0183CA  6CE3               	negf	plusw1,c
 19143  0183CC  0EFD               	movlw	-3
 19144  0183CE  1EE3               	comf	plusw1,f,c
 19145  0183D0  B0D8               	btfsc	status,0,c
 19146  0183D2  2AE3               	incf	plusw1,f,c
 19147                           
 19148                           ;stkvar	_sign @ sp[(-2)+0]
 19149  0183D4  0EFE               	movlw	-2
 19150  0183D6  6AE3               	clrf	plusw1,c
 19151  0183D8  2AE3               	incf	plusw1,f,c
 19152  0183DA                     l7947:
 19153                           
 19154                           ;stkvar	_divisor @ sp[(-2)+-4]
 19155  0183DA  0EFB               	movlw	-5
 19156  0183DC  AEE3               	btfss	plusw1,7,c
 19157  0183DE  D006               	goto	l7951
 19158                           
 19159                           ;stkvar	_divisor @ sp[(-2)+-4]
 19160                           ;stkvar	_divisor @ sp[(-2)+-4]
 19161  0183E0  0EFA               	movlw	-6
 19162  0183E2  6CE3               	negf	plusw1,c
 19163  0183E4  0EFB               	movlw	-5
 19164  0183E6  1EE3               	comf	plusw1,f,c
 19165  0183E8  B0D8               	btfsc	status,0,c
 19166  0183EA  2AE3               	incf	plusw1,f,c
 19167  0183EC                     l7951:
 19168                           
 19169                           ;stkvar	_divisor @ sp[(-2)+-4]
 19170  0183EC  0EFA               	movlw	-6
 19171  0183EE  006F FF8C  F001    	movff	plusw1,btemp
 19172  0183F4  0EFB               	movlw	-5
 19173  0183F6  50E3               	movf	plusw1,w,c
 19174  0183F8  1001               	iorwf	btemp^0,w,c
 19175  0183FA  B4D8               	btfsc	status,2,c
 19176  0183FC  D053               	goto	u6640
 19177                           
 19178                           ;stkvar	_counter @ sp[(-2)+1]
 19179  0183FE  0EFF               	movlw	-1
 19180  018400  6AE3               	clrf	plusw1,c
 19181  018402  D012               	goto	L19
 19182  018404                     l7955:
 19183                           
 19184                           ;stkvar	_divisor @ sp[(-2)+-4]
 19185  018404  0EFA               	movlw	-6
 19186  018406  50E3               	movf	plusw1,w,c
 19187  018408  90D8               	bcf	status,0,c
 19188  01840A  34E8               	rlcf	wreg,w,c
 19189  01840C  6E01               	movwf	btemp^0,c
 19190  01840E  0EFA               	movlw	-6
 19191  018410  0060  F007  FFE3   	movff	btemp,plusw1
 19192  018416  0EFB               	movlw	-5
 19193  018418  50E3               	movf	plusw1,w,c
 19194  01841A  34E8               	rlcf	wreg,w,c
 19195  01841C  6E01               	movwf	btemp^0,c
 19196  01841E  0EFB               	movlw	-5
 19197  018420  0060  F007  FFE3   	movff	btemp,plusw1
 19198                           
 19199                           ;stkvar	_counter @ sp[(-2)+1]
 19200  018426  0EFF               	movlw	-1
 19201  018428                     L19:
 19202  018428  2AE3               	incf	plusw1,f,c
 19203                           
 19204                           ;stkvar	_divisor @ sp[(-2)+-4]
 19205  01842A  0EFB               	movlw	-5
 19206  01842C  AEE3               	btfss	plusw1,7,c
 19207  01842E  D7EA               	goto	l7955
 19208  018430                     u6620:
 19209                           
 19210                           ;stkvar	_divisor @ sp[(-2)+-4]
 19211  018430  0EFA               	movlw	-6
 19212  018432  006F FF8C  F00B    	movff	plusw1,btemp+10
 19213  018438  0EFB               	movlw	-5
 19214  01843A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19215                           
 19216                           ;stkvar	_dividend @ sp[(-2)+-2]
 19217  018440  0EFC               	movlw	-4
 19218  018442  006F FF8C  F009    	movff	plusw1,btemp+8
 19219  018448  0EFD               	movlw	-3
 19220  01844A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19221  018450  500B               	movf	(btemp+10)^0,w,c
 19222  018452  5C09               	subwf	(btemp+8)^0,w,c
 19223  018454  500C               	movf	(btemp+11)^0,w,c
 19224  018456  580A               	subwfb	(btemp+9)^0,w,c
 19225  018458  A0D8               	btfss	status,0,c
 19226  01845A  D014               	goto	l7965
 19227                           
 19228                           ;stkvar	_divisor @ sp[(-2)+-4]
 19229                           ;stkvar	_dividend @ sp[(-2)+-2]
 19230  01845C  0EFC               	movlw	-4
 19231  01845E  50E3               	movf	plusw1,w,c
 19232  018460  6E01               	movwf	btemp^0,c
 19233  018462  0EFA               	movlw	-6
 19234  018464  50E3               	movf	plusw1,w,c
 19235  018466  5E01               	subwf	btemp^0,f,c
 19236  018468  0EFC               	movlw	-4
 19237  01846A  0060  F007  FFE3   	movff	btemp,plusw1
 19238  018470  0EFD               	movlw	-3
 19239  018472  50E3               	movf	plusw1,w,c
 19240  018474  6E01               	movwf	btemp^0,c
 19241  018476  0EFB               	movlw	-5
 19242  018478  50E3               	movf	plusw1,w,c
 19243  01847A  5A01               	subwfb	btemp^0,f,c
 19244  01847C  0EFD               	movlw	-3
 19245  01847E  0060  F007  FFE3   	movff	btemp,plusw1
 19246  018484                     l7965:
 19247                           
 19248                           ;stkvar	_divisor @ sp[(-2)+-4]
 19249  018484  90D8               	bcf	status,0,c
 19250  018486  0EFB               	movlw	-5
 19251  018488  32E3               	rrcf	plusw1,f,c
 19252  01848A  0EFA               	movlw	-6
 19253  01848C  32E3               	rrcf	plusw1,f,c
 19254                           
 19255                           ;stkvar	_counter @ sp[(-2)+1]
 19256  01848E  0EFF               	movlw	-1
 19257  018490  50E3               	movf	plusw1,w,c
 19258  018492  6E01               	movwf	btemp^0,c
 19259  018494  0E01               	movlw	1
 19260  018496  5E01               	subwf	btemp^0,f,c
 19261  018498  0EFF               	movlw	-1
 19262  01849A  0060  F007  FFE3   	movff	btemp,plusw1
 19263  0184A0  A4D8               	btfss	status,2,c
 19264  0184A2  D7C6               	goto	u6620
 19265  0184A4                     u6640:
 19266                           
 19267                           ;stkvar	_sign @ sp[(-2)+0]
 19268  0184A4  0EFE               	movlw	-2
 19269  0184A6  50E3               	movf	plusw1,w,c
 19270  0184A8  B4D8               	btfsc	status,2,c
 19271  0184AA  D006               	goto	l7973
 19272                           
 19273                           ;stkvar	_dividend @ sp[(-2)+-2]
 19274                           ;stkvar	_dividend @ sp[(-2)+-2]
 19275  0184AC  0EFC               	movlw	-4
 19276  0184AE  6CE3               	negf	plusw1,c
 19277  0184B0  0EFD               	movlw	-3
 19278  0184B2  1EE3               	comf	plusw1,f,c
 19279  0184B4  B0D8               	btfsc	status,0,c
 19280  0184B6  2AE3               	incf	plusw1,f,c
 19281  0184B8                     l7973:
 19282                           
 19283                           ;stkvar	_dividend @ sp[(-2)+-2]
 19284  0184B8  0EFC               	movlw	-4
 19285  0184BA  006F FF8C  F001    	movff	plusw1,btemp
 19286  0184C0  0EFD               	movlw	-3
 19287  0184C2  006F FF8C  F002    	movff	plusw1,btemp+1
 19288                           
 19289                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19290  0184C8  0EFA               	movlw	250
 19291  0184CA  26E1               	addwf	fsr1l,f,c
 19292  0184CC  0EFF               	movlw	255
 19293  0184CE  22E2               	addwfc	fsr1h,f,c
 19294  0184D0  0012               	return		;funcret
 19295  0184D2                     __end_of___awmod:
 19296                           	opt callstack 0
 19297                           
 19298 ;; *************** function ___awdiv *****************
 19299 ;; Defined at:
 19300 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19301 ;; Parameters:    Size  Location     Type
 19302 ;;  dividend        2  [STACK] int 
 19303 ;;  divisor         2  [STACK] int 
 19304 ;; Auto vars:     Size  Location     Type
 19305 ;;  quotient        2  [STACK] int 
 19306 ;;  sign            1  [STACK] unsigned char 
 19307 ;;  counter         1  [STACK] unsigned char 
 19308 ;; Return value:  Size  Location     Type
 19309 ;;                  2  [STACK] int 
 19310 ;; Registers used:
 19311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19312 ;; Tracked objects:
 19313 ;;		On entry : 0/0
 19314 ;;		On exit  : 0/0
 19315 ;;		Unchanged: 0/0
 19316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19321 ;;Total ram usage:        0 bytes
 19322 ;; Hardware stack levels used:    1
 19323 ;; Hardware stack levels required when called:   15
 19324 ;; This function calls:
 19325 ;;		Nothing
 19326 ;; This function is called by:
 19327 ;;		_efgtoa
 19328 ;; This function uses a reentrant model
 19329 ;;
 19330                           
 19331                           	psect	text67
 19332  017DB2                     __ptext67:
 19333                           	opt callstack 0
 19334  017DB2                     ___awdiv:
 19335                           	opt callstack 0
 19336                           
 19337                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19338  017DB2  52E6               	movf	postinc1,f,c
 19339  017DB4  52E6               	movf	postinc1,f,c
 19340  017DB6  52E6               	movf	postinc1,f,c
 19341  017DB8  52E6               	movf	postinc1,f,c
 19342                           
 19343                           ;stkvar	_sign @ sp[(-4)+2]
 19344                           
 19345                           ;incstack = 0
 19346 ;; hardware stack exceeded
 19347  017DBA  0EFE               	movlw	-2
 19348  017DBC  6AE3               	clrf	plusw1,c
 19349                           
 19350                           ;stkvar	_divisor @ sp[(-4)+-4]
 19351  017DBE  0EF9               	movlw	-7
 19352  017DC0  AEE3               	btfss	plusw1,7,c
 19353  017DC2  D009               	goto	l7901
 19354                           
 19355                           ;stkvar	_divisor @ sp[(-4)+-4]
 19356                           ;stkvar	_divisor @ sp[(-4)+-4]
 19357  017DC4  0EF8               	movlw	-8
 19358  017DC6  6CE3               	negf	plusw1,c
 19359  017DC8  0EF9               	movlw	-7
 19360  017DCA  1EE3               	comf	plusw1,f,c
 19361  017DCC  B0D8               	btfsc	status,0,c
 19362  017DCE  2AE3               	incf	plusw1,f,c
 19363                           
 19364                           ;stkvar	_sign @ sp[(-4)+2]
 19365  017DD0  0EFE               	movlw	-2
 19366  017DD2  6AE3               	clrf	plusw1,c
 19367  017DD4  2AE3               	incf	plusw1,f,c
 19368  017DD6                     l7901:
 19369                           
 19370                           ;stkvar	_dividend @ sp[(-4)+-2]
 19371  017DD6  0EFB               	movlw	-5
 19372  017DD8  AEE3               	btfss	plusw1,7,c
 19373  017DDA  D008               	goto	l7907
 19374                           
 19375                           ;stkvar	_dividend @ sp[(-4)+-2]
 19376                           ;stkvar	_dividend @ sp[(-4)+-2]
 19377  017DDC  0EFA               	movlw	-6
 19378  017DDE  6CE3               	negf	plusw1,c
 19379  017DE0  0EFB               	movlw	-5
 19380  017DE2  1EE3               	comf	plusw1,f,c
 19381  017DE4  B0D8               	btfsc	status,0,c
 19382  017DE6  2AE3               	incf	plusw1,f,c
 19383                           
 19384                           ;stkvar	_sign @ sp[(-4)+2]
 19385  017DE8  0EFE               	movlw	-2
 19386  017DEA  70E3               	btg	plusw1,0,c
 19387  017DEC                     l7907:
 19388                           
 19389                           ;stkvar	_quotient @ sp[(-4)+0]
 19390  017DEC  0EFC               	movlw	-4
 19391  017DEE  6AE3               	clrf	plusw1,c
 19392  017DF0  0EFD               	movlw	-3
 19393  017DF2  6AE3               	clrf	plusw1,c
 19394                           
 19395                           ;stkvar	_divisor @ sp[(-4)+-4]
 19396  017DF4  0EF8               	movlw	-8
 19397  017DF6  006F FF8C  F001    	movff	plusw1,btemp
 19398  017DFC  0EF9               	movlw	-7
 19399  017DFE  50E3               	movf	plusw1,w,c
 19400  017E00  1001               	iorwf	btemp^0,w,c
 19401  017E02  B4D8               	btfsc	status,2,c
 19402  017E04  D066               	goto	u6570
 19403                           
 19404                           ;stkvar	_counter @ sp[(-4)+3]
 19405  017E06  0EFF               	movlw	-1
 19406  017E08  6AE3               	clrf	plusw1,c
 19407  017E0A  D012               	goto	L20
 19408  017E0C                     l7913:
 19409                           
 19410                           ;stkvar	_divisor @ sp[(-4)+-4]
 19411  017E0C  0EF8               	movlw	-8
 19412  017E0E  50E3               	movf	plusw1,w,c
 19413  017E10  90D8               	bcf	status,0,c
 19414  017E12  34E8               	rlcf	wreg,w,c
 19415  017E14  6E01               	movwf	btemp^0,c
 19416  017E16  0EF8               	movlw	-8
 19417  017E18  0060  F007  FFE3   	movff	btemp,plusw1
 19418  017E1E  0EF9               	movlw	-7
 19419  017E20  50E3               	movf	plusw1,w,c
 19420  017E22  34E8               	rlcf	wreg,w,c
 19421  017E24  6E01               	movwf	btemp^0,c
 19422  017E26  0EF9               	movlw	-7
 19423  017E28  0060  F007  FFE3   	movff	btemp,plusw1
 19424                           
 19425                           ;stkvar	_counter @ sp[(-4)+3]
 19426  017E2E  0EFF               	movlw	-1
 19427  017E30                     L20:
 19428  017E30  2AE3               	incf	plusw1,f,c
 19429                           
 19430                           ;stkvar	_divisor @ sp[(-4)+-4]
 19431  017E32  0EF9               	movlw	-7
 19432  017E34  AEE3               	btfss	plusw1,7,c
 19433  017E36  D7EA               	goto	l7913
 19434  017E38                     u6550:
 19435                           
 19436                           ;stkvar	_quotient @ sp[(-4)+0]
 19437  017E38  0EFC               	movlw	-4
 19438  017E3A  50E3               	movf	plusw1,w,c
 19439  017E3C  90D8               	bcf	status,0,c
 19440  017E3E  34E8               	rlcf	wreg,w,c
 19441  017E40  6E01               	movwf	btemp^0,c
 19442  017E42  0EFC               	movlw	-4
 19443  017E44  0060  F007  FFE3   	movff	btemp,plusw1
 19444  017E4A  0EFD               	movlw	-3
 19445  017E4C  50E3               	movf	plusw1,w,c
 19446  017E4E  34E8               	rlcf	wreg,w,c
 19447  017E50  6E01               	movwf	btemp^0,c
 19448  017E52  0EFD               	movlw	-3
 19449  017E54  0060  F007  FFE3   	movff	btemp,plusw1
 19450                           
 19451                           ;stkvar	_divisor @ sp[(-4)+-4]
 19452  017E5A  0EF8               	movlw	-8
 19453  017E5C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19454  017E62  0EF9               	movlw	-7
 19455  017E64  006F FF8C  F00C    	movff	plusw1,btemp+11
 19456                           
 19457                           ;stkvar	_dividend @ sp[(-4)+-2]
 19458  017E6A  0EFA               	movlw	-6
 19459  017E6C  006F FF8C  F009    	movff	plusw1,btemp+8
 19460  017E72  0EFB               	movlw	-5
 19461  017E74  006F FF8C  F00A    	movff	plusw1,btemp+9
 19462  017E7A  500B               	movf	(btemp+10)^0,w,c
 19463  017E7C  5C09               	subwf	(btemp+8)^0,w,c
 19464  017E7E  500C               	movf	(btemp+11)^0,w,c
 19465  017E80  580A               	subwfb	(btemp+9)^0,w,c
 19466  017E82  A0D8               	btfss	status,0,c
 19467  017E84  D016               	goto	l7927
 19468                           
 19469                           ;stkvar	_divisor @ sp[(-4)+-4]
 19470                           ;stkvar	_dividend @ sp[(-4)+-2]
 19471  017E86  0EFA               	movlw	-6
 19472  017E88  50E3               	movf	plusw1,w,c
 19473  017E8A  6E01               	movwf	btemp^0,c
 19474  017E8C  0EF8               	movlw	-8
 19475  017E8E  50E3               	movf	plusw1,w,c
 19476  017E90  5E01               	subwf	btemp^0,f,c
 19477  017E92  0EFA               	movlw	-6
 19478  017E94  0060  F007  FFE3   	movff	btemp,plusw1
 19479  017E9A  0EFB               	movlw	-5
 19480  017E9C  50E3               	movf	plusw1,w,c
 19481  017E9E  6E01               	movwf	btemp^0,c
 19482  017EA0  0EF9               	movlw	-7
 19483  017EA2  50E3               	movf	plusw1,w,c
 19484  017EA4  5A01               	subwfb	btemp^0,f,c
 19485  017EA6  0EFB               	movlw	-5
 19486  017EA8  0060  F007  FFE3   	movff	btemp,plusw1
 19487                           
 19488                           ;stkvar	_quotient @ sp[(-4)+0]
 19489  017EAE  0EFC               	movlw	-4
 19490  017EB0  80E3               	bsf	plusw1,0,c
 19491  017EB2                     l7927:
 19492                           
 19493                           ;stkvar	_divisor @ sp[(-4)+-4]
 19494  017EB2  90D8               	bcf	status,0,c
 19495  017EB4  0EF9               	movlw	-7
 19496  017EB6  32E3               	rrcf	plusw1,f,c
 19497  017EB8  0EF8               	movlw	-8
 19498  017EBA  32E3               	rrcf	plusw1,f,c
 19499                           
 19500                           ;stkvar	_counter @ sp[(-4)+3]
 19501  017EBC  0EFF               	movlw	-1
 19502  017EBE  50E3               	movf	plusw1,w,c
 19503  017EC0  6E01               	movwf	btemp^0,c
 19504  017EC2  0E01               	movlw	1
 19505  017EC4  5E01               	subwf	btemp^0,f,c
 19506  017EC6  0EFF               	movlw	-1
 19507  017EC8  0060  F007  FFE3   	movff	btemp,plusw1
 19508  017ECE  A4D8               	btfss	status,2,c
 19509  017ED0  D7B3               	goto	u6550
 19510  017ED2                     u6570:
 19511                           
 19512                           ;stkvar	_sign @ sp[(-4)+2]
 19513  017ED2  0EFE               	movlw	-2
 19514  017ED4  50E3               	movf	plusw1,w,c
 19515  017ED6  B4D8               	btfsc	status,2,c
 19516  017ED8  D006               	goto	l7935
 19517                           
 19518                           ;stkvar	_quotient @ sp[(-4)+0]
 19519                           ;stkvar	_quotient @ sp[(-4)+0]
 19520  017EDA  0EFC               	movlw	-4
 19521  017EDC  6CE3               	negf	plusw1,c
 19522  017EDE  0EFD               	movlw	-3
 19523  017EE0  1EE3               	comf	plusw1,f,c
 19524  017EE2  B0D8               	btfsc	status,0,c
 19525  017EE4  2AE3               	incf	plusw1,f,c
 19526  017EE6                     l7935:
 19527                           
 19528                           ;stkvar	_quotient @ sp[(-4)+0]
 19529  017EE6  0EFC               	movlw	-4
 19530  017EE8  006F FF8C  F001    	movff	plusw1,btemp
 19531  017EEE  0EFD               	movlw	-3
 19532  017EF0  006F FF8C  F002    	movff	plusw1,btemp+1
 19533                           
 19534                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19535  017EF6  0EF8               	movlw	248
 19536  017EF8  26E1               	addwf	fsr1l,f,c
 19537  017EFA  0EFF               	movlw	255
 19538  017EFC  22E2               	addwfc	fsr1h,f,c
 19539  017EFE  0012               	return		;funcret
 19540  017F00                     __end_of___awdiv:
 19541                           	opt callstack 0
 19542                           
 19543 ;; *************** function _dtoa *****************
 19544 ;; Defined at:
 19545 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19546 ;; Parameters:    Size  Location     Type
 19547 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19548 ;;		 -> f(6), NULL(0), 
 19549 ;;  d               8  [STACK] long long 
 19550 ;; Auto vars:     Size  Location     Type
 19551 ;;  n               8  [STACK] long long 
 19552 ;;  i               2  [STACK] int 
 19553 ;;  s               2  [STACK] int 
 19554 ;;  w               2  [STACK] int 
 19555 ;;  p               2  [STACK] int 
 19556 ;; Return value:  Size  Location     Type
 19557 ;;                  2  [STACK] int 
 19558 ;; Registers used:
 19559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19560 ;; Tracked objects:
 19561 ;;		On entry : 0/0
 19562 ;;		On exit  : 0/0
 19563 ;;		Unchanged: 0/0
 19564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19569 ;;Total ram usage:        0 bytes
 19570 ;; Hardware stack levels used:    1
 19571 ;; Hardware stack levels required when called:   20
 19572 ;; This function calls:
 19573 ;;		___aodiv
 19574 ;;		___aomod
 19575 ;;		_abs
 19576 ;;		_pad
 19577 ;; This function is called by:
 19578 ;;		_vfpfcnvrt
 19579 ;; This function uses a reentrant model
 19580 ;;
 19581                           
 19582                           	psect	text68
 19583  014C54                     __ptext68:
 19584                           	opt callstack 0
 19585  014C54                     _dtoa:
 19586                           	opt callstack 0
 19587                           
 19588                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19589  014C54  0E12               	movlw	18
 19590  014C56  26E1               	addwf	fsr1l,f,c
 19591  014C58  0E00               	movlw	0
 19592  014C5A  22E2               	addwfc	fsr1h,f,c
 19593                           
 19594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19595                           ;stkvar	_d @ sp[(-18)+-10]
 19596                           
 19597                           ;incstack = 0
 19598 ;; hardware stack exceeded
 19599  014C5C  0EE4               	movlw	228
 19600  014C5E  24E1               	addwf	fsr1l,w,c
 19601  014C60  6ED9               	movwf	fsr2l,c
 19602  014C62  0EFF               	movlw	255
 19603  014C64  20E2               	addwfc	fsr1h,w,c
 19604  014C66  6EDA               	movwf	fsr2h,c
 19605                           
 19606                           ;stkvar	_n @ sp[(-18)+2]
 19607  014C68  0E08               	movlw	8
 19608  014C6A  6E01               	movwf	btemp^0,c
 19609  014C6C  0EF0               	movlw	-16
 19610  014C6E                     us1008999:
 19611  014C6E  006F FF7B FFE3     	movff	postinc2,plusw1
 19612  014C74  28E8               	incf	wreg,w,c
 19613  014C76  2E01               	decfsz	btemp^0,f,c
 19614  014C78  D7FA               	bra	us1008999
 19615                           
 19616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19617                           ;stkvar	_n @ sp[(-18)+2]
 19618  014C7A  0EF7               	movlw	-9
 19619  014C7C  AEE3               	btfss	plusw1,7,c
 19620  014C7E  D002               	goto	u10090
 19621  014C80  0E01               	movlw	1
 19622  014C82  D001               	goto	u10100
 19623  014C84                     u10090:
 19624  014C84  0E00               	movlw	0
 19625  014C86                     u10100:
 19626  014C86  6E0B               	movwf	(btemp+10)^0,c
 19627  014C88  6A0C               	clrf	(btemp+11)^0,c
 19628                           
 19629                           ;stkvar	_s @ sp[(-18)+12]
 19630  014C8A  0EFA               	movlw	-6
 19631  014C8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19632  014C92  0EFB               	movlw	-5
 19633  014C94  0060  F033  FFE3   	movff	btemp+11,plusw1
 19634                           
 19635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19636                           ;stkvar	_s @ sp[(-18)+12]
 19637  014C9A  0EFA               	movlw	-6
 19638  014C9C  006F FF8C  F001    	movff	plusw1,btemp
 19639  014CA2  0EFB               	movlw	-5
 19640  014CA4  50E3               	movf	plusw1,w,c
 19641  014CA6  1001               	iorwf	btemp^0,w,c
 19642  014CA8  B4D8               	btfsc	status,2,c
 19643  014CAA  D025               	goto	u10120
 19644                           
 19645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19646                           ;stkvar	_n @ sp[(-18)+2]
 19647                           ;stkvar	_n @ sp[(-18)+2]
 19648  014CAC  0EF0               	movlw	-16
 19649  014CAE  6CE3               	negf	plusw1,c
 19650  014CB0  0EF1               	movlw	-15
 19651  014CB2  1EE3               	comf	plusw1,f,c
 19652  014CB4  0EF2               	movlw	-14
 19653  014CB6  1EE3               	comf	plusw1,f,c
 19654  014CB8  0EF3               	movlw	-13
 19655  014CBA  1EE3               	comf	plusw1,f,c
 19656  014CBC  0EF4               	movlw	-12
 19657  014CBE  1EE3               	comf	plusw1,f,c
 19658  014CC0  0EF5               	movlw	-11
 19659  014CC2  1EE3               	comf	plusw1,f,c
 19660  014CC4  0EF6               	movlw	-10
 19661  014CC6  1EE3               	comf	plusw1,f,c
 19662  014CC8  0EF7               	movlw	-9
 19663  014CCA  1EE3               	comf	plusw1,f,c
 19664  014CCC  E314               	bnc	u10120
 19665  014CCE  0EF1               	movlw	-15
 19666  014CD0  2AE3               	incf	plusw1,f,c
 19667  014CD2  E311               	bnc	u10120
 19668  014CD4  0EF2               	movlw	-14
 19669  014CD6  2AE3               	incf	plusw1,f,c
 19670  014CD8  E30E               	bnc	u10120
 19671  014CDA  0EF3               	movlw	-13
 19672  014CDC  2AE3               	incf	plusw1,f,c
 19673  014CDE  E30B               	bnc	u10120
 19674  014CE0  0EF4               	movlw	-12
 19675  014CE2  2AE3               	incf	plusw1,f,c
 19676  014CE4  E308               	bnc	u10120
 19677  014CE6  0EF5               	movlw	-11
 19678  014CE8  2AE3               	incf	plusw1,f,c
 19679  014CEA  E305               	bnc	u10120
 19680  014CEC  0EF6               	movlw	-10
 19681  014CEE  2AE3               	incf	plusw1,f,c
 19682  014CF0  E302               	bnc	u10120
 19683  014CF2  0EF7               	movlw	-9
 19684  014CF4  2AE3               	incf	plusw1,f,c
 19685  014CF6                     u10120:
 19686                           
 19687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19688  014CF6  AE24               	btfss	(_prec+1)^0,7,c
 19689                           
 19690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19691  014CF8  9225               	bcf	_flags^0,1,c
 19692                           
 19693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19694  014CFA  BE24               	btfsc	(_prec+1)^0,7,c
 19695  014CFC  D005               	goto	u10140
 19696  014CFE  5024               	movf	(_prec+1)^0,w,c
 19697  014D00  E110               	bnz	l10945
 19698  014D02  0423               	decf	_prec^0,w,c
 19699  014D04  B0D8               	btfsc	status,0,c
 19700  014D06  D00D               	goto	l10945
 19701  014D08                     u10140:
 19702  014D08  0E01               	movlw	1
 19703  014D0A  6E0B               	movwf	(btemp+10)^0,c
 19704  014D0C  0E00               	movlw	0
 19705  014D0E  6E0C               	movwf	(btemp+11)^0,c
 19706                           
 19707                           ;stkvar	_p @ sp[(-18)+16]
 19708  014D10  0EFE               	movlw	-2
 19709  014D12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19710  014D18  0EFF               	movlw	-1
 19711  014D1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 19712  014D20  D008               	goto	l2033
 19713  014D22                     l10945:
 19714                           
 19715                           ;stkvar	_p @ sp[(-18)+16]
 19716  014D22  0EFE               	movlw	-2
 19717  014D24  0060  F08F  FFE3   	movff	_prec,plusw1
 19718  014D2A  0EFF               	movlw	-1
 19719  014D2C  0060  F093  FFE3   	movff	_prec+1,plusw1
 19720  014D32                     l2033:
 19721                           
 19722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19723                           ;stkvar	_w @ sp[(-18)+14]
 19724  014D32  0EFC               	movlw	-4
 19725  014D34  0060  F087  FFE3   	movff	_width,plusw1
 19726  014D3A  0EFD               	movlw	-3
 19727  014D3C  0060  F08B  FFE3   	movff	_width+1,plusw1
 19728                           
 19729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19730                           ;stkvar	_s @ sp[(-18)+12]
 19731  014D42  0EFA               	movlw	-6
 19732  014D44  006F FF8C  F001    	movff	plusw1,btemp
 19733  014D4A  0EFB               	movlw	-5
 19734  014D4C  50E3               	movf	plusw1,w,c
 19735  014D4E  1001               	iorwf	btemp^0,w,c
 19736  014D50  A4D8               	btfss	status,2,c
 19737  014D52  D002               	goto	u10160
 19738  014D54  A425               	btfss	_flags^0,2,c
 19739  014D56  D00A               	goto	l10953
 19740  014D58                     u10160:
 19741                           
 19742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19743                           ;stkvar	_w @ sp[(-18)+14]
 19744  014D58  50E1               	movf	fsr1l,w,c
 19745  014D5A  0FFC               	addlw	-4
 19746  014D5C  6ED9               	movwf	fsr2l,c
 19747  014D5E  50E2               	movf	fsr1h,w,c
 19748  014D60  6EDA               	movwf	fsr2h,c
 19749  014D62  0EFF               	movlw	255
 19750  014D64  22DA               	addwfc	fsr2h,f,c
 19751  014D66  06DE               	decf	postinc2,f,c
 19752  014D68  0E00               	movlw	0
 19753  014D6A  5ADD               	subwfb	postdec2,f,c
 19754  014D6C                     l10953:
 19755                           
 19756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19757  014D6C  0E4F               	movlw	79
 19758  014D6E  6E0B               	movwf	(btemp+10)^0,c
 19759  014D70  0E00               	movlw	0
 19760  014D72  6E0C               	movwf	(btemp+11)^0,c
 19761                           
 19762                           ;stkvar	_i @ sp[(-18)+10]
 19763  014D74  0EF8               	movlw	-8
 19764  014D76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19765  014D7C  0EF9               	movlw	-7
 19766  014D7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19767                           
 19768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19769  014D84  0103               	movlb	3	; () banked
 19770  014D86  6BE3               	clrf	(_dbuf+79)& (0+255),b
 19771                           
 19772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19773  014D88  D109               	goto	l10967
 19774  014D8A                     l10957:
 19775                           
 19776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19777                           ;stkvar	_i @ sp[(-18)+10]
 19778  014D8A  50E1               	movf	fsr1l,w,c
 19779  014D8C  0FF8               	addlw	-8
 19780  014D8E  6ED9               	movwf	fsr2l,c
 19781  014D90  50E2               	movf	fsr1h,w,c
 19782  014D92  6EDA               	movwf	fsr2h,c
 19783  014D94  0EFF               	movlw	255
 19784  014D96  22DA               	addwfc	fsr2h,f,c
 19785  014D98  06DE               	decf	postinc2,f,c
 19786  014D9A  0E00               	movlw	0
 19787  014D9C  5ADD               	subwfb	postdec2,f,c
 19788                           
 19789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19790  014D9E  0E0A               	movlw	10
 19791  014DA0  6EE6               	movwf	postinc1,c
 19792  014DA2  0E00               	movlw	0
 19793  014DA4  6EE6               	movwf	postinc1,c
 19794  014DA6  0E00               	movlw	0
 19795  014DA8  6EE6               	movwf	postinc1,c
 19796  014DAA  0E00               	movlw	0
 19797  014DAC  6EE6               	movwf	postinc1,c
 19798  014DAE  0E00               	movlw	0
 19799  014DB0  6EE6               	movwf	postinc1,c
 19800  014DB2  0E00               	movlw	0
 19801  014DB4  6EE6               	movwf	postinc1,c
 19802  014DB6  0E00               	movlw	0
 19803  014DB8  6EE6               	movwf	postinc1,c
 19804  014DBA  0E00               	movlw	0
 19805  014DBC  6EE6               	movwf	postinc1,c
 19806                           
 19807                           ;stkvar	_n @ sp[(-26)+2]
 19808  014DBE  50E1               	movf	fsr1l,w,c
 19809  014DC0  0FE8               	addlw	-24
 19810  014DC2  6ED9               	movwf	fsr2l,c
 19811  014DC4  50E2               	movf	fsr1h,w,c
 19812  014DC6  6EDA               	movwf	fsr2h,c
 19813  014DC8  0EFF               	movlw	255
 19814  014DCA  22DA               	addwfc	fsr2h,f,c
 19815  014DCC  006F FF7B FFE6     	movff	postinc2,postinc1
 19816  014DD2  006F FF7B FFE6     	movff	postinc2,postinc1
 19817  014DD8  006F FF7B FFE6     	movff	postinc2,postinc1
 19818  014DDE  006F FF7B FFE6     	movff	postinc2,postinc1
 19819  014DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 19820  014DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 19821  014DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 19822  014DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 19823  014DFC  EC61  F0B4         	call	___aomod	;wreg free
 19824  014E00  52E5               	movf	postdec1,f,c
 19825  014E02  006F FF9C  F018    	movff	indf1,btemp+23
 19826  014E08  52E5               	movf	postdec1,f,c
 19827  014E0A  006F FF9C  F017    	movff	indf1,btemp+22
 19828  014E10  52E5               	movf	postdec1,f,c
 19829  014E12  006F FF9C  F016    	movff	indf1,btemp+21
 19830  014E18  52E5               	movf	postdec1,f,c
 19831  014E1A  006F FF9C  F015    	movff	indf1,btemp+20
 19832  014E20  52E5               	movf	postdec1,f,c
 19833  014E22  006F FF9C  F014    	movff	indf1,btemp+19
 19834  014E28  52E5               	movf	postdec1,f,c
 19835  014E2A  006F FF9C  F013    	movff	indf1,btemp+18
 19836  014E30  52E5               	movf	postdec1,f,c
 19837  014E32  006F FF9C  F012    	movff	indf1,btemp+17
 19838  014E38  52E5               	movf	postdec1,f,c
 19839  014E3A  006F FF9C  F011    	movff	indf1,btemp+16
 19840  014E40  0EF8               	movlw	248
 19841  014E42  26E1               	addwf	fsr1l,f,c
 19842  014E44  0EFF               	movlw	255
 19843  014E46  22E2               	addwfc	fsr1h,f,c
 19844  014E48  0060  F044  F00B   	movff	btemp+16,btemp+10
 19845  014E4E  0060  F048  F00C   	movff	btemp+17,btemp+11
 19846  014E54  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19847  014E5A  0060  F033  FFE6   	movff	btemp+11,postinc1
 19848  014E60  EC3E  F0CE         	call	_abs	;wreg free
 19849  014E64  0E30               	movlw	48
 19850  014E66  2601               	addwf	btemp^0,f,c
 19851                           
 19852                           ;stkvar	_i @ sp[(-18)+10]
 19853  014E68  0EF8               	movlw	-8
 19854  014E6A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19855  014E70  0EF9               	movlw	-7
 19856  014E72  006F FF8C  F00C    	movff	plusw1,btemp+11
 19857  014E78  0E94               	movlw	low _dbuf
 19858  014E7A  240B               	addwf	(btemp+10)^0,w,c
 19859  014E7C  6ED9               	movwf	fsr2l,c
 19860  014E7E  0E03               	movlw	high _dbuf
 19861  014E80  200C               	addwfc	(btemp+11)^0,w,c
 19862  014E82  6EDA               	movwf	fsr2h,c
 19863  014E84  0060  F007  FFDF   	movff	btemp,indf2
 19864                           
 19865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19866                           ;stkvar	_p @ sp[(-18)+16]
 19867  014E8A  50E1               	movf	fsr1l,w,c
 19868  014E8C  0FFE               	addlw	-2
 19869  014E8E  6ED9               	movwf	fsr2l,c
 19870  014E90  50E2               	movf	fsr1h,w,c
 19871  014E92  6EDA               	movwf	fsr2h,c
 19872  014E94  0EFF               	movlw	255
 19873  014E96  22DA               	addwfc	fsr2h,f,c
 19874  014E98  06DE               	decf	postinc2,f,c
 19875  014E9A  0E00               	movlw	0
 19876  014E9C  5ADD               	subwfb	postdec2,f,c
 19877                           
 19878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19879                           ;stkvar	_w @ sp[(-18)+14]
 19880  014E9E  50E1               	movf	fsr1l,w,c
 19881  014EA0  0FFC               	addlw	-4
 19882  014EA2  6ED9               	movwf	fsr2l,c
 19883  014EA4  50E2               	movf	fsr1h,w,c
 19884  014EA6  6EDA               	movwf	fsr2h,c
 19885  014EA8  0EFF               	movlw	255
 19886  014EAA  22DA               	addwfc	fsr2h,f,c
 19887  014EAC  06DE               	decf	postinc2,f,c
 19888  014EAE  0E00               	movlw	0
 19889  014EB0  5ADD               	subwfb	postdec2,f,c
 19890                           
 19891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19892  014EB2  0E0A               	movlw	10
 19893  014EB4  6EE6               	movwf	postinc1,c
 19894  014EB6  0E00               	movlw	0
 19895  014EB8  6EE6               	movwf	postinc1,c
 19896  014EBA  0E00               	movlw	0
 19897  014EBC  6EE6               	movwf	postinc1,c
 19898  014EBE  0E00               	movlw	0
 19899  014EC0  6EE6               	movwf	postinc1,c
 19900  014EC2  0E00               	movlw	0
 19901  014EC4  6EE6               	movwf	postinc1,c
 19902  014EC6  0E00               	movlw	0
 19903  014EC8  6EE6               	movwf	postinc1,c
 19904  014ECA  0E00               	movlw	0
 19905  014ECC  6EE6               	movwf	postinc1,c
 19906  014ECE  0E00               	movlw	0
 19907  014ED0  6EE6               	movwf	postinc1,c
 19908                           
 19909                           ;stkvar	_n @ sp[(-26)+2]
 19910  014ED2  50E1               	movf	fsr1l,w,c
 19911  014ED4  0FE8               	addlw	-24
 19912  014ED6  6ED9               	movwf	fsr2l,c
 19913  014ED8  50E2               	movf	fsr1h,w,c
 19914  014EDA  6EDA               	movwf	fsr2h,c
 19915  014EDC  0EFF               	movlw	255
 19916  014EDE  22DA               	addwfc	fsr2h,f,c
 19917  014EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 19918  014EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 19919  014EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 19920  014EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 19921  014EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 19922  014EFE  006F FF7B FFE6     	movff	postinc2,postinc1
 19923  014F04  006F FF7B FFE6     	movff	postinc2,postinc1
 19924  014F0A  006F FF7B FFE6     	movff	postinc2,postinc1
 19925  014F10  ECE7  F0B1         	call	___aodiv	;wreg free
 19926  014F14  52E5               	movf	postdec1,f,c
 19927  014F16  006F FF9C  F018    	movff	indf1,btemp+23
 19928  014F1C  52E5               	movf	postdec1,f,c
 19929  014F1E  006F FF9C  F017    	movff	indf1,btemp+22
 19930  014F24  52E5               	movf	postdec1,f,c
 19931  014F26  006F FF9C  F016    	movff	indf1,btemp+21
 19932  014F2C  52E5               	movf	postdec1,f,c
 19933  014F2E  006F FF9C  F015    	movff	indf1,btemp+20
 19934  014F34  52E5               	movf	postdec1,f,c
 19935  014F36  006F FF9C  F014    	movff	indf1,btemp+19
 19936  014F3C  52E5               	movf	postdec1,f,c
 19937  014F3E  006F FF9C  F013    	movff	indf1,btemp+18
 19938  014F44  52E5               	movf	postdec1,f,c
 19939  014F46  006F FF9C  F012    	movff	indf1,btemp+17
 19940  014F4C  52E5               	movf	postdec1,f,c
 19941  014F4E  006F FF9C  F011    	movff	indf1,btemp+16
 19942  014F54  0EF8               	movlw	248
 19943  014F56  26E1               	addwf	fsr1l,f,c
 19944  014F58  0EFF               	movlw	255
 19945  014F5A  22E2               	addwfc	fsr1h,f,c
 19946                           
 19947                           ;stkvar	_n @ sp[(-18)+2]
 19948  014F5C  0EF0               	movlw	-16
 19949  014F5E  0060  F047  FFE3   	movff	btemp+16,plusw1
 19950  014F64  0EF1               	movlw	-15
 19951  014F66  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19952  014F6C  0EF2               	movlw	-14
 19953  014F6E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19954  014F74  0EF3               	movlw	-13
 19955  014F76  0060  F053  FFE3   	movff	btemp+19,plusw1
 19956  014F7C  0EF4               	movlw	-12
 19957  014F7E  0060  F057  FFE3   	movff	btemp+20,plusw1
 19958  014F84  0EF5               	movlw	-11
 19959  014F86  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19960  014F8C  0EF6               	movlw	-10
 19961  014F8E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19962  014F94  0EF7               	movlw	-9
 19963  014F96  0060  F063  FFE3   	movff	btemp+23,plusw1
 19964  014F9C                     l10967:
 19965                           
 19966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19967                           ;stkvar	_i @ sp[(-18)+10]
 19968  014F9C  0EF9               	movlw	-7
 19969  014F9E  BEE3               	btfsc	plusw1,7,c
 19970  014FA0  D036               	goto	u10210
 19971  014FA2  0EF9               	movlw	-7
 19972  014FA4  50E3               	movf	plusw1,w,c
 19973  014FA6  E104               	bnz	u10170
 19974  014FA8  0EF8               	movlw	-8
 19975  014FAA  04E3               	decf	plusw1,w,c
 19976  014FAC  A0D8               	btfss	status,0,c
 19977  014FAE  D02F               	goto	u10210
 19978  014FB0                     u10170:
 19979                           
 19980                           ;stkvar	_n @ sp[(-18)+2]
 19981  014FB0  0EF0               	movlw	-16
 19982  014FB2  50E3               	movf	plusw1,w,c
 19983  014FB4  E115               	bnz	u10181
 19984  014FB6  0EF1               	movlw	-15
 19985  014FB8  50E3               	movf	plusw1,w,c
 19986  014FBA  E112               	bnz	u10181
 19987  014FBC  0EF2               	movlw	-14
 19988  014FBE  50E3               	movf	plusw1,w,c
 19989  014FC0  E10F               	bnz	u10181
 19990  014FC2  0EF3               	movlw	-13
 19991  014FC4  50E3               	movf	plusw1,w,c
 19992  014FC6  E10C               	bnz	u10181
 19993  014FC8  0EF4               	movlw	-12
 19994  014FCA  50E3               	movf	plusw1,w,c
 19995  014FCC  E109               	bnz	u10181
 19996  014FCE  0EF5               	movlw	-11
 19997  014FD0  50E3               	movf	plusw1,w,c
 19998  014FD2  E106               	bnz	u10181
 19999  014FD4  0EF6               	movlw	-10
 20000  014FD6  50E3               	movf	plusw1,w,c
 20001  014FD8  E103               	bnz	u10181
 20002  014FDA  0EF7               	movlw	-9
 20003  014FDC  50E3               	movf	plusw1,w,c
 20004  014FDE  A4D8               	btfss	status,2,c
 20005  014FE0                     u10181:
 20006  014FE0  D6D4               	goto	l10957
 20007                           
 20008                           ;stkvar	_p @ sp[(-18)+16]
 20009  014FE2  0EFF               	movlw	-1
 20010  014FE4  BEE3               	btfsc	plusw1,7,c
 20011  014FE6  D007               	goto	u10190
 20012  014FE8  0EFF               	movlw	-1
 20013  014FEA  50E3               	movf	plusw1,w,c
 20014  014FEC  E103               	bnz	u10191
 20015  014FEE  0EFE               	movlw	-2
 20016  014FF0  04E3               	decf	plusw1,w,c
 20017  014FF2  B0D8               	btfsc	status,0,c
 20018  014FF4                     u10191:
 20019  014FF4  D6CA               	goto	l10957
 20020  014FF6                     u10190:
 20021                           
 20022                           ;stkvar	_w @ sp[(-18)+14]
 20023  014FF6  0EFD               	movlw	-3
 20024  014FF8  BEE3               	btfsc	plusw1,7,c
 20025  014FFA  D009               	goto	u10210
 20026  014FFC  0EFD               	movlw	-3
 20027  014FFE  50E3               	movf	plusw1,w,c
 20028  015000  E104               	bnz	u10200
 20029  015002  0EFC               	movlw	-4
 20030  015004  04E3               	decf	plusw1,w,c
 20031  015006  A0D8               	btfss	status,0,c
 20032  015008  D002               	goto	u10210
 20033  01500A                     u10200:
 20034  01500A  B225               	btfsc	_flags^0,1,c
 20035  01500C  D6BE               	goto	l10957
 20036  01500E                     u10210:
 20037                           
 20038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20039                           ;stkvar	_s @ sp[(-18)+12]
 20040  01500E  0EFA               	movlw	-6
 20041  015010  006F FF8C  F001    	movff	plusw1,btemp
 20042  015016  0EFB               	movlw	-5
 20043  015018  50E3               	movf	plusw1,w,c
 20044  01501A  1001               	iorwf	btemp^0,w,c
 20045  01501C  A4D8               	btfss	status,2,c
 20046  01501E  D002               	goto	u10230
 20047  015020  A425               	btfss	_flags^0,2,c
 20048  015022  D033               	goto	l10991
 20049  015024                     u10230:
 20050                           
 20051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20052                           ;stkvar	_i @ sp[(-18)+10]
 20053  015024  50E1               	movf	fsr1l,w,c
 20054  015026  0FF8               	addlw	-8
 20055  015028  6ED9               	movwf	fsr2l,c
 20056  01502A  50E2               	movf	fsr1h,w,c
 20057  01502C  6EDA               	movwf	fsr2h,c
 20058  01502E  0EFF               	movlw	255
 20059  015030  22DA               	addwfc	fsr2h,f,c
 20060  015032  06DE               	decf	postinc2,f,c
 20061  015034  0E00               	movlw	0
 20062  015036  5ADD               	subwfb	postdec2,f,c
 20063                           
 20064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20065                           ;stkvar	_s @ sp[(-18)+12]
 20066  015038  0EFA               	movlw	-6
 20067  01503A  006F FF8C  F001    	movff	plusw1,btemp
 20068  015040  0EFB               	movlw	-5
 20069  015042  50E3               	movf	plusw1,w,c
 20070  015044  1001               	iorwf	btemp^0,w,c
 20071  015046  A4D8               	btfss	status,2,c
 20072  015048  D002               	goto	l10987
 20073  01504A  0E2B               	movlw	43
 20074  01504C  D001               	goto	L21
 20075  01504E                     l10987:
 20076  01504E  0E2D               	movlw	45
 20077  015050                     L21:
 20078  015050  6E0B               	movwf	(btemp+10)^0,c
 20079  015052  0E00               	movlw	0
 20080  015054  6E0C               	movwf	(btemp+11)^0,c
 20081                           
 20082                           ;stkvar	_dtoa$5174 @ sp[(-18)+0]
 20083  015056  0EEE               	movlw	-18
 20084  015058  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20085  01505E  0EEF               	movlw	-17
 20086  015060  0060  F033  FFE3   	movff	btemp+11,plusw1
 20087                           
 20088                           ;stkvar	_dtoa$5174 @ sp[(-18)+0]
 20089                           ;stkvar	_i @ sp[(-18)+10]
 20090  015066  0EF8               	movlw	-8
 20091  015068  006F FF8C  F00B    	movff	plusw1,btemp+10
 20092  01506E  0EF9               	movlw	-7
 20093  015070  006F FF8C  F00C    	movff	plusw1,btemp+11
 20094  015076  0E94               	movlw	low _dbuf
 20095  015078  240B               	addwf	(btemp+10)^0,w,c
 20096  01507A  6ED9               	movwf	fsr2l,c
 20097  01507C  0E03               	movlw	high _dbuf
 20098  01507E  200C               	addwfc	(btemp+11)^0,w,c
 20099  015080  6EDA               	movwf	fsr2h,c
 20100  015082  0EEE               	movlw	-18
 20101  015084  006F FF8F FFDF     	movff	plusw1,indf2
 20102  01508A                     l10991:
 20103                           
 20104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20105                           ;stkvar	_w @ sp[(-18)+14]
 20106  01508A  0EFC               	movlw	-4
 20107  01508C  006F FF8F FFE6     	movff	plusw1,postinc1
 20108  015092  006F FF8F FFE6     	movff	plusw1,postinc1
 20109                           
 20110                           ;stkvar	_i @ sp[(-20)+10]
 20111  015098  0E94               	movlw	low _dbuf
 20112  01509A  6E0B               	movwf	(btemp+10)^0,c
 20113  01509C  0E03               	movlw	high _dbuf
 20114  01509E  6E0C               	movwf	(btemp+11)^0,c
 20115  0150A0  0EF6               	movlw	-10
 20116  0150A2  50E3               	movf	plusw1,w,c
 20117  0150A4  260B               	addwf	(btemp+10)^0,f,c
 20118  0150A6  0EF7               	movlw	-9
 20119  0150A8  50E3               	movf	plusw1,w,c
 20120  0150AA  220C               	addwfc	(btemp+11)^0,f,c
 20121  0150AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20122  0150B2  0060  F033  FFE6   	movff	btemp+11,postinc1
 20123                           
 20124                           ;stkvar	_fp @ sp[(-22)+-2]
 20125  0150B8  0EE8               	movlw	-24
 20126  0150BA  006F FF8F FFE6     	movff	plusw1,postinc1
 20127  0150C0  006F FF8F FFE6     	movff	plusw1,postinc1
 20128  0150C6  EC69  F0C2         	call	_pad	;wreg free
 20129                           
 20130                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20131  0150CA  0EE4               	movlw	228
 20132  0150CC  26E1               	addwf	fsr1l,f,c
 20133  0150CE  0EFF               	movlw	255
 20134  0150D0  22E2               	addwfc	fsr1h,f,c
 20135  0150D2  0012               	return		;funcret
 20136  0150D4                     __end_of_dtoa:
 20137                           	opt callstack 0
 20138                           
 20139 ;; *************** function _abs *****************
 20140 ;; Defined at:
 20141 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20142 ;; Parameters:    Size  Location     Type
 20143 ;;  a               2  [STACK] int 
 20144 ;; Auto vars:     Size  Location     Type
 20145 ;;		None
 20146 ;; Return value:  Size  Location     Type
 20147 ;;                  2  [STACK] int 
 20148 ;; Registers used:
 20149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20150 ;; Tracked objects:
 20151 ;;		On entry : 0/3
 20152 ;;		On exit  : 0/0
 20153 ;;		Unchanged: 0/0
 20154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20159 ;;Total ram usage:        0 bytes
 20160 ;; Hardware stack levels used:    1
 20161 ;; Hardware stack levels required when called:   15
 20162 ;; This function calls:
 20163 ;;		Nothing
 20164 ;; This function is called by:
 20165 ;;		_dtoa
 20166 ;; This function uses a reentrant model
 20167 ;;
 20168                           
 20169                           	psect	text69
 20170  019C7C                     __ptext69:
 20171                           	opt callstack 0
 20172  019C7C                     _abs:
 20173                           	opt callstack 0
 20174                           
 20175                           ;stkvar	_a @ sp[(0)+-2]
 20176                           
 20177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20178                           ;incstack = 0
 20179 ;; hardware stack exceeded
 20180  019C7C  0EFF               	movlw	-1
 20181  019C7E  BEE3               	btfsc	plusw1,7,c
 20182  019C80  D007               	goto	u5530
 20183  019C82  0EFF               	movlw	-1
 20184  019C84  50E3               	movf	plusw1,w,c
 20185  019C86  E112               	bnz	l7389
 20186  019C88  0EFE               	movlw	-2
 20187  019C8A  04E3               	decf	plusw1,w,c
 20188  019C8C  B0D8               	btfsc	status,0,c
 20189  019C8E  D00E               	goto	l7389
 20190  019C90                     u5530:
 20191                           
 20192                           ;stkvar	_a @ sp[(0)+-2]
 20193  019C90  0EFE               	movlw	-2
 20194  019C92  006F FF8C  F001    	movff	plusw1,btemp
 20195  019C98  1E01               	comf	btemp^0,f,c
 20196  019C9A  0EFF               	movlw	-1
 20197  019C9C  006F FF8C  F002    	movff	plusw1,btemp+1
 20198  019CA2  1E02               	comf	(btemp+1)^0,f,c
 20199  019CA4  2A01               	incf	btemp^0,f,c
 20200  019CA6  B4D8               	btfsc	status,2,c
 20201  019CA8  2A02               	incf	(btemp+1)^0,f,c
 20202  019CAA  D008               	goto	l2959
 20203  019CAC                     l7389:
 20204                           
 20205                           ;stkvar	_a @ sp[(0)+-2]
 20206  019CAC  0EFE               	movlw	-2
 20207  019CAE  006F FF8C  F001    	movff	plusw1,btemp
 20208  019CB4  0EFF               	movlw	-1
 20209  019CB6  006F FF8C  F002    	movff	plusw1,btemp+1
 20210  019CBC                     l2959:
 20211                           
 20212                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20213  019CBC  52E5               	movf	postdec1,f,c
 20214  019CBE  52E5               	movf	postdec1,f,c
 20215  019CC0  0012               	return		;funcret
 20216  019CC2                     __end_of_abs:
 20217                           	opt callstack 0
 20218                           
 20219 ;; *************** function ___aomod *****************
 20220 ;; Defined at:
 20221 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20222 ;; Parameters:    Size  Location     Type
 20223 ;;  dividend        8  [STACK] long long 
 20224 ;;  divisor         8  [STACK] long long 
 20225 ;; Auto vars:     Size  Location     Type
 20226 ;;  sign            1  [STACK] unsigned char 
 20227 ;;  counter         1  [STACK] unsigned char 
 20228 ;; Return value:  Size  Location     Type
 20229 ;;                  8  [STACK] long long 
 20230 ;; Registers used:
 20231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20232 ;; Tracked objects:
 20233 ;;		On entry : 0/3
 20234 ;;		On exit  : 0/0
 20235 ;;		Unchanged: 0/0
 20236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20241 ;;Total ram usage:        0 bytes
 20242 ;; Hardware stack levels used:    1
 20243 ;; Hardware stack levels required when called:   15
 20244 ;; This function calls:
 20245 ;;		Nothing
 20246 ;; This function is called by:
 20247 ;;		_dtoa
 20248 ;; This function uses a reentrant model
 20249 ;;
 20250                           
 20251                           	psect	text70
 20252  0168C2                     __ptext70:
 20253                           	opt callstack 0
 20254  0168C2                     ___aomod:
 20255                           	opt callstack 0
 20256                           
 20257                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20258  0168C2  52E6               	movf	postinc1,f,c
 20259  0168C4  52E6               	movf	postinc1,f,c
 20260                           
 20261                           ;stkvar	_sign @ sp[(-2)+0]
 20262                           
 20263                           ;incstack = 0
 20264 ;; hardware stack exceeded
 20265  0168C6  0EFE               	movlw	-2
 20266  0168C8  6AE3               	clrf	plusw1,c
 20267                           
 20268                           ;stkvar	_dividend @ sp[(-2)+-8]
 20269  0168CA  0EFD               	movlw	-3
 20270  0168CC  AEE3               	btfss	plusw1,7,c
 20271  0168CE  D028               	goto	l7547
 20272                           
 20273                           ;stkvar	_dividend @ sp[(-2)+-8]
 20274                           ;stkvar	_dividend @ sp[(-2)+-8]
 20275  0168D0  0EF6               	movlw	-10
 20276  0168D2  6CE3               	negf	plusw1,c
 20277  0168D4  0EF7               	movlw	-9
 20278  0168D6  1EE3               	comf	plusw1,f,c
 20279  0168D8  0EF8               	movlw	-8
 20280  0168DA  1EE3               	comf	plusw1,f,c
 20281  0168DC  0EF9               	movlw	-7
 20282  0168DE  1EE3               	comf	plusw1,f,c
 20283  0168E0  0EFA               	movlw	-6
 20284  0168E2  1EE3               	comf	plusw1,f,c
 20285  0168E4  0EFB               	movlw	-5
 20286  0168E6  1EE3               	comf	plusw1,f,c
 20287  0168E8  0EFC               	movlw	-4
 20288  0168EA  1EE3               	comf	plusw1,f,c
 20289  0168EC  0EFD               	movlw	-3
 20290  0168EE  1EE3               	comf	plusw1,f,c
 20291  0168F0  E314               	bnc	u5960
 20292  0168F2  0EF7               	movlw	-9
 20293  0168F4  2AE3               	incf	plusw1,f,c
 20294  0168F6  E311               	bnc	u5960
 20295  0168F8  0EF8               	movlw	-8
 20296  0168FA  2AE3               	incf	plusw1,f,c
 20297  0168FC  E30E               	bnc	u5960
 20298  0168FE  0EF9               	movlw	-7
 20299  016900  2AE3               	incf	plusw1,f,c
 20300  016902  E30B               	bnc	u5960
 20301  016904  0EFA               	movlw	-6
 20302  016906  2AE3               	incf	plusw1,f,c
 20303  016908  E308               	bnc	u5960
 20304  01690A  0EFB               	movlw	-5
 20305  01690C  2AE3               	incf	plusw1,f,c
 20306  01690E  E305               	bnc	u5960
 20307  016910  0EFC               	movlw	-4
 20308  016912  2AE3               	incf	plusw1,f,c
 20309  016914  E302               	bnc	u5960
 20310  016916  0EFD               	movlw	-3
 20311  016918  2AE3               	incf	plusw1,f,c
 20312  01691A                     u5960:
 20313                           
 20314                           ;stkvar	_sign @ sp[(-2)+0]
 20315  01691A  0EFE               	movlw	-2
 20316  01691C  6AE3               	clrf	plusw1,c
 20317  01691E  2AE3               	incf	plusw1,f,c
 20318  016920                     l7547:
 20319                           
 20320                           ;stkvar	_divisor @ sp[(-2)+-16]
 20321  016920  0EF5               	movlw	-11
 20322  016922  AEE3               	btfss	plusw1,7,c
 20323  016924  D025               	goto	u5980
 20324                           
 20325                           ;stkvar	_divisor @ sp[(-2)+-16]
 20326                           ;stkvar	_divisor @ sp[(-2)+-16]
 20327  016926  0EEE               	movlw	-18
 20328  016928  6CE3               	negf	plusw1,c
 20329  01692A  0EEF               	movlw	-17
 20330  01692C  1EE3               	comf	plusw1,f,c
 20331  01692E  0EF0               	movlw	-16
 20332  016930  1EE3               	comf	plusw1,f,c
 20333  016932  0EF1               	movlw	-15
 20334  016934  1EE3               	comf	plusw1,f,c
 20335  016936  0EF2               	movlw	-14
 20336  016938  1EE3               	comf	plusw1,f,c
 20337  01693A  0EF3               	movlw	-13
 20338  01693C  1EE3               	comf	plusw1,f,c
 20339  01693E  0EF4               	movlw	-12
 20340  016940  1EE3               	comf	plusw1,f,c
 20341  016942  0EF5               	movlw	-11
 20342  016944  1EE3               	comf	plusw1,f,c
 20343  016946  E314               	bnc	u5980
 20344  016948  0EEF               	movlw	-17
 20345  01694A  2AE3               	incf	plusw1,f,c
 20346  01694C  E311               	bnc	u5980
 20347  01694E  0EF0               	movlw	-16
 20348  016950  2AE3               	incf	plusw1,f,c
 20349  016952  E30E               	bnc	u5980
 20350  016954  0EF1               	movlw	-15
 20351  016956  2AE3               	incf	plusw1,f,c
 20352  016958  E30B               	bnc	u5980
 20353  01695A  0EF2               	movlw	-14
 20354  01695C  2AE3               	incf	plusw1,f,c
 20355  01695E  E308               	bnc	u5980
 20356  016960  0EF3               	movlw	-13
 20357  016962  2AE3               	incf	plusw1,f,c
 20358  016964  E305               	bnc	u5980
 20359  016966  0EF4               	movlw	-12
 20360  016968  2AE3               	incf	plusw1,f,c
 20361  01696A  E302               	bnc	u5980
 20362  01696C  0EF5               	movlw	-11
 20363  01696E  2AE3               	incf	plusw1,f,c
 20364  016970                     u5980:
 20365                           
 20366                           ;stkvar	_divisor @ sp[(-2)+-16]
 20367  016970  0EEE               	movlw	-18
 20368  016972  50E3               	movf	plusw1,w,c
 20369  016974  E116               	bnz	u5990
 20370  016976  0EEF               	movlw	-17
 20371  016978  50E3               	movf	plusw1,w,c
 20372  01697A  E113               	bnz	u5990
 20373  01697C  0EF0               	movlw	-16
 20374  01697E  50E3               	movf	plusw1,w,c
 20375  016980  E110               	bnz	u5990
 20376  016982  0EF1               	movlw	-15
 20377  016984  50E3               	movf	plusw1,w,c
 20378  016986  E10D               	bnz	u5990
 20379  016988  0EF2               	movlw	-14
 20380  01698A  50E3               	movf	plusw1,w,c
 20381  01698C  E10A               	bnz	u5990
 20382  01698E  0EF3               	movlw	-13
 20383  016990  50E3               	movf	plusw1,w,c
 20384  016992  E107               	bnz	u5990
 20385  016994  0EF4               	movlw	-12
 20386  016996  50E3               	movf	plusw1,w,c
 20387  016998  E104               	bnz	u5990
 20388  01699A  0EF5               	movlw	-11
 20389  01699C  50E3               	movf	plusw1,w,c
 20390  01699E  B4D8               	btfsc	status,2,c
 20391  0169A0  D075               	goto	u6020
 20392  0169A2                     u5990:
 20393                           
 20394                           ;stkvar	_counter @ sp[(-2)+1]
 20395  0169A2  0EFF               	movlw	-1
 20396  0169A4  6AE3               	clrf	plusw1,c
 20397  0169A6  D012               	goto	L22
 20398  0169A8                     l7555:
 20399                           
 20400                           ;stkvar	_divisor @ sp[(-2)+-16]
 20401  0169A8  90D8               	bcf	status,0,c
 20402  0169AA  0EEE               	movlw	-18
 20403  0169AC  36E3               	rlcf	plusw1,f,c
 20404  0169AE  0EEF               	movlw	-17
 20405  0169B0  36E3               	rlcf	plusw1,f,c
 20406  0169B2  0EF0               	movlw	-16
 20407  0169B4  36E3               	rlcf	plusw1,f,c
 20408  0169B6  0EF1               	movlw	-15
 20409  0169B8  36E3               	rlcf	plusw1,f,c
 20410  0169BA  0EF2               	movlw	-14
 20411  0169BC  36E3               	rlcf	plusw1,f,c
 20412  0169BE  0EF3               	movlw	-13
 20413  0169C0  36E3               	rlcf	plusw1,f,c
 20414  0169C2  0EF4               	movlw	-12
 20415  0169C4  36E3               	rlcf	plusw1,f,c
 20416  0169C6  0EF5               	movlw	-11
 20417  0169C8  36E3               	rlcf	plusw1,f,c
 20418                           
 20419                           ;stkvar	_counter @ sp[(-2)+1]
 20420  0169CA  0EFF               	movlw	-1
 20421  0169CC                     L22:
 20422  0169CC  2AE3               	incf	plusw1,f,c
 20423                           
 20424                           ;stkvar	_divisor @ sp[(-2)+-16]
 20425  0169CE  0EF5               	movlw	-11
 20426  0169D0  AEE3               	btfss	plusw1,7,c
 20427  0169D2  D7EA               	goto	l7555
 20428  0169D4                     u6000:
 20429                           
 20430                           ;stkvar	_divisor @ sp[(-2)+-16]
 20431                           ;stkvar	_dividend @ sp[(-2)+-8]
 20432  0169D4  50E1               	movf	fsr1l,w,c
 20433  0169D6  0FF6               	addlw	-10
 20434  0169D8  6ED9               	movwf	fsr2l,c
 20435  0169DA  50E2               	movf	fsr1h,w,c
 20436  0169DC  6EDA               	movwf	fsr2h,c
 20437  0169DE  0EFF               	movlw	255
 20438  0169E0  22DA               	addwfc	fsr2h,f,c
 20439  0169E2  0EEE               	movlw	-18
 20440  0169E4  50E3               	movf	plusw1,w,c
 20441  0169E6  5CDE               	subwf	postinc2,w,c
 20442  0169E8  0EEF               	movlw	-17
 20443  0169EA  50E3               	movf	plusw1,w,c
 20444  0169EC  58DE               	subwfb	postinc2,w,c
 20445  0169EE  0EF0               	movlw	-16
 20446  0169F0  50E3               	movf	plusw1,w,c
 20447  0169F2  58DE               	subwfb	postinc2,w,c
 20448  0169F4  0EF1               	movlw	-15
 20449  0169F6  50E3               	movf	plusw1,w,c
 20450  0169F8  58DE               	subwfb	postinc2,w,c
 20451  0169FA  0EF2               	movlw	-14
 20452  0169FC  50E3               	movf	plusw1,w,c
 20453  0169FE  58DE               	subwfb	postinc2,w,c
 20454  016A00  0EF3               	movlw	-13
 20455  016A02  50E3               	movf	plusw1,w,c
 20456  016A04  58DE               	subwfb	postinc2,w,c
 20457  016A06  0EF4               	movlw	-12
 20458  016A08  50E3               	movf	plusw1,w,c
 20459  016A0A  58DE               	subwfb	postinc2,w,c
 20460  016A0C  0EF5               	movlw	-11
 20461  016A0E  50E3               	movf	plusw1,w,c
 20462  016A10  58DE               	subwfb	postinc2,w,c
 20463  016A12  A0D8               	btfss	status,0,c
 20464  016A14  D01F               	goto	l7563
 20465                           
 20466                           ;stkvar	_divisor @ sp[(-2)+-16]
 20467                           ;stkvar	_dividend @ sp[(-2)+-8]
 20468  016A16  50E1               	movf	fsr1l,w,c
 20469  016A18  0FF6               	addlw	-10
 20470  016A1A  6ED9               	movwf	fsr2l,c
 20471  016A1C  50E2               	movf	fsr1h,w,c
 20472  016A1E  6EDA               	movwf	fsr2h,c
 20473  016A20  0EFF               	movlw	255
 20474  016A22  22DA               	addwfc	fsr2h,f,c
 20475  016A24  0EEE               	movlw	-18
 20476  016A26  50E3               	movf	plusw1,w,c
 20477  016A28  5EDE               	subwf	postinc2,f,c
 20478  016A2A  0EEF               	movlw	-17
 20479  016A2C  50E3               	movf	plusw1,w,c
 20480  016A2E  5ADE               	subwfb	postinc2,f,c
 20481  016A30  0EF0               	movlw	-16
 20482  016A32  50E3               	movf	plusw1,w,c
 20483  016A34  5ADE               	subwfb	postinc2,f,c
 20484  016A36  0EF1               	movlw	-15
 20485  016A38  50E3               	movf	plusw1,w,c
 20486  016A3A  5ADE               	subwfb	postinc2,f,c
 20487  016A3C  0EF2               	movlw	-14
 20488  016A3E  50E3               	movf	plusw1,w,c
 20489  016A40  5ADE               	subwfb	postinc2,f,c
 20490  016A42  0EF3               	movlw	-13
 20491  016A44  50E3               	movf	plusw1,w,c
 20492  016A46  5ADE               	subwfb	postinc2,f,c
 20493  016A48  0EF4               	movlw	-12
 20494  016A4A  50E3               	movf	plusw1,w,c
 20495  016A4C  5ADE               	subwfb	postinc2,f,c
 20496  016A4E  0EF5               	movlw	-11
 20497  016A50  50E3               	movf	plusw1,w,c
 20498  016A52  5ADE               	subwfb	postinc2,f,c
 20499  016A54                     l7563:
 20500                           
 20501                           ;stkvar	_divisor @ sp[(-2)+-16]
 20502  016A54  90D8               	bcf	status,0,c
 20503  016A56  0EF5               	movlw	-11
 20504  016A58  32E3               	rrcf	plusw1,f,c
 20505  016A5A  0EF4               	movlw	-12
 20506  016A5C  32E3               	rrcf	plusw1,f,c
 20507  016A5E  0EF3               	movlw	-13
 20508  016A60  32E3               	rrcf	plusw1,f,c
 20509  016A62  0EF2               	movlw	-14
 20510  016A64  32E3               	rrcf	plusw1,f,c
 20511  016A66  0EF1               	movlw	-15
 20512  016A68  32E3               	rrcf	plusw1,f,c
 20513  016A6A  0EF0               	movlw	-16
 20514  016A6C  32E3               	rrcf	plusw1,f,c
 20515  016A6E  0EEF               	movlw	-17
 20516  016A70  32E3               	rrcf	plusw1,f,c
 20517  016A72  0EEE               	movlw	-18
 20518  016A74  32E3               	rrcf	plusw1,f,c
 20519                           
 20520                           ;stkvar	_counter @ sp[(-2)+1]
 20521  016A76  0EFF               	movlw	-1
 20522  016A78  50E3               	movf	plusw1,w,c
 20523  016A7A  6E01               	movwf	btemp^0,c
 20524  016A7C  0E01               	movlw	1
 20525  016A7E  5E01               	subwf	btemp^0,f,c
 20526  016A80  0EFF               	movlw	-1
 20527  016A82  0060  F007  FFE3   	movff	btemp,plusw1
 20528  016A88  A4D8               	btfss	status,2,c
 20529  016A8A  D7A4               	goto	u6000
 20530  016A8C                     u6020:
 20531                           
 20532                           ;stkvar	_sign @ sp[(-2)+0]
 20533  016A8C  0EFE               	movlw	-2
 20534  016A8E  50E3               	movf	plusw1,w,c
 20535  016A90  B4D8               	btfsc	status,2,c
 20536  016A92  D025               	goto	u6040
 20537                           
 20538                           ;stkvar	_dividend @ sp[(-2)+-8]
 20539                           ;stkvar	_dividend @ sp[(-2)+-8]
 20540  016A94  0EF6               	movlw	-10
 20541  016A96  6CE3               	negf	plusw1,c
 20542  016A98  0EF7               	movlw	-9
 20543  016A9A  1EE3               	comf	plusw1,f,c
 20544  016A9C  0EF8               	movlw	-8
 20545  016A9E  1EE3               	comf	plusw1,f,c
 20546  016AA0  0EF9               	movlw	-7
 20547  016AA2  1EE3               	comf	plusw1,f,c
 20548  016AA4  0EFA               	movlw	-6
 20549  016AA6  1EE3               	comf	plusw1,f,c
 20550  016AA8  0EFB               	movlw	-5
 20551  016AAA  1EE3               	comf	plusw1,f,c
 20552  016AAC  0EFC               	movlw	-4
 20553  016AAE  1EE3               	comf	plusw1,f,c
 20554  016AB0  0EFD               	movlw	-3
 20555  016AB2  1EE3               	comf	plusw1,f,c
 20556  016AB4  E314               	bnc	u6040
 20557  016AB6  0EF7               	movlw	-9
 20558  016AB8  2AE3               	incf	plusw1,f,c
 20559  016ABA  E311               	bnc	u6040
 20560  016ABC  0EF8               	movlw	-8
 20561  016ABE  2AE3               	incf	plusw1,f,c
 20562  016AC0  E30E               	bnc	u6040
 20563  016AC2  0EF9               	movlw	-7
 20564  016AC4  2AE3               	incf	plusw1,f,c
 20565  016AC6  E30B               	bnc	u6040
 20566  016AC8  0EFA               	movlw	-6
 20567  016ACA  2AE3               	incf	plusw1,f,c
 20568  016ACC  E308               	bnc	u6040
 20569  016ACE  0EFB               	movlw	-5
 20570  016AD0  2AE3               	incf	plusw1,f,c
 20571  016AD2  E305               	bnc	u6040
 20572  016AD4  0EFC               	movlw	-4
 20573  016AD6  2AE3               	incf	plusw1,f,c
 20574  016AD8  E302               	bnc	u6040
 20575  016ADA  0EFD               	movlw	-3
 20576  016ADC  2AE3               	incf	plusw1,f,c
 20577  016ADE                     u6040:
 20578                           
 20579                           ;stkvar	_dividend @ sp[(-2)+-8]
 20580  016ADE  0EF6               	movlw	246
 20581  016AE0  24E1               	addwf	fsr1l,w,c
 20582  016AE2  6ED9               	movwf	fsr2l,c
 20583  016AE4  0EFF               	movlw	255
 20584  016AE6  20E2               	addwfc	fsr1h,w,c
 20585  016AE8  6EDA               	movwf	fsr2h,c
 20586                           
 20587                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20588  016AEA  0E08               	movlw	8
 20589  016AEC  6E01               	movwf	btemp^0,c
 20590  016AEE  0EF6               	movlw	-10
 20591  016AF0                     us605999:
 20592  016AF0  006F FF7B FFE3     	movff	postinc2,plusw1
 20593  016AF6  28E8               	incf	wreg,w,c
 20594  016AF8  2E01               	decfsz	btemp^0,f,c
 20595  016AFA  D7FA               	bra	us605999
 20596                           
 20597                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20598  016AFC  52E5               	movf	postdec1,f,c
 20599  016AFE  52E5               	movf	postdec1,f,c
 20600  016B00  0012               	return		;funcret
 20601  016B02                     __end_of___aomod:
 20602                           	opt callstack 0
 20603                           
 20604 ;; *************** function ___aodiv *****************
 20605 ;; Defined at:
 20606 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20607 ;; Parameters:    Size  Location     Type
 20608 ;;  dividend        8  [STACK] long long 
 20609 ;;  divisor         8  [STACK] long long 
 20610 ;; Auto vars:     Size  Location     Type
 20611 ;;  quotient        8  [STACK] long long 
 20612 ;;  sign            1  [STACK] unsigned char 
 20613 ;;  counter         1  [STACK] unsigned char 
 20614 ;; Return value:  Size  Location     Type
 20615 ;;                  8  [STACK] long long 
 20616 ;; Registers used:
 20617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20618 ;; Tracked objects:
 20619 ;;		On entry : 0/3
 20620 ;;		On exit  : 0/0
 20621 ;;		Unchanged: 0/0
 20622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20627 ;;Total ram usage:        0 bytes
 20628 ;; Hardware stack levels used:    1
 20629 ;; Hardware stack levels required when called:   15
 20630 ;; This function calls:
 20631 ;;		Nothing
 20632 ;; This function is called by:
 20633 ;;		_dtoa
 20634 ;; This function uses a reentrant model
 20635 ;;
 20636                           
 20637                           	psect	text71
 20638  0163CE                     __ptext71:
 20639                           	opt callstack 0
 20640  0163CE                     ___aodiv:
 20641                           	opt callstack 0
 20642                           
 20643                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20644  0163CE  0E0A               	movlw	10
 20645  0163D0  26E1               	addwf	fsr1l,f,c
 20646  0163D2  0E00               	movlw	0
 20647  0163D4  22E2               	addwfc	fsr1h,f,c
 20648                           
 20649                           ;stkvar	_sign @ sp[(-10)+8]
 20650                           
 20651                           ;incstack = 0
 20652 ;; hardware stack exceeded
 20653  0163D6  0EFE               	movlw	-2
 20654  0163D8  6AE3               	clrf	plusw1,c
 20655                           
 20656                           ;stkvar	_divisor @ sp[(-10)+-16]
 20657  0163DA  0EED               	movlw	-19
 20658  0163DC  AEE3               	btfss	plusw1,7,c
 20659  0163DE  D028               	goto	l7503
 20660                           
 20661                           ;stkvar	_divisor @ sp[(-10)+-16]
 20662                           ;stkvar	_divisor @ sp[(-10)+-16]
 20663  0163E0  0EE6               	movlw	-26
 20664  0163E2  6CE3               	negf	plusw1,c
 20665  0163E4  0EE7               	movlw	-25
 20666  0163E6  1EE3               	comf	plusw1,f,c
 20667  0163E8  0EE8               	movlw	-24
 20668  0163EA  1EE3               	comf	plusw1,f,c
 20669  0163EC  0EE9               	movlw	-23
 20670  0163EE  1EE3               	comf	plusw1,f,c
 20671  0163F0  0EEA               	movlw	-22
 20672  0163F2  1EE3               	comf	plusw1,f,c
 20673  0163F4  0EEB               	movlw	-21
 20674  0163F6  1EE3               	comf	plusw1,f,c
 20675  0163F8  0EEC               	movlw	-20
 20676  0163FA  1EE3               	comf	plusw1,f,c
 20677  0163FC  0EED               	movlw	-19
 20678  0163FE  1EE3               	comf	plusw1,f,c
 20679  016400  E314               	bnc	u5840
 20680  016402  0EE7               	movlw	-25
 20681  016404  2AE3               	incf	plusw1,f,c
 20682  016406  E311               	bnc	u5840
 20683  016408  0EE8               	movlw	-24
 20684  01640A  2AE3               	incf	plusw1,f,c
 20685  01640C  E30E               	bnc	u5840
 20686  01640E  0EE9               	movlw	-23
 20687  016410  2AE3               	incf	plusw1,f,c
 20688  016412  E30B               	bnc	u5840
 20689  016414  0EEA               	movlw	-22
 20690  016416  2AE3               	incf	plusw1,f,c
 20691  016418  E308               	bnc	u5840
 20692  01641A  0EEB               	movlw	-21
 20693  01641C  2AE3               	incf	plusw1,f,c
 20694  01641E  E305               	bnc	u5840
 20695  016420  0EEC               	movlw	-20
 20696  016422  2AE3               	incf	plusw1,f,c
 20697  016424  E302               	bnc	u5840
 20698  016426  0EED               	movlw	-19
 20699  016428  2AE3               	incf	plusw1,f,c
 20700  01642A                     u5840:
 20701                           
 20702                           ;stkvar	_sign @ sp[(-10)+8]
 20703  01642A  0EFE               	movlw	-2
 20704  01642C  6AE3               	clrf	plusw1,c
 20705  01642E  2AE3               	incf	plusw1,f,c
 20706  016430                     l7503:
 20707                           
 20708                           ;stkvar	_dividend @ sp[(-10)+-8]
 20709  016430  0EF5               	movlw	-11
 20710  016432  AEE3               	btfss	plusw1,7,c
 20711  016434  D027               	goto	l7509
 20712                           
 20713                           ;stkvar	_dividend @ sp[(-10)+-8]
 20714                           ;stkvar	_dividend @ sp[(-10)+-8]
 20715  016436  0EEE               	movlw	-18
 20716  016438  6CE3               	negf	plusw1,c
 20717  01643A  0EEF               	movlw	-17
 20718  01643C  1EE3               	comf	plusw1,f,c
 20719  01643E  0EF0               	movlw	-16
 20720  016440  1EE3               	comf	plusw1,f,c
 20721  016442  0EF1               	movlw	-15
 20722  016444  1EE3               	comf	plusw1,f,c
 20723  016446  0EF2               	movlw	-14
 20724  016448  1EE3               	comf	plusw1,f,c
 20725  01644A  0EF3               	movlw	-13
 20726  01644C  1EE3               	comf	plusw1,f,c
 20727  01644E  0EF4               	movlw	-12
 20728  016450  1EE3               	comf	plusw1,f,c
 20729  016452  0EF5               	movlw	-11
 20730  016454  1EE3               	comf	plusw1,f,c
 20731  016456  E314               	bnc	u5860
 20732  016458  0EEF               	movlw	-17
 20733  01645A  2AE3               	incf	plusw1,f,c
 20734  01645C  E311               	bnc	u5860
 20735  01645E  0EF0               	movlw	-16
 20736  016460  2AE3               	incf	plusw1,f,c
 20737  016462  E30E               	bnc	u5860
 20738  016464  0EF1               	movlw	-15
 20739  016466  2AE3               	incf	plusw1,f,c
 20740  016468  E30B               	bnc	u5860
 20741  01646A  0EF2               	movlw	-14
 20742  01646C  2AE3               	incf	plusw1,f,c
 20743  01646E  E308               	bnc	u5860
 20744  016470  0EF3               	movlw	-13
 20745  016472  2AE3               	incf	plusw1,f,c
 20746  016474  E305               	bnc	u5860
 20747  016476  0EF4               	movlw	-12
 20748  016478  2AE3               	incf	plusw1,f,c
 20749  01647A  E302               	bnc	u5860
 20750  01647C  0EF5               	movlw	-11
 20751  01647E  2AE3               	incf	plusw1,f,c
 20752  016480                     u5860:
 20753                           
 20754                           ;stkvar	_sign @ sp[(-10)+8]
 20755  016480  0EFE               	movlw	-2
 20756  016482  70E3               	btg	plusw1,0,c
 20757  016484                     l7509:
 20758                           
 20759                           ;stkvar	_quotient @ sp[(-10)+0]
 20760  016484  0E07               	movlw	7
 20761  016486  6E01               	movwf	btemp^0,c
 20762  016488  0EF6               	movlw	-10
 20763  01648A                     u5871:
 20764  01648A  6AE3               	clrf	plusw1,c
 20765  01648C  2AE8               	incf	wreg,f,c
 20766  01648E  0601               	decf	btemp^0,f,c
 20767  016490  E2FC               	bc	u5871
 20768                           
 20769                           ;stkvar	_divisor @ sp[(-10)+-16]
 20770  016492  0EE6               	movlw	-26
 20771  016494  50E3               	movf	plusw1,w,c
 20772  016496  E116               	bnz	u5880
 20773  016498  0EE7               	movlw	-25
 20774  01649A  50E3               	movf	plusw1,w,c
 20775  01649C  E113               	bnz	u5880
 20776  01649E  0EE8               	movlw	-24
 20777  0164A0  50E3               	movf	plusw1,w,c
 20778  0164A2  E110               	bnz	u5880
 20779  0164A4  0EE9               	movlw	-23
 20780  0164A6  50E3               	movf	plusw1,w,c
 20781  0164A8  E10D               	bnz	u5880
 20782  0164AA  0EEA               	movlw	-22
 20783  0164AC  50E3               	movf	plusw1,w,c
 20784  0164AE  E10A               	bnz	u5880
 20785  0164B0  0EEB               	movlw	-21
 20786  0164B2  50E3               	movf	plusw1,w,c
 20787  0164B4  E107               	bnz	u5880
 20788  0164B6  0EEC               	movlw	-20
 20789  0164B8  50E3               	movf	plusw1,w,c
 20790  0164BA  E104               	bnz	u5880
 20791  0164BC  0EED               	movlw	-19
 20792  0164BE  50E3               	movf	plusw1,w,c
 20793  0164C0  B4D8               	btfsc	status,2,c
 20794  0164C2  D088               	goto	u5910
 20795  0164C4                     u5880:
 20796                           
 20797                           ;stkvar	_counter @ sp[(-10)+9]
 20798  0164C4  0EFF               	movlw	-1
 20799  0164C6  6AE3               	clrf	plusw1,c
 20800  0164C8  D012               	goto	L23
 20801  0164CA                     l7515:
 20802                           
 20803                           ;stkvar	_divisor @ sp[(-10)+-16]
 20804  0164CA  90D8               	bcf	status,0,c
 20805  0164CC  0EE6               	movlw	-26
 20806  0164CE  36E3               	rlcf	plusw1,f,c
 20807  0164D0  0EE7               	movlw	-25
 20808  0164D2  36E3               	rlcf	plusw1,f,c
 20809  0164D4  0EE8               	movlw	-24
 20810  0164D6  36E3               	rlcf	plusw1,f,c
 20811  0164D8  0EE9               	movlw	-23
 20812  0164DA  36E3               	rlcf	plusw1,f,c
 20813  0164DC  0EEA               	movlw	-22
 20814  0164DE  36E3               	rlcf	plusw1,f,c
 20815  0164E0  0EEB               	movlw	-21
 20816  0164E2  36E3               	rlcf	plusw1,f,c
 20817  0164E4  0EEC               	movlw	-20
 20818  0164E6  36E3               	rlcf	plusw1,f,c
 20819  0164E8  0EED               	movlw	-19
 20820  0164EA  36E3               	rlcf	plusw1,f,c
 20821                           
 20822                           ;stkvar	_counter @ sp[(-10)+9]
 20823  0164EC  0EFF               	movlw	-1
 20824  0164EE                     L23:
 20825  0164EE  2AE3               	incf	plusw1,f,c
 20826                           
 20827                           ;stkvar	_divisor @ sp[(-10)+-16]
 20828  0164F0  0EED               	movlw	-19
 20829  0164F2  AEE3               	btfss	plusw1,7,c
 20830  0164F4  D7EA               	goto	l7515
 20831  0164F6                     u5890:
 20832                           
 20833                           ;stkvar	_quotient @ sp[(-10)+0]
 20834  0164F6  90D8               	bcf	status,0,c
 20835  0164F8  0EF6               	movlw	-10
 20836  0164FA  36E3               	rlcf	plusw1,f,c
 20837  0164FC  0EF7               	movlw	-9
 20838  0164FE  36E3               	rlcf	plusw1,f,c
 20839  016500  0EF8               	movlw	-8
 20840  016502  36E3               	rlcf	plusw1,f,c
 20841  016504  0EF9               	movlw	-7
 20842  016506  36E3               	rlcf	plusw1,f,c
 20843  016508  0EFA               	movlw	-6
 20844  01650A  36E3               	rlcf	plusw1,f,c
 20845  01650C  0EFB               	movlw	-5
 20846  01650E  36E3               	rlcf	plusw1,f,c
 20847  016510  0EFC               	movlw	-4
 20848  016512  36E3               	rlcf	plusw1,f,c
 20849  016514  0EFD               	movlw	-3
 20850  016516  36E3               	rlcf	plusw1,f,c
 20851                           
 20852                           ;stkvar	_divisor @ sp[(-10)+-16]
 20853                           ;stkvar	_dividend @ sp[(-10)+-8]
 20854  016518  50E1               	movf	fsr1l,w,c
 20855  01651A  0FEE               	addlw	-18
 20856  01651C  6ED9               	movwf	fsr2l,c
 20857  01651E  50E2               	movf	fsr1h,w,c
 20858  016520  6EDA               	movwf	fsr2h,c
 20859  016522  0EFF               	movlw	255
 20860  016524  22DA               	addwfc	fsr2h,f,c
 20861  016526  0EE6               	movlw	-26
 20862  016528  50E3               	movf	plusw1,w,c
 20863  01652A  5CDE               	subwf	postinc2,w,c
 20864  01652C  0EE7               	movlw	-25
 20865  01652E  50E3               	movf	plusw1,w,c
 20866  016530  58DE               	subwfb	postinc2,w,c
 20867  016532  0EE8               	movlw	-24
 20868  016534  50E3               	movf	plusw1,w,c
 20869  016536  58DE               	subwfb	postinc2,w,c
 20870  016538  0EE9               	movlw	-23
 20871  01653A  50E3               	movf	plusw1,w,c
 20872  01653C  58DE               	subwfb	postinc2,w,c
 20873  01653E  0EEA               	movlw	-22
 20874  016540  50E3               	movf	plusw1,w,c
 20875  016542  58DE               	subwfb	postinc2,w,c
 20876  016544  0EEB               	movlw	-21
 20877  016546  50E3               	movf	plusw1,w,c
 20878  016548  58DE               	subwfb	postinc2,w,c
 20879  01654A  0EEC               	movlw	-20
 20880  01654C  50E3               	movf	plusw1,w,c
 20881  01654E  58DE               	subwfb	postinc2,w,c
 20882  016550  0EED               	movlw	-19
 20883  016552  50E3               	movf	plusw1,w,c
 20884  016554  58DE               	subwfb	postinc2,w,c
 20885  016556  A0D8               	btfss	status,0,c
 20886  016558  D021               	goto	l7527
 20887                           
 20888                           ;stkvar	_divisor @ sp[(-10)+-16]
 20889                           ;stkvar	_dividend @ sp[(-10)+-8]
 20890  01655A  50E1               	movf	fsr1l,w,c
 20891  01655C  0FEE               	addlw	-18
 20892  01655E  6ED9               	movwf	fsr2l,c
 20893  016560  50E2               	movf	fsr1h,w,c
 20894  016562  6EDA               	movwf	fsr2h,c
 20895  016564  0EFF               	movlw	255
 20896  016566  22DA               	addwfc	fsr2h,f,c
 20897  016568  0EE6               	movlw	-26
 20898  01656A  50E3               	movf	plusw1,w,c
 20899  01656C  5EDE               	subwf	postinc2,f,c
 20900  01656E  0EE7               	movlw	-25
 20901  016570  50E3               	movf	plusw1,w,c
 20902  016572  5ADE               	subwfb	postinc2,f,c
 20903  016574  0EE8               	movlw	-24
 20904  016576  50E3               	movf	plusw1,w,c
 20905  016578  5ADE               	subwfb	postinc2,f,c
 20906  01657A  0EE9               	movlw	-23
 20907  01657C  50E3               	movf	plusw1,w,c
 20908  01657E  5ADE               	subwfb	postinc2,f,c
 20909  016580  0EEA               	movlw	-22
 20910  016582  50E3               	movf	plusw1,w,c
 20911  016584  5ADE               	subwfb	postinc2,f,c
 20912  016586  0EEB               	movlw	-21
 20913  016588  50E3               	movf	plusw1,w,c
 20914  01658A  5ADE               	subwfb	postinc2,f,c
 20915  01658C  0EEC               	movlw	-20
 20916  01658E  50E3               	movf	plusw1,w,c
 20917  016590  5ADE               	subwfb	postinc2,f,c
 20918  016592  0EED               	movlw	-19
 20919  016594  50E3               	movf	plusw1,w,c
 20920  016596  5ADE               	subwfb	postinc2,f,c
 20921                           
 20922                           ;stkvar	_quotient @ sp[(-10)+0]
 20923  016598  0EF6               	movlw	-10
 20924  01659A  80E3               	bsf	plusw1,0,c
 20925  01659C                     l7527:
 20926                           
 20927                           ;stkvar	_divisor @ sp[(-10)+-16]
 20928  01659C  90D8               	bcf	status,0,c
 20929  01659E  0EED               	movlw	-19
 20930  0165A0  32E3               	rrcf	plusw1,f,c
 20931  0165A2  0EEC               	movlw	-20
 20932  0165A4  32E3               	rrcf	plusw1,f,c
 20933  0165A6  0EEB               	movlw	-21
 20934  0165A8  32E3               	rrcf	plusw1,f,c
 20935  0165AA  0EEA               	movlw	-22
 20936  0165AC  32E3               	rrcf	plusw1,f,c
 20937  0165AE  0EE9               	movlw	-23
 20938  0165B0  32E3               	rrcf	plusw1,f,c
 20939  0165B2  0EE8               	movlw	-24
 20940  0165B4  32E3               	rrcf	plusw1,f,c
 20941  0165B6  0EE7               	movlw	-25
 20942  0165B8  32E3               	rrcf	plusw1,f,c
 20943  0165BA  0EE6               	movlw	-26
 20944  0165BC  32E3               	rrcf	plusw1,f,c
 20945                           
 20946                           ;stkvar	_counter @ sp[(-10)+9]
 20947  0165BE  0EFF               	movlw	-1
 20948  0165C0  50E3               	movf	plusw1,w,c
 20949  0165C2  6E01               	movwf	btemp^0,c
 20950  0165C4  0E01               	movlw	1
 20951  0165C6  5E01               	subwf	btemp^0,f,c
 20952  0165C8  0EFF               	movlw	-1
 20953  0165CA  0060  F007  FFE3   	movff	btemp,plusw1
 20954  0165D0  A4D8               	btfss	status,2,c
 20955  0165D2  D791               	goto	u5890
 20956  0165D4                     u5910:
 20957                           
 20958                           ;stkvar	_sign @ sp[(-10)+8]
 20959  0165D4  0EFE               	movlw	-2
 20960  0165D6  50E3               	movf	plusw1,w,c
 20961  0165D8  B4D8               	btfsc	status,2,c
 20962  0165DA  D025               	goto	u5930
 20963                           
 20964                           ;stkvar	_quotient @ sp[(-10)+0]
 20965                           ;stkvar	_quotient @ sp[(-10)+0]
 20966  0165DC  0EF6               	movlw	-10
 20967  0165DE  6CE3               	negf	plusw1,c
 20968  0165E0  0EF7               	movlw	-9
 20969  0165E2  1EE3               	comf	plusw1,f,c
 20970  0165E4  0EF8               	movlw	-8
 20971  0165E6  1EE3               	comf	plusw1,f,c
 20972  0165E8  0EF9               	movlw	-7
 20973  0165EA  1EE3               	comf	plusw1,f,c
 20974  0165EC  0EFA               	movlw	-6
 20975  0165EE  1EE3               	comf	plusw1,f,c
 20976  0165F0  0EFB               	movlw	-5
 20977  0165F2  1EE3               	comf	plusw1,f,c
 20978  0165F4  0EFC               	movlw	-4
 20979  0165F6  1EE3               	comf	plusw1,f,c
 20980  0165F8  0EFD               	movlw	-3
 20981  0165FA  1EE3               	comf	plusw1,f,c
 20982  0165FC  E314               	bnc	u5930
 20983  0165FE  0EF7               	movlw	-9
 20984  016600  2AE3               	incf	plusw1,f,c
 20985  016602  E311               	bnc	u5930
 20986  016604  0EF8               	movlw	-8
 20987  016606  2AE3               	incf	plusw1,f,c
 20988  016608  E30E               	bnc	u5930
 20989  01660A  0EF9               	movlw	-7
 20990  01660C  2AE3               	incf	plusw1,f,c
 20991  01660E  E30B               	bnc	u5930
 20992  016610  0EFA               	movlw	-6
 20993  016612  2AE3               	incf	plusw1,f,c
 20994  016614  E308               	bnc	u5930
 20995  016616  0EFB               	movlw	-5
 20996  016618  2AE3               	incf	plusw1,f,c
 20997  01661A  E305               	bnc	u5930
 20998  01661C  0EFC               	movlw	-4
 20999  01661E  2AE3               	incf	plusw1,f,c
 21000  016620  E302               	bnc	u5930
 21001  016622  0EFD               	movlw	-3
 21002  016624  2AE3               	incf	plusw1,f,c
 21003  016626                     u5930:
 21004                           
 21005                           ;stkvar	_quotient @ sp[(-10)+0]
 21006  016626  0EF6               	movlw	246
 21007  016628  24E1               	addwf	fsr1l,w,c
 21008  01662A  6ED9               	movwf	fsr2l,c
 21009  01662C  0EFF               	movlw	255
 21010  01662E  20E2               	addwfc	fsr1h,w,c
 21011  016630  6EDA               	movwf	fsr2h,c
 21012                           
 21013                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21014  016632  0E08               	movlw	8
 21015  016634  6E01               	movwf	btemp^0,c
 21016  016636  0EEE               	movlw	-18
 21017  016638                     us594999:
 21018  016638  006F FF7B FFE3     	movff	postinc2,plusw1
 21019  01663E  28E8               	incf	wreg,w,c
 21020  016640  2E01               	decfsz	btemp^0,f,c
 21021  016642  D7FA               	bra	us594999
 21022                           
 21023                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21024  016644  0EF6               	movlw	246
 21025  016646  26E1               	addwf	fsr1l,f,c
 21026  016648  0EFF               	movlw	255
 21027  01664A  22E2               	addwfc	fsr1h,f,c
 21028  01664C  0012               	return		;funcret
 21029  01664E                     __end_of___aodiv:
 21030                           	opt callstack 0
 21031                           
 21032 ;; *************** function _ctoa *****************
 21033 ;; Defined at:
 21034 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21035 ;; Parameters:    Size  Location     Type
 21036 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21037 ;;		 -> f(6), NULL(0), 
 21038 ;;  c               1  [STACK] unsigned char 
 21039 ;; Auto vars:     Size  Location     Type
 21040 ;;  w               2  [STACK] int 
 21041 ;;  l               2    0        int 
 21042 ;; Return value:  Size  Location     Type
 21043 ;;                  2  [STACK] int 
 21044 ;; Registers used:
 21045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21046 ;; Tracked objects:
 21047 ;;		On entry : 0/0
 21048 ;;		On exit  : 0/0
 21049 ;;		Unchanged: 0/0
 21050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21055 ;;Total ram usage:        0 bytes
 21056 ;; Hardware stack levels used:    1
 21057 ;; Hardware stack levels required when called:   20
 21058 ;; This function calls:
 21059 ;;		_pad
 21060 ;; This function is called by:
 21061 ;;		_vfpfcnvrt
 21062 ;; This function uses a reentrant model
 21063 ;;
 21064                           
 21065                           	psect	text72
 21066  01945C                     __ptext72:
 21067                           	opt callstack 0
 21068  01945C                     _ctoa:
 21069                           	opt callstack 0
 21070                           
 21071                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21072  01945C  52E6               	movf	postinc1,f,c
 21073  01945E  52E6               	movf	postinc1,f,c
 21074                           
 21075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21076                           
 21077                           ;incstack = 0
 21078 ;; hardware stack exceeded
 21079  019460  5021               	movf	_width^0,w,c
 21080  019462  1022               	iorwf	(_width+1)^0,w,c
 21081  019464  A4D8               	btfss	status,2,c
 21082  019466  D009               	goto	l10919
 21083                           
 21084                           ;stkvar	_w @ sp[(-2)+0]
 21085  019468  0EFE               	movlw	-2
 21086  01946A  0060  F087  FFE3   	movff	_width,plusw1
 21087  019470  0EFF               	movlw	-1
 21088  019472  0060  F08B  FFE3   	movff	_width+1,plusw1
 21089  019478  D016               	goto	l10921
 21090  01947A                     l10919:
 21091  01947A  0EFF               	movlw	255
 21092  01947C  6E0B               	movwf	(btemp+10)^0,c
 21093  01947E  0EFF               	movlw	255
 21094  019480  6E0C               	movwf	(btemp+11)^0,c
 21095  019482  0060  F084  F009   	movff	_width,btemp+8
 21096  019488  0060  F088  F00A   	movff	_width+1,btemp+9
 21097  01948E  500B               	movf	(btemp+10)^0,w,c
 21098  019490  2609               	addwf	(btemp+8)^0,f,c
 21099  019492  500C               	movf	(btemp+11)^0,w,c
 21100  019494  220A               	addwfc	(btemp+9)^0,f,c
 21101                           
 21102                           ;stkvar	_w @ sp[(-2)+0]
 21103  019496  0EFE               	movlw	-2
 21104  019498  0060  F027  FFE3   	movff	btemp+8,plusw1
 21105  01949E  0EFF               	movlw	-1
 21106  0194A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21107  0194A6                     l10921:
 21108                           
 21109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21110                           ;stkvar	_c @ sp[(-2)+-3]
 21111  0194A6  0EFB               	movlw	-5
 21112  0194A8  006F FF8C  F394    	movff	plusw1,_dbuf
 21113                           
 21114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21115  0194AE  0103               	movlb	3	; () banked
 21116  0194B0  6B95               	clrf	(_dbuf+1)& (0+255),b
 21117                           
 21118                           ; BSR set to: 3
 21119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21120                           ;stkvar	_w @ sp[(-2)+0]
 21121  0194B2  0EFE               	movlw	-2
 21122  0194B4  006F FF8F FFE6     	movff	plusw1,postinc1
 21123  0194BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21124  0194C0  0E94               	movlw	low _dbuf
 21125  0194C2  6EE6               	movwf	postinc1,c
 21126  0194C4  0E03               	movlw	high _dbuf
 21127  0194C6  6EE6               	movwf	postinc1,c
 21128                           
 21129                           ;stkvar	_fp @ sp[(-6)+-2]
 21130  0194C8  0EF8               	movlw	-8
 21131  0194CA  006F FF8F FFE6     	movff	plusw1,postinc1
 21132  0194D0  006F FF8F FFE6     	movff	plusw1,postinc1
 21133  0194D6  EC69  F0C2         	call	_pad	;wreg free
 21134                           
 21135                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21136  0194DA  0EFB               	movlw	251
 21137  0194DC  26E1               	addwf	fsr1l,f,c
 21138  0194DE  0EFF               	movlw	255
 21139  0194E0  22E2               	addwfc	fsr1h,f,c
 21140  0194E2  0012               	return		;funcret
 21141  0194E4                     __end_of_ctoa:
 21142                           	opt callstack 0
 21143                           
 21144 ;; *************** function _pad *****************
 21145 ;; Defined at:
 21146 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21147 ;; Parameters:    Size  Location     Type
 21148 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21149 ;;		 -> f(6), NULL(0), 
 21150 ;;  buf             2  [STACK] PTR unsigned char 
 21151 ;;		 -> dbuf(80), 
 21152 ;;  p               2  [STACK] int 
 21153 ;; Auto vars:     Size  Location     Type
 21154 ;;  w               2  [STACK] int 
 21155 ;;  i               2  [STACK] int 
 21156 ;; Return value:  Size  Location     Type
 21157 ;;                  2  [STACK] int 
 21158 ;; Registers used:
 21159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21160 ;; Tracked objects:
 21161 ;;		On entry : 0/3
 21162 ;;		On exit  : 0/0
 21163 ;;		Unchanged: 0/0
 21164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21169 ;;Total ram usage:        0 bytes
 21170 ;; Hardware stack levels used:    1
 21171 ;; Hardware stack levels required when called:   19
 21172 ;; This function calls:
 21173 ;;		_fputc
 21174 ;;		_fputs
 21175 ;;		_strlen
 21176 ;; This function is called by:
 21177 ;;		_ctoa
 21178 ;;		_dtoa
 21179 ;;		_efgtoa
 21180 ;;		_utoa
 21181 ;;		_xtoa
 21182 ;; This function uses a reentrant model
 21183 ;;
 21184                           
 21185                           	psect	text73
 21186  0184D2                     __ptext73:
 21187                           	opt callstack 0
 21188  0184D2                     _pad:
 21189                           	opt callstack 0
 21190                           
 21191                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21192  0184D2  52E6               	movf	postinc1,f,c
 21193  0184D4  52E6               	movf	postinc1,f,c
 21194  0184D6  52E6               	movf	postinc1,f,c
 21195  0184D8  52E6               	movf	postinc1,f,c
 21196                           
 21197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21198                           
 21199                           ;incstack = 0
 21200 ;; hardware stack exceeded
 21201  0184DA  A025               	btfss	_flags^0,0,c
 21202  0184DC  D010               	goto	l10841
 21203                           
 21204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21205                           ;stkvar	_fp @ sp[(-4)+-2]
 21206  0184DE  0EFA               	movlw	-6
 21207  0184E0  006F FF8F FFE6     	movff	plusw1,postinc1
 21208  0184E6  006F FF8F FFE6     	movff	plusw1,postinc1
 21209                           
 21210                           ;stkvar	_buf @ sp[(-6)+-4]
 21211  0184EC  0EF6               	movlw	-10
 21212  0184EE  006F FF8F FFE6     	movff	plusw1,postinc1
 21213  0184F4  006F FF8F FFE6     	movff	plusw1,postinc1
 21214  0184FA  ECBF  F0C8         	call	_fputs	;wreg free
 21215  0184FE                     l10841:
 21216                           
 21217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21218                           ;stkvar	_p @ sp[(-4)+-6]
 21219  0184FE  0EF7               	movlw	-9
 21220  018500  BEE3               	btfsc	plusw1,7,c
 21221  018502  D011               	goto	l10845
 21222                           
 21223                           ;stkvar	_p @ sp[(-4)+-6]
 21224                           ;stkvar	_w @ sp[(-4)+0]
 21225  018504  0EF6               	movlw	-10
 21226  018506  006F FF8C  F001    	movff	plusw1,btemp
 21227  01850C  0EFC               	movlw	-4
 21228  01850E  0060  F007  FFE3   	movff	btemp,plusw1
 21229  018514  0EF7               	movlw	-9
 21230  018516  006F FF8C  F001    	movff	plusw1,btemp
 21231  01851C  0EFD               	movlw	-3
 21232  01851E  0060  F007  FFE3   	movff	btemp,plusw1
 21233  018524  D004               	goto	l2013
 21234  018526                     l10845:
 21235                           
 21236                           ;stkvar	_w @ sp[(-4)+0]
 21237  018526  0EFC               	movlw	-4
 21238  018528  6AE3               	clrf	plusw1,c
 21239  01852A  0EFD               	movlw	-3
 21240  01852C  6AE3               	clrf	plusw1,c
 21241  01852E                     l2013:
 21242                           
 21243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21244                           ;stkvar	_i @ sp[(-4)+2]
 21245  01852E  0EFE               	movlw	-2
 21246  018530  6AE3               	clrf	plusw1,c
 21247  018532  0EFF               	movlw	-1
 21248  018534  6AE3               	clrf	plusw1,c
 21249                           
 21250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21251  018536  D01E               	goto	l10851
 21252  018538                     l10847:
 21253                           
 21254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21255                           ;stkvar	_fp @ sp[(-4)+-2]
 21256  018538  0EFA               	movlw	-6
 21257  01853A  006F FF8F FFE6     	movff	plusw1,postinc1
 21258  018540  006F FF8F FFE6     	movff	plusw1,postinc1
 21259  018546  0E20               	movlw	32
 21260  018548  6EE6               	movwf	postinc1,c
 21261  01854A  0E00               	movlw	0
 21262  01854C  6EE6               	movwf	postinc1,c
 21263  01854E  EC4B  F0C1         	call	_fputc	;wreg free
 21264                           
 21265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21266                           ;stkvar	_i @ sp[(-4)+2]
 21267  018552  0EFE               	movlw	-2
 21268  018554  50E3               	movf	plusw1,w,c
 21269  018556  0F01               	addlw	1
 21270  018558  6E01               	movwf	btemp^0,c
 21271  01855A  0EFE               	movlw	-2
 21272  01855C  0060  F007  FFE3   	movff	btemp,plusw1
 21273  018562  6A01               	clrf	btemp^0,c
 21274  018564  0EFF               	movlw	-1
 21275  018566  50E3               	movf	plusw1,w,c
 21276  018568  2001               	addwfc	btemp^0,w,c
 21277  01856A  6E01               	movwf	btemp^0,c
 21278  01856C  0EFF               	movlw	-1
 21279  01856E  0060  F007  FFE3   	movff	btemp,plusw1
 21280  018574                     l10851:
 21281                           
 21282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21283                           ;stkvar	_w @ sp[(-4)+0]
 21284                           ;stkvar	_i @ sp[(-4)+2]
 21285  018574  50E1               	movf	fsr1l,w,c
 21286  018576  0FFE               	addlw	-2
 21287  018578  6ED9               	movwf	fsr2l,c
 21288  01857A  50E2               	movf	fsr1h,w,c
 21289  01857C  6EDA               	movwf	fsr2h,c
 21290  01857E  0EFF               	movlw	255
 21291  018580  22DA               	addwfc	fsr2h,f,c
 21292  018582  0EFC               	movlw	-4
 21293  018584  50E3               	movf	plusw1,w,c
 21294  018586  5CDE               	subwf	postinc2,w,c
 21295  018588  50DE               	movf	postinc2,w,c
 21296  01858A  0A80               	xorlw	128
 21297  01858C  6E01               	movwf	btemp^0,c
 21298  01858E  0EFD               	movlw	-3
 21299  018590  50E3               	movf	plusw1,w,c
 21300  018592  0A80               	xorlw	128
 21301  018594  5801               	subwfb	btemp^0,w,c
 21302  018596  A0D8               	btfss	status,0,c
 21303  018598  D7CF               	goto	l10847
 21304                           
 21305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21306  01859A  B025               	btfsc	_flags^0,0,c
 21307  01859C  D010               	goto	l10855
 21308                           
 21309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21310                           ;stkvar	_fp @ sp[(-4)+-2]
 21311  01859E  0EFA               	movlw	-6
 21312  0185A0  006F FF8F FFE6     	movff	plusw1,postinc1
 21313  0185A6  006F FF8F FFE6     	movff	plusw1,postinc1
 21314                           
 21315                           ;stkvar	_buf @ sp[(-6)+-4]
 21316  0185AC  0EF6               	movlw	-10
 21317  0185AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21318  0185B4  006F FF8F FFE6     	movff	plusw1,postinc1
 21319  0185BA  ECBF  F0C8         	call	_fputs	;wreg free
 21320  0185BE                     l10855:
 21321                           
 21322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21323                           ;stkvar	_w @ sp[(-4)+0]
 21324                           ;stkvar	_buf @ sp[(-4)+-4]
 21325  0185BE  0EF8               	movlw	-8
 21326  0185C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21327  0185C6  006F FF8F FFE6     	movff	plusw1,postinc1
 21328  0185CC  EC6E  F0C8         	call	_strlen	;wreg free
 21329  0185D0  0EFC               	movlw	-4
 21330  0185D2  50E3               	movf	plusw1,w,c
 21331  0185D4  2601               	addwf	btemp^0,f,c
 21332  0185D6  0EFD               	movlw	-3
 21333  0185D8  50E3               	movf	plusw1,w,c
 21334  0185DA  2202               	addwfc	(btemp+1)^0,f,c
 21335                           
 21336                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21337  0185DC  0EF6               	movlw	246
 21338  0185DE  26E1               	addwf	fsr1l,f,c
 21339  0185E0  0EFF               	movlw	255
 21340  0185E2  22E2               	addwfc	fsr1h,f,c
 21341  0185E4  0012               	return		;funcret
 21342  0185E6                     __end_of_pad:
 21343                           	opt callstack 0
 21344                           
 21345 ;; *************** function _strlen *****************
 21346 ;; Defined at:
 21347 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21348 ;; Parameters:    Size  Location     Type
 21349 ;;  s               2  [STACK] PTR const unsigned char 
 21350 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21351 ;;		 -> STR_32(9), STR_31(12), D.lcd(288), D(290), 
 21352 ;;		 -> T(144), port_data(512), STR_7(4), STR_3(4), 
 21353 ;;		 -> V(188), 
 21354 ;; Auto vars:     Size  Location     Type
 21355 ;;  a               2  [STACK] PTR const unsigned char 
 21356 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21357 ;;		 -> STR_32(9), STR_31(12), D.lcd(288), D(290), 
 21358 ;;		 -> T(144), port_data(512), STR_7(4), STR_3(4), 
 21359 ;;		 -> V(188), 
 21360 ;; Return value:  Size  Location     Type
 21361 ;;                  2  [STACK] unsigned int 
 21362 ;; Registers used:
 21363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21364 ;; Tracked objects:
 21365 ;;		On entry : 0/0
 21366 ;;		On exit  : 0/0
 21367 ;;		Unchanged: 0/0
 21368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21373 ;;Total ram usage:        0 bytes
 21374 ;; Hardware stack levels used:    1
 21375 ;; Hardware stack levels required when called:   15
 21376 ;; This function calls:
 21377 ;;		Nothing
 21378 ;; This function is called by:
 21379 ;;		_eaDogM_WriteString
 21380 ;;		_calc_bsoc
 21381 ;;		_pad
 21382 ;;		_stoa
 21383 ;; This function uses a reentrant model
 21384 ;;
 21385                           
 21386                           	psect	text74
 21387  0190DC                     __ptext74:
 21388                           	opt callstack 0
 21389  0190DC                     _strlen:
 21390                           	opt callstack 0
 21391                           
 21392                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21393  0190DC  52E6               	movf	postinc1,f,c
 21394  0190DE  52E6               	movf	postinc1,f,c
 21395                           
 21396                           ;stkvar	_s @ sp[(-2)+-2]
 21397                           
 21398                           ;incstack = 0
 21399 ;; hardware stack exceeded
 21400  0190E0  0EFC               	movlw	-4
 21401  0190E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21402  0190E8  0EFD               	movlw	-3
 21403  0190EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21404                           
 21405                           ;stkvar	_a @ sp[(-2)+0]
 21406  0190F0  0EFF               	movlw	-1
 21407  0190F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21408  0190F8  0EFE               	movlw	-2
 21409  0190FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21410  019100  D011               	goto	l7121
 21411  019102                     l7119:
 21412                           
 21413                           ;stkvar	_s @ sp[(-2)+-2]
 21414  019102  0EFC               	movlw	-4
 21415  019104  50E3               	movf	plusw1,w,c
 21416  019106  0F01               	addlw	1
 21417  019108  6E01               	movwf	btemp^0,c
 21418  01910A  0EFC               	movlw	-4
 21419  01910C  0060  F007  FFE3   	movff	btemp,plusw1
 21420  019112  6A01               	clrf	btemp^0,c
 21421  019114  0EFD               	movlw	-3
 21422  019116  50E3               	movf	plusw1,w,c
 21423  019118  2001               	addwfc	btemp^0,w,c
 21424  01911A  6E01               	movwf	btemp^0,c
 21425  01911C  0EFD               	movlw	-3
 21426  01911E  0060  F007  FFE3   	movff	btemp,plusw1
 21427  019124                     l7121:
 21428                           
 21429                           ;stkvar	_s @ sp[(-2)+-2]
 21430  019124  0EFC               	movlw	-4
 21431  019126  006F FF8F FFF6     	movff	plusw1,tblptrl
 21432  01912C  0EFD               	movlw	-3
 21433  01912E  006F FF8F FFF7     	movff	plusw1,tblptrh
 21434  019134  0E00               	movlw	low (__mediumconst shr (0+16))
 21435  019136  6EF8               	movwf	tblptru,c
 21436  019138  0E1F               	movlw	(high __ramtop+-1)
 21437  01913A  64F7               	cpfsgt	tblptrh,c
 21438  01913C  D003               	bra	u5007
 21439  01913E  0008               	tblrd		*
 21440  019140  50F5               	movf	tablat,w,c
 21441  019142  D007               	bra	u5000
 21442  019144                     u5007:
 21443  019144  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21444  01914A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21445  019150  50EF               	movf	indf0,w,c
 21446  019152                     u5000:
 21447  019152  0900               	iorlw	0
 21448  019154  A4D8               	btfss	status,2,c
 21449  019156  D7D5               	goto	l7119
 21450                           
 21451                           ;stkvar	_a @ sp[(-2)+0]
 21452                           ;stkvar	_s @ sp[(-2)+-2]
 21453  019158  0EFC               	movlw	-4
 21454  01915A  006F FF8C  F001    	movff	plusw1,btemp
 21455  019160  0EFD               	movlw	-3
 21456  019162  006F FF8C  F002    	movff	plusw1,btemp+1
 21457  019168  0EFE               	movlw	-2
 21458  01916A  50E3               	movf	plusw1,w,c
 21459  01916C  5E01               	subwf	btemp^0,f,c
 21460  01916E  0EFF               	movlw	-1
 21461  019170  50E3               	movf	plusw1,w,c
 21462  019172  5A02               	subwfb	(btemp+1)^0,f,c
 21463                           
 21464                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21465  019174  52E5               	movf	postdec1,f,c
 21466  019176  52E5               	movf	postdec1,f,c
 21467  019178  52E5               	movf	postdec1,f,c
 21468  01917A  52E5               	movf	postdec1,f,c
 21469  01917C  0012               	return		;funcret
 21470  01917E                     __end_of_strlen:
 21471                           	opt callstack 0
 21472                           
 21473 ;; *************** function _fputs *****************
 21474 ;; Defined at:
 21475 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21476 ;; Parameters:    Size  Location     Type
 21477 ;;  s               2  [STACK] PTR const unsigned char 
 21478 ;;		 -> dbuf(80), 
 21479 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21480 ;;		 -> f(6), NULL(0), 
 21481 ;; Auto vars:     Size  Location     Type
 21482 ;;  i               2  [STACK] int 
 21483 ;;  c               1  [STACK] unsigned char 
 21484 ;; Return value:  Size  Location     Type
 21485 ;;                  2  [STACK] int 
 21486 ;; Registers used:
 21487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21488 ;; Tracked objects:
 21489 ;;		On entry : 0/3
 21490 ;;		On exit  : 0/0
 21491 ;;		Unchanged: 0/0
 21492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21497 ;;Total ram usage:        0 bytes
 21498 ;; Hardware stack levels used:    1
 21499 ;; Hardware stack levels required when called:   18
 21500 ;; This function calls:
 21501 ;;		_fputc
 21502 ;; This function is called by:
 21503 ;;		_pad
 21504 ;; This function uses a reentrant model
 21505 ;;
 21506                           
 21507                           	psect	text75
 21508  01917E                     __ptext75:
 21509                           	opt callstack 0
 21510  01917E                     _fputs:
 21511                           	opt callstack 0
 21512                           
 21513                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21514  01917E  52E6               	movf	postinc1,f,c
 21515  019180  52E6               	movf	postinc1,f,c
 21516  019182  52E6               	movf	postinc1,f,c
 21517                           
 21518                           ;stkvar	_i @ sp[(-3)+0]
 21519                           
 21520                           ;incstack = 0
 21521 ;; hardware stack exceeded
 21522  019184  0EFD               	movlw	-3
 21523  019186  6AE3               	clrf	plusw1,c
 21524  019188  0EFE               	movlw	-2
 21525  01918A  6AE3               	clrf	plusw1,c
 21526  01918C  D01F               	goto	l10835
 21527  01918E                     l10831:
 21528                           
 21529                           ;stkvar	_fp @ sp[(-3)+-4]
 21530  01918E  0EF9               	movlw	-7
 21531  019190  006F FF8F FFE6     	movff	plusw1,postinc1
 21532  019196  006F FF8F FFE6     	movff	plusw1,postinc1
 21533                           
 21534                           ;stkvar	_c @ sp[(-5)+2]
 21535  01919C  0EFD               	movlw	-3
 21536  01919E  50E3               	movf	plusw1,w,c
 21537  0191A0  6EE6               	movwf	postinc1,c
 21538  0191A2  0E00               	movlw	0
 21539  0191A4  6EE6               	movwf	postinc1,c
 21540  0191A6  EC4B  F0C1         	call	_fputc	;wreg free
 21541                           
 21542                           ;stkvar	_i @ sp[(-3)+0]
 21543  0191AA  0EFD               	movlw	-3
 21544  0191AC  50E3               	movf	plusw1,w,c
 21545  0191AE  0F01               	addlw	1
 21546  0191B0  6E01               	movwf	btemp^0,c
 21547  0191B2  0EFD               	movlw	-3
 21548  0191B4  0060  F007  FFE3   	movff	btemp,plusw1
 21549  0191BA  6A01               	clrf	btemp^0,c
 21550  0191BC  0EFE               	movlw	-2
 21551  0191BE  50E3               	movf	plusw1,w,c
 21552  0191C0  2001               	addwfc	btemp^0,w,c
 21553  0191C2  6E01               	movwf	btemp^0,c
 21554  0191C4  0EFE               	movlw	-2
 21555  0191C6  0060  F007  FFE3   	movff	btemp,plusw1
 21556  0191CC                     l10835:
 21557                           
 21558                           ;stkvar	_i @ sp[(-3)+0]
 21559  0191CC  0EFD               	movlw	-3
 21560  0191CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21561  0191D4  0EFE               	movlw	-2
 21562  0191D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21563                           
 21564                           ;stkvar	_s @ sp[(-3)+-2]
 21565  0191DC  0EFB               	movlw	-5
 21566  0191DE  006F FF8C  F009    	movff	plusw1,btemp+8
 21567  0191E4  0EFC               	movlw	-4
 21568  0191E6  006F FF8C  F00A    	movff	plusw1,btemp+9
 21569  0191EC  500B               	movf	(btemp+10)^0,w,c
 21570  0191EE  2409               	addwf	(btemp+8)^0,w,c
 21571  0191F0  6ED9               	movwf	fsr2l,c
 21572  0191F2  500C               	movf	(btemp+11)^0,w,c
 21573  0191F4  200A               	addwfc	(btemp+9)^0,w,c
 21574  0191F6  6EDA               	movwf	fsr2h,c
 21575  0191F8  50DF               	movf	indf2,w,c
 21576  0191FA  6E0C               	movwf	(btemp+11)^0,c
 21577                           
 21578                           ;stkvar	_c @ sp[(-3)+2]
 21579  0191FC  0EFF               	movlw	-1
 21580  0191FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 21581  019204  0EFF               	movlw	-1
 21582  019206  50E3               	movf	plusw1,w,c
 21583  019208  A4D8               	btfss	status,2,c
 21584  01920A  D7C1               	goto	l10831
 21585                           
 21586                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21587  01920C  0EF9               	movlw	249
 21588  01920E  26E1               	addwf	fsr1l,f,c
 21589  019210  0EFF               	movlw	255
 21590  019212  22E2               	addwfc	fsr1h,f,c
 21591  019214  0012               	return		;funcret
 21592  019216                     __end_of_fputs:
 21593                           	opt callstack 0
 21594                           
 21595 ;; *************** function _fputc *****************
 21596 ;; Defined at:
 21597 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21598 ;; Parameters:    Size  Location     Type
 21599 ;;  c               2  [STACK] int 
 21600 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21601 ;;		 -> f(6), NULL(0), 
 21602 ;; Auto vars:     Size  Location     Type
 21603 ;;		None
 21604 ;; Return value:  Size  Location     Type
 21605 ;;                  2  [STACK] int 
 21606 ;; Registers used:
 21607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21608 ;; Tracked objects:
 21609 ;;		On entry : 0/0
 21610 ;;		On exit  : 0/0
 21611 ;;		Unchanged: 0/0
 21612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21617 ;;Total ram usage:        0 bytes
 21618 ;; Hardware stack levels used:    1
 21619 ;; Hardware stack levels required when called:   17
 21620 ;; This function calls:
 21621 ;;		_putch
 21622 ;; This function is called by:
 21623 ;;		_pad
 21624 ;;		_stoa
 21625 ;;		_vfpfcnvrt
 21626 ;;		_fputs
 21627 ;; This function uses a reentrant model
 21628 ;;
 21629                           
 21630                           	psect	text76
 21631  018296                     __ptext76:
 21632                           	opt callstack 0
 21633  018296                     _fputc:
 21634                           	opt callstack 0
 21635                           
 21636                           ;stkvar	_fp @ sp[(0)+-4]
 21637                           
 21638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21639                           ;incstack = 0
 21640 ;; hardware stack exceeded
 21641  018296  0EFC               	movlw	-4
 21642  018298  006F FF8C  F001    	movff	plusw1,btemp
 21643  01829E  0EFD               	movlw	-3
 21644  0182A0  50E3               	movf	plusw1,w,c
 21645  0182A2  1001               	iorwf	btemp^0,w,c
 21646  0182A4  B4D8               	btfsc	status,2,c
 21647  0182A6  D009               	goto	u9910
 21648                           
 21649                           ;stkvar	_fp @ sp[(0)+-4]
 21650  0182A8  0EFC               	movlw	-4
 21651  0182AA  006F FF8C  F001    	movff	plusw1,btemp
 21652  0182B0  0EFD               	movlw	-3
 21653  0182B2  50E3               	movf	plusw1,w,c
 21654  0182B4  1001               	iorwf	btemp^0,w,c
 21655  0182B6  A4D8               	btfss	status,2,c
 21656  0182B8  D006               	goto	l10819
 21657  0182BA                     u9910:
 21658                           
 21659                           ;stkvar	_c @ sp[(0)+-2]
 21660  0182BA  0EFE               	movlw	-2
 21661  0182BC  50E3               	movf	plusw1,w,c
 21662  0182BE  6EE6               	movwf	postinc1,c
 21663  0182C0  ECB0  F0D3         	call	_putch	;wreg free
 21664  0182C4  D075               	goto	l3054
 21665  0182C6                     l10819:
 21666                           
 21667                           ;stkvar	_fp @ sp[(0)+-4]
 21668  0182C6  0EFC               	movlw	-4
 21669  0182C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21670  0182CE  0EFD               	movlw	-3
 21671  0182D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21672  0182D6  0E04               	movlw	4
 21673  0182D8  240B               	addwf	(btemp+10)^0,w,c
 21674  0182DA  6ED9               	movwf	fsr2l,c
 21675  0182DC  0E00               	movlw	0
 21676  0182DE  200C               	addwfc	(btemp+11)^0,w,c
 21677  0182E0  6EDA               	movwf	fsr2h,c
 21678  0182E2  50DE               	movf	postinc2,w,c
 21679  0182E4  10DE               	iorwf	postinc2,w,c
 21680  0182E6  B4D8               	btfsc	status,2,c
 21681  0182E8  D026               	goto	u9930
 21682                           
 21683                           ;stkvar	_fp @ sp[(0)+-4]
 21684  0182EA  0EFC               	movlw	-4
 21685  0182EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 21686  0182F2  0EFD               	movlw	-3
 21687  0182F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21688  0182FA  0E04               	movlw	4
 21689  0182FC  240B               	addwf	(btemp+10)^0,w,c
 21690  0182FE  6ED9               	movwf	fsr2l,c
 21691  018300  0E00               	movlw	0
 21692  018302  200C               	addwfc	(btemp+11)^0,w,c
 21693  018304  6EDA               	movwf	fsr2h,c
 21694                           
 21695                           ;stkvar	_fp @ sp[(0)+-4]
 21696  018306  0EFC               	movlw	-4
 21697  018308  006F FF8C  F00B    	movff	plusw1,btemp+10
 21698  01830E  0EFD               	movlw	-3
 21699  018310  006F FF8C  F00C    	movff	plusw1,btemp+11
 21700  018316  0E02               	movlw	2
 21701  018318  240B               	addwf	(btemp+10)^0,w,c
 21702  01831A  6EE9               	movwf	fsr0l,c
 21703  01831C  0E00               	movlw	0
 21704  01831E  200C               	addwfc	(btemp+11)^0,w,c
 21705  018320  6EEA               	movwf	fsr0h,c
 21706  018322  50DE               	movf	postinc2,w,c
 21707  018324  5CEE               	subwf	postinc0,w,c
 21708  018326  50EE               	movf	postinc0,w,c
 21709  018328  0A80               	xorlw	128
 21710  01832A  6E01               	movwf	btemp^0,c
 21711  01832C  50DE               	movf	postinc2,w,c
 21712  01832E  0A80               	xorlw	128
 21713  018330  5801               	subwfb	btemp^0,w,c
 21714  018332  B0D8               	btfsc	status,0,c
 21715  018334  D03D               	goto	l3054
 21716  018336                     u9930:
 21717                           
 21718                           ;stkvar	_c @ sp[(0)+-2]
 21719                           ;stkvar	_fp @ sp[(0)+-4]
 21720  018336  0EFC               	movlw	-4
 21721  018338  006F FF8C  F00B    	movff	plusw1,btemp+10
 21722  01833E  0EFD               	movlw	-3
 21723  018340  006F FF8C  F00C    	movff	plusw1,btemp+11
 21724  018346  0E02               	movlw	2
 21725  018348  240B               	addwf	(btemp+10)^0,w,c
 21726  01834A  6ED9               	movwf	fsr2l,c
 21727  01834C  0E00               	movlw	0
 21728  01834E  200C               	addwfc	(btemp+11)^0,w,c
 21729  018350  6EDA               	movwf	fsr2h,c
 21730  018352  006F FF78  F00B    	movff	postinc2,btemp+10
 21731  018358  006F FF74  F00C    	movff	postdec2,btemp+11
 21732                           
 21733                           ;stkvar	_fp @ sp[(0)+-4]
 21734  01835E  0EFC               	movlw	-4
 21735  018360  006F FF8F FFD9     	movff	plusw1,fsr2l
 21736  018366  0EFD               	movlw	-3
 21737  018368  006F FF8F FFDA     	movff	plusw1,fsr2h
 21738  01836E  006F FF78  F009    	movff	postinc2,btemp+8
 21739  018374  006F FF74  F00A    	movff	postdec2,btemp+9
 21740  01837A  500B               	movf	(btemp+10)^0,w,c
 21741  01837C  2409               	addwf	(btemp+8)^0,w,c
 21742  01837E  6ED9               	movwf	fsr2l,c
 21743  018380  500C               	movf	(btemp+11)^0,w,c
 21744  018382  200A               	addwfc	(btemp+9)^0,w,c
 21745  018384  6EDA               	movwf	fsr2h,c
 21746  018386  0EFE               	movlw	-2
 21747  018388  006F FF8F FFDF     	movff	plusw1,indf2
 21748                           
 21749                           ;stkvar	_fp @ sp[(0)+-4]
 21750  01838E  0EFC               	movlw	-4
 21751  018390  006F FF8C  F00B    	movff	plusw1,btemp+10
 21752  018396  0EFD               	movlw	-3
 21753  018398  006F FF8C  F00C    	movff	plusw1,btemp+11
 21754  01839E  0E02               	movlw	2
 21755  0183A0  240B               	addwf	(btemp+10)^0,w,c
 21756  0183A2  6ED9               	movwf	fsr2l,c
 21757  0183A4  0E00               	movlw	0
 21758  0183A6  200C               	addwfc	(btemp+11)^0,w,c
 21759  0183A8  6EDA               	movwf	fsr2h,c
 21760  0183AA  2ADE               	incf	postinc2,f,c
 21761  0183AC  0E00               	movlw	0
 21762  0183AE  22DD               	addwfc	postdec2,f,c
 21763  0183B0                     l3054:
 21764                           
 21765                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21766  0183B0  52E5               	movf	postdec1,f,c
 21767  0183B2  52E5               	movf	postdec1,f,c
 21768  0183B4  52E5               	movf	postdec1,f,c
 21769  0183B6  52E5               	movf	postdec1,f,c
 21770  0183B8  0012               	return		;funcret
 21771  0183BA                     __end_of_fputc:
 21772                           	opt callstack 0
 21773                           
 21774 ;; *************** function _putch *****************
 21775 ;; Defined at:
 21776 ;;		line 170 in file "eadog.c"
 21777 ;; Parameters:    Size  Location     Type
 21778 ;;  c               1  [STACK] unsigned char 
 21779 ;; Auto vars:     Size  Location     Type
 21780 ;;		None
 21781 ;; Return value:  Size  Location     Type
 21782 ;;                  1  [STACK] void 
 21783 ;; Registers used:
 21784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21785 ;; Tracked objects:
 21786 ;;		On entry : 0/0
 21787 ;;		On exit  : 0/0
 21788 ;;		Unchanged: 0/0
 21789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21794 ;;Total ram usage:        0 bytes
 21795 ;; Hardware stack levels used:    1
 21796 ;; Hardware stack levels required when called:   16
 21797 ;; This function calls:
 21798 ;;		_ringBufS_put_dma
 21799 ;; This function is called by:
 21800 ;;		_fputc
 21801 ;; This function uses a reentrant model
 21802 ;;
 21803                           
 21804                           	psect	text77
 21805  01A760                     __ptext77:
 21806                           	opt callstack 0
 21807  01A760                     _putch:
 21808                           	opt callstack 0
 21809                           
 21810                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21811                           ;stkvar	_c @ sp[(0)+-1]
 21812                           
 21813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21814                           ;incstack = 0
 21815 ;; hardware stack exceeded
 21816  01A760  0EFF               	movlw	-1
 21817  01A762  50E3               	movf	plusw1,w,c
 21818  01A764  6EE6               	movwf	postinc1,c
 21819  01A766  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 21820  01A76C  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 21821  01A772  ECC6  F0C7         	call	_ringBufS_put_dma	;wreg free
 21822                           
 21823                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21824  01A776  52E5               	movf	postdec1,f,c
 21825  01A778  0012               	return		;funcret
 21826  01A77A                     __end_of_putch:
 21827                           	opt callstack 0
 21828                           
 21829 ;; *************** function _ringBufS_put_dma *****************
 21830 ;; Defined at:
 21831 ;;		line 67 in file "ringbufs.c"
 21832 ;; Parameters:    Size  Location     Type
 21833 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21834 ;;		 -> ring_buf1(67), 
 21835 ;;  c               1  [STACK] const unsigned char 
 21836 ;; Auto vars:     Size  Location     Type
 21837 ;;		None
 21838 ;; Return value:  Size  Location     Type
 21839 ;;                  1  [STACK] void 
 21840 ;; Registers used:
 21841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21842 ;; Tracked objects:
 21843 ;;		On entry : 0/0
 21844 ;;		On exit  : 0/0
 21845 ;;		Unchanged: 0/0
 21846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21851 ;;Total ram usage:        0 bytes
 21852 ;; Hardware stack levels used:    1
 21853 ;; Hardware stack levels required when called:   15
 21854 ;; This function calls:
 21855 ;;		Nothing
 21856 ;; This function is called by:
 21857 ;;		_putch
 21858 ;; This function uses a reentrant model
 21859 ;;
 21860                           
 21861                           	psect	text78
 21862  018F8C                     __ptext78:
 21863                           	opt callstack 0
 21864  018F8C                     _ringBufS_put_dma:
 21865                           	opt callstack 0
 21866                           
 21867                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21868                           ;stkvar	__this @ sp[(0)+-2]
 21869                           
 21870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21871                           ;incstack = 0
 21872 ;; hardware stack exceeded
 21873  018F8C  0EFE               	movlw	-2
 21874  018F8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21875  018F94  0EFF               	movlw	-1
 21876  018F96  006F FF8C  F00C    	movff	plusw1,btemp+11
 21877  018F9C  0E42               	movlw	66
 21878  018F9E  240B               	addwf	(btemp+10)^0,w,c
 21879  018FA0  6ED9               	movwf	fsr2l,c
 21880  018FA2  0E00               	movlw	0
 21881  018FA4  200C               	addwfc	(btemp+11)^0,w,c
 21882  018FA6  6EDA               	movwf	fsr2h,c
 21883  018FA8  0E40               	movlw	64
 21884  018FAA  60DF               	cpfslt	indf2,c
 21885  018FAC  D040               	goto	l1558
 21886                           
 21887                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21888                           ;stkvar	_c @ sp[(0)+-3]
 21889                           ;stkvar	__this @ sp[(0)+-2]
 21890  018FAE  0EFE               	movlw	-2
 21891  018FB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21892  018FB6  0EFF               	movlw	-1
 21893  018FB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21894  018FBE  0E40               	movlw	64
 21895  018FC0  240B               	addwf	(btemp+10)^0,w,c
 21896  018FC2  6ED9               	movwf	fsr2l,c
 21897  018FC4  0E00               	movlw	0
 21898  018FC6  200C               	addwfc	(btemp+11)^0,w,c
 21899  018FC8  6EDA               	movwf	fsr2h,c
 21900  018FCA  50DF               	movf	indf2,w,c
 21901  018FCC  6E0C               	movwf	(btemp+11)^0,c
 21902                           
 21903                           ;stkvar	__this @ sp[(0)+-2]
 21904  018FCE  0EFE               	movlw	-2
 21905  018FD0  006F FF8C  F009    	movff	plusw1,btemp+8
 21906  018FD6  0EFF               	movlw	-1
 21907  018FD8  006F FF8C  F00A    	movff	plusw1,btemp+9
 21908  018FDE  500C               	movf	(btemp+11)^0,w,c
 21909  018FE0  2409               	addwf	(btemp+8)^0,w,c
 21910  018FE2  6ED9               	movwf	fsr2l,c
 21911  018FE4  0E00               	movlw	0
 21912  018FE6  200A               	addwfc	(btemp+9)^0,w,c
 21913  018FE8  6EDA               	movwf	fsr2h,c
 21914  018FEA  0EFD               	movlw	-3
 21915  018FEC  006F FF8F FFDF     	movff	plusw1,indf2
 21916                           
 21917                           ;ringbufs.c: 71:   ++_this->head;
 21918                           ;stkvar	__this @ sp[(0)+-2]
 21919  018FF2  0EFE               	movlw	-2
 21920  018FF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21921  018FFA  0EFF               	movlw	-1
 21922  018FFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21923  019002  0E40               	movlw	64
 21924  019004  240B               	addwf	(btemp+10)^0,w,c
 21925  019006  6ED9               	movwf	fsr2l,c
 21926  019008  0E00               	movlw	0
 21927  01900A  200C               	addwfc	(btemp+11)^0,w,c
 21928  01900C  6EDA               	movwf	fsr2h,c
 21929  01900E  2ADF               	incf	indf2,f,c
 21930                           
 21931                           ;ringbufs.c: 72:   ++_this->count;
 21932                           ;stkvar	__this @ sp[(0)+-2]
 21933  019010  0EFE               	movlw	-2
 21934  019012  006F FF8C  F00B    	movff	plusw1,btemp+10
 21935  019018  0EFF               	movlw	-1
 21936  01901A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21937  019020  0E42               	movlw	66
 21938  019022  240B               	addwf	(btemp+10)^0,w,c
 21939  019024  6ED9               	movwf	fsr2l,c
 21940  019026  0E00               	movlw	0
 21941  019028  200C               	addwfc	(btemp+11)^0,w,c
 21942  01902A  6EDA               	movwf	fsr2h,c
 21943  01902C  2ADF               	incf	indf2,f,c
 21944  01902E                     l1558:
 21945                           
 21946                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21947  01902E  52E5               	movf	postdec1,f,c
 21948  019030  52E5               	movf	postdec1,f,c
 21949  019032  52E5               	movf	postdec1,f,c
 21950  019034  0012               	return		;funcret
 21951  019036                     __end_of_ringBufS_put_dma:
 21952                           	opt callstack 0
 21953                           
 21954 ;; *************** function _atoi *****************
 21955 ;; Defined at:
 21956 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21957 ;; Parameters:    Size  Location     Type
 21958 ;;  s               2  [STACK] PTR const unsigned char 
 21959 ;;		 -> STR_50(79), STR_48(3), STR_47(3), STR_46(19), 
 21960 ;;		 -> STR_45(19), STR_44(19), STR_43(19), STR_42(19), 
 21961 ;;		 -> STR_41(19), STR_40(24), STR_39(15), STR_38(15), 
 21962 ;;		 -> STR_37(15), STR_36(10), STR_35(10), STR_34(19), 
 21963 ;;		 -> STR_33(19), STR_30(3), STR_29(3), STR_28(3), 
 21964 ;;		 -> STR_27(17), STR_26(16), STR_25(16), STR_24(19), 
 21965 ;;		 -> STR_23(20), STR_22(19), STR_21(19), STR_20(19), 
 21966 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
 21967 ;;		 -> STR_15(17), STR_14(16), STR_13(16), STR_12(16), 
 21968 ;;		 -> STR_11(16), STR_10(16), STR_9(16), STR_8(17), 
 21969 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 21970 ;;		 -> STR_1(17), 
 21971 ;; Auto vars:     Size  Location     Type
 21972 ;;  n               2  [STACK] int 
 21973 ;;  neg             2  [STACK] int 
 21974 ;; Return value:  Size  Location     Type
 21975 ;;                  2  [STACK] int 
 21976 ;; Registers used:
 21977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21978 ;; Tracked objects:
 21979 ;;		On entry : 0/0
 21980 ;;		On exit  : 0/0
 21981 ;;		Unchanged: 0/0
 21982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21987 ;;Total ram usage:        0 bytes
 21988 ;; Hardware stack levels used:    1
 21989 ;; Hardware stack levels required when called:   16
 21990 ;; This function calls:
 21991 ;;		_isdigit
 21992 ;;		_isspace
 21993 ;; This function is called by:
 21994 ;;		_vfpfcnvrt
 21995 ;; This function uses a reentrant model
 21996 ;;
 21997                           
 21998                           	psect	text79
 21999  01664E                     __ptext79:
 22000                           	opt callstack 0
 22001  01664E                     _atoi:
 22002                           	opt callstack 0
 22003                           
 22004                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22005  01664E  0E09               	movlw	9
 22006  016650  26E1               	addwf	fsr1l,f,c
 22007  016652  0E00               	movlw	0
 22008  016654  22E2               	addwfc	fsr1h,f,c
 22009                           
 22010                           ;stkvar	_n @ sp[(-9)+5]
 22011                           
 22012                           ;incstack = 0
 22013 ;; hardware stack exceeded
 22014  016656  0EFC               	movlw	-4
 22015  016658  6AE3               	clrf	plusw1,c
 22016  01665A  0EFD               	movlw	-3
 22017  01665C  6AE3               	clrf	plusw1,c
 22018                           
 22019                           ;stkvar	_neg @ sp[(-9)+7]
 22020  01665E  0EFE               	movlw	-2
 22021  016660  6AE3               	clrf	plusw1,c
 22022  016662  0EFF               	movlw	-1
 22023  016664  6AE3               	clrf	plusw1,c
 22024  016666  D011               	goto	l8729
 22025  016668                     l8727:
 22026                           
 22027                           ;stkvar	_s @ sp[(-9)+-2]
 22028  016668  0EF5               	movlw	-11
 22029  01666A  50E3               	movf	plusw1,w,c
 22030  01666C  0F01               	addlw	1
 22031  01666E  6E01               	movwf	btemp^0,c
 22032  016670  0EF5               	movlw	-11
 22033  016672  0060  F007  FFE3   	movff	btemp,plusw1
 22034  016678  6A01               	clrf	btemp^0,c
 22035  01667A  0EF6               	movlw	-10
 22036  01667C  50E3               	movf	plusw1,w,c
 22037  01667E  2001               	addwfc	btemp^0,w,c
 22038  016680  6E01               	movwf	btemp^0,c
 22039  016682  0EF6               	movlw	-10
 22040  016684  0060  F007  FFE3   	movff	btemp,plusw1
 22041  01668A                     l8729:
 22042                           
 22043                           ;stkvar	_atoi$5757 @ sp[(-9)+4]
 22044  01668A  0EFB               	movlw	-5
 22045  01668C  6AE3               	clrf	plusw1,c
 22046  01668E  2AE3               	incf	plusw1,f,c
 22047                           
 22048                           ;stkvar	_s @ sp[(-9)+-2]
 22049  016690  50E1               	movf	fsr1l,w,c
 22050  016692  0FF5               	addlw	-11
 22051  016694  6ED9               	movwf	fsr2l,c
 22052  016696  50E2               	movf	fsr1h,w,c
 22053  016698  6EDA               	movwf	fsr2h,c
 22054  01669A  0EFF               	movlw	255
 22055  01669C  22DA               	addwfc	fsr2h,f,c
 22056  01669E  006F FF7B FFF6     	movff	postinc2,tblptrl
 22057  0166A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 22058  0166AA                     	if	0	;tblptru may be non-zero
 22059  0166AA                     	endif
 22060  0166AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22061  0166AA  0E00               	movlw	low (__mediumconst shr (0+16))
 22062  0166AC  6EF8               	movwf	tblptru,c
 22063  0166AE                     	endif
 22064  0166AE  0008               	tblrd		*
 22065  0166B0  50F5               	movf	tablat,w,c
 22066  0166B2  0A20               	xorlw	32
 22067  0166B4  B4D8               	btfsc	status,2,c
 22068  0166B6  D023               	goto	l8737
 22069  0166B8  0EF7               	movlw	247
 22070  0166BA  6E0B               	movwf	(btemp+10)^0,c
 22071  0166BC  0EFF               	movlw	255
 22072  0166BE  6E0C               	movwf	(btemp+11)^0,c
 22073                           
 22074                           ;stkvar	_s @ sp[(-9)+-2]
 22075  0166C0  50E1               	movf	fsr1l,w,c
 22076  0166C2  0FF5               	addlw	-11
 22077  0166C4  6ED9               	movwf	fsr2l,c
 22078  0166C6  50E2               	movf	fsr1h,w,c
 22079  0166C8  6EDA               	movwf	fsr2h,c
 22080  0166CA  0EFF               	movlw	255
 22081  0166CC  22DA               	addwfc	fsr2h,f,c
 22082  0166CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 22083  0166D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 22084  0166DA                     	if	0	;tblptru may be non-zero
 22085  0166DA                     	endif
 22086  0166DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22087  0166DA  0E00               	movlw	low (__mediumconst shr (0+16))
 22088  0166DC  6EF8               	movwf	tblptru,c
 22089  0166DE                     	endif
 22090  0166DE  0008               	tblrd		*
 22091  0166E0  50F5               	movf	tablat,w,c
 22092  0166E2  6E09               	movwf	(btemp+8)^0,c
 22093  0166E4  6A0A               	clrf	(btemp+9)^0,c
 22094  0166E6  500B               	movf	(btemp+10)^0,w,c
 22095  0166E8  2609               	addwf	(btemp+8)^0,f,c
 22096  0166EA  500C               	movf	(btemp+11)^0,w,c
 22097  0166EC  220A               	addwfc	(btemp+9)^0,f,c
 22098  0166EE  500A               	movf	(btemp+9)^0,w,c
 22099  0166F0  E104               	bnz	u8110
 22100  0166F2  0E05               	movlw	5
 22101  0166F4  5C09               	subwf	(btemp+8)^0,w,c
 22102  0166F6  A0D8               	btfss	status,0,c
 22103  0166F8  D002               	goto	l8737
 22104  0166FA                     u8110:
 22105                           
 22106                           ;stkvar	_atoi$5757 @ sp[(-9)+4]
 22107  0166FA  0EFB               	movlw	-5
 22108  0166FC  6AE3               	clrf	plusw1,c
 22109  0166FE                     l8737:
 22110                           
 22111                           ;stkvar	_atoi$5757 @ sp[(-9)+4]
 22112  0166FE  0EFB               	movlw	-5
 22113  016700  50E3               	movf	plusw1,w,c
 22114  016702  6E0B               	movwf	(btemp+10)^0,c
 22115  016704  6A0C               	clrf	(btemp+11)^0,c
 22116                           
 22117                           ;stkvar	_atoi$5756 @ sp[(-9)+2]
 22118  016706  0EF9               	movlw	-7
 22119  016708  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22120  01670E  0EFA               	movlw	-6
 22121  016710  0060  F033  FFE3   	movff	btemp+11,plusw1
 22122                           
 22123                           ;stkvar	_atoi$5756 @ sp[(-9)+2]
 22124  016716  0EF9               	movlw	-7
 22125  016718  006F FF8C  F001    	movff	plusw1,btemp
 22126  01671E  0EFA               	movlw	-6
 22127  016720  50E3               	movf	plusw1,w,c
 22128  016722  1001               	iorwf	btemp^0,w,c
 22129  016724  B4D8               	btfsc	status,2,c
 22130  016726  D01F               	goto	l8747
 22131  016728  D79F               	goto	l8727
 22132  01672A                     l8743:
 22133  01672A  0E01               	movlw	1
 22134  01672C  6E0B               	movwf	(btemp+10)^0,c
 22135  01672E  0E00               	movlw	0
 22136  016730  6E0C               	movwf	(btemp+11)^0,c
 22137                           
 22138                           ;stkvar	_neg @ sp[(-9)+7]
 22139  016732  0EFE               	movlw	-2
 22140  016734  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22141  01673A  0EFF               	movlw	-1
 22142  01673C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22143  016742                     l8745:
 22144                           
 22145                           ;stkvar	_s @ sp[(-9)+-2]
 22146  016742  0EF5               	movlw	-11
 22147  016744  50E3               	movf	plusw1,w,c
 22148  016746  0F01               	addlw	1
 22149  016748  6E01               	movwf	btemp^0,c
 22150  01674A  0EF5               	movlw	-11
 22151  01674C  0060  F007  FFE3   	movff	btemp,plusw1
 22152  016752  6A01               	clrf	btemp^0,c
 22153  016754  0EF6               	movlw	-10
 22154  016756  50E3               	movf	plusw1,w,c
 22155  016758  2001               	addwfc	btemp^0,w,c
 22156  01675A  6E01               	movwf	btemp^0,c
 22157  01675C  0EF6               	movlw	-10
 22158  01675E  0060  F007  FFE3   	movff	btemp,plusw1
 22159  016764  D053               	goto	l8753
 22160  016766                     l8747:
 22161                           
 22162                           ;stkvar	_s @ sp[(-9)+-2]
 22163  016766  50E1               	movf	fsr1l,w,c
 22164  016768  0FF5               	addlw	-11
 22165  01676A  6ED9               	movwf	fsr2l,c
 22166  01676C  50E2               	movf	fsr1h,w,c
 22167  01676E  6EDA               	movwf	fsr2h,c
 22168  016770  0EFF               	movlw	255
 22169  016772  22DA               	addwfc	fsr2h,f,c
 22170  016774  006F FF7B FFF6     	movff	postinc2,tblptrl
 22171  01677A  006F FF77 FFF7     	movff	postdec2,tblptrh
 22172  016780                     	if	0	;tblptru may be non-zero
 22173  016780                     	endif
 22174  016780                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22175  016780  0E00               	movlw	low (__mediumconst shr (0+16))
 22176  016782  6EF8               	movwf	tblptru,c
 22177  016784                     	endif
 22178  016784  0008               	tblrd		*
 22179  016786  50F5               	movf	tablat,w,c
 22180  016788  6E0B               	movwf	(btemp+10)^0,c
 22181  01678A  6A0C               	clrf	(btemp+11)^0,c
 22182                           
 22183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22184                           ; Switch size 1, requested type "simple"
 22185                           ; Number of cases is 1, Range of values is 0 to 0
 22186                           ; switch strategies available:
 22187                           ; Name         Instructions Cycles
 22188                           ; simple_byte            4     3 (average)
 22189                           ;	Chosen strategy is simple_byte
 22190  01678C  500C               	movf	(btemp+11)^0,w,c
 22191  01678E  0A00               	xorlw	0	; case 0
 22192  016790  A4D8               	btfss	status,2,c
 22193  016792  D03C               	goto	l8753
 22194                           
 22195                           ; Switch size 1, requested type "simple"
 22196                           ; Number of cases is 2, Range of values is 43 to 45
 22197                           ; switch strategies available:
 22198                           ; Name         Instructions Cycles
 22199                           ; simple_byte            7     4 (average)
 22200                           ;	Chosen strategy is simple_byte
 22201  016794  500B               	movf	(btemp+10)^0,w,c
 22202  016796  0A2B               	xorlw	43	; case 43
 22203  016798  B4D8               	btfsc	status,2,c
 22204  01679A  D7D3               	goto	l8745
 22205  01679C  0A06               	xorlw	6	; case 45
 22206  01679E  B4D8               	btfsc	status,2,c
 22207  0167A0  D7C4               	goto	l8743
 22208  0167A2  D034               	goto	l8753
 22209  0167A4                     l8749:
 22210                           
 22211                           ;stkvar	_n @ sp[(-9)+5]
 22212  0167A4  0EFC               	movlw	-4
 22213  0167A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22214  0167AC  0EFD               	movlw	-3
 22215  0167AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22216  0167B4  0E0A               	movlw	10
 22217  0167B6  020B               	mulwf	(btemp+10)^0,c
 22218  0167B8  006F FFCC  F009    	movff	prodl,btemp+8
 22219  0167BE  006F FFD0  F00A    	movff	prodh,btemp+9
 22220  0167C4  020C               	mulwf	(btemp+11)^0,c
 22221  0167C6  50F3               	movf	prodl,w,c
 22222  0167C8  260A               	addwf	(btemp+9)^0,f,c
 22223                           
 22224                           ;stkvar	_s @ sp[(-9)+-2]
 22225  0167CA  50E1               	movf	fsr1l,w,c
 22226  0167CC  0FF5               	addlw	-11
 22227  0167CE  6ED9               	movwf	fsr2l,c
 22228  0167D0  50E2               	movf	fsr1h,w,c
 22229  0167D2  6EDA               	movwf	fsr2h,c
 22230  0167D4  0EFF               	movlw	255
 22231  0167D6  22DA               	addwfc	fsr2h,f,c
 22232  0167D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 22233  0167DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 22234  0167E4                     	if	0	;tblptru may be non-zero
 22235  0167E4                     	endif
 22236  0167E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22237  0167E4  0E00               	movlw	low (__mediumconst shr (0+16))
 22238  0167E6  6EF8               	movwf	tblptru,c
 22239  0167E8                     	endif
 22240  0167E8  0008               	tblrd		*
 22241  0167EA  50F5               	movf	tablat,w,c
 22242  0167EC  5E09               	subwf	(btemp+8)^0,f,c
 22243  0167EE  0E00               	movlw	0
 22244  0167F0  5A0A               	subwfb	(btemp+9)^0,f,c
 22245  0167F2  0E30               	movlw	48
 22246  0167F4  2609               	addwf	(btemp+8)^0,f,c
 22247  0167F6  0E00               	movlw	0
 22248  0167F8  220A               	addwfc	(btemp+9)^0,f,c
 22249                           
 22250                           ;stkvar	_n @ sp[(-9)+5]
 22251  0167FA  0EFC               	movlw	-4
 22252  0167FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 22253  016802  0EFD               	movlw	-3
 22254  016804  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22255  01680A  D79B               	goto	l8745
 22256  01680C                     l8753:
 22257  01680C  0ED0               	movlw	208
 22258  01680E  6E0B               	movwf	(btemp+10)^0,c
 22259  016810  0EFF               	movlw	255
 22260  016812  6E0C               	movwf	(btemp+11)^0,c
 22261                           
 22262                           ;stkvar	_s @ sp[(-9)+-2]
 22263  016814  50E1               	movf	fsr1l,w,c
 22264  016816  0FF5               	addlw	-11
 22265  016818  6ED9               	movwf	fsr2l,c
 22266  01681A  50E2               	movf	fsr1h,w,c
 22267  01681C  6EDA               	movwf	fsr2h,c
 22268  01681E  0EFF               	movlw	255
 22269  016820  22DA               	addwfc	fsr2h,f,c
 22270  016822  006F FF7B FFF6     	movff	postinc2,tblptrl
 22271  016828  006F FF77 FFF7     	movff	postdec2,tblptrh
 22272  01682E                     	if	0	;tblptru may be non-zero
 22273  01682E                     	endif
 22274  01682E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22275  01682E  0E00               	movlw	low (__mediumconst shr (0+16))
 22276  016830  6EF8               	movwf	tblptru,c
 22277  016832                     	endif
 22278  016832  0008               	tblrd		*
 22279  016834  50F5               	movf	tablat,w,c
 22280  016836  6E09               	movwf	(btemp+8)^0,c
 22281  016838  6A0A               	clrf	(btemp+9)^0,c
 22282  01683A  500B               	movf	(btemp+10)^0,w,c
 22283  01683C  2609               	addwf	(btemp+8)^0,f,c
 22284  01683E  500C               	movf	(btemp+11)^0,w,c
 22285  016840  220A               	addwfc	(btemp+9)^0,f,c
 22286  016842  500A               	movf	(btemp+9)^0,w,c
 22287  016844  E106               	bnz	u8130
 22288  016846  0E0A               	movlw	10
 22289  016848  5C09               	subwf	(btemp+8)^0,w,c
 22290  01684A  B0D8               	btfsc	status,0,c
 22291  01684C  D002               	goto	u8130
 22292  01684E  0E01               	movlw	1
 22293  016850  D001               	goto	u8140
 22294  016852                     u8130:
 22295  016852  0E00               	movlw	0
 22296  016854                     u8140:
 22297  016854  6E0B               	movwf	(btemp+10)^0,c
 22298  016856  6A0C               	clrf	(btemp+11)^0,c
 22299                           
 22300                           ;stkvar	_atoi$5758 @ sp[(-9)+0]
 22301  016858  0EF7               	movlw	-9
 22302  01685A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22303  016860  0EF8               	movlw	-8
 22304  016862  0060  F033  FFE3   	movff	btemp+11,plusw1
 22305                           
 22306                           ;stkvar	_atoi$5758 @ sp[(-9)+0]
 22307  016868  0EF7               	movlw	-9
 22308  01686A  006F FF8C  F001    	movff	plusw1,btemp
 22309  016870  0EF8               	movlw	-8
 22310  016872  50E3               	movf	plusw1,w,c
 22311  016874  1001               	iorwf	btemp^0,w,c
 22312  016876  A4D8               	btfss	status,2,c
 22313  016878  D795               	goto	l8749
 22314                           
 22315                           ;stkvar	_neg @ sp[(-9)+7]
 22316  01687A  0EFE               	movlw	-2
 22317  01687C  006F FF8C  F001    	movff	plusw1,btemp
 22318  016882  0EFF               	movlw	-1
 22319  016884  50E3               	movf	plusw1,w,c
 22320  016886  1001               	iorwf	btemp^0,w,c
 22321  016888  A4D8               	btfss	status,2,c
 22322  01688A  D00E               	goto	l8763
 22323                           
 22324                           ;stkvar	_n @ sp[(-9)+5]
 22325  01688C  0EFC               	movlw	-4
 22326  01688E  006F FF8C  F001    	movff	plusw1,btemp
 22327  016894  1E01               	comf	btemp^0,f,c
 22328  016896  0EFD               	movlw	-3
 22329  016898  006F FF8C  F002    	movff	plusw1,btemp+1
 22330  01689E  1E02               	comf	(btemp+1)^0,f,c
 22331  0168A0  2A01               	incf	btemp^0,f,c
 22332  0168A2  B4D8               	btfsc	status,2,c
 22333  0168A4  2A02               	incf	(btemp+1)^0,f,c
 22334  0168A6  D008               	goto	l2990
 22335  0168A8                     l8763:
 22336                           
 22337                           ;stkvar	_n @ sp[(-9)+5]
 22338  0168A8  0EFC               	movlw	-4
 22339  0168AA  006F FF8C  F001    	movff	plusw1,btemp
 22340  0168B0  0EFD               	movlw	-3
 22341  0168B2  006F FF8C  F002    	movff	plusw1,btemp+1
 22342  0168B8                     l2990:
 22343                           
 22344                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22345  0168B8  0EF5               	movlw	245
 22346  0168BA  26E1               	addwf	fsr1l,f,c
 22347  0168BC  0EFF               	movlw	255
 22348  0168BE  22E2               	addwfc	fsr1h,f,c
 22349  0168C0  0012               	return		;funcret
 22350  0168C2                     __end_of_atoi:
 22351                           	opt callstack 0
 22352                           
 22353 ;; *************** function _isspace *****************
 22354 ;; Defined at:
 22355 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22356 ;; Parameters:    Size  Location     Type
 22357 ;;  c               2  [STACK] int 
 22358 ;; Auto vars:     Size  Location     Type
 22359 ;;		None
 22360 ;; Return value:  Size  Location     Type
 22361 ;;                  2  [STACK] int 
 22362 ;; Registers used:
 22363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22364 ;; Tracked objects:
 22365 ;;		On entry : 0/0
 22366 ;;		On exit  : 0/0
 22367 ;;		Unchanged: 0/0
 22368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22373 ;;Total ram usage:        0 bytes
 22374 ;; Hardware stack levels used:    1
 22375 ;; Hardware stack levels required when called:   15
 22376 ;; This function calls:
 22377 ;;		Nothing
 22378 ;; This function is called by:
 22379 ;;		_atoi
 22380 ;; This function uses a reentrant model
 22381 ;;
 22382                           
 22383                           	psect	text80
 22384  019AF8                     __ptext80:
 22385                           	opt callstack 0
 22386  019AF8                     _isspace:
 22387                           	opt callstack 0
 22388                           
 22389                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22390  019AF8  52E6               	movf	postinc1,f,c
 22391                           
 22392                           ;stkvar	_isspace$5796 @ sp[(-1)+0]
 22393                           
 22394                           ;incstack = 0
 22395 ;; hardware stack exceeded
 22396  019AFA  0EFF               	movlw	-1
 22397  019AFC  6AE3               	clrf	plusw1,c
 22398  019AFE  2AE3               	incf	plusw1,f,c
 22399                           
 22400                           ;stkvar	_c @ sp[(-1)+-2]
 22401  019B00  0EFD               	movlw	-3
 22402  019B02  006F FF8C  F001    	movff	plusw1,btemp
 22403  019B08  0E20               	movlw	32
 22404  019B0A  1801               	xorwf	btemp^0,w,c
 22405  019B0C  E104               	bnz	u6960
 22406  019B0E  0EFE               	movlw	-2
 22407  019B10  50E3               	movf	plusw1,w,c
 22408  019B12  B4D8               	btfsc	status,2,c
 22409  019B14  D012               	goto	l8121
 22410  019B16                     u6960:
 22411                           
 22412                           ;stkvar	_c @ sp[(-1)+-2]
 22413  019B16  0EFD               	movlw	-3
 22414  019B18  50E3               	movf	plusw1,w,c
 22415  019B1A  0FF7               	addlw	247
 22416  019B1C  6E0B               	movwf	(btemp+10)^0,c
 22417  019B1E  0EFE               	movlw	-2
 22418  019B20  006F FF8C  F00C    	movff	plusw1,btemp+11
 22419  019B26  0EFF               	movlw	255
 22420  019B28  220C               	addwfc	(btemp+11)^0,f,c
 22421  019B2A  500C               	movf	(btemp+11)^0,w,c
 22422  019B2C  E104               	bnz	u6970
 22423  019B2E  0E05               	movlw	5
 22424  019B30  5C0B               	subwf	(btemp+10)^0,w,c
 22425  019B32  A0D8               	btfss	status,0,c
 22426  019B34  D002               	goto	l8121
 22427  019B36                     u6970:
 22428                           
 22429                           ;stkvar	_isspace$5796 @ sp[(-1)+0]
 22430  019B36  0EFF               	movlw	-1
 22431  019B38  6AE3               	clrf	plusw1,c
 22432  019B3A                     l8121:
 22433                           
 22434                           ;stkvar	_isspace$5796 @ sp[(-1)+0]
 22435  019B3A  0EFF               	movlw	-1
 22436  019B3C  50E3               	movf	plusw1,w,c
 22437  019B3E  6E01               	movwf	btemp^0,c
 22438  019B40  6A02               	clrf	(btemp+1)^0,c
 22439                           
 22440                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22441  019B42  52E5               	movf	postdec1,f,c
 22442  019B44  52E5               	movf	postdec1,f,c
 22443  019B46  52E5               	movf	postdec1,f,c
 22444  019B48  0012               	return		;funcret
 22445  019B4A                     __end_of_isspace:
 22446                           	opt callstack 0
 22447                           
 22448 ;; *************** function _isdigit *****************
 22449 ;; Defined at:
 22450 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22451 ;; Parameters:    Size  Location     Type
 22452 ;;  c               2  [STACK] int 
 22453 ;; Auto vars:     Size  Location     Type
 22454 ;;		None
 22455 ;; Return value:  Size  Location     Type
 22456 ;;                  2  [STACK] int 
 22457 ;; Registers used:
 22458 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22459 ;; Tracked objects:
 22460 ;;		On entry : 0/0
 22461 ;;		On exit  : 0/0
 22462 ;;		Unchanged: 0/0
 22463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22468 ;;Total ram usage:        0 bytes
 22469 ;; Hardware stack levels used:    1
 22470 ;; Hardware stack levels required when called:   15
 22471 ;; This function calls:
 22472 ;;		Nothing
 22473 ;; This function is called by:
 22474 ;;		_vfpfcnvrt
 22475 ;;		_atoi
 22476 ;; This function uses a reentrant model
 22477 ;;
 22478                           
 22479                           	psect	text81
 22480  01A16E                     __ptext81:
 22481                           	opt callstack 0
 22482  01A16E                     _isdigit:
 22483                           	opt callstack 0
 22484                           
 22485                           ;stkvar	_c @ sp[(0)+-2]
 22486                           
 22487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22488                           ;incstack = 0
 22489 ;; hardware stack exceeded
 22490  01A16E  0EFE               	movlw	-2
 22491  01A170  50E3               	movf	plusw1,w,c
 22492  01A172  0FD0               	addlw	208
 22493  01A174  6E0B               	movwf	(btemp+10)^0,c
 22494  01A176  0EFF               	movlw	-1
 22495  01A178  006F FF8C  F00C    	movff	plusw1,btemp+11
 22496  01A17E  0EFF               	movlw	255
 22497  01A180  220C               	addwfc	(btemp+11)^0,f,c
 22498  01A182  500C               	movf	(btemp+11)^0,w,c
 22499  01A184  E106               	bnz	u5810
 22500  01A186  0E0A               	movlw	10
 22501  01A188  5C0B               	subwf	(btemp+10)^0,w,c
 22502  01A18A  B0D8               	btfsc	status,0,c
 22503  01A18C  D002               	goto	u5810
 22504  01A18E  0E01               	movlw	1
 22505  01A190  D001               	goto	u5820
 22506  01A192                     u5810:
 22507  01A192  0E00               	movlw	0
 22508  01A194                     u5820:
 22509  01A194  6E01               	movwf	btemp^0,c
 22510  01A196  6A02               	clrf	(btemp+1)^0,c
 22511                           
 22512                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22513  01A198  52E5               	movf	postdec1,f,c
 22514  01A19A  52E5               	movf	postdec1,f,c
 22515  01A19C  0012               	return		;funcret
 22516  01A19E                     __end_of_isdigit:
 22517                           	opt callstack 0
 22518                           
 22519 ;; *************** function _set_vterm *****************
 22520 ;; Defined at:
 22521 ;;		line 107 in file "mconfig.c"
 22522 ;; Parameters:    Size  Location     Type
 22523 ;;  vterm           1  [STACK] const unsigned char 
 22524 ;; Auto vars:     Size  Location     Type
 22525 ;;		None
 22526 ;; Return value:  Size  Location     Type
 22527 ;;                  1  [STACK] unsigned char 
 22528 ;; Registers used:
 22529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22530 ;; Tracked objects:
 22531 ;;		On entry : 0/2
 22532 ;;		On exit  : 0/0
 22533 ;;		Unchanged: 0/0
 22534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22539 ;;Total ram usage:        0 bytes
 22540 ;; Hardware stack levels used:    1
 22541 ;; Hardware stack levels required when called:   15
 22542 ;; This function calls:
 22543 ;;		Nothing
 22544 ;; This function is called by:
 22545 ;;		_main
 22546 ;;		_check_help
 22547 ;; This function uses a reentrant model
 22548 ;;
 22549                           
 22550                           	psect	text82
 22551  01A6EA                     __ptext82:
 22552                           	opt callstack 0
 22553  01A6EA                     _set_vterm:
 22554                           	opt callstack 15
 22555                           
 22556                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22557                           ;stkvar	_vterm @ sp[(0)+-1]
 22558                           
 22559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22560                           ;incstack = 0
 22561  01A6EA  0EFF               	movlw	-1
 22562  01A6EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22563  01A6F2  0E03               	movlw	3
 22564  01A6F4  160C               	andwf	(btemp+11)^0,f,c
 22565  01A6F6  EE22  F11F         	lfsr	2,_D+288
 22566  01A6FA  50DF               	movf	223,w,c
 22567  01A6FC  180C               	xorwf	(btemp+11)^0,w,c
 22568  01A6FE  0BFE               	andlw	-2
 22569  01A700  180C               	xorwf	(btemp+11)^0,w,c
 22570  01A702  6EDF               	movwf	223,c
 22571                           
 22572                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22573  01A704  52E5               	movf	postdec1,f,c
 22574  01A706  0012               	return		;funcret
 22575  01A708                     __end_of_set_vterm:
 22576                           	opt callstack 0
 22577                           
 22578 ;; *************** function _set_temp_display_help *****************
 22579 ;; Defined at:
 22580 ;;		line 211 in file "mconfig.c"
 22581 ;; Parameters:    Size  Location     Type
 22582 ;;  new_response    1  [STACK] const enum E16509
 22583 ;; Auto vars:     Size  Location     Type
 22584 ;;		None
 22585 ;; Return value:  Size  Location     Type
 22586 ;;                  1  [STACK] enum E16509
 22587 ;; Registers used:
 22588 ;;		wreg, fsr1l, fsr1h
 22589 ;; Tracked objects:
 22590 ;;		On entry : 0/2
 22591 ;;		On exit  : 3F/2
 22592 ;;		Unchanged: 0/0
 22593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22598 ;;Total ram usage:        0 bytes
 22599 ;; Hardware stack levels used:    1
 22600 ;; Hardware stack levels required when called:   15
 22601 ;; This function calls:
 22602 ;;		Nothing
 22603 ;; This function is called by:
 22604 ;;		_check_help
 22605 ;; This function uses a reentrant model
 22606 ;;
 22607                           
 22608                           	psect	text83
 22609  01A84E                     __ptext83:
 22610                           	opt callstack 0
 22611  01A84E                     _set_temp_display_help:
 22612                           	opt callstack 14
 22613                           
 22614                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22615                           
 22616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22617                           ;incstack = 0
 22618  01A84E  0102               	movlb	2	; () banked
 22619  01A850  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22620                           
 22621                           ; BSR set to: 2
 22622                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22623                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22624  01A852  0EFF               	movlw	-1
 22625  01A854  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22626                           
 22627                           ; BSR set to: 2
 22628                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22629  01A85A  52E5               	movf	postdec1,f,c
 22630  01A85C  0012               	return		;funcret
 22631  01A85E                     __end_of_set_temp_display_help:
 22632                           	opt callstack 0
 22633                           
 22634 ;; *************** function _set_display_info *****************
 22635 ;; Defined at:
 22636 ;;		line 200 in file "mconfig.c"
 22637 ;; Parameters:    Size  Location     Type
 22638 ;;  new_response    1  [STACK] const enum E16509
 22639 ;; Auto vars:     Size  Location     Type
 22640 ;;		None
 22641 ;; Return value:  Size  Location     Type
 22642 ;;                  1  [STACK] enum E16994
 22643 ;; Registers used:
 22644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22645 ;; Tracked objects:
 22646 ;;		On entry : 0/1
 22647 ;;		On exit  : 0/0
 22648 ;;		Unchanged: 0/0
 22649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22654 ;;Total ram usage:        0 bytes
 22655 ;; Hardware stack levels used:    1
 22656 ;; Hardware stack levels required when called:   16
 22657 ;; This function calls:
 22658 ;;		_TimerDone
 22659 ;; This function is called by:
 22660 ;;		_main
 22661 ;;		_check_help
 22662 ;; This function uses a reentrant model
 22663 ;;
 22664                           
 22665                           	psect	text84
 22666  01A708                     __ptext84:
 22667                           	opt callstack 0
 22668  01A708                     _set_display_info:
 22669                           	opt callstack 14
 22670                           
 22671                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22672                           
 22673                           ; BSR set to: 2
 22674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22675                           ;incstack = 0
 22676  01A708  0E07               	movlw	7
 22677  01A70A  6EE6               	movwf	postinc1,c
 22678  01A70C  EC8F  F0D1         	call	_TimerDone	;wreg free
 22679  01A710  5001               	movf	btemp^0,w,c
 22680  01A712  B4D8               	btfsc	status,2,c
 22681  01A714  D006               	goto	l1693
 22682                           
 22683                           ;mconfig.c: 205:   old_info = V.response.info;
 22684  01A716  0102               	movlb	2	; () banked
 22685  01A718  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 22686                           
 22687                           ; BSR set to: 2
 22688                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22689                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22690  01A71A  0EFF               	movlw	-1
 22691  01A71C  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 22692  01A722                     l1693:
 22693                           
 22694                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22695  01A722  52E5               	movf	postdec1,f,c
 22696  01A724  0012               	return		;funcret
 22697  01A726                     __end_of_set_display_info:
 22698                           	opt callstack 0
 22699                           
 22700 ;; *************** function _mode_lamp_dim *****************
 22701 ;; Defined at:
 22702 ;;		line 13 in file "mconfig.c"
 22703 ;; Parameters:    Size  Location     Type
 22704 ;;  level           2  [STACK] const unsigned short 
 22705 ;; Auto vars:     Size  Location     Type
 22706 ;;		None
 22707 ;; Return value:  Size  Location     Type
 22708 ;;                  1  [STACK] void 
 22709 ;; Registers used:
 22710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22711 ;; Tracked objects:
 22712 ;;		On entry : 0/2
 22713 ;;		On exit  : 0/0
 22714 ;;		Unchanged: 0/0
 22715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22720 ;;Total ram usage:        0 bytes
 22721 ;; Hardware stack levels used:    1
 22722 ;; Hardware stack levels required when called:   16
 22723 ;; This function calls:
 22724 ;;		_PWM8_LoadDutyValue
 22725 ;; This function is called by:
 22726 ;;		_main
 22727 ;;		_check_help
 22728 ;; This function uses a reentrant model
 22729 ;;
 22730                           
 22731                           	psect	text85
 22732  01A796                     __ptext85:
 22733                           	opt callstack 0
 22734  01A796                     _mode_lamp_dim:
 22735                           	opt callstack 14
 22736                           
 22737                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22738                           ;stkvar	_level @ sp[(0)+-2]
 22739                           
 22740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22741                           ;incstack = 0
 22742  01A796  0EFE               	movlw	-2
 22743  01A798  006F FF8F FFE6     	movff	plusw1,postinc1
 22744  01A79E  006F FF8F FFE6     	movff	plusw1,postinc1
 22745  01A7A4  EC0F  F0CF         	call	_PWM8_LoadDutyValue	;wreg free
 22746                           
 22747                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22748  01A7A8  52E5               	movf	postdec1,f,c
 22749  01A7AA  52E5               	movf	postdec1,f,c
 22750  01A7AC  0012               	return		;funcret
 22751  01A7AE                     __end_of_mode_lamp_dim:
 22752                           	opt callstack 0
 22753                           
 22754 ;; *************** function _mode_lamp_bright *****************
 22755 ;; Defined at:
 22756 ;;		line 18 in file "mconfig.c"
 22757 ;; Parameters:    Size  Location     Type
 22758 ;;		None
 22759 ;; Auto vars:     Size  Location     Type
 22760 ;;		None
 22761 ;; Return value:  Size  Location     Type
 22762 ;;                  1  [STACK] void 
 22763 ;; Registers used:
 22764 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22765 ;; Tracked objects:
 22766 ;;		On entry : 0/0
 22767 ;;		On exit  : 0/0
 22768 ;;		Unchanged: 0/0
 22769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22774 ;;Total ram usage:        0 bytes
 22775 ;; Hardware stack levels used:    1
 22776 ;; Hardware stack levels required when called:   16
 22777 ;; This function calls:
 22778 ;;		_PWM8_LoadDutyValue
 22779 ;; This function is called by:
 22780 ;;		_check_help
 22781 ;; This function uses a reentrant model
 22782 ;;
 22783                           
 22784                           	psect	text86
 22785  01A86C                     __ptext86:
 22786                           	opt callstack 0
 22787  01A86C                     _mode_lamp_bright:
 22788                           	opt callstack 13
 22789                           
 22790                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22791                           
 22792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22793                           ;incstack = 0
 22794  01A86C  0E2C               	movlw	44
 22795  01A86E  6EE6               	movwf	postinc1,c
 22796  01A870  0E01               	movlw	1
 22797  01A872  6EE6               	movwf	postinc1,c
 22798  01A874  EC0F  F0CF         	call	_PWM8_LoadDutyValue	;wreg free
 22799                           
 22800                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22801  01A878  0012               	return		;funcret
 22802  01A87A                     __end_of_mode_lamp_bright:
 22803                           	opt callstack 0
 22804                           
 22805 ;; *************** function _PWM8_LoadDutyValue *****************
 22806 ;; Defined at:
 22807 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22808 ;; Parameters:    Size  Location     Type
 22809 ;;  dutyValue       2  [STACK] unsigned short 
 22810 ;; Auto vars:     Size  Location     Type
 22811 ;;		None
 22812 ;; Return value:  Size  Location     Type
 22813 ;;                  1  [STACK] void 
 22814 ;; Registers used:
 22815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22816 ;; Tracked objects:
 22817 ;;		On entry : 0/2
 22818 ;;		On exit  : 0/0
 22819 ;;		Unchanged: 0/0
 22820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22825 ;;Total ram usage:        0 bytes
 22826 ;; Hardware stack levels used:    1
 22827 ;; Hardware stack levels required when called:   15
 22828 ;; This function calls:
 22829 ;;		Nothing
 22830 ;; This function is called by:
 22831 ;;		_mode_lamp_dim
 22832 ;;		_mode_lamp_bright
 22833 ;; This function uses a reentrant model
 22834 ;;
 22835                           
 22836                           	psect	text87
 22837  019E1E                     __ptext87:
 22838                           	opt callstack 0
 22839  019E1E                     _PWM8_LoadDutyValue:
 22840                           	opt callstack 14
 22841                           
 22842                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22843                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22844                           
 22845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22846                           ;incstack = 0
 22847  019E1E  0EFE               	movlw	-2
 22848  019E20  006F FF8C  F00B    	movff	plusw1,btemp+10
 22849  019E26  0EFF               	movlw	-1
 22850  019E28  006F FF8C  F00C    	movff	plusw1,btemp+11
 22851  019E2E  90D8               	bcf	status,0,c
 22852  019E30  320C               	rrcf	(btemp+11)^0,f,c
 22853  019E32  320B               	rrcf	(btemp+10)^0,f,c
 22854  019E34  90D8               	bcf	status,0,c
 22855  019E36  320C               	rrcf	(btemp+11)^0,f,c
 22856  019E38  320B               	rrcf	(btemp+10)^0,f,c
 22857  019E3A  500B               	movf	(btemp+10)^0,w,c
 22858  019E3C  6E61               	movwf	97,c	;volatile
 22859                           
 22860                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22861                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22862  019E3E  0EFE               	movlw	-2
 22863  019E40  006F FF8C  F00C    	movff	plusw1,btemp+11
 22864  019E46  0E03               	movlw	3
 22865  019E48  160C               	andwf	(btemp+11)^0,f,c
 22866  019E4A  0E06               	movlw	6
 22867  019E4C  6E01               	movwf	btemp^0,c
 22868  019E4E                     u8615:
 22869  019E4E  90D8               	bcf	status,0,c
 22870  019E50  360C               	rlcf	(btemp+11)^0,f,c
 22871  019E52  2E01               	decfsz	btemp^0,f,c
 22872  019E54  D7FC               	goto	u8615
 22873  019E56  500C               	movf	(btemp+11)^0,w,c
 22874  019E58  6E60               	movwf	96,c	;volatile
 22875                           
 22876                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22877  019E5A  52E5               	movf	postdec1,f,c
 22878  019E5C  52E5               	movf	postdec1,f,c
 22879  019E5E  0012               	return		;funcret
 22880  019E60                     __end_of_PWM8_LoadDutyValue:
 22881                           	opt callstack 0
 22882                           
 22883 ;; *************** function _help_button *****************
 22884 ;; Defined at:
 22885 ;;		line 26 in file "mconfig.c"
 22886 ;; Parameters:    Size  Location     Type
 22887 ;;		None
 22888 ;; Auto vars:     Size  Location     Type
 22889 ;;		None
 22890 ;; Return value:  Size  Location     Type
 22891 ;;                  1  [STACK] _Bool 
 22892 ;; Registers used:
 22893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22894 ;; Tracked objects:
 22895 ;;		On entry : 0/2
 22896 ;;		On exit  : 0/0
 22897 ;;		Unchanged: 0/0
 22898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22903 ;;Total ram usage:        0 bytes
 22904 ;; Hardware stack levels used:    1
 22905 ;; Hardware stack levels required when called:   16
 22906 ;; This function calls:
 22907 ;;		_StartTimer
 22908 ;;		_TimerDone
 22909 ;; This function is called by:
 22910 ;;		_check_help
 22911 ;; This function uses a reentrant model
 22912 ;;
 22913                           
 22914                           	psect	text88
 22915  019F9E                     __ptext88:
 22916                           	opt callstack 0
 22917  019F9E                     _help_button:
 22918                           	opt callstack 13
 22919                           
 22920                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22921                           
 22922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22923                           ;incstack = 0
 22924  019F9E  B0CB               	btfsc	203,0,c	;volatile
 22925  019FA0  D00C               	goto	l1636
 22926                           
 22927                           ;mconfig.c: 29:   V.help = 1;
 22928  019FA2  0102               	movlb	2	; () banked
 22929  019FA4  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22930                           
 22931                           ; BSR set to: 2
 22932                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22933  019FA6  0E08               	movlw	8
 22934  019FA8  6EE6               	movwf	postinc1,c
 22935  019FAA  EC8F  F0D1         	call	_TimerDone	;wreg free
 22936  019FAE  5001               	movf	btemp^0,w,c
 22937  019FB0  B4D8               	btfsc	status,2,c
 22938  019FB2  D003               	goto	l1636
 22939                           
 22940                           ;mconfig.c: 31:    return 1;
 22941  019FB4  0E01               	movlw	1
 22942  019FB6  6E01               	movwf	btemp^0,c
 22943  019FB8  0012               	return	
 22944  019FBA                     l1636:
 22945                           
 22946                           ;mconfig.c: 34:  if (!V.help)
 22947  019FBA  0102               	movlb	2	; () banked
 22948  019FBC  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22949  019FBE  D008               	goto	l9707
 22950                           
 22951                           ; BSR set to: 2
 22952                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22953  019FC0  0E2C               	movlw	44
 22954  019FC2  6EE6               	movwf	postinc1,c
 22955  019FC4  0E01               	movlw	1
 22956  019FC6  6EE6               	movwf	postinc1,c
 22957  019FC8  0E08               	movlw	8
 22958  019FCA  6EE6               	movwf	postinc1,c
 22959  019FCC  EC30  F0CF         	call	_StartTimer	;wreg free
 22960  019FD0                     l9707:
 22961                           
 22962                           ;mconfig.c: 37:  return 0;
 22963  019FD0  0E00               	movlw	0
 22964  019FD2  6E01               	movwf	btemp^0,c
 22965                           
 22966                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22967  019FD4  0012               	return		;funcret
 22968  019FD6                     __end_of_help_button:
 22969                           	opt callstack 0
 22970                           
 22971 ;; *************** function _TimerDone *****************
 22972 ;; Defined at:
 22973 ;;		line 20 in file "timers.c"
 22974 ;; Parameters:    Size  Location     Type
 22975 ;;  timer           1  [STACK] const unsigned char 
 22976 ;; Auto vars:     Size  Location     Type
 22977 ;;		None
 22978 ;; Return value:  Size  Location     Type
 22979 ;;                  1  [STACK] _Bool 
 22980 ;; Registers used:
 22981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22982 ;; Tracked objects:
 22983 ;;		On entry : 0/1
 22984 ;;		On exit  : 0/0
 22985 ;;		Unchanged: 0/0
 22986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22991 ;;Total ram usage:        0 bytes
 22992 ;; Hardware stack levels used:    1
 22993 ;; Hardware stack levels required when called:   15
 22994 ;; This function calls:
 22995 ;;		Nothing
 22996 ;; This function is called by:
 22997 ;;		_main
 22998 ;;		_WaitMs
 22999 ;;		_help_button
 23000 ;;		_check_help
 23001 ;;		_set_display_info
 23002 ;; This function uses a reentrant model
 23003 ;;
 23004                           
 23005                           	psect	text89
 23006  01A31E                     __ptext89:
 23007                           	opt callstack 0
 23008  01A31E                     _TimerDone:
 23009                           	opt callstack 14
 23010                           
 23011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23012                           ;incstack = 0
 23013  01A31E  0004               	clrwdt		;# 
 23014                           
 23015                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23016                           ;stkvar	_timer @ sp[(0)+-1]
 23017  01A320  0EFF               	movlw	-1
 23018  01A322  50E3               	movf	plusw1,w,c
 23019  01A324  0D02               	mullw	2
 23020  01A326  0EDA               	movlw	low _tickCount
 23021  01A328  24F3               	addwf	243,w,c
 23022  01A32A  6ED9               	movwf	fsr2l,c
 23023  01A32C  0E01               	movlw	high _tickCount
 23024  01A32E  20F4               	addwfc	prodh,w,c
 23025  01A330  6EDA               	movwf	fsr2h,c
 23026  01A332  50DE               	movf	postinc2,w,c
 23027  01A334  10DE               	iorwf	postinc2,w,c
 23028  01A336  A4D8               	btfss	status,2,c
 23029  01A338  D002               	goto	l9029
 23030                           
 23031                           ;timers.c: 24:   return 1;
 23032  01A33A  0E01               	movlw	1
 23033  01A33C  D001               	goto	L24
 23034  01A33E                     l9029:
 23035                           
 23036                           ;timers.c: 26:  return 0;
 23037  01A33E  0E00               	movlw	0
 23038  01A340                     L24:
 23039  01A340  6E01               	movwf	btemp^0,c
 23040                           
 23041                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23042  01A342  52E5               	movf	postdec1,f,c
 23043  01A344  0012               	return		;funcret
 23044  01A346                     __end_of_TimerDone:
 23045                           	opt callstack 0
 23046                           
 23047 ;; *************** function _StartTimer *****************
 23048 ;; Defined at:
 23049 ;;		line 12 in file "timers.c"
 23050 ;; Parameters:    Size  Location     Type
 23051 ;;  timer           1  [STACK] const unsigned char 
 23052 ;;  count           2  [STACK] const unsigned short 
 23053 ;; Auto vars:     Size  Location     Type
 23054 ;;		None
 23055 ;; Return value:  Size  Location     Type
 23056 ;;                  1  [STACK] void 
 23057 ;; Registers used:
 23058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23059 ;; Tracked objects:
 23060 ;;		On entry : 0/0
 23061 ;;		On exit  : 0/0
 23062 ;;		Unchanged: 0/0
 23063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23068 ;;Total ram usage:        0 bytes
 23069 ;; Hardware stack levels used:    1
 23070 ;; Hardware stack levels required when called:   15
 23071 ;; This function calls:
 23072 ;;		Nothing
 23073 ;; This function is called by:
 23074 ;;		_main
 23075 ;;		_WaitMs
 23076 ;;		_help_button
 23077 ;;		_check_help
 23078 ;;		_calc_bsoc
 23079 ;; This function uses a reentrant model
 23080 ;;
 23081                           
 23082                           	psect	text90
 23083  019E60                     __ptext90:
 23084                           	opt callstack 0
 23085  019E60                     _StartTimer:
 23086                           	opt callstack 0
 23087                           
 23088                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23089                           ;stkvar	_count @ sp[(0)+-3]
 23090                           
 23091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23092                           ;incstack = 0
 23093 ;; hardware stack exceeded
 23094  019E60  0EFD               	movlw	-3
 23095  019E62  006F FF8C  F00B    	movff	plusw1,btemp+10
 23096  019E68  0EFE               	movlw	-2
 23097  019E6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23098  019E70  90D8               	bcf	status,0,c
 23099  019E72  340B               	rlcf	(btemp+10)^0,w,c
 23100  019E74  6E09               	movwf	(btemp+8)^0,c
 23101  019E76  340C               	rlcf	(btemp+11)^0,w,c
 23102  019E78  6E0A               	movwf	(btemp+9)^0,c
 23103                           
 23104                           ;stkvar	_timer @ sp[(0)+-1]
 23105  019E7A  0EFF               	movlw	-1
 23106  019E7C  50E3               	movf	plusw1,w,c
 23107  019E7E  0D02               	mullw	2
 23108  019E80  0EDA               	movlw	low _tickCount
 23109  019E82  24F3               	addwf	243,w,c
 23110  019E84  6ED9               	movwf	fsr2l,c
 23111  019E86  0E01               	movlw	high _tickCount
 23112  019E88  20F4               	addwfc	prodh,w,c
 23113  019E8A  6EDA               	movwf	fsr2h,c
 23114  019E8C  0060  F027  FFDE   	movff	btemp+8,postinc2
 23115  019E92  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23116                           
 23117                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23118  019E98  52E5               	movf	postdec1,f,c
 23119  019E9A  52E5               	movf	postdec1,f,c
 23120  019E9C  52E5               	movf	postdec1,f,c
 23121  019E9E  0012               	return		;funcret
 23122  019EA0                     __end_of_StartTimer:
 23123                           	opt callstack 0
 23124                           
 23125 ;; *************** function _display_info *****************
 23126 ;; Defined at:
 23127 ;;		line 190 in file "mconfig.c"
 23128 ;; Parameters:    Size  Location     Type
 23129 ;;		None
 23130 ;; Auto vars:     Size  Location     Type
 23131 ;;		None
 23132 ;; Return value:  Size  Location     Type
 23133 ;;                  1  [STACK] enum E16509
 23134 ;; Registers used:
 23135 ;;		btemp
 23136 ;; Tracked objects:
 23137 ;;		On entry : 0/2
 23138 ;;		On exit  : 0/0
 23139 ;;		Unchanged: 0/0
 23140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23145 ;;Total ram usage:        0 bytes
 23146 ;; Hardware stack levels used:    1
 23147 ;; Hardware stack levels required when called:   15
 23148 ;; This function calls:
 23149 ;;		Nothing
 23150 ;; This function is called by:
 23151 ;;		_check_help
 23152 ;; This function uses a reentrant model
 23153 ;;
 23154                           
 23155                           	psect	text91
 23156  01A8DA                     __ptext91:
 23157                           	opt callstack 0
 23158  01A8DA                     _display_info:
 23159                           	opt callstack 14
 23160                           
 23161                           ;mconfig.c: 192:  return V.response.info;
 23162                           
 23163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23164                           ;incstack = 0
 23165  01A8DA  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 23166                           
 23167                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23168  01A8E0  0012               	return		;funcret
 23169  01A8E2                     __end_of_display_info:
 23170                           	opt callstack 0
 23171                           
 23172 ;; *************** function _display_help *****************
 23173 ;; Defined at:
 23174 ;;		line 195 in file "mconfig.c"
 23175 ;; Parameters:    Size  Location     Type
 23176 ;;		None
 23177 ;; Auto vars:     Size  Location     Type
 23178 ;;		None
 23179 ;; Return value:  Size  Location     Type
 23180 ;;                  1  [STACK] enum E16509
 23181 ;; Registers used:
 23182 ;;		btemp
 23183 ;; Tracked objects:
 23184 ;;		On entry : 3F/2
 23185 ;;		On exit  : 0/0
 23186 ;;		Unchanged: 0/0
 23187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23192 ;;Total ram usage:        0 bytes
 23193 ;; Hardware stack levels used:    1
 23194 ;; Hardware stack levels required when called:   15
 23195 ;; This function calls:
 23196 ;;		Nothing
 23197 ;; This function is called by:
 23198 ;;		_check_help
 23199 ;; This function uses a reentrant model
 23200 ;;
 23201                           
 23202                           	psect	text92
 23203  01A8E2                     __ptext92:
 23204                           	opt callstack 0
 23205  01A8E2                     _display_help:
 23206                           	opt callstack 14
 23207                           
 23208                           ;mconfig.c: 197:  return V.response.help_temp;
 23209                           
 23210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23211                           ;incstack = 0
 23212  01A8E2  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 23213                           
 23214                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23215  01A8E8  0012               	return		;funcret
 23216  01A8EA                     __end_of_display_help:
 23217                           	opt callstack 0
 23218                           
 23219 ;; *************** function _check_enter_button *****************
 23220 ;; Defined at:
 23221 ;;		line 42 in file "hid.c"
 23222 ;; Parameters:    Size  Location     Type
 23223 ;;  h               1  [STACK] PTR struct H_data
 23224 ;;		 -> H(7), 
 23225 ;; Auto vars:     Size  Location     Type
 23226 ;;		None
 23227 ;; Return value:  Size  Location     Type
 23228 ;;                  1  [STACK] _Bool 
 23229 ;; Registers used:
 23230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23231 ;; Tracked objects:
 23232 ;;		On entry : 0/1
 23233 ;;		On exit  : 0/0
 23234 ;;		Unchanged: 0/0
 23235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23240 ;;Total ram usage:        0 bytes
 23241 ;; Hardware stack levels used:    1
 23242 ;; Hardware stack levels required when called:   15
 23243 ;; This function calls:
 23244 ;;		Nothing
 23245 ;; This function is called by:
 23246 ;;		_main
 23247 ;; This function uses a reentrant model
 23248 ;;
 23249                           
 23250                           	psect	text93
 23251  019EA0                     __ptext93:
 23252                           	opt callstack 0
 23253  019EA0                     _check_enter_button:
 23254                           	opt callstack 15
 23255                           
 23256                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23257                           ;stkvar	_h @ sp[(0)+-1]
 23258                           
 23259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23260                           ;incstack = 0
 23261  019EA0  0EFF               	movlw	-1
 23262  019EA2  50E3               	movf	plusw1,w,c
 23263  019EA4  6ED9               	movwf	fsr2l,c
 23264  019EA6  6ADA               	clrf	fsr2h,c
 23265  019EA8  0E04               	movlw	4
 23266  019EAA  26D9               	addwf	fsr2l,f,c
 23267  019EAC  50DF               	movf	indf2,w,c
 23268  019EAE  A4D8               	btfss	status,2,c
 23269  019EB0  D013               	goto	l10299
 23270                           
 23271                           ;stkvar	_h @ sp[(0)+-1]
 23272  019EB2  0EFF               	movlw	-1
 23273  019EB4  50E3               	movf	plusw1,w,c
 23274  019EB6  6ED9               	movwf	fsr2l,c
 23275  019EB8  6ADA               	clrf	fsr2h,c
 23276  019EBA  0E05               	movlw	5
 23277  019EBC  26D9               	addwf	fsr2l,f,c
 23278  019EBE  50DF               	movf	indf2,w,c
 23279  019EC0  A4D8               	btfss	status,2,c
 23280  019EC2  D00A               	goto	l10299
 23281                           
 23282                           ;hid.c: 45:   h->wait_enter = 1;
 23283                           ;stkvar	_h @ sp[(0)+-1]
 23284  019EC4  0EFF               	movlw	-1
 23285  019EC6  50E3               	movf	plusw1,w,c
 23286  019EC8  6ED9               	movwf	fsr2l,c
 23287  019ECA  6ADA               	clrf	fsr2h,c
 23288  019ECC  0E04               	movlw	4
 23289  019ECE  26D9               	addwf	fsr2l,f,c
 23290  019ED0  0E01               	movlw	1
 23291  019ED2  6EDF               	movwf	indf2,c
 23292                           
 23293                           ;hid.c: 46:   return 1;
 23294  019ED4  0E01               	movlw	1
 23295  019ED6  D001               	goto	L25
 23296  019ED8                     l10299:
 23297                           
 23298                           ;hid.c: 48:  return 0;
 23299  019ED8  0E00               	movlw	0
 23300  019EDA                     L25:
 23301  019EDA  6E01               	movwf	btemp^0,c
 23302                           
 23303                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23304  019EDC  52E5               	movf	postdec1,f,c
 23305  019EDE  0012               	return		;funcret
 23306  019EE0                     __end_of_check_enter_button:
 23307                           	opt callstack 0
 23308                           
 23309 ;; *************** function _check_adc_scan *****************
 23310 ;; Defined at:
 23311 ;;		line 56 in file "daq.c"
 23312 ;; Parameters:    Size  Location     Type
 23313 ;;		None
 23314 ;; Auto vars:     Size  Location     Type
 23315 ;;		None
 23316 ;; Return value:  Size  Location     Type
 23317 ;;                  1  [STACK] _Bool 
 23318 ;; Registers used:
 23319 ;;		btemp
 23320 ;; Tracked objects:
 23321 ;;		On entry : 0/1
 23322 ;;		On exit  : 0/0
 23323 ;;		Unchanged: 0/0
 23324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23329 ;;Total ram usage:        0 bytes
 23330 ;; Hardware stack levels used:    1
 23331 ;; Hardware stack levels required when called:   15
 23332 ;; This function calls:
 23333 ;;		Nothing
 23334 ;; This function is called by:
 23335 ;;		_main
 23336 ;; This function uses a reentrant model
 23337 ;;
 23338                           
 23339                           	psect	text94
 23340  01A8EA                     __ptext94:
 23341                           	opt callstack 0
 23342  01A8EA                     _check_adc_scan:
 23343                           	opt callstack 15
 23344                           
 23345                           ;daq.c: 58:  return R.done;
 23346                           
 23347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23348                           ;incstack = 0
 23349  01A8EA  0060  F3C8  F001   	movff	_R+39,btemp	;volatile
 23350                           
 23351                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23352  01A8F0  0012               	return		;funcret
 23353  01A8F2                     __end_of_check_adc_scan:
 23354                           	opt callstack 0
 23355                           
 23356 ;; *************** function _calc_model_data *****************
 23357 ;; Defined at:
 23358 ;;		line 56 in file "mbmc.c"
 23359 ;; Parameters:    Size  Location     Type
 23360 ;;		None
 23361 ;; Auto vars:     Size  Location     Type
 23362 ;;		None
 23363 ;; Return value:  Size  Location     Type
 23364 ;;                  1  [STACK] void 
 23365 ;; Registers used:
 23366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23367 ;; Tracked objects:
 23368 ;;		On entry : 0/1
 23369 ;;		On exit  : 3F/1
 23370 ;;		Unchanged: 0/0
 23371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23376 ;;Total ram usage:        0 bytes
 23377 ;; Hardware stack levels used:    1
 23378 ;; Hardware stack levels required when called:   18
 23379 ;; This function calls:
 23380 ;;		___fladd
 23381 ;;		___flmul
 23382 ;;		___flsub
 23383 ;;		_lp_filter
 23384 ;;		_start_bsoc
 23385 ;;		_stop_bsoc
 23386 ;; This function is called by:
 23387 ;;		_main
 23388 ;; This function uses a reentrant model
 23389 ;;
 23390                           
 23391                           	psect	text95
 23392  015E26                     __ptext95:
 23393                           	opt callstack 0
 23394  015E26                     _calc_model_data:
 23395                           	opt callstack 12
 23396                           
 23397                           ;mbmc.c: 58:  stop_bsoc();
 23398                           
 23399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23400                           ;incstack = 0
 23401  015E26  EC86  F0D4         	call	_stop_bsoc	;wreg free
 23402                           
 23403                           ; BSR set to: 57
 23404                           ;mbmc.c: 60:  if (!V.calib) {
 23405  015E2A  0102               	movlb	2	; () banked
 23406  015E2C  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 23407  015E2E  A4D8               	btfss	status,2,c
 23408  015E30  D169               	goto	l10199
 23409                           
 23410                           ; BSR set to: 2
 23411                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 23412  015E32  C100  F144         	movff	_C,_C+68	;volatile
 23413  015E36  C101  F145         	movff	_C+1,_C+69	;volatile
 23414  015E3A  C102  F146         	movff	_C+2,_C+70	;volatile
 23415  015E3E  C103  F147         	movff	_C+3,_C+71	;volatile
 23416                           
 23417                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 23418  015E42  C104  F148         	movff	_C+4,_C+72	;volatile
 23419  015E46  C105  F149         	movff	_C+5,_C+73	;volatile
 23420  015E4A  C106  F14A         	movff	_C+6,_C+74	;volatile
 23421  015E4E  C107  F14B         	movff	_C+7,_C+75	;volatile
 23422                           
 23423                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 23424  015E52  C110  F154         	movff	_C+16,_C+84	;volatile
 23425  015E56  C111  F155         	movff	_C+17,_C+85	;volatile
 23426  015E5A  C112  F156         	movff	_C+18,_C+86	;volatile
 23427  015E5E  C113  F157         	movff	_C+19,_C+87	;volatile
 23428                           
 23429                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 23430  015E62  C114  F150         	movff	_C+20,_C+80	;volatile
 23431  015E66  C115  F151         	movff	_C+21,_C+81	;volatile
 23432  015E6A  C116  F152         	movff	_C+22,_C+82	;volatile
 23433  015E6E  C117  F153         	movff	_C+23,_C+83	;volatile
 23434                           
 23435                           ;mbmc.c: 65:   C.v_cc = C.calc[V_CC];
 23436  015E72  C108  F14C         	movff	_C+8,_C+76	;volatile
 23437  015E76  C109  F14D         	movff	_C+9,_C+77	;volatile
 23438  015E7A  C10A  F14E         	movff	_C+10,_C+78	;volatile
 23439  015E7E  C10B  F14F         	movff	_C+11,_C+79	;volatile
 23440                           
 23441                           ;mbmc.c: 66:   C.v_inverter = C.calc[V_INVERTER];
 23442  015E82  C130  F164         	movff	_C+48,_C+100	;volatile
 23443  015E86  C131  F165         	movff	_C+49,_C+101	;volatile
 23444  015E8A  C132  F166         	movff	_C+50,_C+102	;volatile
 23445  015E8E  C133  F167         	movff	_C+51,_C+103	;volatile
 23446                           
 23447                           ; BSR set to: 2
 23448                           ;mbmc.c: 67:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 23449  015E92  0E01               	movlw	1
 23450  015E94  6EE6               	movwf	postinc1,c
 23451  015E96  0E10               	movlw	16
 23452  015E98  6EE6               	movwf	postinc1,c
 23453  015E9A  0060  F403  FFE6   	movff	_C,postinc1
 23454  015EA0  0060  F407  FFE6   	movff	_C+1,postinc1
 23455  015EA6  0060  F40B  FFE6   	movff	_C+2,postinc1
 23456  015EAC  0060  F40F  FFE6   	movff	_C+3,postinc1
 23457  015EB2  0060  F413  FFE6   	movff	_C+4,postinc1
 23458  015EB8  0060  F417  FFE6   	movff	_C+5,postinc1
 23459  015EBE  0060  F41B  FFE6   	movff	_C+6,postinc1
 23460  015EC4  0060  F41F  FFE6   	movff	_C+7,postinc1
 23461  015ECA  EC61  F0CE         	call	___flsub	;wreg free
 23462  015ECE  0060  F007  FFE6   	movff	btemp,postinc1
 23463  015ED4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23464  015EDA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23465  015EE0  0060  F013  FFE6   	movff	btemp+3,postinc1
 23466  015EE6  EC9C  F0B9         	call	_lp_filter	;wreg free
 23467  015EEA  0060  F004  F140   	movff	btemp,_C+64	;volatile
 23468  015EF0  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 23469  015EF6  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 23470  015EFC  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 23471                           
 23472                           ;mbmc.c: 68:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 23473  015F02  0E01               	movlw	1
 23474  015F04  6EE6               	movwf	postinc1,c
 23475  015F06  0E11               	movlw	17
 23476  015F08  6EE6               	movwf	postinc1,c
 23477  015F0A  0060  F553  FFE6   	movff	_C+84,postinc1
 23478  015F10  0060  F557  FFE6   	movff	_C+85,postinc1
 23479  015F16  0060  F55B  FFE6   	movff	_C+86,postinc1
 23480  015F1C  0060  F55F  FFE6   	movff	_C+87,postinc1
 23481  015F22  0060  F503  FFE6   	movff	_C+64,postinc1
 23482  015F28  0060  F507  FFE6   	movff	_C+65,postinc1
 23483  015F2E  0060  F50B  FFE6   	movff	_C+66,postinc1
 23484  015F34  0060  F50F  FFE6   	movff	_C+67,postinc1
 23485  015F3A  ECE1  F095         	call	___flmul	;wreg free
 23486  015F3E  0060  F007  FFE6   	movff	btemp,postinc1
 23487  015F44  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23488  015F4A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23489  015F50  0060  F013  FFE6   	movff	btemp+3,postinc1
 23490  015F56  EC9C  F0B9         	call	_lp_filter	;wreg free
 23491  015F5A  0060  F004  F168   	movff	btemp,_C+104	;volatile
 23492  015F60  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 23493  015F66  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 23494  015F6C  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 23495                           
 23496                           ;mbmc.c: 69:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 23497  015F72  0E01               	movlw	1
 23498  015F74  6EE6               	movwf	postinc1,c
 23499  015F76  0E12               	movlw	18
 23500  015F78  6EE6               	movwf	postinc1,c
 23501  015F7A  0060  F543  FFE6   	movff	_C+80,postinc1
 23502  015F80  0060  F547  FFE6   	movff	_C+81,postinc1
 23503  015F86  0060  F54B  FFE6   	movff	_C+82,postinc1
 23504  015F8C  0060  F54F  FFE6   	movff	_C+83,postinc1
 23505  015F92  0060  F523  FFE6   	movff	_C+72,postinc1
 23506  015F98  0060  F527  FFE6   	movff	_C+73,postinc1
 23507  015F9E  0060  F52B  FFE6   	movff	_C+74,postinc1
 23508  015FA4  0060  F52F  FFE6   	movff	_C+75,postinc1
 23509  015FAA  ECE1  F095         	call	___flmul	;wreg free
 23510  015FAE  0060  F007  FFE6   	movff	btemp,postinc1
 23511  015FB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23512  015FBA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23513  015FC0  0060  F013  FFE6   	movff	btemp+3,postinc1
 23514  015FC6  EC9C  F0B9         	call	_lp_filter	;wreg free
 23515  015FCA  0060  F004  F170   	movff	btemp,_C+112	;volatile
 23516  015FD0  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 23517  015FD6  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 23518  015FDC  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 23519                           
 23520                           ;mbmc.c: 70:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 23521  015FE2  0E01               	movlw	1
 23522  015FE4  6EE6               	movwf	postinc1,c
 23523  015FE6  0E13               	movlw	19
 23524  015FE8  6EE6               	movwf	postinc1,c
 23525  015FEA  0E00               	movlw	0
 23526  015FEC  6EE6               	movwf	postinc1,c
 23527  015FEE  0E00               	movlw	0
 23528  015FF0  6EE6               	movwf	postinc1,c
 23529  015FF2  0E60               	movlw	96
 23530  015FF4  6EE6               	movwf	postinc1,c
 23531  015FF6  0EC1               	movlw	193
 23532  015FF8  6EE6               	movwf	postinc1,c
 23533  015FFA  0060  F593  FFE6   	movff	_C+100,postinc1
 23534  016000  0060  F597  FFE6   	movff	_C+101,postinc1
 23535  016006  0060  F59B  FFE6   	movff	_C+102,postinc1
 23536  01600C  0060  F59F  FFE6   	movff	_C+103,postinc1
 23537  016012  0060  F503  FFE6   	movff	_C+64,postinc1
 23538  016018  0060  F507  FFE6   	movff	_C+65,postinc1
 23539  01601E  0060  F50B  FFE6   	movff	_C+66,postinc1
 23540  016024  0060  F50F  FFE6   	movff	_C+67,postinc1
 23541  01602A  ECE1  F095         	call	___flmul	;wreg free
 23542  01602E  0060  F007  FFE6   	movff	btemp,postinc1
 23543  016034  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23544  01603A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23545  016040  0060  F013  FFE6   	movff	btemp+3,postinc1
 23546  016046  ECF6  F099         	call	___fladd	;wreg free
 23547  01604A  0060  F007  FFE6   	movff	btemp,postinc1
 23548  016050  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23549  016056  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23550  01605C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23551  016062  EC9C  F0B9         	call	_lp_filter	;wreg free
 23552  016066  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 23553  01606C  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 23554  016072  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 23555  016078  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 23556                           
 23557                           ;mbmc.c: 71:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 23558  01607E  0E01               	movlw	1
 23559  016080  6EE6               	movwf	postinc1,c
 23560  016082  0E14               	movlw	20
 23561  016084  6EE6               	movwf	postinc1,c
 23562  016086  0060  F553  FFE6   	movff	_C+84,postinc1
 23563  01608C  0060  F557  FFE6   	movff	_C+85,postinc1
 23564  016092  0060  F55B  FFE6   	movff	_C+86,postinc1
 23565  016098  0060  F55F  FFE6   	movff	_C+87,postinc1
 23566  01609E  0060  F513  FFE6   	movff	_C+68,postinc1
 23567  0160A4  0060  F517  FFE6   	movff	_C+69,postinc1
 23568  0160AA  0060  F51B  FFE6   	movff	_C+70,postinc1
 23569  0160B0  0060  F51F  FFE6   	movff	_C+71,postinc1
 23570  0160B6  ECE1  F095         	call	___flmul	;wreg free
 23571  0160BA  0060  F007  FFE6   	movff	btemp,postinc1
 23572  0160C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23573  0160C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23574  0160CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 23575  0160D2  EC9C  F0B9         	call	_lp_filter	;wreg free
 23576  0160D6  0060  F004  F174   	movff	btemp,_C+116	;volatile
 23577  0160DC  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 23578  0160E2  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 23579  0160E8  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 23580                           
 23581                           ;mbmc.c: 75:   if (C.p_inverter < 0.0)
 23582  0160EE  0101               	movlb	1	; () banked
 23583  0160F0  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 23584  0160F2  D008               	goto	l10199
 23585                           
 23586                           ; BSR set to: 1
 23587                           ;mbmc.c: 76:    C.p_inverter = 0.0001;
 23588  0160F4  0E17               	movlw	23
 23589  0160F6  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 23590  0160F8  0EB7               	movlw	183
 23591  0160FA  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 23592  0160FC  0ED1               	movlw	209
 23593  0160FE  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 23594  016100  0E38               	movlw	56
 23595  016102  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 23596  016104                     l10199:
 23597                           
 23598                           ;mbmc.c: 78:  start_bsoc();
 23599  016104  EC26  F0D3         	call	_start_bsoc	;wreg free
 23600                           
 23601                           ; BSR set to: 57
 23602                           ;mbmc.c: 79:  C.update = 1;
 23603  016108  0E01               	movlw	1
 23604  01610A  0101               	movlb	1	; () banked
 23605  01610C  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 23606                           
 23607                           ; BSR set to: 1
 23608                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23609  01610E  0012               	return		;funcret
 23610  016110                     __end_of_calc_model_data:
 23611                           	opt callstack 0
 23612                           
 23613 ;; *************** function _stop_bsoc *****************
 23614 ;; Defined at:
 23615 ;;		line 106 in file "bsoc.c"
 23616 ;; Parameters:    Size  Location     Type
 23617 ;;		None
 23618 ;; Auto vars:     Size  Location     Type
 23619 ;;		None
 23620 ;; Return value:  Size  Location     Type
 23621 ;;                  1  [STACK] void 
 23622 ;; Registers used:
 23623 ;;		None
 23624 ;; Tracked objects:
 23625 ;;		On entry : 0/1
 23626 ;;		On exit  : 3F/39
 23627 ;;		Unchanged: 0/0
 23628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23633 ;;Total ram usage:        0 bytes
 23634 ;; Hardware stack levels used:    1
 23635 ;; Hardware stack levels required when called:   15
 23636 ;; This function calls:
 23637 ;;		Nothing
 23638 ;; This function is called by:
 23639 ;;		_calc_model_data
 23640 ;; This function uses a reentrant model
 23641 ;;
 23642                           
 23643                           	psect	text96
 23644  01A90C                     __ptext96:
 23645                           	opt callstack 0
 23646  01A90C                     _stop_bsoc:
 23647                           	opt callstack 14
 23648                           
 23649                           ;bsoc.c: 109:  PIE6bits.TMR3IE = 0;
 23650                           
 23651                           ; BSR set to: 1
 23652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23653                           ;incstack = 0
 23654  01A90C  0139               	movlb	57	; () banked
 23655  01A90E  9D96               	bcf	150,6,b	;volatile
 23656                           
 23657                           ; BSR set to: 57
 23658                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 23659  01A910  0012               	return		;funcret
 23660  01A912                     __end_of_stop_bsoc:
 23661                           	opt callstack 0
 23662                           
 23663 ;; *************** function _start_bsoc *****************
 23664 ;; Defined at:
 23665 ;;		line 97 in file "bsoc.c"
 23666 ;; Parameters:    Size  Location     Type
 23667 ;;		None
 23668 ;; Auto vars:     Size  Location     Type
 23669 ;;		None
 23670 ;; Return value:  Size  Location     Type
 23671 ;;                  1  [STACK] void 
 23672 ;; Registers used:
 23673 ;;		wreg, status,2, status,0, btemp+11
 23674 ;; Tracked objects:
 23675 ;;		On entry : 3C/2
 23676 ;;		On exit  : 3F/39
 23677 ;;		Unchanged: 0/0
 23678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23683 ;;Total ram usage:        0 bytes
 23684 ;; Hardware stack levels used:    1
 23685 ;; Hardware stack levels required when called:   15
 23686 ;; This function calls:
 23687 ;;		Nothing
 23688 ;; This function is called by:
 23689 ;;		_calc_model_data
 23690 ;; This function uses a reentrant model
 23691 ;;
 23692                           
 23693                           	psect	text97
 23694  01A64C                     __ptext97:
 23695                           	opt callstack 0
 23696  01A64C                     _start_bsoc:
 23697                           	opt callstack 14
 23698                           
 23699                           ;bsoc.c: 100:  PIE6bits.TMR3IE = 1;
 23700                           
 23701                           ; BSR set to: 57
 23702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23703                           ;incstack = 0
 23704  01A64C  0139               	movlb	57	; () banked
 23705  01A64E  8D96               	bsf	150,6,b	;volatile
 23706                           
 23707                           ; BSR set to: 57
 23708  01A650  A4BE               	btfss	190,2,c	;volatile
 23709  01A652  D002               	goto	u9030
 23710  01A654  0E01               	movlw	1
 23711  01A656  D001               	goto	u9036
 23712  01A658                     u9030:
 23713  01A658  0E00               	movlw	0
 23714  01A65A                     u9036:
 23715  01A65A  0AFF               	xorlw	255
 23716  01A65C  6E0C               	movwf	(btemp+11)^0,c
 23717  01A65E  460C               	rlncf	(btemp+11)^0,f,c
 23718  01A660  460C               	rlncf	(btemp+11)^0,f,c
 23719  01A662  50BE               	movf	190,w,c	;volatile
 23720  01A664  180C               	xorwf	(btemp+11)^0,w,c
 23721  01A666  0BFB               	andlw	-5
 23722  01A668  180C               	xorwf	(btemp+11)^0,w,c
 23723  01A66A  6EBE               	movwf	190,c	;volatile
 23724                           
 23725                           ; BSR set to: 57
 23726                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23727  01A66C  0012               	return		;funcret
 23728  01A66E                     __end_of_start_bsoc:
 23729                           	opt callstack 0
 23730                           
 23731 ;; *************** function _lp_filter *****************
 23732 ;; Defined at:
 23733 ;;		line 18 in file "mbmc.c"
 23734 ;; Parameters:    Size  Location     Type
 23735 ;;  new             4  [STACK] const float 
 23736 ;;  bn              1  [STACK] const unsigned char 
 23737 ;;  slow            1  [STACK] const char 
 23738 ;; Auto vars:     Size  Location     Type
 23739 ;;  lp_speed        4  [STACK] float 
 23740 ;; Return value:  Size  Location     Type
 23741 ;;                  4  [STACK] float 
 23742 ;; Registers used:
 23743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23744 ;; Tracked objects:
 23745 ;;		On entry : 0/2
 23746 ;;		On exit  : 0/0
 23747 ;;		Unchanged: 0/0
 23748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23753 ;;Total ram usage:        0 bytes
 23754 ;; Hardware stack levels used:    1
 23755 ;; Hardware stack levels required when called:   17
 23756 ;; This function calls:
 23757 ;;		___fladd
 23758 ;;		___flmul
 23759 ;;		___flsub
 23760 ;; This function is called by:
 23761 ;;		_main
 23762 ;;		_convert_adc_data
 23763 ;;		_calc_model_data
 23764 ;; This function uses a reentrant model
 23765 ;;
 23766                           
 23767                           	psect	text98
 23768  017338                     __ptext98:
 23769                           	opt callstack 0
 23770  017338                     _lp_filter:
 23771                           	opt callstack 0
 23772                           
 23773                           ; BSR set to: 57
 23774                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23775  017338  52E6               	movf	postinc1,f,c
 23776  01733A  52E6               	movf	postinc1,f,c
 23777  01733C  52E6               	movf	postinc1,f,c
 23778  01733E  52E6               	movf	postinc1,f,c
 23779                           
 23780                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 23781                           ;stkvar	_bn @ sp[(-4)+-5]
 23782                           
 23783                           ;incstack = 0
 23784  017340  0EF7               	movlw	-9
 23785  017342  006F FF8C  F001    	movff	plusw1,btemp
 23786  017348  0E14               	movlw	20
 23787  01734A  6401               	cpfsgt	btemp^0,c
 23788  01734C  D011               	goto	l9661
 23789  01734E                     u8850:
 23790                           
 23791                           ;mbmc.c: 24:   return new;
 23792                           ;stkvar	_new @ sp[(-4)+-4]
 23793  01734E  0EF8               	movlw	-8
 23794  017350  006F FF8C  F001    	movff	plusw1,btemp
 23795  017356  0EF9               	movlw	-7
 23796  017358  006F FF8C  F002    	movff	plusw1,btemp+1
 23797  01735E  0EFA               	movlw	-6
 23798  017360  006F FF8C  F003    	movff	plusw1,btemp+2
 23799  017366  0EFB               	movlw	-5
 23800  017368  006F FF8C  F004    	movff	plusw1,btemp+3
 23801  01736E  D0BD               	goto	l1786
 23802  017370                     l9661:
 23803                           
 23804                           ;mbmc.c: 26:  if (slow == (-1)) {
 23805                           ;stkvar	_slow @ sp[(-4)+-6]
 23806  017370  0EF6               	movlw	-10
 23807  017372  28E3               	incf	plusw1,w,c
 23808  017374  A4D8               	btfss	status,2,c
 23809  017376  D012               	goto	l9669
 23810                           
 23811                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 23812                           ;stkvar	_bn @ sp[(-4)+-5]
 23813  017378  0EF7               	movlw	-9
 23814  01737A  50E3               	movf	plusw1,w,c
 23815  01737C  0D04               	mullw	4
 23816  01737E  0E00               	movlw	low lp_filter@smooth
 23817  017380  24F3               	addwf	243,w,c
 23818  017382  6ED9               	movwf	fsr2l,c
 23819  017384  0E03               	movlw	high lp_filter@smooth
 23820  017386  20F4               	addwfc	prodh,w,c
 23821  017388  6EDA               	movwf	fsr2h,c
 23822  01738A  0E00               	movlw	0
 23823  01738C  6EDE               	movwf	postinc2,c
 23824  01738E  0E00               	movlw	0
 23825  017390  6EDE               	movwf	postinc2,c
 23826  017392  0E00               	movlw	0
 23827  017394  6EDE               	movwf	postinc2,c
 23828  017396  0E00               	movlw	0
 23829  017398  6EDD               	movwf	postdec2,c
 23830  01739A  D7D9               	goto	u8850
 23831  01739C                     l9669:
 23832                           
 23833                           ;mbmc.c: 31:  if (slow) {
 23834                           ;stkvar	_slow @ sp[(-4)+-6]
 23835  01739C  0EF6               	movlw	-10
 23836  01739E  50E3               	movf	plusw1,w,c
 23837  0173A0  B4D8               	btfsc	status,2,c
 23838  0173A2  D006               	goto	l9673
 23839                           
 23840                           ;mbmc.c: 32:   lp_speed = 0.033;
 23841  0173A4  0E02               	movlw	2
 23842  0173A6  6E09               	movwf	(btemp+8)^0,c
 23843  0173A8  0E2B               	movlw	43
 23844  0173AA  6E0A               	movwf	(btemp+9)^0,c
 23845  0173AC  0E07               	movlw	7
 23846  0173AE  D005               	goto	L26
 23847  0173B0                     l9673:
 23848                           
 23849                           ;mbmc.c: 34:   lp_speed = 0.066;
 23850  0173B0  0E02               	movlw	2
 23851  0173B2  6E09               	movwf	(btemp+8)^0,c
 23852  0173B4  0E2B               	movlw	43
 23853  0173B6  6E0A               	movwf	(btemp+9)^0,c
 23854  0173B8  0E87               	movlw	135
 23855  0173BA                     L26:
 23856  0173BA  6E0B               	movwf	(btemp+10)^0,c
 23857  0173BC  0E3D               	movlw	61
 23858  0173BE  6E0C               	movwf	(btemp+11)^0,c
 23859                           
 23860                           ;stkvar	_lp_speed @ sp[(-4)+0]
 23861  0173C0  0EFC               	movlw	-4
 23862  0173C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 23863  0173C8  0EFD               	movlw	-3
 23864  0173CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23865  0173D0  0EFE               	movlw	-2
 23866  0173D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23867  0173D8  0EFF               	movlw	-1
 23868  0173DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 23869                           
 23870                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 23871                           ;stkvar	_bn @ sp[(-4)+-5]
 23872  0173E0  0EF7               	movlw	-9
 23873  0173E2  50E3               	movf	plusw1,w,c
 23874  0173E4  0D04               	mullw	4
 23875  0173E6  0E00               	movlw	low lp_filter@smooth
 23876  0173E8  24F3               	addwf	243,w,c
 23877  0173EA  6ED9               	movwf	fsr2l,c
 23878  0173EC  0E03               	movlw	high lp_filter@smooth
 23879  0173EE  20F4               	addwfc	prodh,w,c
 23880  0173F0  6EDA               	movwf	fsr2h,c
 23881  0173F2  006F FF7B FFE6     	movff	postinc2,postinc1
 23882  0173F8  006F FF7B FFE6     	movff	postinc2,postinc1
 23883  0173FE  006F FF7B FFE6     	movff	postinc2,postinc1
 23884  017404  006F FF7B FFE6     	movff	postinc2,postinc1
 23885                           
 23886                           ;stkvar	_lp_speed @ sp[(-8)+0]
 23887  01740A  0EF8               	movlw	-8
 23888  01740C  006F FF8F FFE6     	movff	plusw1,postinc1
 23889  017412  006F FF8F FFE6     	movff	plusw1,postinc1
 23890  017418  006F FF8F FFE6     	movff	plusw1,postinc1
 23891  01741E  006F FF8F FFE6     	movff	plusw1,postinc1
 23892                           
 23893                           ;stkvar	_bn @ sp[(-12)+-5]
 23894  017424  0EEF               	movlw	-17
 23895  017426  50E3               	movf	plusw1,w,c
 23896  017428  0D04               	mullw	4
 23897  01742A  0E00               	movlw	low lp_filter@smooth
 23898  01742C  24F3               	addwf	243,w,c
 23899  01742E  6ED9               	movwf	fsr2l,c
 23900  017430  0E03               	movlw	high lp_filter@smooth
 23901  017432  20F4               	addwfc	prodh,w,c
 23902  017434  6EDA               	movwf	fsr2h,c
 23903  017436  006F FF7B FFE6     	movff	postinc2,postinc1
 23904  01743C  006F FF7B FFE6     	movff	postinc2,postinc1
 23905  017442  006F FF7B FFE6     	movff	postinc2,postinc1
 23906  017448  006F FF7B FFE6     	movff	postinc2,postinc1
 23907                           
 23908                           ;stkvar	_new @ sp[(-16)+-4]
 23909  01744E  0EEC               	movlw	-20
 23910  017450  006F FF8F FFE6     	movff	plusw1,postinc1
 23911  017456  006F FF8F FFE6     	movff	plusw1,postinc1
 23912  01745C  006F FF8F FFE6     	movff	plusw1,postinc1
 23913  017462  006F FF8F FFE6     	movff	plusw1,postinc1
 23914  017468  EC61  F0CE         	call	___flsub	;wreg free
 23915  01746C  0060  F007  FFE6   	movff	btemp,postinc1
 23916  017472  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23917  017478  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23918  01747E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23919  017484  ECE1  F095         	call	___flmul	;wreg free
 23920  017488  0060  F007  FFE6   	movff	btemp,postinc1
 23921  01748E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23922  017494  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23923  01749A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23924  0174A0  ECF6  F099         	call	___fladd	;wreg free
 23925                           
 23926                           ;stkvar	_bn @ sp[(-4)+-5]
 23927  0174A4  0EF7               	movlw	-9
 23928  0174A6  50E3               	movf	plusw1,w,c
 23929  0174A8  0D04               	mullw	4
 23930  0174AA  0E00               	movlw	low lp_filter@smooth
 23931  0174AC  24F3               	addwf	243,w,c
 23932  0174AE  6ED9               	movwf	fsr2l,c
 23933  0174B0  0E03               	movlw	high lp_filter@smooth
 23934  0174B2  20F4               	addwfc	prodh,w,c
 23935  0174B4  6EDA               	movwf	fsr2h,c
 23936  0174B6  0060  F007  FFDE   	movff	btemp,postinc2
 23937  0174BC  0060  F00B  FFDE   	movff	btemp+1,postinc2
 23938  0174C2  0060  F00F  FFDE   	movff	btemp+2,postinc2
 23939  0174C8  0060  F013  FFDD   	movff	btemp+3,postdec2
 23940  0174CE  52DD               	movf	postdec2,f,c
 23941  0174D0  52DD               	movf	postdec2,f,c
 23942  0174D2  006F FF78  F001    	movff	postinc2,btemp
 23943  0174D8  006F FF78  F002    	movff	postinc2,btemp+1
 23944  0174DE  006F FF78  F003    	movff	postinc2,btemp+2
 23945  0174E4  006F FF78  F004    	movff	postinc2,btemp+3
 23946  0174EA                     l1786:
 23947                           
 23948                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 23949  0174EA  0EF6               	movlw	246
 23950  0174EC  26E1               	addwf	fsr1l,f,c
 23951  0174EE  0EFF               	movlw	255
 23952  0174F0  22E2               	addwfc	fsr1h,f,c
 23953  0174F2  0012               	return		;funcret
 23954  0174F4                     __end_of_lp_filter:
 23955                           	opt callstack 0
 23956                           
 23957 ;; *************** function ___flsub *****************
 23958 ;; Defined at:
 23959 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 23960 ;; Parameters:    Size  Location     Type
 23961 ;;  b               4  [STACK] float 
 23962 ;;  a               4  [STACK] float 
 23963 ;; Auto vars:     Size  Location     Type
 23964 ;;		None
 23965 ;; Return value:  Size  Location     Type
 23966 ;;                  4  [STACK] float 
 23967 ;; Registers used:
 23968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23969 ;; Tracked objects:
 23970 ;;		On entry : 0/1
 23971 ;;		On exit  : 0/0
 23972 ;;		Unchanged: 0/0
 23973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23978 ;;Total ram usage:        0 bytes
 23979 ;; Hardware stack levels used:    1
 23980 ;; Hardware stack levels required when called:   16
 23981 ;; This function calls:
 23982 ;;		___fladd
 23983 ;; This function is called by:
 23984 ;;		_conv_raw_result
 23985 ;;		_lp_filter
 23986 ;;		_calc_model_data
 23987 ;;		_efgtoa
 23988 ;; This function uses a reentrant model
 23989 ;;
 23990                           
 23991                           	psect	text99
 23992  019CC2                     __ptext99:
 23993                           	opt callstack 0
 23994  019CC2                     ___flsub:
 23995                           	opt callstack 0
 23996                           
 23997                           ;stkvar	_a @ sp[(0)+-8]
 23998                           
 23999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24000                           ;incstack = 0
 24001 ;; hardware stack exceeded
 24002  019CC2  0EFB               	movlw	-5
 24003  019CC4  7EE3               	btg	plusw1,7,c
 24004                           
 24005                           ;stkvar	_a @ sp[(0)+-8]
 24006  019CC6  0EF8               	movlw	-8
 24007  019CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 24008  019CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 24009  019CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 24010  019CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 24011                           
 24012                           ;stkvar	_b @ sp[(-4)+-4]
 24013  019CE0  0EF8               	movlw	-8
 24014  019CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 24015  019CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 24016  019CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 24017  019CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 24018  019CFA  ECF6  F099         	call	___fladd	;wreg free
 24019                           
 24020                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 24021  019CFE  0EF8               	movlw	248
 24022  019D00  26E1               	addwf	fsr1l,f,c
 24023  019D02  0EFF               	movlw	255
 24024  019D04  22E2               	addwfc	fsr1h,f,c
 24025  019D06  0012               	return		;funcret
 24026  019D08                     __end_of___flsub:
 24027                           	opt callstack 0
 24028                           
 24029 ;; *************** function ___fladd *****************
 24030 ;; Defined at:
 24031 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 24032 ;; Parameters:    Size  Location     Type
 24033 ;;  b               4  [STACK] float 
 24034 ;;  a               4  [STACK] float 
 24035 ;; Auto vars:     Size  Location     Type
 24036 ;;  grs             1  [STACK] unsigned char 
 24037 ;;  bexp            1  [STACK] unsigned char 
 24038 ;;  aexp            1  [STACK] unsigned char 
 24039 ;;  signs           1  [STACK] unsigned char 
 24040 ;; Return value:  Size  Location     Type
 24041 ;;                  4  [STACK] unsigned char 
 24042 ;; Registers used:
 24043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24044 ;; Tracked objects:
 24045 ;;		On entry : 0/0
 24046 ;;		On exit  : 0/0
 24047 ;;		Unchanged: 0/0
 24048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24053 ;;Total ram usage:        0 bytes
 24054 ;; Hardware stack levels used:    1
 24055 ;; Hardware stack levels required when called:   15
 24056 ;; This function calls:
 24057 ;;		Nothing
 24058 ;; This function is called by:
 24059 ;;		_lp_filter
 24060 ;;		_calc_model_data
 24061 ;;		_calc_bsoc
 24062 ;;		_efgtoa
 24063 ;;		___flsub
 24064 ;; This function uses a reentrant model
 24065 ;;
 24066                           
 24067                           	psect	text100
 24068  0133EC                     __ptext100:
 24069                           	opt callstack 0
 24070  0133EC                     ___fladd:
 24071                           	opt callstack 0
 24072                           
 24073                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24074  0133EC  52E6               	movf	postinc1,f,c
 24075  0133EE  52E6               	movf	postinc1,f,c
 24076  0133F0  52E6               	movf	postinc1,f,c
 24077  0133F2  52E6               	movf	postinc1,f,c
 24078                           
 24079                           ;stkvar	_b @ sp[(-4)+-4]
 24080                           
 24081                           ;incstack = 0
 24082 ;; hardware stack exceeded
 24083  0133F4  0EFB               	movlw	251
 24084  0133F6  24E1               	addwf	fsr1l,w,c
 24085  0133F8  6ED9               	movwf	fsr2l,c
 24086  0133FA  0EFF               	movlw	255
 24087  0133FC  20E2               	addwfc	fsr1h,w,c
 24088  0133FE  6EDA               	movwf	fsr2h,c
 24089  013400  50DF               	movf	indf2,w,c
 24090  013402  6E0C               	movwf	(btemp+11)^0,c
 24091  013404  0E80               	movlw	128
 24092  013406  160C               	andwf	(btemp+11)^0,f,c
 24093                           
 24094                           ;stkvar	_signs @ sp[(-4)+3]
 24095  013408  0EFF               	movlw	-1
 24096  01340A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24097                           
 24098                           ;stkvar	_b @ sp[(-4)+-4]
 24099  013410  0EFB               	movlw	251
 24100  013412  24E1               	addwf	fsr1l,w,c
 24101  013414  6ED9               	movwf	fsr2l,c
 24102  013416  0EFF               	movlw	255
 24103  013418  20E2               	addwfc	fsr1h,w,c
 24104  01341A  6EDA               	movwf	fsr2h,c
 24105  01341C  50DF               	movf	indf2,w,c
 24106  01341E  6E0C               	movwf	(btemp+11)^0,c
 24107  013420  90D8               	bcf	status,0,c
 24108  013422  340C               	rlcf	(btemp+11)^0,w,c
 24109  013424  6E0B               	movwf	(btemp+10)^0,c
 24110                           
 24111                           ;stkvar	_bexp @ sp[(-4)+1]
 24112  013426  0EFD               	movlw	-3
 24113  013428  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24114                           
 24115                           ;stkvar	_b @ sp[(-4)+-4]
 24116  01342E  0EFA               	movlw	250
 24117  013430  24E1               	addwf	fsr1l,w,c
 24118  013432  6ED9               	movwf	fsr2l,c
 24119  013434  0EFF               	movlw	255
 24120  013436  20E2               	addwfc	fsr1h,w,c
 24121  013438  6EDA               	movwf	fsr2h,c
 24122  01343A  AEDF               	btfss	indf2,7,c
 24123  01343C  D002               	goto	l7147
 24124                           
 24125                           ;stkvar	_bexp @ sp[(-4)+1]
 24126  01343E  0EFD               	movlw	-3
 24127  013440  80E3               	bsf	plusw1,0,c
 24128  013442                     l7147:
 24129                           
 24130                           ;stkvar	_bexp @ sp[(-4)+1]
 24131  013442  0EFD               	movlw	-3
 24132  013444  50E3               	movf	plusw1,w,c
 24133  013446  B4D8               	btfsc	status,2,c
 24134  013448  D027               	goto	l7157
 24135                           
 24136                           ;stkvar	_bexp @ sp[(-4)+1]
 24137  01344A  0EFD               	movlw	-3
 24138  01344C  28E3               	incf	plusw1,w,c
 24139  01344E  A4D8               	btfss	status,2,c
 24140  013450  D018               	goto	l7153
 24141  013452  0E00               	movlw	0
 24142  013454  6E09               	movwf	(btemp+8)^0,c
 24143  013456  0E00               	movlw	0
 24144  013458  6E0A               	movwf	(btemp+9)^0,c
 24145  01345A  0E00               	movlw	0
 24146  01345C  6E0B               	movwf	(btemp+10)^0,c
 24147  01345E  0E00               	movlw	0
 24148  013460  6E0C               	movwf	(btemp+11)^0,c
 24149                           
 24150                           ;stkvar	_b @ sp[(-4)+-4]
 24151  013462  0EF8               	movlw	-8
 24152  013464  0060  F027  FFE3   	movff	btemp+8,plusw1
 24153  01346A  0EF9               	movlw	-7
 24154  01346C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24155  013472  0EFA               	movlw	-6
 24156  013474  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24157  01347A  0EFB               	movlw	-5
 24158  01347C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24159  013482                     l7153:
 24160                           
 24161                           ;stkvar	_b @ sp[(-4)+-4]
 24162  013482  0EFA               	movlw	-6
 24163  013484  8EE3               	bsf	plusw1,7,c
 24164                           
 24165                           ;stkvar	_b @ sp[(-4)+-4]
 24166  013486  0EFB               	movlw	251
 24167  013488  24E1               	addwf	fsr1l,w,c
 24168  01348A  6ED9               	movwf	fsr2l,c
 24169  01348C  0EFF               	movlw	255
 24170  01348E  20E2               	addwfc	fsr1h,w,c
 24171  013490  6EDA               	movwf	fsr2h,c
 24172  013492  0E00               	movlw	0
 24173  013494  6EDF               	movwf	indf2,c
 24174  013496  D018               	goto	l7159
 24175  013498                     l7157:
 24176  013498  0E00               	movlw	0
 24177  01349A  6E09               	movwf	(btemp+8)^0,c
 24178  01349C  0E00               	movlw	0
 24179  01349E  6E0A               	movwf	(btemp+9)^0,c
 24180  0134A0  0E00               	movlw	0
 24181  0134A2  6E0B               	movwf	(btemp+10)^0,c
 24182  0134A4  0E00               	movlw	0
 24183  0134A6  6E0C               	movwf	(btemp+11)^0,c
 24184                           
 24185                           ;stkvar	_b @ sp[(-4)+-4]
 24186  0134A8  0EF8               	movlw	-8
 24187  0134AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 24188  0134B0  0EF9               	movlw	-7
 24189  0134B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24190  0134B8  0EFA               	movlw	-6
 24191  0134BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24192  0134C0  0EFB               	movlw	-5
 24193  0134C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 24194  0134C8                     l7159:
 24195                           
 24196                           ;stkvar	_a @ sp[(-4)+-8]
 24197  0134C8  0EF7               	movlw	247
 24198  0134CA  24E1               	addwf	fsr1l,w,c
 24199  0134CC  6ED9               	movwf	fsr2l,c
 24200  0134CE  0EFF               	movlw	255
 24201  0134D0  20E2               	addwfc	fsr1h,w,c
 24202  0134D2  6EDA               	movwf	fsr2h,c
 24203  0134D4  50DF               	movf	indf2,w,c
 24204  0134D6  6E0C               	movwf	(btemp+11)^0,c
 24205  0134D8  0E80               	movlw	128
 24206  0134DA  160C               	andwf	(btemp+11)^0,f,c
 24207                           
 24208                           ;stkvar	_aexp @ sp[(-4)+2]
 24209  0134DC  0EFE               	movlw	-2
 24210  0134DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24211                           
 24212                           ;stkvar	_signs @ sp[(-4)+3]
 24213                           ;stkvar	_aexp @ sp[(-4)+2]
 24214  0134E4  50E1               	movf	fsr1l,w,c
 24215  0134E6  0FFE               	addlw	-2
 24216  0134E8  6ED9               	movwf	fsr2l,c
 24217  0134EA  50E2               	movf	fsr1h,w,c
 24218  0134EC  6EDA               	movwf	fsr2h,c
 24219  0134EE  0EFF               	movlw	255
 24220  0134F0  22DA               	addwfc	fsr2h,f,c
 24221  0134F2  0EFF               	movlw	-1
 24222  0134F4  50E3               	movf	plusw1,w,c
 24223  0134F6  18DE               	xorwf	postinc2,w,c
 24224  0134F8  B4D8               	btfsc	status,2,c
 24225  0134FA  D002               	goto	l7165
 24226                           
 24227                           ;stkvar	_signs @ sp[(-4)+3]
 24228  0134FC  0EFF               	movlw	-1
 24229  0134FE  8CE3               	bsf	plusw1,6,c
 24230  013500                     l7165:
 24231                           
 24232                           ;stkvar	_a @ sp[(-4)+-8]
 24233  013500  0EF7               	movlw	247
 24234  013502  24E1               	addwf	fsr1l,w,c
 24235  013504  6ED9               	movwf	fsr2l,c
 24236  013506  0EFF               	movlw	255
 24237  013508  20E2               	addwfc	fsr1h,w,c
 24238  01350A  6EDA               	movwf	fsr2h,c
 24239  01350C  50DF               	movf	indf2,w,c
 24240  01350E  6E0C               	movwf	(btemp+11)^0,c
 24241  013510  90D8               	bcf	status,0,c
 24242  013512  340C               	rlcf	(btemp+11)^0,w,c
 24243  013514  6E0B               	movwf	(btemp+10)^0,c
 24244                           
 24245                           ;stkvar	_aexp @ sp[(-4)+2]
 24246  013516  0EFE               	movlw	-2
 24247  013518  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24248                           
 24249                           ;stkvar	_a @ sp[(-4)+-8]
 24250  01351E  0EF6               	movlw	246
 24251  013520  24E1               	addwf	fsr1l,w,c
 24252  013522  6ED9               	movwf	fsr2l,c
 24253  013524  0EFF               	movlw	255
 24254  013526  20E2               	addwfc	fsr1h,w,c
 24255  013528  6EDA               	movwf	fsr2h,c
 24256  01352A  AEDF               	btfss	indf2,7,c
 24257  01352C  D002               	goto	l7171
 24258                           
 24259                           ;stkvar	_aexp @ sp[(-4)+2]
 24260  01352E  0EFE               	movlw	-2
 24261  013530  80E3               	bsf	plusw1,0,c
 24262  013532                     l7171:
 24263                           
 24264                           ;stkvar	_aexp @ sp[(-4)+2]
 24265  013532  0EFE               	movlw	-2
 24266  013534  50E3               	movf	plusw1,w,c
 24267  013536  B4D8               	btfsc	status,2,c
 24268  013538  D027               	goto	l7181
 24269                           
 24270                           ;stkvar	_aexp @ sp[(-4)+2]
 24271  01353A  0EFE               	movlw	-2
 24272  01353C  28E3               	incf	plusw1,w,c
 24273  01353E  A4D8               	btfss	status,2,c
 24274  013540  D018               	goto	l7177
 24275  013542  0E00               	movlw	0
 24276  013544  6E09               	movwf	(btemp+8)^0,c
 24277  013546  0E00               	movlw	0
 24278  013548  6E0A               	movwf	(btemp+9)^0,c
 24279  01354A  0E00               	movlw	0
 24280  01354C  6E0B               	movwf	(btemp+10)^0,c
 24281  01354E  0E00               	movlw	0
 24282  013550  6E0C               	movwf	(btemp+11)^0,c
 24283                           
 24284                           ;stkvar	_a @ sp[(-4)+-8]
 24285  013552  0EF4               	movlw	-12
 24286  013554  0060  F027  FFE3   	movff	btemp+8,plusw1
 24287  01355A  0EF5               	movlw	-11
 24288  01355C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24289  013562  0EF6               	movlw	-10
 24290  013564  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24291  01356A  0EF7               	movlw	-9
 24292  01356C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24293  013572                     l7177:
 24294                           
 24295                           ;stkvar	_a @ sp[(-4)+-8]
 24296  013572  0EF6               	movlw	-10
 24297  013574  8EE3               	bsf	plusw1,7,c
 24298                           
 24299                           ;stkvar	_a @ sp[(-4)+-8]
 24300  013576  0EF7               	movlw	247
 24301  013578  24E1               	addwf	fsr1l,w,c
 24302  01357A  6ED9               	movwf	fsr2l,c
 24303  01357C  0EFF               	movlw	255
 24304  01357E  20E2               	addwfc	fsr1h,w,c
 24305  013580  6EDA               	movwf	fsr2h,c
 24306  013582  0E00               	movlw	0
 24307  013584  6EDF               	movwf	indf2,c
 24308  013586  D018               	goto	l7183
 24309  013588                     l7181:
 24310  013588  0E00               	movlw	0
 24311  01358A  6E09               	movwf	(btemp+8)^0,c
 24312  01358C  0E00               	movlw	0
 24313  01358E  6E0A               	movwf	(btemp+9)^0,c
 24314  013590  0E00               	movlw	0
 24315  013592  6E0B               	movwf	(btemp+10)^0,c
 24316  013594  0E00               	movlw	0
 24317  013596  6E0C               	movwf	(btemp+11)^0,c
 24318                           
 24319                           ;stkvar	_a @ sp[(-4)+-8]
 24320  013598  0EF4               	movlw	-12
 24321  01359A  0060  F027  FFE3   	movff	btemp+8,plusw1
 24322  0135A0  0EF5               	movlw	-11
 24323  0135A2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24324  0135A8  0EF6               	movlw	-10
 24325  0135AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24326  0135B0  0EF7               	movlw	-9
 24327  0135B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 24328  0135B8                     l7183:
 24329                           
 24330                           ;stkvar	_bexp @ sp[(-4)+1]
 24331                           ;stkvar	_aexp @ sp[(-4)+2]
 24332  0135B8  50E1               	movf	fsr1l,w,c
 24333  0135BA  0FFE               	addlw	-2
 24334  0135BC  6ED9               	movwf	fsr2l,c
 24335  0135BE  50E2               	movf	fsr1h,w,c
 24336  0135C0  6EDA               	movwf	fsr2h,c
 24337  0135C2  0EFF               	movlw	255
 24338  0135C4  22DA               	addwfc	fsr2h,f,c
 24339  0135C6  0EFD               	movlw	-3
 24340  0135C8  50E3               	movf	plusw1,w,c
 24341  0135CA  5CDE               	subwf	postinc2,w,c
 24342  0135CC  B0D8               	btfsc	status,0,c
 24343  0135CE  D0A4               	goto	l7219
 24344                           
 24345                           ;stkvar	_signs @ sp[(-4)+3]
 24346  0135D0  0EFF               	movlw	-1
 24347  0135D2  ACE3               	btfss	plusw1,6,c
 24348  0135D4  D002               	goto	l7189
 24349                           
 24350                           ;stkvar	_signs @ sp[(-4)+3]
 24351  0135D6  0EFF               	movlw	-1
 24352  0135D8  7EE3               	btg	plusw1,7,c
 24353  0135DA                     l7189:
 24354                           
 24355                           ;stkvar	_bexp @ sp[(-4)+1]
 24356                           ;stkvar	_grs @ sp[(-4)+0]
 24357  0135DA  0EFD               	movlw	-3
 24358  0135DC  006F FF8C  F001    	movff	plusw1,btemp
 24359  0135E2  0EFC               	movlw	-4
 24360  0135E4  0060  F007  FFE3   	movff	btemp,plusw1
 24361                           
 24362                           ;stkvar	_aexp @ sp[(-4)+2]
 24363                           ;stkvar	_bexp @ sp[(-4)+1]
 24364  0135EA  0EFE               	movlw	-2
 24365  0135EC  006F FF8C  F001    	movff	plusw1,btemp
 24366  0135F2  0EFD               	movlw	-3
 24367  0135F4  0060  F007  FFE3   	movff	btemp,plusw1
 24368                           
 24369                           ;stkvar	_grs @ sp[(-4)+0]
 24370                           ;stkvar	_aexp @ sp[(-4)+2]
 24371  0135FA  0EFC               	movlw	-4
 24372  0135FC  006F FF8C  F001    	movff	plusw1,btemp
 24373  013602  0EFE               	movlw	-2
 24374  013604  0060  F007  FFE3   	movff	btemp,plusw1
 24375                           
 24376                           ;stkvar	_b @ sp[(-4)+-4]
 24377                           ;stkvar	_grs @ sp[(-4)+0]
 24378  01360A  0EF8               	movlw	-8
 24379  01360C  006F FF8C  F001    	movff	plusw1,btemp
 24380  013612  0EFC               	movlw	-4
 24381  013614  0060  F007  FFE3   	movff	btemp,plusw1
 24382                           
 24383                           ;stkvar	_a @ sp[(-4)+-8]
 24384                           ;stkvar	_b @ sp[(-4)+-4]
 24385  01361A  0EF4               	movlw	-12
 24386  01361C  006F FF8C  F001    	movff	plusw1,btemp
 24387  013622  0EF8               	movlw	-8
 24388  013624  0060  F007  FFE3   	movff	btemp,plusw1
 24389                           
 24390                           ;stkvar	_grs @ sp[(-4)+0]
 24391                           ;stkvar	_a @ sp[(-4)+-8]
 24392  01362A  0EFC               	movlw	-4
 24393  01362C  006F FF8C  F001    	movff	plusw1,btemp
 24394  013632  0EF4               	movlw	-12
 24395  013634  0060  F007  FFE3   	movff	btemp,plusw1
 24396                           
 24397                           ;stkvar	_b @ sp[(-4)+-4]
 24398  01363A  0EF9               	movlw	249
 24399  01363C  24E1               	addwf	fsr1l,w,c
 24400  01363E  6ED9               	movwf	fsr2l,c
 24401  013640  0EFF               	movlw	255
 24402  013642  20E2               	addwfc	fsr1h,w,c
 24403  013644  6EDA               	movwf	fsr2h,c
 24404  013646  50DF               	movf	indf2,w,c
 24405  013648  6E0C               	movwf	(btemp+11)^0,c
 24406                           
 24407                           ;stkvar	_grs @ sp[(-4)+0]
 24408  01364A  0EFC               	movlw	-4
 24409  01364C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24410                           
 24411                           ;stkvar	_a @ sp[(-4)+-8]
 24412  013652  0EF5               	movlw	245
 24413  013654  24E1               	addwf	fsr1l,w,c
 24414  013656  6ED9               	movwf	fsr2l,c
 24415  013658  0EFF               	movlw	255
 24416  01365A  20E2               	addwfc	fsr1h,w,c
 24417  01365C  6EDA               	movwf	fsr2h,c
 24418                           
 24419                           ;stkvar	_b @ sp[(-4)+-4]
 24420  01365E  0EF9               	movlw	249
 24421  013660  24E1               	addwf	fsr1l,w,c
 24422  013662  6EE9               	movwf	fsr0l,c
 24423  013664  0EFF               	movlw	255
 24424  013666  20E2               	addwfc	fsr1h,w,c
 24425  013668  6EEA               	movwf	fsr0h,c
 24426  01366A  006F FF7F FFEF     	movff	indf2,indf0
 24427                           
 24428                           ;stkvar	_grs @ sp[(-4)+0]
 24429                           ;stkvar	_a @ sp[(-4)+-8]
 24430  013670  0EF5               	movlw	245
 24431  013672  24E1               	addwf	fsr1l,w,c
 24432  013674  6ED9               	movwf	fsr2l,c
 24433  013676  0EFF               	movlw	255
 24434  013678  20E2               	addwfc	fsr1h,w,c
 24435  01367A  6EDA               	movwf	fsr2h,c
 24436  01367C  0EFC               	movlw	-4
 24437  01367E  006F FF8F FFDF     	movff	plusw1,indf2
 24438                           
 24439                           ;stkvar	_b @ sp[(-4)+-4]
 24440  013684  0EFA               	movlw	250
 24441  013686  24E1               	addwf	fsr1l,w,c
 24442  013688  6ED9               	movwf	fsr2l,c
 24443  01368A  0EFF               	movlw	255
 24444  01368C  20E2               	addwfc	fsr1h,w,c
 24445  01368E  6EDA               	movwf	fsr2h,c
 24446  013690  50DF               	movf	indf2,w,c
 24447  013692  6E0C               	movwf	(btemp+11)^0,c
 24448                           
 24449                           ;stkvar	_grs @ sp[(-4)+0]
 24450  013694  0EFC               	movlw	-4
 24451  013696  0060  F033  FFE3   	movff	btemp+11,plusw1
 24452                           
 24453                           ;stkvar	_a @ sp[(-4)+-8]
 24454  01369C  0EF6               	movlw	246
 24455  01369E  24E1               	addwf	fsr1l,w,c
 24456  0136A0  6ED9               	movwf	fsr2l,c
 24457  0136A2  0EFF               	movlw	255
 24458  0136A4  20E2               	addwfc	fsr1h,w,c
 24459  0136A6  6EDA               	movwf	fsr2h,c
 24460                           
 24461                           ;stkvar	_b @ sp[(-4)+-4]
 24462  0136A8  0EFA               	movlw	250
 24463  0136AA  24E1               	addwf	fsr1l,w,c
 24464  0136AC  6EE9               	movwf	fsr0l,c
 24465  0136AE  0EFF               	movlw	255
 24466  0136B0  20E2               	addwfc	fsr1h,w,c
 24467  0136B2  6EEA               	movwf	fsr0h,c
 24468  0136B4  006F FF7F FFEF     	movff	indf2,indf0
 24469                           
 24470                           ;stkvar	_grs @ sp[(-4)+0]
 24471                           ;stkvar	_a @ sp[(-4)+-8]
 24472  0136BA  0EF6               	movlw	246
 24473  0136BC  24E1               	addwf	fsr1l,w,c
 24474  0136BE  6ED9               	movwf	fsr2l,c
 24475  0136C0  0EFF               	movlw	255
 24476  0136C2  20E2               	addwfc	fsr1h,w,c
 24477  0136C4  6EDA               	movwf	fsr2h,c
 24478  0136C6  0EFC               	movlw	-4
 24479  0136C8  006F FF8F FFDF     	movff	plusw1,indf2
 24480                           
 24481                           ;stkvar	_b @ sp[(-4)+-4]
 24482  0136CE  0EFB               	movlw	251
 24483  0136D0  24E1               	addwf	fsr1l,w,c
 24484  0136D2  6ED9               	movwf	fsr2l,c
 24485  0136D4  0EFF               	movlw	255
 24486  0136D6  20E2               	addwfc	fsr1h,w,c
 24487  0136D8  6EDA               	movwf	fsr2h,c
 24488  0136DA  50DF               	movf	indf2,w,c
 24489  0136DC  6E0C               	movwf	(btemp+11)^0,c
 24490                           
 24491                           ;stkvar	_grs @ sp[(-4)+0]
 24492  0136DE  0EFC               	movlw	-4
 24493  0136E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 24494                           
 24495                           ;stkvar	_a @ sp[(-4)+-8]
 24496  0136E6  0EF7               	movlw	247
 24497  0136E8  24E1               	addwf	fsr1l,w,c
 24498  0136EA  6ED9               	movwf	fsr2l,c
 24499  0136EC  0EFF               	movlw	255
 24500  0136EE  20E2               	addwfc	fsr1h,w,c
 24501  0136F0  6EDA               	movwf	fsr2h,c
 24502                           
 24503                           ;stkvar	_b @ sp[(-4)+-4]
 24504  0136F2  0EFB               	movlw	251
 24505  0136F4  24E1               	addwf	fsr1l,w,c
 24506  0136F6  6EE9               	movwf	fsr0l,c
 24507  0136F8  0EFF               	movlw	255
 24508  0136FA  20E2               	addwfc	fsr1h,w,c
 24509  0136FC  6EEA               	movwf	fsr0h,c
 24510  0136FE  006F FF7F FFEF     	movff	indf2,indf0
 24511                           
 24512                           ;stkvar	_grs @ sp[(-4)+0]
 24513                           ;stkvar	_a @ sp[(-4)+-8]
 24514  013704  0EF7               	movlw	247
 24515  013706  24E1               	addwf	fsr1l,w,c
 24516  013708  6ED9               	movwf	fsr2l,c
 24517  01370A  0EFF               	movlw	255
 24518  01370C  20E2               	addwfc	fsr1h,w,c
 24519  01370E  6EDA               	movwf	fsr2h,c
 24520  013710  0EFC               	movlw	-4
 24521  013712  006F FF8F FFDF     	movff	plusw1,indf2
 24522  013718                     l7219:
 24523                           
 24524                           ;stkvar	_grs @ sp[(-4)+0]
 24525  013718  0EFC               	movlw	-4
 24526  01371A  6AE3               	clrf	plusw1,c
 24527                           
 24528                           ;stkvar	_aexp @ sp[(-4)+2]
 24529  01371C  0EFE               	movlw	-2
 24530  01371E  50E3               	movf	plusw1,w,c
 24531  013720  6E0B               	movwf	(btemp+10)^0,c
 24532  013722  6A0C               	clrf	(btemp+11)^0,c
 24533                           
 24534                           ;stkvar	_bexp @ sp[(-4)+1]
 24535  013724  0EFD               	movlw	-3
 24536  013726  50E3               	movf	plusw1,w,c
 24537  013728  5E0B               	subwf	(btemp+10)^0,f,c
 24538  01372A  0E00               	movlw	0
 24539  01372C  5A0C               	subwfb	(btemp+11)^0,f,c
 24540  01372E  BE0C               	btfsc	(btemp+11)^0,7,c
 24541  013730  D062               	goto	l7243
 24542  013732  500C               	movf	(btemp+11)^0,w,c
 24543  013734  E104               	bnz	u5140
 24544  013736  0E1A               	movlw	26
 24545  013738  5C0B               	subwf	(btemp+10)^0,w,c
 24546  01373A  A0D8               	btfss	status,0,c
 24547  01373C  D05C               	goto	l7243
 24548  01373E                     u5140:
 24549                           
 24550                           ;stkvar	_b @ sp[(-4)+-4]
 24551  01373E  0EF8               	movlw	-8
 24552  013740  50E3               	movf	plusw1,w,c
 24553  013742  E10A               	bnz	u5151
 24554  013744  0EF9               	movlw	-7
 24555  013746  50E3               	movf	plusw1,w,c
 24556  013748  E107               	bnz	u5151
 24557  01374A  0EFA               	movlw	-6
 24558  01374C  50E3               	movf	plusw1,w,c
 24559  01374E  E104               	bnz	u5151
 24560  013750  0EFB               	movlw	-5
 24561  013752  50E3               	movf	plusw1,w,c
 24562  013754  B4D8               	btfsc	status,2,c
 24563  013756  D003               	goto	u5150
 24564  013758                     u5151:
 24565  013758  6A0C               	clrf	(btemp+11)^0,c
 24566  01375A  2A0C               	incf	(btemp+11)^0,f,c
 24567  01375C  D001               	goto	u5168
 24568  01375E                     u5150:
 24569  01375E  6A0C               	clrf	(btemp+11)^0,c
 24570  013760                     u5168:
 24571                           
 24572                           ;stkvar	_grs @ sp[(-4)+0]
 24573  013760  0EFC               	movlw	-4
 24574  013762  0060  F033  FFE3   	movff	btemp+11,plusw1
 24575                           
 24576                           ;stkvar	_b @ sp[(-4)+-4]
 24577  013768  0EF8               	movlw	-8
 24578  01376A  6AE3               	clrf	plusw1,c
 24579  01376C  0EF9               	movlw	-7
 24580  01376E  6AE3               	clrf	plusw1,c
 24581  013770  0EFA               	movlw	-6
 24582  013772  6AE3               	clrf	plusw1,c
 24583  013774  0EFB               	movlw	-5
 24584  013776  6AE3               	clrf	plusw1,c
 24585                           
 24586                           ;stkvar	_aexp @ sp[(-4)+2]
 24587                           ;stkvar	_bexp @ sp[(-4)+1]
 24588  013778  0EFE               	movlw	-2
 24589  01377A  006F FF8C  F001    	movff	plusw1,btemp
 24590  013780  0EFD               	movlw	-3
 24591  013782  0060  F007  FFE3   	movff	btemp,plusw1
 24592  013788  D042               	goto	u5200
 24593  01378A                     l7229:
 24594                           
 24595                           ;stkvar	_grs @ sp[(-4)+0]
 24596  01378A  0EFC               	movlw	-4
 24597  01378C  A0E3               	btfss	plusw1,0,c
 24598  01378E  D00D               	goto	l7233
 24599                           
 24600                           ;stkvar	_grs @ sp[(-4)+0]
 24601  013790  0EFC               	movlw	-4
 24602  013792  006F FF8C  F00C    	movff	plusw1,btemp+11
 24603  013798  90D8               	bcf	status,0,c
 24604  01379A  320C               	rrcf	(btemp+11)^0,f,c
 24605  01379C  0E01               	movlw	1
 24606  01379E  120C               	iorwf	(btemp+11)^0,f,c
 24607                           
 24608                           ;stkvar	_grs @ sp[(-4)+0]
 24609  0137A0  0EFC               	movlw	-4
 24610  0137A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 24611  0137A8  D009               	goto	l7235
 24612  0137AA                     l7233:
 24613                           
 24614                           ;stkvar	_grs @ sp[(-4)+0]
 24615  0137AA  50E1               	movf	fsr1l,w,c
 24616  0137AC  0FFC               	addlw	-4
 24617  0137AE  6ED9               	movwf	fsr2l,c
 24618  0137B0  50E2               	movf	fsr1h,w,c
 24619  0137B2  6EDA               	movwf	fsr2h,c
 24620  0137B4  0EFF               	movlw	255
 24621  0137B6  22DA               	addwfc	fsr2h,f,c
 24622  0137B8  90D8               	bcf	status,0,c
 24623  0137BA  32DF               	rrcf	indf2,f,c
 24624  0137BC                     l7235:
 24625                           
 24626                           ;stkvar	_b @ sp[(-4)+-4]
 24627  0137BC  0EF8               	movlw	-8
 24628  0137BE  A0E3               	btfss	plusw1,0,c
 24629  0137C0  D002               	goto	l7239
 24630                           
 24631                           ;stkvar	_grs @ sp[(-4)+0]
 24632  0137C2  0EFC               	movlw	-4
 24633  0137C4  8EE3               	bsf	plusw1,7,c
 24634  0137C6                     l7239:
 24635  0137C6  0E01               	movlw	1
 24636  0137C8  6E0C               	movwf	(btemp+11)^0,c
 24637                           
 24638                           ;stkvar	_b @ sp[(-4)+-4]
 24639  0137CA  50E1               	movf	fsr1l,w,c
 24640  0137CC  0FF8               	addlw	-8
 24641  0137CE  6ED9               	movwf	fsr2l,c
 24642  0137D0  50E2               	movf	fsr1h,w,c
 24643  0137D2  6EDA               	movwf	fsr2h,c
 24644  0137D4  0EFF               	movlw	255
 24645  0137D6  22DA               	addwfc	fsr2h,f,c
 24646  0137D8  280C               	incf	(btemp+11)^0,w,c
 24647  0137DA  52DE               	movf	postinc2,f,c
 24648  0137DC  D008               	goto	u5190
 24649  0137DE                     u5195:
 24650  0137DE  52DE               	movf	postinc2,f,c
 24651  0137E0  90D8               	bcf	status,0,c
 24652  0137E2  BEDC               	btfsc	preinc2,7,c
 24653  0137E4  80D8               	bsf	status,0,c
 24654  0137E6  32DD               	rrcf	postdec2,f,c
 24655  0137E8  32DD               	rrcf	postdec2,f,c
 24656  0137EA  32DD               	rrcf	postdec2,f,c
 24657  0137EC  32DE               	rrcf	postinc2,f,c
 24658  0137EE                     u5190:
 24659  0137EE  2EE8               	decfsz	wreg,f,c
 24660  0137F0  D7F6               	goto	u5195
 24661                           
 24662                           ;stkvar	_bexp @ sp[(-4)+1]
 24663  0137F2  0EFD               	movlw	-3
 24664  0137F4  2AE3               	incf	plusw1,f,c
 24665  0137F6                     l7243:
 24666                           
 24667                           ;stkvar	_aexp @ sp[(-4)+2]
 24668                           ;stkvar	_bexp @ sp[(-4)+1]
 24669  0137F6  50E1               	movf	fsr1l,w,c
 24670  0137F8  0FFD               	addlw	-3
 24671  0137FA  6ED9               	movwf	fsr2l,c
 24672  0137FC  50E2               	movf	fsr1h,w,c
 24673  0137FE  6EDA               	movwf	fsr2h,c
 24674  013800  0EFF               	movlw	255
 24675  013802  22DA               	addwfc	fsr2h,f,c
 24676  013804  0EFE               	movlw	-2
 24677  013806  50E3               	movf	plusw1,w,c
 24678  013808  5CDE               	subwf	postinc2,w,c
 24679  01380A  A0D8               	btfss	status,0,c
 24680  01380C  D7BE               	goto	l7229
 24681  01380E                     u5200:
 24682                           
 24683                           ;stkvar	_signs @ sp[(-4)+3]
 24684  01380E  0EFF               	movlw	-1
 24685  013810  BCE3               	btfsc	plusw1,6,c
 24686  013812  D066               	goto	l7271
 24687                           
 24688                           ;stkvar	_bexp @ sp[(-4)+1]
 24689  013814  0EFD               	movlw	-3
 24690  013816  50E3               	movf	plusw1,w,c
 24691  013818  B4D8               	btfsc	status,2,c
 24692  01381A  D0F2               	goto	u5300
 24693                           
 24694                           ;stkvar	_a @ sp[(-4)+-8]
 24695                           ;stkvar	_b @ sp[(-4)+-4]
 24696  01381C  0EF8               	movlw	-8
 24697  01381E  50E3               	movf	plusw1,w,c
 24698  013820  6E01               	movwf	btemp^0,c
 24699  013822  0EF4               	movlw	-12
 24700  013824  50E3               	movf	plusw1,w,c
 24701  013826  2601               	addwf	btemp^0,f,c
 24702  013828  0EF8               	movlw	-8
 24703  01382A  0060  F007  FFE3   	movff	btemp,plusw1
 24704  013830  0EF9               	movlw	-7
 24705  013832  50E3               	movf	plusw1,w,c
 24706  013834  6E01               	movwf	btemp^0,c
 24707  013836  0EF5               	movlw	-11
 24708  013838  50E3               	movf	plusw1,w,c
 24709  01383A  2201               	addwfc	btemp^0,f,c
 24710  01383C  0EF9               	movlw	-7
 24711  01383E  0060  F007  FFE3   	movff	btemp,plusw1
 24712  013844  0EFA               	movlw	-6
 24713  013846  50E3               	movf	plusw1,w,c
 24714  013848  6E01               	movwf	btemp^0,c
 24715  01384A  0EF6               	movlw	-10
 24716  01384C  50E3               	movf	plusw1,w,c
 24717  01384E  2201               	addwfc	btemp^0,f,c
 24718  013850  0EFA               	movlw	-6
 24719  013852  0060  F007  FFE3   	movff	btemp,plusw1
 24720  013858  0EFB               	movlw	-5
 24721  01385A  50E3               	movf	plusw1,w,c
 24722  01385C  6E01               	movwf	btemp^0,c
 24723  01385E  0EF7               	movlw	-9
 24724  013860  50E3               	movf	plusw1,w,c
 24725  013862  2201               	addwfc	btemp^0,f,c
 24726  013864  0EFB               	movlw	-5
 24727  013866  0060  F007  FFE3   	movff	btemp,plusw1
 24728                           
 24729                           ;stkvar	_b @ sp[(-4)+-4]
 24730  01386C  0EFB               	movlw	-5
 24731  01386E  A0E3               	btfss	plusw1,0,c
 24732  013870  D101               	goto	u5340
 24733                           
 24734                           ;stkvar	_grs @ sp[(-4)+0]
 24735  013872  0EFC               	movlw	-4
 24736  013874  A0E3               	btfss	plusw1,0,c
 24737  013876  D00D               	goto	l7261
 24738                           
 24739                           ;stkvar	_grs @ sp[(-4)+0]
 24740  013878  0EFC               	movlw	-4
 24741  01387A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24742  013880  90D8               	bcf	status,0,c
 24743  013882  320C               	rrcf	(btemp+11)^0,f,c
 24744  013884  0E01               	movlw	1
 24745  013886  120C               	iorwf	(btemp+11)^0,f,c
 24746                           
 24747                           ;stkvar	_grs @ sp[(-4)+0]
 24748  013888  0EFC               	movlw	-4
 24749  01388A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24750  013890  D009               	goto	l7263
 24751  013892                     l7261:
 24752                           
 24753                           ;stkvar	_grs @ sp[(-4)+0]
 24754  013892  50E1               	movf	fsr1l,w,c
 24755  013894  0FFC               	addlw	-4
 24756  013896  6ED9               	movwf	fsr2l,c
 24757  013898  50E2               	movf	fsr1h,w,c
 24758  01389A  6EDA               	movwf	fsr2h,c
 24759  01389C  0EFF               	movlw	255
 24760  01389E  22DA               	addwfc	fsr2h,f,c
 24761  0138A0  90D8               	bcf	status,0,c
 24762  0138A2  32DF               	rrcf	indf2,f,c
 24763  0138A4                     l7263:
 24764                           
 24765                           ;stkvar	_b @ sp[(-4)+-4]
 24766  0138A4  0EF8               	movlw	-8
 24767  0138A6  A0E3               	btfss	plusw1,0,c
 24768  0138A8  D002               	goto	l7267
 24769                           
 24770                           ;stkvar	_grs @ sp[(-4)+0]
 24771  0138AA  0EFC               	movlw	-4
 24772  0138AC  8EE3               	bsf	plusw1,7,c
 24773  0138AE                     l7267:
 24774  0138AE  0E01               	movlw	1
 24775  0138B0  6E0C               	movwf	(btemp+11)^0,c
 24776                           
 24777                           ;stkvar	_b @ sp[(-4)+-4]
 24778  0138B2  50E1               	movf	fsr1l,w,c
 24779  0138B4  0FF8               	addlw	-8
 24780  0138B6  6ED9               	movwf	fsr2l,c
 24781  0138B8  50E2               	movf	fsr1h,w,c
 24782  0138BA  6EDA               	movwf	fsr2h,c
 24783  0138BC  0EFF               	movlw	255
 24784  0138BE  22DA               	addwfc	fsr2h,f,c
 24785  0138C0  280C               	incf	(btemp+11)^0,w,c
 24786  0138C2  52DE               	movf	postinc2,f,c
 24787  0138C4  D008               	goto	u5260
 24788  0138C6                     u5265:
 24789  0138C6  52DE               	movf	postinc2,f,c
 24790  0138C8  90D8               	bcf	status,0,c
 24791  0138CA  BEDC               	btfsc	preinc2,7,c
 24792  0138CC  80D8               	bsf	status,0,c
 24793  0138CE  32DD               	rrcf	postdec2,f,c
 24794  0138D0  32DD               	rrcf	postdec2,f,c
 24795  0138D2  32DD               	rrcf	postdec2,f,c
 24796  0138D4  32DE               	rrcf	postinc2,f,c
 24797  0138D6                     u5260:
 24798  0138D6  2EE8               	decfsz	wreg,f,c
 24799  0138D8  D7F6               	goto	u5265
 24800                           
 24801                           ;stkvar	_bexp @ sp[(-4)+1]
 24802  0138DA  0EFD               	movlw	-3
 24803  0138DC  2AE3               	incf	plusw1,f,c
 24804  0138DE  D0CA               	goto	u5340
 24805  0138E0                     l7271:
 24806                           
 24807                           ;stkvar	_a @ sp[(-4)+-8]
 24808                           ;stkvar	_b @ sp[(-4)+-4]
 24809  0138E0  50E1               	movf	fsr1l,w,c
 24810  0138E2  0FF8               	addlw	-8
 24811  0138E4  6ED9               	movwf	fsr2l,c
 24812  0138E6  50E2               	movf	fsr1h,w,c
 24813  0138E8  6EDA               	movwf	fsr2h,c
 24814  0138EA  0EFF               	movlw	255
 24815  0138EC  22DA               	addwfc	fsr2h,f,c
 24816  0138EE  0EF4               	movlw	-12
 24817  0138F0  50E3               	movf	plusw1,w,c
 24818  0138F2  5CDE               	subwf	postinc2,w,c
 24819  0138F4  0EF5               	movlw	-11
 24820  0138F6  50E3               	movf	plusw1,w,c
 24821  0138F8  58DE               	subwfb	postinc2,w,c
 24822  0138FA  0EF6               	movlw	-10
 24823  0138FC  50E3               	movf	plusw1,w,c
 24824  0138FE  58DE               	subwfb	postinc2,w,c
 24825  013900  50DE               	movf	postinc2,w,c
 24826  013902  0A80               	xorlw	128
 24827  013904  6E01               	movwf	btemp^0,c
 24828  013906  0EF7               	movlw	-9
 24829  013908  50E3               	movf	plusw1,w,c
 24830  01390A  0A80               	xorlw	128
 24831  01390C  5801               	subwfb	btemp^0,w,c
 24832  01390E  B0D8               	btfsc	status,0,c
 24833  013910  D053               	goto	l7283
 24834                           
 24835                           ;stkvar	_b @ sp[(-4)+-4]
 24836                           ;stkvar	_a @ sp[(-4)+-8]
 24837  013912  0EF4               	movlw	-12
 24838  013914  006F FF8C  F009    	movff	plusw1,btemp+8
 24839  01391A  0EF5               	movlw	-11
 24840  01391C  006F FF8C  F00A    	movff	plusw1,btemp+9
 24841  013922  0EF6               	movlw	-10
 24842  013924  006F FF8C  F00B    	movff	plusw1,btemp+10
 24843  01392A  0EF7               	movlw	-9
 24844  01392C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24845  013932  0EF8               	movlw	-8
 24846  013934  50E3               	movf	plusw1,w,c
 24847  013936  5E09               	subwf	(btemp+8)^0,f,c
 24848  013938  0EF9               	movlw	-7
 24849  01393A  50E3               	movf	plusw1,w,c
 24850  01393C  5A0A               	subwfb	(btemp+9)^0,f,c
 24851  01393E  0EFA               	movlw	-6
 24852  013940  50E3               	movf	plusw1,w,c
 24853  013942  5A0B               	subwfb	(btemp+10)^0,f,c
 24854  013944  0EFB               	movlw	-5
 24855  013946  50E3               	movf	plusw1,w,c
 24856  013948  5A0C               	subwfb	(btemp+11)^0,f,c
 24857  01394A  0EFF               	movlw	255
 24858  01394C  2409               	addwf	(btemp+8)^0,w,c
 24859  01394E  6E05               	movwf	(btemp+4)^0,c
 24860  013950  0EFF               	movlw	255
 24861  013952  200A               	addwfc	(btemp+9)^0,w,c
 24862  013954  6E06               	movwf	(btemp+5)^0,c
 24863  013956  0EFF               	movlw	255
 24864  013958  200B               	addwfc	(btemp+10)^0,w,c
 24865  01395A  6E07               	movwf	(btemp+6)^0,c
 24866  01395C  0EFF               	movlw	255
 24867  01395E  200C               	addwfc	(btemp+11)^0,w,c
 24868  013960  6E08               	movwf	(btemp+7)^0,c
 24869                           
 24870                           ;stkvar	_b @ sp[(-4)+-4]
 24871  013962  0EF8               	movlw	-8
 24872  013964  0060  F017  FFE3   	movff	btemp+4,plusw1
 24873  01396A  0EF9               	movlw	-7
 24874  01396C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 24875  013972  0EFA               	movlw	-6
 24876  013974  0060  F01F  FFE3   	movff	btemp+6,plusw1
 24877  01397A  0EFB               	movlw	-5
 24878  01397C  0060  F023  FFE3   	movff	btemp+7,plusw1
 24879                           
 24880                           ;stkvar	_signs @ sp[(-4)+3]
 24881  013982  0EFF               	movlw	-1
 24882  013984  7EE3               	btg	plusw1,7,c
 24883                           
 24884                           ;stkvar	_grs @ sp[(-4)+0]
 24885  013986  0EFC               	movlw	-4
 24886  013988  50E3               	movf	plusw1,w,c
 24887  01398A  0800               	sublw	0
 24888  01398C  6E0C               	movwf	(btemp+11)^0,c
 24889                           
 24890                           ;stkvar	_grs @ sp[(-4)+0]
 24891  01398E  0EFC               	movlw	-4
 24892  013990  0060  F033  FFE3   	movff	btemp+11,plusw1
 24893                           
 24894                           ;stkvar	_grs @ sp[(-4)+0]
 24895  013996  0EFC               	movlw	-4
 24896  013998  50E3               	movf	plusw1,w,c
 24897  01399A  A4D8               	btfss	status,2,c
 24898  01399C  D020               	goto	l7285
 24899                           
 24900                           ;stkvar	_b @ sp[(-4)+-4]
 24901  01399E  50E1               	movf	fsr1l,w,c
 24902  0139A0  0FF8               	addlw	-8
 24903  0139A2  6ED9               	movwf	fsr2l,c
 24904  0139A4  50E2               	movf	fsr1h,w,c
 24905  0139A6  6EDA               	movwf	fsr2h,c
 24906  0139A8  0EFF               	movlw	255
 24907  0139AA  22DA               	addwfc	fsr2h,f,c
 24908  0139AC  2ADE               	incf	postinc2,f,c
 24909  0139AE  0E00               	movlw	0
 24910  0139B0  22DE               	addwfc	postinc2,f,c
 24911  0139B2  22DE               	addwfc	postinc2,f,c
 24912  0139B4  22DE               	addwfc	postinc2,f,c
 24913  0139B6  D013               	goto	l7285
 24914  0139B8                     l7283:
 24915                           
 24916                           ;stkvar	_a @ sp[(-4)+-8]
 24917                           ;stkvar	_b @ sp[(-4)+-4]
 24918  0139B8  50E1               	movf	fsr1l,w,c
 24919  0139BA  0FF8               	addlw	-8
 24920  0139BC  6ED9               	movwf	fsr2l,c
 24921  0139BE  50E2               	movf	fsr1h,w,c
 24922  0139C0  6EDA               	movwf	fsr2h,c
 24923  0139C2  0EFF               	movlw	255
 24924  0139C4  22DA               	addwfc	fsr2h,f,c
 24925  0139C6  0EF4               	movlw	-12
 24926  0139C8  50E3               	movf	plusw1,w,c
 24927  0139CA  5EDE               	subwf	postinc2,f,c
 24928  0139CC  0EF5               	movlw	-11
 24929  0139CE  50E3               	movf	plusw1,w,c
 24930  0139D0  5ADE               	subwfb	postinc2,f,c
 24931  0139D2  0EF6               	movlw	-10
 24932  0139D4  50E3               	movf	plusw1,w,c
 24933  0139D6  5ADE               	subwfb	postinc2,f,c
 24934  0139D8  0EF7               	movlw	-9
 24935  0139DA  50E3               	movf	plusw1,w,c
 24936  0139DC  5ADE               	subwfb	postinc2,f,c
 24937  0139DE                     l7285:
 24938                           
 24939                           ;stkvar	_b @ sp[(-4)+-4]
 24940  0139DE  0EF8               	movlw	-8
 24941  0139E0  50E3               	movf	plusw1,w,c
 24942  0139E2  E145               	bnz	l7307
 24943  0139E4  0EF9               	movlw	-7
 24944  0139E6  50E3               	movf	plusw1,w,c
 24945  0139E8  E142               	bnz	l7307
 24946  0139EA  0EFA               	movlw	-6
 24947  0139EC  50E3               	movf	plusw1,w,c
 24948  0139EE  E13F               	bnz	l7307
 24949  0139F0  0EFB               	movlw	-5
 24950  0139F2  50E3               	movf	plusw1,w,c
 24951  0139F4  A4D8               	btfss	status,2,c
 24952  0139F6  D03B               	goto	l7307
 24953                           
 24954                           ;stkvar	_grs @ sp[(-4)+0]
 24955  0139F8  0EFC               	movlw	-4
 24956  0139FA  50E3               	movf	plusw1,w,c
 24957  0139FC  A4D8               	btfss	status,2,c
 24958  0139FE  D037               	goto	l7307
 24959  013A00                     u5300:
 24960  013A00  0E00               	movlw	0
 24961  013A02  6E01               	movwf	btemp^0,c
 24962  013A04  0E00               	movlw	0
 24963  013A06  6E02               	movwf	(btemp+1)^0,c
 24964  013A08  0E00               	movlw	0
 24965  013A0A  6E03               	movwf	(btemp+2)^0,c
 24966  013A0C  0E00               	movlw	0
 24967  013A0E  6E04               	movwf	(btemp+3)^0,c
 24968  013A10  D0C6               	goto	l2807
 24969  013A12                     l7293:
 24970                           
 24971                           ;stkvar	_b @ sp[(-4)+-4]
 24972  013A12  90D8               	bcf	status,0,c
 24973  013A14  0EF8               	movlw	-8
 24974  013A16  36E3               	rlcf	plusw1,f,c
 24975  013A18  0EF9               	movlw	-7
 24976  013A1A  36E3               	rlcf	plusw1,f,c
 24977  013A1C  0EFA               	movlw	-6
 24978  013A1E  36E3               	rlcf	plusw1,f,c
 24979  013A20  0EFB               	movlw	-5
 24980  013A22  36E3               	rlcf	plusw1,f,c
 24981                           
 24982                           ;stkvar	_grs @ sp[(-4)+0]
 24983  013A24  0EFC               	movlw	-4
 24984  013A26  AEE3               	btfss	plusw1,7,c
 24985  013A28  D002               	goto	l2819
 24986                           
 24987                           ;stkvar	_b @ sp[(-4)+-4]
 24988  013A2A  0EF8               	movlw	-8
 24989  013A2C  80E3               	bsf	plusw1,0,c
 24990  013A2E                     l2819:
 24991                           
 24992                           ;stkvar	_grs @ sp[(-4)+0]
 24993  013A2E  0EFC               	movlw	-4
 24994  013A30  A0E3               	btfss	plusw1,0,c
 24995  013A32  D00E               	goto	l7301
 24996                           
 24997                           ;stkvar	_grs @ sp[(-4)+0]
 24998  013A34  0EFC               	movlw	-4
 24999  013A36  006F FF8C  F00C    	movff	plusw1,btemp+11
 25000  013A3C  90D8               	bcf	status,0,c
 25001  013A3E  340C               	rlcf	(btemp+11)^0,w,c
 25002  013A40  6E0B               	movwf	(btemp+10)^0,c
 25003  013A42  0E01               	movlw	1
 25004  013A44  120B               	iorwf	(btemp+10)^0,f,c
 25005                           
 25006                           ;stkvar	_grs @ sp[(-4)+0]
 25007  013A46  0EFC               	movlw	-4
 25008  013A48  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25009  013A4E  D009               	goto	l7303
 25010  013A50                     l7301:
 25011                           
 25012                           ;stkvar	_grs @ sp[(-4)+0]
 25013  013A50  50E1               	movf	fsr1l,w,c
 25014  013A52  0FFC               	addlw	-4
 25015  013A54  6ED9               	movwf	fsr2l,c
 25016  013A56  50E2               	movf	fsr1h,w,c
 25017  013A58  6EDA               	movwf	fsr2h,c
 25018  013A5A  0EFF               	movlw	255
 25019  013A5C  22DA               	addwfc	fsr2h,f,c
 25020  013A5E  90D8               	bcf	status,0,c
 25021  013A60  36DF               	rlcf	indf2,f,c
 25022  013A62                     l7303:
 25023                           
 25024                           ;stkvar	_bexp @ sp[(-4)+1]
 25025  013A62  0EFD               	movlw	-3
 25026  013A64  50E3               	movf	plusw1,w,c
 25027  013A66  B4D8               	btfsc	status,2,c
 25028  013A68  D002               	goto	l7307
 25029                           
 25030                           ;stkvar	_bexp @ sp[(-4)+1]
 25031  013A6A  0EFD               	movlw	-3
 25032  013A6C  06E3               	decf	plusw1,f,c
 25033  013A6E                     l7307:
 25034                           
 25035                           ;stkvar	_b @ sp[(-4)+-4]
 25036  013A6E  0EFA               	movlw	-6
 25037  013A70  AEE3               	btfss	plusw1,7,c
 25038  013A72  D7CF               	goto	l7293
 25039  013A74                     u5340:
 25040                           
 25041                           ;stkvar	_aexp @ sp[(-4)+2]
 25042  013A74  0EFE               	movlw	-2
 25043  013A76  6AE3               	clrf	plusw1,c
 25044                           
 25045                           ;stkvar	_grs @ sp[(-4)+0]
 25046  013A78  0EFC               	movlw	-4
 25047  013A7A  AEE3               	btfss	plusw1,7,c
 25048  013A7C  D00F               	goto	l7321
 25049                           
 25050                           ;stkvar	_grs @ sp[(-4)+0]
 25051  013A7E  0EFC               	movlw	-4
 25052  013A80  006F FF8C  F00C    	movff	plusw1,btemp+11
 25053  013A86  0E7F               	movlw	127
 25054  013A88  160C               	andwf	(btemp+11)^0,f,c
 25055  013A8A  B4D8               	btfsc	status,2,c
 25056  013A8C  D004               	goto	l7317
 25057  013A8E                     u5360:
 25058                           
 25059                           ;stkvar	_aexp @ sp[(-4)+2]
 25060  013A8E  0EFE               	movlw	-2
 25061  013A90  6AE3               	clrf	plusw1,c
 25062  013A92  2AE3               	incf	plusw1,f,c
 25063  013A94  D003               	goto	l7321
 25064  013A96                     l7317:
 25065                           
 25066                           ;stkvar	_b @ sp[(-4)+-4]
 25067  013A96  0EF8               	movlw	-8
 25068  013A98  B0E3               	btfsc	plusw1,0,c
 25069  013A9A  D7F9               	goto	u5360
 25070  013A9C                     l7321:
 25071                           
 25072                           ;stkvar	_aexp @ sp[(-4)+2]
 25073  013A9C  0EFE               	movlw	-2
 25074  013A9E  50E3               	movf	plusw1,w,c
 25075  013AA0  B4D8               	btfsc	status,2,c
 25076  013AA2  D02B               	goto	l7333
 25077                           
 25078                           ;stkvar	_b @ sp[(-4)+-4]
 25079  013AA4  50E1               	movf	fsr1l,w,c
 25080  013AA6  0FF8               	addlw	-8
 25081  013AA8  6ED9               	movwf	fsr2l,c
 25082  013AAA  50E2               	movf	fsr1h,w,c
 25083  013AAC  6EDA               	movwf	fsr2h,c
 25084  013AAE  0EFF               	movlw	255
 25085  013AB0  22DA               	addwfc	fsr2h,f,c
 25086  013AB2  2ADE               	incf	postinc2,f,c
 25087  013AB4  0E00               	movlw	0
 25088  013AB6  22DE               	addwfc	postinc2,f,c
 25089  013AB8  22DE               	addwfc	postinc2,f,c
 25090  013ABA  22DE               	addwfc	postinc2,f,c
 25091                           
 25092                           ;stkvar	_b @ sp[(-4)+-4]
 25093  013ABC  0EFB               	movlw	-5
 25094  013ABE  A0E3               	btfss	plusw1,0,c
 25095  013AC0  D01C               	goto	l7333
 25096  013AC2  0E01               	movlw	1
 25097  013AC4  6E0C               	movwf	(btemp+11)^0,c
 25098                           
 25099                           ;stkvar	_b @ sp[(-4)+-4]
 25100  013AC6  50E1               	movf	fsr1l,w,c
 25101  013AC8  0FF8               	addlw	-8
 25102  013ACA  6ED9               	movwf	fsr2l,c
 25103  013ACC  50E2               	movf	fsr1h,w,c
 25104  013ACE  6EDA               	movwf	fsr2h,c
 25105  013AD0  0EFF               	movlw	255
 25106  013AD2  22DA               	addwfc	fsr2h,f,c
 25107  013AD4  280C               	incf	(btemp+11)^0,w,c
 25108  013AD6  52DE               	movf	postinc2,f,c
 25109  013AD8  D008               	goto	u5400
 25110  013ADA                     u5405:
 25111  013ADA  52DE               	movf	postinc2,f,c
 25112  013ADC  90D8               	bcf	status,0,c
 25113  013ADE  BEDC               	btfsc	preinc2,7,c
 25114  013AE0  80D8               	bsf	status,0,c
 25115  013AE2  32DD               	rrcf	postdec2,f,c
 25116  013AE4  32DD               	rrcf	postdec2,f,c
 25117  013AE6  32DD               	rrcf	postdec2,f,c
 25118  013AE8  32DE               	rrcf	postinc2,f,c
 25119  013AEA                     u5400:
 25120  013AEA  2EE8               	decfsz	wreg,f,c
 25121  013AEC  D7F6               	goto	u5405
 25122                           
 25123                           ;stkvar	_bexp @ sp[(-4)+1]
 25124  013AEE  0EFD               	movlw	-3
 25125  013AF0  28E3               	incf	plusw1,w,c
 25126  013AF2  B4D8               	btfsc	status,2,c
 25127  013AF4  D002               	goto	l7333
 25128                           
 25129                           ;stkvar	_bexp @ sp[(-4)+1]
 25130  013AF6  0EFD               	movlw	-3
 25131  013AF8  2AE3               	incf	plusw1,f,c
 25132  013AFA                     l7333:
 25133                           
 25134                           ;stkvar	_bexp @ sp[(-4)+1]
 25135  013AFA  0EFD               	movlw	-3
 25136  013AFC  28E3               	incf	plusw1,w,c
 25137  013AFE  B4D8               	btfsc	status,2,c
 25138  013B00  D004               	goto	u5430
 25139                           
 25140                           ;stkvar	_bexp @ sp[(-4)+1]
 25141  013B02  0EFD               	movlw	-3
 25142  013B04  50E3               	movf	plusw1,w,c
 25143  013B06  A4D8               	btfss	status,2,c
 25144  013B08  D00E               	goto	l7343
 25145  013B0A                     u5430:
 25146                           
 25147                           ;stkvar	_b @ sp[(-4)+-4]
 25148  013B0A  0EF8               	movlw	-8
 25149  013B0C  6AE3               	clrf	plusw1,c
 25150  013B0E  0EF9               	movlw	-7
 25151  013B10  6AE3               	clrf	plusw1,c
 25152  013B12  0EFA               	movlw	-6
 25153  013B14  6AE3               	clrf	plusw1,c
 25154  013B16  0EFB               	movlw	-5
 25155  013B18  6AE3               	clrf	plusw1,c
 25156                           
 25157                           ;stkvar	_bexp @ sp[(-4)+1]
 25158  013B1A  0EFD               	movlw	-3
 25159  013B1C  50E3               	movf	plusw1,w,c
 25160  013B1E  A4D8               	btfss	status,2,c
 25161  013B20  D002               	goto	l7343
 25162                           
 25163                           ;stkvar	_signs @ sp[(-4)+3]
 25164  013B22  0EFF               	movlw	-1
 25165  013B24  6AE3               	clrf	plusw1,c
 25166  013B26                     l7343:
 25167                           
 25168                           ;stkvar	_bexp @ sp[(-4)+1]
 25169  013B26  0EFD               	movlw	-3
 25170  013B28  A0E3               	btfss	plusw1,0,c
 25171  013B2A  D009               	goto	l7347
 25172                           
 25173                           ;stkvar	_b @ sp[(-4)+-4]
 25174  013B2C  0EFA               	movlw	250
 25175  013B2E  24E1               	addwf	fsr1l,w,c
 25176  013B30  6ED9               	movwf	fsr2l,c
 25177  013B32  0EFF               	movlw	255
 25178  013B34  20E2               	addwfc	fsr1h,w,c
 25179  013B36  6EDA               	movwf	fsr2h,c
 25180  013B38  0E00               	movlw	0
 25181  013B3A  8EDB               	bsf	plusw2,7,c
 25182  013B3C  D008               	goto	l7349
 25183  013B3E                     l7347:
 25184                           
 25185                           ;stkvar	_b @ sp[(-4)+-4]
 25186  013B3E  0EFA               	movlw	250
 25187  013B40  24E1               	addwf	fsr1l,w,c
 25188  013B42  6ED9               	movwf	fsr2l,c
 25189  013B44  0EFF               	movlw	255
 25190  013B46  20E2               	addwfc	fsr1h,w,c
 25191  013B48  6EDA               	movwf	fsr2h,c
 25192  013B4A  0E7F               	movlw	127
 25193  013B4C  16DF               	andwf	indf2,f,c
 25194  013B4E                     l7349:
 25195                           
 25196                           ;stkvar	_b @ sp[(-4)+-4]
 25197  013B4E  0EFB               	movlw	251
 25198  013B50  24E1               	addwf	fsr1l,w,c
 25199  013B52  6ED9               	movwf	fsr2l,c
 25200  013B54  0EFF               	movlw	255
 25201  013B56  20E2               	addwfc	fsr1h,w,c
 25202  013B58  6EDA               	movwf	fsr2h,c
 25203                           
 25204                           ;stkvar	_bexp @ sp[(-4)+1]
 25205  013B5A  0EFD               	movlw	-3
 25206  013B5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25207  013B62  90D8               	bcf	status,0,c
 25208  013B64  300C               	rrcf	(btemp+11)^0,w,c
 25209  013B66  6EDF               	movwf	indf2,c
 25210                           
 25211                           ;stkvar	_signs @ sp[(-4)+3]
 25212  013B68  0EFF               	movlw	-1
 25213  013B6A  AEE3               	btfss	plusw1,7,c
 25214  013B6C  D008               	goto	l7355
 25215                           
 25216                           ;stkvar	_b @ sp[(-4)+-4]
 25217  013B6E  0EFB               	movlw	251
 25218  013B70  24E1               	addwf	fsr1l,w,c
 25219  013B72  6ED9               	movwf	fsr2l,c
 25220  013B74  0EFF               	movlw	255
 25221  013B76  20E2               	addwfc	fsr1h,w,c
 25222  013B78  6EDA               	movwf	fsr2h,c
 25223  013B7A  0E00               	movlw	0
 25224  013B7C  8EDB               	bsf	plusw2,7,c
 25225  013B7E                     l7355:
 25226                           
 25227                           ;stkvar	_b @ sp[(-4)+-4]
 25228  013B7E  0EF8               	movlw	-8
 25229  013B80  006F FF8C  F001    	movff	plusw1,btemp
 25230  013B86  0EF9               	movlw	-7
 25231  013B88  006F FF8C  F002    	movff	plusw1,btemp+1
 25232  013B8E  0EFA               	movlw	-6
 25233  013B90  006F FF8C  F003    	movff	plusw1,btemp+2
 25234  013B96  0EFB               	movlw	-5
 25235  013B98  006F FF8C  F004    	movff	plusw1,btemp+3
 25236  013B9E                     l2807:
 25237                           
 25238                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 25239  013B9E  0EF4               	movlw	244
 25240  013BA0  26E1               	addwf	fsr1l,f,c
 25241  013BA2  0EFF               	movlw	255
 25242  013BA4  22E2               	addwfc	fsr1h,f,c
 25243  013BA6  0012               	return		;funcret
 25244  013BA8                     __end_of___fladd:
 25245                           	opt callstack 0
 25246                           
 25247 ;; *************** function ___flmul *****************
 25248 ;; Defined at:
 25249 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 25250 ;; Parameters:    Size  Location     Type
 25251 ;;  b               4  [STACK] unsigned char 
 25252 ;;  a               4  [STACK] unsigned char 
 25253 ;; Auto vars:     Size  Location     Type
 25254 ;;  prod            4  [STACK] struct .
 25255 ;;  grs             4  [STACK] unsigned long 
 25256 ;;  temp            2  [STACK] struct .
 25257 ;;  bexp            1  [STACK] unsigned char 
 25258 ;;  aexp            1  [STACK] unsigned char 
 25259 ;;  sign            1  [STACK] unsigned char 
 25260 ;; Return value:  Size  Location     Type
 25261 ;;                  4  [STACK] unsigned char 
 25262 ;; Registers used:
 25263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25264 ;; Tracked objects:
 25265 ;;		On entry : 0/1
 25266 ;;		On exit  : 0/0
 25267 ;;		Unchanged: 0/0
 25268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25273 ;;Total ram usage:        0 bytes
 25274 ;; Hardware stack levels used:    1
 25275 ;; Hardware stack levels required when called:   15
 25276 ;; This function calls:
 25277 ;;		Nothing
 25278 ;; This function is called by:
 25279 ;;		_conv_raw_result
 25280 ;;		_lp_filter
 25281 ;;		_calc_model_data
 25282 ;;		_calc_bsoc
 25283 ;;		_init_bsoc
 25284 ;;		_efgtoa
 25285 ;; This function uses a reentrant model
 25286 ;;
 25287                           
 25288                           	psect	text101
 25289  012BC2                     __ptext101:
 25290                           	opt callstack 0
 25291  012BC2                     ___flmul:
 25292                           	opt callstack 0
 25293                           
 25294                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25295  012BC2  0E0D               	movlw	13
 25296  012BC4  26E1               	addwf	fsr1l,f,c
 25297  012BC6  0E00               	movlw	0
 25298  012BC8  22E2               	addwfc	fsr1h,f,c
 25299                           
 25300                           ;stkvar	_b @ sp[(-13)+-4]
 25301                           
 25302                           ;incstack = 0
 25303 ;; hardware stack exceeded
 25304  012BCA  0EF2               	movlw	242
 25305  012BCC  24E1               	addwf	fsr1l,w,c
 25306  012BCE  6ED9               	movwf	fsr2l,c
 25307  012BD0  0EFF               	movlw	255
 25308  012BD2  20E2               	addwfc	fsr1h,w,c
 25309  012BD4  6EDA               	movwf	fsr2h,c
 25310  012BD6  50DF               	movf	indf2,w,c
 25311  012BD8  6E0C               	movwf	(btemp+11)^0,c
 25312  012BDA  0E80               	movlw	128
 25313  012BDC  160C               	andwf	(btemp+11)^0,f,c
 25314                           
 25315                           ;stkvar	_sign @ sp[(-13)+12]
 25316  012BDE  0EFF               	movlw	-1
 25317  012BE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25318                           
 25319                           ;stkvar	_b @ sp[(-13)+-4]
 25320  012BE6  0EF2               	movlw	242
 25321  012BE8  24E1               	addwf	fsr1l,w,c
 25322  012BEA  6ED9               	movwf	fsr2l,c
 25323  012BEC  0EFF               	movlw	255
 25324  012BEE  20E2               	addwfc	fsr1h,w,c
 25325  012BF0  6EDA               	movwf	fsr2h,c
 25326  012BF2  50DF               	movf	indf2,w,c
 25327  012BF4  6E0C               	movwf	(btemp+11)^0,c
 25328  012BF6  90D8               	bcf	status,0,c
 25329  012BF8  340C               	rlcf	(btemp+11)^0,w,c
 25330  012BFA  6E0B               	movwf	(btemp+10)^0,c
 25331                           
 25332                           ;stkvar	_bexp @ sp[(-13)+10]
 25333  012BFC  0EFD               	movlw	-3
 25334  012BFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25335                           
 25336                           ;stkvar	_b @ sp[(-13)+-4]
 25337  012C04  0EF1               	movlw	241
 25338  012C06  24E1               	addwf	fsr1l,w,c
 25339  012C08  6ED9               	movwf	fsr2l,c
 25340  012C0A  0EFF               	movlw	255
 25341  012C0C  20E2               	addwfc	fsr1h,w,c
 25342  012C0E  6EDA               	movwf	fsr2h,c
 25343  012C10  AEDF               	btfss	indf2,7,c
 25344  012C12  D002               	goto	l7739
 25345                           
 25346                           ;stkvar	_bexp @ sp[(-13)+10]
 25347  012C14  0EFD               	movlw	-3
 25348  012C16  80E3               	bsf	plusw1,0,c
 25349  012C18                     l7739:
 25350                           
 25351                           ;stkvar	_bexp @ sp[(-13)+10]
 25352  012C18  0EFD               	movlw	-3
 25353  012C1A  50E3               	movf	plusw1,w,c
 25354  012C1C  B4D8               	btfsc	status,2,c
 25355  012C1E  D01F               	goto	l7747
 25356                           
 25357                           ;stkvar	_bexp @ sp[(-13)+10]
 25358  012C20  0EFD               	movlw	-3
 25359  012C22  28E3               	incf	plusw1,w,c
 25360  012C24  A4D8               	btfss	status,2,c
 25361  012C26  D018               	goto	l7745
 25362  012C28  0E00               	movlw	0
 25363  012C2A  6E09               	movwf	(btemp+8)^0,c
 25364  012C2C  0E00               	movlw	0
 25365  012C2E  6E0A               	movwf	(btemp+9)^0,c
 25366  012C30  0E00               	movlw	0
 25367  012C32  6E0B               	movwf	(btemp+10)^0,c
 25368  012C34  0E00               	movlw	0
 25369  012C36  6E0C               	movwf	(btemp+11)^0,c
 25370                           
 25371                           ;stkvar	_b @ sp[(-13)+-4]
 25372  012C38  0EEF               	movlw	-17
 25373  012C3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 25374  012C40  0EF0               	movlw	-16
 25375  012C42  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25376  012C48  0EF1               	movlw	-15
 25377  012C4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25378  012C50  0EF2               	movlw	-14
 25379  012C52  0060  F033  FFE3   	movff	btemp+11,plusw1
 25380  012C58                     l7745:
 25381                           
 25382                           ;stkvar	_b @ sp[(-13)+-4]
 25383  012C58  0EF1               	movlw	-15
 25384  012C5A  8EE3               	bsf	plusw1,7,c
 25385  012C5C  D018               	goto	l7749
 25386  012C5E                     l7747:
 25387  012C5E  0E00               	movlw	0
 25388  012C60  6E09               	movwf	(btemp+8)^0,c
 25389  012C62  0E00               	movlw	0
 25390  012C64  6E0A               	movwf	(btemp+9)^0,c
 25391  012C66  0E00               	movlw	0
 25392  012C68  6E0B               	movwf	(btemp+10)^0,c
 25393  012C6A  0E00               	movlw	0
 25394  012C6C  6E0C               	movwf	(btemp+11)^0,c
 25395                           
 25396                           ;stkvar	_b @ sp[(-13)+-4]
 25397  012C6E  0EEF               	movlw	-17
 25398  012C70  0060  F027  FFE3   	movff	btemp+8,plusw1
 25399  012C76  0EF0               	movlw	-16
 25400  012C78  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25401  012C7E  0EF1               	movlw	-15
 25402  012C80  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25403  012C86  0EF2               	movlw	-14
 25404  012C88  0060  F033  FFE3   	movff	btemp+11,plusw1
 25405  012C8E                     l7749:
 25406                           
 25407                           ;stkvar	_a @ sp[(-13)+-8]
 25408  012C8E  0EEE               	movlw	238
 25409  012C90  24E1               	addwf	fsr1l,w,c
 25410  012C92  6ED9               	movwf	fsr2l,c
 25411  012C94  0EFF               	movlw	255
 25412  012C96  20E2               	addwfc	fsr1h,w,c
 25413  012C98  6EDA               	movwf	fsr2h,c
 25414  012C9A  50DF               	movf	indf2,w,c
 25415  012C9C  6E0C               	movwf	(btemp+11)^0,c
 25416  012C9E  0E80               	movlw	128
 25417  012CA0  160C               	andwf	(btemp+11)^0,f,c
 25418                           
 25419                           ;stkvar	_sign @ sp[(-13)+12]
 25420  012CA2  50E1               	movf	fsr1l,w,c
 25421  012CA4  0FFF               	addlw	-1
 25422  012CA6  6ED9               	movwf	fsr2l,c
 25423  012CA8  50E2               	movf	fsr1h,w,c
 25424  012CAA  6EDA               	movwf	fsr2h,c
 25425  012CAC  0EFF               	movlw	255
 25426  012CAE  22DA               	addwfc	fsr2h,f,c
 25427  012CB0  500C               	movf	(btemp+11)^0,w,c
 25428  012CB2  1ADF               	xorwf	indf2,f,c
 25429                           
 25430                           ;stkvar	_a @ sp[(-13)+-8]
 25431  012CB4  0EEE               	movlw	238
 25432  012CB6  24E1               	addwf	fsr1l,w,c
 25433  012CB8  6ED9               	movwf	fsr2l,c
 25434  012CBA  0EFF               	movlw	255
 25435  012CBC  20E2               	addwfc	fsr1h,w,c
 25436  012CBE  6EDA               	movwf	fsr2h,c
 25437  012CC0  50DF               	movf	indf2,w,c
 25438  012CC2  6E0C               	movwf	(btemp+11)^0,c
 25439  012CC4  90D8               	bcf	status,0,c
 25440  012CC6  340C               	rlcf	(btemp+11)^0,w,c
 25441  012CC8  6E0B               	movwf	(btemp+10)^0,c
 25442                           
 25443                           ;stkvar	_aexp @ sp[(-13)+11]
 25444  012CCA  0EFE               	movlw	-2
 25445  012CCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25446                           
 25447                           ;stkvar	_a @ sp[(-13)+-8]
 25448  012CD2  0EED               	movlw	237
 25449  012CD4  24E1               	addwf	fsr1l,w,c
 25450  012CD6  6ED9               	movwf	fsr2l,c
 25451  012CD8  0EFF               	movlw	255
 25452  012CDA  20E2               	addwfc	fsr1h,w,c
 25453  012CDC  6EDA               	movwf	fsr2h,c
 25454  012CDE  AEDF               	btfss	indf2,7,c
 25455  012CE0  D002               	goto	l7757
 25456                           
 25457                           ;stkvar	_aexp @ sp[(-13)+11]
 25458  012CE2  0EFE               	movlw	-2
 25459  012CE4  80E3               	bsf	plusw1,0,c
 25460  012CE6                     l7757:
 25461                           
 25462                           ;stkvar	_aexp @ sp[(-13)+11]
 25463  012CE6  0EFE               	movlw	-2
 25464  012CE8  50E3               	movf	plusw1,w,c
 25465  012CEA  B4D8               	btfsc	status,2,c
 25466  012CEC  D01F               	goto	l7765
 25467                           
 25468                           ;stkvar	_aexp @ sp[(-13)+11]
 25469  012CEE  0EFE               	movlw	-2
 25470  012CF0  28E3               	incf	plusw1,w,c
 25471  012CF2  A4D8               	btfss	status,2,c
 25472  012CF4  D018               	goto	l7763
 25473  012CF6  0E00               	movlw	0
 25474  012CF8  6E09               	movwf	(btemp+8)^0,c
 25475  012CFA  0E00               	movlw	0
 25476  012CFC  6E0A               	movwf	(btemp+9)^0,c
 25477  012CFE  0E00               	movlw	0
 25478  012D00  6E0B               	movwf	(btemp+10)^0,c
 25479  012D02  0E00               	movlw	0
 25480  012D04  6E0C               	movwf	(btemp+11)^0,c
 25481                           
 25482                           ;stkvar	_a @ sp[(-13)+-8]
 25483  012D06  0EEB               	movlw	-21
 25484  012D08  0060  F027  FFE3   	movff	btemp+8,plusw1
 25485  012D0E  0EEC               	movlw	-20
 25486  012D10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25487  012D16  0EED               	movlw	-19
 25488  012D18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25489  012D1E  0EEE               	movlw	-18
 25490  012D20  0060  F033  FFE3   	movff	btemp+11,plusw1
 25491  012D26                     l7763:
 25492                           
 25493                           ;stkvar	_a @ sp[(-13)+-8]
 25494  012D26  0EED               	movlw	-19
 25495  012D28  8EE3               	bsf	plusw1,7,c
 25496  012D2A  D018               	goto	l7767
 25497  012D2C                     l7765:
 25498  012D2C  0E00               	movlw	0
 25499  012D2E  6E09               	movwf	(btemp+8)^0,c
 25500  012D30  0E00               	movlw	0
 25501  012D32  6E0A               	movwf	(btemp+9)^0,c
 25502  012D34  0E00               	movlw	0
 25503  012D36  6E0B               	movwf	(btemp+10)^0,c
 25504  012D38  0E00               	movlw	0
 25505  012D3A  6E0C               	movwf	(btemp+11)^0,c
 25506                           
 25507                           ;stkvar	_a @ sp[(-13)+-8]
 25508  012D3C  0EEB               	movlw	-21
 25509  012D3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25510  012D44  0EEC               	movlw	-20
 25511  012D46  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25512  012D4C  0EED               	movlw	-19
 25513  012D4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25514  012D54  0EEE               	movlw	-18
 25515  012D56  0060  F033  FFE3   	movff	btemp+11,plusw1
 25516  012D5C                     l7767:
 25517                           
 25518                           ;stkvar	_aexp @ sp[(-13)+11]
 25519  012D5C  0EFE               	movlw	-2
 25520  012D5E  50E3               	movf	plusw1,w,c
 25521  012D60  B4D8               	btfsc	status,2,c
 25522  012D62  D004               	goto	u6370
 25523                           
 25524                           ;stkvar	_bexp @ sp[(-13)+10]
 25525  012D64  0EFD               	movlw	-3
 25526  012D66  50E3               	movf	plusw1,w,c
 25527  012D68  A4D8               	btfss	status,2,c
 25528  012D6A  D009               	goto	l7775
 25529  012D6C                     u6370:
 25530  012D6C  0E00               	movlw	0
 25531  012D6E  6E01               	movwf	btemp^0,c
 25532  012D70  0E00               	movlw	0
 25533  012D72  6E02               	movwf	(btemp+1)^0,c
 25534  012D74  0E00               	movlw	0
 25535  012D76  6E03               	movwf	(btemp+2)^0,c
 25536  012D78  0E00               	movlw	0
 25537  012D7A  6E04               	movwf	(btemp+3)^0,c
 25538  012D7C  D332               	goto	l2888
 25539  012D7E                     l7775:
 25540                           
 25541                           ;stkvar	_b @ sp[(-13)+-4]
 25542  012D7E  0EEF               	movlw	-17
 25543  012D80  006F FF8C  F00C    	movff	plusw1,btemp+11
 25544                           
 25545                           ;stkvar	_a @ sp[(-13)+-8]
 25546  012D86  0EED               	movlw	237
 25547  012D88  24E1               	addwf	fsr1l,w,c
 25548  012D8A  6ED9               	movwf	fsr2l,c
 25549  012D8C  0EFF               	movlw	255
 25550  012D8E  20E2               	addwfc	fsr1h,w,c
 25551  012D90  6EDA               	movwf	fsr2h,c
 25552  012D92  50DF               	movf	indf2,w,c
 25553  012D94  020C               	mulwf	(btemp+11)^0,c
 25554                           
 25555                           ;stkvar	_temp @ sp[(-13)+8]
 25556  012D96  0EFB               	movlw	-5
 25557  012D98  006F FFCF FFE3     	movff	prodl,plusw1
 25558  012D9E  0EFC               	movlw	-4
 25559  012DA0  006F FFD3 FFE3     	movff	prodh,plusw1
 25560                           
 25561                           ;stkvar	_temp @ sp[(-13)+8]
 25562  012DA6  0EFB               	movlw	-5
 25563  012DA8  006F FF8C  F00C    	movff	plusw1,btemp+11
 25564  012DAE  0060  F030  F005   	movff	btemp+11,btemp+4
 25565  012DB4  6A06               	clrf	(btemp+5)^0,c
 25566  012DB6  6A07               	clrf	(btemp+6)^0,c
 25567  012DB8  6A08               	clrf	(btemp+7)^0,c
 25568                           
 25569                           ;stkvar	_grs @ sp[(-13)+4]
 25570  012DBA  0EF7               	movlw	-9
 25571  012DBC  0060  F017  FFE3   	movff	btemp+4,plusw1
 25572  012DC2  0EF8               	movlw	-8
 25573  012DC4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25574  012DCA  0EF9               	movlw	-7
 25575  012DCC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25576  012DD2  0EFA               	movlw	-6
 25577  012DD4  0060  F023  FFE3   	movff	btemp+7,plusw1
 25578                           
 25579                           ;stkvar	_temp @ sp[(-13)+8]
 25580  012DDA  0EFC               	movlw	252
 25581  012DDC  24E1               	addwf	fsr1l,w,c
 25582  012DDE  6ED9               	movwf	fsr2l,c
 25583  012DE0  0EFF               	movlw	255
 25584  012DE2  20E2               	addwfc	fsr1h,w,c
 25585  012DE4  6EDA               	movwf	fsr2h,c
 25586  012DE6  50DF               	movf	indf2,w,c
 25587  012DE8  6E0C               	movwf	(btemp+11)^0,c
 25588  012DEA  0060  F030  F005   	movff	btemp+11,btemp+4
 25589  012DF0  6A06               	clrf	(btemp+5)^0,c
 25590  012DF2  6A07               	clrf	(btemp+6)^0,c
 25591  012DF4  6A08               	clrf	(btemp+7)^0,c
 25592                           
 25593                           ;stkvar	_prod @ sp[(-13)+0]
 25594  012DF6  0EF3               	movlw	-13
 25595  012DF8  0060  F017  FFE3   	movff	btemp+4,plusw1
 25596  012DFE  0EF4               	movlw	-12
 25597  012E00  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25598  012E06  0EF5               	movlw	-11
 25599  012E08  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25600  012E0E  0EF6               	movlw	-10
 25601  012E10  0060  F023  FFE3   	movff	btemp+7,plusw1
 25602                           
 25603                           ;stkvar	_b @ sp[(-13)+-4]
 25604  012E16  0EF0               	movlw	240
 25605  012E18  24E1               	addwf	fsr1l,w,c
 25606  012E1A  6ED9               	movwf	fsr2l,c
 25607  012E1C  0EFF               	movlw	255
 25608  012E1E  20E2               	addwfc	fsr1h,w,c
 25609  012E20  6EDA               	movwf	fsr2h,c
 25610  012E22  50DF               	movf	indf2,w,c
 25611  012E24  6E0C               	movwf	(btemp+11)^0,c
 25612                           
 25613                           ;stkvar	_a @ sp[(-13)+-8]
 25614  012E26  0EEC               	movlw	236
 25615  012E28  24E1               	addwf	fsr1l,w,c
 25616  012E2A  6ED9               	movwf	fsr2l,c
 25617  012E2C  0EFF               	movlw	255
 25618  012E2E  20E2               	addwfc	fsr1h,w,c
 25619  012E30  6EDA               	movwf	fsr2h,c
 25620  012E32  50DF               	movf	indf2,w,c
 25621  012E34  020C               	mulwf	(btemp+11)^0,c
 25622                           
 25623                           ;stkvar	_temp @ sp[(-13)+8]
 25624  012E36  0EFB               	movlw	-5
 25625  012E38  006F FFCF FFE3     	movff	prodl,plusw1
 25626  012E3E  0EFC               	movlw	-4
 25627  012E40  006F FFD3 FFE3     	movff	prodh,plusw1
 25628                           
 25629                           ;stkvar	_grs @ sp[(-13)+4]
 25630  012E46  50E1               	movf	fsr1l,w,c
 25631  012E48  0FF7               	addlw	-9
 25632  012E4A  6ED9               	movwf	fsr2l,c
 25633  012E4C  50E2               	movf	fsr1h,w,c
 25634  012E4E  6EDA               	movwf	fsr2h,c
 25635  012E50  0EFF               	movlw	255
 25636  012E52  22DA               	addwfc	fsr2h,f,c
 25637                           
 25638                           ;stkvar	_temp @ sp[(-13)+8]
 25639  012E54  0EFB               	movlw	-5
 25640  012E56  50E3               	movf	plusw1,w,c
 25641  012E58  26DE               	addwf	postinc2,f,c
 25642  012E5A  0E00               	movlw	0
 25643  012E5C  22DE               	addwfc	postinc2,f,c
 25644  012E5E  22DE               	addwfc	postinc2,f,c
 25645  012E60  22DE               	addwfc	postinc2,f,c
 25646                           
 25647                           ;stkvar	_prod @ sp[(-13)+0]
 25648  012E62  50E1               	movf	fsr1l,w,c
 25649  012E64  0FF3               	addlw	-13
 25650  012E66  6ED9               	movwf	fsr2l,c
 25651  012E68  50E2               	movf	fsr1h,w,c
 25652  012E6A  6EDA               	movwf	fsr2h,c
 25653  012E6C  0EFF               	movlw	255
 25654  012E6E  22DA               	addwfc	fsr2h,f,c
 25655                           
 25656                           ;stkvar	_temp @ sp[(-13)+8]
 25657  012E70  0EFC               	movlw	252
 25658  012E72  24E1               	addwf	fsr1l,w,c
 25659  012E74  6EE9               	movwf	fsr0l,c
 25660  012E76  0EFF               	movlw	255
 25661  012E78  20E2               	addwfc	fsr1h,w,c
 25662  012E7A  6EEA               	movwf	fsr0h,c
 25663  012E7C  50EF               	movf	indf0,w,c
 25664  012E7E  26DE               	addwf	postinc2,f,c
 25665  012E80  0E00               	movlw	0
 25666  012E82  22DE               	addwfc	postinc2,f,c
 25667  012E84  22DE               	addwfc	postinc2,f,c
 25668  012E86  22DE               	addwfc	postinc2,f,c
 25669                           
 25670                           ;stkvar	_b @ sp[(-13)+-4]
 25671  012E88  0EF1               	movlw	241
 25672  012E8A  24E1               	addwf	fsr1l,w,c
 25673  012E8C  6ED9               	movwf	fsr2l,c
 25674  012E8E  0EFF               	movlw	255
 25675  012E90  20E2               	addwfc	fsr1h,w,c
 25676  012E92  6EDA               	movwf	fsr2h,c
 25677  012E94  50DF               	movf	indf2,w,c
 25678  012E96  6E0C               	movwf	(btemp+11)^0,c
 25679                           
 25680                           ;stkvar	_a @ sp[(-13)+-8]
 25681  012E98  0EEB               	movlw	-21
 25682  012E9A  50E3               	movf	plusw1,w,c
 25683  012E9C  020C               	mulwf	(btemp+11)^0,c
 25684                           
 25685                           ;stkvar	_temp @ sp[(-13)+8]
 25686  012E9E  0EFB               	movlw	-5
 25687  012EA0  006F FFCF FFE3     	movff	prodl,plusw1
 25688  012EA6  0EFC               	movlw	-4
 25689  012EA8  006F FFD3 FFE3     	movff	prodh,plusw1
 25690                           
 25691                           ;stkvar	_grs @ sp[(-13)+4]
 25692  012EAE  50E1               	movf	fsr1l,w,c
 25693  012EB0  0FF7               	addlw	-9
 25694  012EB2  6ED9               	movwf	fsr2l,c
 25695  012EB4  50E2               	movf	fsr1h,w,c
 25696  012EB6  6EDA               	movwf	fsr2h,c
 25697  012EB8  0EFF               	movlw	255
 25698  012EBA  22DA               	addwfc	fsr2h,f,c
 25699                           
 25700                           ;stkvar	_temp @ sp[(-13)+8]
 25701  012EBC  0EFB               	movlw	-5
 25702  012EBE  50E3               	movf	plusw1,w,c
 25703  012EC0  26DE               	addwf	postinc2,f,c
 25704  012EC2  0E00               	movlw	0
 25705  012EC4  22DE               	addwfc	postinc2,f,c
 25706  012EC6  22DE               	addwfc	postinc2,f,c
 25707  012EC8  22DE               	addwfc	postinc2,f,c
 25708                           
 25709                           ;stkvar	_prod @ sp[(-13)+0]
 25710  012ECA  50E1               	movf	fsr1l,w,c
 25711  012ECC  0FF3               	addlw	-13
 25712  012ECE  6ED9               	movwf	fsr2l,c
 25713  012ED0  50E2               	movf	fsr1h,w,c
 25714  012ED2  6EDA               	movwf	fsr2h,c
 25715  012ED4  0EFF               	movlw	255
 25716  012ED6  22DA               	addwfc	fsr2h,f,c
 25717                           
 25718                           ;stkvar	_temp @ sp[(-13)+8]
 25719  012ED8  0EFC               	movlw	252
 25720  012EDA  24E1               	addwf	fsr1l,w,c
 25721  012EDC  6EE9               	movwf	fsr0l,c
 25722  012EDE  0EFF               	movlw	255
 25723  012EE0  20E2               	addwfc	fsr1h,w,c
 25724  012EE2  6EEA               	movwf	fsr0h,c
 25725  012EE4  50EF               	movf	indf0,w,c
 25726  012EE6  26DE               	addwf	postinc2,f,c
 25727  012EE8  0E00               	movlw	0
 25728  012EEA  22DE               	addwfc	postinc2,f,c
 25729  012EEC  22DE               	addwfc	postinc2,f,c
 25730  012EEE  22DE               	addwfc	postinc2,f,c
 25731                           
 25732                           ;stkvar	_grs @ sp[(-13)+4]
 25733  012EF0  50E1               	movf	fsr1l,w,c
 25734  012EF2  0FF7               	addlw	-9
 25735  012EF4  6ED9               	movwf	fsr2l,c
 25736  012EF6  50E2               	movf	fsr1h,w,c
 25737  012EF8  6EDA               	movwf	fsr2h,c
 25738  012EFA  0EFF               	movlw	255
 25739  012EFC  22DA               	addwfc	fsr2h,f,c
 25740  012EFE  0E08               	movlw	8
 25741  012F00                     u6385:
 25742  012F00  90D8               	bcf	status,0,c
 25743  012F02  36DE               	rlcf	postinc2,f,c
 25744  012F04  36DE               	rlcf	postinc2,f,c
 25745  012F06  36DE               	rlcf	postinc2,f,c
 25746  012F08  36DD               	rlcf	postdec2,f,c
 25747  012F0A  52DD               	movf	postdec2,f,c
 25748  012F0C  52DD               	movf	postdec2,f,c
 25749  012F0E  2EE8               	decfsz	wreg,f,c
 25750  012F10  D7F7               	goto	u6385
 25751                           
 25752                           ;stkvar	_b @ sp[(-13)+-4]
 25753  012F12  0EF0               	movlw	240
 25754  012F14  24E1               	addwf	fsr1l,w,c
 25755  012F16  6ED9               	movwf	fsr2l,c
 25756  012F18  0EFF               	movlw	255
 25757  012F1A  20E2               	addwfc	fsr1h,w,c
 25758  012F1C  6EDA               	movwf	fsr2h,c
 25759  012F1E  50DF               	movf	indf2,w,c
 25760  012F20  6E0C               	movwf	(btemp+11)^0,c
 25761                           
 25762                           ;stkvar	_a @ sp[(-13)+-8]
 25763  012F22  0EEB               	movlw	-21
 25764  012F24  50E3               	movf	plusw1,w,c
 25765  012F26  020C               	mulwf	(btemp+11)^0,c
 25766                           
 25767                           ;stkvar	_temp @ sp[(-13)+8]
 25768  012F28  0EFB               	movlw	-5
 25769  012F2A  006F FFCF FFE3     	movff	prodl,plusw1
 25770  012F30  0EFC               	movlw	-4
 25771  012F32  006F FFD3 FFE3     	movff	prodh,plusw1
 25772                           
 25773                           ;stkvar	_temp @ sp[(-13)+8]
 25774  012F38  0EFB               	movlw	-5
 25775  012F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25776  012F40  0EFC               	movlw	-4
 25777  012F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 25778                           
 25779                           ;stkvar	_grs @ sp[(-13)+4]
 25780  012F48  50E1               	movf	fsr1l,w,c
 25781  012F4A  0FF7               	addlw	-9
 25782  012F4C  6ED9               	movwf	fsr2l,c
 25783  012F4E  50E2               	movf	fsr1h,w,c
 25784  012F50  6EDA               	movwf	fsr2h,c
 25785  012F52  0EFF               	movlw	255
 25786  012F54  22DA               	addwfc	fsr2h,f,c
 25787  012F56  500B               	movf	(btemp+10)^0,w,c
 25788  012F58  26DE               	addwf	postinc2,f,c
 25789  012F5A  500C               	movf	(btemp+11)^0,w,c
 25790  012F5C  22DE               	addwfc	postinc2,f,c
 25791  012F5E  0E00               	movlw	0
 25792  012F60  22DE               	addwfc	postinc2,f,c
 25793  012F62  22DE               	addwfc	postinc2,f,c
 25794                           
 25795                           ;stkvar	_b @ sp[(-13)+-4]
 25796  012F64  0EEF               	movlw	-17
 25797  012F66  006F FF8C  F00C    	movff	plusw1,btemp+11
 25798                           
 25799                           ;stkvar	_a @ sp[(-13)+-8]
 25800  012F6C  0EEC               	movlw	236
 25801  012F6E  24E1               	addwf	fsr1l,w,c
 25802  012F70  6ED9               	movwf	fsr2l,c
 25803  012F72  0EFF               	movlw	255
 25804  012F74  20E2               	addwfc	fsr1h,w,c
 25805  012F76  6EDA               	movwf	fsr2h,c
 25806  012F78  50DF               	movf	indf2,w,c
 25807  012F7A  020C               	mulwf	(btemp+11)^0,c
 25808                           
 25809                           ;stkvar	_temp @ sp[(-13)+8]
 25810  012F7C  0EFB               	movlw	-5
 25811  012F7E  006F FFCF FFE3     	movff	prodl,plusw1
 25812  012F84  0EFC               	movlw	-4
 25813  012F86  006F FFD3 FFE3     	movff	prodh,plusw1
 25814                           
 25815                           ;stkvar	_temp @ sp[(-13)+8]
 25816  012F8C  0EFB               	movlw	-5
 25817  012F8E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25818  012F94  0EFC               	movlw	-4
 25819  012F96  006F FF8C  F00C    	movff	plusw1,btemp+11
 25820                           
 25821                           ;stkvar	_grs @ sp[(-13)+4]
 25822  012F9C  50E1               	movf	fsr1l,w,c
 25823  012F9E  0FF7               	addlw	-9
 25824  012FA0  6ED9               	movwf	fsr2l,c
 25825  012FA2  50E2               	movf	fsr1h,w,c
 25826  012FA4  6EDA               	movwf	fsr2h,c
 25827  012FA6  0EFF               	movlw	255
 25828  012FA8  22DA               	addwfc	fsr2h,f,c
 25829  012FAA  500B               	movf	(btemp+10)^0,w,c
 25830  012FAC  26DE               	addwf	postinc2,f,c
 25831  012FAE  500C               	movf	(btemp+11)^0,w,c
 25832  012FB0  22DE               	addwfc	postinc2,f,c
 25833  012FB2  0E00               	movlw	0
 25834  012FB4  22DE               	addwfc	postinc2,f,c
 25835  012FB6  22DE               	addwfc	postinc2,f,c
 25836                           
 25837                           ;stkvar	_grs @ sp[(-13)+4]
 25838  012FB8  50E1               	movf	fsr1l,w,c
 25839  012FBA  0FF7               	addlw	-9
 25840  012FBC  6ED9               	movwf	fsr2l,c
 25841  012FBE  50E2               	movf	fsr1h,w,c
 25842  012FC0  6EDA               	movwf	fsr2h,c
 25843  012FC2  0EFF               	movlw	255
 25844  012FC4  22DA               	addwfc	fsr2h,f,c
 25845  012FC6  0E08               	movlw	8
 25846  012FC8                     u6395:
 25847  012FC8  90D8               	bcf	status,0,c
 25848  012FCA  36DE               	rlcf	postinc2,f,c
 25849  012FCC  36DE               	rlcf	postinc2,f,c
 25850  012FCE  36DE               	rlcf	postinc2,f,c
 25851  012FD0  36DD               	rlcf	postdec2,f,c
 25852  012FD2  52DD               	movf	postdec2,f,c
 25853  012FD4  52DD               	movf	postdec2,f,c
 25854  012FD6  2EE8               	decfsz	wreg,f,c
 25855  012FD8  D7F7               	goto	u6395
 25856                           
 25857                           ;stkvar	_b @ sp[(-13)+-4]
 25858  012FDA  0EEF               	movlw	-17
 25859  012FDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25860                           
 25861                           ;stkvar	_a @ sp[(-13)+-8]
 25862  012FE2  0EEB               	movlw	-21
 25863  012FE4  50E3               	movf	plusw1,w,c
 25864  012FE6  020C               	mulwf	(btemp+11)^0,c
 25865                           
 25866                           ;stkvar	_temp @ sp[(-13)+8]
 25867  012FE8  0EFB               	movlw	-5
 25868  012FEA  006F FFCF FFE3     	movff	prodl,plusw1
 25869  012FF0  0EFC               	movlw	-4
 25870  012FF2  006F FFD3 FFE3     	movff	prodh,plusw1
 25871                           
 25872                           ;stkvar	_temp @ sp[(-13)+8]
 25873  012FF8  0EFB               	movlw	-5
 25874  012FFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 25875  013000  0EFC               	movlw	-4
 25876  013002  006F FF8C  F00C    	movff	plusw1,btemp+11
 25877                           
 25878                           ;stkvar	_grs @ sp[(-13)+4]
 25879  013008  50E1               	movf	fsr1l,w,c
 25880  01300A  0FF7               	addlw	-9
 25881  01300C  6ED9               	movwf	fsr2l,c
 25882  01300E  50E2               	movf	fsr1h,w,c
 25883  013010  6EDA               	movwf	fsr2h,c
 25884  013012  0EFF               	movlw	255
 25885  013014  22DA               	addwfc	fsr2h,f,c
 25886  013016  500B               	movf	(btemp+10)^0,w,c
 25887  013018  26DE               	addwf	postinc2,f,c
 25888  01301A  500C               	movf	(btemp+11)^0,w,c
 25889  01301C  22DE               	addwfc	postinc2,f,c
 25890  01301E  0E00               	movlw	0
 25891  013020  22DE               	addwfc	postinc2,f,c
 25892  013022  22DE               	addwfc	postinc2,f,c
 25893                           
 25894                           ;stkvar	_b @ sp[(-13)+-4]
 25895  013024  0EF0               	movlw	240
 25896  013026  24E1               	addwf	fsr1l,w,c
 25897  013028  6ED9               	movwf	fsr2l,c
 25898  01302A  0EFF               	movlw	255
 25899  01302C  20E2               	addwfc	fsr1h,w,c
 25900  01302E  6EDA               	movwf	fsr2h,c
 25901  013030  50DF               	movf	indf2,w,c
 25902  013032  6E0C               	movwf	(btemp+11)^0,c
 25903                           
 25904                           ;stkvar	_a @ sp[(-13)+-8]
 25905  013034  0EED               	movlw	237
 25906  013036  24E1               	addwf	fsr1l,w,c
 25907  013038  6ED9               	movwf	fsr2l,c
 25908  01303A  0EFF               	movlw	255
 25909  01303C  20E2               	addwfc	fsr1h,w,c
 25910  01303E  6EDA               	movwf	fsr2h,c
 25911  013040  50DF               	movf	indf2,w,c
 25912  013042  020C               	mulwf	(btemp+11)^0,c
 25913                           
 25914                           ;stkvar	_temp @ sp[(-13)+8]
 25915  013044  0EFB               	movlw	-5
 25916  013046  006F FFCF FFE3     	movff	prodl,plusw1
 25917  01304C  0EFC               	movlw	-4
 25918  01304E  006F FFD3 FFE3     	movff	prodh,plusw1
 25919                           
 25920                           ;stkvar	_temp @ sp[(-13)+8]
 25921  013054  0EFB               	movlw	-5
 25922  013056  006F FF8C  F00B    	movff	plusw1,btemp+10
 25923  01305C  0EFC               	movlw	-4
 25924  01305E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25925                           
 25926                           ;stkvar	_prod @ sp[(-13)+0]
 25927  013064  50E1               	movf	fsr1l,w,c
 25928  013066  0FF3               	addlw	-13
 25929  013068  6ED9               	movwf	fsr2l,c
 25930  01306A  50E2               	movf	fsr1h,w,c
 25931  01306C  6EDA               	movwf	fsr2h,c
 25932  01306E  0EFF               	movlw	255
 25933  013070  22DA               	addwfc	fsr2h,f,c
 25934  013072  500B               	movf	(btemp+10)^0,w,c
 25935  013074  26DE               	addwf	postinc2,f,c
 25936  013076  500C               	movf	(btemp+11)^0,w,c
 25937  013078  22DE               	addwfc	postinc2,f,c
 25938  01307A  0E00               	movlw	0
 25939  01307C  22DE               	addwfc	postinc2,f,c
 25940  01307E  22DE               	addwfc	postinc2,f,c
 25941                           
 25942                           ;stkvar	_b @ sp[(-13)+-4]
 25943  013080  0EF1               	movlw	241
 25944  013082  24E1               	addwf	fsr1l,w,c
 25945  013084  6ED9               	movwf	fsr2l,c
 25946  013086  0EFF               	movlw	255
 25947  013088  20E2               	addwfc	fsr1h,w,c
 25948  01308A  6EDA               	movwf	fsr2h,c
 25949  01308C  50DF               	movf	indf2,w,c
 25950  01308E  6E0C               	movwf	(btemp+11)^0,c
 25951                           
 25952                           ;stkvar	_a @ sp[(-13)+-8]
 25953  013090  0EEC               	movlw	236
 25954  013092  24E1               	addwf	fsr1l,w,c
 25955  013094  6ED9               	movwf	fsr2l,c
 25956  013096  0EFF               	movlw	255
 25957  013098  20E2               	addwfc	fsr1h,w,c
 25958  01309A  6EDA               	movwf	fsr2h,c
 25959  01309C  50DF               	movf	indf2,w,c
 25960  01309E  020C               	mulwf	(btemp+11)^0,c
 25961                           
 25962                           ;stkvar	_temp @ sp[(-13)+8]
 25963  0130A0  0EFB               	movlw	-5
 25964  0130A2  006F FFCF FFE3     	movff	prodl,plusw1
 25965  0130A8  0EFC               	movlw	-4
 25966  0130AA  006F FFD3 FFE3     	movff	prodh,plusw1
 25967                           
 25968                           ;stkvar	_temp @ sp[(-13)+8]
 25969  0130B0  0EFB               	movlw	-5
 25970  0130B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25971  0130B8  0EFC               	movlw	-4
 25972  0130BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25973                           
 25974                           ;stkvar	_prod @ sp[(-13)+0]
 25975  0130C0  50E1               	movf	fsr1l,w,c
 25976  0130C2  0FF3               	addlw	-13
 25977  0130C4  6ED9               	movwf	fsr2l,c
 25978  0130C6  50E2               	movf	fsr1h,w,c
 25979  0130C8  6EDA               	movwf	fsr2h,c
 25980  0130CA  0EFF               	movlw	255
 25981  0130CC  22DA               	addwfc	fsr2h,f,c
 25982  0130CE  500B               	movf	(btemp+10)^0,w,c
 25983  0130D0  26DE               	addwf	postinc2,f,c
 25984  0130D2  500C               	movf	(btemp+11)^0,w,c
 25985  0130D4  22DE               	addwfc	postinc2,f,c
 25986  0130D6  0E00               	movlw	0
 25987  0130D8  22DE               	addwfc	postinc2,f,c
 25988  0130DA  22DE               	addwfc	postinc2,f,c
 25989                           
 25990                           ;stkvar	_b @ sp[(-13)+-4]
 25991  0130DC  0EF1               	movlw	241
 25992  0130DE  24E1               	addwf	fsr1l,w,c
 25993  0130E0  6ED9               	movwf	fsr2l,c
 25994  0130E2  0EFF               	movlw	255
 25995  0130E4  20E2               	addwfc	fsr1h,w,c
 25996  0130E6  6EDA               	movwf	fsr2h,c
 25997  0130E8  50DF               	movf	indf2,w,c
 25998  0130EA  6E0C               	movwf	(btemp+11)^0,c
 25999                           
 26000                           ;stkvar	_a @ sp[(-13)+-8]
 26001  0130EC  0EED               	movlw	237
 26002  0130EE  24E1               	addwf	fsr1l,w,c
 26003  0130F0  6ED9               	movwf	fsr2l,c
 26004  0130F2  0EFF               	movlw	255
 26005  0130F4  20E2               	addwfc	fsr1h,w,c
 26006  0130F6  6EDA               	movwf	fsr2h,c
 26007  0130F8  50DF               	movf	indf2,w,c
 26008  0130FA  020C               	mulwf	(btemp+11)^0,c
 26009                           
 26010                           ;stkvar	_temp @ sp[(-13)+8]
 26011  0130FC  0EFB               	movlw	-5
 26012  0130FE  006F FFCF FFE3     	movff	prodl,plusw1
 26013  013104  0EFC               	movlw	-4
 26014  013106  006F FFD3 FFE3     	movff	prodh,plusw1
 26015                           
 26016                           ;stkvar	_temp @ sp[(-13)+8]
 26017  01310C  0EFB               	movlw	-5
 26018  01310E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26019  013114  0EFC               	movlw	-4
 26020  013116  006F FF8C  F00C    	movff	plusw1,btemp+11
 26021  01311C  500B               	movf	(btemp+10)^0,w,c
 26022  01311E  6E05               	movwf	(btemp+4)^0,c
 26023  013120  500C               	movf	(btemp+11)^0,w,c
 26024  013122  6E06               	movwf	(btemp+5)^0,c
 26025  013124  6A07               	clrf	(btemp+6)^0,c
 26026  013126  6A08               	clrf	(btemp+7)^0,c
 26027  013128  0060  F01C  F008   	movff	btemp+6,btemp+7
 26028  01312E  0060  F018  F007   	movff	btemp+5,btemp+6
 26029  013134  0060  F014  F006   	movff	btemp+4,btemp+5
 26030  01313A  6A05               	clrf	(btemp+4)^0,c
 26031                           
 26032                           ;stkvar	_prod @ sp[(-13)+0]
 26033  01313C  50E1               	movf	fsr1l,w,c
 26034  01313E  0FF3               	addlw	-13
 26035  013140  6ED9               	movwf	fsr2l,c
 26036  013142  50E2               	movf	fsr1h,w,c
 26037  013144  6EDA               	movwf	fsr2h,c
 26038  013146  0EFF               	movlw	255
 26039  013148  22DA               	addwfc	fsr2h,f,c
 26040  01314A  5005               	movf	(btemp+4)^0,w,c
 26041  01314C  26DE               	addwf	postinc2,f,c
 26042  01314E  5006               	movf	(btemp+5)^0,w,c
 26043  013150  22DE               	addwfc	postinc2,f,c
 26044  013152  5007               	movf	(btemp+6)^0,w,c
 26045  013154  22DE               	addwfc	postinc2,f,c
 26046  013156  5008               	movf	(btemp+7)^0,w,c
 26047  013158  22DE               	addwfc	postinc2,f,c
 26048                           
 26049                           ;stkvar	_prod @ sp[(-13)+0]
 26050  01315A  50E1               	movf	fsr1l,w,c
 26051  01315C  0FF3               	addlw	-13
 26052  01315E  6ED9               	movwf	fsr2l,c
 26053  013160  50E2               	movf	fsr1h,w,c
 26054  013162  6EDA               	movwf	fsr2h,c
 26055  013164  0EFF               	movlw	255
 26056  013166  22DA               	addwfc	fsr2h,f,c
 26057                           
 26058                           ;stkvar	_grs @ sp[(-13)+4]
 26059  013168  0EFA               	movlw	250
 26060  01316A  24E1               	addwf	fsr1l,w,c
 26061  01316C  6EE9               	movwf	fsr0l,c
 26062  01316E  0EFF               	movlw	255
 26063  013170  20E2               	addwfc	fsr1h,w,c
 26064  013172  6EEA               	movwf	fsr0h,c
 26065  013174  50EF               	movf	indf0,w,c
 26066  013176  26DE               	addwf	postinc2,f,c
 26067  013178  0E00               	movlw	0
 26068  01317A  22DE               	addwfc	postinc2,f,c
 26069  01317C  22DE               	addwfc	postinc2,f,c
 26070  01317E  22DE               	addwfc	postinc2,f,c
 26071                           
 26072                           ;stkvar	_grs @ sp[(-13)+4]
 26073  013180  50E1               	movf	fsr1l,w,c
 26074  013182  0FF7               	addlw	-9
 26075  013184  6ED9               	movwf	fsr2l,c
 26076  013186  50E2               	movf	fsr1h,w,c
 26077  013188  6EDA               	movwf	fsr2h,c
 26078  01318A  0EFF               	movlw	255
 26079  01318C  22DA               	addwfc	fsr2h,f,c
 26080  01318E  0E08               	movlw	8
 26081  013190                     u6405:
 26082  013190  90D8               	bcf	status,0,c
 26083  013192  36DE               	rlcf	postinc2,f,c
 26084  013194  36DE               	rlcf	postinc2,f,c
 26085  013196  36DE               	rlcf	postinc2,f,c
 26086  013198  36DD               	rlcf	postdec2,f,c
 26087  01319A  52DD               	movf	postdec2,f,c
 26088  01319C  52DD               	movf	postdec2,f,c
 26089  01319E  2EE8               	decfsz	wreg,f,c
 26090  0131A0  D7F7               	goto	u6405
 26091  0131A2  0E82               	movlw	130
 26092  0131A4  6E0B               	movwf	(btemp+10)^0,c
 26093  0131A6  0EFF               	movlw	255
 26094  0131A8  6E0C               	movwf	(btemp+11)^0,c
 26095                           
 26096                           ;stkvar	_bexp @ sp[(-13)+10]
 26097  0131AA  0EFD               	movlw	-3
 26098  0131AC  50E3               	movf	plusw1,w,c
 26099  0131AE  6E09               	movwf	(btemp+8)^0,c
 26100  0131B0  6A0A               	clrf	(btemp+9)^0,c
 26101                           
 26102                           ;stkvar	_aexp @ sp[(-13)+11]
 26103  0131B2  0EFE               	movlw	-2
 26104  0131B4  50E3               	movf	plusw1,w,c
 26105  0131B6  2609               	addwf	(btemp+8)^0,f,c
 26106  0131B8  0E00               	movlw	0
 26107  0131BA  220A               	addwfc	(btemp+9)^0,f,c
 26108  0131BC  500B               	movf	(btemp+10)^0,w,c
 26109  0131BE  2609               	addwf	(btemp+8)^0,f,c
 26110  0131C0  500C               	movf	(btemp+11)^0,w,c
 26111  0131C2  220A               	addwfc	(btemp+9)^0,f,c
 26112                           
 26113                           ;stkvar	_temp @ sp[(-13)+8]
 26114  0131C4  0EFB               	movlw	-5
 26115  0131C6  0060  F027  FFE3   	movff	btemp+8,plusw1
 26116  0131CC  0EFC               	movlw	-4
 26117  0131CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26118  0131D4  D021               	goto	l7837
 26119  0131D6                     l7827:
 26120                           
 26121                           ;stkvar	_prod @ sp[(-13)+0]
 26122  0131D6  90D8               	bcf	status,0,c
 26123  0131D8  0EF3               	movlw	-13
 26124  0131DA  36E3               	rlcf	plusw1,f,c
 26125  0131DC  0EF4               	movlw	-12
 26126  0131DE  36E3               	rlcf	plusw1,f,c
 26127  0131E0  0EF5               	movlw	-11
 26128  0131E2  36E3               	rlcf	plusw1,f,c
 26129  0131E4  0EF6               	movlw	-10
 26130  0131E6  36E3               	rlcf	plusw1,f,c
 26131                           
 26132                           ;stkvar	_grs @ sp[(-13)+4]
 26133  0131E8  0EFA               	movlw	-6
 26134  0131EA  AEE3               	btfss	plusw1,7,c
 26135  0131EC  D002               	goto	l7833
 26136                           
 26137                           ;stkvar	_prod @ sp[(-13)+0]
 26138  0131EE  0EF3               	movlw	-13
 26139  0131F0  80E3               	bsf	plusw1,0,c
 26140  0131F2                     l7833:
 26141                           
 26142                           ;stkvar	_grs @ sp[(-13)+4]
 26143  0131F2  90D8               	bcf	status,0,c
 26144  0131F4  0EF7               	movlw	-9
 26145  0131F6  36E3               	rlcf	plusw1,f,c
 26146  0131F8  0EF8               	movlw	-8
 26147  0131FA  36E3               	rlcf	plusw1,f,c
 26148  0131FC  0EF9               	movlw	-7
 26149  0131FE  36E3               	rlcf	plusw1,f,c
 26150  013200  0EFA               	movlw	-6
 26151  013202  36E3               	rlcf	plusw1,f,c
 26152                           
 26153                           ;stkvar	_temp @ sp[(-13)+8]
 26154  013204  50E1               	movf	fsr1l,w,c
 26155  013206  0FFB               	addlw	-5
 26156  013208  6ED9               	movwf	fsr2l,c
 26157  01320A  50E2               	movf	fsr1h,w,c
 26158  01320C  6EDA               	movwf	fsr2h,c
 26159  01320E  0EFF               	movlw	255
 26160  013210  22DA               	addwfc	fsr2h,f,c
 26161  013212  06DE               	decf	postinc2,f,c
 26162  013214  0E00               	movlw	0
 26163  013216  5ADD               	subwfb	postdec2,f,c
 26164  013218                     l7837:
 26165                           
 26166                           ;stkvar	_prod @ sp[(-13)+0]
 26167  013218  0EF5               	movlw	-11
 26168  01321A  AEE3               	btfss	plusw1,7,c
 26169  01321C  D7DC               	goto	l7827
 26170                           
 26171                           ;stkvar	_aexp @ sp[(-13)+11]
 26172  01321E  0EFE               	movlw	-2
 26173  013220  6AE3               	clrf	plusw1,c
 26174                           
 26175                           ;stkvar	_grs @ sp[(-13)+4]
 26176  013222  0EFA               	movlw	-6
 26177  013224  AEE3               	btfss	plusw1,7,c
 26178  013226  D020               	goto	l7851
 26179                           
 26180                           ;stkvar	_grs @ sp[(-13)+4]
 26181  013228  50E1               	movf	fsr1l,w,c
 26182  01322A  0FF7               	addlw	-9
 26183  01322C  6ED9               	movwf	fsr2l,c
 26184  01322E  50E2               	movf	fsr1h,w,c
 26185  013230  6EDA               	movwf	fsr2h,c
 26186  013232  0EFF               	movlw	255
 26187  013234  22DA               	addwfc	fsr2h,f,c
 26188  013236  0EFF               	movlw	255
 26189  013238  14DE               	andwf	postinc2,w,c
 26190  01323A  6E09               	movwf	(btemp+8)^0,c
 26191  01323C  0EFF               	movlw	255
 26192  01323E  14DE               	andwf	postinc2,w,c
 26193  013240  6E0A               	movwf	(btemp+9)^0,c
 26194  013242  0EFF               	movlw	255
 26195  013244  14DE               	andwf	postinc2,w,c
 26196  013246  6E0B               	movwf	(btemp+10)^0,c
 26197  013248  0E7F               	movlw	127
 26198  01324A  14DE               	andwf	postinc2,w,c
 26199  01324C  6E0C               	movwf	(btemp+11)^0,c
 26200  01324E  5009               	movf	(btemp+8)^0,w,c
 26201  013250  100A               	iorwf	(btemp+9)^0,w,c
 26202  013252  100B               	iorwf	(btemp+10)^0,w,c
 26203  013254  100C               	iorwf	(btemp+11)^0,w,c
 26204  013256  B4D8               	btfsc	status,2,c
 26205  013258  D004               	goto	l7847
 26206  01325A                     u6440:
 26207                           
 26208                           ;stkvar	_aexp @ sp[(-13)+11]
 26209  01325A  0EFE               	movlw	-2
 26210  01325C  6AE3               	clrf	plusw1,c
 26211  01325E  2AE3               	incf	plusw1,f,c
 26212  013260  D003               	goto	l7851
 26213  013262                     l7847:
 26214                           
 26215                           ;stkvar	_prod @ sp[(-13)+0]
 26216  013262  0EF3               	movlw	-13
 26217  013264  B0E3               	btfsc	plusw1,0,c
 26218  013266  D7F9               	goto	u6440
 26219  013268                     l7851:
 26220                           
 26221                           ;stkvar	_aexp @ sp[(-13)+11]
 26222  013268  0EFE               	movlw	-2
 26223  01326A  50E3               	movf	plusw1,w,c
 26224  01326C  B4D8               	btfsc	status,2,c
 26225  01326E  D036               	goto	l7861
 26226                           
 26227                           ;stkvar	_prod @ sp[(-13)+0]
 26228  013270  50E1               	movf	fsr1l,w,c
 26229  013272  0FF3               	addlw	-13
 26230  013274  6ED9               	movwf	fsr2l,c
 26231  013276  50E2               	movf	fsr1h,w,c
 26232  013278  6EDA               	movwf	fsr2h,c
 26233  01327A  0EFF               	movlw	255
 26234  01327C  22DA               	addwfc	fsr2h,f,c
 26235  01327E  2ADE               	incf	postinc2,f,c
 26236  013280  0E00               	movlw	0
 26237  013282  22DE               	addwfc	postinc2,f,c
 26238  013284  22DE               	addwfc	postinc2,f,c
 26239  013286  22DE               	addwfc	postinc2,f,c
 26240                           
 26241                           ;stkvar	_prod @ sp[(-13)+0]
 26242  013288  0EF6               	movlw	-10
 26243  01328A  A0E3               	btfss	plusw1,0,c
 26244  01328C  D027               	goto	l7861
 26245  01328E  0E01               	movlw	1
 26246  013290  6E0C               	movwf	(btemp+11)^0,c
 26247                           
 26248                           ;stkvar	_prod @ sp[(-13)+0]
 26249  013292  50E1               	movf	fsr1l,w,c
 26250  013294  0FF3               	addlw	-13
 26251  013296  6ED9               	movwf	fsr2l,c
 26252  013298  50E2               	movf	fsr1h,w,c
 26253  01329A  6EDA               	movwf	fsr2h,c
 26254  01329C  0EFF               	movlw	255
 26255  01329E  22DA               	addwfc	fsr2h,f,c
 26256  0132A0  280C               	incf	(btemp+11)^0,w,c
 26257  0132A2  52DE               	movf	postinc2,f,c
 26258  0132A4  D008               	goto	u6480
 26259  0132A6                     u6485:
 26260  0132A6  52DE               	movf	postinc2,f,c
 26261  0132A8  90D8               	bcf	status,0,c
 26262  0132AA  BEDC               	btfsc	preinc2,7,c
 26263  0132AC  80D8               	bsf	status,0,c
 26264  0132AE  32DD               	rrcf	postdec2,f,c
 26265  0132B0  32DD               	rrcf	postdec2,f,c
 26266  0132B2  32DD               	rrcf	postdec2,f,c
 26267  0132B4  32DE               	rrcf	postinc2,f,c
 26268  0132B6                     u6480:
 26269  0132B6  2EE8               	decfsz	wreg,f,c
 26270  0132B8  D7F6               	goto	u6485
 26271                           
 26272                           ;stkvar	_temp @ sp[(-13)+8]
 26273  0132BA  0EFB               	movlw	-5
 26274  0132BC  50E3               	movf	plusw1,w,c
 26275  0132BE  0F01               	addlw	1
 26276  0132C0  6E01               	movwf	btemp^0,c
 26277  0132C2  0EFB               	movlw	-5
 26278  0132C4  0060  F007  FFE3   	movff	btemp,plusw1
 26279  0132CA  6A01               	clrf	btemp^0,c
 26280  0132CC  0EFC               	movlw	-4
 26281  0132CE  50E3               	movf	plusw1,w,c
 26282  0132D0  2001               	addwfc	btemp^0,w,c
 26283  0132D2  6E01               	movwf	btemp^0,c
 26284  0132D4  0EFC               	movlw	-4
 26285  0132D6  0060  F007  FFE3   	movff	btemp,plusw1
 26286  0132DC                     l7861:
 26287                           
 26288                           ;stkvar	_temp @ sp[(-13)+8]
 26289  0132DC  0EFC               	movlw	-4
 26290  0132DE  BEE3               	btfsc	plusw1,7,c
 26291  0132E0  D020               	goto	l7865
 26292  0132E2  0EFC               	movlw	-4
 26293  0132E4  50E3               	movf	plusw1,w,c
 26294  0132E6  E104               	bnz	u6490
 26295  0132E8  0EFB               	movlw	-5
 26296  0132EA  28E3               	incf	plusw1,w,c
 26297  0132EC  A0D8               	btfss	status,0,c
 26298  0132EE  D019               	goto	l7865
 26299  0132F0                     u6490:
 26300  0132F0  0E00               	movlw	0
 26301  0132F2  6E09               	movwf	(btemp+8)^0,c
 26302  0132F4  0E00               	movlw	0
 26303  0132F6  6E0A               	movwf	(btemp+9)^0,c
 26304  0132F8  0E80               	movlw	128
 26305  0132FA  6E0B               	movwf	(btemp+10)^0,c
 26306  0132FC  0E7F               	movlw	127
 26307  0132FE  6E0C               	movwf	(btemp+11)^0,c
 26308                           
 26309                           ;stkvar	_prod @ sp[(-13)+0]
 26310  013300  0EF3               	movlw	-13
 26311  013302  0060  F027  FFE3   	movff	btemp+8,plusw1
 26312  013308  0EF4               	movlw	-12
 26313  01330A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26314  013310  0EF5               	movlw	-11
 26315  013312  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26316  013318  0EF6               	movlw	-10
 26317  01331A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26318  013320  D044               	goto	l7881
 26319  013322                     l7865:
 26320                           
 26321                           ;stkvar	_temp @ sp[(-13)+8]
 26322  013322  0EFC               	movlw	-4
 26323  013324  BEE3               	btfsc	plusw1,7,c
 26324  013326  D007               	goto	u6500
 26325  013328  0EFC               	movlw	-4
 26326  01332A  50E3               	movf	plusw1,w,c
 26327  01332C  E10F               	bnz	l7871
 26328  01332E  0EFB               	movlw	-5
 26329  013330  04E3               	decf	plusw1,w,c
 26330  013332  B0D8               	btfsc	status,0,c
 26331  013334  D00B               	goto	l7871
 26332  013336                     u6500:
 26333                           
 26334                           ;stkvar	_prod @ sp[(-13)+0]
 26335  013336  0EF3               	movlw	-13
 26336  013338  6AE3               	clrf	plusw1,c
 26337  01333A  0EF4               	movlw	-12
 26338  01333C  6AE3               	clrf	plusw1,c
 26339  01333E  0EF5               	movlw	-11
 26340  013340  6AE3               	clrf	plusw1,c
 26341  013342  0EF6               	movlw	-10
 26342  013344  6AE3               	clrf	plusw1,c
 26343                           
 26344                           ;stkvar	_sign @ sp[(-13)+12]
 26345  013346  0EFF               	movlw	-1
 26346  013348  6AE3               	clrf	plusw1,c
 26347  01334A  D02F               	goto	l7881
 26348  01334C                     l7871:
 26349                           
 26350                           ;stkvar	_temp @ sp[(-13)+8]
 26351                           ;stkvar	_bexp @ sp[(-13)+10]
 26352  01334C  0EFB               	movlw	-5
 26353  01334E  006F FF8C  F001    	movff	plusw1,btemp
 26354  013354  0EFD               	movlw	-3
 26355  013356  0060  F007  FFE3   	movff	btemp,plusw1
 26356                           
 26357                           ;stkvar	_prod @ sp[(-13)+0]
 26358  01335C  50E1               	movf	fsr1l,w,c
 26359  01335E  0FF3               	addlw	-13
 26360  013360  6ED9               	movwf	fsr2l,c
 26361  013362  50E2               	movf	fsr1h,w,c
 26362  013364  6EDA               	movwf	fsr2h,c
 26363  013366  0EFF               	movlw	255
 26364  013368  22DA               	addwfc	fsr2h,f,c
 26365  01336A  0EFF               	movlw	255
 26366  01336C  16DE               	andwf	postinc2,f,c
 26367  01336E  0EFF               	movlw	255
 26368  013370  16DE               	andwf	postinc2,f,c
 26369  013372  0E7F               	movlw	127
 26370  013374  16DE               	andwf	postinc2,f,c
 26371  013376  0E00               	movlw	0
 26372  013378  16DE               	andwf	postinc2,f,c
 26373                           
 26374                           ;stkvar	_bexp @ sp[(-13)+10]
 26375  01337A  0EFD               	movlw	-3
 26376  01337C  A0E3               	btfss	plusw1,0,c
 26377  01337E  D008               	goto	l7879
 26378                           
 26379                           ;stkvar	_prod @ sp[(-13)+0]
 26380  013380  0EF5               	movlw	245
 26381  013382  24E1               	addwf	fsr1l,w,c
 26382  013384  6ED9               	movwf	fsr2l,c
 26383  013386  0EFF               	movlw	255
 26384  013388  20E2               	addwfc	fsr1h,w,c
 26385  01338A  6EDA               	movwf	fsr2h,c
 26386  01338C  0E00               	movlw	0
 26387  01338E  8EDB               	bsf	plusw2,7,c
 26388  013390                     l7879:
 26389                           
 26390                           ;stkvar	_prod @ sp[(-13)+0]
 26391  013390  0EF6               	movlw	246
 26392  013392  24E1               	addwf	fsr1l,w,c
 26393  013394  6ED9               	movwf	fsr2l,c
 26394  013396  0EFF               	movlw	255
 26395  013398  20E2               	addwfc	fsr1h,w,c
 26396  01339A  6EDA               	movwf	fsr2h,c
 26397                           
 26398                           ;stkvar	_bexp @ sp[(-13)+10]
 26399  01339C  0EFD               	movlw	-3
 26400  01339E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26401  0133A4  90D8               	bcf	status,0,c
 26402  0133A6  300C               	rrcf	(btemp+11)^0,w,c
 26403  0133A8  6EDF               	movwf	indf2,c
 26404  0133AA                     l7881:
 26405                           
 26406                           ;stkvar	_sign @ sp[(-13)+12]
 26407  0133AA  0EFF               	movlw	-1
 26408  0133AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 26409                           
 26410                           ;stkvar	_prod @ sp[(-13)+0]
 26411  0133B2  0EF6               	movlw	246
 26412  0133B4  24E1               	addwf	fsr1l,w,c
 26413  0133B6  6ED9               	movwf	fsr2l,c
 26414  0133B8  0EFF               	movlw	255
 26415  0133BA  20E2               	addwfc	fsr1h,w,c
 26416  0133BC  6EDA               	movwf	fsr2h,c
 26417  0133BE  500C               	movf	(btemp+11)^0,w,c
 26418  0133C0  12DF               	iorwf	indf2,f,c
 26419                           
 26420                           ;stkvar	_prod @ sp[(-13)+0]
 26421  0133C2  0EF3               	movlw	-13
 26422  0133C4  006F FF8C  F001    	movff	plusw1,btemp
 26423  0133CA  0EF4               	movlw	-12
 26424  0133CC  006F FF8C  F002    	movff	plusw1,btemp+1
 26425  0133D2  0EF5               	movlw	-11
 26426  0133D4  006F FF8C  F003    	movff	plusw1,btemp+2
 26427  0133DA  0EF6               	movlw	-10
 26428  0133DC  006F FF8C  F004    	movff	plusw1,btemp+3
 26429  0133E2                     l2888:
 26430                           
 26431                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26432  0133E2  0EEB               	movlw	235
 26433  0133E4  26E1               	addwf	fsr1l,f,c
 26434  0133E6  0EFF               	movlw	255
 26435  0133E8  22E2               	addwfc	fsr1h,f,c
 26436  0133EA  0012               	return		;funcret
 26437  0133EC                     __end_of___flmul:
 26438                           	opt callstack 0
 26439                           
 26440 ;; *************** function _SYSTEM_Initialize *****************
 26441 ;; Defined at:
 26442 ;;		line 50 in file "mcc_generated_files/mcc.c"
 26443 ;; Parameters:    Size  Location     Type
 26444 ;;		None
 26445 ;; Auto vars:     Size  Location     Type
 26446 ;;		None
 26447 ;; Return value:  Size  Location     Type
 26448 ;;                  1  [STACK] void 
 26449 ;; Registers used:
 26450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 26451 ;; Tracked objects:
 26452 ;;		On entry : 0/0
 26453 ;;		On exit  : 3F/3C
 26454 ;;		Unchanged: 0/0
 26455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26460 ;;Total ram usage:        0 bytes
 26461 ;; Hardware stack levels used:    1
 26462 ;; Hardware stack levels required when called:   17
 26463 ;; This function calls:
 26464 ;;		_ADCC_Initialize
 26465 ;;		_CLKREF_Initialize
 26466 ;;		_DMA1_Initialize
 26467 ;;		_DMA2_Initialize
 26468 ;;		_EXT_INT_Initialize
 26469 ;;		_FVR_Initialize
 26470 ;;		_INTERRUPT_Initialize
 26471 ;;		_OSCILLATOR_Initialize
 26472 ;;		_PIN_MANAGER_Initialize
 26473 ;;		_PMD_Initialize
 26474 ;;		_PWM8_Initialize
 26475 ;;		_SPI1_Initialize
 26476 ;;		_TMR2_Initialize
 26477 ;;		_TMR3_Initialize
 26478 ;;		_TMR5_Initialize
 26479 ;;		_TMR6_Initialize
 26480 ;;		_UART1_Initialize
 26481 ;;		_UART2_Initialize
 26482 ;; This function is called by:
 26483 ;;		_main
 26484 ;; This function uses a reentrant model
 26485 ;;
 26486                           
 26487                           	psect	text102
 26488  019BEA                     __ptext102:
 26489                           	opt callstack 0
 26490  019BEA                     _SYSTEM_Initialize:
 26491                           	opt callstack 13
 26492                           
 26493                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 26494                           
 26495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26496                           ;incstack = 0
 26497  019BEA  ECD5  F0CB         	call	_INTERRUPT_Initialize	;wreg free
 26498                           
 26499                           ; BSR set to: 57
 26500                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 26501  019BEE  EC04  F0D4         	call	_PMD_Initialize	;wreg free
 26502                           
 26503                           ; BSR set to: 57
 26504                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 26505  019BF2  EC9D  F0C9         	call	_PIN_MANAGER_Initialize	;wreg free
 26506                           
 26507                           ; BSR set to: 58
 26508                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 26509  019BF6  ECF9  F0D3         	call	_OSCILLATOR_Initialize	;wreg free
 26510                           
 26511                           ; BSR set to: 57
 26512                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 26513  019BFA  EC79  F0D4         	call	_FVR_Initialize	;wreg free
 26514                           
 26515                           ; BSR set to: 62
 26516                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 26517  019BFE  EC6A  F0CB         	call	_ADCC_Initialize	;wreg free
 26518                           
 26519                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 26520  019C02  ECEE  F0D3         	call	_PWM8_Initialize	;wreg free
 26521                           
 26522                           ; BSR set to: 63
 26523                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 26524  019C06  ECD7  F0D3         	call	_TMR2_Initialize	;wreg free
 26525                           
 26526                           ; BSR set to: 57
 26527                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 26528  019C0A  EC3B  F0D0         	call	_EXT_INT_Initialize	;wreg free
 26529                           
 26530                           ; BSR set to: 57
 26531                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 26532  019C0E  EC2A  F0D1         	call	_TMR6_Initialize	;wreg free
 26533                           
 26534                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 26535  019C12  ECCA  F0CE         	call	_TMR3_Initialize	;wreg free
 26536                           
 26537                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 26538  019C16  ECA7  F0CE         	call	_TMR5_Initialize	;wreg free
 26539                           
 26540                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 26541  019C1A  EC84  F0CE         	call	_UART1_Initialize	;wreg free
 26542                           
 26543                           ; BSR set to: 57
 26544                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 26545  019C1E  EC9C  F0CC         	call	_UART2_Initialize	;wreg free
 26546                           
 26547                           ; BSR set to: 57
 26548                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 26549  019C22  ECE3  F0D3         	call	_SPI1_Initialize	;wreg free
 26550                           
 26551                           ; BSR set to: 61
 26552                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 26553  019C26  ECF8  F0CC         	call	_DMA2_Initialize	;wreg free
 26554                           
 26555                           ; BSR set to: 59
 26556                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 26557  019C2A  EC35  F0CB         	call	_DMA1_Initialize	;wreg free
 26558                           
 26559                           ; BSR set to: 59
 26560                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 26561  019C2E  EC4D  F0D4         	call	_CLKREF_Initialize	;wreg free
 26562                           
 26563                           ; BSR set to: 60
 26564                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26565  019C32  0012               	return		;funcret
 26566  019C34                     __end_of_SYSTEM_Initialize:
 26567                           	opt callstack 0
 26568                           
 26569 ;; *************** function _UART2_Initialize *****************
 26570 ;; Defined at:
 26571 ;;		line 78 in file "mcc_generated_files/uart2.c"
 26572 ;; Parameters:    Size  Location     Type
 26573 ;;		None
 26574 ;; Auto vars:     Size  Location     Type
 26575 ;;		None
 26576 ;; Return value:  Size  Location     Type
 26577 ;;                  1  [STACK] void 
 26578 ;; Registers used:
 26579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26580 ;; Tracked objects:
 26581 ;;		On entry : 3F/39
 26582 ;;		On exit  : 3F/39
 26583 ;;		Unchanged: 0/0
 26584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26589 ;;Total ram usage:        0 bytes
 26590 ;; Hardware stack levels used:    1
 26591 ;; Hardware stack levels required when called:   16
 26592 ;; This function calls:
 26593 ;;		_UART2_SetRxInterruptHandler
 26594 ;;		_UART2_SetTxInterruptHandler
 26595 ;; This function is called by:
 26596 ;;		_SYSTEM_Initialize
 26597 ;; This function uses a reentrant model
 26598 ;;
 26599                           
 26600                           	psect	text103
 26601  019938                     __ptext103:
 26602                           	opt callstack 0
 26603  019938                     _UART2_Initialize:
 26604                           	opt callstack 13
 26605                           
 26606                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 26607                           
 26608                           ; BSR set to: 60
 26609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26610                           ;incstack = 0
 26611  019938  0139               	movlb	57	; () banked
 26612  01993A  9596               	bcf	150,2,b	;volatile
 26613                           
 26614                           ; BSR set to: 57
 26615                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 26616  01993C  0E26               	movlw	low _UART2_Receive_ISR
 26617  01993E  6EE6               	movwf	postinc1,c
 26618  019940  0EA7               	movlw	high _UART2_Receive_ISR
 26619  019942  6EE6               	movwf	postinc1,c
 26620  019944  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 26621  019946  6EE6               	movwf	postinc1,c
 26622  019948  ECB7  F0D1         	call	_UART2_SetRxInterruptHandler	;wreg free
 26623                           
 26624                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 26625  01994C  0139               	movlb	57	; () banked
 26626  01994E  9796               	bcf	150,3,b	;volatile
 26627                           
 26628                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 26629  019950  0E28               	movlw	low _UART2_Transmit_ISR
 26630  019952  6EE6               	movwf	postinc1,c
 26631  019954  0EA2               	movlw	high _UART2_Transmit_ISR
 26632  019956  6EE6               	movwf	postinc1,c
 26633  019958  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 26634  01995A  6EE6               	movwf	postinc1,c
 26635  01995C  ECA3  F0D1         	call	_UART2_SetTxInterruptHandler	;wreg free
 26636                           
 26637                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 26638  019960  013D               	movlb	61	; () banked
 26639  019962  6BD4               	clrf	212,b	;volatile
 26640                           
 26641                           ; BSR set to: 61
 26642                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 26643  019964  6BD6               	clrf	214,b	;volatile
 26644                           
 26645                           ; BSR set to: 61
 26646                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 26647  019966  6BD8               	clrf	216,b	;volatile
 26648                           
 26649                           ; BSR set to: 61
 26650                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 26651  019968  0EB0               	movlw	176
 26652  01996A  6FDA               	movwf	218,b	;volatile
 26653                           
 26654                           ; BSR set to: 61
 26655                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 26656  01996C  0E80               	movlw	128
 26657  01996E  6FDB               	movwf	219,b	;volatile
 26658                           
 26659                           ; BSR set to: 61
 26660                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 26661  019970  6BDC               	clrf	220,b	;volatile
 26662                           
 26663                           ; BSR set to: 61
 26664                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 26665  019972  0E82               	movlw	130
 26666  019974  6FDD               	movwf	221,b	;volatile
 26667                           
 26668                           ; BSR set to: 61
 26669                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 26670  019976  0E06               	movlw	6
 26671  019978  6FDE               	movwf	222,b	;volatile
 26672                           
 26673                           ; BSR set to: 61
 26674                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 26675  01997A  6BDF               	clrf	223,b	;volatile
 26676                           
 26677                           ; BSR set to: 61
 26678                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 26679  01997C  6BE0               	clrf	224,b	;volatile
 26680                           
 26681                           ; BSR set to: 61
 26682                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 26683  01997E  6BE1               	clrf	225,b	;volatile
 26684                           
 26685                           ; BSR set to: 61
 26686                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 26687  019980  6BE2               	clrf	226,b	;volatile
 26688                           
 26689                           ; BSR set to: 61
 26690                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 26691  019982  6A34               	clrf	_uart2TxHead^0,c	;volatile
 26692                           
 26693                           ; BSR set to: 61
 26694                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 26695  019984  6A33               	clrf	_uart2TxTail^0,c	;volatile
 26696                           
 26697                           ; BSR set to: 61
 26698                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 26699  019986  0E40               	movlw	64
 26700  019988  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 26701                           
 26702                           ; BSR set to: 61
 26703                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 26704  01998A  6A31               	clrf	_uart2RxHead^0,c	;volatile
 26705                           
 26706                           ; BSR set to: 61
 26707                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 26708  01998C  6A30               	clrf	_uart2RxTail^0,c	;volatile
 26709                           
 26710                           ; BSR set to: 61
 26711                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 26712  01998E  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 26713                           
 26714                           ; BSR set to: 61
 26715                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 26716  019990  0139               	movlb	57	; () banked
 26717  019992  8596               	bsf	150,2,b	;volatile
 26718                           
 26719                           ; BSR set to: 57
 26720                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26721  019994  0012               	return		;funcret
 26722  019996                     __end_of_UART2_Initialize:
 26723                           	opt callstack 0
 26724                           
 26725 ;; *************** function _UART2_SetTxInterruptHandler *****************
 26726 ;; Defined at:
 26727 ;;		line 252 in file "mcc_generated_files/uart2.c"
 26728 ;; Parameters:    Size  Location     Type
 26729 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26730 ;;		 -> UART2_Transmit_ISR(1), 
 26731 ;; Auto vars:     Size  Location     Type
 26732 ;;		None
 26733 ;; Return value:  Size  Location     Type
 26734 ;;                  1  [STACK] void 
 26735 ;; Registers used:
 26736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26737 ;; Tracked objects:
 26738 ;;		On entry : 3F/39
 26739 ;;		On exit  : 0/0
 26740 ;;		Unchanged: 0/0
 26741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26746 ;;Total ram usage:        0 bytes
 26747 ;; Hardware stack levels used:    1
 26748 ;; Hardware stack levels required when called:   15
 26749 ;; This function calls:
 26750 ;;		Nothing
 26751 ;; This function is called by:
 26752 ;;		_UART2_Initialize
 26753 ;; This function uses a reentrant model
 26754 ;;
 26755                           
 26756                           	psect	text104
 26757  01A346                     __ptext104:
 26758                           	opt callstack 0
 26759  01A346                     _UART2_SetTxInterruptHandler:
 26760                           	opt callstack 13
 26761                           
 26762                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 26763                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26764                           
 26765                           ; BSR set to: 57
 26766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26767                           ;incstack = 0
 26768  01A346  50E1               	movf	fsr1l,w,c
 26769  01A348  0FFD               	addlw	-3
 26770  01A34A  6ED9               	movwf	fsr2l,c
 26771  01A34C  50E2               	movf	fsr1h,w,c
 26772  01A34E  6EDA               	movwf	fsr2h,c
 26773  01A350  0EFF               	movlw	255
 26774  01A352  22DA               	addwfc	fsr2h,f,c
 26775  01A354  006F FF78  F0BB    	movff	postinc2,_UART2_TxInterruptHandler
 26776  01A35A  006F FF78  F0BC    	movff	postinc2,_UART2_TxInterruptHandler+1
 26777  01A360  006F FF74  F0BD    	movff	postdec2,_UART2_TxInterruptHandler+2
 26778                           
 26779                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26780  01A366  52E5               	movf	postdec1,f,c
 26781  01A368  52E5               	movf	postdec1,f,c
 26782  01A36A  52E5               	movf	postdec1,f,c
 26783  01A36C  0012               	return		;funcret
 26784  01A36E                     __end_of_UART2_SetTxInterruptHandler:
 26785                           	opt callstack 0
 26786                           
 26787 ;; *************** function _UART2_SetRxInterruptHandler *****************
 26788 ;; Defined at:
 26789 ;;		line 248 in file "mcc_generated_files/uart2.c"
 26790 ;; Parameters:    Size  Location     Type
 26791 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26792 ;;		 -> UART2_Receive_ISR(1), 
 26793 ;; Auto vars:     Size  Location     Type
 26794 ;;		None
 26795 ;; Return value:  Size  Location     Type
 26796 ;;                  1  [STACK] void 
 26797 ;; Registers used:
 26798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26799 ;; Tracked objects:
 26800 ;;		On entry : 3F/39
 26801 ;;		On exit  : 0/0
 26802 ;;		Unchanged: 0/0
 26803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26808 ;;Total ram usage:        0 bytes
 26809 ;; Hardware stack levels used:    1
 26810 ;; Hardware stack levels required when called:   15
 26811 ;; This function calls:
 26812 ;;		Nothing
 26813 ;; This function is called by:
 26814 ;;		_UART2_Initialize
 26815 ;; This function uses a reentrant model
 26816 ;;
 26817                           
 26818                           	psect	text105
 26819  01A36E                     __ptext105:
 26820                           	opt callstack 0
 26821  01A36E                     _UART2_SetRxInterruptHandler:
 26822                           	opt callstack 13
 26823                           
 26824                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 26825                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26826                           
 26827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26828                           ;incstack = 0
 26829  01A36E  50E1               	movf	fsr1l,w,c
 26830  01A370  0FFD               	addlw	-3
 26831  01A372  6ED9               	movwf	fsr2l,c
 26832  01A374  50E2               	movf	fsr1h,w,c
 26833  01A376  6EDA               	movwf	fsr2h,c
 26834  01A378  0EFF               	movlw	255
 26835  01A37A  22DA               	addwfc	fsr2h,f,c
 26836  01A37C  006F FF78  F0BE    	movff	postinc2,_UART2_RxInterruptHandler
 26837  01A382  006F FF78  F0BF    	movff	postinc2,_UART2_RxInterruptHandler+1
 26838  01A388  006F FF74  F0C0    	movff	postdec2,_UART2_RxInterruptHandler+2
 26839                           
 26840                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26841  01A38E  52E5               	movf	postdec1,f,c
 26842  01A390  52E5               	movf	postdec1,f,c
 26843  01A392  52E5               	movf	postdec1,f,c
 26844  01A394  0012               	return		;funcret
 26845  01A396                     __end_of_UART2_SetRxInterruptHandler:
 26846                           	opt callstack 0
 26847                           
 26848 ;; *************** function _UART1_Initialize *****************
 26849 ;; Defined at:
 26850 ;;		line 75 in file "mcc_generated_files/uart1.c"
 26851 ;; Parameters:    Size  Location     Type
 26852 ;;		None
 26853 ;; Auto vars:     Size  Location     Type
 26854 ;;		None
 26855 ;; Return value:  Size  Location     Type
 26856 ;;                  1  [STACK] void 
 26857 ;; Registers used:
 26858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26859 ;; Tracked objects:
 26860 ;;		On entry : 0/39
 26861 ;;		On exit  : 3F/39
 26862 ;;		Unchanged: 0/0
 26863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26868 ;;Total ram usage:        0 bytes
 26869 ;; Hardware stack levels used:    1
 26870 ;; Hardware stack levels required when called:   16
 26871 ;; This function calls:
 26872 ;;		_UART1_SetRxInterruptHandler
 26873 ;; This function is called by:
 26874 ;;		_SYSTEM_Initialize
 26875 ;; This function uses a reentrant model
 26876 ;;
 26877                           
 26878                           	psect	text106
 26879  019D08                     __ptext106:
 26880                           	opt callstack 0
 26881  019D08                     _UART1_Initialize:
 26882                           	opt callstack 13
 26883                           
 26884                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 26885                           
 26886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26887                           ;incstack = 0
 26888  019D08  0139               	movlb	57	; () banked
 26889  019D0A  9793               	bcf	147,3,b	;volatile
 26890                           
 26891                           ; BSR set to: 57
 26892                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 26893  019D0C  0E8E               	movlw	low _UART1_Receive_ISR
 26894  019D0E  6EE6               	movwf	postinc1,c
 26895  019D10  0EA6               	movlw	high _UART1_Receive_ISR
 26896  019D12  6EE6               	movwf	postinc1,c
 26897  019D14  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 26898  019D16  6EE6               	movwf	postinc1,c
 26899  019D18  ECCB  F0D1         	call	_UART1_SetRxInterruptHandler	;wreg free
 26900                           
 26901                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 26902  019D1C  013D               	movlb	61	; () banked
 26903  019D1E  6BEC               	clrf	236,b	;volatile
 26904                           
 26905                           ; BSR set to: 61
 26906                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 26907  019D20  6BED               	clrf	237,b	;volatile
 26908                           
 26909                           ; BSR set to: 61
 26910                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 26911  019D22  6BEE               	clrf	238,b	;volatile
 26912                           
 26913                           ; BSR set to: 61
 26914                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 26915  019D24  6BEF               	clrf	239,b	;volatile
 26916                           
 26917                           ; BSR set to: 61
 26918                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 26919  019D26  6BF0               	clrf	240,b	;volatile
 26920                           
 26921                           ; BSR set to: 61
 26922                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 26923  019D28  6BF1               	clrf	241,b	;volatile
 26924                           
 26925                           ; BSR set to: 61
 26926                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 26927  019D2A  0EB0               	movlw	176
 26928  019D2C  6FF2               	movwf	242,b	;volatile
 26929                           
 26930                           ; BSR set to: 61
 26931                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 26932  019D2E  0E80               	movlw	128
 26933  019D30  6FF3               	movwf	243,b	;volatile
 26934                           
 26935                           ; BSR set to: 61
 26936                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 26937  019D32  6BF4               	clrf	244,b	;volatile
 26938                           
 26939                           ; BSR set to: 61
 26940                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 26941  019D34  0E8A               	movlw	138
 26942  019D36  6FF5               	movwf	245,b	;volatile
 26943                           
 26944                           ; BSR set to: 61
 26945                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 26946  019D38  6BF6               	clrf	246,b	;volatile
 26947                           
 26948                           ; BSR set to: 61
 26949                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 26950  019D3A  6BF7               	clrf	247,b	;volatile
 26951                           
 26952                           ; BSR set to: 61
 26953                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 26954  019D3C  6BF8               	clrf	248,b	;volatile
 26955                           
 26956                           ; BSR set to: 61
 26957                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 26958  019D3E  6BF9               	clrf	249,b	;volatile
 26959                           
 26960                           ; BSR set to: 61
 26961                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 26962  019D40  6BFA               	clrf	250,b	;volatile
 26963                           
 26964                           ; BSR set to: 61
 26965                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 26966  019D42  6A37               	clrf	_uart1RxHead^0,c	;volatile
 26967                           
 26968                           ; BSR set to: 61
 26969                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 26970  019D44  6A36               	clrf	_uart1RxTail^0,c	;volatile
 26971                           
 26972                           ; BSR set to: 61
 26973                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 26974  019D46  6A35               	clrf	_uart1RxCount^0,c	;volatile
 26975                           
 26976                           ; BSR set to: 61
 26977                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 26978  019D48  0139               	movlb	57	; () banked
 26979  019D4A  8793               	bsf	147,3,b	;volatile
 26980                           
 26981                           ; BSR set to: 57
 26982                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26983  019D4C  0012               	return		;funcret
 26984  019D4E                     __end_of_UART1_Initialize:
 26985                           	opt callstack 0
 26986                           
 26987 ;; *************** function _UART1_SetRxInterruptHandler *****************
 26988 ;; Defined at:
 26989 ;;		line 207 in file "mcc_generated_files/uart1.c"
 26990 ;; Parameters:    Size  Location     Type
 26991 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26992 ;;		 -> UART1_Receive_ISR(1), 
 26993 ;; Auto vars:     Size  Location     Type
 26994 ;;		None
 26995 ;; Return value:  Size  Location     Type
 26996 ;;                  1  [STACK] void 
 26997 ;; Registers used:
 26998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26999 ;; Tracked objects:
 27000 ;;		On entry : 3F/39
 27001 ;;		On exit  : 0/0
 27002 ;;		Unchanged: 0/0
 27003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27008 ;;Total ram usage:        0 bytes
 27009 ;; Hardware stack levels used:    1
 27010 ;; Hardware stack levels required when called:   15
 27011 ;; This function calls:
 27012 ;;		Nothing
 27013 ;; This function is called by:
 27014 ;;		_UART1_Initialize
 27015 ;; This function uses a reentrant model
 27016 ;;
 27017                           
 27018                           	psect	text107
 27019  01A396                     __ptext107:
 27020                           	opt callstack 0
 27021  01A396                     _UART1_SetRxInterruptHandler:
 27022                           	opt callstack 13
 27023                           
 27024                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 27025                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27026                           
 27027                           ; BSR set to: 57
 27028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27029                           ;incstack = 0
 27030  01A396  50E1               	movf	fsr1l,w,c
 27031  01A398  0FFD               	addlw	-3
 27032  01A39A  6ED9               	movwf	fsr2l,c
 27033  01A39C  50E2               	movf	fsr1h,w,c
 27034  01A39E  6EDA               	movwf	fsr2h,c
 27035  01A3A0  0EFF               	movlw	255
 27036  01A3A2  22DA               	addwfc	fsr2h,f,c
 27037  01A3A4  006F FF78  F0B8    	movff	postinc2,_UART1_RxInterruptHandler
 27038  01A3AA  006F FF78  F0B9    	movff	postinc2,_UART1_RxInterruptHandler+1
 27039  01A3B0  006F FF74  F0BA    	movff	postdec2,_UART1_RxInterruptHandler+2
 27040                           
 27041                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27042  01A3B6  52E5               	movf	postdec1,f,c
 27043  01A3B8  52E5               	movf	postdec1,f,c
 27044  01A3BA  52E5               	movf	postdec1,f,c
 27045  01A3BC  0012               	return		;funcret
 27046  01A3BE                     __end_of_UART1_SetRxInterruptHandler:
 27047                           	opt callstack 0
 27048                           
 27049 ;; *************** function _TMR6_Initialize *****************
 27050 ;; Defined at:
 27051 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 27052 ;; Parameters:    Size  Location     Type
 27053 ;;		None
 27054 ;; Auto vars:     Size  Location     Type
 27055 ;;		None
 27056 ;; Return value:  Size  Location     Type
 27057 ;;                  1  [STACK] void 
 27058 ;; Registers used:
 27059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27060 ;; Tracked objects:
 27061 ;;		On entry : 3F/39
 27062 ;;		On exit  : 0/0
 27063 ;;		Unchanged: 0/0
 27064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27069 ;;Total ram usage:        0 bytes
 27070 ;; Hardware stack levels used:    1
 27071 ;; Hardware stack levels required when called:   16
 27072 ;; This function calls:
 27073 ;;		_TMR6_SetInterruptHandler
 27074 ;; This function is called by:
 27075 ;;		_SYSTEM_Initialize
 27076 ;; This function uses a reentrant model
 27077 ;;
 27078                           
 27079                           	psect	text108
 27080  01A254                     __ptext108:
 27081                           	opt callstack 0
 27082  01A254                     _TMR6_Initialize:
 27083                           	opt callstack 13
 27084                           
 27085                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 27086                           
 27087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27088                           ;incstack = 0
 27089  01A254  0E01               	movlw	1
 27090  01A256  6E96               	movwf	150,c	;volatile
 27091                           
 27092                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 27093  01A258  6A95               	clrf	149,c	;volatile
 27094                           
 27095                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 27096  01A25A  6A97               	clrf	151,c	;volatile
 27097                           
 27098                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 27099  01A25C  0E7C               	movlw	124
 27100  01A25E  6E93               	movwf	147,c	;volatile
 27101                           
 27102                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 27103  01A260  6A92               	clrf	146,c	;volatile
 27104                           
 27105                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 27106  01A262  0139               	movlb	57	; () banked
 27107  01A264  91A9               	bcf	169,0,b	;volatile
 27108                           
 27109                           ; BSR set to: 57
 27110                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 27111  01A266  8199               	bsf	153,0,b	;volatile
 27112                           
 27113                           ; BSR set to: 57
 27114                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 27115  01A268  0E9C               	movlw	low _TMR6_DefaultInterruptHandler
 27116  01A26A  6EE6               	movwf	postinc1,c
 27117  01A26C  0E9B               	movlw	high _TMR6_DefaultInterruptHandler
 27118  01A26E  6EE6               	movwf	postinc1,c
 27119  01A270  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 27120  01A272  6EE6               	movwf	postinc1,c
 27121  01A274  ECDF  F0D1         	call	_TMR6_SetInterruptHandler	;wreg free
 27122                           
 27123                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 27124  01A278  0EE0               	movlw	224
 27125  01A27A  6E94               	movwf	148,c	;volatile
 27126                           
 27127                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27128  01A27C  0012               	return		;funcret
 27129  01A27E                     __end_of_TMR6_Initialize:
 27130                           	opt callstack 0
 27131                           
 27132 ;; *************** function _TMR6_SetInterruptHandler *****************
 27133 ;; Defined at:
 27134 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 27135 ;; Parameters:    Size  Location     Type
 27136 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27137 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 27138 ;; Auto vars:     Size  Location     Type
 27139 ;;		None
 27140 ;; Return value:  Size  Location     Type
 27141 ;;                  1  [STACK] void 
 27142 ;; Registers used:
 27143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27144 ;; Tracked objects:
 27145 ;;		On entry : 3F/39
 27146 ;;		On exit  : 0/0
 27147 ;;		Unchanged: 0/0
 27148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27153 ;;Total ram usage:        0 bytes
 27154 ;; Hardware stack levels used:    1
 27155 ;; Hardware stack levels required when called:   15
 27156 ;; This function calls:
 27157 ;;		Nothing
 27158 ;; This function is called by:
 27159 ;;		_TMR6_Initialize
 27160 ;; This function uses a reentrant model
 27161 ;;
 27162                           
 27163                           	psect	text109
 27164  01A3BE                     __ptext109:
 27165                           	opt callstack 0
 27166  01A3BE                     _TMR6_SetInterruptHandler:
 27167                           	opt callstack 13
 27168                           
 27169                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 27170                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27171                           
 27172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27173                           ;incstack = 0
 27174  01A3BE  50E1               	movf	fsr1l,w,c
 27175  01A3C0  0FFD               	addlw	-3
 27176  01A3C2  6ED9               	movwf	fsr2l,c
 27177  01A3C4  50E2               	movf	fsr1h,w,c
 27178  01A3C6  6EDA               	movwf	fsr2h,c
 27179  01A3C8  0EFF               	movlw	255
 27180  01A3CA  22DA               	addwfc	fsr2h,f,c
 27181  01A3CC  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 27182  01A3D2  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 27183  01A3D8  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 27184                           
 27185                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27186  01A3DE  52E5               	movf	postdec1,f,c
 27187  01A3E0  52E5               	movf	postdec1,f,c
 27188  01A3E2  52E5               	movf	postdec1,f,c
 27189  01A3E4  0012               	return		;funcret
 27190  01A3E6                     __end_of_TMR6_SetInterruptHandler:
 27191                           	opt callstack 0
 27192                           
 27193 ;; *************** function _TMR5_Initialize *****************
 27194 ;; Defined at:
 27195 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 27196 ;; Parameters:    Size  Location     Type
 27197 ;;		None
 27198 ;; Auto vars:     Size  Location     Type
 27199 ;;		None
 27200 ;; Return value:  Size  Location     Type
 27201 ;;                  1  [STACK] void 
 27202 ;; Registers used:
 27203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27204 ;; Tracked objects:
 27205 ;;		On entry : 0/39
 27206 ;;		On exit  : 0/0
 27207 ;;		Unchanged: 0/0
 27208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27213 ;;Total ram usage:        0 bytes
 27214 ;; Hardware stack levels used:    1
 27215 ;; Hardware stack levels required when called:   16
 27216 ;; This function calls:
 27217 ;;		_TMR5_SetInterruptHandler
 27218 ;; This function is called by:
 27219 ;;		_SYSTEM_Initialize
 27220 ;; This function uses a reentrant model
 27221 ;;
 27222                           
 27223                           	psect	text110
 27224  019D4E                     __ptext110:
 27225                           	opt callstack 0
 27226  019D4E                     _TMR5_Initialize:
 27227                           	opt callstack 13
 27228                           
 27229                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 27230                           
 27231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27232                           ;incstack = 0
 27233  019D4E  6A9B               	clrf	155,c	;volatile
 27234                           
 27235                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 27236  019D50  6A9C               	clrf	156,c	;volatile
 27237                           
 27238                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 27239  019D52  0E01               	movlw	1
 27240  019D54  6E9D               	movwf	157,c	;volatile
 27241                           
 27242                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 27243  019D56  0E63               	movlw	99
 27244  019D58  6E99               	movwf	153,c	;volatile
 27245                           
 27246                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 27247  019D5A  0EC0               	movlw	192
 27248  019D5C  6E98               	movwf	152,c	;volatile
 27249                           
 27250                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 27251  019D5E  5098               	movf	152,w,c	;volatile
 27252  019D60  006F FE64  F001    	movff	16281,btemp	;volatile
 27253  019D66  6A02               	clrf	(btemp+1)^0,c
 27254  019D68  0060  F004  F002   	movff	btemp,btemp+1
 27255  019D6E  6A01               	clrf	btemp^0,c
 27256  019D70  1001               	iorwf	btemp^0,w,c
 27257  019D72  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 27258  019D74  5002               	movf	(btemp+1)^0,w,c
 27259  019D76  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 27260                           
 27261                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 27262  019D78  0139               	movlb	57	; () banked
 27263  019D7A  9DA8               	bcf	168,6,b	;volatile
 27264                           
 27265                           ; BSR set to: 57
 27266                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 27267  019D7C  8D98               	bsf	152,6,b	;volatile
 27268                           
 27269                           ; BSR set to: 57
 27270                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 27271  019D7E  0EAA               	movlw	low _TMR5_DefaultInterruptHandler
 27272  019D80  6EE6               	movwf	postinc1,c
 27273  019D82  0EA0               	movlw	high _TMR5_DefaultInterruptHandler
 27274  019D84  6EE6               	movwf	postinc1,c
 27275  019D86  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 27276  019D88  6EE6               	movwf	postinc1,c
 27277  019D8A  ECF3  F0D1         	call	_TMR5_SetInterruptHandler	;wreg free
 27278                           
 27279                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 27280  019D8E  0E31               	movlw	49
 27281  019D90  6E9A               	movwf	154,c	;volatile
 27282                           
 27283                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27284  019D92  0012               	return		;funcret
 27285  019D94                     __end_of_TMR5_Initialize:
 27286                           	opt callstack 0
 27287                           
 27288 ;; *************** function _TMR5_SetInterruptHandler *****************
 27289 ;; Defined at:
 27290 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 27291 ;; Parameters:    Size  Location     Type
 27292 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27293 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 27294 ;; Auto vars:     Size  Location     Type
 27295 ;;		None
 27296 ;; Return value:  Size  Location     Type
 27297 ;;                  1  [STACK] void 
 27298 ;; Registers used:
 27299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27300 ;; Tracked objects:
 27301 ;;		On entry : 3F/39
 27302 ;;		On exit  : 0/0
 27303 ;;		Unchanged: 0/0
 27304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27309 ;;Total ram usage:        0 bytes
 27310 ;; Hardware stack levels used:    1
 27311 ;; Hardware stack levels required when called:   15
 27312 ;; This function calls:
 27313 ;;		Nothing
 27314 ;; This function is called by:
 27315 ;;		_TMR5_Initialize
 27316 ;; This function uses a reentrant model
 27317 ;;
 27318                           
 27319                           	psect	text111
 27320  01A3E6                     __ptext111:
 27321                           	opt callstack 0
 27322  01A3E6                     _TMR5_SetInterruptHandler:
 27323                           	opt callstack 13
 27324                           
 27325                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 27326                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27327                           
 27328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27329                           ;incstack = 0
 27330  01A3E6  50E1               	movf	fsr1l,w,c
 27331  01A3E8  0FFD               	addlw	-3
 27332  01A3EA  6ED9               	movwf	fsr2l,c
 27333  01A3EC  50E2               	movf	fsr1h,w,c
 27334  01A3EE  6EDA               	movwf	fsr2h,c
 27335  01A3F0  0EFF               	movlw	255
 27336  01A3F2  22DA               	addwfc	fsr2h,f,c
 27337  01A3F4  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 27338  01A3FA  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 27339  01A400  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 27340                           
 27341                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27342  01A406  52E5               	movf	postdec1,f,c
 27343  01A408  52E5               	movf	postdec1,f,c
 27344  01A40A  52E5               	movf	postdec1,f,c
 27345  01A40C  0012               	return		;funcret
 27346  01A40E                     __end_of_TMR5_SetInterruptHandler:
 27347                           	opt callstack 0
 27348                           
 27349 ;; *************** function _TMR3_Initialize *****************
 27350 ;; Defined at:
 27351 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 27352 ;; Parameters:    Size  Location     Type
 27353 ;;		None
 27354 ;; Auto vars:     Size  Location     Type
 27355 ;;		None
 27356 ;; Return value:  Size  Location     Type
 27357 ;;                  1  [STACK] void 
 27358 ;; Registers used:
 27359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27360 ;; Tracked objects:
 27361 ;;		On entry : 0/39
 27362 ;;		On exit  : 0/0
 27363 ;;		Unchanged: 0/0
 27364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27369 ;;Total ram usage:        0 bytes
 27370 ;; Hardware stack levels used:    1
 27371 ;; Hardware stack levels required when called:   16
 27372 ;; This function calls:
 27373 ;;		_TMR3_SetInterruptHandler
 27374 ;; This function is called by:
 27375 ;;		_SYSTEM_Initialize
 27376 ;; This function uses a reentrant model
 27377 ;;
 27378                           
 27379                           	psect	text112
 27380  019D94                     __ptext112:
 27381                           	opt callstack 0
 27382  019D94                     _TMR3_Initialize:
 27383                           	opt callstack 13
 27384                           
 27385                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 27386                           
 27387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27388                           ;incstack = 0
 27389  019D94  6AA7               	clrf	167,c	;volatile
 27390                           
 27391                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 27392  019D96  6AA8               	clrf	168,c	;volatile
 27393                           
 27394                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 27395  019D98  0E01               	movlw	1
 27396  019D9A  6EA9               	movwf	169,c	;volatile
 27397                           
 27398                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 27399  019D9C  0E3C               	movlw	60
 27400  019D9E  6EA5               	movwf	165,c	;volatile
 27401                           
 27402                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 27403  019DA0  0EB0               	movlw	176
 27404  019DA2  6EA4               	movwf	164,c	;volatile
 27405                           
 27406                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 27407  019DA4  50A4               	movf	164,w,c	;volatile
 27408  019DA6  006F FE94  F001    	movff	16293,btemp	;volatile
 27409  019DAC  6A02               	clrf	(btemp+1)^0,c
 27410  019DAE  0060  F004  F002   	movff	btemp,btemp+1
 27411  019DB4  6A01               	clrf	btemp^0,c
 27412  019DB6  1001               	iorwf	btemp^0,w,c
 27413  019DB8  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 27414  019DBA  5002               	movf	(btemp+1)^0,w,c
 27415  019DBC  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 27416                           
 27417                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 27418  019DBE  0139               	movlb	57	; () banked
 27419  019DC0  9DA6               	bcf	166,6,b	;volatile
 27420                           
 27421                           ; BSR set to: 57
 27422                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 27423  019DC2  8D96               	bsf	150,6,b	;volatile
 27424                           
 27425                           ; BSR set to: 57
 27426                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 27427  019DC4  0E1C               	movlw	low _TMR3_DefaultInterruptHandler
 27428  019DC6  6EE6               	movwf	postinc1,c
 27429  019DC8  0EA9               	movlw	high _TMR3_DefaultInterruptHandler
 27430  019DCA  6EE6               	movwf	postinc1,c
 27431  019DCC  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 27432  019DCE  6EE6               	movwf	postinc1,c
 27433  019DD0  EC07  F0D2         	call	_TMR3_SetInterruptHandler	;wreg free
 27434                           
 27435                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 27436  019DD4  0E31               	movlw	49
 27437  019DD6  6EA6               	movwf	166,c	;volatile
 27438                           
 27439                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27440  019DD8  0012               	return		;funcret
 27441  019DDA                     __end_of_TMR3_Initialize:
 27442                           	opt callstack 0
 27443                           
 27444 ;; *************** function _TMR3_SetInterruptHandler *****************
 27445 ;; Defined at:
 27446 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 27447 ;; Parameters:    Size  Location     Type
 27448 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27449 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 27450 ;; Auto vars:     Size  Location     Type
 27451 ;;		None
 27452 ;; Return value:  Size  Location     Type
 27453 ;;                  1  [STACK] void 
 27454 ;; Registers used:
 27455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27456 ;; Tracked objects:
 27457 ;;		On entry : 0/1
 27458 ;;		On exit  : 0/0
 27459 ;;		Unchanged: 0/0
 27460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27465 ;;Total ram usage:        0 bytes
 27466 ;; Hardware stack levels used:    1
 27467 ;; Hardware stack levels required when called:   15
 27468 ;; This function calls:
 27469 ;;		Nothing
 27470 ;; This function is called by:
 27471 ;;		_TMR3_Initialize
 27472 ;;		_init_bsoc
 27473 ;; This function uses a reentrant model
 27474 ;;
 27475                           
 27476                           	psect	text113
 27477  01A40E                     __ptext113:
 27478                           	opt callstack 0
 27479  01A40E                     _TMR3_SetInterruptHandler:
 27480                           	opt callstack 14
 27481                           
 27482                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 27483                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27484                           
 27485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27486                           ;incstack = 0
 27487  01A40E  50E1               	movf	fsr1l,w,c
 27488  01A410  0FFD               	addlw	-3
 27489  01A412  6ED9               	movwf	fsr2l,c
 27490  01A414  50E2               	movf	fsr1h,w,c
 27491  01A416  6EDA               	movwf	fsr2h,c
 27492  01A418  0EFF               	movlw	255
 27493  01A41A  22DA               	addwfc	fsr2h,f,c
 27494  01A41C  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 27495  01A422  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 27496  01A428  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 27497                           
 27498                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27499  01A42E  52E5               	movf	postdec1,f,c
 27500  01A430  52E5               	movf	postdec1,f,c
 27501  01A432  52E5               	movf	postdec1,f,c
 27502  01A434  0012               	return		;funcret
 27503  01A436                     __end_of_TMR3_SetInterruptHandler:
 27504                           	opt callstack 0
 27505                           
 27506 ;; *************** function _TMR2_Initialize *****************
 27507 ;; Defined at:
 27508 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 27509 ;; Parameters:    Size  Location     Type
 27510 ;;		None
 27511 ;; Auto vars:     Size  Location     Type
 27512 ;;		None
 27513 ;; Return value:  Size  Location     Type
 27514 ;;                  1  [STACK] void 
 27515 ;; Registers used:
 27516 ;;		wreg, status,2
 27517 ;; Tracked objects:
 27518 ;;		On entry : 3F/3F
 27519 ;;		On exit  : 3F/39
 27520 ;;		Unchanged: 0/0
 27521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27526 ;;Total ram usage:        0 bytes
 27527 ;; Hardware stack levels used:    1
 27528 ;; Hardware stack levels required when called:   15
 27529 ;; This function calls:
 27530 ;;		Nothing
 27531 ;; This function is called by:
 27532 ;;		_SYSTEM_Initialize
 27533 ;; This function uses a reentrant model
 27534 ;;
 27535                           
 27536                           	psect	text114
 27537  01A7AE                     __ptext114:
 27538                           	opt callstack 0
 27539  01A7AE                     _TMR2_Initialize:
 27540                           	opt callstack 14
 27541                           
 27542                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 27543                           
 27544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27545                           ;incstack = 0
 27546  01A7AE  0E01               	movlw	1
 27547  01A7B0  6EAE               	movwf	174,c	;volatile
 27548                           
 27549                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 27550  01A7B2  6AAD               	clrf	173,c	;volatile
 27551                           
 27552                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 27553  01A7B4  6AAF               	clrf	175,c	;volatile
 27554                           
 27555                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 27556  01A7B6  0E63               	movlw	99
 27557  01A7B8  6EAB               	movwf	171,c	;volatile
 27558                           
 27559                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 27560  01A7BA  6AAA               	clrf	170,c	;volatile
 27561                           
 27562                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 27563  01A7BC  0139               	movlb	57	; () banked
 27564  01A7BE  95A4               	bcf	164,2,b	;volatile
 27565                           
 27566                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 27567  01A7C0  0EC0               	movlw	192
 27568  01A7C2  6EAC               	movwf	172,c	;volatile
 27569                           
 27570                           ; BSR set to: 57
 27571                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27572  01A7C4  0012               	return		;funcret
 27573  01A7C6                     __end_of_TMR2_Initialize:
 27574                           	opt callstack 0
 27575                           
 27576 ;; *************** function _SPI1_Initialize *****************
 27577 ;; Defined at:
 27578 ;;		line 64 in file "mcc_generated_files/spi1.c"
 27579 ;; Parameters:    Size  Location     Type
 27580 ;;		None
 27581 ;; Auto vars:     Size  Location     Type
 27582 ;;		None
 27583 ;; Return value:  Size  Location     Type
 27584 ;;                  1  [STACK] void 
 27585 ;; Registers used:
 27586 ;;		wreg, status,2
 27587 ;; Tracked objects:
 27588 ;;		On entry : 3F/39
 27589 ;;		On exit  : 3F/3D
 27590 ;;		Unchanged: 0/0
 27591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27596 ;;Total ram usage:        0 bytes
 27597 ;; Hardware stack levels used:    1
 27598 ;; Hardware stack levels required when called:   15
 27599 ;; This function calls:
 27600 ;;		Nothing
 27601 ;; This function is called by:
 27602 ;;		_SYSTEM_Initialize
 27603 ;; This function uses a reentrant model
 27604 ;;
 27605                           
 27606                           	psect	text115
 27607  01A7C6                     __ptext115:
 27608                           	opt callstack 0
 27609  01A7C6                     _SPI1_Initialize:
 27610                           	opt callstack 14
 27611                           
 27612                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 27613                           
 27614                           ; BSR set to: 57
 27615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27616                           ;incstack = 0
 27617  01A7C6  0E40               	movlw	64
 27618  01A7C8  013D               	movlb	61	; () banked
 27619  01A7CA  6F15               	movwf	21,b	;volatile
 27620                           
 27621                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 27622  01A7CC  0E03               	movlw	3
 27623  01A7CE  6F16               	movwf	22,b	;volatile
 27624                           
 27625                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 27626  01A7D0  0E4F               	movlw	79
 27627  01A7D2  6F19               	movwf	25,b	;volatile
 27628                           
 27629                           ; BSR set to: 61
 27630                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 27631  01A7D4  6B1C               	clrf	28,b	;volatile
 27632                           
 27633                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 27634  01A7D6  0E83               	movlw	131
 27635  01A7D8  6F14               	movwf	20,b	;volatile
 27636                           
 27637                           ; BSR set to: 61
 27638                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27639  01A7DA  0012               	return		;funcret
 27640  01A7DC                     __end_of_SPI1_Initialize:
 27641                           	opt callstack 0
 27642                           
 27643 ;; *************** function _PWM8_Initialize *****************
 27644 ;; Defined at:
 27645 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 27646 ;; Parameters:    Size  Location     Type
 27647 ;;		None
 27648 ;; Auto vars:     Size  Location     Type
 27649 ;;		None
 27650 ;; Return value:  Size  Location     Type
 27651 ;;                  1  [STACK] void 
 27652 ;; Registers used:
 27653 ;;		wreg, status,2
 27654 ;; Tracked objects:
 27655 ;;		On entry : 0/3E
 27656 ;;		On exit  : 3F/3F
 27657 ;;		Unchanged: 0/0
 27658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27663 ;;Total ram usage:        0 bytes
 27664 ;; Hardware stack levels used:    1
 27665 ;; Hardware stack levels required when called:   15
 27666 ;; This function calls:
 27667 ;;		Nothing
 27668 ;; This function is called by:
 27669 ;;		_SYSTEM_Initialize
 27670 ;; This function uses a reentrant model
 27671 ;;
 27672                           
 27673                           	psect	text116
 27674  01A7DC                     __ptext116:
 27675                           	opt callstack 0
 27676  01A7DC                     _PWM8_Initialize:
 27677                           	opt callstack 14
 27678                           
 27679                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 27680                           
 27681                           ; BSR set to: 61
 27682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27683                           ;incstack = 0
 27684  01A7DC  0E80               	movlw	128
 27685  01A7DE  6E62               	movwf	98,c	;volatile
 27686                           
 27687                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 27688  01A7E0  6A61               	clrf	97,c	;volatile
 27689                           
 27690                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 27691  01A7E2  0E40               	movlw	64
 27692  01A7E4  6E60               	movwf	96,c	;volatile
 27693                           
 27694                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 27695  01A7E6  013F               	movlb	63	; () banked
 27696  01A7E8  515F               	movf	95,w,b	;volatile
 27697  01A7EA  0B3F               	andlw	-193
 27698  01A7EC  0940               	iorlw	64
 27699  01A7EE  6F5F               	movwf	95,b	;volatile
 27700                           
 27701                           ; BSR set to: 63
 27702                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27703  01A7F0  0012               	return		;funcret
 27704  01A7F2                     __end_of_PWM8_Initialize:
 27705                           	opt callstack 0
 27706                           
 27707 ;; *************** function _PMD_Initialize *****************
 27708 ;; Defined at:
 27709 ;;		line 90 in file "mcc_generated_files/mcc.c"
 27710 ;; Parameters:    Size  Location     Type
 27711 ;;		None
 27712 ;; Auto vars:     Size  Location     Type
 27713 ;;		None
 27714 ;; Return value:  Size  Location     Type
 27715 ;;                  1  [STACK] void 
 27716 ;; Registers used:
 27717 ;;		None
 27718 ;; Tracked objects:
 27719 ;;		On entry : 3F/39
 27720 ;;		On exit  : 3F/39
 27721 ;;		Unchanged: 0/0
 27722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27727 ;;Total ram usage:        0 bytes
 27728 ;; Hardware stack levels used:    1
 27729 ;; Hardware stack levels required when called:   15
 27730 ;; This function calls:
 27731 ;;		Nothing
 27732 ;; This function is called by:
 27733 ;;		_SYSTEM_Initialize
 27734 ;; This function uses a reentrant model
 27735 ;;
 27736                           
 27737                           	psect	text117
 27738  01A808                     __ptext117:
 27739                           	opt callstack 0
 27740  01A808                     _PMD_Initialize:
 27741                           	opt callstack 14
 27742                           
 27743                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 27744                           
 27745                           ; BSR set to: 63
 27746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27747                           ;incstack = 0
 27748  01A808  0139               	movlb	57	; () banked
 27749  01A80A  6BC0               	clrf	192,b	;volatile
 27750                           
 27751                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 27752  01A80C  6BC1               	clrf	193,b	;volatile
 27753                           
 27754                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 27755  01A80E  6BC2               	clrf	194,b	;volatile
 27756                           
 27757                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 27758  01A810  6BC3               	clrf	195,b	;volatile
 27759                           
 27760                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 27761  01A812  6BC4               	clrf	196,b	;volatile
 27762                           
 27763                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 27764  01A814  6BC5               	clrf	197,b	;volatile
 27765                           
 27766                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 27767  01A816  6BC6               	clrf	198,b	;volatile
 27768                           
 27769                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 27770  01A818  6BC7               	clrf	199,b	;volatile
 27771                           
 27772                           ; BSR set to: 57
 27773                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27774  01A81A  0012               	return		;funcret
 27775  01A81C                     __end_of_PMD_Initialize:
 27776                           	opt callstack 0
 27777                           
 27778 ;; *************** function _PIN_MANAGER_Initialize *****************
 27779 ;; Defined at:
 27780 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 27781 ;; Parameters:    Size  Location     Type
 27782 ;;		None
 27783 ;; Auto vars:     Size  Location     Type
 27784 ;;		None
 27785 ;; Return value:  Size  Location     Type
 27786 ;;                  1  [STACK] void 
 27787 ;; Registers used:
 27788 ;;		wreg, status,2
 27789 ;; Tracked objects:
 27790 ;;		On entry : 3F/39
 27791 ;;		On exit  : 3F/3A
 27792 ;;		Unchanged: 0/0
 27793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27798 ;;Total ram usage:        0 bytes
 27799 ;; Hardware stack levels used:    1
 27800 ;; Hardware stack levels required when called:   15
 27801 ;; This function calls:
 27802 ;;		Nothing
 27803 ;; This function is called by:
 27804 ;;		_SYSTEM_Initialize
 27805 ;; This function uses a reentrant model
 27806 ;;
 27807                           
 27808                           	psect	text118
 27809  01933A                     __ptext118:
 27810                           	opt callstack 0
 27811  01933A                     _PIN_MANAGER_Initialize:
 27812                           	opt callstack 14
 27813                           
 27814                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 27815                           
 27816                           ; BSR set to: 57
 27817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27818                           ;incstack = 0
 27819  01933A  0E07               	movlw	7
 27820  01933C  6EBE               	movwf	190,c	;volatile
 27821                           
 27822                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 27823  01933E  0E80               	movlw	128
 27824  019340  6EBD               	movwf	189,c	;volatile
 27825                           
 27826                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 27827  019342  6ABA               	clrf	186,c	;volatile
 27828                           
 27829                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 27830  019344  6ABF               	clrf	191,c	;volatile
 27831                           
 27832                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 27833  019346  6ABB               	clrf	187,c	;volatile
 27834                           
 27835                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 27836  019348  0E07               	movlw	7
 27837  01934A  6EBC               	movwf	188,c	;volatile
 27838                           
 27839                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 27840  01934C  6AC6               	clrf	198,c	;volatile
 27841                           
 27842                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 27843  01934E  0E0F               	movlw	15
 27844  019350  6EC7               	movwf	199,c	;volatile
 27845                           
 27846                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 27847  019352  68C2               	setf	194,c	;volatile
 27848                           
 27849                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 27850  019354  0EBF               	movlw	191
 27851  019356  6EC3               	movwf	195,c	;volatile
 27852                           
 27853                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 27854  019358  0E90               	movlw	144
 27855  01935A  6EC4               	movwf	196,c	;volatile
 27856                           
 27857                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 27858  01935C  0E0C               	movlw	12
 27859  01935E  6EC5               	movwf	197,c	;volatile
 27860                           
 27861                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 27862  019360  013A               	movlb	58	; () banked
 27863  019362  6B70               	clrf	112,b	;volatile
 27864                           
 27865                           ; BSR set to: 58
 27866                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 27867  019364  6B60               	clrf	96,b	;volatile
 27868                           
 27869                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 27870  019366  0E3C               	movlw	60
 27871  019368  6F50               	movwf	80,b	;volatile
 27872                           
 27873                           ; BSR set to: 58
 27874                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 27875  01936A  6B80               	clrf	128,b	;volatile
 27876                           
 27877                           ; BSR set to: 58
 27878                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 27879  01936C  6B90               	clrf	144,b	;volatile
 27880                           
 27881                           ; BSR set to: 58
 27882                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 27883  01936E  6940               	setf	64,b	;volatile
 27884                           
 27885                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 27886  019370  0E0C               	movlw	12
 27887  019372  6F71               	movwf	113,b	;volatile
 27888                           
 27889                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 27890  019374  0E0F               	movlw	15
 27891  019376  6F91               	movwf	145,b	;volatile
 27892                           
 27893                           ; BSR set to: 58
 27894                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 27895  019378  6B81               	clrf	129,b	;volatile
 27896                           
 27897                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 27898  01937A  0E83               	movlw	131
 27899  01937C  6F51               	movwf	81,b	;volatile
 27900                           
 27901                           ; BSR set to: 58
 27902                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 27903  01937E  6B41               	clrf	65,b	;volatile
 27904                           
 27905                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 27906  019380  0E97               	movlw	151
 27907  019382  6F61               	movwf	97,b	;volatile
 27908                           
 27909                           ; BSR set to: 58
 27910                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 27911  019384  6B82               	clrf	130,b	;volatile
 27912                           
 27913                           ; BSR set to: 58
 27914                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 27915  019386  6B92               	clrf	146,b	;volatile
 27916                           
 27917                           ; BSR set to: 58
 27918                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 27919  019388  6B42               	clrf	66,b	;volatile
 27920                           
 27921                           ; BSR set to: 58
 27922                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 27923  01938A  6B52               	clrf	82,b	;volatile
 27924                           
 27925                           ; BSR set to: 58
 27926                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 27927  01938C  6B62               	clrf	98,b	;volatile
 27928                           
 27929                           ; BSR set to: 58
 27930                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 27931  01938E  6B72               	clrf	114,b	;volatile
 27932                           
 27933                           ; BSR set to: 58
 27934                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 27935  019390  6943               	setf	67,b	;volatile
 27936                           
 27937                           ; BSR set to: 58
 27938                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 27939  019392  6953               	setf	83,b	;volatile
 27940                           
 27941                           ; BSR set to: 58
 27942                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 27943  019394  6963               	setf	99,b	;volatile
 27944                           
 27945                           ; BSR set to: 58
 27946                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 27947  019396  6973               	setf	115,b	;volatile
 27948                           
 27949                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 27950  019398  0E07               	movlw	7
 27951  01939A  6F83               	movwf	131,b	;volatile
 27952                           
 27953                           ; BSR set to: 58
 27954                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 27955  01939C  6993               	setf	147,b	;volatile
 27956                           
 27957                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 27958  01939E  0E0F               	movlw	15
 27959  0193A0  6FE8               	movwf	232,b	;volatile
 27960                           
 27961                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 27962  0193A2  0E13               	movlw	19
 27963  0193A4  6FDE               	movwf	222,b	;volatile
 27964                           
 27965                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 27966  0193A6  0E16               	movlw	22
 27967  0193A8  6F0E               	movwf	14,b	;volatile
 27968                           
 27969                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 27970  0193AA  0E1E               	movlw	30
 27971  0193AC  6F13               	movwf	19,b	;volatile
 27972                           
 27973                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 27974  0193AE  0E08               	movlw	8
 27975  0193B0  6FC0               	movwf	192,b	;volatile
 27976                           
 27977                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 27978  0193B2  0E10               	movlw	16
 27979  0193B4  6F19               	movwf	25,b	;volatile
 27980                           
 27981                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 27982  0193B6  0E09               	movlw	9
 27983  0193B8  6FC1               	movwf	193,b	;volatile
 27984                           
 27985                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 27986  0193BA  0E1F               	movlw	31
 27987  0193BC  6F15               	movwf	21,b	;volatile
 27988                           
 27989                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 27990  0193BE  0E13               	movlw	19
 27991  0193C0  6F16               	movwf	22,b	;volatile
 27992                           
 27993                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 27994  0193C2  0E17               	movlw	23
 27995  0193C4  6FE5               	movwf	229,b	;volatile
 27996                           
 27997                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 27998  0193C6  0E14               	movlw	20
 27999  0193C8  6FDF               	movwf	223,b	;volatile
 28000                           
 28001                           ; BSR set to: 58
 28002                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 28003  0193CA  0012               	return		;funcret
 28004  0193CC                     __end_of_PIN_MANAGER_Initialize:
 28005                           	opt callstack 0
 28006                           
 28007 ;; *************** function _OSCILLATOR_Initialize *****************
 28008 ;; Defined at:
 28009 ;;		line 72 in file "mcc_generated_files/mcc.c"
 28010 ;; Parameters:    Size  Location     Type
 28011 ;;		None
 28012 ;; Auto vars:     Size  Location     Type
 28013 ;;		None
 28014 ;; Return value:  Size  Location     Type
 28015 ;;                  1  [STACK] void 
 28016 ;; Registers used:
 28017 ;;		wreg, status,2
 28018 ;; Tracked objects:
 28019 ;;		On entry : 3F/3A
 28020 ;;		On exit  : 3F/39
 28021 ;;		Unchanged: 0/0
 28022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28027 ;;Total ram usage:        0 bytes
 28028 ;; Hardware stack levels used:    1
 28029 ;; Hardware stack levels required when called:   15
 28030 ;; This function calls:
 28031 ;;		Nothing
 28032 ;; This function is called by:
 28033 ;;		_SYSTEM_Initialize
 28034 ;; This function uses a reentrant model
 28035 ;;
 28036                           
 28037                           	psect	text119
 28038  01A7F2                     __ptext119:
 28039                           	opt callstack 0
 28040  01A7F2                     _OSCILLATOR_Initialize:
 28041                           	opt callstack 14
 28042                           
 28043                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 28044                           
 28045                           ; BSR set to: 58
 28046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28047                           ;incstack = 0
 28048  01A7F2  0E20               	movlw	32
 28049  01A7F4  0139               	movlb	57	; () banked
 28050  01A7F6  6FD9               	movwf	217,b	;volatile
 28051                           
 28052                           ; BSR set to: 57
 28053                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 28054  01A7F8  6BDB               	clrf	219,b	;volatile
 28055                           
 28056                           ; BSR set to: 57
 28057                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 28058  01A7FA  6BDD               	clrf	221,b	;volatile
 28059                           
 28060                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 28061  01A7FC  0E02               	movlw	2
 28062  01A7FE  6FDF               	movwf	223,b	;volatile
 28063                           
 28064                           ; BSR set to: 57
 28065                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 28066  01A800  6BDE               	clrf	222,b	;volatile
 28067  01A802                     l169:
 28068                           
 28069                           ; BSR set to: 57
 28070                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 28071  01A802  B1DC               	btfsc	220,0,b	;volatile
 28072  01A804  0012               	return	
 28073  01A806  D7FD               	goto	l169
 28074  01A808                     __end_of_OSCILLATOR_Initialize:
 28075                           	opt callstack 0
 28076                           
 28077 ;; *************** function _INTERRUPT_Initialize *****************
 28078 ;; Defined at:
 28079 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28080 ;; Parameters:    Size  Location     Type
 28081 ;;		None
 28082 ;; Auto vars:     Size  Location     Type
 28083 ;;  state           1  [STACK] _Bool 
 28084 ;; Return value:  Size  Location     Type
 28085 ;;                  1  [STACK] void 
 28086 ;; Registers used:
 28087 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 28088 ;; Tracked objects:
 28089 ;;		On entry : 0/0
 28090 ;;		On exit  : 3F/39
 28091 ;;		Unchanged: 0/0
 28092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28097 ;;Total ram usage:        0 bytes
 28098 ;; Hardware stack levels used:    1
 28099 ;; Hardware stack levels required when called:   15
 28100 ;; This function calls:
 28101 ;;		Nothing
 28102 ;; This function is called by:
 28103 ;;		_SYSTEM_Initialize
 28104 ;; This function uses a reentrant model
 28105 ;;
 28106                           
 28107                           	psect	text120
 28108  0197AA                     __ptext120:
 28109                           	opt callstack 0
 28110  0197AA                     _INTERRUPT_Initialize:
 28111                           	opt callstack 0
 28112                           
 28113                           ; BSR set to: 57
 28114                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28115  0197AA  52E6               	movf	postinc1,f,c
 28116                           
 28117                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 28118                           
 28119                           ;incstack = 0
 28120  0197AC  8AD2               	bsf	210,5,c	;volatile
 28121                           
 28122                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 28123  0197AE  AED2               	btfss	16338,7,c	;volatile
 28124  0197B0  D003               	goto	u8750
 28125  0197B2  6A0C               	clrf	(btemp+11)^0,c
 28126  0197B4  2A0C               	incf	(btemp+11)^0,f,c
 28127  0197B6  D001               	goto	u8768
 28128  0197B8                     u8750:
 28129  0197B8  6A0C               	clrf	(btemp+11)^0,c
 28130  0197BA                     u8768:
 28131                           
 28132                           ;stkvar	_state @ sp[(-1)+0]
 28133  0197BA  0EFF               	movlw	-1
 28134  0197BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 28135                           
 28136                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 28137  0197C2  9ED2               	bcf	16338,7,c	;volatile
 28138                           
 28139                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 28140  0197C4  0E55               	movlw	85
 28141  0197C6  6ED4               	movwf	212,c	;volatile
 28142                           
 28143                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 28144  0197C8  0EAA               	movlw	170
 28145  0197CA  6ED4               	movwf	212,c	;volatile
 28146                           
 28147                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 28148  0197CC  90D4               	bcf	212,0,c	;volatile
 28149                           
 28150                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 28151  0197CE  0138               	movlb	56	; () banked
 28152  0197D0  6B9F               	clrf	159,b	;volatile
 28153                           
 28154                           ; BSR set to: 56
 28155                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 28156  0197D2  6B9E               	clrf	158,b	;volatile
 28157                           
 28158                           ; BSR set to: 56
 28159                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 28160  0197D4  0E08               	movlw	8
 28161  0197D6  6F9D               	movwf	157,b	;volatile
 28162                           
 28163                           ; BSR set to: 56
 28164                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 28165  0197D8  0E55               	movlw	85
 28166  0197DA  6ED4               	movwf	212,c	;volatile
 28167                           
 28168                           ; BSR set to: 56
 28169                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 28170  0197DC  0EAA               	movlw	170
 28171  0197DE  6ED4               	movwf	212,c	;volatile
 28172                           
 28173                           ; BSR set to: 56
 28174                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 28175  0197E0  80D4               	bsf	212,0,c	;volatile
 28176                           
 28177                           ; BSR set to: 56
 28178                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 28179                           ;stkvar	_state @ sp[(-1)+0]
 28180  0197E2  0EFF               	movlw	-1
 28181  0197E4  B0E3               	btfsc	plusw1,0,c
 28182  0197E6  D002               	bra	u8775
 28183  0197E8  9ED2               	bcf	16338,7,c	;volatile
 28184  0197EA  D001               	bra	u8776
 28185  0197EC                     u8775:
 28186  0197EC  8ED2               	bsf	16338,7,c	;volatile
 28187  0197EE                     u8776:
 28188                           
 28189                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 28190  0197EE  0139               	movlb	57	; () banked
 28191  0197F0  8782               	bsf	130,3,b	;volatile
 28192                           
 28193                           ; BSR set to: 57
 28194                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 28195  0197F2  8382               	bsf	130,1,b	;volatile
 28196                           
 28197                           ; BSR set to: 57
 28198                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 28199  0197F4  8182               	bsf	130,0,b	;volatile
 28200                           
 28201                           ; BSR set to: 57
 28202                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 28203  0197F6  8582               	bsf	130,2,b	;volatile
 28204                           
 28205                           ; BSR set to: 57
 28206                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 28207  0197F8  8786               	bsf	134,3,b	;volatile
 28208                           
 28209                           ; BSR set to: 57
 28210                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 28211  0197FA  8586               	bsf	134,2,b	;volatile
 28212                           
 28213                           ; BSR set to: 57
 28214                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 28215  0197FC  8783               	bsf	131,3,b	;volatile
 28216                           
 28217                           ; BSR set to: 57
 28218                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 28219  0197FE  8181               	bsf	129,0,b	;volatile
 28220                           
 28221                           ; BSR set to: 57
 28222                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 28223  019800  9185               	bcf	133,0,b	;volatile
 28224                           
 28225                           ; BSR set to: 57
 28226                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 28227  019802  8189               	bsf	137,0,b	;volatile
 28228                           
 28229                           ; BSR set to: 57
 28230                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 28231  019804  9D88               	bcf	136,6,b	;volatile
 28232                           
 28233                           ; BSR set to: 57
 28234                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 28235  019806  9D86               	bcf	134,6,b	;volatile
 28236                           
 28237                           ; BSR set to: 57
 28238                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 28239  019808  8581               	bsf	129,2,b	;volatile
 28240                           
 28241                           ; BSR set to: 57
 28242                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 28243  01980A  8781               	bsf	129,3,b	;volatile
 28244                           
 28245                           ; BSR set to: 57
 28246                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 28247  01980C  52E5               	movf	postdec1,f,c
 28248  01980E  0012               	return		;funcret
 28249  019810                     __end_of_INTERRUPT_Initialize:
 28250                           	opt callstack 0
 28251                           
 28252 ;; *************** function _FVR_Initialize *****************
 28253 ;; Defined at:
 28254 ;;		line 58 in file "mcc_generated_files/fvr.c"
 28255 ;; Parameters:    Size  Location     Type
 28256 ;;		None
 28257 ;; Auto vars:     Size  Location     Type
 28258 ;;		None
 28259 ;; Return value:  Size  Location     Type
 28260 ;;                  1  [STACK] void 
 28261 ;; Registers used:
 28262 ;;		wreg, status,2
 28263 ;; Tracked objects:
 28264 ;;		On entry : 3F/39
 28265 ;;		On exit  : 3F/3E
 28266 ;;		Unchanged: 0/0
 28267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28272 ;;Total ram usage:        0 bytes
 28273 ;; Hardware stack levels used:    1
 28274 ;; Hardware stack levels required when called:   15
 28275 ;; This function calls:
 28276 ;;		Nothing
 28277 ;; This function is called by:
 28278 ;;		_SYSTEM_Initialize
 28279 ;; This function uses a reentrant model
 28280 ;;
 28281                           
 28282                           	psect	text121
 28283  01A8F2                     __ptext121:
 28284                           	opt callstack 0
 28285  01A8F2                     _FVR_Initialize:
 28286                           	opt callstack 14
 28287                           
 28288                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 28289                           
 28290                           ; BSR set to: 57
 28291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28292                           ;incstack = 0
 28293  01A8F2  0EAF               	movlw	175
 28294  01A8F4  013E               	movlb	62	; () banked
 28295  01A8F6  6FC1               	movwf	193,b	;volatile
 28296                           
 28297                           ; BSR set to: 62
 28298                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 28299  01A8F8  0012               	return		;funcret
 28300  01A8FA                     __end_of_FVR_Initialize:
 28301                           	opt callstack 0
 28302                           
 28303 ;; *************** function _EXT_INT_Initialize *****************
 28304 ;; Defined at:
 28305 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 28306 ;; Parameters:    Size  Location     Type
 28307 ;;		None
 28308 ;; Auto vars:     Size  Location     Type
 28309 ;;		None
 28310 ;; Return value:  Size  Location     Type
 28311 ;;                  1  [STACK] void 
 28312 ;; Registers used:
 28313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28314 ;; Tracked objects:
 28315 ;;		On entry : 3F/39
 28316 ;;		On exit  : 3F/39
 28317 ;;		Unchanged: 0/0
 28318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28323 ;;Total ram usage:        0 bytes
 28324 ;; Hardware stack levels used:    1
 28325 ;; Hardware stack levels required when called:   16
 28326 ;; This function calls:
 28327 ;;		_INT0_SetInterruptHandler
 28328 ;;		_INT1_SetInterruptHandler
 28329 ;; This function is called by:
 28330 ;;		_SYSTEM_Initialize
 28331 ;; This function uses a reentrant model
 28332 ;;
 28333                           
 28334                           	psect	text122
 28335  01A076                     __ptext122:
 28336                           	opt callstack 0
 28337  01A076                     _EXT_INT_Initialize:
 28338                           	opt callstack 13
 28339                           
 28340                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 28341                           
 28342                           ; BSR set to: 62
 28343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28344                           ;incstack = 0
 28345  01A076  0139               	movlb	57	; () banked
 28346  01A078  91A1               	bcf	161,0,b	;volatile
 28347                           
 28348                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 28349  01A07A  90D2               	bcf	210,0,c	;volatile
 28350                           
 28351                           ; BSR set to: 57
 28352                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 28353  01A07C  0E1E               	movlw	low _INT0_DefaultInterruptHandler
 28354  01A07E  6EE6               	movwf	postinc1,c
 28355  01A080  0EA9               	movlw	high _INT0_DefaultInterruptHandler
 28356  01A082  6EE6               	movwf	postinc1,c
 28357  01A084  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 28358  01A086  6EE6               	movwf	postinc1,c
 28359  01A088  EC2F  F0D2         	call	_INT0_SetInterruptHandler	;wreg free
 28360                           
 28361                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 28362  01A08C  0139               	movlb	57	; () banked
 28363  01A08E  8191               	bsf	145,0,b	;volatile
 28364                           
 28365                           ; BSR set to: 57
 28366                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 28367  01A090  91A5               	bcf	165,0,b	;volatile
 28368                           
 28369                           ; BSR set to: 57
 28370                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 28371  01A092  92D2               	bcf	210,1,c	;volatile
 28372                           
 28373                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 28374  01A094  0E1A               	movlw	low _INT1_DefaultInterruptHandler
 28375  01A096  6EE6               	movwf	postinc1,c
 28376  01A098  0EA9               	movlw	high _INT1_DefaultInterruptHandler
 28377  01A09A  6EE6               	movwf	postinc1,c
 28378  01A09C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 28379  01A09E  6EE6               	movwf	postinc1,c
 28380  01A0A0  EC1B  F0D2         	call	_INT1_SetInterruptHandler	;wreg free
 28381                           
 28382                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 28383  01A0A4  0139               	movlb	57	; () banked
 28384  01A0A6  8195               	bsf	149,0,b	;volatile
 28385                           
 28386                           ; BSR set to: 57
 28387                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28388  01A0A8  0012               	return		;funcret
 28389  01A0AA                     __end_of_EXT_INT_Initialize:
 28390                           	opt callstack 0
 28391                           
 28392 ;; *************** function _INT1_SetInterruptHandler *****************
 28393 ;; Defined at:
 28394 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 28395 ;; Parameters:    Size  Location     Type
 28396 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28397 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 28398 ;; Auto vars:     Size  Location     Type
 28399 ;;		None
 28400 ;; Return value:  Size  Location     Type
 28401 ;;                  1  [STACK] void 
 28402 ;; Registers used:
 28403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28404 ;; Tracked objects:
 28405 ;;		On entry : 3F/39
 28406 ;;		On exit  : 0/0
 28407 ;;		Unchanged: 0/0
 28408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28413 ;;Total ram usage:        0 bytes
 28414 ;; Hardware stack levels used:    1
 28415 ;; Hardware stack levels required when called:   15
 28416 ;; This function calls:
 28417 ;;		Nothing
 28418 ;; This function is called by:
 28419 ;;		_EXT_INT_Initialize
 28420 ;;		_start_switch_handler
 28421 ;; This function uses a reentrant model
 28422 ;;
 28423                           
 28424                           	psect	text123
 28425  01A436                     __ptext123:
 28426                           	opt callstack 0
 28427  01A436                     _INT1_SetInterruptHandler:
 28428                           	opt callstack 14
 28429                           
 28430                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 28431                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28432                           
 28433                           ; BSR set to: 57
 28434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28435                           ;incstack = 0
 28436  01A436  50E1               	movf	fsr1l,w,c
 28437  01A438  0FFD               	addlw	-3
 28438  01A43A  6ED9               	movwf	fsr2l,c
 28439  01A43C  50E2               	movf	fsr1h,w,c
 28440  01A43E  6EDA               	movwf	fsr2h,c
 28441  01A440  0EFF               	movlw	255
 28442  01A442  22DA               	addwfc	fsr2h,f,c
 28443  01A444  006F FF78  F0C1    	movff	postinc2,_INT1_InterruptHandler
 28444  01A44A  006F FF78  F0C2    	movff	postinc2,_INT1_InterruptHandler+1
 28445  01A450  006F FF74  F0C3    	movff	postdec2,_INT1_InterruptHandler+2
 28446                           
 28447                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28448  01A456  52E5               	movf	postdec1,f,c
 28449  01A458  52E5               	movf	postdec1,f,c
 28450  01A45A  52E5               	movf	postdec1,f,c
 28451  01A45C  0012               	return		;funcret
 28452  01A45E                     __end_of_INT1_SetInterruptHandler:
 28453                           	opt callstack 0
 28454                           
 28455 ;; *************** function _INT0_SetInterruptHandler *****************
 28456 ;; Defined at:
 28457 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 28458 ;; Parameters:    Size  Location     Type
 28459 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28460 ;;		 -> INT0_DefaultInterruptHandler(1), 
 28461 ;; Auto vars:     Size  Location     Type
 28462 ;;		None
 28463 ;; Return value:  Size  Location     Type
 28464 ;;                  1  [STACK] void 
 28465 ;; Registers used:
 28466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28467 ;; Tracked objects:
 28468 ;;		On entry : 3F/39
 28469 ;;		On exit  : 0/0
 28470 ;;		Unchanged: 0/0
 28471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28476 ;;Total ram usage:        0 bytes
 28477 ;; Hardware stack levels used:    1
 28478 ;; Hardware stack levels required when called:   15
 28479 ;; This function calls:
 28480 ;;		Nothing
 28481 ;; This function is called by:
 28482 ;;		_EXT_INT_Initialize
 28483 ;; This function uses a reentrant model
 28484 ;;
 28485                           
 28486                           	psect	text124
 28487  01A45E                     __ptext124:
 28488                           	opt callstack 0
 28489  01A45E                     _INT0_SetInterruptHandler:
 28490                           	opt callstack 13
 28491                           
 28492                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 28493                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28494                           
 28495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28496                           ;incstack = 0
 28497  01A45E  50E1               	movf	fsr1l,w,c
 28498  01A460  0FFD               	addlw	-3
 28499  01A462  6ED9               	movwf	fsr2l,c
 28500  01A464  50E2               	movf	fsr1h,w,c
 28501  01A466  6EDA               	movwf	fsr2h,c
 28502  01A468  0EFF               	movlw	255
 28503  01A46A  22DA               	addwfc	fsr2h,f,c
 28504  01A46C  006F FF78  F0C4    	movff	postinc2,_INT0_InterruptHandler
 28505  01A472  006F FF78  F0C5    	movff	postinc2,_INT0_InterruptHandler+1
 28506  01A478  006F FF74  F0C6    	movff	postdec2,_INT0_InterruptHandler+2
 28507                           
 28508                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28509  01A47E  52E5               	movf	postdec1,f,c
 28510  01A480  52E5               	movf	postdec1,f,c
 28511  01A482  52E5               	movf	postdec1,f,c
 28512  01A484  0012               	return		;funcret
 28513  01A486                     __end_of_INT0_SetInterruptHandler:
 28514                           	opt callstack 0
 28515                           
 28516 ;; *************** function _DMA2_Initialize *****************
 28517 ;; Defined at:
 28518 ;;		line 61 in file "mcc_generated_files/dma2.c"
 28519 ;; Parameters:    Size  Location     Type
 28520 ;;		None
 28521 ;; Auto vars:     Size  Location     Type
 28522 ;;		None
 28523 ;; Return value:  Size  Location     Type
 28524 ;;                  1  [STACK] void 
 28525 ;; Registers used:
 28526 ;;		wreg, status,2
 28527 ;; Tracked objects:
 28528 ;;		On entry : 3F/3D
 28529 ;;		On exit  : 3F/3B
 28530 ;;		Unchanged: 0/0
 28531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28536 ;;Total ram usage:        0 bytes
 28537 ;; Hardware stack levels used:    1
 28538 ;; Hardware stack levels required when called:   15
 28539 ;; This function calls:
 28540 ;;		Nothing
 28541 ;; This function is called by:
 28542 ;;		_SYSTEM_Initialize
 28543 ;; This function uses a reentrant model
 28544 ;;
 28545                           
 28546                           	psect	text125
 28547  0199F0                     __ptext125:
 28548                           	opt callstack 0
 28549  0199F0                     _DMA2_Initialize:
 28550                           	opt callstack 14
 28551                           
 28552                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 28553                           
 28554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28555                           ;incstack = 0
 28556  0199F0  0E00               	movlw	0
 28557  0199F2  013B               	movlb	59	; () banked
 28558  0199F4  6FD9               	movwf	217,b	;volatile
 28559  0199F6  0E10               	movlw	16
 28560  0199F8  6FDA               	movwf	218,b	;volatile
 28561  0199FA  0E00               	movlw	0
 28562  0199FC  6FDB               	movwf	219,b	;volatile
 28563                           
 28564                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 28565  0199FE  0E3F               	movlw	63
 28566  019A00  6FD1               	movwf	209,b	;volatile
 28567  019A02  0EBB               	movlw	187
 28568  019A04  6FD0               	movwf	208,b	;volatile
 28569                           
 28570                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 28571  019A06  0E03               	movlw	3
 28572  019A08  6FDD               	movwf	221,b	;volatile
 28573                           
 28574                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 28575  019A0A  0E00               	movlw	0
 28576  019A0C  6FD8               	movwf	216,b	;volatile
 28577  019A0E  0E01               	movlw	1
 28578  019A10  6FD7               	movwf	215,b	;volatile
 28579                           
 28580                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 28581  019A12  0E00               	movlw	0
 28582  019A14  6FCF               	movwf	207,b	;volatile
 28583  019A16  0E01               	movlw	1
 28584  019A18  6FCE               	movwf	206,b	;volatile
 28585                           
 28586                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 28587  019A1A  0E1C               	movlw	28
 28588  019A1C  6FDF               	movwf	223,b	;volatile
 28589                           
 28590                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 28591  019A1E  0E3D               	movlw	61
 28592  019A20  6FDE               	movwf	222,b	;volatile
 28593                           
 28594                           ; BSR set to: 59
 28595                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 28596  019A22  0139               	movlb	57	; () banked
 28597  019A24  97A5               	bcf	165,3,b	;volatile
 28598                           
 28599                           ; BSR set to: 57
 28600                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 28601  019A26  95A5               	bcf	165,2,b	;volatile
 28602                           
 28603                           ; BSR set to: 57
 28604                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 28605  019A28  9BA5               	bcf	165,5,b	;volatile
 28606                           
 28607                           ; BSR set to: 57
 28608                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 28609  019A2A  99A5               	bcf	165,4,b	;volatile
 28610                           
 28611                           ; BSR set to: 57
 28612                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 28613  019A2C  9795               	bcf	149,3,b	;volatile
 28614                           
 28615                           ; BSR set to: 57
 28616                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 28617  019A2E  9595               	bcf	149,2,b	;volatile
 28618                           
 28619                           ; BSR set to: 57
 28620                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 28621  019A30  9B95               	bcf	149,5,b	;volatile
 28622                           
 28623                           ; BSR set to: 57
 28624                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 28625  019A32  9995               	bcf	149,4,b	;volatile
 28626  019A34  9ED2               	bcf	16338,7,c	;# 
 28627  019A36  0139               	banksel	14831	;# 
 28628  019A38  0E55               	movlw	85	;# 
 28629  019A3A  6FEF               	movwf	14831,b	;# 
 28630  019A3C  0EAA               	movlw	170	;# 
 28631  019A3E  6FEF               	movwf	14831,b	;# 
 28632  019A40  81EF               	bsf	14831,0,b	;# 
 28633  019A42  8ED2               	bsf	16338,7,c	;# 
 28634                           
 28635                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 28636  019A44  013B               	movlb	59	; () banked
 28637  019A46  6BDC               	clrf	220,b	;volatile
 28638                           
 28639                           ; BSR set to: 59
 28640                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28641  019A48  0012               	return		;funcret
 28642  019A4A                     __end_of_DMA2_Initialize:
 28643                           	opt callstack 0
 28644                           
 28645 ;; *************** function _DMA1_Initialize *****************
 28646 ;; Defined at:
 28647 ;;		line 86 in file "mcc_generated_files/dma1.c"
 28648 ;; Parameters:    Size  Location     Type
 28649 ;;		None
 28650 ;; Auto vars:     Size  Location     Type
 28651 ;;		None
 28652 ;; Return value:  Size  Location     Type
 28653 ;;                  1  [STACK] void 
 28654 ;; Registers used:
 28655 ;;		wreg, status,2
 28656 ;; Tracked objects:
 28657 ;;		On entry : 3F/3B
 28658 ;;		On exit  : 3F/3B
 28659 ;;		Unchanged: 0/0
 28660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28665 ;;Total ram usage:        0 bytes
 28666 ;; Hardware stack levels used:    1
 28667 ;; Hardware stack levels required when called:   15
 28668 ;; This function calls:
 28669 ;;		Nothing
 28670 ;; This function is called by:
 28671 ;;		_SYSTEM_Initialize
 28672 ;; This function uses a reentrant model
 28673 ;;
 28674                           
 28675                           	psect	text126
 28676  01966A                     __ptext126:
 28677                           	opt callstack 0
 28678  01966A                     _DMA1_Initialize:
 28679                           	opt callstack 14
 28680                           
 28681                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 28682                           
 28683                           ; BSR set to: 59
 28684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28685                           ;incstack = 0
 28686  01966A  0E00               	movlw	0
 28687  01966C  013B               	movlb	59	; () banked
 28688  01966E  6FF9               	movwf	249,b	;volatile
 28689  019670  0E10               	movlw	16
 28690  019672  6FFA               	movwf	250,b	;volatile
 28691  019674  0E00               	movlw	0
 28692  019676  6FFB               	movwf	251,b	;volatile
 28693                           
 28694                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 28695  019678  0E3D               	movlw	61
 28696  01967A  6FF1               	movwf	241,b	;volatile
 28697  01967C  0E11               	movlw	17
 28698  01967E  6FF0               	movwf	240,b	;volatile
 28699                           
 28700                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 28701  019680  0E03               	movlw	3
 28702  019682  6FFD               	movwf	253,b	;volatile
 28703                           
 28704                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 28705  019684  0E00               	movlw	0
 28706  019686  6FF8               	movwf	248,b	;volatile
 28707  019688  0E01               	movlw	1
 28708  01968A  6FF7               	movwf	247,b	;volatile
 28709                           
 28710                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 28711  01968C  0E00               	movlw	0
 28712  01968E  6FEF               	movwf	239,b	;volatile
 28713  019690  0E01               	movlw	1
 28714  019692  6FEE               	movwf	238,b	;volatile
 28715                           
 28716                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 28717  019694  0E15               	movlw	21
 28718  019696  6FFF               	movwf	255,b	;volatile
 28719                           
 28720                           ; BSR set to: 59
 28721                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 28722  019698  6BFE               	clrf	254,b	;volatile
 28723                           
 28724                           ; BSR set to: 59
 28725                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 28726  01969A  0139               	movlb	57	; () banked
 28727  01969C  93A2               	bcf	162,1,b	;volatile
 28728                           
 28729                           ; BSR set to: 57
 28730                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 28731  01969E  91A2               	bcf	162,0,b	;volatile
 28732                           
 28733                           ; BSR set to: 57
 28734                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 28735  0196A0  97A2               	bcf	162,3,b	;volatile
 28736                           
 28737                           ; BSR set to: 57
 28738                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 28739  0196A2  95A2               	bcf	162,2,b	;volatile
 28740                           
 28741                           ; BSR set to: 57
 28742                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 28743  0196A4  8392               	bsf	146,1,b	;volatile
 28744                           
 28745                           ; BSR set to: 57
 28746                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 28747  0196A6  8192               	bsf	146,0,b	;volatile
 28748                           
 28749                           ; BSR set to: 57
 28750                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 28751  0196A8  8792               	bsf	146,3,b	;volatile
 28752                           
 28753                           ; BSR set to: 57
 28754                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 28755  0196AA  8592               	bsf	146,2,b	;volatile
 28756                           
 28757                           ; BSR set to: 57
 28758                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 28759  0196AC  6BF1               	clrf	241,b	;volatile
 28760                           
 28761                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 28762  0196AE  0E01               	movlw	1
 28763  0196B0  6FF2               	movwf	242,b	;volatile
 28764                           
 28765                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 28766  0196B2  0E04               	movlw	4
 28767  0196B4  6FF3               	movwf	243,b	;volatile
 28768                           
 28769                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 28770  0196B6  0E02               	movlw	2
 28771  0196B8  6FF4               	movwf	244,b	;volatile
 28772                           
 28773                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 28774  0196BA  0E03               	movlw	3
 28775  0196BC  6FF7               	movwf	247,b	;volatile
 28776  0196BE  9ED2               	bcf	16338,7,c	;# 
 28777  0196C0  0139               	banksel	14831	;# 
 28778  0196C2  0E55               	movlw	85	;# 
 28779  0196C4  6FEF               	movwf	14831,b	;# 
 28780  0196C6  0EAA               	movlw	170	;# 
 28781  0196C8  6FEF               	movwf	14831,b	;# 
 28782  0196CA  81EF               	bsf	14831,0,b	;# 
 28783  0196CC  8ED2               	bsf	16338,7,c	;# 
 28784                           
 28785                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 28786  0196CE  013B               	movlb	59	; () banked
 28787  0196D0  6BFC               	clrf	252,b	;volatile
 28788                           
 28789                           ; BSR set to: 59
 28790                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28791  0196D2  0012               	return		;funcret
 28792  0196D4                     __end_of_DMA1_Initialize:
 28793                           	opt callstack 0
 28794                           
 28795 ;; *************** function _CLKREF_Initialize *****************
 28796 ;; Defined at:
 28797 ;;		line 58 in file "mcc_generated_files/clkref.c"
 28798 ;; Parameters:    Size  Location     Type
 28799 ;;		None
 28800 ;; Auto vars:     Size  Location     Type
 28801 ;;		None
 28802 ;; Return value:  Size  Location     Type
 28803 ;;                  1  [STACK] void 
 28804 ;; Registers used:
 28805 ;;		wreg, status,2
 28806 ;; Tracked objects:
 28807 ;;		On entry : 3F/3B
 28808 ;;		On exit  : 3F/3C
 28809 ;;		Unchanged: 0/0
 28810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28815 ;;Total ram usage:        0 bytes
 28816 ;; Hardware stack levels used:    1
 28817 ;; Hardware stack levels required when called:   15
 28818 ;; This function calls:
 28819 ;;		Nothing
 28820 ;; This function is called by:
 28821 ;;		_SYSTEM_Initialize
 28822 ;; This function uses a reentrant model
 28823 ;;
 28824                           
 28825                           	psect	text127
 28826  01A89A                     __ptext127:
 28827                           	opt callstack 0
 28828  01A89A                     _CLKREF_Initialize:
 28829                           	opt callstack 14
 28830                           
 28831                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 28832                           
 28833                           ; BSR set to: 59
 28834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28835                           ;incstack = 0
 28836  01A89A  013C               	movlb	60	; () banked
 28837  01A89C  6BE6               	clrf	230,b	;volatile
 28838                           
 28839                           ; BSR set to: 60
 28840                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 28841  01A89E  0E94               	movlw	148
 28842  01A8A0  6FE5               	movwf	229,b	;volatile
 28843                           
 28844                           ; BSR set to: 60
 28845                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28846  01A8A2  0012               	return		;funcret
 28847  01A8A4                     __end_of_CLKREF_Initialize:
 28848                           	opt callstack 0
 28849                           
 28850 ;; *************** function _ADCC_Initialize *****************
 28851 ;; Defined at:
 28852 ;;		line 65 in file "mcc_generated_files/adcc.c"
 28853 ;; Parameters:    Size  Location     Type
 28854 ;;		None
 28855 ;; Auto vars:     Size  Location     Type
 28856 ;;		None
 28857 ;; Return value:  Size  Location     Type
 28858 ;;                  1  [STACK] void 
 28859 ;; Registers used:
 28860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28861 ;; Tracked objects:
 28862 ;;		On entry : 3F/3E
 28863 ;;		On exit  : 0/0
 28864 ;;		Unchanged: 0/0
 28865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28870 ;;Total ram usage:        0 bytes
 28871 ;; Hardware stack levels used:    1
 28872 ;; Hardware stack levels required when called:   16
 28873 ;; This function calls:
 28874 ;;		_ADCC_SetADIInterruptHandler
 28875 ;;		_ADCC_SetADTIInterruptHandler
 28876 ;; This function is called by:
 28877 ;;		_SYSTEM_Initialize
 28878 ;; This function uses a reentrant model
 28879 ;;
 28880                           
 28881                           	psect	text128
 28882  0196D4                     __ptext128:
 28883                           	opt callstack 0
 28884  0196D4                     _ADCC_Initialize:
 28885                           	opt callstack 13
 28886                           
 28887                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 28888                           
 28889                           ; BSR set to: 60
 28890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28891                           ;incstack = 0
 28892  0196D4  013E               	movlb	62	; () banked
 28893  0196D6  6BDE               	clrf	222,b	;volatile
 28894                           
 28895                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 28896  0196D8  6BDF               	clrf	223,b	;volatile
 28897                           
 28898                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 28899  0196DA  6BE0               	clrf	224,b	;volatile
 28900                           
 28901                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 28902  0196DC  6BE1               	clrf	225,b	;volatile
 28903                           
 28904                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 28905  0196DE  6BE4               	clrf	228,b	;volatile
 28906                           
 28907                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 28908  0196E0  6BE5               	clrf	229,b	;volatile
 28909                           
 28910                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 28911  0196E2  6BEA               	clrf	234,b	;volatile
 28912                           
 28913                           ; BSR set to: 62
 28914                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 28915  0196E4  0E40               	movlw	64
 28916  0196E6  6FEC               	movwf	236,b	;volatile
 28917                           
 28918                           ; BSR set to: 62
 28919                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 28920  0196E8  6BF1               	clrf	241,b	;volatile
 28921                           
 28922                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 28923  0196EA  0E20               	movlw	32
 28924  0196EC  6FF3               	movwf	243,b	;volatile
 28925                           
 28926                           ; BSR set to: 62
 28927                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 28928  0196EE  6BF4               	clrf	244,b	;volatile
 28929                           
 28930                           ; BSR set to: 62
 28931                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 28932  0196F0  6BF5               	clrf	245,b	;volatile
 28933                           
 28934                           ; BSR set to: 62
 28935                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 28936  0196F2  6BF6               	clrf	246,b	;volatile
 28937                           
 28938                           ; BSR set to: 62
 28939                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 28940  0196F4  6BF7               	clrf	247,b	;volatile
 28941                           
 28942                           ; BSR set to: 62
 28943                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 28944  0196F6  6BF9               	clrf	249,b	;volatile
 28945                           
 28946                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 28947  0196F8  0E5B               	movlw	91
 28948  0196FA  6FFA               	movwf	250,b	;volatile
 28949                           
 28950                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 28951  0196FC  0E27               	movlw	39
 28952  0196FE  6FFB               	movwf	251,b	;volatile
 28953                           
 28954                           ; BSR set to: 62
 28955                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 28956  019700  6BFC               	clrf	252,b	;volatile
 28957                           
 28958                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 28959  019702  0E02               	movlw	2
 28960  019704  6FFD               	movwf	253,b	;volatile
 28961                           
 28962                           ; BSR set to: 62
 28963                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 28964  019706  6BFE               	clrf	254,b	;volatile
 28965                           
 28966                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 28967  019708  0E07               	movlw	7
 28968  01970A  6FFF               	movwf	255,b	;volatile
 28969                           
 28970                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 28971  01970C  0E84               	movlw	132
 28972  01970E  6FF8               	movwf	248,b	;volatile
 28973                           
 28974                           ; BSR set to: 62
 28975                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 28976  019710  0139               	movlb	57	; () banked
 28977  019712  95A1               	bcf	161,2,b	;volatile
 28978                           
 28979                           ; BSR set to: 57
 28980                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 28981  019714  8591               	bsf	145,2,b	;volatile
 28982                           
 28983                           ; BSR set to: 57
 28984                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 28985  019716  0E20               	movlw	low _ADCC_DefaultInterruptHandler
 28986  019718  6EE6               	movwf	postinc1,c
 28987  01971A  0EA9               	movlw	high _ADCC_DefaultInterruptHandler
 28988  01971C  6EE6               	movwf	postinc1,c
 28989  01971E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 28990  019720  6EE6               	movwf	postinc1,c
 28991  019722  EC57  F0D2         	call	_ADCC_SetADIInterruptHandler	;wreg free
 28992                           
 28993                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 28994  019726  0139               	movlb	57	; () banked
 28995  019728  97A1               	bcf	161,3,b	;volatile
 28996                           
 28997                           ; BSR set to: 57
 28998                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 28999  01972A  8791               	bsf	145,3,b	;volatile
 29000                           
 29001                           ; BSR set to: 57
 29002                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 29003  01972C  0E20               	movlw	low _ADCC_DefaultInterruptHandler
 29004  01972E  6EE6               	movwf	postinc1,c
 29005  019730  0EA9               	movlw	high _ADCC_DefaultInterruptHandler
 29006  019732  6EE6               	movwf	postinc1,c
 29007  019734  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 29008  019736  6EE6               	movwf	postinc1,c
 29009  019738  EC43  F0D2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 29010                           
 29011                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29012  01973C  0012               	return		;funcret
 29013  01973E                     __end_of_ADCC_Initialize:
 29014                           	opt callstack 0
 29015                           
 29016 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 29017 ;; Defined at:
 29018 ;;		line 336 in file "mcc_generated_files/adcc.c"
 29019 ;; Parameters:    Size  Location     Type
 29020 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29021 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 29022 ;; Auto vars:     Size  Location     Type
 29023 ;;		None
 29024 ;; Return value:  Size  Location     Type
 29025 ;;                  1  [STACK] void 
 29026 ;; Registers used:
 29027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29028 ;; Tracked objects:
 29029 ;;		On entry : 0/0
 29030 ;;		On exit  : 0/0
 29031 ;;		Unchanged: 0/0
 29032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29037 ;;Total ram usage:        0 bytes
 29038 ;; Hardware stack levels used:    1
 29039 ;; Hardware stack levels required when called:   15
 29040 ;; This function calls:
 29041 ;;		Nothing
 29042 ;; This function is called by:
 29043 ;;		_ADCC_Initialize
 29044 ;;		_start_adc_scan
 29045 ;; This function uses a reentrant model
 29046 ;;
 29047                           
 29048                           	psect	text129
 29049  01A486                     __ptext129:
 29050                           	opt callstack 0
 29051  01A486                     _ADCC_SetADTIInterruptHandler:
 29052                           	opt callstack 14
 29053                           
 29054                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 29055                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29056                           
 29057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29058                           ;incstack = 0
 29059  01A486  50E1               	movf	fsr1l,w,c
 29060  01A488  0FFD               	addlw	-3
 29061  01A48A  6ED9               	movwf	fsr2l,c
 29062  01A48C  50E2               	movf	fsr1h,w,c
 29063  01A48E  6EDA               	movwf	fsr2h,c
 29064  01A490  0EFF               	movlw	255
 29065  01A492  22DA               	addwfc	fsr2h,f,c
 29066  01A494  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 29067  01A49A  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 29068  01A4A0  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 29069                           
 29070                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 29071  01A4A6  52E5               	movf	postdec1,f,c
 29072  01A4A8  52E5               	movf	postdec1,f,c
 29073  01A4AA  52E5               	movf	postdec1,f,c
 29074  01A4AC  0012               	return		;funcret
 29075  01A4AE                     __end_of_ADCC_SetADTIInterruptHandler:
 29076                           	opt callstack 0
 29077                           
 29078 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 29079 ;; Defined at:
 29080 ;;		line 323 in file "mcc_generated_files/adcc.c"
 29081 ;; Parameters:    Size  Location     Type
 29082 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29083 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 29084 ;; Auto vars:     Size  Location     Type
 29085 ;;		None
 29086 ;; Return value:  Size  Location     Type
 29087 ;;                  1  [STACK] void 
 29088 ;; Registers used:
 29089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29090 ;; Tracked objects:
 29091 ;;		On entry : 6/0
 29092 ;;		On exit  : 0/0
 29093 ;;		Unchanged: 0/0
 29094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29099 ;;Total ram usage:        0 bytes
 29100 ;; Hardware stack levels used:    1
 29101 ;; Hardware stack levels required when called:   15
 29102 ;; This function calls:
 29103 ;;		Nothing
 29104 ;; This function is called by:
 29105 ;;		_ADCC_Initialize
 29106 ;;		_start_adc_scan
 29107 ;; This function uses a reentrant model
 29108 ;;
 29109                           
 29110                           	psect	text130
 29111  01A4AE                     __ptext130:
 29112                           	opt callstack 0
 29113  01A4AE                     _ADCC_SetADIInterruptHandler:
 29114                           	opt callstack 14
 29115                           
 29116                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 29117                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29118                           
 29119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29120                           ;incstack = 0
 29121  01A4AE  50E1               	movf	fsr1l,w,c
 29122  01A4B0  0FFD               	addlw	-3
 29123  01A4B2  6ED9               	movwf	fsr2l,c
 29124  01A4B4  50E2               	movf	fsr1h,w,c
 29125  01A4B6  6EDA               	movwf	fsr2h,c
 29126  01A4B8  0EFF               	movlw	255
 29127  01A4BA  22DA               	addwfc	fsr2h,f,c
 29128  01A4BC  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 29129  01A4C2  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 29130  01A4C8  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 29131                           
 29132                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29133  01A4CE  52E5               	movf	postdec1,f,c
 29134  01A4D0  52E5               	movf	postdec1,f,c
 29135  01A4D2  52E5               	movf	postdec1,f,c
 29136  01A4D4  0012               	return		;funcret
 29137  01A4D6                     __end_of_ADCC_SetADIInterruptHandler:
 29138                           	opt callstack 0
 29139                           
 29140 ;; *************** function _INT1_ISR *****************
 29141 ;; Defined at:
 29142 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 29143 ;; Parameters:    Size  Location     Type
 29144 ;;		None
 29145 ;; Auto vars:     Size  Location     Type
 29146 ;;		None
 29147 ;; Return value:  Size  Location     Type
 29148 ;;                  1    wreg      void 
 29149 ;; Registers used:
 29150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 29151 ;; Tracked objects:
 29152 ;;		On entry : 0/0
 29153 ;;		On exit  : 0/0
 29154 ;;		Unchanged: 0/0
 29155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29158 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29159 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29160 ;;Total ram usage:        4 bytes
 29161 ;; Hardware stack levels used:    1
 29162 ;; Hardware stack levels required when called:    5
 29163 ;; This function calls:
 29164 ;;		_INT1_CallBack
 29165 ;; This function is called by:
 29166 ;;		Interrupt level 1
 29167 ;; This function uses a non-reentrant model
 29168 ;;
 29169                           
 29170                           	psect	text131
 29171  019F60                     __ptext131:
 29172                           	opt callstack 0
 29173  019F60                     _INT1_ISR:
 29174                           	opt callstack 12
 29175                           
 29176                           ;incstack = 0
 29177  019F60  006F FF60  F03E    	movff	status,??_INT1_ISR
 29178  019F66  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 29179  019F6C  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 29180  019F72  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 29181  019F78  EE16  F061         	lfsr	1,___intlo_sp
 29182                           
 29183                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 29184  019F7C  0139               	movlb	57	; () banked
 29185  019F7E  91A5               	bcf	165,0,b	;volatile
 29186                           
 29187                           ; BSR set to: 57
 29188                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 29189  019F80  ECCC  F0D2         	call	_INT1_CallBack	;wreg free
 29190  019F84  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 29191  019F8A  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 29192  019F90  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 29193  019F96  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 29194  019F9C  0011               	retfie		f
 29195  019F9E                     __end_of_INT1_ISR:
 29196                           	opt callstack 0
 29197                           
 29198 ;; *************** function _INT1_CallBack *****************
 29199 ;; Defined at:
 29200 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 29201 ;; Parameters:    Size  Location     Type
 29202 ;;		None
 29203 ;; Auto vars:     Size  Location     Type
 29204 ;;		None
 29205 ;; Return value:  Size  Location     Type
 29206 ;;                  1  [STACK] void 
 29207 ;; Registers used:
 29208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 29209 ;; Tracked objects:
 29210 ;;		On entry : 3F/39
 29211 ;;		On exit  : 0/0
 29212 ;;		Unchanged: 0/0
 29213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29218 ;;Total ram usage:        0 bytes
 29219 ;; Hardware stack levels used:    1
 29220 ;; Hardware stack levels required when called:    4
 29221 ;; This function calls:
 29222 ;;		Absolute function
 29223 ;;		_INT1_DefaultInterruptHandler
 29224 ;;		_switch_handler
 29225 ;; This function is called by:
 29226 ;;		_INT1_ISR
 29227 ;; This function uses a reentrant model
 29228 ;;
 29229                           
 29230                           	psect	text132
 29231  01A598                     __ptext132:
 29232                           	opt callstack 0
 29233  01A598                     _INT1_CallBack:
 29234                           	opt callstack 12
 29235                           
 29236                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 29237                           
 29238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29239                           ;incstack = 0
 29240  01A598  0100               	movlb	0	; () banked
 29241  01A59A  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 29242  01A59C  11C2               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 29243  01A59E  11C3               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 29244  01A5A0  B4D8               	btfsc	status,2,c
 29245  01A5A2  0012               	return	
 29246                           
 29247                           ; BSR set to: 0
 29248                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 29249  01A5A4  D801               	call	u931_28
 29250  01A5A6  0012               	return	
 29251  01A5A8                     u931_28:
 29252  01A5A8  0005               	push	
 29253  01A5AA  6EFA               	movwf	pclath,c
 29254  01A5AC  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 29255  01A5AE  6EFD               	movwf	tosl,c
 29256  01A5B0  51C2               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 29257  01A5B2  6EFE               	movwf	tosh,c
 29258  01A5B4  51C3               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 29259  01A5B6  6EFF               	movwf	tosu,c
 29260  01A5B8  50FA               	movf	pclath,w,c
 29261  01A5BA  0012               	return		;indir
 29262  01A5BC                     __end_of_INT1_CallBack:
 29263                           	opt callstack 0
 29264                           
 29265 ;; *************** function _INT1_DefaultInterruptHandler *****************
 29266 ;; Defined at:
 29267 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 29268 ;; Parameters:    Size  Location     Type
 29269 ;;		None
 29270 ;; Auto vars:     Size  Location     Type
 29271 ;;		None
 29272 ;; Return value:  Size  Location     Type
 29273 ;;                  1  [STACK] void 
 29274 ;; Registers used:
 29275 ;;		None
 29276 ;; Tracked objects:
 29277 ;;		On entry : 3F/0
 29278 ;;		On exit  : 0/0
 29279 ;;		Unchanged: 0/0
 29280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29285 ;;Total ram usage:        0 bytes
 29286 ;; Hardware stack levels used:    1
 29287 ;; Hardware stack levels required when called:    3
 29288 ;; This function calls:
 29289 ;;		Nothing
 29290 ;; This function is called by:
 29291 ;;		_EXT_INT_Initialize
 29292 ;;		_INT1_CallBack
 29293 ;; This function uses a reentrant model
 29294 ;;
 29295                           
 29296                           	psect	text133
 29297  01A91A                     __ptext133:
 29298                           	opt callstack 0
 29299  01A91A                     _INT1_DefaultInterruptHandler:
 29300                           	opt callstack 12
 29301                           
 29302                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29303                           
 29304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29305                           ;incstack = 0
 29306  01A91A  0012               	return		;funcret
 29307  01A91C                     __end_of_INT1_DefaultInterruptHandler:
 29308                           	opt callstack 0
 29309                           
 29310 ;; *************** function _switch_handler *****************
 29311 ;; Defined at:
 29312 ;;		line 58 in file "dio.c"
 29313 ;; Parameters:    Size  Location     Type
 29314 ;;		None
 29315 ;; Auto vars:     Size  Location     Type
 29316 ;;  i               1  [STACK] unsigned char 
 29317 ;;  sw_value        1  [STACK] unsigned char 
 29318 ;; Return value:  Size  Location     Type
 29319 ;;                  1  [STACK] void 
 29320 ;; Registers used:
 29321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 29322 ;; Tracked objects:
 29323 ;;		On entry : 3F/0
 29324 ;;		On exit  : 0/0
 29325 ;;		Unchanged: 0/0
 29326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29331 ;;Total ram usage:        0 bytes
 29332 ;; Hardware stack levels used:    1
 29333 ;; Hardware stack levels required when called:    3
 29334 ;; This function calls:
 29335 ;;		Nothing
 29336 ;; This function is called by:
 29337 ;;		_start_switch_handler
 29338 ;;		_INT1_CallBack
 29339 ;; This function uses a reentrant model
 29340 ;;
 29341                           
 29342                           	psect	text134
 29343  01816E                     __ptext134:
 29344                           	opt callstack 0
 29345  01816E                     _switch_handler:
 29346                           	opt callstack 0
 29347                           
 29348                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29349  01816E  52E6               	movf	postinc1,f,c
 29350  018170  52E6               	movf	postinc1,f,c
 29351                           
 29352                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 29353                           ;stkvar	_i @ sp[(-2)+0]
 29354                           
 29355                           ;incstack = 0
 29356  018172  0EFE               	movlw	-2
 29357  018174  6AE3               	clrf	plusw1,c
 29358  018176  9EBD               	bcf	189,7,c	;volatile
 29359                           
 29360                           ;dio.c: 72:  __nop();
 29361  018178  F000               	nop	
 29362                           
 29363                           ;dio.c: 73:  __nop();
 29364  01817A  F000               	nop	
 29365                           
 29366                           ;dio.c: 74:  __nop();
 29367  01817C  F000               	nop	
 29368  01817E  D019               	goto	l9835
 29369  018180                     l9823:
 29370                           
 29371                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 29372  018180  A6CF               	btfss	207,3,c	;volatile
 29373  018182  D011               	goto	u907_20
 29374  018184  D00D               	goto	u907_21
 29375  018186                     u904_28:
 29376                           
 29377                           ;stkvar	_sw_value @ sp[(-2)+1]
 29378  018186  0EFF               	movlw	-1
 29379  018188  0060  F033  FFE3   	movff	btemp+11,plusw1
 29380                           
 29381                           ;dio.c: 80:    break;
 29382  01818E  D027               	goto	l9837
 29383  018190                     l9825:
 29384                           
 29385                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 29386  018190  A4CF               	btfss	207,2,c	;volatile
 29387  018192  D009               	goto	u907_20
 29388  018194  D005               	goto	u907_21
 29389  018196                     l9827:
 29390                           
 29391                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 29392  018196  A2CF               	btfss	207,1,c	;volatile
 29393  018198  D006               	goto	u907_20
 29394  01819A  D002               	goto	u907_21
 29395  01819C                     l9829:
 29396                           
 29397                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 29398  01819C  A0CF               	btfss	207,0,c	;volatile
 29399  01819E  D003               	goto	u907_20
 29400  0181A0                     u907_21:
 29401  0181A0  6A0C               	clrf	(btemp+11)^0,c
 29402  0181A2  2A0C               	incf	(btemp+11)^0,f,c
 29403  0181A4  D7F0               	goto	u904_28
 29404  0181A6                     u907_20:
 29405  0181A6  6A0C               	clrf	(btemp+11)^0,c
 29406  0181A8  D7EE               	goto	u904_28
 29407  0181AA                     l9831:
 29408                           
 29409                           ;dio.c: 91:    sw_value = 1;
 29410                           ;stkvar	_sw_value @ sp[(-2)+1]
 29411  0181AA  0EFF               	movlw	-1
 29412  0181AC  6AE3               	clrf	plusw1,c
 29413  0181AE  2AE3               	incf	plusw1,f,c
 29414                           
 29415                           ;dio.c: 92:    break;
 29416  0181B0  D016               	goto	l9837
 29417  0181B2                     l9835:
 29418                           
 29419                           ;stkvar	_i @ sp[(-2)+0]
 29420  0181B2  0EFE               	movlw	-2
 29421  0181B4  50E3               	movf	plusw1,w,c
 29422  0181B6  6E0B               	movwf	(btemp+10)^0,c
 29423  0181B8  6A0C               	clrf	(btemp+11)^0,c
 29424                           
 29425                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29426                           ; Switch size 1, requested type "simple"
 29427                           ; Number of cases is 1, Range of values is 0 to 0
 29428                           ; switch strategies available:
 29429                           ; Name         Instructions Cycles
 29430                           ; simple_byte            4     3 (average)
 29431                           ;	Chosen strategy is simple_byte
 29432  0181BA  500C               	movf	(btemp+11)^0,w,c
 29433  0181BC  0A00               	xorlw	0	; case 0
 29434  0181BE  A4D8               	btfss	status,2,c
 29435  0181C0  D7F4               	goto	l9831
 29436                           
 29437                           ; Switch size 1, requested type "simple"
 29438                           ; Number of cases is 4, Range of values is 0 to 3
 29439                           ; switch strategies available:
 29440                           ; Name         Instructions Cycles
 29441                           ; simple_byte           13     7 (average)
 29442                           ;	Chosen strategy is simple_byte
 29443  0181C2  500B               	movf	(btemp+10)^0,w,c
 29444  0181C4  0A00               	xorlw	0	; case 0
 29445  0181C6  B4D8               	btfsc	status,2,c
 29446  0181C8  D7E9               	goto	l9829
 29447  0181CA  0A01               	xorlw	1	; case 1
 29448  0181CC  B4D8               	btfsc	status,2,c
 29449  0181CE  D7E3               	goto	l9827
 29450  0181D0  0A03               	xorlw	3	; case 2
 29451  0181D2  B4D8               	btfsc	status,2,c
 29452  0181D4  D7DD               	goto	l9825
 29453  0181D6  0A01               	xorlw	1	; case 3
 29454  0181D8  B4D8               	btfsc	status,2,c
 29455  0181DA  D7D2               	goto	l9823
 29456  0181DC  D7E6               	goto	l9831
 29457  0181DE                     l9837:
 29458                           
 29459                           ;dio.c: 96:   if (sw_value) {
 29460                           ;stkvar	_sw_value @ sp[(-2)+1]
 29461  0181DE  0EFF               	movlw	-1
 29462  0181E0  50E3               	movf	plusw1,w,c
 29463  0181E2  B4D8               	btfsc	status,2,c
 29464  0181E4  D014               	goto	l9843
 29465                           
 29466                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 29467                           ;stkvar	_i @ sp[(-2)+0]
 29468  0181E6  0EFE               	movlw	-2
 29469  0181E8  50E3               	movf	plusw1,w,c
 29470  0181EA  0D05               	mullw	5
 29471  0181EC  50F3               	movf	243,w,c
 29472  0181EE  0F60               	addlw	low _S
 29473  0181F0  6ED9               	movwf	fsr2l,c
 29474  0181F2  6ADA               	clrf	fsr2h,c
 29475  0181F4  04DE               	decf	postinc2,w,c
 29476  0181F6  A4D8               	btfss	status,2,c
 29477  0181F8  D041               	goto	l9851
 29478                           
 29479                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 29480                           ;stkvar	_i @ sp[(-2)+0]
 29481  0181FA  0EFE               	movlw	-2
 29482  0181FC  50E3               	movf	plusw1,w,c
 29483  0181FE  0D05               	mullw	5
 29484  018200  50F3               	movf	243,w,c
 29485  018202  0F60               	addlw	low _S
 29486  018204  6ED9               	movwf	fsr2l,c
 29487  018206  6ADA               	clrf	fsr2h,c
 29488  018208  0E00               	movlw	0
 29489  01820A  6EDF               	movwf	indf2,c
 29490  01820C  D037               	goto	l9851
 29491  01820E                     l9843:
 29492                           
 29493                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 29494                           ;stkvar	_i @ sp[(-2)+0]
 29495  01820E  0EFE               	movlw	-2
 29496  018210  50E3               	movf	plusw1,w,c
 29497  018212  0D05               	mullw	5
 29498  018214  50F3               	movf	243,w,c
 29499  018216  0F60               	addlw	low _S
 29500  018218  6ED9               	movwf	fsr2l,c
 29501  01821A  6ADA               	clrf	fsr2h,c
 29502  01821C  50DF               	movf	indf2,w,c
 29503  01821E  A4D8               	btfss	status,2,c
 29504  018220  D02D               	goto	l9851
 29505                           
 29506                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 29507                           ;stkvar	_i @ sp[(-2)+0]
 29508  018222  0EFE               	movlw	-2
 29509  018224  50E3               	movf	plusw1,w,c
 29510  018226  0D05               	mullw	5
 29511  018228  50F3               	movf	243,w,c
 29512  01822A  0F60               	addlw	low _S
 29513  01822C  6ED9               	movwf	fsr2l,c
 29514  01822E  6ADA               	clrf	fsr2h,c
 29515  018230  0E01               	movlw	1
 29516  018232  6EDF               	movwf	indf2,c
 29517                           
 29518                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 29519  018234  EE20  F2B8         	lfsr	2,_V+184	;volatile
 29520                           
 29521                           ;stkvar	_i @ sp[(-2)+0]
 29522  018238  0EFE               	movlw	-2
 29523  01823A  50E3               	movf	plusw1,w,c
 29524  01823C  0D05               	mullw	5
 29525  01823E  50F3               	movf	243,w,c
 29526  018240  0F61               	addlw	low (_S+1)
 29527  018242  6EE9               	movwf	fsr0l,c
 29528  018244  6AEA               	clrf	fsr0h,c
 29529  018246  006F FF7B FFEE     	movff	postinc2,postinc0
 29530  01824C  006F FF7B FFEE     	movff	postinc2,postinc0
 29531  018252  006F FF7B FFEE     	movff	postinc2,postinc0
 29532  018258  006F FF7B FFEE     	movff	postinc2,postinc0
 29533                           
 29534                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 29535                           ;stkvar	_i @ sp[(-2)+0]
 29536  01825E  0EFE               	movlw	-2
 29537  018260  006F FF8C  F00C    	movff	plusw1,btemp+11
 29538  018266  0E01               	movlw	1
 29539  018268  6E0B               	movwf	(btemp+10)^0,c
 29540  01826A  2A0C               	incf	(btemp+11)^0,f,c
 29541  01826C  D002               	goto	u911_24
 29542  01826E                     u911_25:
 29543  01826E  90D8               	bcf	status,0,c
 29544  018270  360B               	rlcf	(btemp+10)^0,f,c
 29545  018272                     u911_24:
 29546  018272  2E0C               	decfsz	(btemp+11)^0,f,c
 29547  018274  D7FC               	goto	u911_25
 29548  018276  500B               	movf	(btemp+10)^0,w,c
 29549  018278  0100               	movlb	0	; () banked
 29550  01827A  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 29551  01827C                     l9851:
 29552                           
 29553                           ;dio.c: 107:  } while (++i < 4);
 29554                           ;stkvar	_i @ sp[(-2)+0]
 29555  01827C  0EFE               	movlw	-2
 29556  01827E  2AE3               	incf	plusw1,f,c
 29557  018280  0EFE               	movlw	-2
 29558  018282  006F FF8C  F001    	movff	plusw1,btemp
 29559  018288  0E03               	movlw	3
 29560  01828A  6401               	cpfsgt	btemp^0,c
 29561  01828C  D792               	goto	l9835
 29562                           
 29563                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 29564  01828E  8EBD               	bsf	189,7,c	;volatile
 29565                           
 29566                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29567  018290  52E5               	movf	postdec1,f,c
 29568  018292  52E5               	movf	postdec1,f,c
 29569  018294  0012               	return		;funcret
 29570  018296                     __end_of_switch_handler:
 29571                           	opt callstack 0
 29572                           
 29573 ;; *************** function _TMR5_ISR *****************
 29574 ;; Defined at:
 29575 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 29576 ;; Parameters:    Size  Location     Type
 29577 ;;		None
 29578 ;; Auto vars:     Size  Location     Type
 29579 ;;		None
 29580 ;; Return value:  Size  Location     Type
 29581 ;;                  1    wreg      void 
 29582 ;; Registers used:
 29583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 29584 ;; Tracked objects:
 29585 ;;		On entry : 0/0
 29586 ;;		On exit  : 0/0
 29587 ;;		Unchanged: 0/0
 29588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29592 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29593 ;;Total ram usage:        4 bytes
 29594 ;; Hardware stack levels used:    1
 29595 ;; Hardware stack levels required when called:    5
 29596 ;; This function calls:
 29597 ;;		_TMR5_CallBack
 29598 ;;		_TMR5_WriteTimer
 29599 ;; This function is called by:
 29600 ;;		Interrupt level 1
 29601 ;; This function uses a non-reentrant model
 29602 ;;
 29603                           
 29604                           	psect	text135
 29605  019A4C                     __ptext135:
 29606                           	opt callstack 0
 29607  019A4C                     _TMR5_ISR:
 29608                           	opt callstack 12
 29609                           
 29610                           ;incstack = 0
 29611  019A4C  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 29612  019A52  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 29613  019A58  EE16  F061         	lfsr	1,___intlo_sp
 29614                           
 29615                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 29616  019A5C  0139               	movlb	57	; () banked
 29617  019A5E  9DA8               	bcf	168,6,b	;volatile
 29618                           
 29619                           ; BSR set to: 57
 29620                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 29621  019A60  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 29622  019A66  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 29623  019A6C  EC70  F0CF         	call	_TMR5_WriteTimer	;wreg free
 29624                           
 29625                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 29626  019A70  0102               	movlb	2	; () banked
 29627  019A72  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 29628  019A74  6E42               	movwf	??_TMR5_ISR^0,c
 29629  019A76  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 29630  019A78  0E05               	movlw	5
 29631  019A7A  2642               	addwf	??_TMR5_ISR^0,f,c
 29632  019A7C  0E00               	movlw	0
 29633  019A7E  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 29634  019A80  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 29635  019A82  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 29636  019A84  5042               	movf	??_TMR5_ISR^0,w,c
 29637  019A86  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 29638  019A88  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 29639  019A8A  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 29640  019A8C  A0D8               	btfss	status,0,c
 29641  019A8E  D004               	goto	i1l1017
 29642                           
 29643                           ; BSR set to: 2
 29644                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 29645  019A90  ECDE  F0D2         	call	_TMR5_CallBack	;wreg free
 29646                           
 29647                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 29648  019A94  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 29649  019A96  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 29650  019A98                     i1l1017:
 29651  019A98  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 29652  019A9E  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 29653  019AA4  0011               	retfie		f
 29654  019AA6                     __end_of_TMR5_ISR:
 29655                           	opt callstack 0
 29656                           
 29657 ;; *************** function _TMR5_WriteTimer *****************
 29658 ;; Defined at:
 29659 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 29660 ;; Parameters:    Size  Location     Type
 29661 ;;  timerVal        2  [STACK] unsigned short 
 29662 ;; Auto vars:     Size  Location     Type
 29663 ;;		None
 29664 ;; Return value:  Size  Location     Type
 29665 ;;                  1  [STACK] void 
 29666 ;; Registers used:
 29667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29668 ;; Tracked objects:
 29669 ;;		On entry : 3F/39
 29670 ;;		On exit  : 0/0
 29671 ;;		Unchanged: 0/0
 29672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29677 ;;Total ram usage:        0 bytes
 29678 ;; Hardware stack levels used:    1
 29679 ;; Hardware stack levels required when called:    3
 29680 ;; This function calls:
 29681 ;;		Nothing
 29682 ;; This function is called by:
 29683 ;;		_TMR5_ISR
 29684 ;; This function uses a reentrant model
 29685 ;;
 29686                           
 29687                           	psect	text136
 29688  019EE0                     __ptext136:
 29689                           	opt callstack 0
 29690  019EE0                     _TMR5_WriteTimer:
 29691                           	opt callstack 13
 29692                           
 29693                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 29694                           
 29695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29696                           ;incstack = 0
 29697  019EE0  A49A               	btfss	154,2,c	;volatile
 29698  019EE2  D00F               	goto	l10033
 29699                           
 29700                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 29701  019EE4  909A               	bcf	154,0,c	;volatile
 29702                           
 29703                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 29704                           ;stkvar	_timerVal @ sp[(0)+-2]
 29705  019EE6  0EFF               	movlw	255
 29706  019EE8  24E1               	addwf	fsr1l,w,c
 29707  019EEA  6ED9               	movwf	fsr2l,c
 29708  019EEC  0EFF               	movlw	255
 29709  019EEE  20E2               	addwfc	fsr1h,w,c
 29710  019EF0  6EDA               	movwf	fsr2h,c
 29711  019EF2  50DF               	movf	indf2,w,c
 29712  019EF4  6E99               	movwf	153,c	;volatile
 29713                           
 29714                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 29715                           ;stkvar	_timerVal @ sp[(0)+-2]
 29716  019EF6  0EFE               	movlw	-2
 29717  019EF8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29718                           
 29719                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 29720  019EFE  809A               	bsf	154,0,c	;volatile
 29721                           
 29722                           ;mcc_generated_files/tmr5.c: 142:  } else {
 29723  019F00  D00C               	goto	l1000
 29724  019F02                     l10033:
 29725                           
 29726                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 29727                           ;stkvar	_timerVal @ sp[(0)+-2]
 29728  019F02  0EFF               	movlw	255
 29729  019F04  24E1               	addwf	fsr1l,w,c
 29730  019F06  6ED9               	movwf	fsr2l,c
 29731  019F08  0EFF               	movlw	255
 29732  019F0A  20E2               	addwfc	fsr1h,w,c
 29733  019F0C  6EDA               	movwf	fsr2h,c
 29734  019F0E  50DF               	movf	indf2,w,c
 29735  019F10  6E99               	movwf	153,c	;volatile
 29736                           
 29737                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 29738                           ;stkvar	_timerVal @ sp[(0)+-2]
 29739  019F12  0EFE               	movlw	-2
 29740  019F14  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29741  019F1A                     l1000:
 29742                           
 29743                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29744  019F1A  52E5               	movf	postdec1,f,c
 29745  019F1C  52E5               	movf	postdec1,f,c
 29746  019F1E  0012               	return		;funcret
 29747  019F20                     __end_of_TMR5_WriteTimer:
 29748                           	opt callstack 0
 29749                           
 29750 ;; *************** function _TMR5_CallBack *****************
 29751 ;; Defined at:
 29752 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 29753 ;; Parameters:    Size  Location     Type
 29754 ;;		None
 29755 ;; Auto vars:     Size  Location     Type
 29756 ;;		None
 29757 ;; Return value:  Size  Location     Type
 29758 ;;                  1  [STACK] void 
 29759 ;; Registers used:
 29760 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 29761 ;; Tracked objects:
 29762 ;;		On entry : 3F/2
 29763 ;;		On exit  : 0/0
 29764 ;;		Unchanged: 0/0
 29765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29770 ;;Total ram usage:        0 bytes
 29771 ;; Hardware stack levels used:    1
 29772 ;; Hardware stack levels required when called:    4
 29773 ;; This function calls:
 29774 ;;		Absolute function
 29775 ;;		_TMR5_DefaultInterruptHandler
 29776 ;; This function is called by:
 29777 ;;		_TMR5_ISR
 29778 ;; This function uses a reentrant model
 29779 ;;
 29780                           
 29781                           	psect	text137
 29782  01A5BC                     __ptext137:
 29783                           	opt callstack 0
 29784  01A5BC                     _TMR5_CallBack:
 29785                           	opt callstack 12
 29786                           
 29787                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 29788                           
 29789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29790                           ;incstack = 0
 29791  01A5BC  0100               	movlb	0	; () banked
 29792  01A5BE  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 29793  01A5C0  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 29794  01A5C2  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 29795  01A5C4  B4D8               	btfsc	status,2,c
 29796  01A5C6  0012               	return	
 29797                           
 29798                           ; BSR set to: 0
 29799                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 29800  01A5C8  D801               	call	u940_28
 29801  01A5CA  0012               	return	
 29802  01A5CC                     u940_28:
 29803  01A5CC  0005               	push	
 29804  01A5CE  6EFA               	movwf	pclath,c
 29805  01A5D0  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 29806  01A5D2  6EFD               	movwf	tosl,c
 29807  01A5D4  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 29808  01A5D6  6EFE               	movwf	tosh,c
 29809  01A5D8  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 29810  01A5DA  6EFF               	movwf	tosu,c
 29811  01A5DC  50FA               	movf	pclath,w,c
 29812  01A5DE  0012               	return		;indir
 29813  01A5E0                     __end_of_TMR5_CallBack:
 29814                           	opt callstack 0
 29815                           
 29816 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 29817 ;; Defined at:
 29818 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 29819 ;; Parameters:    Size  Location     Type
 29820 ;;		None
 29821 ;; Auto vars:     Size  Location     Type
 29822 ;;		None
 29823 ;; Return value:  Size  Location     Type
 29824 ;;                  1  [STACK] void 
 29825 ;; Registers used:
 29826 ;;		wreg, status,2, status,0, btemp+11
 29827 ;; Tracked objects:
 29828 ;;		On entry : 3F/0
 29829 ;;		On exit  : 3F/2
 29830 ;;		Unchanged: 0/0
 29831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29836 ;;Total ram usage:        0 bytes
 29837 ;; Hardware stack levels used:    1
 29838 ;; Hardware stack levels required when called:    3
 29839 ;; This function calls:
 29840 ;;		Nothing
 29841 ;; This function is called by:
 29842 ;;		_TMR5_Initialize
 29843 ;;		_TMR5_CallBack
 29844 ;; This function uses a reentrant model
 29845 ;;
 29846                           
 29847                           	psect	text138
 29848  01A0AA                     __ptext138:
 29849                           	opt callstack 0
 29850  01A0AA                     _TMR5_DefaultInterruptHandler:
 29851                           	opt callstack 12
 29852                           
 29853                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 29854                           
 29855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29856                           ;incstack = 0
 29857  01A0AA  A0BE               	btfss	190,0,c	;volatile
 29858  01A0AC  D002               	goto	u881_20
 29859  01A0AE  0E01               	movlw	1
 29860  01A0B0  D001               	goto	u881_26
 29861  01A0B2                     u881_20:
 29862  01A0B2  0E00               	movlw	0
 29863  01A0B4                     u881_26:
 29864  01A0B4  0AFF               	xorlw	255
 29865  01A0B6  6E0C               	movwf	(btemp+11)^0,c
 29866  01A0B8  50BE               	movf	190,w,c	;volatile
 29867  01A0BA  180C               	xorwf	(btemp+11)^0,w,c
 29868  01A0BC  0BFE               	andlw	-2
 29869  01A0BE  180C               	xorwf	(btemp+11)^0,w,c
 29870  01A0C0  6EBE               	movwf	190,c	;volatile
 29871                           
 29872                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 29873  01A0C2  0E01               	movlw	1
 29874  01A0C4  0102               	movlb	2	; () banked
 29875  01A0C6  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 29876  01A0C8  0E00               	movlw	0
 29877  01A0CA  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 29878  01A0CC  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 29879  01A0CE  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 29880                           
 29881                           ; BSR set to: 2
 29882                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 29883  01A0D0  0E01               	movlw	1
 29884  01A0D2  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 29885  01A0D4  0E00               	movlw	0
 29886  01A0D6  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 29887  01A0D8  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 29888  01A0DA  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 29889                           
 29890                           ; BSR set to: 2
 29891                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29892  01A0DC  0012               	return		;funcret
 29893  01A0DE                     __end_of_TMR5_DefaultInterruptHandler:
 29894                           	opt callstack 0
 29895                           
 29896 ;; *************** function _TMR3_ISR *****************
 29897 ;; Defined at:
 29898 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 29899 ;; Parameters:    Size  Location     Type
 29900 ;;		None
 29901 ;; Auto vars:     Size  Location     Type
 29902 ;;		None
 29903 ;; Return value:  Size  Location     Type
 29904 ;;                  1    wreg      void 
 29905 ;; Registers used:
 29906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 29907 ;; Tracked objects:
 29908 ;;		On entry : 0/0
 29909 ;;		On exit  : 3F/0
 29910 ;;		Unchanged: 0/0
 29911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29914 ;;      Temps:          0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29915 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29916 ;;Total ram usage:       25 bytes
 29917 ;; Hardware stack levels used:    1
 29918 ;; Hardware stack levels required when called:   14
 29919 ;; This function calls:
 29920 ;;		_TMR3_CallBack
 29921 ;;		_TMR3_WriteTimer
 29922 ;; This function is called by:
 29923 ;;		Interrupt level 1
 29924 ;; This function uses a non-reentrant model
 29925 ;;
 29926                           
 29927                           	psect	text139
 29928  017C50                     __ptext139:
 29929                           	opt callstack 0
 29930  017C50                     _TMR3_ISR:
 29931                           	opt callstack 3
 29932                           
 29933                           ; BSR set to: 2
 29934                           ;incstack = 0
 29935  017C50  006F FF60  F2BC    	movff	status,??_TMR3_ISR
 29936  017C56  006F FFD8  F2BD    	movff	tblptrl,??_TMR3_ISR+1
 29937  017C5C  006F FFDC  F2BE    	movff	tblptrh,??_TMR3_ISR+2
 29938  017C62  006F FFE0  F2BF    	movff	tblptru,??_TMR3_ISR+3
 29939  017C68  006F FFD4  F2C0    	movff	tablat,??_TMR3_ISR+4
 29940  017C6E  0060  F004  F2C1   	movff	btemp,??_TMR3_ISR+5
 29941  017C74  0060  F008  F2C2   	movff	btemp+1,??_TMR3_ISR+6
 29942  017C7A  0060  F00C  F2C3   	movff	btemp+2,??_TMR3_ISR+7
 29943  017C80  0060  F010  F2C4   	movff	btemp+3,??_TMR3_ISR+8
 29944  017C86  0060  F014  F2C5   	movff	btemp+4,??_TMR3_ISR+9
 29945  017C8C  0060  F018  F2C6   	movff	btemp+5,??_TMR3_ISR+10
 29946  017C92  0060  F01C  F2C7   	movff	btemp+6,??_TMR3_ISR+11
 29947  017C98  0060  F020  F2C8   	movff	btemp+7,??_TMR3_ISR+12
 29948  017C9E  0060  F024  F2C9   	movff	btemp+8,??_TMR3_ISR+13
 29949  017CA4  0060  F028  F2CA   	movff	btemp+9,??_TMR3_ISR+14
 29950  017CAA  0060  F02C  F2CB   	movff	btemp+10,??_TMR3_ISR+15
 29951  017CB0  0060  F030  F2CC   	movff	btemp+11,??_TMR3_ISR+16
 29952  017CB6  0060  F044  F2CD   	movff	btemp+16,??_TMR3_ISR+17
 29953  017CBC  0060  F048  F2CE   	movff	btemp+17,??_TMR3_ISR+18
 29954  017CC2  0060  F04C  F2CF   	movff	btemp+18,??_TMR3_ISR+19
 29955  017CC8  0060  F050  F2D0   	movff	btemp+19,??_TMR3_ISR+20
 29956  017CCE  0060  F054  F2D1   	movff	btemp+20,??_TMR3_ISR+21
 29957  017CD4  0060  F058  F2D2   	movff	btemp+21,??_TMR3_ISR+22
 29958  017CDA  0060  F05C  F2D3   	movff	btemp+22,??_TMR3_ISR+23
 29959  017CE0  0060  F060  F2D4   	movff	btemp+23,??_TMR3_ISR+24
 29960  017CE6  EE16  F061         	lfsr	1,___intlo_sp
 29961                           
 29962                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 29963  017CEA  0139               	movlb	57	; () banked
 29964  017CEC  9DA6               	bcf	166,6,b	;volatile
 29965                           
 29966                           ; BSR set to: 57
 29967                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 29968  017CEE  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 29969  017CF4  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 29970  017CFA  EC90  F0CF         	call	_TMR3_WriteTimer	;wreg free
 29971                           
 29972                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 29973  017CFE  0100               	movlb	0	; () banked
 29974  017D00  4BC9               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 29975  017D02  2BCA               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 29976  017D04  51CA               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 29977  017D06  E104               	bnz	i1u1187_20
 29978  017D08  0E28               	movlw	40
 29979  017D0A  5DC9               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 29980  017D0C  A0D8               	btfss	status,0,c
 29981  017D0E  D005               	goto	i1l1205
 29982  017D10                     i1u1187_20:
 29983                           
 29984                           ; BSR set to: 0
 29985                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 29986  017D10  ECF0  F0D2         	call	_TMR3_CallBack	;wreg free
 29987                           
 29988                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 29989  017D14  0100               	movlb	0	; () banked
 29990  017D16  6BC9               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 29991  017D18  6BCA               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 29992  017D1A                     i1l1205:
 29993                           
 29994                           ; BSR set to: 0
 29995  017D1A  0060  FB50  F018   	movff	??_TMR3_ISR+24,btemp+23
 29996  017D20  0060  FB4C  F017   	movff	??_TMR3_ISR+23,btemp+22
 29997  017D26  0060  FB48  F016   	movff	??_TMR3_ISR+22,btemp+21
 29998  017D2C  0060  FB44  F015   	movff	??_TMR3_ISR+21,btemp+20
 29999  017D32  0060  FB40  F014   	movff	??_TMR3_ISR+20,btemp+19
 30000  017D38  0060  FB3C  F013   	movff	??_TMR3_ISR+19,btemp+18
 30001  017D3E  0060  FB38  F012   	movff	??_TMR3_ISR+18,btemp+17
 30002  017D44  0060  FB34  F011   	movff	??_TMR3_ISR+17,btemp+16
 30003  017D4A  0060  FB30  F00C   	movff	??_TMR3_ISR+16,btemp+11
 30004  017D50  0060  FB2C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 30005  017D56  0060  FB28  F00A   	movff	??_TMR3_ISR+14,btemp+9
 30006  017D5C  0060  FB24  F009   	movff	??_TMR3_ISR+13,btemp+8
 30007  017D62  0060  FB20  F008   	movff	??_TMR3_ISR+12,btemp+7
 30008  017D68  0060  FB1C  F007   	movff	??_TMR3_ISR+11,btemp+6
 30009  017D6E  0060  FB18  F006   	movff	??_TMR3_ISR+10,btemp+5
 30010  017D74  0060  FB14  F005   	movff	??_TMR3_ISR+9,btemp+4
 30011  017D7A  0060  FB10  F004   	movff	??_TMR3_ISR+8,btemp+3
 30012  017D80  0060  FB0C  F003   	movff	??_TMR3_ISR+7,btemp+2
 30013  017D86  0060  FB08  F002   	movff	??_TMR3_ISR+6,btemp+1
 30014  017D8C  0060  FB04  F001   	movff	??_TMR3_ISR+5,btemp
 30015  017D92  0060  FB03  FFF5   	movff	??_TMR3_ISR+4,tablat
 30016  017D98  0060  FAFF  FFF8   	movff	??_TMR3_ISR+3,tblptru
 30017  017D9E  0060  FAFB  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 30018  017DA4  0060  FAF7  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 30019  017DAA  0060  FAF3  FFD8   	movff	??_TMR3_ISR,status
 30020  017DB0  0011               	retfie		f
 30021  017DB2                     __end_of_TMR3_ISR:
 30022                           	opt callstack 0
 30023                           
 30024 ;; *************** function _TMR3_WriteTimer *****************
 30025 ;; Defined at:
 30026 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;  timerVal        2  [STACK] unsigned short 
 30029 ;; Auto vars:     Size  Location     Type
 30030 ;;		None
 30031 ;; Return value:  Size  Location     Type
 30032 ;;                  1  [STACK] void 
 30033 ;; Registers used:
 30034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30035 ;; Tracked objects:
 30036 ;;		On entry : 3F/39
 30037 ;;		On exit  : 0/0
 30038 ;;		Unchanged: 0/0
 30039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30044 ;;Total ram usage:        0 bytes
 30045 ;; Hardware stack levels used:    1
 30046 ;; Hardware stack levels required when called:    3
 30047 ;; This function calls:
 30048 ;;		Nothing
 30049 ;; This function is called by:
 30050 ;;		_TMR3_ISR
 30051 ;; This function uses a reentrant model
 30052 ;;
 30053                           
 30054                           	psect	text140
 30055  019F20                     __ptext140:
 30056                           	opt callstack 0
 30057  019F20                     _TMR3_WriteTimer:
 30058                           	opt callstack 13
 30059                           
 30060                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 30061                           
 30062                           ; BSR set to: 0
 30063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30064                           ;incstack = 0
 30065  019F20  A4A6               	btfss	166,2,c	;volatile
 30066  019F22  D00F               	goto	l10051
 30067                           
 30068                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 30069  019F24  90A6               	bcf	166,0,c	;volatile
 30070                           
 30071                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 30072                           ;stkvar	_timerVal @ sp[(0)+-2]
 30073  019F26  0EFF               	movlw	255
 30074  019F28  24E1               	addwf	fsr1l,w,c
 30075  019F2A  6ED9               	movwf	fsr2l,c
 30076  019F2C  0EFF               	movlw	255
 30077  019F2E  20E2               	addwfc	fsr1h,w,c
 30078  019F30  6EDA               	movwf	fsr2h,c
 30079  019F32  50DF               	movf	indf2,w,c
 30080  019F34  6EA5               	movwf	165,c	;volatile
 30081                           
 30082                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 30083                           ;stkvar	_timerVal @ sp[(0)+-2]
 30084  019F36  0EFE               	movlw	-2
 30085  019F38  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 30086                           
 30087                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 30088  019F3E  80A6               	bsf	166,0,c	;volatile
 30089                           
 30090                           ;mcc_generated_files/tmr3.c: 141:     }
 30091  019F40  D00C               	goto	l1188
 30092  019F42                     l10051:
 30093                           
 30094                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 30095                           ;stkvar	_timerVal @ sp[(0)+-2]
 30096  019F42  0EFF               	movlw	255
 30097  019F44  24E1               	addwf	fsr1l,w,c
 30098  019F46  6ED9               	movwf	fsr2l,c
 30099  019F48  0EFF               	movlw	255
 30100  019F4A  20E2               	addwfc	fsr1h,w,c
 30101  019F4C  6EDA               	movwf	fsr2h,c
 30102  019F4E  50DF               	movf	indf2,w,c
 30103  019F50  6EA5               	movwf	165,c	;volatile
 30104                           
 30105                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 30106                           ;stkvar	_timerVal @ sp[(0)+-2]
 30107  019F52  0EFE               	movlw	-2
 30108  019F54  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 30109  019F5A                     l1188:
 30110                           
 30111                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 30112  019F5A  52E5               	movf	postdec1,f,c
 30113  019F5C  52E5               	movf	postdec1,f,c
 30114  019F5E  0012               	return		;funcret
 30115  019F60                     __end_of_TMR3_WriteTimer:
 30116                           	opt callstack 0
 30117                           
 30118 ;; *************** function _TMR3_CallBack *****************
 30119 ;; Defined at:
 30120 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 30121 ;; Parameters:    Size  Location     Type
 30122 ;;		None
 30123 ;; Auto vars:     Size  Location     Type
 30124 ;;		None
 30125 ;; Return value:  Size  Location     Type
 30126 ;;                  1  [STACK] void 
 30127 ;; Registers used:
 30128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 30129 ;; Tracked objects:
 30130 ;;		On entry : 3F/0
 30131 ;;		On exit  : 0/0
 30132 ;;		Unchanged: 0/0
 30133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30138 ;;Total ram usage:        0 bytes
 30139 ;; Hardware stack levels used:    1
 30140 ;; Hardware stack levels required when called:   13
 30141 ;; This function calls:
 30142 ;;		Absolute function
 30143 ;;		_TMR3_DefaultInterruptHandler
 30144 ;;		_calc_bsoc
 30145 ;; This function is called by:
 30146 ;;		_TMR3_ISR
 30147 ;; This function uses a reentrant model
 30148 ;;
 30149                           
 30150                           	psect	text141
 30151  01A5E0                     __ptext141:
 30152                           	opt callstack 0
 30153  01A5E0                     _TMR3_CallBack:
 30154                           	opt callstack 3
 30155                           
 30156                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 30157                           
 30158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30159                           ;incstack = 0
 30160  01A5E0  0100               	movlb	0	; () banked
 30161  01A5E2  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 30162  01A5E4  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 30163  01A5E6  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 30164  01A5E8  B4D8               	btfsc	status,2,c
 30165  01A5EA  0012               	return	
 30166                           
 30167                           ; BSR set to: 0
 30168                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 30169  01A5EC  D801               	call	u1162_28
 30170  01A5EE  0012               	return	
 30171  01A5F0                     u1162_28:
 30172  01A5F0  0005               	push	
 30173  01A5F2  6EFA               	movwf	pclath,c
 30174  01A5F4  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 30175  01A5F6  6EFD               	movwf	tosl,c
 30176  01A5F8  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 30177  01A5FA  6EFE               	movwf	tosh,c
 30178  01A5FC  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 30179  01A5FE  6EFF               	movwf	tosu,c
 30180  01A600  50FA               	movf	pclath,w,c
 30181  01A602  0012               	return		;indir
 30182  01A604                     __end_of_TMR3_CallBack:
 30183                           	opt callstack 0
 30184                           
 30185 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 30186 ;; Defined at:
 30187 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 30188 ;; Parameters:    Size  Location     Type
 30189 ;;		None
 30190 ;; Auto vars:     Size  Location     Type
 30191 ;;		None
 30192 ;; Return value:  Size  Location     Type
 30193 ;;                  1  [STACK] void 
 30194 ;; Registers used:
 30195 ;;		None
 30196 ;; Tracked objects:
 30197 ;;		On entry : 3F/0
 30198 ;;		On exit  : 0/0
 30199 ;;		Unchanged: 0/0
 30200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30205 ;;Total ram usage:        0 bytes
 30206 ;; Hardware stack levels used:    1
 30207 ;; Hardware stack levels required when called:    3
 30208 ;; This function calls:
 30209 ;;		Nothing
 30210 ;; This function is called by:
 30211 ;;		_TMR3_Initialize
 30212 ;;		_TMR3_CallBack
 30213 ;; This function uses a reentrant model
 30214 ;;
 30215                           
 30216                           	psect	text142
 30217  01A91C                     __ptext142:
 30218                           	opt callstack 0
 30219  01A91C                     _TMR3_DefaultInterruptHandler:
 30220                           	opt callstack 12
 30221                           
 30222                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30223                           
 30224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30225                           ;incstack = 0
 30226  01A91C  0012               	return		;funcret
 30227  01A91E                     __end_of_TMR3_DefaultInterruptHandler:
 30228                           	opt callstack 0
 30229                           
 30230 ;; *************** function _calc_bsoc *****************
 30231 ;; Defined at:
 30232 ;;		line 39 in file "bsoc.c"
 30233 ;; Parameters:    Size  Location     Type
 30234 ;;		None
 30235 ;; Auto vars:     Size  Location     Type
 30236 ;;  log_ptr         2  [STACK] PTR unsigned char 
 30237 ;;		 -> port_data(512), 
 30238 ;; Return value:  Size  Location     Type
 30239 ;;                  1  [STACK] void 
 30240 ;; Registers used:
 30241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 30242 ;; Tracked objects:
 30243 ;;		On entry : 3F/0
 30244 ;;		On exit  : 3F/1
 30245 ;;		Unchanged: 0/0
 30246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30251 ;;Total ram usage:        0 bytes
 30252 ;; Hardware stack levels used:    1
 30253 ;; Hardware stack levels required when called:   12
 30254 ;; This function calls:
 30255 ;;		_StartTimer
 30256 ;;		___fladd
 30257 ;;		___fldiv
 30258 ;;		___flge
 30259 ;;		___flmul
 30260 ;;		___flneg
 30261 ;;		___fltol
 30262 ;;		_port_data_dma_ptr
 30263 ;;		_send_port_data_dma
 30264 ;;		_sprintf
 30265 ;;		_strlen
 30266 ;; This function is called by:
 30267 ;;		_init_bsoc
 30268 ;;		_TMR3_CallBack
 30269 ;; This function uses a reentrant model
 30270 ;;
 30271                           
 30272                           	psect	text143
 30273  013BA8                     __ptext143:
 30274                           	opt callstack 0
 30275  013BA8                     _calc_bsoc:
 30276                           	opt callstack 0
 30277                           
 30278                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30279  013BA8  52E6               	movf	postinc1,f,c
 30280  013BAA  52E6               	movf	postinc1,f,c
 30281                           
 30282                           ;incstack = 0
 30283                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 30284  013BAC  82BE               	bsf	190,1,c	;volatile
 30285                           
 30286                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 30287  013BAE  0E00               	movlw	0
 30288  013BB0  6EE6               	movwf	postinc1,c
 30289  013BB2  0E00               	movlw	0
 30290  013BB4  6EE6               	movwf	postinc1,c
 30291  013BB6  0E61               	movlw	97
 30292  013BB8  6EE6               	movwf	postinc1,c
 30293  013BBA  0E45               	movlw	69
 30294  013BBC  6EE6               	movwf	postinc1,c
 30295  013BBE  0060  F513  FFE6   	movff	_C+68,postinc1
 30296  013BC4  0060  F517  FFE6   	movff	_C+69,postinc1
 30297  013BCA  0060  F51B  FFE6   	movff	_C+70,postinc1
 30298  013BD0  0060  F51F  FFE6   	movff	_C+71,postinc1
 30299  013BD6  EC17  F0A1         	call	___fldiv	;wreg free
 30300  013BDA  0060  F007  FFE6   	movff	btemp,postinc1
 30301  013BE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30302  013BE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30303  013BEC  0060  F013  FFE6   	movff	btemp+3,postinc1
 30304  013BF2  0060  F603  FFE6   	movff	_C+128,postinc1
 30305  013BF8  0060  F607  FFE6   	movff	_C+129,postinc1
 30306  013BFE  0060  F60B  FFE6   	movff	_C+130,postinc1
 30307  013C04  0060  F60F  FFE6   	movff	_C+131,postinc1
 30308  013C0A  ECF6  F099         	call	___fladd	;wreg free
 30309  013C0E  0060  F004  F180   	movff	btemp,_C+128	;volatile
 30310  013C14  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
 30311  013C1A  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
 30312  013C20  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
 30313                           
 30314                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 30315  013C26  0060  F603  FFE6   	movff	_C+128,postinc1
 30316  013C2C  0060  F607  FFE6   	movff	_C+129,postinc1
 30317  013C32  0060  F60B  FFE6   	movff	_C+130,postinc1
 30318  013C38  0060  F60F  FFE6   	movff	_C+131,postinc1
 30319  013C3E  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30320  013C44  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30321  013C4A  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30322  013C50  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30323  013C56  EC76  F0BD         	call	___flge	;wreg free
 30324  013C5A  B001               	btfsc	btemp& (0+255),0,c
 30325  013C5C  D008               	goto	l11911
 30326                           
 30327                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 30328  013C5E  C17C  F180         	movff	_C+124,_C+128	;volatile
 30329  013C62  C17D  F181         	movff	_C+125,_C+129	;volatile
 30330  013C66  C17E  F182         	movff	_C+126,_C+130	;volatile
 30331  013C6A  C17F  F183         	movff	_C+127,_C+131	;volatile
 30332  013C6E                     l11911:
 30333                           
 30334                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 30335  013C6E  0ECD               	movlw	205
 30336  013C70  6EE6               	movwf	postinc1,c
 30337  013C72  0ECC               	movlw	204
 30338  013C74  6EE6               	movwf	postinc1,c
 30339  013C76  0ECC               	movlw	204
 30340  013C78  6EE6               	movwf	postinc1,c
 30341  013C7A  0E3D               	movlw	61
 30342  013C7C  6EE6               	movwf	postinc1,c
 30343  013C7E  0060  F603  FFE6   	movff	_C+128,postinc1
 30344  013C84  0060  F607  FFE6   	movff	_C+129,postinc1
 30345  013C8A  0060  F60B  FFE6   	movff	_C+130,postinc1
 30346  013C90  0060  F60F  FFE6   	movff	_C+131,postinc1
 30347  013C96  EC76  F0BD         	call	___flge	;wreg free
 30348  013C9A  B001               	btfsc	btemp& (0+255),0,c
 30349  013C9C  D009               	goto	l11915
 30350                           
 30351                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 30352  013C9E  0ECD               	movlw	205
 30353  013CA0  0101               	movlb	1	; () banked
 30354  013CA2  6F80               	movwf	(_C+128)& (0+255),b	;volatile
 30355  013CA4  0ECC               	movlw	204
 30356  013CA6  6F81               	movwf	(_C+129)& (0+255),b	;volatile
 30357  013CA8  0ECC               	movlw	204
 30358  013CAA  6F82               	movwf	(_C+130)& (0+255),b	;volatile
 30359  013CAC  0E3D               	movlw	61
 30360  013CAE  6F83               	movwf	(_C+131)& (0+255),b	;volatile
 30361  013CB0                     l11915:
 30362                           
 30363                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 30364  013CB0  0E00               	movlw	0
 30365  013CB2  6EE6               	movwf	postinc1,c
 30366  013CB4  0E00               	movlw	0
 30367  013CB6  6EE6               	movwf	postinc1,c
 30368  013CB8  0E61               	movlw	97
 30369  013CBA  6EE6               	movwf	postinc1,c
 30370  013CBC  0E45               	movlw	69
 30371  013CBE  6EE6               	movwf	postinc1,c
 30372  013CC0  0060  F523  FFE6   	movff	_C+72,postinc1
 30373  013CC6  0060  F527  FFE6   	movff	_C+73,postinc1
 30374  013CCC  0060  F52B  FFE6   	movff	_C+74,postinc1
 30375  013CD2  0060  F52F  FFE6   	movff	_C+75,postinc1
 30376  013CD8  EC17  F0A1         	call	___fldiv	;wreg free
 30377  013CDC  0060  F007  FFE6   	movff	btemp,postinc1
 30378  013CE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30379  013CE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30380  013CEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 30381  013CF4  0060  F613  FFE6   	movff	_C+132,postinc1
 30382  013CFA  0060  F617  FFE6   	movff	_C+133,postinc1
 30383  013D00  0060  F61B  FFE6   	movff	_C+134,postinc1
 30384  013D06  0060  F61F  FFE6   	movff	_C+135,postinc1
 30385  013D0C  ECF6  F099         	call	___fladd	;wreg free
 30386  013D10  0060  F004  F184   	movff	btemp,_C+132	;volatile
 30387  013D16  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
 30388  013D1C  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
 30389  013D22  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
 30390                           
 30391                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 30392  013D28  0E00               	movlw	0
 30393  013D2A  6EE6               	movwf	postinc1,c
 30394  013D2C  0E00               	movlw	0
 30395  013D2E  6EE6               	movwf	postinc1,c
 30396  013D30  0E61               	movlw	97
 30397  013D32  6EE6               	movwf	postinc1,c
 30398  013D34  0E45               	movlw	69
 30399  013D36  6EE6               	movwf	postinc1,c
 30400  013D38  0060  F5C3  FFE6   	movff	_C+112,postinc1
 30401  013D3E  0060  F5C7  FFE6   	movff	_C+113,postinc1
 30402  013D44  0060  F5CB  FFE6   	movff	_C+114,postinc1
 30403  013D4A  0060  F5CF  FFE6   	movff	_C+115,postinc1
 30404  013D50  EC17  F0A1         	call	___fldiv	;wreg free
 30405  013D54  0060  F007  FFE6   	movff	btemp,postinc1
 30406  013D5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30407  013D60  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30408  013D66  0060  F013  FFE6   	movff	btemp+3,postinc1
 30409  013D6C  0060  F653  FFE6   	movff	_C+148,postinc1
 30410  013D72  0060  F657  FFE6   	movff	_C+149,postinc1
 30411  013D78  0060  F65B  FFE6   	movff	_C+150,postinc1
 30412  013D7E  0060  F65F  FFE6   	movff	_C+151,postinc1
 30413  013D84  ECF6  F099         	call	___fladd	;wreg free
 30414  013D88  0060  F004  F194   	movff	btemp,_C+148	;volatile
 30415  013D8E  0060  F008  F195   	movff	btemp+1,_C+149	;volatile
 30416  013D94  0060  F00C  F196   	movff	btemp+2,_C+150	;volatile
 30417  013D9A  0060  F010  F197   	movff	btemp+3,_C+151	;volatile
 30418                           
 30419                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 30420  013DA0  0E00               	movlw	0
 30421  013DA2  6EE6               	movwf	postinc1,c
 30422  013DA4  0E00               	movlw	0
 30423  013DA6  6EE6               	movwf	postinc1,c
 30424  013DA8  0E61               	movlw	97
 30425  013DAA  6EE6               	movwf	postinc1,c
 30426  013DAC  0E45               	movlw	69
 30427  013DAE  6EE6               	movwf	postinc1,c
 30428  013DB0  0060  F5B3  FFE6   	movff	_C+108,postinc1
 30429  013DB6  0060  F5B7  FFE6   	movff	_C+109,postinc1
 30430  013DBC  0060  F5BB  FFE6   	movff	_C+110,postinc1
 30431  013DC2  0060  F5BF  FFE6   	movff	_C+111,postinc1
 30432  013DC8  EC17  F0A1         	call	___fldiv	;wreg free
 30433  013DCC  0060  F007  FFE6   	movff	btemp,postinc1
 30434  013DD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30435  013DD8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30436  013DDE  0060  F013  FFE6   	movff	btemp+3,postinc1
 30437  013DE4  0060  F663  FFE6   	movff	_C+152,postinc1
 30438  013DEA  0060  F667  FFE6   	movff	_C+153,postinc1
 30439  013DF0  0060  F66B  FFE6   	movff	_C+154,postinc1
 30440  013DF6  0060  F66F  FFE6   	movff	_C+155,postinc1
 30441  013DFC  ECF6  F099         	call	___fladd	;wreg free
 30442  013E00  0060  F004  F198   	movff	btemp,_C+152	;volatile
 30443  013E06  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 30444  013E0C  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 30445  013E12  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 30446                           
 30447                           ;bsoc.c: 54:  if (C.p_bat > 0.0)
 30448  013E18  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30449  013E1E  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30450  013E24  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30451  013E2A  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30452  013E30  0E00               	movlw	0
 30453  013E32  6EE6               	movwf	postinc1,c
 30454  013E34  0E00               	movlw	0
 30455  013E36  6EE6               	movwf	postinc1,c
 30456  013E38  0E00               	movlw	0
 30457  013E3A  6EE6               	movwf	postinc1,c
 30458  013E3C  0E00               	movlw	0
 30459  013E3E  6EE6               	movwf	postinc1,c
 30460  013E40  EC76  F0BD         	call	___flge	;wreg free
 30461  013E44  B001               	btfsc	btemp& (0+255),0,c
 30462  013E46  D03C               	goto	l11925
 30463                           
 30464                           ;bsoc.c: 55:   C.bkwi += (C.p_bat / 3600.0);
 30465  013E48  0E00               	movlw	0
 30466  013E4A  6EE6               	movwf	postinc1,c
 30467  013E4C  0E00               	movlw	0
 30468  013E4E  6EE6               	movwf	postinc1,c
 30469  013E50  0E61               	movlw	97
 30470  013E52  6EE6               	movwf	postinc1,c
 30471  013E54  0E45               	movlw	69
 30472  013E56  6EE6               	movwf	postinc1,c
 30473  013E58  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30474  013E5E  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30475  013E64  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30476  013E6A  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30477  013E70  EC17  F0A1         	call	___fldiv	;wreg free
 30478  013E74  0060  F007  FFE6   	movff	btemp,postinc1
 30479  013E7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30480  013E80  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30481  013E86  0060  F013  FFE6   	movff	btemp+3,postinc1
 30482  013E8C  0060  F633  FFE6   	movff	_C+140,postinc1
 30483  013E92  0060  F637  FFE6   	movff	_C+141,postinc1
 30484  013E98  0060  F63B  FFE6   	movff	_C+142,postinc1
 30485  013E9E  0060  F63F  FFE6   	movff	_C+143,postinc1
 30486  013EA4  ECF6  F099         	call	___fladd	;wreg free
 30487  013EA8  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 30488  013EAE  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 30489  013EB4  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 30490  013EBA  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 30491  013EC0                     l11925:
 30492                           
 30493                           ;bsoc.c: 56:  if (C.p_bat < 0.0)
 30494  013EC0  0101               	movlb	1	; () banked
 30495  013EC2  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 30496  013EC4  D03C               	goto	l11929
 30497                           
 30498                           ; BSR set to: 1
 30499                           ;bsoc.c: 57:   C.bkwo += (C.p_bat / 3600.0);
 30500  013EC6  0E00               	movlw	0
 30501  013EC8  6EE6               	movwf	postinc1,c
 30502  013ECA  0E00               	movlw	0
 30503  013ECC  6EE6               	movwf	postinc1,c
 30504  013ECE  0E61               	movlw	97
 30505  013ED0  6EE6               	movwf	postinc1,c
 30506  013ED2  0E45               	movlw	69
 30507  013ED4  6EE6               	movwf	postinc1,c
 30508  013ED6  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30509  013EDC  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30510  013EE2  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30511  013EE8  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30512  013EEE  EC17  F0A1         	call	___fldiv	;wreg free
 30513  013EF2  0060  F007  FFE6   	movff	btemp,postinc1
 30514  013EF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30515  013EFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30516  013F04  0060  F013  FFE6   	movff	btemp+3,postinc1
 30517  013F0A  0060  F643  FFE6   	movff	_C+144,postinc1
 30518  013F10  0060  F647  FFE6   	movff	_C+145,postinc1
 30519  013F16  0060  F64B  FFE6   	movff	_C+146,postinc1
 30520  013F1C  0060  F64F  FFE6   	movff	_C+147,postinc1
 30521  013F22  ECF6  F099         	call	___fladd	;wreg free
 30522  013F26  0060  F004  F190   	movff	btemp,_C+144	;volatile
 30523  013F2C  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 30524  013F32  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 30525  013F38  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 30526  013F3E                     l11929:
 30527                           
 30528                           ;bsoc.c: 59:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 30529  013F3E  0E00               	movlw	0
 30530  013F40  6EE6               	movwf	postinc1,c
 30531  013F42  0E00               	movlw	0
 30532  013F44  6EE6               	movwf	postinc1,c
 30533  013F46  0EC8               	movlw	200
 30534  013F48  6EE6               	movwf	postinc1,c
 30535  013F4A  0E42               	movlw	66
 30536  013F4C  6EE6               	movwf	postinc1,c
 30537  013F4E  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30538  013F54  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30539  013F5A  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30540  013F60  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30541  013F66  0060  F603  FFE6   	movff	_C+128,postinc1
 30542  013F6C  0060  F607  FFE6   	movff	_C+129,postinc1
 30543  013F72  0060  F60B  FFE6   	movff	_C+130,postinc1
 30544  013F78  0060  F60F  FFE6   	movff	_C+131,postinc1
 30545  013F7E  EC17  F0A1         	call	___fldiv	;wreg free
 30546  013F82  0060  F007  FFE6   	movff	btemp,postinc1
 30547  013F88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30548  013F8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30549  013F94  0060  F013  FFE6   	movff	btemp+3,postinc1
 30550  013F9A  ECE1  F095         	call	___flmul	;wreg free
 30551  013F9E  0060  F007  FFE6   	movff	btemp,postinc1
 30552  013FA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30553  013FAA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30554  013FB0  0060  F013  FFE6   	movff	btemp+3,postinc1
 30555  013FB6  EC05  F0BC         	call	___fltol	;wreg free
 30556  013FBA  0060  F004  F00B   	movff	btemp,btemp+10
 30557  013FC0  0060  F008  F00C   	movff	btemp+1,btemp+11
 30558  013FC6  0E01               	movlw	1
 30559  013FC8  240B               	addwf	(btemp+10)^0,w,c
 30560  013FCA  0101               	movlb	1	; () banked
 30561  013FCC  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
 30562  013FCE  0E00               	movlw	0
 30563  013FD0  200C               	addwfc	(btemp+11)^0,w,c
 30564  013FD2  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
 30565                           
 30566                           ; BSR set to: 1
 30567                           ;bsoc.c: 60:  if (C.soc > 100)
 30568  013FD4  519F               	movf	(_C+159)& (0+255),w,b	;volatile
 30569  013FD6  E104               	bnz	u1155_20
 30570  013FD8  0E65               	movlw	101
 30571  013FDA  5D9E               	subwf	(_C+158)& (0+255),w,b	;volatile
 30572  013FDC  A0D8               	btfss	status,0,c
 30573  013FDE  D004               	goto	l11935
 30574  013FE0                     u1155_20:
 30575                           
 30576                           ; BSR set to: 1
 30577                           ;bsoc.c: 61:   C.soc = 100;
 30578  013FE0  0E00               	movlw	0
 30579  013FE2  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
 30580  013FE4  0E64               	movlw	100
 30581  013FE6  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
 30582  013FE8                     l11935:
 30583                           
 30584                           ; BSR set to: 1
 30585                           ;bsoc.c: 63:  if (C.c_bat < 0.0) {
 30586  013FE8  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 30587  013FEA  D043               	goto	l11939
 30588                           
 30589                           ; BSR set to: 1
 30590                           ;bsoc.c: 64:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 30591  013FEC  0060  F513  FFE6   	movff	_C+68,postinc1
 30592  013FF2  0060  F517  FFE6   	movff	_C+69,postinc1
 30593  013FF8  0060  F51B  FFE6   	movff	_C+70,postinc1
 30594  013FFE  0060  F51F  FFE6   	movff	_C+71,postinc1
 30595  014004  0060  F603  FFE6   	movff	_C+128,postinc1
 30596  01400A  0060  F607  FFE6   	movff	_C+129,postinc1
 30597  014010  0060  F60B  FFE6   	movff	_C+130,postinc1
 30598  014016  0060  F60F  FFE6   	movff	_C+131,postinc1
 30599  01401C  EC17  F0A1         	call	___fldiv	;wreg free
 30600  014020  0060  F007  FFE6   	movff	btemp,postinc1
 30601  014026  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30602  01402C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30603  014032  0060  F013  FFE6   	movff	btemp+3,postinc1
 30604  014038  EC1A  F0CE         	call	___flneg	;wreg free
 30605  01403C  0060  F007  FFE6   	movff	btemp,postinc1
 30606  014042  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30607  014048  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30608  01404E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30609  014054  EC05  F0BC         	call	___fltol	;wreg free
 30610  014058  0060  F004  F00B   	movff	btemp,btemp+10
 30611  01405E  0060  F008  F00C   	movff	btemp+1,btemp+11
 30612  014064  0060  F02C  F19C   	movff	btemp+10,_C+156	;volatile
 30613  01406A  0060  F030  F19D   	movff	btemp+11,_C+157	;volatile
 30614                           
 30615                           ;bsoc.c: 65:  } else {
 30616  014070  D004               	goto	l11941
 30617  014072                     l11939:
 30618                           
 30619                           ; BSR set to: 1
 30620                           ;bsoc.c: 66:   C.runtime = 120;
 30621  014072  0E00               	movlw	0
 30622  014074  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 30623  014076  0E78               	movlw	120
 30624  014078  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 30625  01407A                     l11941:
 30626                           
 30627                           ;bsoc.c: 68:  if (C.runtime > 120)
 30628  01407A  0101               	movlb	1	; () banked
 30629  01407C  519D               	movf	(_C+157)& (0+255),w,b	;volatile
 30630  01407E  E104               	bnz	u1157_20
 30631  014080  0E79               	movlw	121
 30632  014082  5D9C               	subwf	(_C+156)& (0+255),w,b	;volatile
 30633  014084  A0D8               	btfss	status,0,c
 30634  014086  D004               	goto	l11945
 30635  014088                     u1157_20:
 30636                           
 30637                           ; BSR set to: 1
 30638                           ;bsoc.c: 69:   C.runtime = 120;
 30639  014088  0E00               	movlw	0
 30640  01408A  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 30641  01408C  0E78               	movlw	120
 30642  01408E  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 30643  014090                     l11945:
 30644                           
 30645                           ; BSR set to: 1
 30646                           ;bsoc.c: 71:  V.lowint_count++;
 30647  014090  0E01               	movlw	1
 30648  014092  0102               	movlb	2	; () banked
 30649  014094  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 30650  014096  0E00               	movlw	0
 30651  014098  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 30652  01409A  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 30653  01409C  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 30654                           
 30655                           ; BSR set to: 2
 30656                           ;bsoc.c: 73:  log_ptr = port_data_dma_ptr();
 30657  01409E  EC52  F0D4         	call	_port_data_dma_ptr	;wreg free
 30658                           
 30659                           ;stkvar	_log_ptr @ sp[(-2)+0]
 30660  0140A2  0EFF               	movlw	-1
 30661  0140A4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30662  0140AA  0EFE               	movlw	-2
 30663  0140AC  0060  F007  FFE3   	movff	btemp,plusw1
 30664                           
 30665                           ;bsoc.c: 74:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d\r\n",
 30666  0140B2  0060  F673  FFE6   	movff	_C+156,postinc1
 30667  0140B8  0060  F677  FFE6   	movff	_C+157,postinc1
 30668  0140BE  0060  F67B  FFE6   	movff	_C+158,postinc1
 30669  0140C4  0060  F67F  FFE6   	movff	_C+159,postinc1
 30670  0140CA  0060  F613  FFE6   	movff	_C+132,postinc1
 30671  0140D0  0060  F617  FFE6   	movff	_C+133,postinc1
 30672  0140D6  0060  F61B  FFE6   	movff	_C+134,postinc1
 30673  0140DC  0060  F61F  FFE6   	movff	_C+135,postinc1
 30674  0140E2  0060  F603  FFE6   	movff	_C+128,postinc1
 30675  0140E8  0060  F607  FFE6   	movff	_C+129,postinc1
 30676  0140EE  0060  F60B  FFE6   	movff	_C+130,postinc1
 30677  0140F4  0060  F60F  FFE6   	movff	_C+131,postinc1
 30678  0140FA  0060  F5B3  FFE6   	movff	_C+108,postinc1
 30679  014100  0060  F5B7  FFE6   	movff	_C+109,postinc1
 30680  014106  0060  F5BB  FFE6   	movff	_C+110,postinc1
 30681  01410C  0060  F5BF  FFE6   	movff	_C+111,postinc1
 30682  014112  0060  F5A3  FFE6   	movff	_C+104,postinc1
 30683  014118  0060  F5A7  FFE6   	movff	_C+105,postinc1
 30684  01411E  0060  F5AB  FFE6   	movff	_C+106,postinc1
 30685  014124  0060  F5AF  FFE6   	movff	_C+107,postinc1
 30686  01412A  0060  F5C3  FFE6   	movff	_C+112,postinc1
 30687  014130  0060  F5C7  FFE6   	movff	_C+113,postinc1
 30688  014136  0060  F5CB  FFE6   	movff	_C+114,postinc1
 30689  01413C  0060  F5CF  FFE6   	movff	_C+115,postinc1
 30690  014142  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30691  014148  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30692  01414E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30693  014154  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30694  01415A  0060  F593  FFE6   	movff	_C+100,postinc1
 30695  014160  0060  F597  FFE6   	movff	_C+101,postinc1
 30696  014166  0060  F59B  FFE6   	movff	_C+102,postinc1
 30697  01416C  0060  F59F  FFE6   	movff	_C+103,postinc1
 30698  014172  0060  F533  FFE6   	movff	_C+76,postinc1
 30699  014178  0060  F537  FFE6   	movff	_C+77,postinc1
 30700  01417E  0060  F53B  FFE6   	movff	_C+78,postinc1
 30701  014184  0060  F53F  FFE6   	movff	_C+79,postinc1
 30702  01418A  0060  F543  FFE6   	movff	_C+80,postinc1
 30703  014190  0060  F547  FFE6   	movff	_C+81,postinc1
 30704  014196  0060  F54B  FFE6   	movff	_C+82,postinc1
 30705  01419C  0060  F54F  FFE6   	movff	_C+83,postinc1
 30706  0141A2  0060  F553  FFE6   	movff	_C+84,postinc1
 30707  0141A8  0060  F557  FFE6   	movff	_C+85,postinc1
 30708  0141AE  0060  F55B  FFE6   	movff	_C+86,postinc1
 30709  0141B4  0060  F55F  FFE6   	movff	_C+87,postinc1
 30710  0141BA  0060  FA07  FFE6   	movff	_V+129,postinc1
 30711  0141C0  0060  FA0B  FFE6   	movff	_V+130,postinc1
 30712  0141C6  0060  FA0F  FFE6   	movff	_V+131,postinc1
 30713  0141CC  0060  FA13  FFE6   	movff	_V+132,postinc1
 30714  0141D2  0EA5               	movlw	low STR_50
 30715  0141D4  6EE6               	movwf	postinc1,c
 30716  0141D6  0EFD               	movlw	high STR_50
 30717  0141D8  6EE6               	movwf	postinc1,c
 30718                           
 30719                           ;stkvar	_log_ptr @ sp[(-52)+0]
 30720  0141DA  0ECC               	movlw	-52
 30721  0141DC  006F FF8F FFE6     	movff	plusw1,postinc1
 30722  0141E2  006F FF8F FFE6     	movff	plusw1,postinc1
 30723  0141E8  0E34               	movlw	52
 30724  0141EA  6EE6               	movwf	postinc1,c
 30725  0141EC  EC02  F0C4         	call	_sprintf	;wreg free
 30726                           
 30727                           ; BSR set to: 0
 30728                           ;bsoc.c: 79:  StartTimer(TMR_DISPLAY, 125);
 30729  0141F0  0E7D               	movlw	125
 30730  0141F2  6EE6               	movwf	postinc1,c
 30731  0141F4  0E00               	movlw	0
 30732  0141F6  6EE6               	movwf	postinc1,c
 30733  0141F8  0E0A               	movlw	10
 30734  0141FA  6EE6               	movwf	postinc1,c
 30735  0141FC  EC30  F0CF         	call	_StartTimer	;wreg free
 30736                           
 30737                           ;bsoc.c: 80:  send_port_data_dma(strlen((char*) log_ptr));
 30738                           ;stkvar	_log_ptr @ sp[(-2)+0]
 30739  014200  0EFE               	movlw	-2
 30740  014202  006F FF8F FFE6     	movff	plusw1,postinc1
 30741  014208  006F FF8F FFE6     	movff	plusw1,postinc1
 30742  01420E  EC6E  F0C8         	call	_strlen	;wreg free
 30743  014212  0060  F007  FFE6   	movff	btemp,postinc1
 30744  014218  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30745  01421E  ECA5  F0CD         	call	_send_port_data_dma	;wreg free
 30746                           
 30747                           ; BSR set to: 59
 30748                           ;bsoc.c: 81:  C.update = 0;
 30749  014222  0101               	movlb	1	; () banked
 30750  014224  6BA0               	clrf	(_C+160)& (0+255),b	;volatile
 30751                           
 30752                           ; BSR set to: 1
 30753  014226  92BE               	bcf	190,1,c	;volatile
 30754                           
 30755                           ; BSR set to: 1
 30756                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 30757  014228  52E5               	movf	postdec1,f,c
 30758  01422A  52E5               	movf	postdec1,f,c
 30759  01422C  0012               	return		;funcret
 30760  01422E                     __end_of_calc_bsoc:
 30761                           	opt callstack 0
 30762                           
 30763 ;; *************** function _send_port_data_dma *****************
 30764 ;; Defined at:
 30765 ;;		line 258 in file "eadog.c"
 30766 ;; Parameters:    Size  Location     Type
 30767 ;;  dsize           2  [STACK] unsigned short 
 30768 ;; Auto vars:     Size  Location     Type
 30769 ;;		None
 30770 ;; Return value:  Size  Location     Type
 30771 ;;                  1  [STACK] void 
 30772 ;; Registers used:
 30773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 30774 ;; Tracked objects:
 30775 ;;		On entry : 0/0
 30776 ;;		On exit  : 3F/3B
 30777 ;;		Unchanged: 0/0
 30778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30783 ;;Total ram usage:        0 bytes
 30784 ;; Hardware stack levels used:    1
 30785 ;; Hardware stack levels required when called:    3
 30786 ;; This function calls:
 30787 ;;		Nothing
 30788 ;; This function is called by:
 30789 ;;		_calc_bsoc
 30790 ;; This function uses a reentrant model
 30791 ;;
 30792                           
 30793                           	psect	text144
 30794  019B4A                     __ptext144:
 30795                           	opt callstack 0
 30796  019B4A                     _send_port_data_dma:
 30797                           	opt callstack 11
 30798                           
 30799                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 30800                           ;stkvar	_dsize @ sp[(0)+-2]
 30801                           
 30802                           ; BSR set to: 1
 30803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30804                           ;incstack = 0
 30805  019B4A  0EFE               	movlw	-2
 30806  019B4C  04E3               	decf	plusw1,w,c
 30807  019B4E  0EFF               	movlw	-1
 30808  019B50  006F FF8C  F001    	movff	plusw1,btemp
 30809  019B56  0E02               	movlw	2
 30810  019B58  5A01               	subwfb	btemp^0,f,c
 30811  019B5A  A0D8               	btfss	status,0,c
 30812  019B5C  D00C               	goto	l9161
 30813                           
 30814                           ;eadog.c: 261:   dsize = 512;
 30815  019B5E  0E00               	movlw	0
 30816  019B60  6E0B               	movwf	(btemp+10)^0,c
 30817  019B62  0E02               	movlw	2
 30818  019B64  6E0C               	movwf	(btemp+11)^0,c
 30819                           
 30820                           ;stkvar	_dsize @ sp[(0)+-2]
 30821  019B66  0EFE               	movlw	-2
 30822  019B68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30823  019B6E  0EFF               	movlw	-1
 30824  019B70  0060  F033  FFE3   	movff	btemp+11,plusw1
 30825  019B76                     l9161:
 30826                           
 30827                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 30828  019B76  013B               	movlb	59	; () banked
 30829  019B78  9FDC               	bcf	220,7,b	;volatile
 30830                           
 30831                           ; BSR set to: 59
 30832                           ;eadog.c: 264:  DMA2SSZ = dsize;
 30833                           ;stkvar	_dsize @ sp[(0)+-2]
 30834  019B7A  0EFE               	movlw	-2
 30835  019B7C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 30836  019B82  0EFF               	movlw	-1
 30837  019B84  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 30838                           
 30839                           ; BSR set to: 59
 30840                           ;eadog.c: 265:  DMA2DSZ = 1;
 30841  019B8A  0E00               	movlw	0
 30842  019B8C  6FCF               	movwf	207,b	;volatile
 30843  019B8E  0E01               	movlw	1
 30844  019B90  6FCE               	movwf	206,b	;volatile
 30845                           
 30846                           ; BSR set to: 59
 30847                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 30848  019B92  8FDC               	bsf	220,7,b	;volatile
 30849                           
 30850                           ; BSR set to: 59
 30851                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 30852  019B94  8DDC               	bsf	220,6,b	;volatile
 30853                           
 30854                           ; BSR set to: 59
 30855                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 30856  019B96  52E5               	movf	postdec1,f,c
 30857  019B98  52E5               	movf	postdec1,f,c
 30858  019B9A  0012               	return		;funcret
 30859  019B9C                     __end_of_send_port_data_dma:
 30860                           	opt callstack 0
 30861                           
 30862 ;; *************** function _port_data_dma_ptr *****************
 30863 ;; Defined at:
 30864 ;;		line 273 in file "eadog.c"
 30865 ;; Parameters:    Size  Location     Type
 30866 ;;		None
 30867 ;; Auto vars:     Size  Location     Type
 30868 ;;		None
 30869 ;; Return value:  Size  Location     Type
 30870 ;;                  2  [STACK] PTR unsigned char 
 30871 ;; Registers used:
 30872 ;;		wreg, status,2, status,0, btemp, btemp+1
 30873 ;; Tracked objects:
 30874 ;;		On entry : 3F/2
 30875 ;;		On exit  : 0/0
 30876 ;;		Unchanged: 0/0
 30877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30882 ;;Total ram usage:        0 bytes
 30883 ;; Hardware stack levels used:    1
 30884 ;; Hardware stack levels required when called:    3
 30885 ;; This function calls:
 30886 ;;		Nothing
 30887 ;; This function is called by:
 30888 ;;		_calc_bsoc
 30889 ;; This function uses a reentrant model
 30890 ;;
 30891                           
 30892                           	psect	text145
 30893  01A8A4                     __ptext145:
 30894                           	opt callstack 0
 30895  01A8A4                     _port_data_dma_ptr:
 30896                           	opt callstack 11
 30897                           
 30898                           ;eadog.c: 275:  return port_data;
 30899                           
 30900                           ; BSR set to: 59
 30901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30902                           ;incstack = 0
 30903  01A8A4  0EFF               	movlw	low _port_data
 30904  01A8A6  6E01               	movwf	btemp^0,c
 30905  01A8A8  0E05               	movlw	high _port_data
 30906  01A8AA  6E02               	movwf	(btemp+1)^0,c
 30907                           
 30908                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30909  01A8AC  0012               	return		;funcret
 30910  01A8AE                     __end_of_port_data_dma_ptr:
 30911                           	opt callstack 0
 30912                           
 30913 ;; *************** function _INT0_ISR *****************
 30914 ;; Defined at:
 30915 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 30916 ;; Parameters:    Size  Location     Type
 30917 ;;		None
 30918 ;; Auto vars:     Size  Location     Type
 30919 ;;		None
 30920 ;; Return value:  Size  Location     Type
 30921 ;;                  1    wreg      void 
 30922 ;; Registers used:
 30923 ;;		wreg, status,2, status,0, pclath, tosl
 30924 ;; Tracked objects:
 30925 ;;		On entry : 0/0
 30926 ;;		On exit  : 0/0
 30927 ;;		Unchanged: 0/0
 30928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30933 ;;Total ram usage:        0 bytes
 30934 ;; Hardware stack levels used:    1
 30935 ;; Hardware stack levels required when called:    2
 30936 ;; This function calls:
 30937 ;;		_INT0_CallBack
 30938 ;; This function is called by:
 30939 ;;		Interrupt level 2
 30940 ;; This function uses a non-reentrant model
 30941 ;;
 30942                           
 30943                           	psect	text146
 30944  01A87C                     __ptext146:
 30945                           	opt callstack 0
 30946  01A87C                     _INT0_ISR:
 30947                           	opt callstack 3
 30948                           
 30949                           ;incstack = 0
 30950  01A87C  EE14  F0C2         	lfsr	1,___inthi_sp
 30951                           
 30952                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 30953  01A880  0139               	movlb	57	; () banked
 30954  01A882  91A1               	bcf	161,0,b	;volatile
 30955                           
 30956                           ; BSR set to: 57
 30957                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 30958  01A884  EC02  F0D3         	call	_INT0_CallBack	;wreg free
 30959  01A888  0011               	retfie		f
 30960  01A88A                     __end_of_INT0_ISR:
 30961                           	opt callstack 0
 30962                           
 30963 ;; *************** function _INT0_CallBack *****************
 30964 ;; Defined at:
 30965 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 30966 ;; Parameters:    Size  Location     Type
 30967 ;;		None
 30968 ;; Auto vars:     Size  Location     Type
 30969 ;;		None
 30970 ;; Return value:  Size  Location     Type
 30971 ;;                  1  [STACK] void 
 30972 ;; Registers used:
 30973 ;;		wreg, status,2, status,0, pclath, tosl
 30974 ;; Tracked objects:
 30975 ;;		On entry : 3F/39
 30976 ;;		On exit  : 0/0
 30977 ;;		Unchanged: 0/0
 30978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30983 ;;Total ram usage:        0 bytes
 30984 ;; Hardware stack levels used:    1
 30985 ;; Hardware stack levels required when called:    1
 30986 ;; This function calls:
 30987 ;;		Absolute function
 30988 ;;		_INT0_DefaultInterruptHandler
 30989 ;; This function is called by:
 30990 ;;		_INT0_ISR
 30991 ;; This function uses a reentrant model
 30992 ;;
 30993                           
 30994                           	psect	text147
 30995  01A604                     __ptext147:
 30996                           	opt callstack 0
 30997  01A604                     _INT0_CallBack:
 30998                           	opt callstack 3
 30999                           
 31000                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 31001                           
 31002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31003                           ;incstack = 0
 31004  01A604  0100               	movlb	0	; () banked
 31005  01A606  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 31006  01A608  11C5               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 31007  01A60A  11C6               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 31008  01A60C  B4D8               	btfsc	status,2,c
 31009  01A60E  0012               	return	
 31010                           
 31011                           ; BSR set to: 0
 31012                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 31013  01A610  D801               	call	u929_48
 31014  01A612  0012               	return	
 31015  01A614                     u929_48:
 31016  01A614  0005               	push	
 31017  01A616  6EFA               	movwf	pclath,c
 31018  01A618  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 31019  01A61A  6EFD               	movwf	tosl,c
 31020  01A61C  51C5               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 31021  01A61E  6EFE               	movwf	tosh,c
 31022  01A620  51C6               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 31023  01A622  6EFF               	movwf	tosu,c
 31024  01A624  50FA               	movf	pclath,w,c
 31025  01A626  0012               	return		;indir
 31026  01A628                     __end_of_INT0_CallBack:
 31027                           	opt callstack 0
 31028                           
 31029 ;; *************** function _INT0_DefaultInterruptHandler *****************
 31030 ;; Defined at:
 31031 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 31032 ;; Parameters:    Size  Location     Type
 31033 ;;		None
 31034 ;; Auto vars:     Size  Location     Type
 31035 ;;		None
 31036 ;; Return value:  Size  Location     Type
 31037 ;;                  1  [STACK] void 
 31038 ;; Registers used:
 31039 ;;		None
 31040 ;; Tracked objects:
 31041 ;;		On entry : 3F/0
 31042 ;;		On exit  : 0/0
 31043 ;;		Unchanged: 0/0
 31044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31049 ;;Total ram usage:        0 bytes
 31050 ;; Hardware stack levels used:    1
 31051 ;; This function calls:
 31052 ;;		Nothing
 31053 ;; This function is called by:
 31054 ;;		_EXT_INT_Initialize
 31055 ;;		_INT0_CallBack
 31056 ;; This function uses a reentrant model
 31057 ;;
 31058                           
 31059                           	psect	text148
 31060  01A91E                     __ptext148:
 31061                           	opt callstack 0
 31062  01A91E                     _INT0_DefaultInterruptHandler:
 31063                           	opt callstack 3
 31064                           
 31065                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31066                           
 31067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31068                           ;incstack = 0
 31069  01A91E  0012               	return		;funcret
 31070  01A920                     __end_of_INT0_DefaultInterruptHandler:
 31071                           	opt callstack 0
 31072                           
 31073 ;; *************** function _Default_ISR *****************
 31074 ;; Defined at:
 31075 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 31076 ;; Parameters:    Size  Location     Type
 31077 ;;		None
 31078 ;; Auto vars:     Size  Location     Type
 31079 ;;		None
 31080 ;; Return value:  Size  Location     Type
 31081 ;;                  1    wreg      void 
 31082 ;; Registers used:
 31083 ;;		None
 31084 ;; Tracked objects:
 31085 ;;		On entry : 0/0
 31086 ;;		On exit  : 0/0
 31087 ;;		Unchanged: 0/0
 31088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31093 ;;Total ram usage:        0 bytes
 31094 ;; Hardware stack levels used:    1
 31095 ;; This function calls:
 31096 ;;		Nothing
 31097 ;; This function is called by:
 31098 ;;		Interrupt level 2
 31099 ;; This function uses a non-reentrant model
 31100 ;;
 31101                           
 31102                           	psect	text149
 31103  01A914                     __ptext149:
 31104                           	opt callstack 0
 31105  01A914                     _Default_ISR:
 31106                           	opt callstack 5
 31107                           
 31108                           ;incstack = 0
 31109  01A914  EE14  F0C2         	lfsr	1,___inthi_sp
 31110  01A918  0011               	retfie		f
 31111  01A91A                     __end_of_Default_ISR:
 31112                           	opt callstack 0
 31113                           
 31114 ;; *************** function _ADCC_ISR *****************
 31115 ;; Defined at:
 31116 ;;		line 314 in file "mcc_generated_files/adcc.c"
 31117 ;; Parameters:    Size  Location     Type
 31118 ;;		None
 31119 ;; Auto vars:     Size  Location     Type
 31120 ;;		None
 31121 ;; Return value:  Size  Location     Type
 31122 ;;                  1    wreg      void 
 31123 ;; Registers used:
 31124 ;;		wreg, status,2, status,0, pclath, tosl
 31125 ;; Tracked objects:
 31126 ;;		On entry : 0/0
 31127 ;;		On exit  : 0/0
 31128 ;;		Unchanged: 0/0
 31129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31134 ;;Total ram usage:        0 bytes
 31135 ;; Hardware stack levels used:    1
 31136 ;; Hardware stack levels required when called:    1
 31137 ;; This function calls:
 31138 ;;		Absolute function
 31139 ;;		_ADCC_DefaultInterruptHandler
 31140 ;;		_adc_int_handler
 31141 ;; This function is called by:
 31142 ;;		Interrupt level 2
 31143 ;; This function uses a non-reentrant model
 31144 ;;
 31145                           
 31146                           	psect	text150
 31147  01A1FC                     __ptext150:
 31148                           	opt callstack 0
 31149  01A1FC                     _ADCC_ISR:
 31150                           	opt callstack 4
 31151                           
 31152                           ;incstack = 0
 31153  01A1FC  EE14  F0C2         	lfsr	1,___inthi_sp
 31154                           
 31155                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 31156  01A200  0139               	movlb	57	; () banked
 31157  01A202  95A1               	bcf	161,2,b	;volatile
 31158                           
 31159                           ; BSR set to: 57
 31160                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 31161  01A204  0100               	movlb	0	; () banked
 31162  01A206  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31163  01A208  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31164  01A20A  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31165  01A20C  B4D8               	btfsc	status,2,c
 31166  01A20E  0011               	retfie		f
 31167                           
 31168                           ; BSR set to: 0
 31169                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 31170  01A210  D801               	call	i2u967_48
 31171  01A212  0011               	retfie		f
 31172  01A214                     i2u967_48:
 31173  01A214  0005               	push	
 31174  01A216  6EFA               	movwf	pclath,c
 31175  01A218  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31176  01A21A  6EFD               	movwf	tosl,c
 31177  01A21C  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31178  01A21E  6EFE               	movwf	tosh,c
 31179  01A220  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31180  01A222  6EFF               	movwf	tosu,c
 31181  01A224  50FA               	movf	pclath,w,c
 31182  01A226  0012               	return		;indir
 31183  01A228                     __end_of_ADCC_ISR:
 31184                           	opt callstack 0
 31185                           
 31186 ;; *************** function _adc_int_t_handler *****************
 31187 ;; Defined at:
 31188 ;;		line 128 in file "daq.c"
 31189 ;; Parameters:    Size  Location     Type
 31190 ;;		None
 31191 ;; Auto vars:     Size  Location     Type
 31192 ;;		None
 31193 ;; Return value:  Size  Location     Type
 31194 ;;                  1  [STACK] void 
 31195 ;; Registers used:
 31196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 31197 ;; Tracked objects:
 31198 ;;		On entry : 3F/0
 31199 ;;		On exit  : 1/0
 31200 ;;		Unchanged: 0/0
 31201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31206 ;;Total ram usage:        0 bytes
 31207 ;; Hardware stack levels used:    1
 31208 ;; Hardware stack levels required when called:    1
 31209 ;; This function calls:
 31210 ;;		_ADCC_DischargeSampleCapacitor
 31211 ;;		_ADCC_StartConversion
 31212 ;; This function is called by:
 31213 ;;		_start_adc_scan
 31214 ;;		_ADCC_ThresholdISR
 31215 ;; This function uses a reentrant model
 31216 ;;
 31217                           
 31218                           	psect	text151
 31219  0195EC                     __ptext151:
 31220                           	opt callstack 0
 31221  0195EC                     _adc_int_t_handler:
 31222                           	opt callstack 3
 31223                           
 31224                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 31225                           
 31226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31227                           ;incstack = 0
 31228  0195EC  013E               	movlb	62	; () banked
 31229  0195EE  51E6               	movf	230,w,b	;volatile
 31230  0195F0  006F FB9C  F001    	movff	16103,btemp	;volatile
 31231  0195F6  6A02               	clrf	(btemp+1)^0,c
 31232  0195F8  0060  F004  F002   	movff	btemp,btemp+1
 31233  0195FE  6A01               	clrf	btemp^0,c
 31234  019600  2601               	addwf	btemp^0,f,c
 31235  019602  0E00               	movlw	0
 31236  019604  2202               	addwfc	(btemp+1)^0,f,c
 31237  019606  0100               	movlb	0	; () banked
 31238  019608  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 31239  01960A  0D02               	mullw	2
 31240  01960C  50F3               	movf	243,w,c
 31241  01960E  0FCB               	addlw	low _R
 31242  019610  6ED9               	movwf	fsr2l,c
 31243  019612  6ADA               	clrf	fsr2h,c
 31244  019614  0060  F007  FFDE   	movff	btemp,postinc2
 31245  01961A  0060  F00B  FFDD   	movff	btemp+1,postdec2
 31246  019620                     l10305:
 31247                           
 31248                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 31249  019620  0100               	movlb	0	; () banked
 31250  019622  2BEF               	incf	(_R+36)& (0+255),f,b	;volatile
 31251  019624  0E0D               	movlw	13
 31252  019626  65EF               	cpfsgt	(_R+36)& (0+255),b	;volatile
 31253  019628  D003               	goto	l10311
 31254                           
 31255                           ; BSR set to: 0
 31256                           ;daq.c: 136:    R.done = 1;
 31257  01962A  0E01               	movlw	1
 31258  01962C  6FF2               	movwf	(_R+39)& (0+255),b	;volatile
 31259  01962E  0012               	return	
 31260  019630                     l10311:
 31261                           
 31262                           ; BSR set to: 0
 31263                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 31264  019630  0060  F3BC  F00C   	movff	_R+36,btemp+11	;volatile
 31265  019636  EE20  F0F0         	lfsr	2,_R+37	;volatile
 31266  01963A  006F FF78  F009    	movff	postinc2,btemp+8
 31267  019640  006F FF74  F00A    	movff	postdec2,btemp+9
 31268  019646  2A0C               	incf	(btemp+11)^0,f,c
 31269  019648  D003               	goto	u964_44
 31270  01964A                     u964_45:
 31271  01964A  90D8               	bcf	status,0,c
 31272  01964C  320A               	rrcf	(btemp+9)^0,f,c
 31273  01964E  3209               	rrcf	(btemp+8)^0,f,c
 31274  019650                     u964_44:
 31275  019650  2E0C               	decfsz	(btemp+11)^0,f,c
 31276  019652  D7FB               	goto	u964_45
 31277  019654  A009               	btfss	(btemp+8)^0,0,c
 31278  019656  D7E4               	goto	l10305
 31279                           
 31280                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 31281  019658  EC69  F0D4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 31282                           
 31283                           ; BSR set to: 62
 31284                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 31285  01965C  0100               	movlb	0	; () banked
 31286  01965E  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 31287  019660  0B0F               	andlw	15
 31288  019662  6EE6               	movwf	postinc1,c
 31289  019664  EC0E  F0D4         	call	_ADCC_StartConversion	;wreg free
 31290                           
 31291                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31292  019668  0012               	return		;funcret
 31293  01966A                     __end_of_adc_int_t_handler:
 31294                           	opt callstack 0
 31295                           
 31296 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 31297 ;; Defined at:
 31298 ;;		line 339 in file "mcc_generated_files/adcc.c"
 31299 ;; Parameters:    Size  Location     Type
 31300 ;;		None
 31301 ;; Auto vars:     Size  Location     Type
 31302 ;;		None
 31303 ;; Return value:  Size  Location     Type
 31304 ;;                  1  [STACK] void 
 31305 ;; Registers used:
 31306 ;;		None
 31307 ;; Tracked objects:
 31308 ;;		On entry : 3F/0
 31309 ;;		On exit  : 0/0
 31310 ;;		Unchanged: 0/0
 31311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31316 ;;Total ram usage:        0 bytes
 31317 ;; Hardware stack levels used:    1
 31318 ;; This function calls:
 31319 ;;		Nothing
 31320 ;; This function is called by:
 31321 ;;		_ADCC_Initialize
 31322 ;;		_ADCC_ISR
 31323 ;;		_ADCC_ThresholdISR
 31324 ;; This function uses a reentrant model
 31325 ;;
 31326                           
 31327                           	psect	text152
 31328  01A920                     __ptext152:
 31329                           	opt callstack 0
 31330  01A920                     _ADCC_DefaultInterruptHandler:
 31331                           	opt callstack 4
 31332                           
 31333                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31334                           
 31335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31336                           ;incstack = 0
 31337  01A920  0012               	return		;funcret
 31338  01A922                     __end_of_ADCC_DefaultInterruptHandler:
 31339                           	opt callstack 0
 31340                           
 31341 ;; *************** function _adc_int_handler *****************
 31342 ;; Defined at:
 31343 ;;		line 118 in file "daq.c"
 31344 ;; Parameters:    Size  Location     Type
 31345 ;;		None
 31346 ;; Auto vars:     Size  Location     Type
 31347 ;;		None
 31348 ;; Return value:  Size  Location     Type
 31349 ;;                  1  [STACK] void 
 31350 ;; Registers used:
 31351 ;;		None
 31352 ;; Tracked objects:
 31353 ;;		On entry : 3F/0
 31354 ;;		On exit  : 0/0
 31355 ;;		Unchanged: 0/0
 31356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31361 ;;Total ram usage:        0 bytes
 31362 ;; Hardware stack levels used:    1
 31363 ;; This function calls:
 31364 ;;		Nothing
 31365 ;; This function is called by:
 31366 ;;		_start_adc_scan
 31367 ;;		_ADCC_ISR
 31368 ;; This function uses a reentrant model
 31369 ;;
 31370                           
 31371                           	psect	text153
 31372  01A922                     __ptext153:
 31373                           	opt callstack 0
 31374  01A922                     _adc_int_handler:
 31375                           	opt callstack 4
 31376                           
 31377                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31378                           
 31379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31380                           ;incstack = 0
 31381  01A922  0012               	return		;funcret
 31382  01A924                     __end_of_adc_int_handler:
 31383                           	opt callstack 0
 31384                           
 31385 ;; *************** function _ADCC_ThresholdISR *****************
 31386 ;; Defined at:
 31387 ;;		line 327 in file "mcc_generated_files/adcc.c"
 31388 ;; Parameters:    Size  Location     Type
 31389 ;;		None
 31390 ;; Auto vars:     Size  Location     Type
 31391 ;;		None
 31392 ;; Return value:  Size  Location     Type
 31393 ;;                  1    wreg      void 
 31394 ;; Registers used:
 31395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 31396 ;; Tracked objects:
 31397 ;;		On entry : 0/0
 31398 ;;		On exit  : 0/0
 31399 ;;		Unchanged: 0/0
 31400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31403 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31404 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31405 ;;Total ram usage:        5 bytes
 31406 ;; Hardware stack levels used:    1
 31407 ;; Hardware stack levels required when called:    2
 31408 ;; This function calls:
 31409 ;;		Absolute function
 31410 ;;		_ADCC_DefaultInterruptHandler
 31411 ;;		_adc_int_t_handler
 31412 ;; This function is called by:
 31413 ;;		Interrupt level 2
 31414 ;; This function uses a non-reentrant model
 31415 ;;
 31416                           
 31417                           	psect	text154
 31418  019740                     __ptext154:
 31419                           	opt callstack 0
 31420  019740                     _ADCC_ThresholdISR:
 31421                           	opt callstack 3
 31422                           
 31423                           ;incstack = 0
 31424  019740  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 31425  019746  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 31426  01974C  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 31427  019752  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 31428  019758  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 31429  01975E  EE14  F0C2         	lfsr	1,___inthi_sp
 31430                           
 31431                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 31432  019762  0139               	movlb	57	; () banked
 31433  019764  97A1               	bcf	161,3,b	;volatile
 31434                           
 31435                           ; BSR set to: 57
 31436                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 31437  019766  0100               	movlb	0	; () banked
 31438  019768  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31439  01976A  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31440  01976C  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31441  01976E  B4D8               	btfsc	status,2,c
 31442  019770  D00C               	goto	i2u969_49
 31443                           
 31444                           ; BSR set to: 0
 31445                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 31446  019772  D801               	call	i2u969_48
 31447  019774  D00A               	goto	i2u969_49
 31448  019776                     i2u969_48:
 31449  019776  0005               	push	
 31450  019778  6EFA               	movwf	pclath,c
 31451  01977A  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31452  01977C  6EFD               	movwf	tosl,c
 31453  01977E  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31454  019780  6EFE               	movwf	tosh,c
 31455  019782  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31456  019784  6EFF               	movwf	tosu,c
 31457  019786  50FA               	movf	pclath,w,c
 31458  019788  0012               	return		;indir
 31459  01978A                     i2u969_49:
 31460  01978A  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 31461  019790  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 31462  019796  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 31463  01979C  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 31464  0197A2  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 31465  0197A8  0011               	retfie		f
 31466  0197AA                     __end_of_ADCC_ThresholdISR:
 31467                           	opt callstack 0
 31468                           
 31469 ;; *************** function _UART1_rx_vect_isr *****************
 31470 ;; Defined at:
 31471 ;;		line 181 in file "mcc_generated_files/uart1.c"
 31472 ;; Parameters:    Size  Location     Type
 31473 ;;		None
 31474 ;; Auto vars:     Size  Location     Type
 31475 ;;		None
 31476 ;; Return value:  Size  Location     Type
 31477 ;;                  1    wreg      void 
 31478 ;; Registers used:
 31479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31480 ;; Tracked objects:
 31481 ;;		On entry : 0/0
 31482 ;;		On exit  : 0/0
 31483 ;;		Unchanged: 0/0
 31484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31489 ;;Total ram usage:        0 bytes
 31490 ;; Hardware stack levels used:    1
 31491 ;; Hardware stack levels required when called:    1
 31492 ;; This function calls:
 31493 ;;		Absolute function
 31494 ;;		_UART1_Receive_ISR
 31495 ;; This function is called by:
 31496 ;;		Interrupt level 2
 31497 ;; This function uses a non-reentrant model
 31498 ;;
 31499                           
 31500                           	psect	text155
 31501  01A4D8                     __ptext155:
 31502                           	opt callstack 0
 31503  01A4D8                     _UART1_rx_vect_isr:
 31504                           	opt callstack 4
 31505                           
 31506                           ;incstack = 0
 31507  01A4D8  EE14  F0C2         	lfsr	1,___inthi_sp
 31508                           
 31509                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 31510  01A4DC  0100               	movlb	0	; () banked
 31511  01A4DE  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31512  01A4E0  11B9               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31513  01A4E2  11BA               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31514  01A4E4  B4D8               	btfsc	status,2,c
 31515  01A4E6  0011               	retfie		f
 31516                           
 31517                           ; BSR set to: 0
 31518                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 31519  01A4E8  D801               	call	i2u1172_48
 31520  01A4EA  0011               	retfie		f
 31521  01A4EC                     i2u1172_48:
 31522  01A4EC  0005               	push	
 31523  01A4EE  6EFA               	movwf	pclath,c
 31524  01A4F0  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31525  01A4F2  6EFD               	movwf	tosl,c
 31526  01A4F4  51B9               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31527  01A4F6  6EFE               	movwf	tosh,c
 31528  01A4F8  51BA               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31529  01A4FA  6EFF               	movwf	tosu,c
 31530  01A4FC  50FA               	movf	pclath,w,c
 31531  01A4FE  0012               	return		;indir
 31532  01A500                     __end_of_UART1_rx_vect_isr:
 31533                           	opt callstack 0
 31534                           
 31535 ;; *************** function _UART1_Receive_ISR *****************
 31536 ;; Defined at:
 31537 ;;		line 192 in file "mcc_generated_files/uart1.c"
 31538 ;; Parameters:    Size  Location     Type
 31539 ;;		None
 31540 ;; Auto vars:     Size  Location     Type
 31541 ;;		None
 31542 ;; Return value:  Size  Location     Type
 31543 ;;                  1  [STACK] void 
 31544 ;; Registers used:
 31545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31546 ;; Tracked objects:
 31547 ;;		On entry : 3F/0
 31548 ;;		On exit  : 0/0
 31549 ;;		Unchanged: 0/0
 31550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31555 ;;Total ram usage:        0 bytes
 31556 ;; Hardware stack levels used:    1
 31557 ;; This function calls:
 31558 ;;		Nothing
 31559 ;; This function is called by:
 31560 ;;		_UART1_Initialize
 31561 ;;		_UART1_rx_vect_isr
 31562 ;; This function uses a reentrant model
 31563 ;;
 31564                           
 31565                           	psect	text156
 31566  01A68E                     __ptext156:
 31567                           	opt callstack 0
 31568  01A68E                     _UART1_Receive_ISR:
 31569                           	opt callstack 4
 31570                           
 31571                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 31572                           
 31573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31574                           ;incstack = 0
 31575  01A68E  0EF2               	movlw	low _uart1RxBuffer
 31576  01A690  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 31577  01A692  6ED9               	movwf	fsr2l,c
 31578  01A694  6ADA               	clrf	fsr2h,c
 31579  01A696  0E01               	movlw	high _uart1RxBuffer
 31580  01A698  22DA               	addwfc	fsr2h,f,c
 31581  01A69A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 31582  01A6A0  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 31583                           
 31584                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 31585  01A6A2  0E07               	movlw	7
 31586  01A6A4  6437               	cpfsgt	_uart1RxHead^0,c
 31587  01A6A6  D001               	goto	l12003
 31588                           
 31589                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 31590  01A6A8  6A37               	clrf	_uart1RxHead^0,c	;volatile
 31591  01A6AA                     l12003:
 31592                           
 31593                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 31594  01A6AA  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 31595                           
 31596                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31597  01A6AC  0012               	return		;funcret
 31598  01A6AE                     __end_of_UART1_Receive_ISR:
 31599                           	opt callstack 0
 31600                           
 31601 ;; *************** function _UART2_tx_vect_isr *****************
 31602 ;; Defined at:
 31603 ;;		line 195 in file "mcc_generated_files/uart2.c"
 31604 ;; Parameters:    Size  Location     Type
 31605 ;;		None
 31606 ;; Auto vars:     Size  Location     Type
 31607 ;;		None
 31608 ;; Return value:  Size  Location     Type
 31609 ;;                  1    wreg      void 
 31610 ;; Registers used:
 31611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31612 ;; Tracked objects:
 31613 ;;		On entry : 0/0
 31614 ;;		On exit  : 0/0
 31615 ;;		Unchanged: 0/0
 31616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31621 ;;Total ram usage:        0 bytes
 31622 ;; Hardware stack levels used:    1
 31623 ;; Hardware stack levels required when called:    1
 31624 ;; This function calls:
 31625 ;;		Absolute function
 31626 ;;		_UART2_Transmit_ISR
 31627 ;; This function is called by:
 31628 ;;		Interrupt level 2
 31629 ;; This function uses a non-reentrant model
 31630 ;;
 31631                           
 31632                           	psect	text157
 31633  01A500                     __ptext157:
 31634                           	opt callstack 0
 31635  01A500                     _UART2_tx_vect_isr:
 31636                           	opt callstack 4
 31637                           
 31638                           ;incstack = 0
 31639  01A500  EE14  F0C2         	lfsr	1,___inthi_sp
 31640                           
 31641                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 31642  01A504  0100               	movlb	0	; () banked
 31643  01A506  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31644  01A508  11BC               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31645  01A50A  11BD               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31646  01A50C  B4D8               	btfsc	status,2,c
 31647  01A50E  0011               	retfie		f
 31648                           
 31649                           ; BSR set to: 0
 31650                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 31651  01A510  D801               	call	i2u1174_48
 31652  01A512  0011               	retfie		f
 31653  01A514                     i2u1174_48:
 31654  01A514  0005               	push	
 31655  01A516  6EFA               	movwf	pclath,c
 31656  01A518  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31657  01A51A  6EFD               	movwf	tosl,c
 31658  01A51C  51BC               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31659  01A51E  6EFE               	movwf	tosh,c
 31660  01A520  51BD               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31661  01A522  6EFF               	movwf	tosu,c
 31662  01A524  50FA               	movf	pclath,w,c
 31663  01A526  0012               	return		;indir
 31664  01A528                     __end_of_UART2_tx_vect_isr:
 31665                           	opt callstack 0
 31666                           
 31667 ;; *************** function _UART2_Transmit_ISR *****************
 31668 ;; Defined at:
 31669 ;;		line 213 in file "mcc_generated_files/uart2.c"
 31670 ;; Parameters:    Size  Location     Type
 31671 ;;		None
 31672 ;; Auto vars:     Size  Location     Type
 31673 ;;		None
 31674 ;; Return value:  Size  Location     Type
 31675 ;;                  1  [STACK] void 
 31676 ;; Registers used:
 31677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31678 ;; Tracked objects:
 31679 ;;		On entry : 3F/0
 31680 ;;		On exit  : 3B/39
 31681 ;;		Unchanged: 0/0
 31682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31687 ;;Total ram usage:        0 bytes
 31688 ;; Hardware stack levels used:    1
 31689 ;; This function calls:
 31690 ;;		Nothing
 31691 ;; This function is called by:
 31692 ;;		_UART2_Initialize
 31693 ;;		_UART2_tx_vect_isr
 31694 ;; This function uses a reentrant model
 31695 ;;
 31696                           
 31697                           	psect	text158
 31698  01A228                     __ptext158:
 31699                           	opt callstack 0
 31700  01A228                     _UART2_Transmit_ISR:
 31701                           	opt callstack 4
 31702                           
 31703                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 31704                           
 31705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31706                           ;incstack = 0
 31707  01A228  0E40               	movlw	64
 31708  01A22A  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 31709  01A22C  D010               	goto	l673
 31710                           
 31711                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 31712  01A22E  0E54               	movlw	low _uart2TxBuffer
 31713  01A230  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 31714  01A232  6ED9               	movwf	fsr2l,c
 31715  01A234  6ADA               	clrf	fsr2h,c
 31716  01A236  0E03               	movlw	high _uart2TxBuffer
 31717  01A238  22DA               	addwfc	fsr2h,f,c
 31718  01A23A  50DF               	movf	indf2,w,c
 31719  01A23C  013D               	movlb	61	; () banked
 31720  01A23E  6FD2               	movwf	210,b	;volatile
 31721                           
 31722                           ; BSR set to: 61
 31723  01A240  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 31724                           
 31725                           ; BSR set to: 61
 31726                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 31727  01A242  0E3F               	movlw	63
 31728  01A244  6433               	cpfsgt	_uart2TxTail^0,c
 31729  01A246  D001               	goto	l12015
 31730                           
 31731                           ; BSR set to: 61
 31732                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 31733  01A248  6A33               	clrf	_uart2TxTail^0,c	;volatile
 31734  01A24A                     l12015:
 31735                           
 31736                           ; BSR set to: 61
 31737                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 31738  01A24A  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 31739                           
 31740                           ;mcc_generated_files/uart2.c: 224:     }
 31741  01A24C  0012               	return	
 31742  01A24E                     l673:
 31743                           
 31744                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 31745  01A24E  0139               	movlb	57	; () banked
 31746  01A250  9796               	bcf	150,3,b	;volatile
 31747                           
 31748                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31749  01A252  0012               	return		;funcret
 31750  01A254                     __end_of_UART2_Transmit_ISR:
 31751                           	opt callstack 0
 31752                           
 31753 ;; *************** function _UART2_rx_vect_isr *****************
 31754 ;; Defined at:
 31755 ;;		line 203 in file "mcc_generated_files/uart2.c"
 31756 ;; Parameters:    Size  Location     Type
 31757 ;;		None
 31758 ;; Auto vars:     Size  Location     Type
 31759 ;;		None
 31760 ;; Return value:  Size  Location     Type
 31761 ;;                  1    wreg      void 
 31762 ;; Registers used:
 31763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31764 ;; Tracked objects:
 31765 ;;		On entry : 0/0
 31766 ;;		On exit  : 0/0
 31767 ;;		Unchanged: 0/0
 31768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31773 ;;Total ram usage:        0 bytes
 31774 ;; Hardware stack levels used:    1
 31775 ;; Hardware stack levels required when called:    1
 31776 ;; This function calls:
 31777 ;;		Absolute function
 31778 ;;		_UART2_Receive_ISR
 31779 ;; This function is called by:
 31780 ;;		Interrupt level 2
 31781 ;; This function uses a non-reentrant model
 31782 ;;
 31783                           
 31784                           	psect	text159
 31785  01A528                     __ptext159:
 31786                           	opt callstack 0
 31787  01A528                     _UART2_rx_vect_isr:
 31788                           	opt callstack 4
 31789                           
 31790                           ;incstack = 0
 31791  01A528  EE14  F0C2         	lfsr	1,___inthi_sp
 31792                           
 31793                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 31794  01A52C  0100               	movlb	0	; () banked
 31795  01A52E  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 31796  01A530  11BF               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 31797  01A532  11C0               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 31798  01A534  B4D8               	btfsc	status,2,c
 31799  01A536  0011               	retfie		f
 31800                           
 31801                           ; BSR set to: 0
 31802                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 31803  01A538  D801               	call	i2u975_48
 31804  01A53A  0011               	retfie		f
 31805  01A53C                     i2u975_48:
 31806  01A53C  0005               	push	
 31807  01A53E  6EFA               	movwf	pclath,c
 31808  01A540  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 31809  01A542  6EFD               	movwf	tosl,c
 31810  01A544  51BF               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 31811  01A546  6EFE               	movwf	tosh,c
 31812  01A548  51C0               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 31813  01A54A  6EFF               	movwf	tosu,c
 31814  01A54C  50FA               	movf	pclath,w,c
 31815  01A54E  0012               	return		;indir
 31816  01A550                     __end_of_UART2_rx_vect_isr:
 31817                           	opt callstack 0
 31818                           
 31819 ;; *************** function _UART2_Receive_ISR *****************
 31820 ;; Defined at:
 31821 ;;		line 233 in file "mcc_generated_files/uart2.c"
 31822 ;; Parameters:    Size  Location     Type
 31823 ;;		None
 31824 ;; Auto vars:     Size  Location     Type
 31825 ;;		None
 31826 ;; Return value:  Size  Location     Type
 31827 ;;                  1  [STACK] void 
 31828 ;; Registers used:
 31829 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31830 ;; Tracked objects:
 31831 ;;		On entry : 3F/0
 31832 ;;		On exit  : 0/0
 31833 ;;		Unchanged: 0/0
 31834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31839 ;;Total ram usage:        0 bytes
 31840 ;; Hardware stack levels used:    1
 31841 ;; This function calls:
 31842 ;;		Nothing
 31843 ;; This function is called by:
 31844 ;;		_UART2_Initialize
 31845 ;;		_UART2_rx_vect_isr
 31846 ;; This function uses a reentrant model
 31847 ;;
 31848                           
 31849                           	psect	text160
 31850  01A726                     __ptext160:
 31851                           	opt callstack 0
 31852  01A726                     _UART2_Receive_ISR:
 31853                           	opt callstack 4
 31854                           
 31855                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 31856                           
 31857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31858                           ;incstack = 0
 31859  01A726  0E00               	movlw	low _uart2RxBuffer
 31860  01A728  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 31861  01A72A  6ED9               	movwf	fsr2l,c
 31862  01A72C  6ADA               	clrf	fsr2h,c
 31863  01A72E  0E05               	movlw	high _uart2RxBuffer
 31864  01A730  22DA               	addwfc	fsr2h,f,c
 31865  01A732  006F F743 FFDF     	movff	15824,indf2	;volatile
 31866  01A738  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 31867                           
 31868                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 31869  01A73A  2831               	incf	_uart2RxHead^0,w,c
 31870  01A73C  B4D8               	btfsc	status,2,c
 31871                           
 31872                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 31873  01A73E  6A31               	clrf	_uart2RxHead^0,c	;volatile
 31874                           
 31875                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 31876  01A740  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 31877                           
 31878                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31879  01A742  0012               	return		;funcret
 31880  01A744                     __end_of_UART2_Receive_ISR:
 31881                           	opt callstack 0
 31882                           
 31883 ;; *************** function _TMR6_ISR *****************
 31884 ;; Defined at:
 31885 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 31886 ;; Parameters:    Size  Location     Type
 31887 ;;		None
 31888 ;; Auto vars:     Size  Location     Type
 31889 ;;		None
 31890 ;; Return value:  Size  Location     Type
 31891 ;;                  1    wreg      void 
 31892 ;; Registers used:
 31893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 31894 ;; Tracked objects:
 31895 ;;		On entry : 0/0
 31896 ;;		On exit  : 0/0
 31897 ;;		Unchanged: 0/0
 31898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31903 ;;Total ram usage:        1 bytes
 31904 ;; Hardware stack levels used:    1
 31905 ;; Hardware stack levels required when called:    2
 31906 ;; This function calls:
 31907 ;;		_TMR6_CallBack
 31908 ;; This function is called by:
 31909 ;;		Interrupt level 2
 31910 ;; This function uses a non-reentrant model
 31911 ;;
 31912                           
 31913                           	psect	text161
 31914  01A77C                     __ptext161:
 31915                           	opt callstack 0
 31916  01A77C                     _TMR6_ISR:
 31917                           	opt callstack 3
 31918                           
 31919                           ;incstack = 0
 31920  01A77C  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 31921  01A782  EE14  F0C2         	lfsr	1,___inthi_sp
 31922                           
 31923                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 31924  01A786  0139               	movlb	57	; () banked
 31925  01A788  91A9               	bcf	169,0,b	;volatile
 31926                           
 31927                           ; BSR set to: 57
 31928                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 31929  01A78A  EC14  F0D3         	call	_TMR6_CallBack	;wreg free
 31930  01A78E  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 31931  01A794  0011               	retfie		f
 31932  01A796                     __end_of_TMR6_ISR:
 31933                           	opt callstack 0
 31934                           
 31935 ;; *************** function _TMR6_CallBack *****************
 31936 ;; Defined at:
 31937 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31938 ;; Parameters:    Size  Location     Type
 31939 ;;		None
 31940 ;; Auto vars:     Size  Location     Type
 31941 ;;		None
 31942 ;; Return value:  Size  Location     Type
 31943 ;;                  1  [STACK] void 
 31944 ;; Registers used:
 31945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 31946 ;; Tracked objects:
 31947 ;;		On entry : 3F/39
 31948 ;;		On exit  : 0/0
 31949 ;;		Unchanged: 0/0
 31950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31955 ;;Total ram usage:        0 bytes
 31956 ;; Hardware stack levels used:    1
 31957 ;; Hardware stack levels required when called:    1
 31958 ;; This function calls:
 31959 ;;		Absolute function
 31960 ;;		_TMR6_DefaultInterruptHandler
 31961 ;; This function is called by:
 31962 ;;		_TMR6_ISR
 31963 ;; This function uses a reentrant model
 31964 ;;
 31965                           
 31966                           	psect	text162
 31967  01A628                     __ptext162:
 31968                           	opt callstack 0
 31969  01A628                     _TMR6_CallBack:
 31970                           	opt callstack 3
 31971                           
 31972                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 31973                           
 31974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31975                           ;incstack = 0
 31976  01A628  0100               	movlb	0	; () banked
 31977  01A62A  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31978  01A62C  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31979  01A62E  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31980  01A630  B4D8               	btfsc	status,2,c
 31981  01A632  0012               	return	
 31982                           
 31983                           ; BSR set to: 0
 31984                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 31985  01A634  D801               	call	u937_48
 31986  01A636  0012               	return	
 31987  01A638                     u937_48:
 31988  01A638  0005               	push	
 31989  01A63A  6EFA               	movwf	pclath,c
 31990  01A63C  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31991  01A63E  6EFD               	movwf	tosl,c
 31992  01A640  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31993  01A642  6EFE               	movwf	tosh,c
 31994  01A644  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31995  01A646  6EFF               	movwf	tosu,c
 31996  01A648  50FA               	movf	pclath,w,c
 31997  01A64A  0012               	return		;indir
 31998  01A64C                     __end_of_TMR6_CallBack:
 31999                           	opt callstack 0
 32000                           
 32001 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 32002 ;; Defined at:
 32003 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 32004 ;; Parameters:    Size  Location     Type
 32005 ;;		None
 32006 ;; Auto vars:     Size  Location     Type
 32007 ;;  i               1  [STACK] unsigned char 
 32008 ;; Return value:  Size  Location     Type
 32009 ;;                  1  [STACK] void 
 32010 ;; Registers used:
 32011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 32012 ;; Tracked objects:
 32013 ;;		On entry : 3F/0
 32014 ;;		On exit  : 0/0
 32015 ;;		Unchanged: 0/0
 32016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32021 ;;Total ram usage:        0 bytes
 32022 ;; Hardware stack levels used:    1
 32023 ;; This function calls:
 32024 ;;		Nothing
 32025 ;; This function is called by:
 32026 ;;		_TMR6_Initialize
 32027 ;;		_TMR6_CallBack
 32028 ;; This function uses a reentrant model
 32029 ;;
 32030                           
 32031                           	psect	text163
 32032  019B9C                     __ptext163:
 32033                           	opt callstack 0
 32034  019B9C                     _TMR6_DefaultInterruptHandler:
 32035                           	opt callstack 0
 32036                           
 32037                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32038  019B9C  52E6               	movf	postinc1,f,c
 32039                           
 32040                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 32041                           ;stkvar	_i @ sp[(-1)+0]
 32042                           
 32043                           ;incstack = 0
 32044  019B9E  0EFF               	movlw	-1
 32045  019BA0  6AE3               	clrf	plusw1,c
 32046  019BA2                     l9603:
 32047                           
 32048                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 32049                           ;stkvar	_i @ sp[(-1)+0]
 32050  019BA2  0EFF               	movlw	-1
 32051  019BA4  50E3               	movf	plusw1,w,c
 32052  019BA6  0D02               	mullw	2
 32053  019BA8  0EDA               	movlw	low _tickCount
 32054  019BAA  24F3               	addwf	243,w,c
 32055  019BAC  6ED9               	movwf	fsr2l,c
 32056  019BAE  0E01               	movlw	high _tickCount
 32057  019BB0  20F4               	addwfc	prodh,w,c
 32058  019BB2  6EDA               	movwf	fsr2h,c
 32059  019BB4  50DE               	movf	postinc2,w,c
 32060  019BB6  10DE               	iorwf	postinc2,w,c
 32061  019BB8  B4D8               	btfsc	status,2,c
 32062  019BBA  D00C               	goto	l9607
 32063                           
 32064                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 32065                           ;stkvar	_i @ sp[(-1)+0]
 32066  019BBC  0EFF               	movlw	-1
 32067  019BBE  50E3               	movf	plusw1,w,c
 32068  019BC0  0D02               	mullw	2
 32069  019BC2  0EDA               	movlw	low _tickCount
 32070  019BC4  24F3               	addwf	243,w,c
 32071  019BC6  6ED9               	movwf	fsr2l,c
 32072  019BC8  0E01               	movlw	high _tickCount
 32073  019BCA  20F4               	addwfc	prodh,w,c
 32074  019BCC  6EDA               	movwf	fsr2h,c
 32075  019BCE  06DE               	decf	postinc2,f,c
 32076  019BD0  0E00               	movlw	0
 32077  019BD2  5ADD               	subwfb	postdec2,f,c
 32078  019BD4                     l9607:
 32079                           
 32080                           ;mcc_generated_files/tmr6.c: 207:  }
 32081                           ;stkvar	_i @ sp[(-1)+0]
 32082  019BD4  0EFF               	movlw	-1
 32083  019BD6  2AE3               	incf	plusw1,f,c
 32084                           
 32085                           ;stkvar	_i @ sp[(-1)+0]
 32086  019BD8  0EFF               	movlw	-1
 32087  019BDA  006F FF8C  F001    	movff	plusw1,btemp
 32088  019BE0  0E0B               	movlw	11
 32089  019BE2  6401               	cpfsgt	btemp^0,c
 32090  019BE4  D7DE               	goto	l9603
 32091                           
 32092                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32093  019BE6  52E5               	movf	postdec1,f,c
 32094  019BE8  0012               	return		;funcret
 32095  019BEA                     __end_of_TMR6_DefaultInterruptHandler:
 32096                           	opt callstack 0
 32097                           
 32098 ;; *************** function _DMA1_DMASCNT_ISR *****************
 32099 ;; Defined at:
 32100 ;;		line 126 in file "mcc_generated_files/dma1.c"
 32101 ;; Parameters:    Size  Location     Type
 32102 ;;		None
 32103 ;; Auto vars:     Size  Location     Type
 32104 ;;		None
 32105 ;; Return value:  Size  Location     Type
 32106 ;;                  1    wreg      void 
 32107 ;; Registers used:
 32108 ;;		None
 32109 ;; Tracked objects:
 32110 ;;		On entry : 0/0
 32111 ;;		On exit  : 3F/0
 32112 ;;		Unchanged: 0/0
 32113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32118 ;;Total ram usage:        0 bytes
 32119 ;; Hardware stack levels used:    1
 32120 ;; This function calls:
 32121 ;;		Nothing
 32122 ;; This function is called by:
 32123 ;;		Interrupt level 2
 32124 ;; This function uses a non-reentrant model
 32125 ;;
 32126                           
 32127                           	psect	text164
 32128  01A88C                     __ptext164:
 32129                           	opt callstack 0
 32130  01A88C                     _DMA1_DMASCNT_ISR:
 32131                           	opt callstack 5
 32132                           
 32133                           ;incstack = 0
 32134  01A88C  EE14  F0C2         	lfsr	1,___inthi_sp
 32135                           
 32136                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 32137  01A890  0139               	movlb	57	; () banked
 32138  01A892  91A2               	bcf	162,0,b	;volatile
 32139                           
 32140                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 32141  01A894  0100               	movlb	0	; () banked
 32142  01A896  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 32143                           
 32144                           ; BSR set to: 0
 32145  01A898  0011               	retfie		f
 32146  01A89A                     __end_of_DMA1_DMASCNT_ISR:
 32147                           	opt callstack 0
 32148                           
 32149 ;; *************** function _DMA1_DMADCNT_ISR *****************
 32150 ;; Defined at:
 32151 ;;		line 134 in file "mcc_generated_files/dma1.c"
 32152 ;; Parameters:    Size  Location     Type
 32153 ;;		None
 32154 ;; Auto vars:     Size  Location     Type
 32155 ;;		None
 32156 ;; Return value:  Size  Location     Type
 32157 ;;                  1    wreg      void 
 32158 ;; Registers used:
 32159 ;;		None
 32160 ;; Tracked objects:
 32161 ;;		On entry : 0/0
 32162 ;;		On exit  : 3F/39
 32163 ;;		Unchanged: 0/0
 32164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32169 ;;Total ram usage:        0 bytes
 32170 ;; Hardware stack levels used:    1
 32171 ;; This function calls:
 32172 ;;		Nothing
 32173 ;; This function is called by:
 32174 ;;		Interrupt level 2
 32175 ;; This function uses a non-reentrant model
 32176 ;;
 32177                           
 32178                           	psect	text165
 32179  01A8B0                     __ptext165:
 32180                           	opt callstack 0
 32181  01A8B0                     _DMA1_DMADCNT_ISR:
 32182                           	opt callstack 5
 32183                           
 32184                           ; BSR set to: 0
 32185                           ;incstack = 0
 32186  01A8B0  EE14  F0C2         	lfsr	1,___inthi_sp
 32187                           
 32188                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 32189  01A8B4  0139               	movlb	57	; () banked
 32190  01A8B6  93A2               	bcf	162,1,b	;volatile
 32191                           
 32192                           ; BSR set to: 57
 32193  01A8B8  0011               	retfie		f
 32194  01A8BA                     __end_of_DMA1_DMADCNT_ISR:
 32195                           	opt callstack 0
 32196                           
 32197 ;; *************** function _DMA1_DMAA_ISR *****************
 32198 ;; Defined at:
 32199 ;;		line 144 in file "mcc_generated_files/dma1.c"
 32200 ;; Parameters:    Size  Location     Type
 32201 ;;		None
 32202 ;; Auto vars:     Size  Location     Type
 32203 ;;		None
 32204 ;; Return value:  Size  Location     Type
 32205 ;;                  1    wreg      void 
 32206 ;; Registers used:
 32207 ;;		None
 32208 ;; Tracked objects:
 32209 ;;		On entry : 0/0
 32210 ;;		On exit  : 3F/39
 32211 ;;		Unchanged: 0/0
 32212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32217 ;;Total ram usage:        0 bytes
 32218 ;; Hardware stack levels used:    1
 32219 ;; This function calls:
 32220 ;;		Nothing
 32221 ;; This function is called by:
 32222 ;;		Interrupt level 2
 32223 ;; This function uses a non-reentrant model
 32224 ;;
 32225                           
 32226                           	psect	text166
 32227  01A8BC                     __ptext166:
 32228                           	opt callstack 0
 32229  01A8BC                     _DMA1_DMAA_ISR:
 32230                           	opt callstack 5
 32231                           
 32232                           ; BSR set to: 57
 32233                           ;incstack = 0
 32234  01A8BC  EE14  F0C2         	lfsr	1,___inthi_sp
 32235                           
 32236                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 32237  01A8C0  0139               	movlb	57	; () banked
 32238  01A8C2  97A2               	bcf	162,3,b	;volatile
 32239                           
 32240                           ; BSR set to: 57
 32241  01A8C4  0011               	retfie		f
 32242  01A8C6                     __end_of_DMA1_DMAA_ISR:
 32243                           	opt callstack 0
 32244                           
 32245 ;; *************** function _DMA1_DMAOR_ISR *****************
 32246 ;; Defined at:
 32247 ;;		line 155 in file "mcc_generated_files/dma1.c"
 32248 ;; Parameters:    Size  Location     Type
 32249 ;;		None
 32250 ;; Auto vars:     Size  Location     Type
 32251 ;;		None
 32252 ;; Return value:  Size  Location     Type
 32253 ;;                  1    wreg      void 
 32254 ;; Registers used:
 32255 ;;		None
 32256 ;; Tracked objects:
 32257 ;;		On entry : 0/0
 32258 ;;		On exit  : 3F/39
 32259 ;;		Unchanged: 0/0
 32260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32265 ;;Total ram usage:        0 bytes
 32266 ;; Hardware stack levels used:    1
 32267 ;; This function calls:
 32268 ;;		Nothing
 32269 ;; This function is called by:
 32270 ;;		Interrupt level 2
 32271 ;; This function uses a non-reentrant model
 32272 ;;
 32273                           
 32274                           	psect	text167
 32275  01A8C8                     __ptext167:
 32276                           	opt callstack 0
 32277  01A8C8                     _DMA1_DMAOR_ISR:
 32278                           	opt callstack 5
 32279                           
 32280                           ; BSR set to: 57
 32281                           ;incstack = 0
 32282  01A8C8  EE14  F0C2         	lfsr	1,___inthi_sp
 32283                           
 32284                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 32285  01A8CC  0139               	movlb	57	; () banked
 32286  01A8CE  95A2               	bcf	162,2,b	;volatile
 32287                           
 32288                           ; BSR set to: 57
 32289  01A8D0  0011               	retfie		f
 32290  01A8D2                     __end_of_DMA1_DMAOR_ISR:
 32291                           	opt callstack 0
 32292                           
 32293                           ;
 32294                           ; Interrupt Vector Table @ 0x8
 32295                           ;
 32296                           
 32297                           	psect	ivt0x8
 32298  000008                     __pivt0x8:
 32299                           	opt callstack 0
 32300  000008                     ivt0x8_base:
 32301                           	opt callstack 0
 32302                           
 32303                           ; Vector 0 : SWINT
 32304  000008  6A45               	dw	_Default_ISR shr (0+2)
 32305                           
 32306                           ; Vector 1 : HLVD
 32307  00000A  6A45               	dw	_Default_ISR shr (0+2)
 32308                           
 32309                           ; Vector 2 : OSF
 32310  00000C  6A45               	dw	_Default_ISR shr (0+2)
 32311                           
 32312                           ; Vector 3 : CSW
 32313  00000E  6A45               	dw	_Default_ISR shr (0+2)
 32314                           
 32315                           ; Vector 4 : NVM
 32316  000010  6A45               	dw	_Default_ISR shr (0+2)
 32317                           
 32318                           ; Vector 5 : SCAN
 32319  000012  6A45               	dw	_Default_ISR shr (0+2)
 32320                           
 32321                           ; Vector 6 : CRC
 32322  000014  6A45               	dw	_Default_ISR shr (0+2)
 32323                           
 32324                           ; Vector 7 : IOC
 32325  000016  6A45               	dw	_Default_ISR shr (0+2)
 32326                           
 32327                           ; Vector 8 : INT0
 32328  000018  6A1F               	dw	_INT0_ISR shr (0+2)
 32329                           
 32330                           ; Vector 9 : ZCD
 32331  00001A  6A45               	dw	_Default_ISR shr (0+2)
 32332                           
 32333                           ; Vector 10 : AD
 32334  00001C  687F               	dw	_ADCC_ISR shr (0+2)
 32335                           
 32336                           ; Vector 11 : ADT
 32337  00001E  65D0               	dw	_ADCC_ThresholdISR shr (0+2)
 32338                           
 32339                           ; Vector 12 : CMP1
 32340  000020  6A45               	dw	_Default_ISR shr (0+2)
 32341                           
 32342                           ; Vector 13 : SMT1
 32343  000022  6A45               	dw	_Default_ISR shr (0+2)
 32344                           
 32345                           ; Vector 14 : SMT1PRA
 32346  000024  6A45               	dw	_Default_ISR shr (0+2)
 32347                           
 32348                           ; Vector 15 : SMT1PRW
 32349  000026  6A45               	dw	_Default_ISR shr (0+2)
 32350                           
 32351                           ; Vector 16 : DMA1SCNT
 32352  000028  6A23               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 32353                           
 32354                           ; Vector 17 : DMA1DCNT
 32355  00002A  6A2C               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 32356                           
 32357                           ; Vector 18 : DMA1OR
 32358  00002C  6A32               	dw	_DMA1_DMAOR_ISR shr (0+2)
 32359                           
 32360                           ; Vector 19 : DMA1A
 32361  00002E  6A2F               	dw	_DMA1_DMAA_ISR shr (0+2)
 32362                           
 32363                           ; Vector 20 : SPI1RX
 32364  000030  6A45               	dw	_Default_ISR shr (0+2)
 32365                           
 32366                           ; Vector 21 : SPI1TX
 32367  000032  6A45               	dw	_Default_ISR shr (0+2)
 32368                           
 32369                           ; Vector 22 : SPI1
 32370  000034  6A45               	dw	_Default_ISR shr (0+2)
 32371                           
 32372                           ; Vector 23 : I2C1RX
 32373  000036  6A45               	dw	_Default_ISR shr (0+2)
 32374                           
 32375                           ; Vector 24 : I2C1TX
 32376  000038  6A45               	dw	_Default_ISR shr (0+2)
 32377                           
 32378                           ; Vector 25 : I2C1
 32379  00003A  6A45               	dw	_Default_ISR shr (0+2)
 32380                           
 32381                           ; Vector 26 : I2C1E
 32382  00003C  6A45               	dw	_Default_ISR shr (0+2)
 32383                           
 32384                           ; Vector 27 : U1RX
 32385  00003E  6936               	dw	_UART1_rx_vect_isr shr (0+2)
 32386                           
 32387                           ; Vector 28 : U1TX
 32388  000040  6A45               	dw	_Default_ISR shr (0+2)
 32389                           
 32390                           ; Vector 29 : U1E
 32391  000042  6A45               	dw	_Default_ISR shr (0+2)
 32392                           
 32393                           ; Vector 30 : U1
 32394  000044  6A45               	dw	_Default_ISR shr (0+2)
 32395                           
 32396                           ; Vector 31 : TMR0
 32397  000046  6A45               	dw	_Default_ISR shr (0+2)
 32398                           
 32399                           ; Vector 32 : TMR1
 32400  000048  6A45               	dw	_Default_ISR shr (0+2)
 32401                           
 32402                           ; Vector 33 : TMR1G
 32403  00004A  6A45               	dw	_Default_ISR shr (0+2)
 32404                           
 32405                           ; Vector 34 : TMR2
 32406  00004C  6A45               	dw	_Default_ISR shr (0+2)
 32407                           
 32408                           ; Vector 35 : CCP1
 32409  00004E  6A45               	dw	_Default_ISR shr (0+2)
 32410                           
 32411                           ; Vector 36 : Undefined
 32412  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 32413                           
 32414                           ; Vector 37 : NCO1
 32415  000052  6A45               	dw	_Default_ISR shr (0+2)
 32416                           
 32417                           ; Vector 38 : CWG1
 32418  000054  6A45               	dw	_Default_ISR shr (0+2)
 32419                           
 32420                           ; Vector 39 : CLC1
 32421  000056  6A45               	dw	_Default_ISR shr (0+2)
 32422                           
 32423                           ; Vector 40 : INT1
 32424  000058  67D8               	dw	_INT1_ISR shr (0+2)
 32425                           
 32426                           ; Vector 41 : CMP2
 32427  00005A  6A45               	dw	_Default_ISR shr (0+2)
 32428                           
 32429                           ; Vector 42 : DMA2SCNT
 32430  00005C  6A45               	dw	_Default_ISR shr (0+2)
 32431                           
 32432                           ; Vector 43 : DMA2DCNT
 32433  00005E  6A45               	dw	_Default_ISR shr (0+2)
 32434                           
 32435                           ; Vector 44 : DMA2OR
 32436  000060  6A45               	dw	_Default_ISR shr (0+2)
 32437                           
 32438                           ; Vector 45 : DMA2A
 32439  000062  6A45               	dw	_Default_ISR shr (0+2)
 32440                           
 32441                           ; Vector 46 : I2C2RX
 32442  000064  6A45               	dw	_Default_ISR shr (0+2)
 32443                           
 32444                           ; Vector 47 : I2C2TX
 32445  000066  6A45               	dw	_Default_ISR shr (0+2)
 32446                           
 32447                           ; Vector 48 : I2C2
 32448  000068  6A45               	dw	_Default_ISR shr (0+2)
 32449                           
 32450                           ; Vector 49 : I2C2E
 32451  00006A  6A45               	dw	_Default_ISR shr (0+2)
 32452                           
 32453                           ; Vector 50 : U2RX
 32454  00006C  694A               	dw	_UART2_rx_vect_isr shr (0+2)
 32455                           
 32456                           ; Vector 51 : U2TX
 32457  00006E  6940               	dw	_UART2_tx_vect_isr shr (0+2)
 32458                           
 32459                           ; Vector 52 : U2E
 32460  000070  6A45               	dw	_Default_ISR shr (0+2)
 32461                           
 32462                           ; Vector 53 : U2
 32463  000072  6A45               	dw	_Default_ISR shr (0+2)
 32464                           
 32465                           ; Vector 54 : TMR3
 32466  000074  5F14               	dw	_TMR3_ISR shr (0+2)
 32467                           
 32468                           ; Vector 55 : TMR3G
 32469  000076  6A45               	dw	_Default_ISR shr (0+2)
 32470                           
 32471                           ; Vector 56 : TMR4
 32472  000078  6A45               	dw	_Default_ISR shr (0+2)
 32473                           
 32474                           ; Vector 57 : CCP2
 32475  00007A  6A45               	dw	_Default_ISR shr (0+2)
 32476                           
 32477                           ; Vector 58 : Undefined
 32478  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 32479                           
 32480                           ; Vector 59 : CWG2
 32481  00007E  6A45               	dw	_Default_ISR shr (0+2)
 32482                           
 32483                           ; Vector 60 : CLC2
 32484  000080  6A45               	dw	_Default_ISR shr (0+2)
 32485                           
 32486                           ; Vector 61 : INT2
 32487  000082  6A45               	dw	_Default_ISR shr (0+2)
 32488                           
 32489                           ; Vector 62 : Undefined
 32490  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 32491                           
 32492                           ; Vector 63 : Undefined
 32493  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 32494                           
 32495                           ; Vector 64 : Undefined
 32496  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 32497                           
 32498                           ; Vector 65 : Undefined
 32499  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 32500                           
 32501                           ; Vector 66 : Undefined
 32502  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 32503                           
 32504                           ; Vector 67 : Undefined
 32505  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 32506                           
 32507                           ; Vector 68 : Undefined
 32508  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 32509                           
 32510                           ; Vector 69 : Undefined
 32511  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 32512                           
 32513                           ; Vector 70 : TMR5
 32514  000094  6693               	dw	_TMR5_ISR shr (0+2)
 32515                           
 32516                           ; Vector 71 : TMR5G
 32517  000096  6A45               	dw	_Default_ISR shr (0+2)
 32518                           
 32519                           ; Vector 72 : TMR6
 32520  000098  69DF               	dw	_TMR6_ISR shr (0+2)
 32521                           
 32522                           ; Vector 73 : CCP3
 32523  00009A  6A45               	dw	_Default_ISR shr (0+2)
 32524                           
 32525                           ; Vector 74 : CWG3
 32526  00009C  6A45               	dw	_Default_ISR shr (0+2)
 32527                           
 32528                           ; Vector 75 : CLC3
 32529  00009E  6A45               	dw	_Default_ISR shr (0+2)
 32530                           
 32531                           ; Vector 76 : Undefined
 32532  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 32533                           
 32534                           ; Vector 77 : Undefined
 32535  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 32536                           
 32537                           ; Vector 78 : Undefined
 32538  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 32539                           
 32540                           ; Vector 79 : Undefined
 32541  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 32542                           
 32543                           ; Vector 80 : CCP4
 32544  0000A8  6A45               	dw	_Default_ISR shr (0+2)
 32545                           
 32546                           ; Vector 81 : CLC4
 32547  0000AA  6A45               	dw	_Default_ISR shr (0+2)
 32548  0000AC                     ivt0x8_undefint:
 32549                           	opt callstack 0
 32550  0000AC  00FF               	reset	
 32551                           
 32552                           	psect	text168
 32553  000000                     __ptext168:
 32554                           	opt callstack 0
 32555                           
 32556                           	psect	rparam
 32557  0000                     
 32558                           	psect	temp
 32559  000001                     btemp:
 32560                           	opt callstack 0
 32561  000001                     	ds	32
 32562  0000                     wtemp0	set	btemp
 32563  0000                     wtemp1	set	btemp+2
 32564  0000                     wtemp2	set	btemp+4
 32565  0000                     wtemp3	set	btemp+6
 32566  0000                     wtemp4	set	btemp+8
 32567  0000                     wtemp5	set	btemp+10
 32568  0000                     wtemp8	set	btemp+1
 32569  0000                     ttemp0	set	btemp
 32570  0000                     ttemp1	set	btemp+3
 32571  0000                     ttemp2	set	btemp+6
 32572  0000                     ttemp3	set	btemp+9
 32573  0000                     ttemp5	set	btemp+1
 32574  0000                     ttemp6	set	btemp+4
 32575  0000                     ttemp7	set	btemp+8
 32576  0000                     ltemp0	set	btemp
 32577  0000                     ltemp1	set	btemp+4
 32578  0000                     ltemp2	set	btemp+8
 32579  0000                     lltemp0	set	btemp
 32580  0000                     lltemp1	set	btemp+8
 32581  0000                     lltemp2	set	btemp+16
 32582  0000                     lltemp3	set	btemp+24
 32583                           tosu	equ	0x3FFF
 32584                           tosh	equ	0x3FFE
 32585                           tosl	equ	0x3FFD
 32586                           stkptr	equ	0x3FFC
 32587                           pclatu	equ	0x3FFB
 32588                           pclath	equ	0x3FFA
 32589                           pcl	equ	0x3FF9
 32590                           tblptru	equ	0x3FF8
 32591                           tblptrh	equ	0x3FF7
 32592                           tblptrl	equ	0x3FF6
 32593                           tablat	equ	0x3FF5
 32594                           prodh	equ	0x3FF4
 32595                           prodl	equ	0x3FF3
 32596                           indf0	equ	0x3FEF
 32597                           postinc0	equ	0x3FEE
 32598                           postdec0	equ	0x3FED
 32599                           preinc0	equ	0x3FEC
 32600                           plusw0	equ	0x3FEB
 32601                           fsr0h	equ	0x3FEA
 32602                           fsr0l	equ	0x3FE9
 32603                           wreg	equ	0x3FE8
 32604                           indf1	equ	0x3FE7
 32605                           postinc1	equ	0x3FE6
 32606                           postdec1	equ	0x3FE5
 32607                           preinc1	equ	0x3FE4
 32608                           plusw1	equ	0x3FE3
 32609                           fsr1h	equ	0x3FE2
 32610                           fsr1l	equ	0x3FE1
 32611                           bsr	equ	0x3FE0
 32612                           indf2	equ	0x3FDF
 32613                           postinc2	equ	0x3FDE
 32614                           postdec2	equ	0x3FDD
 32615                           preinc2	equ	0x3FDC
 32616                           plusw2	equ	0x3FDB
 32617                           fsr2h	equ	0x3FDA
 32618                           fsr2l	equ	0x3FD9
 32619                           status	equ	0x3FD8


Data Sizes:
    Strings     602
    Constant    372
    Data        965
    BSS         1077
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     154
    BANK1           256      0     250
    BANK2           256     25     221
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_87(CODE[1]), STR_49(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_84(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), STR_70(CODE[3]), 
		 -> STR_65(CODE[3]), STR_61(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_84(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), STR_70(CODE[3]), 
		 -> STR_65(CODE[3]), STR_61(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_50(CODE[79]), STR_48(CODE[3]), STR_47(CODE[3]), 
		 -> STR_46(CODE[19]), STR_45(CODE[19]), STR_44(CODE[19]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[24]), STR_39(CODE[15]), 
		 -> STR_38(CODE[15]), STR_37(CODE[15]), STR_36(CODE[10]), STR_35(CODE[10]), 
		 -> STR_34(CODE[19]), STR_33(CODE[19]), STR_30(CODE[3]), STR_29(CODE[3]), 
		 -> STR_28(CODE[3]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), 
		 -> STR_24(CODE[19]), STR_23(CODE[20]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[19]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[16]), 
		 -> STR_12(CODE[16]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_50(CODE[79]), STR_48(CODE[3]), STR_47(CODE[3]), 
		 -> STR_46(CODE[19]), STR_45(CODE[19]), STR_44(CODE[19]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[24]), STR_39(CODE[15]), 
		 -> STR_38(CODE[15]), STR_37(CODE[15]), STR_36(CODE[10]), STR_35(CODE[10]), 
		 -> STR_34(CODE[19]), STR_33(CODE[19]), STR_30(CODE[3]), STR_29(CODE[3]), 
		 -> STR_28(CODE[3]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), 
		 -> STR_24(CODE[19]), STR_23(CODE[20]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[19]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[16]), 
		 -> STR_12(CODE[16]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_32(CODE[9]), STR_31(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_32(CODE[9]), STR_31(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[4]), STR_55(CODE[4]), STR_52(CODE[4]), STR_51(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_56(CODE[4]), STR_55(CODE[4]), STR_52(CODE[4]), STR_51(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_50(CODE[79]), STR_48(CODE[3]), STR_47(CODE[3]), STR_46(CODE[19]), 
		 -> STR_45(CODE[19]), STR_44(CODE[19]), STR_43(CODE[19]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[24]), STR_39(CODE[15]), STR_38(CODE[15]), 
		 -> STR_37(CODE[15]), STR_36(CODE[10]), STR_35(CODE[10]), STR_34(CODE[19]), 
		 -> STR_33(CODE[19]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), 
		 -> STR_24(CODE[19]), STR_23(CODE[20]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[19]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[16]), 
		 -> STR_12(CODE[16]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5824_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_50(CODE[79]), STR_48(CODE[3]), STR_47(CODE[3]), STR_46(CODE[19]), 
		 -> STR_45(CODE[19]), STR_44(CODE[19]), STR_43(CODE[19]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[24]), STR_39(CODE[15]), STR_38(CODE[15]), 
		 -> STR_37(CODE[15]), STR_36(CODE[10]), STR_35(CODE[10]), STR_34(CODE[19]), 
		 -> STR_33(CODE[19]), STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), STR_24(CODE[19]), 
		 -> STR_23(CODE[20]), STR_22(CODE[19]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[16]), STR_12(CODE[16]), 
		 -> STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_50(CODE[79]), STR_48(CODE[3]), STR_47(CODE[3]), STR_46(CODE[19]), 
		 -> STR_45(CODE[19]), STR_44(CODE[19]), STR_43(CODE[19]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[24]), STR_39(CODE[15]), STR_38(CODE[15]), 
		 -> STR_37(CODE[15]), STR_36(CODE[10]), STR_35(CODE[10]), STR_34(CODE[19]), 
		 -> STR_33(CODE[19]), STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), STR_24(CODE[19]), 
		 -> STR_23(CODE[20]), STR_22(CODE[19]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[16]), STR_12(CODE[16]), 
		 -> STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 79
		 -> STR_50(CODE[79]), STR_48(CODE[3]), STR_47(CODE[3]), STR_46(CODE[19]), 
		 -> STR_45(CODE[19]), STR_44(CODE[19]), STR_43(CODE[19]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[24]), STR_39(CODE[15]), STR_38(CODE[15]), 
		 -> STR_37(CODE[15]), STR_36(CODE[10]), STR_35(CODE[10]), STR_34(CODE[19]), 
		 -> STR_33(CODE[19]), STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), STR_24(CODE[19]), 
		 -> STR_23(CODE[20]), STR_22(CODE[19]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[16]), STR_12(CODE[16]), 
		 -> STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_32(CODE[9]), STR_31(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_32(CODE[9]), STR_31(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_32(CODE[9]), 
		 -> STR_31(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4395tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_32(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  350000
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31208
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186304
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92899
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62850
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62568
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31177
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35433
                                              0 BANK2     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35343
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35343
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     19      DD       9       86.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4FF      58        0.0%
DATA                 0      0     821       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 11 18:30:25 2019

                     _SPI1_Exchange8bit A6AE                __end_of_set_display_info A726  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 00A5  
                                     _R 00CB                                       _S 0060  
                                     _T FD01                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler A40E            __end_of_start_switch_handler A68E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FD91                  __end_of_FVR_Initialize A8FA  
                           __CFG_LVP$ON 000000                                     l169 A802  
                                   l807 A6BC                                     l673 A24E  
                                   _GIE 01FE97                                     _abs 9C7C  
                                   _pad 84D2                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize A7AE                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack A604                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0092                           _INT1_CallBack A598  
                          __CFG_ZCD$OFF 000000                                    l1000 9F1A  
                                  l2013 852E                                    l1320 2532  
                                  l1312 224E                                    l2033 4D32  
                                  l2113 0B1A                                    l1330 25D0  
                                  l1322 2538                                    l1332 2696  
                                  l1333 27A4                                    l2151 61FA  
                                  l1337 2B86                                    l1418 99A0  
                       _timer3ReloadVal 0027                                    l1188 9F5A  
                                  l2172 583E                                    l2069 123A  
                                  l2237 21E6                                    l3054 83B0  
                                  l3321 6D18                                    l2098 066A  
                                  l1562 9332                                    l2187 5118  
                                  l1636 9FBA                                    l2540 7C44  
                                  l2533 7B70                                    l1653 86F2  
                                  l1645 6DD4                                    l1741 4C4E  
                                  l1558 902E                                    l1646 6F30  
                                  l3336 95E2                                    l2529 8D62  
                                  l1577 9FEE                                    l1693 A722  
                                  l3349 955E                    _ADCC_StartConversion A81C  
                                  l2807 3B9E                                    l2567 7972  
                                  l1786 74EA                                    l2819 3A2E  
                                  l2852 479E                                    l1869 9458  
                                  l1878 8A0C                                    l2951 7680  
                                  l2928 712E                                    l7121 9124  
                                  l8003 7BBE                                    l7301 3A50  
                                  l2990 68B8                                    l7303 3A62  
                                  l7119 9102                                    l2959 9CBC  
                                  l8015 7C42                                    l8007 7C0C  
                                  l8023 9C52                                    l2888 33E2  
                                  l7321 3A9C                                    l7233 37AA  
                                  l7153 3482                                    l8121 9B3A  
                                  l8033 785C                                    l8105 7FE6  
                                  l7307 3A6E                                    l7235 37BC  
                                  l7243 37F6                                    l7219 3718  
                                  l7171 3532                                    l7147 3442  
                                  l8051 78FA                                    l7403 761E  
                                  l7333 3AFA                                    l7317 3A96  
                                  l7261 3892                                    l7229 378A  
                                  l7181 3588                                    l7165 3500  
                                  l7157 3498                                    l7413 7678  
                                  l7343 3B26                                    l7263 38A4  
                                  l7271 38E0                                    l7239 37C6  
                                  l7183 35B8                                    l7159 34C8  
                                  l7503 6430                                    l7407 7622  
                                  l7431 95D2                                    l7177 3572  
                                  l8057 790A                                    l8049 78DE  
                                  l8073 76D8                                    l9121 9FF8  
                                  l9201 700E                                    l7355 3B7E  
                                  l7347 3B3E                                    l7283 39B8  
                                  l7267 38AE                                    l7515 64CA  
                                  l7603 4362                                    l8059 7920  
                                  l9211 7078                                    l9203 702C  
                                  l7349 3B4E                                    l7293 3A12  
                                  l7285 39DE                                    l7189 35DA  
                                  l9029 A33E                                    l7509 6484  
                                  l7621 4426                                    l7613 43B8  
                                  l7461 571A                                    l7445 55AC  
                                  l8085 77AA                                    l9221 70AC  
                                  l9213 708E                                    l7527 659C  
                                  l7703 46DE                                    l7615 43E8  
                                  l9231 710E                                    l9161 9B76  
                                  l7721 4772                                    l7609 43A2  
                                  l7465 5762                                    l8097 7F3A  
                                  l9209 705A                                    l9153 A308  
                                  l7563 6A54                                    l7555 69A8  
                                  l7547 6920                                    l7723 4782  
                                  l7715 474A                                    l7635 447A  
                                  l7627 4460                                    l7459 56CA  
                                  l7389 9CAC                                    l7901 7DD6  
                                  l7709 471A                                    l7661 45A6  
                                  l7653 4540                                    l7645 450A  
                                  l7469 57D0                                    l7655 4552  
                                  l7663 45AA                                    l7583 4284  
                                  l7487 954E                                    l7833 31F2  
                                  l7745 2C58                                    l7913 7E0C  
                                  l7593 42DA                                    l9603 9BA2  
                                  l7851 3268                                    l7827 31D6  
                                  l7763 2D26                                    l7747 2C5E  
                                  l7739 2C18                                    l7907 7DEC  
                                  l7675 45F4                                    l7595 430A  
                                  l7861 32DC                                    l7837 3218  
                                  l7765 2D2C                                    l7757 2CE6  
                                  l7749 2C8E                                    l7693 466A  
                                  l7669 45D8                                    l7589 42C4  
                                  l9197 6FEA                                    l9189 6F7E  
                                  l9607 9BD4                                    l7871 334C  
                                  l7847 3262                                    l7775 2D7E  
                                  l7767 2D5C                                    l8743 672A  
                                  l8727 6668                                    l7935 7EE6  
                                  l7927 7EB2                                    l7951 83EC  
                                  l7679 461A                                    l9199 6FF8  
                                  l7881 33AA                                    l7865 3322  
                                  l8753 680C                                    l8745 6742  
                                  l8737 66FE                                    l8729 668A  
                                  l7689 4664                                    l9707 9FD0  
                                  l8763 68A8                                    l8747 6766  
                                  l7955 8404                                    l7947 83DA  
                                  l9661 7370                                    l8749 67A4  
                                  l7973 84B8                                    l7965 8484  
                                  l7981 8CEA                                    l8781 6BF6  
                                  l9831 81AA                                    l9823 8180  
                                  l7879 3390                                    l9743 47AA  
                                  l9825 8190                                    l9673 73B0  
                                  l7985 8D2C                                    l9851 827C  
                                  l9843 820E                                    l9827 8196  
                                  l9835 81B2                                    l8779 6B8A  
                                  l9771 4A04                                    l9763 49D2  
                                  l9931 921E                                    l9829 819C  
                                  l9837 81DE                                    l9669 739C  
                                  l7989 8D60                                    l7997 7B2E  
                                  l9749 47DA                                    l9783 4B80  
                                  l9775 4AA0                                    l9759 48F8  
                                  l9863 9412                                    l9935 9286  
                                  STR_1 FF13                                    STR_2 FFA5  
                                  STR_3 FFE3                                    STR_4 FF02  
                                  STR_5 FF24                                    STR_6 FFA5  
                                  l9789 4C1C                                    l9797 4C2E  
                                  STR_7 FFE3                                    STR_8 FEF1  
                                  STR_9 FF56                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5000 9152  
                                  _T2PR 003FAB                                    u5030 A162  
                                  u5007 9144                                    u5200 380E  
                                  u6000 69D4                                    u5040 A164  
                                  u5300 3A00                                    u5140 373E  
                                  u6020 6A8C                                    u5150 375E  
                                  u5151 3758                                    u5400 3AEA  
                                  u6040 6ADE                                    _T6PR 003F93  
                                  u5340 3A74                                    u5260 38D6  
                                  u6220 465C                                    _PMD0 0039C0  
                                  u5405 3ADA                                    _PMD1 0039C1  
                                  u5430 3B0A                                    u5190 37EE  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u5360 3A8E                                    u5168 3760  
                                  u5600 7672                                    _PMD4 0039C4  
                                  u5265 38C6                                    _PMD5 0039C5  
                                  u5530 9C90                                    _PMD6 0039C6  
                                  u5195 37DE                                    _PMD7 0039C7  
                                  u6500 3336                                    u6260 46B8  
                                  u6180 45D2                                    u5540 75A2  
                                  u6405 3190                                    u8110 66FA  
                                  u6270 46F2                                    u5710 5670  
                                  u5630 9590                                    u5470 A132  
                                  u6440 325A                                    u6280 472E  
                                  u5640 9592                                    u5480 A134  
                                  u6265 46A8                                    u5545 7598  
                                  u6370 2D6C                                    u5810 A192  
                                  u8130 6852                                    u5730 5748  
                                  u5715 5666                                    u5820 A194  
                                  u8140 6854                                    u6620 8430  
                                  u5660 5544                                    u8220 6CBE  
                                  u9020 4AE4                                    u9030 A658  
                                  u5910 65D4                                    u6550 7E38  
                                  u5590 7670                                    u5670 5590  
                                  u8230 6CEC                                    u9014 4ADC  
                                  u5735 573E                                    u9015 4AD6  
                                  u6480 32B6                                    u5840 642A  
                                  u6640 84A4                                    u5760 9E12  
                                  u6385 2F00                                    u5585 7652  
                                  u5665 553A                                    u8225 6CB8  
                                  u6490 32F0                                    u5930 6626  
                                  u6570 7ED2                                    u5770 9E14  
                                  u6395 2FC8                                    u8227 6CAA  
                                  u9036 A65A                                    u5860 6480  
                                  u6740 9C4E                                    u6820 7928  
                                  u8180 6C24                                    u5780 950C  
                                  u9140 93FE                                    u6485 32A6  
                                  u8237 6CDE                                    u6750 783C  
                                  u6910 7F34                                    u5790 950E  
                                  u5871 648A                                    u5695 55CA  
                                  u5880 64C4                                    u5960 691A  
                                  u6680 8D5C                                    u6840 7952  
                                  u6760 7850                                    u5696 55D0  
                                  u6920 7F66                                    u5697 55DE  
                                  u5890 64F6                                    u6770 788A  
                                  u9170 9444                                    u6755 7832  
                                  u8187 6C16                                    u6851 7698  
                                  u5980 6970                                    u6860 76D2  
                                  u6940 801E                                    u5990 69A2  
                                  u6870 7704                                    u8710 70A2  
                                  u9158 9400                                    u8615 9E4E  
                                  u6775 7880                                    u6960 9B16  
                                  u6970 9B36                                    u6890 77E2  
                                  u9188 9446                                    u9445 A848  
                                  u8750 97B8                                    u9446 A84A  
                                  u9455 A838                                    u9456 A83A  
                                  u8850 734E                                    u8914 47C4  
                                  _PLLR 01CEE0                                    u8915 47BE  
                                  u9910 82BA                                    u8934 47F4  
                                  u8775 97EC                                    u8935 47EE  
                                  u8776 97EE                                    u8768 97BA  
                                  u9930 8336                                    u8954 4816  
                                  u8955 4810                                    u8974 49EC  
                                  u8975 49E6                                    u8994 4ABA  
                                  u8995 4AB4                                    u9990 8C96  
                                  u9997 8C88                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR A228  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FDA1                                    _cp_l FD9D  
                                  _atoi 664E                                    _ctoa 945C  
                                  _main 21F0                                    _dtoa 4C54  
                                  _nanf 9874                                    _seed 02D5  
                                  _prec 0023                                    _nout 00C7  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 6110  
                                  btemp 0001                                    _utoa 57FA  
                                  _xtoa 50D4                  __end_of_check_adc_scan A8F2  
                         ___fpclassifyf 74F4                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 002B               __end_of_SPI1_Exchange8bit A6CC  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize 9D94  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr A4D8  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0038  
                      __end_of_INT0_ISR A88A                        __end_of_INT1_ISR 9F9E  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 9036  
         __end_of_OSCILLATOR_Initialize A808                                   l10033 9F02  
                                 l10051 9F42                                   l11005 00AC  
                                 l10205 891A                                   l10311 9630  
                                 l11111 05F6                                   l11103 0594  
                                 l10305 9620                                   l11113 0602  
                                 l11017 00F0                                   l11025 0146  
                                 l10217 8976                                   l12003 A6AA  
                                 l11035 01EA                                   l11043 0258  
                                 l10227 89E6                                   l11133 06F0  
                                 l11053 02FC                                   l11061 032A  
                                 l11037 0216                                   l10181 8E6C  
                                 l12015 A24A                                   l11207 0D24  
                                 l11215 0D90                                   l11223 0EA2  
                                 l11039 022C                                   l11129 06B8  
                                 l11073 0406                                   l12113 6DA4  
                                 l10177 8E2E                                   l11251 0FF0  
                                 l11235 0F3A                                   l11171 0B12  
                                 l11163 0A48                                   l11139 077A  
                                 l11091 0554                                   l11075 0470  
                                 l11331 629C                                   l11323 6230  
                                 l11307 617C                                   l11411 517E  
                                 l11261 1092                                   l11173 0B34  
                                 l11149 0926                                   l11069 0396  
                                 l11341 6352                                   l11405 5142  
                                 l11501 1376                                   l10199 6104  
                                 l11271 10E2                                   l11095 057C  
                                 l11079 04D2                                   l11327 626C  
                                 l12127 6ECC                                   l11249 0FD6  
                                 l11097 058E                                   l11345 638E  
                                 l11337 6326                                   l11521 14E2  
                                 l12313 28E4                                   l10299 9ED8  
                                 l11187 0C32                                   l11435 52D4  
                                 l11419 51DE                                   l11443 535A  
                                 l11523 14F8                                   l12323 2A60  
                                 l12331 2AAA                                   l11605 1BDA  
                                 l12341 2AEE                                   l12309 2882  
                                 l12325 2A8A                                   l10831 918E  
                                 l11287 119A                                   l11199 0CBA  
                                 l11367 588A                                   l11359 582E  
                                 l11615 1C88                                   l11519 14A8  
                                 l12191 2268                                   l12183 2230  
                                 l10841 84FE                                   l10921 94A6  
                                 l11377 5A80                                   l11625 1DAA  
                                 l11561 1834                                   l12185 2238  
                                 l10819 82C6                                   l10835 91CC  
                                 l10851 8574                                   l11459 5444  
                                 l11635 1E60                                   l11539 165C  
                                 l10907 5DA8                                   l12355 2B36  
                                 l12347 2B00                                   l12275 253C  
                                 l10845 8526                                   l10861 8C1C  
                                 l11581 1A46                                   l11573 198E  
                                 l11557 17E0                                   l11549 16F4  
                                 l11733 8F0C                                   l12349 2B18  
                                 l12277 256A                                   l12189 2256  
                                 PRLOCK 0039EF                                   l11911 3C6E  
                                 l10855 85BE                                   l10847 8538  
                                 l10919 947A                                   l11399 5108  
                                 l11663 2114                                   l11735 8F4E  
                                 l11719 908E                                   l12359 2B5C  
                                 l10953 4D6C                                   l10945 4D22  
                                 l11673 2172                                   l11649 1FDC  
                                 l11585 1A7A                                   l11497 1326  
                                 l12369 2BB0                                   l12297 25C2  
                                 l12289 259E                                   l11915 3CB0  
                                 l11499 1360                                   l11941 407A  
                                 l11925 3EC0                                   l10957 4D8A  
                                 l11669 216E                                   l10893 5C90  
                                 l11935 3FE8                                   l10991 508A  
                                 l10967 4F9C                                   l11679 2192  
                                 l10887 5BD2                                   l11945 4090  
                                 l11929 3F3E                                   l11939 4072  
                                 l10987 504E                                   l10899 5CFA  
                                 l11859 860A                         __end_of___aodiv 664E  
                          _Volts_to_SOC 9216                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 3BA8  
                                 _ADCLK 003EFF                         __end_of___aomod 6B02  
                                 _ADPCH 003EF1                         __end_of___fldiv 47A8  
                                 _ADREF 003EFD                         __end_of___awdiv 7F00  
                       __end_of___flneg 9C7C                                   STR_10 FF66  
                                 STR_11 FF76                                   STR_12 FF86  
                                 STR_20 FEB8                                   STR_13 FF46  
                                 STR_21 FECB                                   STR_22 FEA5  
                                 STR_31 FFB4                                   STR_15 FF35  
                                 STR_23 FE0C                                   STR_32 FFCA  
                                 STR_16 FE6C                                   STR_24 FE59  
                                 STR_40 FDF4                                   STR_25 FF46  
                                 STR_17 FE92                                   STR_33 FE33  
                         __CFG_WDTE$OFF 000000                                   STR_34 FE33  
                                 STR_26 FF46                                   STR_18 FE7F  
                                 STR_42 FE46                                   STR_50 FDA5  
                                 STR_27 FF35                                   STR_51 FFD3  
                                 STR_35 FFC0                                   STR_19 FEDE  
                                 STR_43 FE20                                   STR_36 FFC0  
                                 STR_28 FFFC                                   STR_52 FFDB  
                       __end_of___awmod 84D2                                   STR_61 FFEA  
                                 STR_29 FFF9                                   STR_37 FF96  
                                 STR_38 FF96                                   STR_70 FFED  
                                 STR_39 FF96                                   STR_63 FFF0  
                                 STR_55 FFD7                                   STR_80 FFF6  
                                 STR_56 FFDF                                   _ADRPT 003EEC  
                                 STR_49 FDF3                                   STR_65 FFF0  
                                 STR_73 FFF3                                   STR_82 FFE7  
                                 STR_75 FFF3                                   STR_59 FFEA  
                                 STR_84 FFE7                                   STR_68 FFED  
                                 STR_78 FFF6                         __end_of___flmul 33EC  
                       __end_of___flsub 9D08                         __end_of___fltol 797C  
                                 u10100 4C86                                   u10200 500A  
                                 u10120 4CF6                                   u11000 522A  
                                 u10210 500E                                   u11010 522C  
                                 u10140 4D08                                   u10300 0194  
                                 u11100 53D0                                   u10060 5E1C  
                                 u10230 5024                                   u10310 0196  
                                 u11110 53D4                                   u11030 528A  
                                 u10160 4D58                                   u11040 528C  
                                 u11200 13E6                                   u10170 4FB0  
                                 u10090 4C84                                   u10420 0562  
                                 u10340 02A6                                   u11060 5356  
                                 u11300 1748                                   u10181 4FE0  
                                 u10190 4FF6                                   u10350 02A8  
                                 u10270 00DA                                   u11070 5376  
                                 u11230 1540                                   u10191 4FF4  
                                 u11320 18BC                                   u11240 1542  
                                 u11081 53A6                                   u11065 5338  
                                 u10450 05C6                                   u11090 53BC  
                                 u11250 1568                         __end_of___lodiv 780A  
                                 u11091 53BA                                   u11420 1EB4  
                                 u11180 13BE                                   u10390 050E  
                                 u11350 1B34                                   u11190 13C0  
                                 u10720 10B8                                   u10560 0A18  
                                 u11440 2064                                   u11360 1B36  
                                 u10490 0648                                   _U1P1H 003DED  
                                 u10740 116E                                   u10660 0EE4  
                                 u10820 6292                                   u11460 906E  
                                 u11700 6F1E                                   _U1P2H 003DEF  
                                 u10750 1170                                   u10830 62D8  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u10911 5AC2                                   _T3CLK 003FA9  
                                 u10920 5AD8                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10921 5AD6  
                                 u10930 5AEC                                   _U1P3L 003DF0  
                                 u10860 63B4                                   u10940 5AF0  
                                 u10837 62CA                                   _U2P1L 003DD4  
                                 u10880 5814                                   u10960 50EE  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11690 6F1C                                   _U2P3L 003DD8  
                                 u10990 51D6                                   _T5CLK 003F9D  
                       __end_of___lomod 8040                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00B2                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003D                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR A914  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 7DB2                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 9AA6  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR A796  
                          _DMA1CON1bits 003BFD                                   _flags 0025  
              __size_of_calc_model_data 02EA                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 8296  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 9E1E  
                                 _fputs 917E                         __end_of_isdigit A19E  
                       __end_of_ivln2_h FD9D                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand A042                                   _width 0021  
                                 _putch A760                         __end_of_islower A13E  
                       __end_of_isspace 9B4A                _INT1_SetInterruptHandler A436  
                       __end_of_isupper A16E                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler A3BE  
           _UART1_SetRxInterruptHandler A396                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 890E                         __end_of_tolower 95EC  
                       __end_of_strncmp 6D22                         __end_of_toupper 9568  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr A500  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 9D4E  
                 __end_of_ringBufS_init A2F6                         __initialization 86F6  
                     _UART2_rx_vect_isr A528                            __end_of_cp_h FDA5  
                          __end_of_cp_l FDA1                            __end_of_atoi 68C2  
                          __end_of_ctoa 94E4                            __end_of_main 2BC2  
                          __end_of_dtoa 50D4                            __end_of_nanf 98D6  
                          __end_of_stoa 63CE                            __end_of_utoa 5B3A  
                          __end_of_xtoa 548E                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0038                 __end_of_TMR2_Initialize A7C6  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 9EE0  
              _TMR5_SetInterruptHandler A3E6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
                     _port_data_dma_ptr A8A4                     ??_UART2_rx_vect_isr 003D  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize A254  
                       _PWM8_Initialize A7DC                        _UART1_Initialize 9D08  
                     _UART2_tx_vect_isr A500                      _UART2_Transmit_ISR A228  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 9810  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 9E1E  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0038                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 9A98                                  _RB6PPS 003A0E  
                                i1l1205 7D1A                    _start_switch_handler A66E  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 9DDA                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright A86C  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u911_24 8272                                  u911_25 826E  
                                u904_28 8186                                  u907_20 81A6  
                                u907_21 81A0                                  u931_28 A5A8  
                                u940_28 A5CC                                  u881_20 A0B2  
                                u881_26 A0B4                                  u937_48 A638  
                                u929_48 A614                    __size_of_hid_display 0102  
                                u964_44 9650                                  u964_45 964A  
                      __end_of___xxtofl 7138   __end_of_ADCC_DischargeSampleCapacitor A8DA  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor A8D2  
              __end_of_send_lcd_cmd_dma 9AF8                         _TMR3_WriteTimer 9F20  
                   ??_UART2_tx_vect_isr 003D               __end_of_UART2_rx_vect_isr A550  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize A89A  
                      _UART2_Initialize 9938                                  _WaitMs 9FD6  
                       _conv_raw_result 47A8                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 7AEC  
                                ___fleq 8CA8                       _ADCC_ThresholdISR 9740  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 92A8  
                                _efgtoa 0000                                  _floorf 548E  
                    ?_ADCC_ThresholdISR 0038                                  _memset 5B3A  
                  __size_of_help_button 0038                                  clear_0 878A  
                                clear_1 879E                                  clear_2 87B0  
                                clear_3 87BC                                  clear_4 87C8  
                                clear_5 87D4                                  clear_6 87E0  
                                clear_7 87EC               __end_of_port_data_dma_ptr A8AE  
                                _printf 98D6                      _eaDogM_WriteString 9036  
                                _strcpy 8BD4                               ?_ADCC_ISR 0038  
                                _strlen 90DC                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize 96D4  
                        _PMD_Initialize A808               __end_of_UART2_tx_vect_isr A528  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan 9874  
                          __mediumconst FC30                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 99F0                        __end_of_vfprintf 8F8C  
                            _StartTimer 9E60           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 9D94                       _SYSTEM_Initialize 9BEA  
                            __accesstop 0060                 __end_of__initialization 87FE  
                             ?_INT0_ISR 0038                               ?_INT1_ISR 0038  
                  __end_of_display_help A8EA                    __end_of_display_info A8E2  
             __end_of_CLKREF_Initialize A8A4                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 9EE0  
                 _set_temp_display_help A84E                        _clear_hid_pflags A574  
                 __end_of_TMR3_CallBack A604               __end_of_ADCC_ThresholdISR 97AA  
                    __size_of_calc_bsoc 0686                  __end_of_ringBufS_flush 933A  
                        __pcstackCOMRAM 0038                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 A19E  
                          __pidataBANK1 8AFA                            __pidataBANK2 8D6C  
           __size_of_send_port_data_dma 0052                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 83BA  
                         __end_of_fputs 9216                           __end_of_srand A076  
                 __end_of_TMR5_CallBack A5E0                           __end_of_putch A77A  
               __end_of_PWM8_Initialize A7F2                 __end_of_TMR6_Initialize A27E  
                     _adc_int_t_handler 95EC                  __end_of_PMD_Initialize A81C  
                            __end_of_bp FD99                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack A64C             __size_of_EXT_INT_Initialize 0034  
                         _DMA1_DMAA_ISR A8BC                   TMR3_ISR@CountCallBack 00C9  
                        _clear_adc_scan A8FA                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00BE  
             __end_of_SYSTEM_Initialize 9C34                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer 9F60  
                            __pbssBANK0 0060                              __pbssBANK1 01DA  
                            __pbssBANK2 02D5                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 6D22                 __end_of_conv_raw_result 4C54  
                 _INT0_InterruptHandler 00C4                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone A346  
                      _DMA1_DMADCNT_ISR A8B0                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma A0DE  
                 __end_of_wait_lcd_done A760        __end_of_TMR3_SetInterruptHandler A436  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler A3E6  
                            ??_TMR3_ISR 02BC                 __end_of_ADCC_Initialize 973E  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 966A  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler A4AE  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler A486  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR A68E  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan A900                          ?_DMA1_DMAA_ISR 0038  
                      _DMA1_DMASCNT_ISR A88C                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 u1155_20 3FE0  
                               u1162_28 A5F0                                 _U1ERRIR 003DF9  
                               u1157_20 4088                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 422E                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch A2F6                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 9F20                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one A84E  
            __end_of_set_load_relay_two A83E       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim A796                                 __Lparam 0000  
              __end_of_UART1_Initialize 9D4E                       __end_of_hid_input 945C  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 63CE  
                               ___fladd 33EC                                 ___aomod 68C2  
                               ___fldiv 422E                                 ___awdiv 7DB2  
                               ___flneg 9C34                                 ___awmod 83BA  
                               ___flmul 2BC2                                 ___flsub 9CC2  
                               ___fltol 780A                                 ___lodiv 768A  
                               ___lomod 7F00               __end_of_UART1_Receive_ISR A6AE  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 8AFA                                 __pcinit 86F6  
              __end_of_mode_lamp_bright A87A                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand A85E  
                               __ramtop 2000                                 __ptext0 21F0  
                               __ptext1 A550                                 __ptext2 A66E  
                               __ptext3 9810                                 __ptext4 A81C  
                               __ptext5 A8D2                                 __ptext6 A042  
                               __ptext7 A82E                                 __ptext8 A83E  
                               __ptext9 A0DE                       _UART2_Receive_ISR A726  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize A7F2                                 us605999 6AF0  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 7AEC                                 _isalpha 9DDA  
                               _isdigit A16E                                 _ivln2_h FD99  
                               us594999 6638                                 us690999 77F4  
                             _T3CONbits 003FA6                                 us695999 8030  
                               _mode_sw 002E                       __end_of_lp_filter 74F4  
                               _islower A10E                                 _isspace 9AF8  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 9996                                 _isupper A13E  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 8804  
                               _tolower 9568                   __size_of_display_help 0008  
                               _utctime 009D                   __size_of_display_info 0008  
                               _strncmp 6B02                                 _toupper 94E4  
                  end_of_initialization 87FE               __size_of_convert_adc_data 00B8  
                    _check_enter_button 9EA0                               i1u1187_20 7D10  
   __end_of_UART2_SetRxInterruptHandler A396             _UART2_SetRxInterruptHandler A36E  
                             i2u1172_48 A4EC                               i2u1174_48 A514  
                     __end_of_set_vterm A708                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd A90C  
             __end_of_UART2_Receive_ISR A744                          wdtdelay@dcount 00A1  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 003E  
                 _INT1_InterruptHandler 00C1                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc A912                _TMR3_SetInterruptHandler A40E  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler A3BE  
                          _display_help A8E2                   _TMR5_InterruptHandler 00AC  
                          _display_info A8DA    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags A598                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler A4D6             _ADCC_SetADIInterruptHandler A4AE  
                            _update_lcd 85E6                         _calc_model_data 5E26  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc A550                         _DMA1_Initialize 966A  
                            _start_bsoc A64C                         _SPI1_Initialize A7C6  
                 __end_of_get_vterm_ptr A1FC                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs A00C  
          __end_of_INTERRUPT_Initialize 9810                              _vterm_dump 8040  
                        __end_of___flge 7C4E                          __end_of___fleq 8D6C  
  __end_of_INT0_DefaultInterruptHandler A920   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler A91E              __size_of_UART1_Receive_ISR 0020  
                       _DMA2_Initialize 99F0                           __pidataBIGRAM 7138  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 57FA  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0095  
                        __end_of_memset 5E26                          __end_of_printf 9938  
              __end_of_DMA1_DMADCNT_ISR A8BA             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack A628                          __end_of_strcpy 8CA8  
                        __end_of_strlen 917E                     start_initialization 86F6  
  __end_of_TMR5_DefaultInterruptHandler A0DE   __size_of_TMR5_DefaultInterruptHandler 0034  
          _TMR5_DefaultInterruptHandler A0AA         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 9CC2                   __end_of_INT1_CallBack A5BC  
             __size_of_set_display_info 001E                             __end_of_pad 85E6  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd A2CE  
                        _switch_handler 816E           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 01F2  
                 __end_of___fpclassifyf 768A                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR A89A                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR A8C8                     __end_of_hid_display 8A10  
            __end_of_send_port_data_dma 9B9C                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone A31E                           _ringBufS_init A2CE  
                           __pdataBANK0 00CB                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize A0AA  
               __end_of_calc_model_data 6110                     __end_of_help_button 9FD6  
       __end_of_eaDogM_WriteStringAtPos A042                     __end_of_BVSOC_TABLE FD01  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize 96D4  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler A486  
                         __pcstackBANK2 02BC                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8296  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize A7DC  
              _UART1_RxInterruptHandler 00B8                _UART2_TxInterruptHandler 00BB  
                             __end_of_T FD91                        _convert_adc_data 8E28  
                             _calc_bsoc 3BA8               __size_of_ringBufS_put_dma 00AA  
                          _init_display 8A10                  __end_of_DMA1_DMAOR_ISR A8D2  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00AF  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 9A4A  
                _PIN_MANAGER_Initialize 933A                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set A906                           __pmediumconst FC30  
                             __ptext100 33EC                               __ptext101 2BC2  
                             __ptext110 9D4E                               __ptext102 9BEA  
                             __ptext111 A3E6                               __ptext103 9938  
                             __ptext120 97AA                               __ptext112 9D94  
                             __ptext104 A346                               __ptext121 A8F2  
                             __ptext113 A40E                               __ptext105 A36E  
                             __ptext130 A4AE                               __ptext122 A076  
                             __ptext114 A7AE                               __ptext106 9D08  
                             __ptext131 9F60                               __ptext123 A436  
                             __ptext115 A7C6                               __ptext107 A396  
                             __ptext140 9F20                               __ptext132 A598  
                             __ptext124 A45E                               __ptext116 A7DC  
                             __ptext108 A254                               __ptext141 A5E0  
                             __ptext133 A91A                               __ptext125 99F0  
                             __ptext117 A808                               __ptext109 A3BE  
                             __ptext150 A1FC                               __ptext142 A91C  
                             __ptext134 816E                               __ptext126 966A  
                             __ptext118 933A                               __ptext151 95EC  
                             __ptext143 3BA8                               __ptext135 9A4C  
                             __ptext127 A89A                               __ptext119 A7F2  
                             __ptext160 A726                               __ptext152 A920  
                             __ptext144 9B4A                               __ptext136 9EE0  
                             __ptext128 96D4                               __ptext161 A77C  
                             __ptext153 A922                               __ptext145 A8A4  
                             __ptext137 A5BC                               __ptext129 A486  
                             __ptext162 A628                               __ptext154 9740  
                             __ptext146 A87C                               __ptext138 A0AA  
                             __ptext163 9B9C                               __ptext155 A4D8  
                             __ptext147 A604                               __ptext139 7C50  
                             __ptext164 A88C                               __ptext156 A68E  
                             __ptext148 A91E                               __ptext165 A8B0  
                             __ptext157 A500                               __ptext149 A914  
                             __ptext166 A8BC                               __ptext158 A228  
                             __ptext167 A8C8                               __ptext159 A528  
                             __ptext168 0000                               _hid_input 93CC  
                    __end_of_StartTimer 9EA0                      _set_load_relay_one A83E  
                    _set_load_relay_two A82E                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR A1FC  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 797C                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 7338  
                           _hid_display 890E                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 97AA  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0038                                _INT0_ISR A87C  
                              _INT1_ISR 9F60                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01DA                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack A5E0                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0046  
                              i2u975_48 A53C                                i2u967_48 A214  
                              i2u969_48 9776                                i2u969_49 978A  
                             _set_vterm A6EA                     __size_of_update_lcd 0110  
                           _help_button 9F9E                                _TMR3_ISR 7C50  
                           _BVSOC_TABLE FC31                                _TMR5_ISR 9A4C  
                              _TMR6_ISR A77C                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack A5BC                              _ADCON0bits 003EF8  
                    __end_of_check_help 6F34                               _start_lcd A906  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack A628                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc A90C  
                      _set_display_info A708                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 870A                               copy_data1 8730  
                             copy_data2 8752                               copy_data3 8774  
              _INT0_SetInterruptHandler A45E                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler A36E             _UART2_SetTxInterruptHandler A346  
                          _uart1RxCount 0035                            _uart2RxCount 002F  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done A744                            _send_lcd_cmd A2A6  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler A922  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                      __end_of_get_switch A31E  
                 __end_of_DMA1_DMAA_ISR A8C6                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 6F34                       ?_DMA1_DMADCNT_ISR 0038  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand A86C                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 003E                                __ptext10 8A10  
                              __ptext11 A27E                                __ptext20 A85E  
                              __ptext12 A2A6                                __ptext21 8E28  
                              __ptext13 A6AE                                __ptext30 8804  
                              __ptext22 47A8                                __ptext14 A2CE  
                              __ptext31 A1CE                                __ptext23 9874  
                              __ptext15 797C                                __ptext40 A906  
                              __ptext32 9FD6                                __ptext24 A6CC  
                              __ptext16 9216                                __ptext41 92A8  
                              __ptext33 85E6                                __ptext25 6F34  
                              __ptext17 890E                                __ptext50 57FA  
                              __ptext42 5B3A                                __ptext34 A00C  
                              __ptext26 A574                                __ptext18 93CC  
                              __ptext51 7F00                                __ptext43 98D6  
                              __ptext35 9AA6                                __ptext27 A8FA  
                              __ptext19 A2F6                                __ptext60 74F4  
                              __ptext52 768A                                __ptext44 8EE0  
                              __ptext36 A744                                __ptext28 6D22  
                              __ptext61 780A                                __ptext53 6B02  
                              __ptext45 1244                                __ptext37 9996  
                              __ptext29 8040                                __ptext70 68C2  
                              __ptext62 9C34                                __ptext54 6110  
                              __ptext46 50D4                                __ptext38 9036  
                              __ptext71 63CE                                __ptext63 7AEC  
                              __ptext55 0000                                __ptext47 94E4  
                              __ptext39 A900                                __ptext80 9AF8  
                              __ptext72 945C                                __ptext64 8CA8  
                              __ptext56 9568                                __ptext48 A10E  
                              __ptext81 A16E                                __ptext73 84D2  
                              __ptext65 422E                                __ptext57 A13E  
                              __ptext49 9DDA                                __ptext90 9E60  
                              __ptext82 A6EA                                __ptext74 90DC  
                              __ptext66 83BA                                __ptext58 8BD4  
                              __ptext91 A8DA                                __ptext83 A84E  
                              __ptext75 917E                                __ptext67 7DB2  
                              __ptext59 548E                                __ptext92 A8E2  
                              __ptext84 A708                                __ptext76 8296  
                              __ptext68 4C54                                __ptext93 9EA0  
                              __ptext85 A796                                __ptext77 A760  
                              __ptext69 9C7C                                __ptext94 A8EA  
                              __ptext86 A86C                                __ptext78 8F8C  
                              __ptext95 5E26                                __ptext87 9E1E  
                              __ptext79 664E                                __ptext96 A90C  
                              __ptext88 9F9E                                __ptext97 A64C  
                              __ptext89 A31E                                __ptext98 7338  
                              __ptext99 9CC2                        __size_of_isupper 0030  
                              us1008999 4C6E                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1077999 6122  
                              us1089999 5860                                us1098999 5154  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 8F8C                    __end_of_Volts_to_SOC 92A8  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 09D2                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0038                   __end_of_init_port_dma A10E  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00B5                               stoa@F1166 01D3  
                    ??_DMA1_DMASCNT_ISR 003E            __end_of_ADCC_StartConversion A82E  
                              _spi_link 0089                                _wdtdelay 9996  
            __end_of_UART2_Transmit_ISR A254                                _vfprintf 8EE0  
              __end_of_convert_adc_data 8EE0              __end_of_PWM8_LoadDutyValue 9E60  
  __end_of_TMR3_DefaultInterruptHandler A91E   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler A91C    __end_of_INT1_DefaultInterruptHandler A91C  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler A91A  
                    _send_port_data_dma 9B4A                           ??_Default_ISR 0038  
                           _uart1RxHead 0037                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0031                             _uart1RxTail 0036  
                        _get_raw_result A6CC                             _uart2TxHead 0034  
                           _uart2RxTail 0030                             _uart2TxTail 0033  
                          _wait_lcd_set A900                        Volts_to_SOC@slot 002D  
                    _EXT_INT_Initialize A076    __end_of_TMR6_DefaultInterruptHandler 9BEA  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler 9B9C  
  __end_of_ADCC_DefaultInterruptHandler A922   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler A920                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long A27E  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help A85E  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 90DC  
                 __end_of_mode_lamp_dim A7AE                 __end_of_adc_int_handler A924  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 86F6                  _uart2TxBufferRemaining 0032  
                    __end_of_static_soc A574                      __end_of_start_bsoc A66E  
                        _FVR_Initialize A8F2                  __end_of_get_raw_result A6EA  
                      _send_lcd_cmd_dma 9AA6                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0029        __end_of_INT1_SetInterruptHandler A45E  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 003E  
             __end_of_send_lcd_cmd_long A2A6                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR A91A          __end_of_PIN_MANAGER_Initialize 93CC  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 816E  
               _eaDogM_WriteStringAtPos A00C                           _get_vterm_ptr A1CE  
                        _check_adc_scan A8EA               __size_of_UART2_Initialize 005E  
