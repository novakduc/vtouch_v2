

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec  4 03:55:36 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=4,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=4,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=4,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=4,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=4,class=CODE,delta=1
   165                           	psect	text142,global,reloc=4,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=4,class=CODE,delta=1
   170                           	psect	text147,global,reloc=4,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=4,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=4,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=4,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=4,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=4,class=CODE,delta=1
   182                           	psect	text159,global,reloc=4,class=CODE,delta=1
   183                           	psect	text160,global,reloc=4,class=CODE,delta=1
   184                           	psect	text161,global,reloc=4,class=CODE,delta=1
   185                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   186                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   189                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   190  0000                     
   191                           ; Version 2.10
   192                           ; Generated 31/07/2019 GMT
   193                           ; 
   194                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   195                           ; All rights reserved.
   196                           ; 
   197                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   198                           ; 
   199                           ; Redistribution and use in source and binary forms, with or without modification, are
   200                           ; permitted provided that the following conditions are met:
   201                           ; 
   202                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   203                           ;        conditions and the following disclaimer.
   204                           ; 
   205                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   206                           ;        of conditions and the following disclaimer in the documentation and/or other
   207                           ;        materials provided with the distribution.
   208                           ; 
   209                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   210                           ;        software without specific prior written permission.
   211                           ; 
   212                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   213                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   214                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   215                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   216                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   217                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   218                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   219                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   220                           ; 
   221                           ; 
   222                           ; Code-generator required, PIC18F57K42 Definitions
   223                           ; 
   224                           ; SFR Addresses
   225  0000                     
   226 ;;_k	offset	0
   227 ;;_j	offset	1
   228 ;;_i	offset	2
   229 ;;_inp_index	offset	3
   230 ;;_mode	offset	4
   231 ;;_channel	offset=-1 (param)
   232 ;;_s	offset=-2 (param)
   233 ;;_cmd	offset=-1 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_data	offset=-1 (param)
   236 ;;__this	offset=-2 (param)
   237 ;;_h	offset=-1 (param)
   238 ;;_h	offset=-1 (param)
   239 ;;_i	offset=-1 (param)
   240 ;;_cmd	offset=-1 (param)
   241 ;;_i	offset	0
   242 ;;_chan	offset=-1 (param)
   243 ;;_to_what	offset=-2 (param)
   244 ;;_u	offset	0
   245 ;;_s	offset=-2 (param)
   246 ;;_index	offset=-1 (param)
   247 ;;_arg	offset	0
   248 ;;_exp	offset	4
   249 ;;_sign	offset=-1 (param)
   250 ;;_val	offset=-5 (param)
   251 ;;_h	offset=-1 (param)
   252 ;;_flipper	offset=-1 (param)
   253 ;;_f	offset	0
   254 ;;_ap	offset	6
   255 ;;_s	offset=-3 (param)
   256 ;;_fmt	offset=-5 (param)
   257 ;;_line	offset=-1 (param)
   258 ;;_vterm	offset=-2 (param)
   259 ;;_numMilliseconds	offset=-2 (param)
   260 ;;_vterm	offset=-1 (param)
   261 ;;_r	offset=-1 (param)
   262 ;;_c	offset=-2 (param)
   263 ;;_strPtr	offset=-4 (param)
   264 ;;_strPtr	offset=-1 (param)
   265 ;;_delay	offset=-4 (param)
   266 ;;_strPtr	offset=-2 (param)
   267 ;;__this	offset=-2 (param)
   268 ;;_clearBuffer	offset=-3 (param)
   269 ;;_s	offset	0
   270 ;;_k	offset	2
   271 ;;_dest	offset=-2 (param)
   272 ;;_c	offset=-4 (param)
   273 ;;_n	offset=-6 (param)
   274 ;;_ap	offset	0
   275 ;;_fmt	offset=-3 (param)
   276 ;;_cfmt	offset	0
   277 ;;_fp	offset=-2 (param)
   278 ;;_fmt	offset=-4 (param)
   279 ;;_ap	offset=-6 (param)
   280 ;;_vfpfcnvrt$5006	offset	0
   281 ;;_vfpfcnvrt$5012	offset	2
   282 ;;_vfpfcnvrt$5005	offset	4
   283 ;;_llu	offset	6
   284 ;;_ll	offset	14
   285 ;;_f	offset	22
   286 ;;_ct	offset	26
   287 ;;_cp	offset	29
   288 ;;_c	offset	31
   289 ;;_fp	offset=-2 (param)
   290 ;;_fmt	offset=-4 (param)
   291 ;;_ap	offset=-6 (param)
   292 ;;_xtoa$4991	offset	0
   293 ;;_xtoa$4990	offset	2
   294 ;;_n	offset	4
   295 ;;_c	offset	12
   296 ;;_i	offset	14
   297 ;;_w	offset	16
   298 ;;_p	offset	18
   299 ;;_fp	offset=-2 (param)
   300 ;;_d	offset=-10 (param)
   301 ;;_x	offset=-11 (param)
   302 ;;_toupper$5651	offset	0
   303 ;;_c	offset=-2 (param)
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_r	offset	0
   307 ;;_l	offset	2
   308 ;;__l	offset=-2 (param)
   309 ;;__r	offset=-4 (param)
   310 ;;_n	offset=-6 (param)
   311 ;;_nuls	offset	0
   312 ;;_l	offset	7
   313 ;;_p	offset	9
   314 ;;_cp	offset	11
   315 ;;_w	offset	13
   316 ;;_i	offset	15
   317 ;;_fp	offset=-2 (param)
   318 ;;_s	offset=-4 (param)
   319 ;;_efgtoa$4970	offset	0
   320 ;;_efgtoa$4969	offset	2
   321 ;;_efgtoa$4968	offset	4
   322 ;;_efgtoa$4964	offset	6
   323 ;;_efgtoa$4960	offset	8
   324 ;;_efgtoa$4959	offset	10
   325 ;;_u	offset	12
   326 ;;_g	offset	16
   327 ;;_l	offset	20
   328 ;;_h	offset	24
   329 ;;_ou	offset	28
   330 ;;_n	offset	32
   331 ;;_e	offset	34
   332 ;;_i	offset	36
   333 ;;_w	offset	38
   334 ;;_p	offset	40
   335 ;;_sign	offset	42
   336 ;;_d	offset	44
   337 ;;_ne	offset	46
   338 ;;_m	offset	48
   339 ;;_pp	offset	50
   340 ;;_t	offset	52
   341 ;;_mode	offset	54
   342 ;;_nmode	offset	55
   343 ;;_fp	offset=-2 (param)
   344 ;;_f	offset=-6 (param)
   345 ;;_c	offset=-7 (param)
   346 ;;_tolower$5636	offset	0
   347 ;;_c	offset=-2 (param)
   348 ;;_c	offset=-2 (param)
   349 ;;_d	offset	0
   350 ;;_s	offset	2
   351 ;;_dest	offset=-2 (param)
   352 ;;_src	offset=-4 (param)
   353 ;;_u	offset	0
   354 ;;_m	offset	4
   355 ;;_e	offset	8
   356 ;;_x	offset=-4 (param)
   357 ;;_u	offset	0
   358 ;;_e	offset	4
   359 ;;_x	offset=-4 (param)
   360 ;;_exp1	offset	0
   361 ;;_sign1	offset	1
   362 ;;_f1	offset=-4 (param)
   363 ;;_f1	offset=-4 (param)
   364 ;;_ff1	offset=-4 (param)
   365 ;;_ff2	offset=-8 (param)
   366 ;;_ff1	offset=-4 (param)
   367 ;;_ff2	offset=-8 (param)
   368 ;;_grs	offset	0
   369 ;;_rem	offset	4
   370 ;;_new_exp	offset	8
   371 ;;_aexp	offset	10
   372 ;;_bexp	offset	11
   373 ;;_sign	offset	12
   374 ;;_b	offset=-4 (param)
   375 ;;_a	offset=-8 (param)
   376 ;;_sign	offset	0
   377 ;;_counter	offset	1
   378 ;;_dividend	offset=-2 (param)
   379 ;;_divisor	offset=-4 (param)
   380 ;;_quotient	offset	0
   381 ;;_sign	offset	2
   382 ;;_counter	offset	3
   383 ;;_dividend	offset=-2 (param)
   384 ;;_divisor	offset=-4 (param)
   385 ;;_dtoa$4936	offset	0
   386 ;;_n	offset	2
   387 ;;_i	offset	10
   388 ;;_s	offset	12
   389 ;;_w	offset	14
   390 ;;_p	offset	16
   391 ;;_fp	offset=-2 (param)
   392 ;;_d	offset=-10 (param)
   393 ;;_a	offset=-2 (param)
   394 ;;_sign	offset	0
   395 ;;_counter	offset	1
   396 ;;_dividend	offset=-8 (param)
   397 ;;_divisor	offset=-16 (param)
   398 ;;_quotient	offset	0
   399 ;;_sign	offset	8
   400 ;;_counter	offset	9
   401 ;;_dividend	offset=-8 (param)
   402 ;;_divisor	offset=-16 (param)
   403 ;;_w	offset	0
   404 ;;_fp	offset=-2 (param)
   405 ;;_c	offset=-3 (param)
   406 ;;_w	offset	0
   407 ;;_i	offset	2
   408 ;;_fp	offset=-2 (param)
   409 ;;_buf	offset=-4 (param)
   410 ;;_p	offset=-6 (param)
   411 ;;_a	offset	0
   412 ;;_s	offset=-2 (param)
   413 ;;_i	offset	0
   414 ;;_c	offset	2
   415 ;;_s	offset=-2 (param)
   416 ;;_fp	offset=-4 (param)
   417 ;;_c	offset=-2 (param)
   418 ;;_fp	offset=-4 (param)
   419 ;;_c	offset=-1 (param)
   420 ;;__this	offset=-2 (param)
   421 ;;_c	offset=-3 (param)
   422 ;;_atoi$5489	offset	0
   423 ;;_atoi$5487	offset	2
   424 ;;_atoi$5488	offset	4
   425 ;;_n	offset	5
   426 ;;_neg	offset	7
   427 ;;_s	offset=-2 (param)
   428 ;;_isspace$5527	offset	0
   429 ;;_c	offset=-2 (param)
   430 ;;_c	offset=-2 (param)
   431 ;;_vterm	offset=-1 (param)
   432 ;;_new_response_info	offset=-1 (param)
   433 ;;_new_response_info	offset=-1 (param)
   434 ;;_level	offset=-2 (param)
   435 ;;_dutyValue	offset=-2 (param)
   436 ;;_timer	offset=-1 (param)
   437 ;;_timer	offset=-1 (param)
   438 ;;_count	offset=-3 (param)
   439 ;;_h	offset=-1 (param)
   440 ;;_lp_speed	offset	0
   441 ;;_new	offset=-4 (param)
   442 ;;_bn	offset=-5 (param)
   443 ;;_slow	offset=-6 (param)
   444 ;;_b	offset=-4 (param)
   445 ;;_a	offset=-8 (param)
   446 ;;_grs	offset	0
   447 ;;_bexp	offset	1
   448 ;;_aexp	offset	2
   449 ;;_signs	offset	3
   450 ;;_b	offset=-4 (param)
   451 ;;_a	offset=-8 (param)
   452 ;;_prod	offset	0
   453 ;;_grs	offset	4
   454 ;;_temp	offset	8
   455 ;;_bexp	offset	10
   456 ;;_aexp	offset	11
   457 ;;_sign	offset	12
   458 ;;_b	offset=-4 (param)
   459 ;;_a	offset=-8 (param)
   460 ;;_InterruptHandler	offset=-3 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_InterruptHandler	offset=-3 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_state	offset	0
   468 ;;_InterruptHandler	offset=-3 (param)
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_InterruptHandler	offset=-3 (param)
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_i	offset	0
   473 ;;_sw_value	offset	1
   474 ;;_timerVal	offset=-2 (param)
   475 ;;_timerVal	offset=-2 (param)
   476 ;;_lp_speed	offset	0
   477 ;;_new	offset=-4 (param)
   478 ;;_bn	offset=-5 (param)
   479 ;;_slow	offset=-6 (param)
   480 ;;_b	offset=-4 (param)
   481 ;;_a	offset=-8 (param)
   482 ;;_grs	offset	0
   483 ;;_bexp	offset	1
   484 ;;_aexp	offset	2
   485 ;;_signs	offset	3
   486 ;;_b	offset=-4 (param)
   487 ;;_a	offset=-8 (param)
   488 ;;_prod	offset	0
   489 ;;_grs	offset	4
   490 ;;_temp	offset	8
   491 ;;_bexp	offset	10
   492 ;;_aexp	offset	11
   493 ;;_sign	offset	12
   494 ;;_b	offset=-4 (param)
   495 ;;_a	offset=-8 (param)
   496 ;;_channel	offset=-1 (param)
   497 ;;_i	offset	0
   498                           
   499                           	psect	idataBANK0
   500  018846                     __pidataBANK0:
   501                           	opt callstack 0
   502                           
   503                           ;initializer for _R
   504  018846  0000               	dw	0
   505  018848  0000               	dw	0
   506  01884A  0000               	dw	0
   507  01884C  0000               	dw	0
   508  01884E  0000               	dw	0
   509  018850  0000               	dw	0
   510  018852  0000               	dw	0
   511  018854  0000               	dw	0
   512  018856  0000               	dw	0
   513  018858  0000               	dw	0
   514  01885A  0000               	dw	0
   515  01885C  0000               	dw	0
   516  01885E  0000               	dw	0
   517  018860  0000               	dw	0
   518  018862  0000               	dw	0
   519  018864  0000               	dw	0
   520  018866  0F67               	dw	3943
   521  018868  0F8F               	dw	3983
   522  01886A  00                 	db	0
   523  01886B  0000               	dw	0
   524  01886D  00                 	db	0
   525                           
   526                           ;initializer for stoa@F1166
   527  01886E  28                 	db	40
   528  01886F  6E                 	db	110
   529  018870  75                 	db	117
   530  018871  6C                 	db	108
   531  018872  6C                 	db	108
   532  018873  29                 	db	41
   533  018874  00                 	db	0
   534                           
   535                           ;initializer for _H
   536  018875  00                 	db	0
   537  018876  00                 	db	0
   538  018877  01                 	db	1
   539  018878  00                 	db	0
   540  018879  01                 	db	1
   541  01887A  00                 	db	0
   542  01887B  00                 	db	0
   543                           
   544                           	psect	idataBANK1
   545  017C74                     __pidataBANK1:
   546                           	opt callstack 0
   547                           
   548                           ;initializer for _C
   549  017C74  0000               	dw	0
   550  017C76  0000               	dw	0
   551  017C78  0000               	dw	0
   552  017C7A  0000               	dw	0
   553  017C7C  0000               	dw	0
   554  017C7E  0000               	dw	0
   555  017C80  0000               	dw	0
   556  017C82  0000               	dw	0
   557  017C84  0000               	dw	0
   558  017C86  0000               	dw	0
   559  017C88  0000               	dw	0
   560  017C8A  0000               	dw	0
   561  017C8C  0000               	dw	0
   562  017C8E  0000               	dw	0
   563  017C90  0000               	dw	0
   564  017C92  0000               	dw	0
   565  017C94  0000               	dw	0
   566  017C96  0000               	dw	0
   567  017C98  0000               	dw	0
   568  017C9A  0000               	dw	0
   569  017C9C  0000               	dw	0
   570  017C9E  0000               	dw	0
   571  017CA0  0000               	dw	0
   572  017CA2  0000               	dw	0
   573  017CA4  0000               	dw	0
   574  017CA6  0000               	dw	0
   575  017CA8  0000               	dw	0
   576  017CAA  0000               	dw	0
   577  017CAC  0000               	dw	0
   578  017CAE  0000               	dw	0
   579  017CB0  0000               	dw	0
   580  017CB2  0000               	dw	0
   581  017CB4  0000               	dw	0
   582  017CB6  0000               	dw	0
   583  017CB8  0000               	dw	0
   584  017CBA  0000               	dw	0
   585  017CBC  0000               	dw	0
   586  017CBE  0000               	dw	0
   587  017CC0  0000               	dw	0
   588  017CC2  0000               	dw	0
   589  017CC4  0000               	dw	0
   590  017CC6  0000               	dw	0
   591  017CC8  0000               	dw	0
   592  017CCA  0000               	dw	0
   593  017CCC  0000               	dw	0
   594  017CCE  0000               	dw	0
   595  017CD0  0000               	dw	0
   596  017CD2  0000               	dw	0
   597  017CD4  0000               	dw	0
   598  017CD6  0000               	dw	0
   599  017CD8  0000               	dw	0
   600  017CDA  0000               	dw	0
   601  017CDC  0000               	dw	0
   602  017CDE  0000               	dw	0
   603  017CE0  0000               	dw	0
   604  017CE2  0000               	dw	0
   605  017CE4  0000               	dw	0
   606  017CE6  0000               	dw	0
   607  017CE8  0000               	dw	0
   608  017CEA  0000               	dw	0
   609  017CEC  0000               	dw	0
   610  017CEE  0000               	dw	0
   611  017CF0  0000               	dw	0
   612  017CF2  4361               	dw	17249
   613  017CF4  00                 	db	0
   614  017CF5  00                 	db	0
   615  017CF6  00                 	db	0
   616  017CF7  00                 	db	0
   617  017CF8  00                 	db	0
   618  017CF9  00                 	db	0
   619  017CFA  00                 	db	0
   620  017CFB  00                 	db	0
   621  017CFC  00                 	db	0
   622  017CFD  00                 	db	0
   623  017CFE  00                 	db	0
   624  017CFF  00                 	db	0
   625  017D00  00                 	db	0
   626                           
   627                           	psect	idataBANK2
   628  017542                     __pidataBANK2:
   629                           	opt callstack 0
   630                           
   631                           ;initializer for _V
   632  017542  00                 	db	0
   633  017543  00                 	db	0
   634  017544  00                 	db	0
   635  017545  00                 	db	0
   636  017546  00                 	db	0
   637  017547  00                 	db	0
   638  017548  00                 	db	0
   639  017549  00                 	db	0
   640  01754A  00                 	db	0
   641  01754B  00                 	db	0
   642  01754C  00                 	db	0
   643  01754D  00                 	db	0
   644  01754E  00                 	db	0
   645  01754F  00                 	db	0
   646  017550  00                 	db	0
   647  017551  00                 	db	0
   648  017552  00                 	db	0
   649  017553  00                 	db	0
   650  017554  00                 	db	0
   651  017555  00                 	db	0
   652  017556  00                 	db	0
   653  017557  00                 	db	0
   654  017558  00                 	db	0
   655  017559  00                 	db	0
   656  01755A  00                 	db	0
   657  01755B  00                 	db	0
   658  01755C  00                 	db	0
   659  01755D  00                 	db	0
   660  01755E  00                 	db	0
   661  01755F  00                 	db	0
   662  017560  00                 	db	0
   663  017561  00                 	db	0
   664  017562  00                 	db	0
   665  017563  00                 	db	0
   666  017564  00                 	db	0
   667  017565  00                 	db	0
   668  017566  00                 	db	0
   669  017567  00                 	db	0
   670  017568  00                 	db	0
   671  017569  00                 	db	0
   672  01756A  00                 	db	0
   673  01756B  00                 	db	0
   674  01756C  00                 	db	0
   675  01756D  00                 	db	0
   676  01756E  00                 	db	0
   677  01756F  00                 	db	0
   678  017570  00                 	db	0
   679  017571  00                 	db	0
   680  017572  00                 	db	0
   681  017573  00                 	db	0
   682  017574  00                 	db	0
   683  017575  00                 	db	0
   684  017576  00                 	db	0
   685  017577  00                 	db	0
   686  017578  00                 	db	0
   687  017579  00                 	db	0
   688  01757A  00                 	db	0
   689  01757B  00                 	db	0
   690  01757C  00                 	db	0
   691  01757D  00                 	db	0
   692  01757E  00                 	db	0
   693  01757F  00                 	db	0
   694  017580  00                 	db	0
   695  017581  00                 	db	0
   696  017582  00                 	db	0
   697  017583  00                 	db	0
   698  017584  00                 	db	0
   699  017585  00                 	db	0
   700  017586  00                 	db	0
   701  017587  00                 	db	0
   702  017588  00                 	db	0
   703  017589  00                 	db	0
   704  01758A  00                 	db	0
   705  01758B  00                 	db	0
   706  01758C  00                 	db	0
   707  01758D  00                 	db	0
   708  01758E  00                 	db	0
   709  01758F  00                 	db	0
   710  017590  00                 	db	0
   711  017591  00                 	db	0
   712  017592  00                 	db	0
   713  017593  00                 	db	0
   714  017594  00                 	db	0
   715  017595  00                 	db	0
   716  017596  00                 	db	0
   717  017597  00                 	db	0
   718  017598  00                 	db	0
   719  017599  00                 	db	0
   720  01759A  00                 	db	0
   721  01759B  00                 	db	0
   722  01759C  00                 	db	0
   723  01759D  00                 	db	0
   724  01759E  00                 	db	0
   725  01759F  00                 	db	0
   726  0175A0  00                 	db	0
   727  0175A1  00                 	db	0
   728  0175A2  00                 	db	0
   729  0175A3  00                 	db	0
   730  0175A4  00                 	db	0
   731  0175A5  00                 	db	0
   732  0175A6  00                 	db	0
   733  0175A7  00                 	db	0
   734  0175A8  00                 	db	0
   735  0175A9  00                 	db	0
   736  0175AA  00                 	db	0
   737  0175AB  00                 	db	0
   738  0175AC  00                 	db	0
   739  0175AD  00                 	db	0
   740  0175AE  00                 	db	0
   741  0175AF  00                 	db	0
   742  0175B0  00                 	db	0
   743  0175B1  00                 	db	0
   744  0175B2  00                 	db	0
   745  0175B3  00                 	db	0
   746  0175B4  00                 	db	0
   747  0175B5  00                 	db	0
   748  0175B6  00                 	db	0
   749  0175B7  00                 	db	0
   750  0175B8  00                 	db	0
   751  0175B9  00                 	db	0
   752  0175BA  00                 	db	0
   753  0175BB  00                 	db	0
   754  0175BC  00                 	db	0
   755  0175BD  00                 	db	0
   756  0175BE  00                 	db	0
   757  0175BF  00                 	db	0
   758  0175C0  00                 	db	0
   759  0175C1  00                 	db	0
   760  0175C2  00                 	db	0
   761  0175C3  0000               	dw	0
   762  0175C5  0000               	dw	0
   763  0175C7  0000               	dw	0
   764  0175C9  0000               	dw	0
   765  0175CB  00                 	db	0
   766  0175CC  00                 	db	0
   767  0175CD  00                 	db	0
   768  0175CE  00                 	db	0
   769  0175CF  00                 	db	0
   770  0175D0  00                 	db	0
   771  0175D1  0000               	dw	0
   772  0175D3  0000               	dw	0
   773  0175D5  0000               	dw	0
   774  0175D7  0000               	dw	0
   775  0175D9  0000               	dw	0
   776  0175DB  0000               	dw	0
   777  0175DD  00                 	db	0
   778  0175DE  00                 	db	0
   779  0175DF  00                 	db	0
   780  0175E0  00                 	db	0
   781  0175E1  00                 	db	0
   782  0175E2  00                 	db	0
   783  0175E3  00                 	db	0
   784  0175E4  00                 	db	0
   785  0175E5  00                 	db	0
   786  0175E6  00                 	db	0
   787  0175E7  0000               	dw	0
   788  0175E9  0000               	dw	0
   789  0175EB  2D                 	db	45
   790  0175EC  00                 	db	0
   791  0175ED  00                 	db	0
   792  0175EE  0000               	dw	0
   793  0175F0  0000               	dw	0
   794  0175F2  0000               	dw	0
   795  0175F4  0000               	dw	0
   796  0175F6  0000               	dw	0
   797  0175F8  0000               	dw	0
   798  0175FA  0000               	dw	0
   799  0175FC  0000               	dw	0
   800                           
   801                           ;initializer for _port_data
   802  0175FE  FF                 	db	255
   803  0175FF  00                 	db	0
   804  017600  FF                 	db	255
   805  017601  00                 	db	0
   806  017602  FF                 	db	255
   807  017603  00                 	db	0
   808  017604  FF                 	db	255
   809  017605  00                 	db	0
   810  017606  FF                 	db	255
   811  017607  00                 	db	0
   812  017608  FF                 	db	255
   813  017609  00                 	db	0
   814  01760A  FF                 	db	255
   815  01760B  00                 	db	0
   816  01760C  FF                 	db	255
   817  01760D  00                 	db	0
   818                           
   819                           	psect	mediumconst
   820  00FDB0                     __pmediumconst:
   821                           	opt callstack 0
   822  00FDB0  00                 	db	0
   823  00FDB1                     _T:
   824                           	opt callstack 0
   825  00FDB1  63                 	db	99
   826  00FDB2  6F                 	db	111
   827  00FDB3  6D                 	db	109
   828  00FDB4  6D                 	db	109
   829  00FDB5  61                 	db	97
   830  00FDB6  6E                 	db	110
   831  00FDB7  64                 	db	100
   832  00FDB8  73                 	db	115
   833  00FDB9  20                 	db	32
   834  00FDBA  31                 	db	49
   835  00FDBB  00                 	db	0
   836  00FDBC  00                 	db	0
   837  00FDBD  00                 	db	0
   838  00FDBE  00                 	db	0
   839  00FDBF  00                 	db	0
   840  00FDC0  00                 	db	0
   841  00FDC1  00                 	db	0
   842  00FDC2  00                 	db	0
   843  00FDC3  64                 	db	100
   844  00FDC4  69                 	db	105
   845  00FDC5  73                 	db	115
   846  00FDC6  70                 	db	112
   847  00FDC7  6C                 	db	108
   848  00FDC8  61                 	db	97
   849  00FDC9  79                 	db	121
   850  00FDCA  73                 	db	115
   851  00FDCB  20                 	db	32
   852  00FDCC  31                 	db	49
   853  00FDCD  00                 	db	0
   854  00FDCE  00                 	db	0
   855  00FDCF  00                 	db	0
   856  00FDD0  00                 	db	0
   857  00FDD1  00                 	db	0
   858  00FDD2  00                 	db	0
   859  00FDD3  00                 	db	0
   860  00FDD4  00                 	db	0
   861  00FDD5  63                 	db	99
   862  00FDD6  6F                 	db	111
   863  00FDD7  6D                 	db	109
   864  00FDD8  6D                 	db	109
   865  00FDD9  61                 	db	97
   866  00FDDA  6E                 	db	110
   867  00FDDB  64                 	db	100
   868  00FDDC  73                 	db	115
   869  00FDDD  20                 	db	32
   870  00FDDE  32                 	db	50
   871  00FDDF  00                 	db	0
   872  00FDE0  00                 	db	0
   873  00FDE1  00                 	db	0
   874  00FDE2  00                 	db	0
   875  00FDE3  00                 	db	0
   876  00FDE4  00                 	db	0
   877  00FDE5  00                 	db	0
   878  00FDE6  00                 	db	0
   879  00FDE7  64                 	db	100
   880  00FDE8  69                 	db	105
   881  00FDE9  73                 	db	115
   882  00FDEA  70                 	db	112
   883  00FDEB  6C                 	db	108
   884  00FDEC  61                 	db	97
   885  00FDED  79                 	db	121
   886  00FDEE  73                 	db	115
   887  00FDEF  20                 	db	32
   888  00FDF0  32                 	db	50
   889  00FDF1  00                 	db	0
   890  00FDF2  00                 	db	0
   891  00FDF3  00                 	db	0
   892  00FDF4  00                 	db	0
   893  00FDF5  00                 	db	0
   894  00FDF6  00                 	db	0
   895  00FDF7  00                 	db	0
   896  00FDF8  00                 	db	0
   897  00FDF9  63                 	db	99
   898  00FDFA  6F                 	db	111
   899  00FDFB  6D                 	db	109
   900  00FDFC  6D                 	db	109
   901  00FDFD  61                 	db	97
   902  00FDFE  6E                 	db	110
   903  00FDFF  64                 	db	100
   904  00FE00  73                 	db	115
   905  00FE01  20                 	db	32
   906  00FE02  33                 	db	51
   907  00FE03  00                 	db	0
   908  00FE04  00                 	db	0
   909  00FE05  00                 	db	0
   910  00FE06  00                 	db	0
   911  00FE07  00                 	db	0
   912  00FE08  00                 	db	0
   913  00FE09  00                 	db	0
   914  00FE0A  00                 	db	0
   915  00FE0B  64                 	db	100
   916  00FE0C  69                 	db	105
   917  00FE0D  73                 	db	115
   918  00FE0E  70                 	db	112
   919  00FE0F  6C                 	db	108
   920  00FE10  61                 	db	97
   921  00FE11  79                 	db	121
   922  00FE12  73                 	db	115
   923  00FE13  20                 	db	32
   924  00FE14  33                 	db	51
   925  00FE15  00                 	db	0
   926  00FE16  00                 	db	0
   927  00FE17  00                 	db	0
   928  00FE18  00                 	db	0
   929  00FE19  00                 	db	0
   930  00FE1A  00                 	db	0
   931  00FE1B  00                 	db	0
   932  00FE1C  00                 	db	0
   933  00FE1D  63                 	db	99
   934  00FE1E  6F                 	db	111
   935  00FE1F  6D                 	db	109
   936  00FE20  6D                 	db	109
   937  00FE21  61                 	db	97
   938  00FE22  6E                 	db	110
   939  00FE23  64                 	db	100
   940  00FE24  73                 	db	115
   941  00FE25  20                 	db	32
   942  00FE26  34                 	db	52
   943  00FE27  00                 	db	0
   944  00FE28  00                 	db	0
   945  00FE29  00                 	db	0
   946  00FE2A  00                 	db	0
   947  00FE2B  00                 	db	0
   948  00FE2C  00                 	db	0
   949  00FE2D  00                 	db	0
   950  00FE2E  00                 	db	0
   951  00FE2F  64                 	db	100
   952  00FE30  69                 	db	105
   953  00FE31  73                 	db	115
   954  00FE32  70                 	db	112
   955  00FE33  6C                 	db	108
   956  00FE34  61                 	db	97
   957  00FE35  79                 	db	121
   958  00FE36  73                 	db	115
   959  00FE37  20                 	db	32
   960  00FE38  34                 	db	52
   961  00FE39  00                 	db	0
   962  00FE3A  00                 	db	0
   963  00FE3B  00                 	db	0
   964  00FE3C  00                 	db	0
   965  00FE3D  00                 	db	0
   966  00FE3E  00                 	db	0
   967  00FE3F  00                 	db	0
   968  00FE40  00                 	db	0
   969  00FE41                     __end_of_T:
   970                           	opt callstack 0
   971  0000                     _IVTADL	set	14493
   972  0000                     _IVTADH	set	14494
   973  0000                     _IVTADU	set	14495
   974  0000                     _PIR6bits	set	14758
   975  0000                     _PIR4bits	set	14756
   976  0000                     _PIE8bits	set	14744
   977  0000                     _PIR8bits	set	14760
   978  0000                     _SCANPR	set	14839
   979  0000                     _DMA2PR	set	14836
   980  0000                     _DMA1PR	set	14835
   981  0000                     _MAINPR	set	14834
   982  0000                     _ISRPR	set	14833
   983  0000                     _PIE2bits	set	14738
   984  0000                     _PIR2bits	set	14754
   985  0000                     _PIE9bits	set	14745
   986  0000                     _PIR9bits	set	14761
   987  0000                     _PIE6bits	set	14742
   988  0000                     _PIE3bits	set	14739
   989  0000                     _PMD7	set	14791
   990  0000                     _PMD6	set	14790
   991  0000                     _PMD5	set	14789
   992  0000                     _PMD4	set	14788
   993  0000                     _PMD3	set	14787
   994  0000                     _PMD2	set	14786
   995  0000                     _PMD1	set	14785
   996  0000                     _PMD0	set	14784
   997  0000                     _OSCTUNE	set	14814
   998  0000                     _OSCFRQ	set	14815
   999  0000                     _OSCEN	set	14813
  1000  0000                     _OSCCON3	set	14811
  1001  0000                     _OSCCON1	set	14809
  1002  0000                     _IPR8bits	set	14728
  1003  0000                     _IPR9bits	set	14729
  1004  0000                     _IPR5bits	set	14725
  1005  0000                     _IPR1bits	set	14721
  1006  0000                     _IPR3bits	set	14723
  1007  0000                     _IPR6bits	set	14726
  1008  0000                     _IPR2bits	set	14722
  1009  0000                     _PIE5bits	set	14741
  1010  0000                     _PIE1bits	set	14737
  1011  0000                     _PIR5bits	set	14757
  1012  0000                     _PIR1bits	set	14753
  1013  0000                     _PLLR	set	118496
  1014  0000                     _SPI1SDIPPS	set	15071
  1015  0000                     _U1RXPPS	set	15077
  1016  0000                     _RC6PPS	set	14870
  1017  0000                     _RC5PPS	set	14869
  1018  0000                     _INT1PPS	set	15041
  1019  0000                     _RD1PPS	set	14873
  1020  0000                     _INT0PPS	set	15040
  1021  0000                     _RC3PPS	set	14867
  1022  0000                     _RB6PPS	set	14862
  1023  0000                     _SPI1SCKPPS	set	15070
  1024  0000                     _U2RXPPS	set	15080
  1025  0000                     _SLRCONF	set	14995
  1026  0000                     _SLRCONE	set	14979
  1027  0000                     _SLRCOND	set	14963
  1028  0000                     _SLRCONC	set	14947
  1029  0000                     _SLRCONB	set	14931
  1030  0000                     _SLRCONA	set	14915
  1031  0000                     _ODCOND	set	14962
  1032  0000                     _ODCONC	set	14946
  1033  0000                     _ODCONB	set	14930
  1034  0000                     _ODCONA	set	14914
  1035  0000                     _ODCONF	set	14994
  1036  0000                     _ODCONE	set	14978
  1037  0000                     _WPUC	set	14945
  1038  0000                     _WPUA	set	14913
  1039  0000                     _WPUB	set	14929
  1040  0000                     _WPUE	set	14977
  1041  0000                     _WPUF	set	14993
  1042  0000                     _WPUD	set	14961
  1043  0000                     _ANSELA	set	14912
  1044  0000                     _ANSELF	set	14992
  1045  0000                     _ANSELE	set	14976
  1046  0000                     _ANSELB	set	14928
  1047  0000                     _ANSELC	set	14944
  1048  0000                     _ANSELD	set	14960
  1049  0000                     _DMA2SSA	set	15321
  1050  0000                     _DMA1SSA	set	15353
  1051  0000                     _DMA2DSZ	set	15310
  1052  0000                     _DMA2SSZ	set	15319
  1053  0000                     _DMA2DSA	set	15312
  1054  0000                     _DMA1DSZ	set	15342
  1055  0000                     _DMA1SSZ	set	15351
  1056  0000                     _DMA1DSA	set	15344
  1057  0000                     _DMA1CON0bits	set	15356
  1058  0000                     _DMA1CON1bits	set	15357
  1059  0000                     _DMA2CON0	set	15324
  1060  0000                     _DMA2AIRQ	set	15326
  1061  0000                     _DMA2SIRQ	set	15327
  1062  0000                     _DMA2CON1	set	15325
  1063  0000                     _DMA1CON0	set	15356
  1064  0000                     _DMA1AIRQ	set	15358
  1065  0000                     _DMA1SIRQ	set	15359
  1066  0000                     _DMA1CON1	set	15357
  1067  0000                     _CLKRCON	set	15589
  1068  0000                     _CLKRCLK	set	15590
  1069  0000                     _SPI1INTFbits	set	15642
  1070  0000                     _SPI1RXB	set	15632
  1071  0000                     _SPI1TXB	set	15633
  1072  0000                     _SPI1TCNTL	set	15634
  1073  0000                     _SPI1CON0	set	15636
  1074  0000                     _SPI1CLK	set	15644
  1075  0000                     _SPI1BAUD	set	15641
  1076  0000                     _SPI1CON2	set	15638
  1077  0000                     _SPI1CON1	set	15637
  1078  0000                     _U2RXB	set	15824
  1079  0000                     _U2TXB	set	15826
  1080  0000                     _U2ERRIE	set	15842
  1081  0000                     _U2ERRIR	set	15841
  1082  0000                     _U2UIR	set	15840
  1083  0000                     _U2FIFO	set	15839
  1084  0000                     _U2BRGH	set	15838
  1085  0000                     _U2BRGL	set	15837
  1086  0000                     _U2CON2	set	15836
  1087  0000                     _U2CON1	set	15835
  1088  0000                     _U2CON0	set	15834
  1089  0000                     _U2P3L	set	15832
  1090  0000                     _U2P2L	set	15830
  1091  0000                     _U2P1L	set	15828
  1092  0000                     _U1RXB	set	15848
  1093  0000                     _U1TXB	set	15850
  1094  0000                     _U1ERRIE	set	15866
  1095  0000                     _U1ERRIR	set	15865
  1096  0000                     _U1UIR	set	15864
  1097  0000                     _U1FIFO	set	15863
  1098  0000                     _U1BRGH	set	15862
  1099  0000                     _U1BRGL	set	15861
  1100  0000                     _U1CON2	set	15860
  1101  0000                     _U1CON1	set	15859
  1102  0000                     _U1CON0	set	15858
  1103  0000                     _U1P3H	set	15857
  1104  0000                     _U1P3L	set	15856
  1105  0000                     _U1P2H	set	15855
  1106  0000                     _U1P2L	set	15854
  1107  0000                     _U1P1H	set	15853
  1108  0000                     _U1P1L	set	15852
  1109  0000                     _FVRCON	set	16065
  1110  0000                     _ADFLTRL	set	16102
  1111  0000                     _ADFLTRH	set	16103
  1112  0000                     _ADCON0bits	set	16120
  1113  0000                     _ADCON0	set	16120
  1114  0000                     _ADCLK	set	16127
  1115  0000                     _ADACT	set	16126
  1116  0000                     _ADREF	set	16125
  1117  0000                     _ADSTAT	set	16124
  1118  0000                     _ADCON3	set	16123
  1119  0000                     _ADCON2	set	16122
  1120  0000                     _ADCON1	set	16121
  1121  0000                     _ADPREH	set	16119
  1122  0000                     _ADPREL	set	16118
  1123  0000                     _ADCAP	set	16117
  1124  0000                     _ADACQH	set	16116
  1125  0000                     _ADACQL	set	16115
  1126  0000                     _ADPCH	set	16113
  1127  0000                     _ADRPT	set	16108
  1128  0000                     _ADACCU	set	16106
  1129  0000                     _ADSTPTH	set	16101
  1130  0000                     _ADSTPTL	set	16100
  1131  0000                     _ADUTHH	set	16097
  1132  0000                     _ADUTHL	set	16096
  1133  0000                     _ADLTHH	set	16095
  1134  0000                     _ADLTHL	set	16094
  1135  0000                     _CCPTMRS1bits	set	16223
  1136  0000                     _T3CONbits	set	16294
  1137  0000                     _T3CON	set	16294
  1138  0000                     _TMR3L	set	16292
  1139  0000                     _TMR3H	set	16293
  1140  0000                     _T3CLK	set	16297
  1141  0000                     _T3GATE	set	16296
  1142  0000                     _T3GCON	set	16295
  1143  0000                     _PORTFbits	set	16335
  1144  0000                     _LATCbits	set	16316
  1145  0000                     _LATDbits	set	16317
  1146  0000                     _PORTBbits	set	16331
  1147  0000                     _T2CON	set	16300
  1148  0000                     _T2TMR	set	16298
  1149  0000                     _T2PR	set	16299
  1150  0000                     _T2RST	set	16303
  1151  0000                     _T2HLT	set	16301
  1152  0000                     _T2CLKCON	set	16302
  1153  0000                     _PWM8DCL	set	16224
  1154  0000                     _PWM8DCH	set	16225
  1155  0000                     _PWM8CON	set	16226
  1156  0000                     _LATEbits	set	16318
  1157  0000                     _T5CONbits	set	16282
  1158  0000                     _T5CON	set	16282
  1159  0000                     _TMR5L	set	16280
  1160  0000                     _TMR5H	set	16281
  1161  0000                     _T5CLK	set	16285
  1162  0000                     _T5GATE	set	16284
  1163  0000                     _T5GCON	set	16283
  1164  0000                     _T6CON	set	16276
  1165  0000                     _T6TMR	set	16274
  1166  0000                     _T6PR	set	16275
  1167  0000                     _T6RST	set	16279
  1168  0000                     _T6HLT	set	16277
  1169  0000                     _T6CLKCON	set	16278
  1170  0000                     _TRISD	set	16325
  1171  0000                     _TRISC	set	16324
  1172  0000                     _TRISB	set	16323
  1173  0000                     _TRISA	set	16322
  1174  0000                     _TRISF	set	16327
  1175  0000                     _TRISE	set	16326
  1176  0000                     _LATC	set	16316
  1177  0000                     _LATB	set	16315
  1178  0000                     _LATF	set	16319
  1179  0000                     _LATA	set	16314
  1180  0000                     _LATD	set	16317
  1181  0000                     _LATE	set	16318
  1182  0000                     _IVTLOCKbits	set	16340
  1183  0000                     _IVTLOCK	set	16340
  1184  0000                     _INTCON0bits	set	16338
  1185  0000                     _GIE	set	130711
  1186  00FE41                     
  1187                           ; BSR set to: 57
  1188  00FE41  20                 	db	32
  1189  00FE42  4D                 	db	77	;'M'
  1190  00FE43  65                 	db	101	;'e'
  1191  00FE44  73                 	db	115	;'s'
  1192  00FE45  67                 	db	103	;'g'
  1193  00FE46  20                 	db	32
  1194  00FE47  25                 	db	37
  1195  00FE48  64                 	db	100	;'d'
  1196  00FE49  20                 	db	32
  1197  00FE4A  53                 	db	83	;'S'
  1198  00FE4B  74                 	db	116	;'t'
  1199  00FE4C  61                 	db	97	;'a'
  1200  00FE4D  63                 	db	99	;'c'
  1201  00FE4E  6B                 	db	107	;'k'
  1202  00FE4F  20                 	db	32
  1203  00FE50  25                 	db	37
  1204  00FE51  64                 	db	100	;'d'
  1205  00FE52  20                 	db	32
  1206  00FE53  20                 	db	32
  1207  00FE54  20                 	db	32
  1208  00FE55  20                 	db	32
  1209  00FE56  20                 	db	32
  1210  00FE57  20                 	db	32
  1211  00FE58  00                 	db	0
  1212  00FE59                     STR_39:
  1213                           
  1214                           ; BSR set to: 57
  1215  00FE59  20                 	db	32
  1216  00FE5A  20                 	db	32
  1217  00FE5B  20                 	db	32
  1218  00FE5C  20                 	db	32
  1219  00FE5D  20                 	db	32
  1220  00FE5E  20                 	db	32
  1221  00FE5F  20                 	db	32
  1222  00FE60  20                 	db	32
  1223  00FE61  20                 	db	32
  1224  00FE62  20                 	db	32
  1225  00FE63  20                 	db	32
  1226  00FE64  20                 	db	32
  1227  00FE65  20                 	db	32
  1228  00FE66  20                 	db	32
  1229  00FE67  20                 	db	32
  1230  00FE68  20                 	db	32
  1231  00FE69  20                 	db	32
  1232  00FE6A  20                 	db	32
  1233  00FE6B  00                 	db	0
  1234  00FE6C                     STR_29:
  1235                           
  1236                           ; BSR set to: 57
  1237  00FE6C  48                 	db	72	;'H'
  1238  00FE6D  45                 	db	69	;'E'
  1239  00FE6E  4C                 	db	76	;'L'
  1240  00FE6F  50                 	db	80	;'P'
  1241  00FE70  20                 	db	32
  1242  00FE71  25                 	db	37
  1243  00FE72  73                 	db	115	;'s'
  1244  00FE73  20                 	db	32
  1245  00FE74  20                 	db	32
  1246  00FE75  20                 	db	32
  1247  00FE76  20                 	db	32
  1248  00FE77  20                 	db	32
  1249  00FE78  20                 	db	32
  1250  00FE79  20                 	db	32
  1251  00FE7A  20                 	db	32
  1252  00FE7B  20                 	db	32
  1253  00FE7C  20                 	db	32
  1254  00FE7D  20                 	db	32
  1255  00FE7E  00                 	db	0
  1256  00FE7F                     
  1257                           ; BSR set to: 57
  1258  00FE7F  44                 	db	68	;'D'
  1259  00FE80  49                 	db	73	;'I'
  1260  00FE81  53                 	db	83	;'S'
  1261  00FE82  50                 	db	80	;'P'
  1262  00FE83  4C                 	db	76	;'L'
  1263  00FE84  41                 	db	65	;'A'
  1264  00FE85  59                 	db	89	;'Y'
  1265  00FE86  20                 	db	32
  1266  00FE87  25                 	db	37
  1267  00FE88  73                 	db	115	;'s'
  1268  00FE89  20                 	db	32
  1269  00FE8A  20                 	db	32
  1270  00FE8B  20                 	db	32
  1271  00FE8C  20                 	db	32
  1272  00FE8D  20                 	db	32
  1273  00FE8E  20                 	db	32
  1274  00FE8F  20                 	db	32
  1275  00FE90  20                 	db	32
  1276  00FE91  00                 	db	0
  1277  00FE92                     STR_20:
  1278                           
  1279                           ; BSR set to: 57
  1280  00FE92  53                 	db	83	;'S'
  1281  00FE93  4F                 	db	79	;'O'
  1282  00FE94  43                 	db	67	;'C'
  1283  00FE95  20                 	db	32
  1284  00FE96  25                 	db	37
  1285  00FE97  64                 	db	100	;'d'
  1286  00FE98  20                 	db	32
  1287  00FE99  52                 	db	82	;'R'
  1288  00FE9A  55                 	db	85	;'U'
  1289  00FE9B  4E                 	db	78	;'N'
  1290  00FE9C  20                 	db	32
  1291  00FE9D  25                 	db	37
  1292  00FE9E  64                 	db	100	;'d'
  1293  00FE9F  20                 	db	32
  1294  00FEA0  20                 	db	32
  1295  00FEA1  20                 	db	32
  1296  00FEA2  20                 	db	32
  1297  00FEA3  20                 	db	32
  1298  00FEA4  00                 	db	0
  1299  00FEA5                     STR_19:
  1300                           
  1301                           ; BSR set to: 57
  1302  00FEA5  42                 	db	66	;'B'
  1303  00FEA6  41                 	db	65	;'A'
  1304  00FEA7  54                 	db	84	;'T'
  1305  00FEA8  20                 	db	32
  1306  00FEA9  41                 	db	65	;'A'
  1307  00FEAA  48                 	db	72	;'H'
  1308  00FEAB  20                 	db	32
  1309  00FEAC  20                 	db	32
  1310  00FEAD  20                 	db	32
  1311  00FEAE  25                 	db	37
  1312  00FEAF  33                 	db	51	;'3'
  1313  00FEB0  2E                 	db	46
  1314  00FEB1  32                 	db	50	;'2'
  1315  00FEB2  66                 	db	102	;'f'
  1316  00FEB3  20                 	db	32
  1317  00FEB4  20                 	db	32
  1318  00FEB5  20                 	db	32
  1319  00FEB6  20                 	db	32
  1320  00FEB7  00                 	db	0
  1321  00FEB8                     STR_12:
  1322                           
  1323                           ; BSR set to: 57
  1324  00FEB8  50                 	db	80	;'P'
  1325  00FEB9  56                 	db	86	;'V'
  1326  00FEBA  20                 	db	32
  1327  00FEBB  20                 	db	32
  1328  00FEBC  20                 	db	32
  1329  00FEBD  50                 	db	80	;'P'
  1330  00FEBE  57                 	db	87	;'W'
  1331  00FEBF  52                 	db	82	;'R'
  1332  00FEC0  20                 	db	32
  1333  00FEC1  25                 	db	37
  1334  00FEC2  33                 	db	51	;'3'
  1335  00FEC3  2E                 	db	46
  1336  00FEC4  32                 	db	50	;'2'
  1337  00FEC5  66                 	db	102	;'f'
  1338  00FEC6  20                 	db	32
  1339  00FEC7  20                 	db	32
  1340  00FEC8  20                 	db	32
  1341  00FEC9  20                 	db	32
  1342  00FECA  00                 	db	0
  1343  00FECB                     STR_18:
  1344                           
  1345                           ; BSR set to: 57
  1346  00FECB  42                 	db	66	;'B'
  1347  00FECC  41                 	db	65	;'A'
  1348  00FECD  54                 	db	84	;'T'
  1349  00FECE  20                 	db	32
  1350  00FECF  20                 	db	32
  1351  00FED0  50                 	db	80	;'P'
  1352  00FED1  57                 	db	87	;'W'
  1353  00FED2  52                 	db	82	;'R'
  1354  00FED3  20                 	db	32
  1355  00FED4  25                 	db	37
  1356  00FED5  33                 	db	51	;'3'
  1357  00FED6  2E                 	db	46
  1358  00FED7  32                 	db	50	;'2'
  1359  00FED8  66                 	db	102	;'f'
  1360  00FED9  20                 	db	32
  1361  00FEDA  20                 	db	32
  1362  00FEDB  20                 	db	32
  1363  00FEDC  20                 	db	32
  1364  00FEDD  00                 	db	0
  1365  00FEDE                     STR_14:
  1366                           
  1367                           ; BSR set to: 57
  1368  00FEDE  49                 	db	73	;'I'
  1369  00FEDF  4E                 	db	78	;'N'
  1370  00FEE0  56                 	db	86	;'V'
  1371  00FEE1  20                 	db	32
  1372  00FEE2  20                 	db	32
  1373  00FEE3  50                 	db	80	;'P'
  1374  00FEE4  57                 	db	87	;'W'
  1375  00FEE5  52                 	db	82	;'R'
  1376  00FEE6  20                 	db	32
  1377  00FEE7  25                 	db	37
  1378  00FEE8  33                 	db	51	;'3'
  1379  00FEE9  2E                 	db	46
  1380  00FEEA  32                 	db	50	;'2'
  1381  00FEEB  66                 	db	102	;'f'
  1382  00FEEC  20                 	db	32
  1383  00FEED  20                 	db	32
  1384  00FEEE  20                 	db	32
  1385  00FEEF  20                 	db	32
  1386  00FEF0  00                 	db	0
  1387  00FEF1                     STR_13:
  1388                           
  1389                           ; BSR set to: 57
  1390  00FEF1  4C                 	db	76	;'L'
  1391  00FEF2  4F                 	db	79	;'O'
  1392  00FEF3  41                 	db	65	;'A'
  1393  00FEF4  44                 	db	68	;'D'
  1394  00FEF5  20                 	db	32
  1395  00FEF6  50                 	db	80	;'P'
  1396  00FEF7  57                 	db	87	;'W'
  1397  00FEF8  52                 	db	82	;'R'
  1398  00FEF9  20                 	db	32
  1399  00FEFA  25                 	db	37
  1400  00FEFB  33                 	db	51	;'3'
  1401  00FEFC  2E                 	db	46
  1402  00FEFD  32                 	db	50	;'2'
  1403  00FEFE  66                 	db	102	;'f'
  1404  00FEFF  20                 	db	32
  1405  00FF00  20                 	db	32
  1406  00FF01  20                 	db	32
  1407  00FF02  20                 	db	32
  1408  00FF03  00                 	db	0
  1409  00FF04                     STR_16:
  1410                           
  1411                           ; BSR set to: 57
  1412  00FF04  42                 	db	66	;'B'
  1413  00FF05  56                 	db	86	;'V'
  1414  00FF06  20                 	db	32
  1415  00FF07  25                 	db	37
  1416  00FF08  32                 	db	50	;'2'
  1417  00FF09  2E                 	db	46
  1418  00FF0A  32                 	db	50	;'2'
  1419  00FF0B  66                 	db	102	;'f'
  1420  00FF0C  20                 	db	32
  1421  00FF0D  42                 	db	66	;'B'
  1422  00FF0E  41                 	db	65	;'A'
  1423  00FF0F  20                 	db	32
  1424  00FF10  25                 	db	37
  1425  00FF11  32                 	db	50	;'2'
  1426  00FF12  2E                 	db	46
  1427  00FF13  32                 	db	50	;'2'
  1428  00FF14  66                 	db	102	;'f'
  1429  00FF15  20                 	db	32
  1430  00FF16  00                 	db	0
  1431  00FF17                     STR_17:
  1432                           
  1433                           ; BSR set to: 57
  1434  00FF17  43                 	db	67	;'C'
  1435  00FF18  56                 	db	86	;'V'
  1436  00FF19  20                 	db	32
  1437  00FF1A  25                 	db	37
  1438  00FF1B  32                 	db	50	;'2'
  1439  00FF1C  2E                 	db	46
  1440  00FF1D  32                 	db	50	;'2'
  1441  00FF1E  66                 	db	102	;'f'
  1442  00FF1F  20                 	db	32
  1443  00FF20  4C                 	db	76	;'L'
  1444  00FF21  41                 	db	65	;'A'
  1445  00FF22  20                 	db	32
  1446  00FF23  25                 	db	37
  1447  00FF24  32                 	db	50	;'2'
  1448  00FF25  2E                 	db	46
  1449  00FF26  32                 	db	50	;'2'
  1450  00FF27  66                 	db	102	;'f'
  1451  00FF28  20                 	db	32
  1452  00FF29  00                 	db	0
  1453  00FF2A                     STR_15:
  1454                           
  1455                           ; BSR set to: 57
  1456  00FF2A  50                 	db	80	;'P'
  1457  00FF2B  56                 	db	86	;'V'
  1458  00FF2C  20                 	db	32
  1459  00FF2D  25                 	db	37
  1460  00FF2E  32                 	db	50	;'2'
  1461  00FF2F  2E                 	db	46
  1462  00FF30  32                 	db	50	;'2'
  1463  00FF31  66                 	db	102	;'f'
  1464  00FF32  20                 	db	32
  1465  00FF33  50                 	db	80	;'P'
  1466  00FF34  41                 	db	65	;'A'
  1467  00FF35  20                 	db	32
  1468  00FF36  25                 	db	37
  1469  00FF37  32                 	db	50	;'2'
  1470  00FF38  2E                 	db	46
  1471  00FF39  32                 	db	50	;'2'
  1472  00FF3A  66                 	db	102	;'f'
  1473  00FF3B  20                 	db	32
  1474  00FF3C  00                 	db	0
  1475  00FF3D                     STR_8:
  1476                           
  1477                           ; BSR set to: 57
  1478  00FF3D  20                 	db	32
  1479  00FF3E  56                 	db	86	;'V'
  1480  00FF3F  54                 	db	84	;'T'
  1481  00FF40  45                 	db	69	;'E'
  1482  00FF41  52                 	db	82	;'R'
  1483  00FF42  4D                 	db	77	;'M'
  1484  00FF43  20                 	db	32
  1485  00FF44  23                 	db	35
  1486  00FF45  32                 	db	50	;'2'
  1487  00FF46  20                 	db	32
  1488  00FF47  20                 	db	32
  1489  00FF48  20                 	db	32
  1490  00FF49  20                 	db	32
  1491  00FF4A  20                 	db	32
  1492  00FF4B  20                 	db	32
  1493  00FF4C  20                 	db	32
  1494  00FF4D  00                 	db	0
  1495  00FF4E                     STR_4:
  1496                           
  1497                           ; BSR set to: 57
  1498  00FF4E  20                 	db	32
  1499  00FF4F  4E                 	db	78	;'N'
  1500  00FF50  53                 	db	83	;'S'
  1501  00FF51  41                 	db	65	;'A'
  1502  00FF52  53                 	db	83	;'S'
  1503  00FF53  50                 	db	80	;'P'
  1504  00FF54  4F                 	db	79	;'O'
  1505  00FF55  4F                 	db	79	;'O'
  1506  00FF56  4B                 	db	75	;'K'
  1507  00FF57  20                 	db	32
  1508  00FF58  20                 	db	32
  1509  00FF59  20                 	db	32
  1510  00FF5A  20                 	db	32
  1511  00FF5B  20                 	db	32
  1512  00FF5C  20                 	db	32
  1513  00FF5D  20                 	db	32
  1514  00FF5E  00                 	db	0
  1515  00FF5F                     STR_1:
  1516                           
  1517                           ; BSR set to: 57
  1518  00FF5F  20                 	db	32
  1519  00FF60  4D                 	db	77	;'M'
  1520  00FF61  42                 	db	66	;'B'
  1521  00FF62  4D                 	db	77	;'M'
  1522  00FF63  43                 	db	67	;'C'
  1523  00FF64  20                 	db	32
  1524  00FF65  53                 	db	83	;'S'
  1525  00FF66  4F                 	db	79	;'O'
  1526  00FF67  4C                 	db	76	;'L'
  1527  00FF68  41                 	db	65	;'A'
  1528  00FF69  52                 	db	82	;'R'
  1529  00FF6A  4D                 	db	77	;'M'
  1530  00FF6B  4F                 	db	79	;'O'
  1531  00FF6C  4E                 	db	78	;'N'
  1532  00FF6D  20                 	db	32
  1533  00FF6E  20                 	db	32
  1534  00FF6F  00                 	db	0
  1535  00FF70                     STR_5:
  1536                           
  1537                           ; BSR set to: 57
  1538  00FF70  20                 	db	32
  1539  00FF71  53                 	db	83	;'S'
  1540  00FF72  45                 	db	69	;'E'
  1541  00FF73  51                 	db	81	;'Q'
  1542  00FF74  55                 	db	85	;'U'
  1543  00FF75  45                 	db	69	;'E'
  1544  00FF76  4E                 	db	78	;'N'
  1545  00FF77  43                 	db	67	;'C'
  1546  00FF78  45                 	db	69	;'E'
  1547  00FF79  20                 	db	32
  1548  00FF7A  54                 	db	84	;'T'
  1549  00FF7B  45                 	db	69	;'E'
  1550  00FF7C  53                 	db	83	;'S'
  1551  00FF7D  54                 	db	84	;'T'
  1552  00FF7E  20                 	db	32
  1553  00FF7F  20                 	db	32
  1554  00FF80  00                 	db	0
  1555  00FF81                     STR_11:
  1556                           
  1557                           ; BSR set to: 57
  1558  00FF81  25                 	db	37
  1559  00FF82  64                 	db	100	;'d'
  1560  00FF83  20                 	db	32
  1561  00FF84  25                 	db	37
  1562  00FF85  32                 	db	50	;'2'
  1563  00FF86  2E                 	db	46
  1564  00FF87  34                 	db	52	;'4'
  1565  00FF88  66                 	db	102	;'f'
  1566  00FF89  2C                 	db	44
  1567  00FF8A  20                 	db	32
  1568  00FF8B  25                 	db	37
  1569  00FF8C  64                 	db	100	;'d'
  1570  00FF8D  20                 	db	32
  1571  00FF8E  20                 	db	32
  1572  00FF8F  20                 	db	32
  1573  00FF90  23                 	db	35
  1574  00FF91  00                 	db	0
  1575  00FF92                     STR_9:
  1576                           
  1577                           ; BSR set to: 57
  1578  00FF92  25                 	db	37
  1579  00FF93  64                 	db	100	;'d'
  1580  00FF94  20                 	db	32
  1581  00FF95  25                 	db	37
  1582  00FF96  32                 	db	50	;'2'
  1583  00FF97  2E                 	db	46
  1584  00FF98  34                 	db	52	;'4'
  1585  00FF99  66                 	db	102	;'f'
  1586  00FF9A  20                 	db	32
  1587  00FF9B  20                 	db	32
  1588  00FF9C  20                 	db	32
  1589  00FF9D  25                 	db	37
  1590  00FF9E  64                 	db	100	;'d'
  1591  00FF9F  20                 	db	32
  1592  00FFA0  20                 	db	32
  1593  00FFA1  00                 	db	0
  1594  00FFA2                     STR_33:
  1595                           
  1596                           ; BSR set to: 57
  1597  00FFA2  76                 	db	118	;'v'
  1598  00FFA3  74                 	db	116	;'t'
  1599  00FFA4  65                 	db	101	;'e'
  1600  00FFA5  72                 	db	114	;'r'
  1601  00FFA6  6D                 	db	109	;'m'
  1602  00FFA7  20                 	db	32
  1603  00FFA8  25                 	db	37
  1604  00FFA9  78                 	db	120	;'x'
  1605  00FFAA  3A                 	db	58	;':'
  1606  00FFAB  25                 	db	37
  1607  00FFAC  78                 	db	120	;'x'
  1608  00FFAD  20                 	db	32
  1609  00FFAE  20                 	db	32
  1610  00FFAF  20                 	db	32
  1611  00FFB0  00                 	db	0
  1612  00FFB1                     STR_2:
  1613                           
  1614                           ; BSR set to: 57
  1615  00FFB1  20                 	db	32
  1616  00FFB2  56                 	db	86	;'V'
  1617  00FFB3  65                 	db	101	;'e'
  1618  00FFB4  72                 	db	114	;'r'
  1619  00FFB5  73                 	db	115	;'s'
  1620  00FFB6  69                 	db	105	;'i'
  1621  00FFB7  6F                 	db	111	;'o'
  1622  00FFB8  6E                 	db	110	;'n'
  1623  00FFB9  20                 	db	32
  1624  00FFBA  25                 	db	37
  1625  00FFBB  73                 	db	115	;'s'
  1626  00FFBC  20                 	db	32
  1627  00FFBD  20                 	db	32
  1628  00FFBE  20                 	db	32
  1629  00FFBF  00                 	db	0
  1630  00FFC0                     STR_27:
  1631                           
  1632                           ; BSR set to: 57
  1633  00FFC0  44                 	db	68	;'D'
  1634  00FFC1  65                 	db	101	;'e'
  1635  00FFC2  63                 	db	99	;'c'
  1636  00FFC3  20                 	db	32
  1637  00FFC4  20                 	db	32
  1638  00FFC5  33                 	db	51	;'3'
  1639  00FFC6  20                 	db	32
  1640  00FFC7  32                 	db	50	;'2'
  1641  00FFC8  30                 	db	48	;'0'
  1642  00FFC9  31                 	db	49	;'1'
  1643  00FFCA  39                 	db	57	;'9'
  1644  00FFCB  00                 	db	0
  1645  00FFCC                     STR_31:
  1646                           
  1647                           ; BSR set to: 57
  1648  00FFCC  25                 	db	37
  1649  00FFCD  73                 	db	115	;'s'
  1650  00FFCE  20                 	db	32
  1651  00FFCF  20                 	db	32
  1652  00FFD0  20                 	db	32
  1653  00FFD1  20                 	db	32
  1654  00FFD2  20                 	db	32
  1655  00FFD3  20                 	db	32
  1656  00FFD4  20                 	db	32
  1657  00FFD5  00                 	db	0
  1658  00FFD6                     STR_28:
  1659                           
  1660                           ; BSR set to: 57
  1661  00FFD6  31                 	db	49	;'1'
  1662  00FFD7  39                 	db	57	;'9'
  1663  00FFD8  3A                 	db	58	;':'
  1664  00FFD9  35                 	db	53	;'5'
  1665  00FFDA  35                 	db	53	;'5'
  1666  00FFDB  3A                 	db	58	;':'
  1667  00FFDC  32                 	db	50	;'2'
  1668  00FFDD  39                 	db	57	;'9'
  1669  00FFDE  00                 	db	0
  1670  00FFDF                     STR_3:
  1671                           
  1672                           ; BSR set to: 57
  1673  00FFDF  30                 	db	48	;'0'
  1674  00FFE0  2E                 	db	46
  1675  00FFE1  39                 	db	57	;'9'
  1676  00FFE2  39                 	db	57	;'9'
  1677  00FFE3  37                 	db	55	;'7'
  1678  00FFE4  00                 	db	0
  1679  00FFE5                     STR_46:
  1680                           
  1681                           ; BSR set to: 57
  1682  00FFE5  49                 	db	73	;'I'
  1683  00FFE6  4E                 	db	78	;'N'
  1684  00FFE7  46                 	db	70	;'F'
  1685  00FFE8  00                 	db	0
  1686  00FFE9                     STR_50:
  1687                           
  1688                           ; BSR set to: 57
  1689  00FFE9  4E                 	db	78	;'N'
  1690  00FFEA  41                 	db	65	;'A'
  1691  00FFEB  4E                 	db	78	;'N'
  1692  00FFEC  00                 	db	0
  1693  00FFED                     STR_47:
  1694                           
  1695                           ; BSR set to: 57
  1696  00FFED  69                 	db	105	;'i'
  1697  00FFEE  6E                 	db	110	;'n'
  1698  00FFEF  66                 	db	102	;'f'
  1699  00FFF0  00                 	db	0
  1700  00FFF1                     STR_51:
  1701                           
  1702                           ; BSR set to: 57
  1703  00FFF1  6E                 	db	110	;'n'
  1704  00FFF2  61                 	db	97	;'a'
  1705  00FFF3  6E                 	db	110	;'n'
  1706  00FFF4  00                 	db	0
  1707  00FFF5                     STR_54:
  1708                           
  1709                           ; BSR set to: 57
  1710  00FFF5  6C                 	db	108	;'l'
  1711  00FFF6  66                 	db	102	;'f'
  1712  00FFF7  00                 	db	0
  1713  00FFF8                     STR_25:
  1714                           
  1715                           ; BSR set to: 57
  1716  00FFF8  25                 	db	37
  1717  00FFF9  63                 	db	99	;'c'
  1718  00FFFA  00                 	db	0
  1719  00FFFB                     STR_24:
  1720                           
  1721                           ; BSR set to: 57
  1722  00FFFB  25                 	db	37
  1723  00FFFC  73                 	db	115	;'s'
  1724  00FFFD  00                 	db	0
  1725  0000                     
  1726                           ; #config settings
  1727  00FFFE  00                 	db	0	; dummy byte at the end
  1728  0000                     
  1729                           	psect	cinit
  1730  0171C6                     __pcinit:
  1731                           	opt callstack 0
  1732  0171C6                     start_initialization:
  1733                           	opt callstack 0
  1734  0171C6                     __initialization:
  1735                           	opt callstack 0
  1736                           
  1737                           ; Initialize objects allocated to BANK2 (204 bytes)
  1738                           ; load TBLPTR registers with __pidataBANK2
  1739  0171C6  0E42               	movlw	low __pidataBANK2
  1740  0171C8  6EF6               	movwf	tblptrl,c
  1741  0171CA  0E75               	movlw	high __pidataBANK2
  1742  0171CC  6EF7               	movwf	tblptrh,c
  1743  0171CE  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1744  0171D0  6EF8               	movwf	tblptru,c
  1745  0171D2  EE00  F200         	lfsr	0,__pdataBANK2
  1746  0171D6  EE20 F0CC          	lfsr	2,204
  1747  0171DA                     copy_data0:
  1748  0171DA  0009               	tblrd		*+
  1749  0171DC  006F FFD7 FFEE     	movff	tablat,postinc0
  1750  0171E2  50DD               	movf	postdec2,w,c
  1751  0171E4  50D9               	movf	fsr2l,w,c
  1752  0171E6  E1F9               	bnz	copy_data0
  1753                           
  1754                           ; Initialize objects allocated to BANK1 (141 bytes)
  1755                           ; load TBLPTR registers with __pidataBANK1
  1756  0171E8  0E74               	movlw	low __pidataBANK1
  1757  0171EA  6EF6               	movwf	tblptrl,c
  1758  0171EC  0E7C               	movlw	high __pidataBANK1
  1759  0171EE  6EF7               	movwf	tblptrh,c
  1760  0171F0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1761  0171F2  6EF8               	movwf	tblptru,c
  1762  0171F4  EE00  F100         	lfsr	0,__pdataBANK1
  1763  0171F8  EE20 F08D          	lfsr	2,141
  1764  0171FC                     copy_data1:
  1765  0171FC  0009               	tblrd		*+
  1766  0171FE  006F FFD7 FFEE     	movff	tablat,postinc0
  1767  017204  50DD               	movf	postdec2,w,c
  1768  017206  50D9               	movf	fsr2l,w,c
  1769  017208  E1F9               	bnz	copy_data1
  1770                           
  1771                           ; Initialize objects allocated to BANK0 (54 bytes)
  1772                           ; load TBLPTR registers with __pidataBANK0
  1773  01720A  0E46               	movlw	low __pidataBANK0
  1774  01720C  6EF6               	movwf	tblptrl,c
  1775  01720E  0E88               	movlw	high __pidataBANK0
  1776  017210  6EF7               	movwf	tblptrh,c
  1777  017212  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1778  017214  6EF8               	movwf	tblptru,c
  1779  017216  EE00  F0C3         	lfsr	0,__pdataBANK0
  1780  01721A  EE20 F036          	lfsr	2,54
  1781  01721E                     copy_data2:
  1782  01721E  0009               	tblrd		*+
  1783  017220  006F FFD7 FFEE     	movff	tablat,postinc0
  1784  017226  50DD               	movf	postdec2,w,c
  1785  017228  50D9               	movf	fsr2l,w,c
  1786  01722A  E1F9               	bnz	copy_data2
  1787                           
  1788                           ; Clear objects allocated to BIGRAM (290 bytes)
  1789  01722C  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  1790  017230  EE20 F122          	lfsr	2,290
  1791  017234                     clear_0:
  1792  017234  6AEE               	clrf	postinc0,c
  1793  017236  50DD               	movf	postdec2,w,c
  1794  017238  50D9               	movf	fsr2l,w,c
  1795  01723A  E1FC               	bnz	clear_0
  1796  01723C  50DA               	movf	fsr2h,w,c
  1797  01723E  E1FA               	bnz	clear_0
  1798                           
  1799                           ; Clear objects allocated to BANK6 (255 bytes)
  1800  017240  EE01  F200         	lfsr	0,__pbssBANK6
  1801  017244  EE20 F0FF          	lfsr	2,255
  1802  017248                     clear_1:
  1803  017248  6AEE               	clrf	postinc0,c
  1804  01724A  50DD               	movf	postdec2,w,c
  1805  01724C  50D9               	movf	fsr2l,w,c
  1806  01724E  E1FC               	bnz	clear_1
  1807  017250  50DA               	movf	fsr2h,w,c
  1808  017252  E1FA               	bnz	clear_1
  1809                           
  1810                           ; Clear objects allocated to BANK5 (255 bytes)
  1811  017254  EE01  F100         	lfsr	0,__pbssBANK5
  1812  017258  EE20 F0FF          	lfsr	2,255
  1813  01725C                     clear_2:
  1814  01725C  6AEE               	clrf	postinc0,c
  1815  01725E  50DD               	movf	postdec2,w,c
  1816  017260  50D9               	movf	fsr2l,w,c
  1817  017262  E1FC               	bnz	clear_2
  1818  017264  50DA               	movf	fsr2h,w,c
  1819  017266  E1FA               	bnz	clear_2
  1820                           
  1821                           ; Clear objects allocated to BANK4 (134 bytes)
  1822  017268  EE01  F000         	lfsr	0,__pbssBANK4
  1823  01726C  0E86               	movlw	134
  1824  01726E                     clear_3:
  1825  01726E  6AEE               	clrf	postinc0,c
  1826  017270  06E8               	decf	wreg,f,c
  1827  017272  E1FD               	bnz	clear_3
  1828                           
  1829                           ; Clear objects allocated to BANK3 (212 bytes)
  1830  017274  EE00  F300         	lfsr	0,__pbssBANK3
  1831  017278  0ED4               	movlw	212
  1832  01727A                     clear_4:
  1833  01727A  6AEE               	clrf	postinc0,c
  1834  01727C  06E8               	decf	wreg,f,c
  1835  01727E  E1FD               	bnz	clear_4
  1836                           
  1837                           ; Clear objects allocated to BANK1 (112 bytes)
  1838  017280  EE00  F18D         	lfsr	0,__pbssBANK1
  1839  017284  0E70               	movlw	112
  1840  017286                     clear_5:
  1841  017286  6AEE               	clrf	postinc0,c
  1842  017288  06E8               	decf	wreg,f,c
  1843  01728A  E1FD               	bnz	clear_5
  1844                           
  1845                           ; Clear objects allocated to BANK0 (99 bytes)
  1846  01728C  EE00  F060         	lfsr	0,__pbssBANK0
  1847  017290  0E63               	movlw	99
  1848  017292                     clear_6:
  1849  017292  6AEE               	clrf	postinc0,c
  1850  017294  06E8               	decf	wreg,f,c
  1851  017296  E1FD               	bnz	clear_6
  1852                           
  1853                           ; Clear objects allocated to COMRAM (36 bytes)
  1854  017298  EE00  F001         	lfsr	0,__pbssCOMRAM
  1855  01729C  0E24               	movlw	36
  1856  01729E                     clear_7:
  1857  01729E  6AEE               	clrf	postinc0,c
  1858  0172A0  06E8               	decf	wreg,f,c
  1859  0172A2  E1FD               	bnz	clear_7
  1860                           
  1861                           ;
  1862                           ; Setup IVTBASE
  1863                           ;
  1864  0172A4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1865  0172A6  6ED5               	movwf	213,c
  1866  0172A8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1867  0172AA  6ED6               	movwf	214,c
  1868  0172AC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1869  0172AE  6ED7               	movwf	215,c
  1870  0172B0                     end_of_initialization:
  1871                           	opt callstack 0
  1872  0172B0                     __end_of__initialization:
  1873                           	opt callstack 0
  1874  0172B0  0100               	movlb	0
  1875  0172B2  EFC1  F08E         	goto	_main	;jump to C main() function
  1876                           
  1877                           	psect	bssCOMRAM
  1878  000001                     __pbssCOMRAM:
  1879                           	opt callstack 0
  1880  000001                     _UART2_RxInterruptHandler:
  1881                           	opt callstack 0
  1882  000001                     	ds	3
  1883  000004                     _INT1_InterruptHandler:
  1884                           	opt callstack 0
  1885  000004                     	ds	3
  1886  000007                     _INT0_InterruptHandler:
  1887                           	opt callstack 0
  1888  000007                     	ds	3
  1889  00000A                     _width:
  1890                           	opt callstack 0
  1891  00000A                     	ds	2
  1892  00000C                     _prec:
  1893                           	opt callstack 0
  1894  00000C                     	ds	2
  1895  00000E                     _flags:
  1896                           	opt callstack 0
  1897  00000E                     	ds	2
  1898  000010                     TMR3_ISR@CountCallBack:
  1899                           	opt callstack 0
  1900  000010                     	ds	2
  1901  000012                     _timer3ReloadVal:
  1902                           	opt callstack 0
  1903  000012                     	ds	2
  1904  000014                     TMR5_ISR@CountCallBack:
  1905                           	opt callstack 0
  1906  000014                     	ds	2
  1907  000016                     _timer5ReloadVal:
  1908                           	opt callstack 0
  1909  000016                     	ds	2
  1910  000018                     _mode_sw:
  1911                           	opt callstack 0
  1912  000018                     	ds	1
  1913  000019                     _uart2RxCount:
  1914                           	opt callstack 0
  1915  000019                     	ds	1
  1916  00001A                     _uart2RxTail:
  1917                           	opt callstack 0
  1918  00001A                     	ds	1
  1919  00001B                     _uart2RxHead:
  1920                           	opt callstack 0
  1921  00001B                     	ds	1
  1922  00001C                     _uart2TxBufferRemaining:
  1923                           	opt callstack 0
  1924  00001C                     	ds	1
  1925  00001D                     _uart2TxTail:
  1926                           	opt callstack 0
  1927  00001D                     	ds	1
  1928  00001E                     _uart2TxHead:
  1929                           	opt callstack 0
  1930  00001E                     	ds	1
  1931  00001F                     _uart1RxCount:
  1932                           	opt callstack 0
  1933  00001F                     	ds	1
  1934  000020                     _uart1RxTail:
  1935                           	opt callstack 0
  1936  000020                     	ds	1
  1937  000021                     _uart1RxHead:
  1938                           	opt callstack 0
  1939  000021                     	ds	1
  1940  000022                     _uart1TxBufferRemaining:
  1941                           	opt callstack 0
  1942  000022                     	ds	1
  1943  000023                     _uart1TxTail:
  1944                           	opt callstack 0
  1945  000023                     	ds	1
  1946  000024                     _uart1TxHead:
  1947                           	opt callstack 0
  1948  000024                     	ds	1
  1949                           
  1950                           	psect	bssBANK0
  1951  000060                     __pbssBANK0:
  1952                           	opt callstack 0
  1953  000060                     _S:
  1954                           	opt callstack 0
  1955  000060                     	ds	41
  1956  000089                     _spi_link:
  1957                           	opt callstack 0
  1958  000089                     	ds	12
  1959  000095                     floorf@F524:
  1960                           	opt callstack 0
  1961  000095                     	ds	4
  1962  000099                     ___fpclassifyf@F463:
  1963                           	opt callstack 0
  1964  000099                     	ds	4
  1965  00009D                     _utctime:
  1966                           	opt callstack 0
  1967  00009D                     	ds	4
  1968  0000A1                     wdtdelay@dcount:
  1969                           	opt callstack 0
  1970  0000A1                     	ds	4
  1971  0000A5                     _P:
  1972                           	opt callstack 0
  1973  0000A5                     	ds	4
  1974  0000A9                     _TMR3_InterruptHandler:
  1975                           	opt callstack 0
  1976  0000A9                     	ds	3
  1977  0000AC                     _TMR5_InterruptHandler:
  1978                           	opt callstack 0
  1979  0000AC                     	ds	3
  1980  0000AF                     _TMR6_InterruptHandler:
  1981                           	opt callstack 0
  1982  0000AF                     	ds	3
  1983  0000B2                     _ADCC_ADTI_InterruptHandler:
  1984                           	opt callstack 0
  1985  0000B2                     	ds	3
  1986  0000B5                     _ADCC_ADI_InterruptHandler:
  1987                           	opt callstack 0
  1988  0000B5                     	ds	3
  1989  0000B8                     _UART1_TxInterruptHandler:
  1990                           	opt callstack 0
  1991  0000B8                     	ds	3
  1992  0000BB                     _UART1_RxInterruptHandler:
  1993                           	opt callstack 0
  1994  0000BB                     	ds	3
  1995  0000BE                     _UART2_TxInterruptHandler:
  1996                           	opt callstack 0
  1997  0000BE                     	ds	3
  1998  0000C1                     _nout:
  1999                           	opt callstack 0
  2000  0000C1                     	ds	2
  2001                           
  2002                           	psect	dataBANK0
  2003  0000C3                     __pdataBANK0:
  2004                           	opt callstack 0
  2005  0000C3                     _R:
  2006                           	opt callstack 0
  2007  0000C3                     	ds	40
  2008  0000EB                     stoa@F1166:
  2009                           	opt callstack 0
  2010  0000EB                     	ds	7
  2011  0000F2                     _H:
  2012                           	opt callstack 0
  2013  0000F2                     	ds	7
  2014                           
  2015                           	psect	bssBANK1
  2016  00018D                     __pbssBANK1:
  2017                           	opt callstack 0
  2018  00018D                     _tickCount:
  2019                           	opt callstack 0
  2020  00018D                     	ds	24
  2021  0001A5                     _dbuf:
  2022                           	opt callstack 0
  2023  0001A5                     	ds	80
  2024  0001F5                     _seed:
  2025                           	opt callstack 0
  2026  0001F5                     	ds	8
  2027                           
  2028                           	psect	dataBANK1
  2029  000100                     __pdataBANK1:
  2030                           	opt callstack 0
  2031  000100                     _C:
  2032                           	opt callstack 0
  2033  000100                     	ds	141
  2034                           
  2035                           	psect	dataBANK2
  2036  000200                     __pdataBANK2:
  2037                           	opt callstack 0
  2038  000200                     _V:
  2039                           	opt callstack 0
  2040  000200                     	ds	188
  2041  0002BC                     _port_data:
  2042                           	opt callstack 0
  2043  0002BC                     	ds	16
  2044                           
  2045                           	psect	bssBANK3
  2046  000300                     __pbssBANK3:
  2047                           	opt callstack 0
  2048  000300                     lp_filter@smooth:
  2049                           	opt callstack 0
  2050  000300                     	ds	84
  2051  000354                     _uart2TxBuffer:
  2052                           	opt callstack 0
  2053  000354                     	ds	64
  2054  000394                     _uart1TxBuffer:
  2055                           	opt callstack 0
  2056  000394                     	ds	64
  2057                           
  2058                           	psect	bssBANK4
  2059  000400                     __pbssBANK4:
  2060                           	opt callstack 0
  2061  000400                     _ring_buf2:
  2062                           	opt callstack 0
  2063  000400                     	ds	67
  2064  000443                     _ring_buf1:
  2065                           	opt callstack 0
  2066  000443                     	ds	67
  2067                           
  2068                           	psect	bssBANK5
  2069  000500                     __pbssBANK5:
  2070                           	opt callstack 0
  2071  000500                     _uart1RxBuffer:
  2072                           	opt callstack 0
  2073  000500                     	ds	255
  2074                           
  2075                           	psect	bssBANK6
  2076  000600                     __pbssBANK6:
  2077                           	opt callstack 0
  2078  000600                     _uart2RxBuffer:
  2079                           	opt callstack 0
  2080  000600                     	ds	255
  2081                           
  2082                           	psect	bssBIGRAM
  2083  0006FF                     __pbssBIGRAM:
  2084                           	opt callstack 0
  2085  0006FF                     _D:
  2086                           	opt callstack 0
  2087  0006FF                     	ds	290
  2088                           
  2089                           	psect	cstackBANK2
  2090  0002CC                     __pcstackBANK2:
  2091                           	opt callstack 0
  2092  0002CC                     ??_TMR3_ISR:
  2093                           
  2094                           ; 1 bytes @ 0x0
  2095  0002CC                     	ds	13
  2096                           
  2097                           	psect	cstackCOMRAM
  2098  000045                     __pcstackCOMRAM:
  2099                           	opt callstack 0
  2100  000045                     ??_ADCC_ThresholdISR:
  2101  000045                     
  2102                           ; 1 bytes @ 0x0
  2103  000045                     	ds	5
  2104  00004A                     ??_TMR6_ISR:
  2105                           
  2106                           ; 1 bytes @ 0x5
  2107  00004A                     	ds	1
  2108  00004B                     ??_INT1_ISR:
  2109  00004B                     
  2110                           ; 1 bytes @ 0x6
  2111  00004B                     	ds	4
  2112  00004F                     ??_TMR5_ISR:
  2113                           
  2114                           ; 1 bytes @ 0xA
  2115  00004F                     	ds	4
  2116                           
  2117 ;;
  2118 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2119 ;;
  2120 ;; *************** function _main *****************
  2121 ;; Defined at:
  2122 ;;		line 171 in file "main.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  k               1  [STACK] unsigned char 
  2127 ;;  j               1  [STACK] unsigned char 
  2128 ;;  i               1  [STACK] unsigned char 
  2129 ;;  inp_index       1  [STACK] unsigned char 
  2130 ;;  mode            1  [STACK] enum E17022
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1  [STACK] void 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels required when called:   23
  2146 ;; This function calls:
  2147 ;;		_SYSTEM_Initialize
  2148 ;;		_StartTimer
  2149 ;;		_TimerDone
  2150 ;;		_WaitMs
  2151 ;;		_calc_model_data
  2152 ;;		_check_adc_scan
  2153 ;;		_check_enter_button
  2154 ;;		_check_help
  2155 ;;		_clear_adc_scan
  2156 ;;		_clear_hid_pflags
  2157 ;;		_convert_adc_data
  2158 ;;		_eaDogM_WriteCommand
  2159 ;;		_get_raw_result
  2160 ;;		_get_switch
  2161 ;;		_get_vterm_ptr
  2162 ;;		_hid_display
  2163 ;;		_init_bsoc
  2164 ;;		_init_display
  2165 ;;		_lp_filter
  2166 ;;		_mode_lamp_dim
  2167 ;;		_set_display_info
  2168 ;;		_set_vterm
  2169 ;;		_sprintf
  2170 ;;		_srand
  2171 ;;		_start_adc_scan
  2172 ;;		_start_switch_handler
  2173 ;;		_static_soc
  2174 ;;		_update_lcd
  2175 ;; This function is called by:
  2176 ;;		Startup code after reset
  2177 ;; This function uses a reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text0
  2181  011D82                     __ptext0:
  2182                           	opt callstack 0
  2183  011D82                     _main:
  2184                           	opt callstack 0
  2185                           
  2186                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2187  011D82  0E05               	movlw	5
  2188  011D84  26E1               	addwf	fsr1l,f,c
  2189  011D86  0E00               	movlw	0
  2190  011D88  22E2               	addwfc	fsr1h,f,c
  2191                           
  2192                           ;main.c: 173:  UI_STATES mode;;main.c: 174:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2193                           ;stkvar	_inp_index @ sp[(-5)+3]
  2194                           
  2195                           ;incstack = 0
  2196  011D8A  0EFE               	movlw	-2
  2197  011D8C  6AE3               	clrf	plusw1,c
  2198                           
  2199                           ;stkvar	_i @ sp[(-5)+2]
  2200  011D8E  0EFD               	movlw	-3
  2201  011D90  6AE3               	clrf	plusw1,c
  2202                           
  2203                           ;stkvar	_j @ sp[(-5)+1]
  2204  011D92  0EFC               	movlw	-4
  2205  011D94  6AE3               	clrf	plusw1,c
  2206  011D96  2AE3               	incf	plusw1,f,c
  2207                           
  2208                           ;stkvar	_k @ sp[(-5)+0]
  2209  011D98  0EFB               	movlw	-5
  2210  011D9A  6AE3               	clrf	plusw1,c
  2211  011D9C  82E3               	bsf	plusw1,1,c
  2212                           
  2213                           ;main.c: 177:  SYSTEM_Initialize();
  2214  011D9E  EC50  F0C2         	call	_SYSTEM_Initialize	;wreg free
  2215                           
  2216                           ; BSR set to: 60
  2217                           ;main.c: 180:  (INTCON0bits.GIEH = 1);
  2218  011DA2  8ED2               	bsf	210,7,c	;volatile
  2219                           
  2220                           ; BSR set to: 60
  2221                           ;main.c: 183:  (INTCON0bits.GIEL = 1);
  2222  011DA4  8CD2               	bsf	210,6,c	;volatile
  2223                           
  2224                           ; BSR set to: 60
  2225                           ;main.c: 185:  V.ui_state = UI_STATE_INIT;
  2226  011DA6  0102               	movlb	2	; () banked
  2227  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2228                           
  2229                           ; BSR set to: 2
  2230                           ;main.c: 190:  WaitMs(300);
  2231  011DAA  0E2C               	movlw	44
  2232  011DAC  6EE6               	movwf	postinc1,c
  2233  011DAE  0E01               	movlw	1
  2234  011DB0  6EE6               	movwf	postinc1,c
  2235  011DB2  EC3E  F0C4         	call	_WaitMs	;wreg free
  2236                           
  2237                           ;main.c: 191:  if (PORTBbits.RB0) {
  2238  011DB6  A0CB               	btfss	203,0,c	;volatile
  2239  011DB8  D004               	goto	l11027
  2240                           
  2241                           ;main.c: 192:   mode = UI_STATE_HOST;
  2242                           ;stkvar	_mode @ sp[(-5)+4]
  2243  011DBA  0EFF               	movlw	-1
  2244  011DBC  6AE3               	clrf	plusw1,c
  2245  011DBE  2AE3               	incf	plusw1,f,c
  2246                           
  2247                           ;main.c: 193:  } else {
  2248  011DC0  D004               	goto	l11029
  2249  011DC2                     l11027:
  2250                           
  2251                           ;main.c: 194:   mode = UI_STATE_LOG;
  2252                           ;stkvar	_mode @ sp[(-5)+4]
  2253  011DC2  0EFF               	movlw	-1
  2254  011DC4  6AE3               	clrf	plusw1,c
  2255  011DC6  80E3               	bsf	plusw1,0,c
  2256  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2257  011DCA                     l11029:
  2258                           
  2259                           ;main.c: 197:  if (mode == UI_STATE_HOST) {
  2260                           ;stkvar	_mode @ sp[(-5)+4]
  2261  011DCA  0EFF               	movlw	-1
  2262  011DCC  04E3               	decf	plusw1,w,c
  2263  011DCE  A4D8               	btfss	status,2,c
  2264  011DD0  D007               	goto	l1264
  2265                           
  2266                           ;main.c: 198:   do { LATDbits.LATD0 = 1; } while(0);
  2267  011DD2  80BD               	bsf	189,0,c	;volatile
  2268                           
  2269                           ;main.c: 199:   V.mode_pwm = 70;
  2270  011DD4  0E00               	movlw	0
  2271  011DD6  0102               	movlb	2	; () banked
  2272  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2273  011DDA  0E46               	movlw	70
  2274  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2275                           
  2276                           ;main.c: 200:  } else {
  2277  011DDE  D004               	goto	l11033
  2278  011DE0                     l1264:
  2279  011DE0  90BD               	bcf	189,0,c	;volatile
  2280                           
  2281                           ;main.c: 202:   V.mode_pwm = 0;
  2282  011DE2  0102               	movlb	2	; () banked
  2283  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2284  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2285  011DE8                     l11033:
  2286                           
  2287                           ; BSR set to: 2
  2288                           ;main.c: 204:  mode_lamp_dim(V.mode_pwm);
  2289  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2290  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2291  011DF4  EC1F  F0C8         	call	_mode_lamp_dim	;wreg free
  2292  011DF8  D0D4               	goto	l11081
  2293  011DFA                     l11035:
  2294                           
  2295                           ; BSR set to: 2
  2296                           ;main.c: 215:    init_display();
  2297  011DFA  EC5B  F0B9         	call	_init_display	;wreg free
  2298                           
  2299                           ; BSR set to: 61
  2300                           ;main.c: 216:    eaDogM_WriteCommand(0b00001100);
  2301  011DFE  0E0C               	movlw	12
  2302  011E00  6EE6               	movwf	postinc1,c
  2303  011E02  EC7C  F0C8         	call	_eaDogM_WriteCommand	;wreg free
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;main.c: 218:    V.ui_state = mode;
  2307                           ;stkvar	_mode @ sp[(-5)+4]
  2308  011E06  0EFF               	movlw	-1
  2309  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;main.c: 219:    srand(1957);
  2313  011E0E  0EA5               	movlw	165
  2314  011E10  6EE6               	movwf	postinc1,c
  2315  011E12  0E07               	movlw	7
  2316  011E14  6EE6               	movwf	postinc1,c
  2317  011E16  EC74  F0C4         	call	_srand	;wreg free
  2318                           
  2319                           ; BSR set to: 1
  2320                           ;main.c: 220:    set_vterm(0);
  2321  011E1A  0E00               	movlw	0
  2322  011E1C  6EE6               	movwf	postinc1,c
  2323  011E1E  ECAD  F0C7         	call	_set_vterm	;wreg free
  2324                           
  2325                           ;main.c: 221:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2326  011E22  0E5F               	movlw	low STR_1
  2327  011E24  6EE6               	movwf	postinc1,c
  2328  011E26  0EFF               	movlw	high STR_1
  2329  011E28  6EE6               	movwf	postinc1,c
  2330  011E2A  0E00               	movlw	0
  2331  011E2C  6EE6               	movwf	postinc1,c
  2332  011E2E  0E00               	movlw	0
  2333  011E30  6EE6               	movwf	postinc1,c
  2334  011E32  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2335  011E36  0060  F097  FFE6   	movff	btemp,postinc1
  2336  011E3C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2337  011E42  0E04               	movlw	4
  2338  011E44  6EE6               	movwf	postinc1,c
  2339  011E46  ECDD  F0B7         	call	_sprintf	;wreg free
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;main.c: 222:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.997");
  2343  011E4A  0EDF               	movlw	low STR_3
  2344  011E4C  6EE6               	movwf	postinc1,c
  2345  011E4E  0EFF               	movlw	high STR_3
  2346  011E50  6EE6               	movwf	postinc1,c
  2347  011E52  0EB1               	movlw	low STR_2
  2348  011E54  6EE6               	movwf	postinc1,c
  2349  011E56  0EFF               	movlw	high STR_2
  2350  011E58  6EE6               	movwf	postinc1,c
  2351  011E5A  0E00               	movlw	0
  2352  011E5C  6EE6               	movwf	postinc1,c
  2353  011E5E  0E01               	movlw	1
  2354  011E60  6EE6               	movwf	postinc1,c
  2355  011E62  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2356  011E66  0060  F097  FFE6   	movff	btemp,postinc1
  2357  011E6C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2358  011E72  0E06               	movlw	6
  2359  011E74  6EE6               	movwf	postinc1,c
  2360  011E76  ECDD  F0B7         	call	_sprintf	;wreg free
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;main.c: 223:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2364  011E7A  0E4E               	movlw	low STR_4
  2365  011E7C  6EE6               	movwf	postinc1,c
  2366  011E7E  0EFF               	movlw	high STR_4
  2367  011E80  6EE6               	movwf	postinc1,c
  2368  011E82  0E00               	movlw	0
  2369  011E84  6EE6               	movwf	postinc1,c
  2370  011E86  0E02               	movlw	2
  2371  011E88  6EE6               	movwf	postinc1,c
  2372  011E8A  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2373  011E8E  0060  F097  FFE6   	movff	btemp,postinc1
  2374  011E94  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2375  011E9A  0E04               	movlw	4
  2376  011E9C  6EE6               	movwf	postinc1,c
  2377  011E9E  ECDD  F0B7         	call	_sprintf	;wreg free
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;main.c: 224:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2381  011EA2  0E70               	movlw	low STR_5
  2382  011EA4  6EE6               	movwf	postinc1,c
  2383  011EA6  0EFF               	movlw	high STR_5
  2384  011EA8  6EE6               	movwf	postinc1,c
  2385  011EAA  0E02               	movlw	2
  2386  011EAC  6EE6               	movwf	postinc1,c
  2387  011EAE  0E00               	movlw	0
  2388  011EB0  6EE6               	movwf	postinc1,c
  2389  011EB2  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2390  011EB6  0060  F097  FFE6   	movff	btemp,postinc1
  2391  011EBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2392  011EC2  0E04               	movlw	4
  2393  011EC4  6EE6               	movwf	postinc1,c
  2394  011EC6  ECDD  F0B7         	call	_sprintf	;wreg free
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;main.c: 225:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.997");
  2398  011ECA  0EDF               	movlw	low STR_3
  2399  011ECC  6EE6               	movwf	postinc1,c
  2400  011ECE  0EFF               	movlw	high STR_3
  2401  011ED0  6EE6               	movwf	postinc1,c
  2402  011ED2  0EB1               	movlw	low STR_2
  2403  011ED4  6EE6               	movwf	postinc1,c
  2404  011ED6  0EFF               	movlw	high STR_2
  2405  011ED8  6EE6               	movwf	postinc1,c
  2406  011EDA  0E02               	movlw	2
  2407  011EDC  6EE6               	movwf	postinc1,c
  2408  011EDE  0E01               	movlw	1
  2409  011EE0  6EE6               	movwf	postinc1,c
  2410  011EE2  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2411  011EE6  0060  F097  FFE6   	movff	btemp,postinc1
  2412  011EEC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2413  011EF2  0E06               	movlw	6
  2414  011EF4  6EE6               	movwf	postinc1,c
  2415  011EF6  ECDD  F0B7         	call	_sprintf	;wreg free
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;main.c: 226:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2419  011EFA  0E3D               	movlw	low STR_8
  2420  011EFC  6EE6               	movwf	postinc1,c
  2421  011EFE  0EFF               	movlw	high STR_8
  2422  011F00  6EE6               	movwf	postinc1,c
  2423  011F02  0E02               	movlw	2
  2424  011F04  6EE6               	movwf	postinc1,c
  2425  011F06  0E02               	movlw	2
  2426  011F08  6EE6               	movwf	postinc1,c
  2427  011F0A  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2428  011F0E  0060  F097  FFE6   	movff	btemp,postinc1
  2429  011F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2430  011F1A  0E04               	movlw	4
  2431  011F1C  6EE6               	movwf	postinc1,c
  2432  011F1E  ECDD  F0B7         	call	_sprintf	;wreg free
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;main.c: 227:    update_lcd(0);
  2436  011F22  0E00               	movlw	0
  2437  011F24  6EE6               	movwf	postinc1,c
  2438  011F26  EC55  F0B7         	call	_update_lcd	;wreg free
  2439                           
  2440                           ;main.c: 228:    WaitMs(3000);
  2441  011F2A  0EB8               	movlw	184
  2442  011F2C  6EE6               	movwf	postinc1,c
  2443  011F2E  0E0B               	movlw	11
  2444  011F30  6EE6               	movwf	postinc1,c
  2445  011F32  EC3E  F0C4         	call	_WaitMs	;wreg free
  2446                           
  2447                           ;main.c: 229:    StartTimer(TMR_DISPLAY, 250);
  2448  011F36  0EFA               	movlw	250
  2449  011F38  6EE6               	movwf	postinc1,c
  2450  011F3A  0E00               	movlw	0
  2451  011F3C  6EE6               	movwf	postinc1,c
  2452  011F3E  0E0A               	movlw	10
  2453  011F40  6EE6               	movwf	postinc1,c
  2454  011F42  EC68  F0C3         	call	_StartTimer	;wreg free
  2455                           
  2456                           ;main.c: 230:    StartTimer(TMR_ADC, 200);
  2457  011F46  0EC8               	movlw	200
  2458  011F48  6EE6               	movwf	postinc1,c
  2459  011F4A  0E00               	movlw	0
  2460  011F4C  6EE6               	movwf	postinc1,c
  2461  011F4E  0E01               	movlw	1
  2462  011F50  6EE6               	movwf	postinc1,c
  2463  011F52  EC68  F0C3         	call	_StartTimer	;wreg free
  2464                           
  2465                           ;main.c: 231:    StartTimer(TMR_INFO, 3000);
  2466  011F56  0EB8               	movlw	184
  2467  011F58  6EE6               	movwf	postinc1,c
  2468  011F5A  0E0B               	movlw	11
  2469  011F5C  6EE6               	movwf	postinc1,c
  2470  011F5E  0E07               	movlw	7
  2471  011F60  6EE6               	movwf	postinc1,c
  2472  011F62  EC68  F0C3         	call	_StartTimer	;wreg free
  2473                           
  2474                           ;main.c: 232:    StartTimer(TMR_FLIPPER, 1500);
  2475  011F66  0EDC               	movlw	220
  2476  011F68  6EE6               	movwf	postinc1,c
  2477  011F6A  0E05               	movlw	5
  2478  011F6C  6EE6               	movwf	postinc1,c
  2479  011F6E  0E0B               	movlw	11
  2480  011F70  6EE6               	movwf	postinc1,c
  2481  011F72  EC68  F0C3         	call	_StartTimer	;wreg free
  2482                           
  2483                           ;main.c: 233:    StartTimer(TMR_HELPDIS, 3000);
  2484  011F76  0EB8               	movlw	184
  2485  011F78  6EE6               	movwf	postinc1,c
  2486  011F7A  0E0B               	movlw	11
  2487  011F7C  6EE6               	movwf	postinc1,c
  2488  011F7E  0E09               	movlw	9
  2489  011F80  6EE6               	movwf	postinc1,c
  2490  011F82  EC68  F0C3         	call	_StartTimer	;wreg free
  2491                           
  2492                           ;main.c: 235:    start_adc_scan();
  2493  011F86  EC5B  F0C0         	call	_start_adc_scan	;wreg free
  2494                           
  2495                           ;main.c: 236:    start_switch_handler();
  2496  011F8A  EC7F  F0C7         	call	_start_switch_handler	;wreg free
  2497                           
  2498                           ; BSR set to: 57
  2499                           ;main.c: 237:    static_soc();
  2500  011F8E  EC03  F0C7         	call	_static_soc	;wreg free
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;main.c: 238:    init_bsoc();
  2504  011F92  EC6B  F0C8         	call	_init_bsoc	;wreg free
  2505                           
  2506                           ;main.c: 240:    break;
  2507  011F96  D01C               	goto	l11083
  2508  011F98                     l1272:
  2509                           
  2510                           ; BSR set to: 2
  2511                           ;main.c: 246:    P.SYSTEM_STABLE = 1;
  2512  011F98  0100               	movlb	0	; () banked
  2513  011F9A  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  2514                           
  2515                           ;main.c: 247:    break;
  2516  011F9C  D019               	goto	l11083
  2517  011F9E                     l1274:
  2518                           
  2519                           ; BSR set to: 2
  2520                           ;main.c: 250:    V.ui_state = UI_STATE_INIT;
  2521  011F9E  6B00               	clrf	_V& (0+255),b	;volatile
  2522                           
  2523                           ;main.c: 251:    break;
  2524  011FA0  D017               	goto	l11083
  2525  011FA2                     l11081:
  2526  011FA2  0102               	movlb	2	; () banked
  2527  011FA4  5100               	movf	_V& (0+255),w,b	;volatile
  2528  011FA6  6E2F               	movwf	(btemp+10)^0,c
  2529  011FA8  6A30               	clrf	(btemp+11)^0,c
  2530                           
  2531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2532                           ; Switch size 1, requested type "simple"
  2533                           ; Number of cases is 1, Range of values is 0 to 0
  2534                           ; switch strategies available:
  2535                           ; Name         Instructions Cycles
  2536                           ; simple_byte            4     3 (average)
  2537                           ;	Chosen strategy is simple_byte
  2538  011FAA  5030               	movf	(btemp+11)^0,w,c
  2539  011FAC  0A00               	xorlw	0	; case 0
  2540  011FAE  A4D8               	btfss	status,2,c
  2541  011FB0  D7F6               	goto	l1274
  2542                           
  2543                           ; BSR set to: 2
  2544                           ; Switch size 1, requested type "simple"
  2545                           ; Number of cases is 5, Range of values is 0 to 5
  2546                           ; switch strategies available:
  2547                           ; Name         Instructions Cycles
  2548                           ; simple_byte           16     9 (average)
  2549                           ;	Chosen strategy is simple_byte
  2550  011FB2  502F               	movf	(btemp+10)^0,w,c
  2551  011FB4  0A00               	xorlw	0	; case 0
  2552  011FB6  B4D8               	btfsc	status,2,c
  2553  011FB8  D720               	goto	l11035
  2554  011FBA  0A01               	xorlw	1	; case 1
  2555  011FBC  B4D8               	btfsc	status,2,c
  2556  011FBE  D008               	goto	l11083
  2557  011FC0  0A02               	xorlw	2	; case 3
  2558  011FC2  B4D8               	btfsc	status,2,c
  2559  011FC4  D005               	goto	l11083
  2560  011FC6  0A07               	xorlw	7	; case 4
  2561  011FC8  B4D8               	btfsc	status,2,c
  2562  011FCA  D7E6               	goto	l1272
  2563  011FCC  0A01               	xorlw	1	; case 5
  2564  011FCE  D7E7               	goto	l1274
  2565  011FD0                     l11083:
  2566                           
  2567                           ;main.c: 254:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2568  011FD0  0E01               	movlw	1
  2569  011FD2  6EE6               	movwf	postinc1,c
  2570  011FD4  ECAF  F0C5         	call	_TimerDone	;wreg free
  2571  011FD8  5025               	movf	btemp^0,w,c
  2572  011FDA  B4D8               	btfsc	status,2,c
  2573  011FDC  D013               	goto	l11095
  2574  011FDE  ECBB  F0C8         	call	_check_adc_scan	;wreg free
  2575  011FE2  5025               	movf	btemp^0,w,c
  2576  011FE4  B4D8               	btfsc	status,2,c
  2577  011FE6  D00E               	goto	l11095
  2578                           
  2579                           ;main.c: 258:    convert_adc_data();
  2580  011FE8  EC69  F0BB         	call	_convert_adc_data	;wreg free
  2581                           
  2582                           ;main.c: 262:    clear_adc_scan();
  2583  011FEC  ECC3  F0C8         	call	_clear_adc_scan	;wreg free
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;main.c: 263:    start_adc_scan();
  2587  011FF0  EC5B  F0C0         	call	_start_adc_scan	;wreg free
  2588                           
  2589                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  2590  011FF4  0EC8               	movlw	200
  2591  011FF6  6EE6               	movwf	postinc1,c
  2592  011FF8  0E00               	movlw	0
  2593  011FFA  6EE6               	movwf	postinc1,c
  2594  011FFC  0E01               	movlw	1
  2595  011FFE  6EE6               	movwf	postinc1,c
  2596  012000  EC68  F0C3         	call	_StartTimer	;wreg free
  2597  012004                     l11095:
  2598                           
  2599                           ;main.c: 271:   if (TimerDone(TMR_DISPLAY)) {
  2600                           
  2601                           ;main.c: 267:   if (V.ticks) {
  2602  012004  0E0A               	movlw	10
  2603  012006  6EE6               	movwf	postinc1,c
  2604  012008  ECAF  F0C5         	call	_TimerDone	;wreg free
  2605  01200C  5025               	movf	btemp^0,w,c
  2606  01200E  B4D8               	btfsc	status,2,c
  2607  012010  D273               	goto	l11137
  2608                           
  2609                           ;main.c: 272:    if (TimerDone(TMR_HELPDIS)) {
  2610  012012  0E09               	movlw	9
  2611  012014  6EE6               	movwf	postinc1,c
  2612  012016  ECAF  F0C5         	call	_TimerDone	;wreg free
  2613  01201A  5025               	movf	btemp^0,w,c
  2614  01201C  B4D8               	btfsc	status,2,c
  2615  01201E  D004               	goto	l11103
  2616                           
  2617                           ;main.c: 273:     set_display_info(DIS_STR);
  2618  012020  0E00               	movlw	0
  2619  012022  6EE6               	movwf	postinc1,c
  2620  012024  ECBC  F0C7         	call	_set_display_info	;wreg free
  2621  012028                     l11103:
  2622                           
  2623                           ;main.c: 275:    calc_model_data();
  2624  012028  ECE1  F0A5         	call	_calc_model_data	;wreg free
  2625                           
  2626                           ; BSR set to: 57
  2627                           ;main.c: 282:     hid_display(&H);
  2628                           
  2629                           ;main.c: 277:    if (0) {
  2630  01202C  0EF2               	movlw	_H& (0+255)
  2631  01202E  6EE6               	movwf	postinc1,c
  2632  012030  EC62  F0B8         	call	_hid_display	;wreg free
  2633                           
  2634                           ;main.c: 283:     switch (H.hid_display) {
  2635  012034  D23C               	goto	l11129
  2636  012036                     l1282:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;main.c: 285:      V.calib = 0;
  2640  012036  0102               	movlb	2	; () banked
  2641  012038  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2642                           
  2643                           ; BSR set to: 2
  2644                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2645  01203A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2646  012040  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2647  012046  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2648  01204C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2649  012052  0EB8               	movlw	low STR_12
  2650  012054  6EE6               	movwf	postinc1,c
  2651  012056  0EFE               	movlw	high STR_12
  2652  012058  6EE6               	movwf	postinc1,c
  2653  01205A  0E00               	movlw	0
  2654  01205C  6EE6               	movwf	postinc1,c
  2655  01205E  0E00               	movlw	0
  2656  012060  6EE6               	movwf	postinc1,c
  2657  012062  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2658  012066  0060  F097  FFE6   	movff	btemp,postinc1
  2659  01206C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2660  012072  0E08               	movlw	8
  2661  012074  6EE6               	movwf	postinc1,c
  2662  012076  ECDD  F0B7         	call	_sprintf	;wreg free
  2663                           
  2664                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2665  01207A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2666  012080  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2667  012086  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2668  01208C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2669  012092  0EF1               	movlw	low STR_13
  2670  012094  6EE6               	movwf	postinc1,c
  2671  012096  0EFE               	movlw	high STR_13
  2672  012098  6EE6               	movwf	postinc1,c
  2673  01209A  0E00               	movlw	0
  2674  01209C  6EE6               	movwf	postinc1,c
  2675  01209E  0E01               	movlw	1
  2676  0120A0  6EE6               	movwf	postinc1,c
  2677  0120A2  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2678  0120A6  0060  F097  FFE6   	movff	btemp,postinc1
  2679  0120AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2680  0120B2  0E08               	movlw	8
  2681  0120B4  6EE6               	movwf	postinc1,c
  2682  0120B6  ECDD  F0B7         	call	_sprintf	;wreg free
  2683                           
  2684                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2685  0120BA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2686  0120C0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2687  0120C6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2688  0120CC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2689  0120D2  0EDE               	movlw	low STR_14
  2690  0120D4  6EE6               	movwf	postinc1,c
  2691  0120D6  0EFE               	movlw	high STR_14
  2692  0120D8  6EE6               	movwf	postinc1,c
  2693  0120DA  0E00               	movlw	0
  2694  0120DC  6EE6               	movwf	postinc1,c
  2695  0120DE  0E02               	movlw	2
  2696  0120E0  6EE6               	movwf	postinc1,c
  2697  0120E2  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2698  0120E6  0060  F097  FFE6   	movff	btemp,postinc1
  2699  0120EC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2700  0120F2  0E08               	movlw	8
  2701  0120F4  6EE6               	movwf	postinc1,c
  2702  0120F6  ECDD  F0B7         	call	_sprintf	;wreg free
  2703                           
  2704                           ;main.c: 289:      break;
  2705  0120FA  D1EE               	goto	l11131
  2706  0120FC                     l1284:
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;main.c: 291:      V.calib = 0;
  2710  0120FC  0102               	movlb	2	; () banked
  2711  0120FE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2712                           
  2713                           ; BSR set to: 2
  2714                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2715  012100  0060  F413  FFE6   	movff	_C+4,postinc1
  2716  012106  0060  F417  FFE6   	movff	_C+5,postinc1
  2717  01210C  0060  F41B  FFE6   	movff	_C+6,postinc1
  2718  012112  0060  F41F  FFE6   	movff	_C+7,postinc1
  2719  012118  0060  F453  FFE6   	movff	_C+20,postinc1
  2720  01211E  0060  F457  FFE6   	movff	_C+21,postinc1
  2721  012124  0060  F45B  FFE6   	movff	_C+22,postinc1
  2722  01212A  0060  F45F  FFE6   	movff	_C+23,postinc1
  2723  012130  0E2A               	movlw	low STR_15
  2724  012132  6EE6               	movwf	postinc1,c
  2725  012134  0EFF               	movlw	high STR_15
  2726  012136  6EE6               	movwf	postinc1,c
  2727  012138  0E00               	movlw	0
  2728  01213A  6EE6               	movwf	postinc1,c
  2729  01213C  0E00               	movlw	0
  2730  01213E  6EE6               	movwf	postinc1,c
  2731  012140  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2732  012144  0060  F097  FFE6   	movff	btemp,postinc1
  2733  01214A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2734  012150  0E0C               	movlw	12
  2735  012152  6EE6               	movwf	postinc1,c
  2736  012154  ECDD  F0B7         	call	_sprintf	;wreg free
  2737                           
  2738                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2739  012158  0060  F403  FFE6   	movff	_C,postinc1
  2740  01215E  0060  F407  FFE6   	movff	_C+1,postinc1
  2741  012164  0060  F40B  FFE6   	movff	_C+2,postinc1
  2742  01216A  0060  F40F  FFE6   	movff	_C+3,postinc1
  2743  012170  0060  F443  FFE6   	movff	_C+16,postinc1
  2744  012176  0060  F447  FFE6   	movff	_C+17,postinc1
  2745  01217C  0060  F44B  FFE6   	movff	_C+18,postinc1
  2746  012182  0060  F44F  FFE6   	movff	_C+19,postinc1
  2747  012188  0E04               	movlw	low STR_16
  2748  01218A  6EE6               	movwf	postinc1,c
  2749  01218C  0EFF               	movlw	high STR_16
  2750  01218E  6EE6               	movwf	postinc1,c
  2751  012190  0E00               	movlw	0
  2752  012192  6EE6               	movwf	postinc1,c
  2753  012194  0E01               	movlw	1
  2754  012196  6EE6               	movwf	postinc1,c
  2755  012198  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2756  01219C  0060  F097  FFE6   	movff	btemp,postinc1
  2757  0121A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2758  0121A8  0E0C               	movlw	12
  2759  0121AA  6EE6               	movwf	postinc1,c
  2760  0121AC  ECDD  F0B7         	call	_sprintf	;wreg free
  2761                           
  2762                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2763  0121B0  0060  F503  FFE6   	movff	_C+64,postinc1
  2764  0121B6  0060  F507  FFE6   	movff	_C+65,postinc1
  2765  0121BC  0060  F50B  FFE6   	movff	_C+66,postinc1
  2766  0121C2  0060  F50F  FFE6   	movff	_C+67,postinc1
  2767  0121C8  0060  F423  FFE6   	movff	_C+8,postinc1
  2768  0121CE  0060  F427  FFE6   	movff	_C+9,postinc1
  2769  0121D4  0060  F42B  FFE6   	movff	_C+10,postinc1
  2770  0121DA  0060  F42F  FFE6   	movff	_C+11,postinc1
  2771  0121E0  0E17               	movlw	low STR_17
  2772  0121E2  6EE6               	movwf	postinc1,c
  2773  0121E4  0EFF               	movlw	high STR_17
  2774  0121E6  6EE6               	movwf	postinc1,c
  2775  0121E8  0E00               	movlw	0
  2776  0121EA  6EE6               	movwf	postinc1,c
  2777  0121EC  0E02               	movlw	2
  2778  0121EE  6EE6               	movwf	postinc1,c
  2779  0121F0  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2780  0121F4  0060  F097  FFE6   	movff	btemp,postinc1
  2781  0121FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2782  012200  0E0C               	movlw	12
  2783  012202  6EE6               	movwf	postinc1,c
  2784  012204  ECDD  F0B7         	call	_sprintf	;wreg free
  2785                           
  2786                           ;main.c: 295:      break;
  2787  012208  D167               	goto	l11131
  2788  01220A                     l1285:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;main.c: 297:      V.calib = 0;
  2792  01220A  0102               	movlb	2	; () banked
  2793  01220C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2794                           
  2795                           ; BSR set to: 2
  2796                           ;main.c: 298:      sprintf(get_vterm_ptr(0, 0), "BAT  PWR %3.2f    ", C.p_bat);
  2797  01220E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2798  012214  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2799  01221A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2800  012220  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2801  012226  0ECB               	movlw	low STR_18
  2802  012228  6EE6               	movwf	postinc1,c
  2803  01222A  0EFE               	movlw	high STR_18
  2804  01222C  6EE6               	movwf	postinc1,c
  2805  01222E  0E00               	movlw	0
  2806  012230  6EE6               	movwf	postinc1,c
  2807  012232  0E00               	movlw	0
  2808  012234  6EE6               	movwf	postinc1,c
  2809  012236  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2810  01223A  0060  F097  FFE6   	movff	btemp,postinc1
  2811  012240  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2812  012246  0E08               	movlw	8
  2813  012248  6EE6               	movwf	postinc1,c
  2814  01224A  ECDD  F0B7         	call	_sprintf	;wreg free
  2815                           
  2816                           ;main.c: 299:      sprintf(get_vterm_ptr(1, 0), "BAT AH   %3.2f    ", C.dynamic_ah);
  2817  01224E  0060  F613  FFE6   	movff	_C+132,postinc1
  2818  012254  0060  F617  FFE6   	movff	_C+133,postinc1
  2819  01225A  0060  F61B  FFE6   	movff	_C+134,postinc1
  2820  012260  0060  F61F  FFE6   	movff	_C+135,postinc1
  2821  012266  0EA5               	movlw	low STR_19
  2822  012268  6EE6               	movwf	postinc1,c
  2823  01226A  0EFE               	movlw	high STR_19
  2824  01226C  6EE6               	movwf	postinc1,c
  2825  01226E  0E00               	movlw	0
  2826  012270  6EE6               	movwf	postinc1,c
  2827  012272  0E01               	movlw	1
  2828  012274  6EE6               	movwf	postinc1,c
  2829  012276  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2830  01227A  0060  F097  FFE6   	movff	btemp,postinc1
  2831  012280  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2832  012286  0E08               	movlw	8
  2833  012288  6EE6               	movwf	postinc1,c
  2834  01228A  ECDD  F0B7         	call	_sprintf	;wreg free
  2835                           
  2836                           ;main.c: 300:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  2837  01228E  0060  F623  FFE6   	movff	_C+136,postinc1
  2838  012294  0060  F627  FFE6   	movff	_C+137,postinc1
  2839  01229A  0060  F62B  FFE6   	movff	_C+138,postinc1
  2840  0122A0  0060  F62F  FFE6   	movff	_C+139,postinc1
  2841  0122A6  0E92               	movlw	low STR_20
  2842  0122A8  6EE6               	movwf	postinc1,c
  2843  0122AA  0EFE               	movlw	high STR_20
  2844  0122AC  6EE6               	movwf	postinc1,c
  2845  0122AE  0E00               	movlw	0
  2846  0122B0  6EE6               	movwf	postinc1,c
  2847  0122B2  0E02               	movlw	2
  2848  0122B4  6EE6               	movwf	postinc1,c
  2849  0122B6  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2850  0122BA  0060  F097  FFE6   	movff	btemp,postinc1
  2851  0122C0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2852  0122C6  0E08               	movlw	8
  2853  0122C8  6EE6               	movwf	postinc1,c
  2854  0122CA  ECDD  F0B7         	call	_sprintf	;wreg free
  2855                           
  2856                           ;main.c: 301:      break;
  2857  0122CE  D104               	goto	l11131
  2858  0122D0                     l11115:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;main.c: 303:      if (!V.calib) {
  2862  0122D0  0102               	movlb	2	; () banked
  2863  0122D2  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2864  0122D4  A4D8               	btfss	status,2,c
  2865  0122D6  D02D               	goto	l11119
  2866                           
  2867                           ; BSR set to: 2
  2868                           ;main.c: 304:       lp_filter(0.0, i, -1);
  2869  0122D8  0EFF               	movlw	255
  2870  0122DA  6EE6               	movwf	postinc1,c
  2871                           
  2872                           ;stkvar	_i @ sp[(-6)+2]
  2873  0122DC  0EFC               	movlw	-4
  2874  0122DE  50E3               	movf	plusw1,w,c
  2875  0122E0  6EE6               	movwf	postinc1,c
  2876  0122E2  0E00               	movlw	0
  2877  0122E4  6EE6               	movwf	postinc1,c
  2878  0122E6  0E00               	movlw	0
  2879  0122E8  6EE6               	movwf	postinc1,c
  2880  0122EA  0E00               	movlw	0
  2881  0122EC  6EE6               	movwf	postinc1,c
  2882  0122EE  0E00               	movlw	0
  2883  0122F0  6EE6               	movwf	postinc1,c
  2884  0122F2  ECB6  F0B0         	call	_lp_filter	;wreg free
  2885                           
  2886                           ;main.c: 305:       lp_filter(0.0, j, -1);
  2887  0122F6  0EFF               	movlw	255
  2888  0122F8  6EE6               	movwf	postinc1,c
  2889                           
  2890                           ;stkvar	_j @ sp[(-6)+1]
  2891  0122FA  0EFB               	movlw	-5
  2892  0122FC  50E3               	movf	plusw1,w,c
  2893  0122FE  6EE6               	movwf	postinc1,c
  2894  012300  0E00               	movlw	0
  2895  012302  6EE6               	movwf	postinc1,c
  2896  012304  0E00               	movlw	0
  2897  012306  6EE6               	movwf	postinc1,c
  2898  012308  0E00               	movlw	0
  2899  01230A  6EE6               	movwf	postinc1,c
  2900  01230C  0E00               	movlw	0
  2901  01230E  6EE6               	movwf	postinc1,c
  2902  012310  ECB6  F0B0         	call	_lp_filter	;wreg free
  2903                           
  2904                           ;main.c: 306:       lp_filter(0.0, k, -1);
  2905  012314  0EFF               	movlw	255
  2906  012316  6EE6               	movwf	postinc1,c
  2907                           
  2908                           ;stkvar	_k @ sp[(-6)+0]
  2909  012318  0EFA               	movlw	-6
  2910  01231A  50E3               	movf	plusw1,w,c
  2911  01231C  6EE6               	movwf	postinc1,c
  2912  01231E  0E00               	movlw	0
  2913  012320  6EE6               	movwf	postinc1,c
  2914  012322  0E00               	movlw	0
  2915  012324  6EE6               	movwf	postinc1,c
  2916  012326  0E00               	movlw	0
  2917  012328  6EE6               	movwf	postinc1,c
  2918  01232A  0E00               	movlw	0
  2919  01232C  6EE6               	movwf	postinc1,c
  2920  01232E  ECB6  F0B0         	call	_lp_filter	;wreg free
  2921  012332                     l11119:
  2922                           
  2923                           ;main.c: 308:      V.calib = 1;
  2924  012332  0E01               	movlw	1
  2925  012334  0102               	movlb	2	; () banked
  2926  012336  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2927                           
  2928                           ; BSR set to: 2
  2929                           ;main.c: 309:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2930  012338  0E02               	movlw	2
  2931  01233A  6EE6               	movwf	postinc1,c
  2932  01233C  EC9B  F0C5         	call	_get_switch	;wreg free
  2933  012340  5025               	movf	btemp^0,w,c
  2934  012342  6EE6               	movwf	postinc1,c
  2935  012344  0E00               	movlw	0
  2936  012346  6EE6               	movwf	postinc1,c
  2937                           
  2938                           ;stkvar	_i @ sp[(-7)+2]
  2939  012348  0EFB               	movlw	-5
  2940  01234A  50E3               	movf	plusw1,w,c
  2941  01234C  0D04               	mullw	4
  2942  01234E  0E00               	movlw	low _C
  2943  012350  24F3               	addwf	243,w,c
  2944  012352  6ED9               	movwf	fsr2l,c
  2945  012354  0E01               	movlw	high _C
  2946  012356  20F4               	addwfc	prodh,w,c
  2947  012358  6EDA               	movwf	fsr2h,c
  2948  01235A  006F FF7B FFE6     	movff	postinc2,postinc1
  2949  012360  006F FF7B FFE6     	movff	postinc2,postinc1
  2950  012366  006F FF7B FFE6     	movff	postinc2,postinc1
  2951  01236C  006F FF7B FFE6     	movff	postinc2,postinc1
  2952                           
  2953                           ;stkvar	_i @ sp[(-11)+2]
  2954  012372  0EF7               	movlw	-9
  2955  012374  50E3               	movf	plusw1,w,c
  2956  012376  6EE6               	movwf	postinc1,c
  2957  012378  EC9E  F0C7         	call	_get_raw_result	;wreg free
  2958  01237C  0060  F097  FFE6   	movff	btemp,postinc1
  2959  012382  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2960  012388  0E92               	movlw	low STR_9
  2961  01238A  6EE6               	movwf	postinc1,c
  2962  01238C  0EFF               	movlw	high STR_9
  2963  01238E  6EE6               	movwf	postinc1,c
  2964  012390  0E00               	movlw	0
  2965  012392  6EE6               	movwf	postinc1,c
  2966  012394  0E00               	movlw	0
  2967  012396  6EE6               	movwf	postinc1,c
  2968  012398  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  2969  01239C  0060  F097  FFE6   	movff	btemp,postinc1
  2970  0123A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2971  0123A8  0E0C               	movlw	12
  2972  0123AA  6EE6               	movwf	postinc1,c
  2973  0123AC  ECDD  F0B7         	call	_sprintf	;wreg free
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;main.c: 310:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  2977  0123B0  0E03               	movlw	3
  2978  0123B2  6EE6               	movwf	postinc1,c
  2979  0123B4  EC9B  F0C5         	call	_get_switch	;wreg free
  2980  0123B8  5025               	movf	btemp^0,w,c
  2981  0123BA  6EE6               	movwf	postinc1,c
  2982  0123BC  0E00               	movlw	0
  2983  0123BE  6EE6               	movwf	postinc1,c
  2984                           
  2985                           ;stkvar	_j @ sp[(-7)+1]
  2986  0123C0  0EFA               	movlw	-6
  2987  0123C2  50E3               	movf	plusw1,w,c
  2988  0123C4  0D04               	mullw	4
  2989  0123C6  0E00               	movlw	low _C
  2990  0123C8  24F3               	addwf	243,w,c
  2991  0123CA  6ED9               	movwf	fsr2l,c
  2992  0123CC  0E01               	movlw	high _C
  2993  0123CE  20F4               	addwfc	prodh,w,c
  2994  0123D0  6EDA               	movwf	fsr2h,c
  2995  0123D2  006F FF7B FFE6     	movff	postinc2,postinc1
  2996  0123D8  006F FF7B FFE6     	movff	postinc2,postinc1
  2997  0123DE  006F FF7B FFE6     	movff	postinc2,postinc1
  2998  0123E4  006F FF7B FFE6     	movff	postinc2,postinc1
  2999                           
  3000                           ;stkvar	_j @ sp[(-11)+1]
  3001  0123EA  0EF6               	movlw	-10
  3002  0123EC  50E3               	movf	plusw1,w,c
  3003  0123EE  6EE6               	movwf	postinc1,c
  3004  0123F0  EC9E  F0C7         	call	_get_raw_result	;wreg free
  3005  0123F4  0060  F097  FFE6   	movff	btemp,postinc1
  3006  0123FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3007  012400  0E92               	movlw	low STR_9
  3008  012402  6EE6               	movwf	postinc1,c
  3009  012404  0EFF               	movlw	high STR_9
  3010  012406  6EE6               	movwf	postinc1,c
  3011  012408  0E00               	movlw	0
  3012  01240A  6EE6               	movwf	postinc1,c
  3013  01240C  0E01               	movlw	1
  3014  01240E  6EE6               	movwf	postinc1,c
  3015  012410  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  3016  012414  0060  F097  FFE6   	movff	btemp,postinc1
  3017  01241A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3018  012420  0E0C               	movlw	12
  3019  012422  6EE6               	movwf	postinc1,c
  3020  012424  ECDD  F0B7         	call	_sprintf	;wreg free
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;main.c: 311:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3024                           ;stkvar	_inp_index @ sp[(-5)+3]
  3025  012428  0EFE               	movlw	-2
  3026  01242A  50E3               	movf	plusw1,w,c
  3027  01242C  6E2F               	movwf	(btemp+10)^0,c
  3028  01242E  6A30               	clrf	(btemp+11)^0,c
  3029  012430  0E01               	movlw	1
  3030  012432  262F               	addwf	(btemp+10)^0,f,c
  3031  012434  0E00               	movlw	0
  3032  012436  2230               	addwfc	(btemp+11)^0,f,c
  3033  012438  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  3034  01243E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  3035                           
  3036                           ;stkvar	_k @ sp[(-7)+0]
  3037  012444  0EF9               	movlw	-7
  3038  012446  50E3               	movf	plusw1,w,c
  3039  012448  0D04               	mullw	4
  3040  01244A  0E00               	movlw	low _C
  3041  01244C  24F3               	addwf	243,w,c
  3042  01244E  6ED9               	movwf	fsr2l,c
  3043  012450  0E01               	movlw	high _C
  3044  012452  20F4               	addwfc	prodh,w,c
  3045  012454  6EDA               	movwf	fsr2h,c
  3046  012456  006F FF7B FFE6     	movff	postinc2,postinc1
  3047  01245C  006F FF7B FFE6     	movff	postinc2,postinc1
  3048  012462  006F FF7B FFE6     	movff	postinc2,postinc1
  3049  012468  006F FF7B FFE6     	movff	postinc2,postinc1
  3050                           
  3051                           ;stkvar	_k @ sp[(-11)+0]
  3052  01246E  0EF5               	movlw	-11
  3053  012470  50E3               	movf	plusw1,w,c
  3054  012472  6EE6               	movwf	postinc1,c
  3055  012474  EC9E  F0C7         	call	_get_raw_result	;wreg free
  3056  012478  0060  F097  FFE6   	movff	btemp,postinc1
  3057  01247E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3058  012484  0E81               	movlw	low STR_11
  3059  012486  6EE6               	movwf	postinc1,c
  3060  012488  0EFF               	movlw	high STR_11
  3061  01248A  6EE6               	movwf	postinc1,c
  3062  01248C  0E00               	movlw	0
  3063  01248E  6EE6               	movwf	postinc1,c
  3064  012490  0E02               	movlw	2
  3065  012492  6EE6               	movwf	postinc1,c
  3066  012494  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  3067  012498  0060  F097  FFE6   	movff	btemp,postinc1
  3068  01249E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3069  0124A4  0E0C               	movlw	12
  3070  0124A6  6EE6               	movwf	postinc1,c
  3071  0124A8  ECDD  F0B7         	call	_sprintf	;wreg free
  3072                           
  3073                           ;main.c: 312:      break;
  3074  0124AC  D015               	goto	l11131
  3075  0124AE                     l11129:
  3076  0124AE  0100               	movlb	0	; () banked
  3077  0124B0  51F2               	movf	_H& (0+255),w,b
  3078  0124B2  6E2F               	movwf	(btemp+10)^0,c
  3079  0124B4  6A30               	clrf	(btemp+11)^0,c
  3080                           
  3081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3082                           ; Switch size 1, requested type "simple"
  3083                           ; Number of cases is 1, Range of values is 0 to 0
  3084                           ; switch strategies available:
  3085                           ; Name         Instructions Cycles
  3086                           ; simple_byte            4     3 (average)
  3087                           ;	Chosen strategy is simple_byte
  3088  0124B6  5030               	movf	(btemp+11)^0,w,c
  3089  0124B8  0A00               	xorlw	0	; case 0
  3090  0124BA  A4D8               	btfss	status,2,c
  3091  0124BC  D00D               	goto	l11131
  3092                           
  3093                           ; BSR set to: 0
  3094                           ; Switch size 1, requested type "simple"
  3095                           ; Number of cases is 4, Range of values is 0 to 3
  3096                           ; switch strategies available:
  3097                           ; Name         Instructions Cycles
  3098                           ; simple_byte           13     7 (average)
  3099                           ;	Chosen strategy is simple_byte
  3100  0124BE  502F               	movf	(btemp+10)^0,w,c
  3101  0124C0  0A00               	xorlw	0	; case 0
  3102  0124C2  B4D8               	btfsc	status,2,c
  3103  0124C4  D61B               	goto	l1284
  3104  0124C6  0A01               	xorlw	1	; case 1
  3105  0124C8  B4D8               	btfsc	status,2,c
  3106  0124CA  D5B5               	goto	l1282
  3107  0124CC  0A03               	xorlw	3	; case 2
  3108  0124CE  B4D8               	btfsc	status,2,c
  3109  0124D0  D69C               	goto	l1285
  3110  0124D2  0A01               	xorlw	1	; case 3
  3111  0124D4  B4D8               	btfsc	status,2,c
  3112  0124D6  D6FC               	goto	l11115
  3113  0124D8                     l11131:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;main.c: 316:     clear_hid_pflags(&H);
  3117  0124D8  0EF2               	movlw	_H& (0+255)
  3118  0124DA  6EE6               	movwf	postinc1,c
  3119  0124DC  EC15  F0C7         	call	_clear_hid_pflags	;wreg free
  3120                           
  3121                           ;main.c: 318:    StartTimer(TMR_DISPLAY, 250);
  3122  0124E0  0EFA               	movlw	250
  3123  0124E2  6EE6               	movwf	postinc1,c
  3124  0124E4  0E00               	movlw	0
  3125  0124E6  6EE6               	movwf	postinc1,c
  3126  0124E8  0E0A               	movlw	10
  3127  0124EA  6EE6               	movwf	postinc1,c
  3128  0124EC  EC68  F0C3         	call	_StartTimer	;wreg free
  3129                           
  3130                           ;main.c: 319:    update_lcd(0);
  3131  0124F0  0E00               	movlw	0
  3132  0124F2  6EE6               	movwf	postinc1,c
  3133  0124F4  EC55  F0B7         	call	_update_lcd	;wreg free
  3134  0124F8                     l11137:
  3135                           
  3136                           ;main.c: 325:   check_help(V.flipper);
  3137  0124F8  0102               	movlb	2	; () banked
  3138  0124FA  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3139  0124FC  6EE6               	movwf	postinc1,c
  3140  0124FE  ECC7  F0AD         	call	_check_help	;wreg free
  3141                           
  3142                           ;main.c: 327:   if (check_enter_button(&H)) {
  3143  012502  0EF2               	movlw	_H& (0+255)
  3144  012504  6EE6               	movwf	postinc1,c
  3145  012506  EC88  F0C3         	call	_check_enter_button	;wreg free
  3146  01250A  5025               	movf	btemp^0,w,c
  3147  01250C  B4D8               	btfsc	status,2,c
  3148  01250E  D062               	goto	l1289
  3149                           
  3150                           ;main.c: 328:    V.calib = 0;
  3151  012510  0102               	movlb	2	; () banked
  3152  012512  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3153                           
  3154                           ; BSR set to: 2
  3155                           ;main.c: 329:    inp_index += 3;
  3156                           ;stkvar	_inp_index @ sp[(-5)+3]
  3157  012514  0EFE               	movlw	-2
  3158  012516  006F FF8C  F025    	movff	plusw1,btemp
  3159  01251C  0E03               	movlw	3
  3160  01251E  2625               	addwf	btemp^0,f,c
  3161  012520  0EFE               	movlw	-2
  3162  012522  0060  F097  FFE3   	movff	btemp,plusw1
  3163                           
  3164                           ;main.c: 330:    if (inp_index > 9)
  3165                           ;stkvar	_inp_index @ sp[(-5)+3]
  3166  012528  0EFE               	movlw	-2
  3167  01252A  006F FF8C  F025    	movff	plusw1,btemp
  3168  012530  0E09               	movlw	9
  3169  012532  6425               	cpfsgt	btemp^0,c
  3170  012534  D03A               	goto	l11165
  3171                           
  3172                           ; BSR set to: 2
  3173                           ;main.c: 331:     inp_index = 0;
  3174                           ;stkvar	_inp_index @ sp[(-5)+3]
  3175  012536  0EFE               	movlw	-2
  3176  012538  6AE3               	clrf	plusw1,c
  3177  01253A  D037               	goto	l11165
  3178  01253C                     l11147:
  3179                           
  3180                           ; BSR set to: 2
  3181                           ;main.c: 334:     i = C_BATT;
  3182                           ;stkvar	_i @ sp[(-5)+2]
  3183  01253C  0EFD               	movlw	-3
  3184  01253E  6AE3               	clrf	plusw1,c
  3185                           
  3186                           ; BSR set to: 2
  3187                           ;main.c: 335:     j = C_PV;
  3188                           ;stkvar	_j @ sp[(-5)+1]
  3189  012540  0EFC               	movlw	-4
  3190  012542  6AE3               	clrf	plusw1,c
  3191  012544  2AE3               	incf	plusw1,f,c
  3192                           
  3193                           ; BSR set to: 2
  3194                           ;main.c: 336:     k = V_CC;
  3195                           ;stkvar	_k @ sp[(-5)+0]
  3196  012546  0EFB               	movlw	-5
  3197  012548  6AE3               	clrf	plusw1,c
  3198  01254A  82E3               	bsf	plusw1,1,c
  3199                           
  3200                           ;main.c: 337:     break;
  3201  01254C  D043               	goto	l1289
  3202  01254E                     l11153:
  3203                           
  3204                           ; BSR set to: 2
  3205                           ;main.c: 339:     i = V_BAT;
  3206                           ;stkvar	_i @ sp[(-5)+2]
  3207  01254E  0EFD               	movlw	-3
  3208  012550  6AE3               	clrf	plusw1,c
  3209  012552  84E3               	bsf	plusw1,2,c
  3210                           
  3211                           ;main.c: 340:     j = V_PV;
  3212                           ;stkvar	_j @ sp[(-5)+1]
  3213  012554  0EFC               	movlw	-4
  3214  012556  6AE3               	clrf	plusw1,c
  3215  012558  80E3               	bsf	plusw1,0,c
  3216  01255A  84E3               	bsf	plusw1,2,c	;indir
  3217                           
  3218                           ;main.c: 341:     k = V_CBUS;
  3219                           ;stkvar	_k @ sp[(-5)+0]
  3220  01255C  0EFB               	movlw	-5
  3221  01255E  6AE3               	clrf	plusw1,c
  3222  012560  82E3               	bsf	plusw1,1,c
  3223  012562  84E3               	bsf	plusw1,2,c	;indir
  3224                           
  3225                           ;main.c: 342:     break;
  3226  012564  D037               	goto	l1289
  3227  012566                     l11155:
  3228                           
  3229                           ; BSR set to: 2
  3230                           ;main.c: 344:     i = V_BBAT;
  3231                           ;stkvar	_i @ sp[(-5)+2]
  3232  012566  0EFD               	movlw	-3
  3233  012568  6AE3               	clrf	plusw1,c
  3234  01256A  82E3               	bsf	plusw1,1,c
  3235  01256C  86E3               	bsf	plusw1,3,c	;indir
  3236                           
  3237                           ; BSR set to: 2
  3238                           ;main.c: 345:     j = V_TEMP;
  3239  01256E  0E0B               	movlw	11
  3240  012570  6E30               	movwf	(btemp+11)^0,c
  3241                           
  3242                           ;stkvar	_j @ sp[(-5)+1]
  3243  012572  0EFC               	movlw	-4
  3244  012574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3245                           
  3246                           ; BSR set to: 2
  3247                           ;main.c: 346:     k = V_INVERTER;
  3248                           ;stkvar	_k @ sp[(-5)+0]
  3249  01257A  0EFB               	movlw	-5
  3250  01257C  6AE3               	clrf	plusw1,c
  3251  01257E  84E3               	bsf	plusw1,2,c
  3252  012580  86E3               	bsf	plusw1,3,c	;indir
  3253                           
  3254                           ;main.c: 347:     break;
  3255  012582  D028               	goto	l1289
  3256  012584                     l11161:
  3257                           
  3258                           ; BSR set to: 2
  3259                           ;main.c: 349:     i = channel_ANB5;
  3260  012584  0E0D               	movlw	13
  3261  012586  6E30               	movwf	(btemp+11)^0,c
  3262                           
  3263                           ;stkvar	_i @ sp[(-5)+2]
  3264  012588  0EFD               	movlw	-3
  3265  01258A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3266                           
  3267                           ;main.c: 350:     j = channel_ANB5;
  3268  012590  0E0D               	movlw	13
  3269  012592  6E30               	movwf	(btemp+11)^0,c
  3270                           
  3271                           ;stkvar	_j @ sp[(-5)+1]
  3272  012594  0EFC               	movlw	-4
  3273  012596  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3274                           
  3275                           ;main.c: 351:     k = channel_ANB5;
  3276  01259C  0E0D               	movlw	13
  3277  01259E  6E30               	movwf	(btemp+11)^0,c
  3278                           
  3279                           ;stkvar	_k @ sp[(-5)+0]
  3280  0125A0  0EFB               	movlw	-5
  3281  0125A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3282                           
  3283                           ;main.c: 352:     break;
  3284  0125A8  D015               	goto	l1289
  3285  0125AA                     l11165:
  3286                           
  3287                           ; BSR set to: 2
  3288                           ;stkvar	_inp_index @ sp[(-5)+3]
  3289  0125AA  0EFE               	movlw	-2
  3290  0125AC  50E3               	movf	plusw1,w,c
  3291  0125AE  6E2F               	movwf	(btemp+10)^0,c
  3292  0125B0  6A30               	clrf	(btemp+11)^0,c
  3293                           
  3294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3295                           ; Switch size 1, requested type "simple"
  3296                           ; Number of cases is 1, Range of values is 0 to 0
  3297                           ; switch strategies available:
  3298                           ; Name         Instructions Cycles
  3299                           ; simple_byte            4     3 (average)
  3300                           ;	Chosen strategy is simple_byte
  3301  0125B2  5030               	movf	(btemp+11)^0,w,c
  3302  0125B4  0A00               	xorlw	0	; case 0
  3303  0125B6  A4D8               	btfss	status,2,c
  3304  0125B8  D00D               	goto	l1289
  3305                           
  3306                           ; BSR set to: 2
  3307                           ; Switch size 1, requested type "simple"
  3308                           ; Number of cases is 4, Range of values is 0 to 9
  3309                           ; switch strategies available:
  3310                           ; Name         Instructions Cycles
  3311                           ; simple_byte           13     7 (average)
  3312                           ;	Chosen strategy is simple_byte
  3313  0125BA  502F               	movf	(btemp+10)^0,w,c
  3314  0125BC  0A00               	xorlw	0	; case 0
  3315  0125BE  B4D8               	btfsc	status,2,c
  3316  0125C0  D7BD               	goto	l11147
  3317  0125C2  0A03               	xorlw	3	; case 3
  3318  0125C4  B4D8               	btfsc	status,2,c
  3319  0125C6  D7C3               	goto	l11153
  3320  0125C8  0A05               	xorlw	5	; case 6
  3321  0125CA  B4D8               	btfsc	status,2,c
  3322  0125CC  D7CC               	goto	l11155
  3323  0125CE  0A0F               	xorlw	15	; case 9
  3324  0125D0  B4D8               	btfsc	status,2,c
  3325  0125D2  D7D8               	goto	l11161
  3326  0125D4                     l1289:
  3327                           
  3328                           ;main.c: 361:   if (V.set_sequ) {
  3329  0125D4  0102               	movlb	2	; () banked
  3330  0125D6  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3331  0125D8  D4E4               	goto	l11081
  3332                           
  3333                           ; BSR set to: 2
  3334                           ;main.c: 362:    if (TimerDone(TMR_INFO)) {
  3335  0125DA  0E07               	movlw	7
  3336  0125DC  6EE6               	movwf	postinc1,c
  3337  0125DE  ECAF  F0C5         	call	_TimerDone	;wreg free
  3338  0125E2  5025               	movf	btemp^0,w,c
  3339  0125E4  B4D8               	btfsc	status,2,c
  3340  0125E6  D00B               	goto	l11175
  3341                           
  3342                           ;main.c: 363:     V.set_sequ = 0;
  3343  0125E8  0102               	movlb	2	; () banked
  3344  0125EA  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3345                           
  3346                           ; BSR set to: 2
  3347                           ;main.c: 364:     set_vterm(0);
  3348  0125EC  0E00               	movlw	0
  3349  0125EE  6EE6               	movwf	postinc1,c
  3350  0125F0  ECAD  F0C7         	call	_set_vterm	;wreg free
  3351                           
  3352                           ;main.c: 365:     update_lcd(0);
  3353  0125F4  0E00               	movlw	0
  3354  0125F6  6EE6               	movwf	postinc1,c
  3355  0125F8  EC55  F0B7         	call	_update_lcd	;wreg free
  3356                           
  3357                           ;main.c: 366:    } else {
  3358  0125FC  D4D2               	goto	l11081
  3359  0125FE                     l11175:
  3360                           
  3361                           ;main.c: 367:     set_vterm(2);
  3362  0125FE  0E02               	movlw	2
  3363  012600  6EE6               	movwf	postinc1,c
  3364  012602  ECAD  F0C7         	call	_set_vterm	;wreg free
  3365                           
  3366                           ;main.c: 368:     update_lcd(2);
  3367  012606  0E02               	movlw	2
  3368  012608  6EE6               	movwf	postinc1,c
  3369  01260A  EC55  F0B7         	call	_update_lcd	;wreg free
  3370  01260E  D4C9               	goto	l11081
  3371  012610                     __end_of_main:
  3372                           	opt callstack 0
  3373                           
  3374 ;; *************** function _static_soc *****************
  3375 ;; Defined at:
  3376 ;;		line 88 in file "mbmc.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1  [STACK] void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2
  3385 ;; Tracked objects:
  3386 ;;		On entry : 3F/39
  3387 ;;		On exit  : 3F/1
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:   10
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text1
  3405  018E06                     __ptext1:
  3406                           	opt callstack 0
  3407  018E06                     _static_soc:
  3408                           	opt callstack 20
  3409                           
  3410                           ;mbmc.c: 90:  C.static_ah = C.bank_ah;
  3411                           
  3412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3413                           ;incstack = 0
  3414  018E06  C17C  F180         	movff	_C+124,_C+128	;volatile
  3415  018E0A  C17D  F181         	movff	_C+125,_C+129	;volatile
  3416  018E0E  C17E  F182         	movff	_C+126,_C+130	;volatile
  3417  018E12  C17F  F183         	movff	_C+127,_C+131	;volatile
  3418                           
  3419                           ;mbmc.c: 91:  C.runtime = 120;
  3420  018E16  0E00               	movlw	0
  3421  018E18  0101               	movlb	1	; () banked
  3422  018E1A  6F89               	movwf	(_C+137)& (0+255),b	;volatile
  3423  018E1C  0E78               	movlw	120
  3424  018E1E  6F88               	movwf	(_C+136)& (0+255),b	;volatile
  3425                           
  3426                           ;mbmc.c: 92:  C.soc = 100;
  3427  018E20  0E00               	movlw	0
  3428  018E22  6F8B               	movwf	(_C+139)& (0+255),b	;volatile
  3429  018E24  0E64               	movlw	100
  3430  018E26  6F8A               	movwf	(_C+138)& (0+255),b	;volatile
  3431                           
  3432                           ; BSR set to: 1
  3433                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3434  018E28  0012               	return		;funcret
  3435  018E2A                     __end_of_static_soc:
  3436                           	opt callstack 0
  3437                           
  3438 ;; *************** function _start_switch_handler *****************
  3439 ;; Defined at:
  3440 ;;		line 119 in file "dio.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1  [STACK] void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3449 ;; Tracked objects:
  3450 ;;		On entry : 1/0
  3451 ;;		On exit  : 3F/39
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:   11
  3461 ;; This function calls:
  3462 ;;		_INT1_SetInterruptHandler
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;; This function uses a reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text2
  3469  018EFE                     __ptext2:
  3470                           	opt callstack 0
  3471  018EFE                     _start_switch_handler:
  3472                           	opt callstack 19
  3473                           
  3474                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3475                           
  3476                           ; BSR set to: 1
  3477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3478                           ;incstack = 0
  3479  018EFE  0139               	movlb	57	; () banked
  3480  018F00  9195               	bcf	149,0,b	;volatile
  3481                           
  3482                           ; BSR set to: 57
  3483                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3484  018F02  0EE4               	movlw	low _switch_handler
  3485  018F04  6EE6               	movwf	postinc1,c
  3486  018F06  0E68               	movlw	high _switch_handler
  3487  018F08  6EE6               	movwf	postinc1,c
  3488  018F0A  0E01               	movlw	low (_switch_handler shr (0+16))
  3489  018F0C  6EE6               	movwf	postinc1,c
  3490  018F0E  EC4F  F0C6         	call	_INT1_SetInterruptHandler	;wreg free
  3491                           
  3492                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3493  018F12  0E02               	movlw	2
  3494  018F14  0100               	movlb	0	; () banked
  3495  018F16  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3499  018F18  0139               	movlb	57	; () banked
  3500  018F1A  8195               	bsf	149,0,b	;volatile
  3501                           
  3502                           ; BSR set to: 57
  3503                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3504  018F1C  0012               	return		;funcret
  3505  018F1E                     __end_of_start_switch_handler:
  3506                           	opt callstack 0
  3507                           
  3508 ;; *************** function _start_adc_scan *****************
  3509 ;; Defined at:
  3510 ;;		line 33 in file "daq.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1  [STACK] _Bool 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 1/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3528 ;;Total ram usage:        0 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:   11
  3531 ;; This function calls:
  3532 ;;		_ADCC_DischargeSampleCapacitor
  3533 ;;		_ADCC_SetADIInterruptHandler
  3534 ;;		_ADCC_SetADTIInterruptHandler
  3535 ;;		_ADCC_StartConversion
  3536 ;; This function is called by:
  3537 ;;		_main
  3538 ;; This function uses a reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text3
  3542  0180B6                     __ptext3:
  3543                           	opt callstack 0
  3544  0180B6                     _start_adc_scan:
  3545                           	opt callstack 19
  3546                           
  3547                           ;daq.c: 35:  if (R.done)
  3548                           
  3549                           ; BSR set to: 57
  3550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3551                           ;incstack = 0
  3552  0180B6  0100               	movlb	0	; () banked
  3553  0180B8  51EA               	movf	(_R+39)& (0+255),w,b	;volatile
  3554  0180BA  A4D8               	btfss	status,2,c
  3555  0180BC  0012               	return	
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;daq.c: 38:  R.scan_index = 0;
  3559  0180BE  6BE7               	clrf	(_R+36)& (0+255),b	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3563  0180C0  013A               	movlb	58	; () banked
  3564  0180C2  5140               	movf	64,w,b	;volatile
  3565  0180C4  006E F940  F025    	movff	14928,btemp	;volatile
  3566  0180CA  6A26               	clrf	(btemp+1)^0,c
  3567  0180CC  0060  F094  F026   	movff	btemp,btemp+1
  3568  0180D2  6A25               	clrf	btemp^0,c
  3569  0180D4  2625               	addwf	btemp^0,f,c
  3570  0180D6  0E00               	movlw	0
  3571  0180D8  2226               	addwfc	(btemp+1)^0,f,c
  3572  0180DA  0E77               	movlw	119
  3573  0180DC  1425               	andwf	btemp^0,w,c
  3574  0180DE  0100               	movlb	0	; () banked
  3575  0180E0  6FE8               	movwf	(_R+37)& (0+255),b	;volatile
  3576  0180E2  0E3C               	movlw	60
  3577  0180E4  1426               	andwf	(btemp+1)^0,w,c
  3578  0180E6  6FE9               	movwf	(_R+38)& (0+255),b	;volatile
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3582  0180E8  0EB2               	movlw	low _adc_int_handler
  3583  0180EA  6EE6               	movwf	postinc1,c
  3584  0180EC  0E91               	movlw	high _adc_int_handler
  3585  0180EE  6EE6               	movwf	postinc1,c
  3586  0180F0  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3587  0180F2  6EE6               	movwf	postinc1,c
  3588  0180F4  EC8B  F0C6         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3589                           
  3590                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3591  0180F8  0E92               	movlw	low _adc_int_t_handler
  3592  0180FA  6EE6               	movwf	postinc1,c
  3593  0180FC  0E7E               	movlw	high _adc_int_t_handler
  3594  0180FE  6EE6               	movwf	postinc1,c
  3595  018100  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3596  018102  6EE6               	movwf	postinc1,c
  3597  018104  EC77  F0C6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3598                           
  3599                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3600  018108  ECAF  F0C8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3601                           
  3602                           ; BSR set to: 62
  3603                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3604  01810C  0100               	movlb	0	; () banked
  3605  01810E  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
  3606  018110  0B0F               	andlw	15
  3607  018112  6EE6               	movwf	postinc1,c
  3608  018114  EC62  F0C8         	call	_ADCC_StartConversion	;wreg free
  3609                           
  3610                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3611  018118  0012               	return		;funcret
  3612  01811A                     __end_of_start_adc_scan:
  3613                           	opt callstack 0
  3614                           
  3615 ;; *************** function _ADCC_StartConversion *****************
  3616 ;; Defined at:
  3617 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  channel         1  [STACK] enum E16136
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1  [STACK] void 
  3624 ;; Registers used:
  3625 ;;		fsr1l, fsr1h
  3626 ;; Tracked objects:
  3627 ;;		On entry : 3F/0
  3628 ;;		On exit  : 3F/3E
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:   10
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_start_adc_scan
  3642 ;;		_adc_int_t_handler
  3643 ;; This function uses a reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text4
  3647  0190C4                     __ptext4:
  3648                           	opt callstack 0
  3649  0190C4                     _ADCC_StartConversion:
  3650                           	opt callstack 0
  3651                           
  3652                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3653                           ;stkvar	_channel @ sp[(0)+-1]
  3654                           
  3655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3656                           ;incstack = 0
  3657 ;; hardware stack exceeded
  3658  0190C4  0EFF               	movlw	-1
  3659  0190C6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3660                           
  3661                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3662  0190CC  013E               	movlb	62	; () banked
  3663  0190CE  8FF8               	bsf	248,7,b	;volatile
  3664                           
  3665                           ; BSR set to: 62
  3666                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3667  0190D0  81F8               	bsf	248,0,b	;volatile
  3668                           
  3669                           ; BSR set to: 62
  3670                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3671  0190D2  52E5               	movf	postdec1,f,c
  3672  0190D4  0012               	return		;funcret
  3673  0190D6                     __end_of_ADCC_StartConversion:
  3674                           	opt callstack 0
  3675                           
  3676 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3677 ;; Defined at:
  3678 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1  [STACK] void 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 3F/3E
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3696 ;;Total ram usage:        0 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:   10
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_start_adc_scan
  3703 ;;		_adc_int_t_handler
  3704 ;; This function uses a reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text5
  3708  01915E                     __ptext5:
  3709                           	opt callstack 0
  3710  01915E                     _ADCC_DischargeSampleCapacitor:
  3711                           	opt callstack 0
  3712                           
  3713                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3714                           
  3715                           ; BSR set to: 62
  3716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3717                           ;incstack = 0
  3718 ;; hardware stack exceeded
  3719  01915E  0E3B               	movlw	59
  3720  019160  013E               	movlb	62	; () banked
  3721  019162  6FF1               	movwf	241,b	;volatile
  3722                           
  3723                           ; BSR set to: 62
  3724                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3725  019164  0012               	return		;funcret
  3726  019166                     __end_of_ADCC_DischargeSampleCapacitor:
  3727                           	opt callstack 0
  3728                           
  3729 ;; *************** function _srand *****************
  3730 ;; Defined at:
  3731 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  s               2  [STACK] unsigned int 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1  [STACK] void 
  3738 ;; Registers used:
  3739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3740 ;; Tracked objects:
  3741 ;;		On entry : 3F/0
  3742 ;;		On exit  : 3F/1
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:   10
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;; This function uses a reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text6
  3760  0188E8                     __ptext6:
  3761                           	opt callstack 0
  3762  0188E8                     _srand:
  3763                           	opt callstack 20
  3764                           
  3765                           ;stkvar	_s @ sp[(0)+-2]
  3766                           
  3767                           ; BSR set to: 62
  3768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3769                           ;incstack = 0
  3770  0188E8  0EFE               	movlw	-2
  3771  0188EA  50E3               	movf	plusw1,w,c
  3772  0188EC  0FFF               	addlw	255
  3773  0188EE  6E2F               	movwf	(btemp+10)^0,c
  3774  0188F0  0EFF               	movlw	-1
  3775  0188F2  006F FF8C  F030    	movff	plusw1,btemp+11
  3776  0188F8  0EFF               	movlw	255
  3777  0188FA  2230               	addwfc	(btemp+11)^0,f,c
  3778  0188FC  0060  F0BC  F1F5   	movff	btemp+10,_seed
  3779  018902  0060  F0C0  F1F6   	movff	btemp+11,_seed+1
  3780  018908  0101               	movlb	1	; () banked
  3781  01890A  6BF7               	clrf	(_seed+2)& (0+255),b
  3782  01890C  6BF8               	clrf	(_seed+3)& (0+255),b
  3783  01890E  6BF9               	clrf	(_seed+4)& (0+255),b
  3784  018910  6BFA               	clrf	(_seed+5)& (0+255),b
  3785  018912  6BFB               	clrf	(_seed+6)& (0+255),b
  3786  018914  6BFC               	clrf	(_seed+7)& (0+255),b
  3787                           
  3788                           ; BSR set to: 1
  3789                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3790  018916  52E5               	movf	postdec1,f,c
  3791  018918  52E5               	movf	postdec1,f,c
  3792  01891A  0012               	return		;funcret
  3793  01891C                     __end_of_srand:
  3794                           	opt callstack 0
  3795                           
  3796 ;; *************** function _init_display *****************
  3797 ;; Defined at:
  3798 ;;		line 37 in file "eadog.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1  [STACK] void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/2
  3809 ;;		On exit  : 3F/3D
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:   12
  3819 ;; This function calls:
  3820 ;;		_ringBufS_init
  3821 ;;		_send_lcd_cmd
  3822 ;;		_send_lcd_cmd_long
  3823 ;;		_wdtdelay
  3824 ;; This function is called by:
  3825 ;;		_main
  3826 ;; This function uses a reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text7
  3830  0172B6                     __ptext7:
  3831                           	opt callstack 0
  3832  0172B6                     _init_display:
  3833                           	opt callstack 18
  3834                           
  3835                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3836                           
  3837                           ; BSR set to: 1
  3838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3839                           ;incstack = 0
  3840  0172B6  0E43               	movlw	low _ring_buf1
  3841  0172B8  0100               	movlb	0	; () banked
  3842  0172BA  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3843  0172BC  0E04               	movlw	high _ring_buf1
  3844  0172BE  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3845                           
  3846                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3847  0172C0  0E00               	movlw	low _ring_buf2
  3848  0172C2  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3849  0172C4  0E04               	movlw	high _ring_buf2
  3850  0172C6  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3854  0172C8  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  3855  0172CE  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  3856  0172D4  EC87  F0C5         	call	_ringBufS_init	;wreg free
  3857                           
  3858                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3859  0172D8  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  3860  0172DE  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  3861  0172E4  EC87  F0C5         	call	_ringBufS_init	;wreg free
  3862                           
  3863                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3864  0172E8  84BE               	bsf	190,2,c	;volatile
  3865  0172EA  84BC               	bsf	188,2,c	;volatile
  3866                           
  3867                           ;eadog.c: 48:  wdtdelay(350000);
  3868  0172EC  0E30               	movlw	48
  3869  0172EE  6EE6               	movwf	postinc1,c
  3870  0172F0  0E57               	movlw	87
  3871  0172F2  6EE6               	movwf	postinc1,c
  3872  0172F4  0E05               	movlw	5
  3873  0172F6  6EE6               	movwf	postinc1,c
  3874  0172F8  0E00               	movlw	0
  3875  0172FA  6EE6               	movwf	postinc1,c
  3876  0172FC  EC50  F0C1         	call	_wdtdelay	;wreg free
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;eadog.c: 49:  send_lcd_cmd(0x39);
  3880  017300  0E39               	movlw	57
  3881  017302  6EE6               	movwf	postinc1,c
  3882  017304  EC73  F0C5         	call	_send_lcd_cmd	;wreg free
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;eadog.c: 50:  send_lcd_cmd(0x1d);
  3886  017308  0E1D               	movlw	29
  3887  01730A  6EE6               	movwf	postinc1,c
  3888  01730C  EC73  F0C5         	call	_send_lcd_cmd	;wreg free
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;eadog.c: 51:  send_lcd_cmd(0x50);
  3892  017310  0E50               	movlw	80
  3893  017312  6EE6               	movwf	postinc1,c
  3894  017314  EC73  F0C5         	call	_send_lcd_cmd	;wreg free
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;eadog.c: 52:  send_lcd_cmd(0x6c);
  3898  017318  0E6C               	movlw	108
  3899  01731A  6EE6               	movwf	postinc1,c
  3900  01731C  EC73  F0C5         	call	_send_lcd_cmd	;wreg free
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;eadog.c: 53:  send_lcd_cmd(0x76);
  3904  017320  0E76               	movlw	118
  3905  017322  6EE6               	movwf	postinc1,c
  3906  017324  EC73  F0C5         	call	_send_lcd_cmd	;wreg free
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;eadog.c: 54:  send_lcd_cmd_long(0x38);
  3910  017328  0E38               	movlw	56
  3911  01732A  6EE6               	movwf	postinc1,c
  3912  01732C  EC5F  F0C5         	call	_send_lcd_cmd_long	;wreg free
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;eadog.c: 55:  send_lcd_cmd(0x0f);
  3916  017330  0E0F               	movlw	15
  3917  017332  6EE6               	movwf	postinc1,c
  3918  017334  EC73  F0C5         	call	_send_lcd_cmd	;wreg free
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;eadog.c: 56:  send_lcd_cmd_long(0x01);
  3922  017338  0E01               	movlw	1
  3923  01733A  6EE6               	movwf	postinc1,c
  3924  01733C  EC5F  F0C5         	call	_send_lcd_cmd_long	;wreg free
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;eadog.c: 57:  send_lcd_cmd(0x02);
  3928  017340  0E02               	movlw	2
  3929  017342  6EE6               	movwf	postinc1,c
  3930  017344  EC73  F0C5         	call	_send_lcd_cmd	;wreg free
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;eadog.c: 58:  send_lcd_cmd(0x06);
  3934  017348  0E06               	movlw	6
  3935  01734A  6EE6               	movwf	postinc1,c
  3936  01734C  EC73  F0C5         	call	_send_lcd_cmd	;wreg free
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;eadog.c: 59:  wdtdelay(30);
  3940  017350  0E1E               	movlw	30
  3941  017352  6EE6               	movwf	postinc1,c
  3942  017354  0E00               	movlw	0
  3943  017356  6EE6               	movwf	postinc1,c
  3944  017358  0E00               	movlw	0
  3945  01735A  6EE6               	movwf	postinc1,c
  3946  01735C  0E00               	movlw	0
  3947  01735E  6EE6               	movwf	postinc1,c
  3948  017360  EC50  F0C1         	call	_wdtdelay	;wreg free
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;eadog.c: 60:  SPI1CON2 = 0x02;
  3952  017364  0E02               	movlw	2
  3953  017366  013D               	movlb	61	; () banked
  3954  017368  6F16               	movwf	22,b	;volatile
  3955                           
  3956                           ; BSR set to: 61
  3957                           ;eadog.c: 61:  SPI1CON1 = 0x40;
  3958  01736A  0E40               	movlw	64
  3959  01736C  6F15               	movwf	21,b	;volatile
  3960                           
  3961                           ; BSR set to: 61
  3962                           ;eadog.c: 62:  SPI1CON0 = 0x83;
  3963  01736E  0E83               	movlw	131
  3964  017370  6F14               	movwf	20,b	;volatile
  3965                           
  3966                           ; BSR set to: 61
  3967                           ;eadog.c: 64:  SPI1INTFbits.SPI1TXUIF = 0;
  3968  017372  931A               	bcf	26,1,b	;volatile
  3969                           
  3970                           ; BSR set to: 61
  3971                           ;eadog.c: 65:  DMA1CON1bits.DMODE = 0;
  3972  017374  0E3F               	movlw	-193
  3973  017376  013B               	movlb	59	; () banked
  3974  017378  17FD               	andwf	253,f,b	;volatile
  3975                           
  3976                           ; BSR set to: 59
  3977                           ;eadog.c: 66:  DMA1CON1bits.DSTP = 0;
  3978  01737A  9BFD               	bcf	253,5,b	;volatile
  3979                           
  3980                           ; BSR set to: 59
  3981                           ;eadog.c: 67:  DMA1CON1bits.SMODE = 1;
  3982  01737C  51FD               	movf	253,w,b	;volatile
  3983  01737E  0BF9               	andlw	-7
  3984  017380  0902               	iorlw	2
  3985  017382  6FFD               	movwf	253,b	;volatile
  3986                           
  3987                           ; BSR set to: 59
  3988                           ;eadog.c: 68:  DMA1CON1bits.SMR = 0;
  3989  017384  0EE7               	movlw	-25
  3990  017386  17FD               	andwf	253,f,b	;volatile
  3991                           
  3992                           ; BSR set to: 59
  3993                           ;eadog.c: 69:  DMA1CON1bits.SSTP = 1;
  3994  017388  81FD               	bsf	253,0,b	;volatile
  3995                           
  3996                           ; BSR set to: 59
  3997                           ;eadog.c: 70:  DMA1SSA = (uint32_t) & ring_buf1;
  3998  01738A  0E43               	movlw	low _ring_buf1
  3999  01738C  6FF9               	movwf	249,b	;volatile
  4000  01738E  0E04               	movlw	high _ring_buf1
  4001  017390  6FFA               	movwf	250,b	;volatile
  4002  017392  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4003  017394  6FFB               	movwf	251,b	;volatile
  4004                           
  4005                           ; BSR set to: 59
  4006                           ;eadog.c: 71:  DMA1CON0bits.DGO = 0;
  4007  017396  9BFC               	bcf	252,5,b	;volatile
  4008                           
  4009                           ; BSR set to: 59
  4010                           ;eadog.c: 72:  SPI1INTFbits.SPI1TXUIF = 1;
  4011  017398  013D               	movlb	61	; () banked
  4012  01739A  831A               	bsf	26,1,b	;volatile
  4013                           
  4014                           ; BSR set to: 61
  4015                           ;eadog.c: 73:  LATEbits.LATE2 = 0;
  4016  01739C  94BE               	bcf	190,2,c	;volatile
  4017                           
  4018                           ; BSR set to: 61
  4019                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4020  01739E  0012               	return		;funcret
  4021  0173A0                     __end_of_init_display:
  4022                           	opt callstack 0
  4023                           
  4024 ;; *************** function _send_lcd_cmd_long *****************
  4025 ;; Defined at:
  4026 ;;		line 117 in file "eadog.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  cmd             1  [STACK] const unsigned char 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1  [STACK] void 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4035 ;; Tracked objects:
  4036 ;;		On entry : 3F/0
  4037 ;;		On exit  : 3F/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:   11
  4047 ;; This function calls:
  4048 ;;		_SPI1_Exchange8bit
  4049 ;;		_wdtdelay
  4050 ;; This function is called by:
  4051 ;;		_init_display
  4052 ;; This function uses a reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text8
  4056  018ABE                     __ptext8:
  4057                           	opt callstack 0
  4058  018ABE                     _send_lcd_cmd_long:
  4059                           	opt callstack 18
  4060                           
  4061                           ; BSR set to: 61
  4062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4063                           ;incstack = 0
  4064                           ;eadog.c: 117: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 118: {;eadog.c:
      +                           119:  do { LATCbits.LATC1 = 0; } while(0);
  4065  018ABE  92BC               	bcf	188,1,c	;volatile
  4066                           
  4067                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  4068  018AC0  94BC               	bcf	188,2,c	;volatile
  4069                           
  4070                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  4071                           ;stkvar	_cmd @ sp[(0)+-1]
  4072  018AC2  0EFF               	movlw	-1
  4073  018AC4  50E3               	movf	plusw1,w,c
  4074  018AC6  6EE6               	movwf	postinc1,c
  4075  018AC8  EC8F  F0C7         	call	_SPI1_Exchange8bit	;wreg free
  4076                           
  4077                           ; BSR set to: 57
  4078                           ;eadog.c: 122:  wdtdelay(800);
  4079  018ACC  0E20               	movlw	32
  4080  018ACE  6EE6               	movwf	postinc1,c
  4081  018AD0  0E03               	movlw	3
  4082  018AD2  6EE6               	movwf	postinc1,c
  4083  018AD4  0E00               	movlw	0
  4084  018AD6  6EE6               	movwf	postinc1,c
  4085  018AD8  0E00               	movlw	0
  4086  018ADA  6EE6               	movwf	postinc1,c
  4087  018ADC  EC50  F0C1         	call	_wdtdelay	;wreg free
  4088                           
  4089                           ; BSR set to: 0
  4090  018AE0  82BC               	bsf	188,1,c	;volatile
  4091                           
  4092                           ; BSR set to: 0
  4093                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4094  018AE2  52E5               	movf	postdec1,f,c
  4095  018AE4  0012               	return		;funcret
  4096  018AE6                     __end_of_send_lcd_cmd_long:
  4097                           	opt callstack 0
  4098                           
  4099 ;; *************** function _send_lcd_cmd *****************
  4100 ;; Defined at:
  4101 ;;		line 105 in file "eadog.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  cmd             1  [STACK] const unsigned char 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1  [STACK] void 
  4108 ;; Registers used:
  4109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4110 ;; Tracked objects:
  4111 ;;		On entry : 3F/0
  4112 ;;		On exit  : 3F/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4119 ;;Total ram usage:        0 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:   11
  4122 ;; This function calls:
  4123 ;;		_SPI1_Exchange8bit
  4124 ;;		_wdtdelay
  4125 ;; This function is called by:
  4126 ;;		_init_display
  4127 ;; This function uses a reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text9
  4131  018AE6                     __ptext9:
  4132                           	opt callstack 0
  4133  018AE6                     _send_lcd_cmd:
  4134                           	opt callstack 18
  4135                           
  4136                           ; BSR set to: 0
  4137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4138                           ;incstack = 0
  4139                           ;eadog.c: 105: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 106: {;eadog.c: 107:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4140  018AE6  92BC               	bcf	188,1,c	;volatile
  4141                           
  4142                           ;eadog.c: 108:  do { LATCbits.LATC2 = 0; } while(0);
  4143  018AE8  94BC               	bcf	188,2,c	;volatile
  4144                           
  4145                           ;eadog.c: 109:  SPI1_Exchange8bit(cmd);
  4146                           ;stkvar	_cmd @ sp[(0)+-1]
  4147  018AEA  0EFF               	movlw	-1
  4148  018AEC  50E3               	movf	plusw1,w,c
  4149  018AEE  6EE6               	movwf	postinc1,c
  4150  018AF0  EC8F  F0C7         	call	_SPI1_Exchange8bit	;wreg free
  4151                           
  4152                           ; BSR set to: 57
  4153                           ;eadog.c: 110:  wdtdelay(30);
  4154  018AF4  0E1E               	movlw	30
  4155  018AF6  6EE6               	movwf	postinc1,c
  4156  018AF8  0E00               	movlw	0
  4157  018AFA  6EE6               	movwf	postinc1,c
  4158  018AFC  0E00               	movlw	0
  4159  018AFE  6EE6               	movwf	postinc1,c
  4160  018B00  0E00               	movlw	0
  4161  018B02  6EE6               	movwf	postinc1,c
  4162  018B04  EC50  F0C1         	call	_wdtdelay	;wreg free
  4163                           
  4164                           ; BSR set to: 0
  4165  018B08  82BC               	bsf	188,1,c	;volatile
  4166                           
  4167                           ; BSR set to: 0
  4168                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4169  018B0A  52E5               	movf	postdec1,f,c
  4170  018B0C  0012               	return		;funcret
  4171  018B0E                     __end_of_send_lcd_cmd:
  4172                           	opt callstack 0
  4173                           
  4174 ;; *************** function _SPI1_Exchange8bit *****************
  4175 ;; Defined at:
  4176 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  data            1  [STACK] unsigned char 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1  [STACK] unsigned char 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 3F/39
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:   10
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_send_lcd_cmd
  4201 ;;		_send_lcd_cmd_long
  4202 ;; This function uses a reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text10
  4206  018F1E                     __ptext10:
  4207                           	opt callstack 0
  4208  018F1E                     _SPI1_Exchange8bit:
  4209                           	opt callstack 18
  4210                           
  4211                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4212                           
  4213                           ; BSR set to: 0
  4214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4215                           ;incstack = 0
  4216  018F1E  0E01               	movlw	1
  4217  018F20  013D               	movlb	61	; () banked
  4218  018F22  6F12               	movwf	18,b	;volatile
  4219                           
  4220                           ; BSR set to: 61
  4221                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4222                           ;stkvar	_data @ sp[(0)+-1]
  4223  018F24  0EFF               	movlw	-1
  4224  018F26  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4225  018F2C                     l837:
  4226                           
  4227                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4228  018F2C  0139               	movlb	57	; () banked
  4229  018F2E  A9A2               	btfss	162,4,b	;volatile
  4230  018F30  D7FD               	goto	l837
  4231                           
  4232                           ; BSR set to: 57
  4233                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4234  018F32  006F F440  F025    	movff	15632,btemp	;volatile
  4235                           
  4236                           ; BSR set to: 57
  4237                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4238  018F38  52E5               	movf	postdec1,f,c
  4239  018F3A  0012               	return		;funcret
  4240  018F3C                     __end_of_SPI1_Exchange8bit:
  4241                           	opt callstack 0
  4242                           
  4243 ;; *************** function _ringBufS_init *****************
  4244 ;; Defined at:
  4245 ;;		line 22 in file "ringbufs.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  _this           2  [STACK] PTR volatile struct ring
  4248 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1  [STACK] void 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:   11
  4267 ;; This function calls:
  4268 ;;		_memset
  4269 ;; This function is called by:
  4270 ;;		_init_display
  4271 ;; This function uses a reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text11
  4275  018B0E                     __ptext11:
  4276                           	opt callstack 0
  4277  018B0E                     _ringBufS_init:
  4278                           	opt callstack 18
  4279                           
  4280                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4281                           
  4282                           ; BSR set to: 57
  4283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4284                           ;incstack = 0
  4285  018B0E  0E43               	movlw	67
  4286  018B10  6EE6               	movwf	postinc1,c
  4287  018B12  0E00               	movlw	0
  4288  018B14  6EE6               	movwf	postinc1,c
  4289  018B16  0E00               	movlw	0
  4290  018B18  6EE6               	movwf	postinc1,c
  4291  018B1A  0E00               	movlw	0
  4292  018B1C  6EE6               	movwf	postinc1,c
  4293                           
  4294                           ;stkvar	__this @ sp[(-4)+-2]
  4295  018B1E  0EFA               	movlw	-6
  4296  018B20  006F FF8F FFE6     	movff	plusw1,postinc1
  4297  018B26  006F FF8F FFE6     	movff	plusw1,postinc1
  4298  018B2C  EC58  F0A7         	call	_memset	;wreg free
  4299                           
  4300                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4301  018B30  52E5               	movf	postdec1,f,c
  4302  018B32  52E5               	movf	postdec1,f,c
  4303  018B34  0012               	return		;funcret
  4304  018B36                     __end_of_ringBufS_init:
  4305                           	opt callstack 0
  4306                           
  4307 ;; *************** function _init_bsoc *****************
  4308 ;; Defined at:
  4309 ;;		line 15 in file "bsoc.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1  [STACK] void 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  4318 ;; Tracked objects:
  4319 ;;		On entry : 3F/1
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:   11
  4330 ;; This function calls:
  4331 ;;		_TMR3_SetInterruptHandler
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text12
  4338  0190D6                     __ptext12:
  4339                           	opt callstack 0
  4340  0190D6                     _init_bsoc:
  4341                           	opt callstack 19
  4342                           
  4343                           ;bsoc.c: 17:  TMR3_SetInterruptHandler(calc_bsoc);
  4344                           
  4345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4346                           ;incstack = 0
  4347  0190D6  0E08               	movlw	low _calc_bsoc
  4348  0190D8  6EE6               	movwf	postinc1,c
  4349  0190DA  0E90               	movlw	high _calc_bsoc
  4350  0190DC  6EE6               	movwf	postinc1,c
  4351  0190DE  0E01               	movlw	low (_calc_bsoc shr (0+16))
  4352  0190E0  6EE6               	movwf	postinc1,c
  4353  0190E2  EC3B  F0C6         	call	_TMR3_SetInterruptHandler	;wreg free
  4354                           
  4355                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4356  0190E6  0012               	return		;funcret
  4357  0190E8                     __end_of_init_bsoc:
  4358                           	opt callstack 0
  4359                           
  4360 ;; *************** function _hid_display *****************
  4361 ;; Defined at:
  4362 ;;		line 17 in file "hid.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  h               1  [STACK] PTR struct H_data
  4365 ;;		 -> H(7), 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1  [STACK] PTR struct H_data
  4370 ;; Registers used:
  4371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4372 ;; Tracked objects:
  4373 ;;		On entry : 3F/39
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:   12
  4384 ;; This function calls:
  4385 ;;		_hid_input
  4386 ;; This function is called by:
  4387 ;;		_main
  4388 ;; This function uses a reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text13
  4392  0170C4                     __ptext13:
  4393                           	opt callstack 0
  4394  0170C4                     _hid_display:
  4395                           	opt callstack 18
  4396                           
  4397                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4398                           ;stkvar	_h @ sp[(0)+-1]
  4399                           
  4400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4401                           ;incstack = 0
  4402  0170C4  0EFF               	movlw	-1
  4403  0170C6  50E3               	movf	plusw1,w,c
  4404  0170C8  6EE6               	movwf	postinc1,c
  4405  0170CA  ECF2  F0BD         	call	_hid_input	;wreg free
  4406                           
  4407                           ;hid.c: 21:  switch (h->h_state) {
  4408  0170CE  D066               	goto	l9461
  4409  0170D0                     l9439:
  4410                           
  4411                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4412                           ;stkvar	_h @ sp[(0)+-1]
  4413  0170D0  0EFF               	movlw	-1
  4414  0170D2  50E3               	movf	plusw1,w,c
  4415  0170D4  6ED9               	movwf	fsr2l,c
  4416  0170D6  6ADA               	clrf	fsr2h,c
  4417  0170D8  0E01               	movlw	1
  4418  0170DA  26D9               	addwf	fsr2l,f,c
  4419  0170DC  0E01               	movlw	1
  4420  0170DE  6EDF               	movwf	indf2,c
  4421                           
  4422                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4423                           ;stkvar	_h @ sp[(0)+-1]
  4424  0170E0  0EFF               	movlw	-1
  4425  0170E2  50E3               	movf	plusw1,w,c
  4426  0170E4  6ED9               	movwf	fsr2l,c
  4427  0170E6  6ADA               	clrf	fsr2h,c
  4428  0170E8  0E00               	movlw	0
  4429  0170EA  6EDF               	movwf	indf2,c
  4430                           
  4431                           ;hid.c: 25:   h->wait_enter = 1;
  4432                           ;stkvar	_h @ sp[(0)+-1]
  4433  0170EC  0EFF               	movlw	-1
  4434  0170EE  50E3               	movf	plusw1,w,c
  4435  0170F0  6ED9               	movwf	fsr2l,c
  4436  0170F2  6ADA               	clrf	fsr2h,c
  4437  0170F4  0E04               	movlw	4
  4438  0170F6  26D9               	addwf	fsr2l,f,c
  4439  0170F8  0E01               	movlw	1
  4440  0170FA  6EDF               	movwf	indf2,c
  4441                           
  4442                           ;hid.c: 26:   h->wait_select = 1;
  4443                           ;stkvar	_h @ sp[(0)+-1]
  4444  0170FC  0EFF               	movlw	-1
  4445  0170FE  50E3               	movf	plusw1,w,c
  4446  017100  6ED9               	movwf	fsr2l,c
  4447  017102  6ADA               	clrf	fsr2h,c
  4448  017104  0E02               	movlw	2
  4449  017106  26D9               	addwf	fsr2l,f,c
  4450  017108  0E01               	movlw	1
  4451  01710A  6EDF               	movwf	indf2,c
  4452                           
  4453                           ;hid.c: 27:   h->select_p = SW_OFF;
  4454                           ;stkvar	_h @ sp[(0)+-1]
  4455  01710C  0EFF               	movlw	-1
  4456  01710E  50E3               	movf	plusw1,w,c
  4457  017110  6ED9               	movwf	fsr2l,c
  4458  017112  6ADA               	clrf	fsr2h,c
  4459  017114  0E03               	movlw	3
  4460  017116  26D9               	addwf	fsr2l,f,c
  4461  017118  0E00               	movlw	0
  4462  01711A  6EDF               	movwf	indf2,c
  4463                           
  4464                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4465                           ;stkvar	_h @ sp[(0)+-1]
  4466  01711C  0EFF               	movlw	-1
  4467  01711E  50E3               	movf	plusw1,w,c
  4468  017120  6ED9               	movwf	fsr2l,c
  4469  017122  6ADA               	clrf	fsr2h,c
  4470  017124  0E05               	movlw	5
  4471  017126  26D9               	addwf	fsr2l,f,c
  4472  017128  0E00               	movlw	0
  4473  01712A  D036               	goto	L1
  4474  01712C                     l9451:
  4475                           
  4476                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4477                           ;stkvar	_h @ sp[(0)+-1]
  4478  01712C  0EFF               	movlw	-1
  4479  01712E  50E3               	movf	plusw1,w,c
  4480  017130  6ED9               	movwf	fsr2l,c
  4481  017132  6ADA               	clrf	fsr2h,c
  4482  017134  0E02               	movlw	2
  4483  017136  26D9               	addwf	fsr2l,f,c
  4484  017138  50DF               	movf	indf2,w,c
  4485  01713A  A4D8               	btfss	status,2,c
  4486  01713C  D042               	goto	l1828
  4487                           
  4488                           ;stkvar	_h @ sp[(0)+-1]
  4489  01713E  0EFF               	movlw	-1
  4490  017140  50E3               	movf	plusw1,w,c
  4491  017142  6ED9               	movwf	fsr2l,c
  4492  017144  6ADA               	clrf	fsr2h,c
  4493  017146  0E03               	movlw	3
  4494  017148  26D9               	addwf	fsr2l,f,c
  4495  01714A  50DF               	movf	indf2,w,c
  4496  01714C  A4D8               	btfss	status,2,c
  4497  01714E  D039               	goto	l1828
  4498                           
  4499                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4500                           ;stkvar	_h @ sp[(0)+-1]
  4501  017150  0EFF               	movlw	-1
  4502  017152  50E3               	movf	plusw1,w,c
  4503  017154  6ED9               	movwf	fsr2l,c
  4504  017156  6ADA               	clrf	fsr2h,c
  4505  017158  0E06               	movlw	6
  4506  01715A  26D9               	addwf	fsr2l,f,c
  4507                           
  4508                           ;stkvar	_h @ sp[(0)+-1]
  4509  01715C  0EFF               	movlw	-1
  4510  01715E  50E3               	movf	plusw1,w,c
  4511  017160  6EE9               	movwf	fsr0l,c
  4512  017162  6AEA               	clrf	fsr0h,c
  4513  017164  0E06               	movlw	6
  4514  017166  26E9               	addwf	fsr0l,f,c
  4515  017168  2AEF               	incf	indf0,f,c
  4516  01716A  50EF               	movf	indf0,w,c
  4517  01716C  0B03               	andlw	3
  4518  01716E  6EDF               	movwf	indf2,c
  4519                           
  4520                           ;hid.c: 34:    h->hid_display = h->sequence;
  4521                           ;stkvar	_h @ sp[(0)+-1]
  4522  017170  0EFF               	movlw	-1
  4523  017172  50E3               	movf	plusw1,w,c
  4524  017174  6ED9               	movwf	fsr2l,c
  4525  017176  6ADA               	clrf	fsr2h,c
  4526  017178  0E06               	movlw	6
  4527  01717A  26D9               	addwf	fsr2l,f,c
  4528                           
  4529                           ;stkvar	_h @ sp[(0)+-1]
  4530  01717C  0EFF               	movlw	-1
  4531  01717E  50E3               	movf	plusw1,w,c
  4532  017180  6EE9               	movwf	fsr0l,c
  4533  017182  6AEA               	clrf	fsr0h,c
  4534  017184  006F FF7F FFEF     	movff	indf2,indf0
  4535                           
  4536                           ;hid.c: 35:    h->wait_select = 1;
  4537                           ;stkvar	_h @ sp[(0)+-1]
  4538  01718A  0EFF               	movlw	-1
  4539  01718C  50E3               	movf	plusw1,w,c
  4540  01718E  6ED9               	movwf	fsr2l,c
  4541  017190  6ADA               	clrf	fsr2h,c
  4542  017192  0E02               	movlw	2
  4543  017194  26D9               	addwf	fsr2l,f,c
  4544  017196  0E01               	movlw	1
  4545  017198                     L1:
  4546  017198  6EDF               	movwf	indf2,c
  4547  01719A  D013               	goto	l1828
  4548  01719C                     l9461:
  4549                           
  4550                           ;stkvar	_h @ sp[(0)+-1]
  4551  01719C  0EFF               	movlw	-1
  4552  01719E  50E3               	movf	plusw1,w,c
  4553  0171A0  6ED9               	movwf	fsr2l,c
  4554  0171A2  6ADA               	clrf	fsr2h,c
  4555  0171A4  0E01               	movlw	1
  4556  0171A6  26D9               	addwf	fsr2l,f,c
  4557  0171A8  50DF               	movf	indf2,w,c
  4558  0171AA  6E2F               	movwf	(btemp+10)^0,c
  4559  0171AC  6A30               	clrf	(btemp+11)^0,c
  4560                           
  4561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4562                           ; Switch size 1, requested type "simple"
  4563                           ; Number of cases is 1, Range of values is 0 to 0
  4564                           ; switch strategies available:
  4565                           ; Name         Instructions Cycles
  4566                           ; simple_byte            4     3 (average)
  4567                           ;	Chosen strategy is simple_byte
  4568  0171AE  5030               	movf	(btemp+11)^0,w,c
  4569  0171B0  0A00               	xorlw	0	; case 0
  4570  0171B2  A4D8               	btfss	status,2,c
  4571  0171B4  D7BB               	goto	l9451
  4572                           
  4573                           ; Switch size 1, requested type "simple"
  4574                           ; Number of cases is 2, Range of values is 0 to 1
  4575                           ; switch strategies available:
  4576                           ; Name         Instructions Cycles
  4577                           ; simple_byte            7     4 (average)
  4578                           ;	Chosen strategy is simple_byte
  4579  0171B6  502F               	movf	(btemp+10)^0,w,c
  4580  0171B8  0A00               	xorlw	0	; case 0
  4581  0171BA  B4D8               	btfsc	status,2,c
  4582  0171BC  D789               	goto	l9439
  4583  0171BE  0A01               	xorlw	1	; case 1
  4584  0171C0  D7B5               	goto	l9451
  4585  0171C2                     l1828:
  4586                           
  4587                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4588  0171C2  52E5               	movf	postdec1,f,c
  4589  0171C4  0012               	return		;funcret
  4590  0171C6                     __end_of_hid_display:
  4591                           	opt callstack 0
  4592                           
  4593 ;; *************** function _hid_input *****************
  4594 ;; Defined at:
  4595 ;;		line 3 in file "hid.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  h               1  [STACK] PTR struct H_data
  4598 ;;		 -> H(7), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1  [STACK] PTR struct H_data
  4603 ;; Registers used:
  4604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/39
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4614 ;;Total ram usage:        0 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:   11
  4617 ;; This function calls:
  4618 ;;		_get_switch
  4619 ;; This function is called by:
  4620 ;;		_hid_display
  4621 ;; This function uses a reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text14
  4625  017BE4                     __ptext14:
  4626                           	opt callstack 0
  4627  017BE4                     _hid_input:
  4628                           	opt callstack 18
  4629                           
  4630                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4631                           
  4632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4633                           ;incstack = 0
  4634  017BE4  0E02               	movlw	2
  4635  017BE6  6EE6               	movwf	postinc1,c
  4636  017BE8  EC9B  F0C5         	call	_get_switch	;wreg free
  4637  017BEC  5025               	movf	btemp^0,w,c
  4638  017BEE  B4D8               	btfsc	status,2,c
  4639  017BF0  D01C               	goto	l9207
  4640                           
  4641                           ;hid.c: 6:   h->wait_select = 0;
  4642                           ;stkvar	_h @ sp[(0)+-1]
  4643  017BF2  0EFF               	movlw	-1
  4644  017BF4  50E3               	movf	plusw1,w,c
  4645  017BF6  6ED9               	movwf	fsr2l,c
  4646  017BF8  6ADA               	clrf	fsr2h,c
  4647  017BFA  0E02               	movlw	2
  4648  017BFC  26D9               	addwf	fsr2l,f,c
  4649  017BFE  0E00               	movlw	0
  4650  017C00  6EDF               	movwf	indf2,c
  4651                           
  4652                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4653  017C02  0E02               	movlw	2
  4654  017C04  6EE6               	movwf	postinc1,c
  4655  017C06  EC9B  F0C5         	call	_get_switch	;wreg free
  4656  017C0A  5025               	movf	btemp^0,w,c
  4657  017C0C  B4D8               	btfsc	status,2,c
  4658  017C0E  D003               	goto	u8540
  4659  017C10  6A30               	clrf	(btemp+11)^0,c
  4660  017C12  2A30               	incf	(btemp+11)^0,f,c
  4661  017C14  D001               	goto	u8558
  4662  017C16                     u8540:
  4663  017C16  6A30               	clrf	(btemp+11)^0,c
  4664  017C18                     u8558:
  4665                           
  4666                           ;stkvar	_h @ sp[(0)+-1]
  4667  017C18  0EFF               	movlw	-1
  4668  017C1A  50E3               	movf	plusw1,w,c
  4669  017C1C  6ED9               	movwf	fsr2l,c
  4670  017C1E  6ADA               	clrf	fsr2h,c
  4671  017C20  0E03               	movlw	3
  4672  017C22  26D9               	addwf	fsr2l,f,c
  4673  017C24  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4674  017C2A                     l9207:
  4675                           
  4676                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4677  017C2A  0E03               	movlw	3
  4678  017C2C  6EE6               	movwf	postinc1,c
  4679  017C2E  EC9B  F0C5         	call	_get_switch	;wreg free
  4680  017C32  5025               	movf	btemp^0,w,c
  4681  017C34  B4D8               	btfsc	status,2,c
  4682  017C36  D01C               	goto	l1819
  4683                           
  4684                           ;hid.c: 11:   h->wait_enter = 0;
  4685                           ;stkvar	_h @ sp[(0)+-1]
  4686  017C38  0EFF               	movlw	-1
  4687  017C3A  50E3               	movf	plusw1,w,c
  4688  017C3C  6ED9               	movwf	fsr2l,c
  4689  017C3E  6ADA               	clrf	fsr2h,c
  4690  017C40  0E04               	movlw	4
  4691  017C42  26D9               	addwf	fsr2l,f,c
  4692  017C44  0E00               	movlw	0
  4693  017C46  6EDF               	movwf	indf2,c
  4694                           
  4695                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4696  017C48  0E03               	movlw	3
  4697  017C4A  6EE6               	movwf	postinc1,c
  4698  017C4C  EC9B  F0C5         	call	_get_switch	;wreg free
  4699  017C50  5025               	movf	btemp^0,w,c
  4700  017C52  B4D8               	btfsc	status,2,c
  4701  017C54  D003               	goto	u8570
  4702  017C56  6A30               	clrf	(btemp+11)^0,c
  4703  017C58  2A30               	incf	(btemp+11)^0,f,c
  4704  017C5A  D001               	goto	u8588
  4705  017C5C                     u8570:
  4706  017C5C  6A30               	clrf	(btemp+11)^0,c
  4707  017C5E                     u8588:
  4708                           
  4709                           ;stkvar	_h @ sp[(0)+-1]
  4710  017C5E  0EFF               	movlw	-1
  4711  017C60  50E3               	movf	plusw1,w,c
  4712  017C62  6ED9               	movwf	fsr2l,c
  4713  017C64  6ADA               	clrf	fsr2h,c
  4714  017C66  0E05               	movlw	5
  4715  017C68  26D9               	addwf	fsr2l,f,c
  4716  017C6A  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4717  017C70                     l1819:
  4718                           
  4719                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4720  017C70  52E5               	movf	postdec1,f,c
  4721  017C72  0012               	return		;funcret
  4722  017C74                     __end_of_hid_input:
  4723                           	opt callstack 0
  4724                           
  4725 ;; *************** function _get_switch *****************
  4726 ;; Defined at:
  4727 ;;		line 18 in file "dio.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  i               1  [STACK] unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1  [STACK] enum E17030
  4734 ;; Registers used:
  4735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/2
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:   10
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_main
  4752 ;;		_hid_input
  4753 ;; This function uses a reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text15
  4757  018B36                     __ptext15:
  4758                           	opt callstack 0
  4759  018B36                     _get_switch:
  4760                           	opt callstack 18
  4761                           
  4762                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4763                           ;stkvar	_i @ sp[(0)+-1]
  4764                           
  4765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4766                           ;incstack = 0
  4767  018B36  0EFF               	movlw	-1
  4768  018B38  006F FF8C  F025    	movff	plusw1,btemp
  4769  018B3E  0E03               	movlw	3
  4770  018B40  6425               	cpfsgt	btemp^0,c
  4771  018B42  D002               	goto	l8529
  4772                           
  4773                           ;dio.c: 21:   return SW_OFF;
  4774  018B44  0E00               	movlw	0
  4775  018B46  D008               	goto	L2
  4776  018B48                     l8529:
  4777                           
  4778                           ;dio.c: 23:  return S.button[i].sw;
  4779                           ;stkvar	_i @ sp[(0)+-1]
  4780  018B48  0EFF               	movlw	-1
  4781  018B4A  50E3               	movf	plusw1,w,c
  4782  018B4C  0D05               	mullw	5
  4783  018B4E  50F3               	movf	243,w,c
  4784  018B50  0F60               	addlw	low _S
  4785  018B52  6ED9               	movwf	fsr2l,c
  4786  018B54  6ADA               	clrf	fsr2h,c
  4787  018B56  50DF               	movf	indf2,w,c
  4788  018B58                     L2:
  4789  018B58  6E25               	movwf	btemp^0,c
  4790                           
  4791                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4792  018B5A  52E5               	movf	postdec1,f,c
  4793  018B5C  0012               	return		;funcret
  4794  018B5E                     __end_of_get_switch:
  4795                           	opt callstack 0
  4796                           
  4797 ;; *************** function _eaDogM_WriteCommand *****************
  4798 ;; Defined at:
  4799 ;;		line 163 in file "eadog.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  cmd             1  [STACK] const unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1  [STACK] void 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4808 ;; Tracked objects:
  4809 ;;		On entry : 3F/3D
  4810 ;;		On exit  : 3F/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4817 ;;Total ram usage:        0 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:   20
  4820 ;; This function calls:
  4821 ;;		_send_lcd_cmd_dma
  4822 ;; This function is called by:
  4823 ;;		_main
  4824 ;; This function uses a reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text16
  4828  0190F8                     __ptext16:
  4829                           	opt callstack 0
  4830  0190F8                     _eaDogM_WriteCommand:
  4831                           	opt callstack 10
  4832                           
  4833                           ;eadog.c: 163: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 164: {;eadog.c: 165:
      +                            send_lcd_cmd_dma(cmd);
  4834                           ;stkvar	_cmd @ sp[(0)+-1]
  4835                           
  4836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4837                           ;incstack = 0
  4838  0190F8  0EFF               	movlw	-1
  4839  0190FA  50E3               	movf	plusw1,w,c
  4840  0190FC  6EE6               	movwf	postinc1,c
  4841  0190FE  ECD7  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  4842                           
  4843                           ; BSR set to: 0
  4844                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4845  019102  52E5               	movf	postdec1,f,c
  4846  019104  0012               	return		;funcret
  4847  019106                     __end_of_eaDogM_WriteCommand:
  4848                           	opt callstack 0
  4849                           
  4850 ;; *************** function _convert_adc_data *****************
  4851 ;; Defined at:
  4852 ;;		line 40 in file "mbmc.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  i               1  [STACK] unsigned char 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1  [STACK] void 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/1
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:   13
  4873 ;; This function calls:
  4874 ;;		_conv_raw_result
  4875 ;;		_lp_filter
  4876 ;; This function is called by:
  4877 ;;		_main
  4878 ;; This function uses a reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text17
  4882  0176D2                     __ptext17:
  4883                           	opt callstack 0
  4884  0176D2                     _convert_adc_data:
  4885                           	opt callstack 0
  4886                           
  4887                           ; BSR set to: 0
  4888                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4889  0176D2  52E6               	movf	postinc1,f,c
  4890                           
  4891                           ;mbmc.c: 42:  uint8_t i = 0;
  4892                           ;stkvar	_i @ sp[(-1)+0]
  4893                           
  4894                           ;incstack = 0
  4895  0176D4  0EFF               	movlw	-1
  4896  0176D6  6AE3               	clrf	plusw1,c
  4897  0176D8                     l9427:
  4898                           
  4899                           ;mbmc.c: 45:   if (V.calib) {
  4900  0176D8  0102               	movlb	2	; () banked
  4901  0176DA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4902  0176DC  B4D8               	btfsc	status,2,c
  4903  0176DE  D01B               	goto	l9431
  4904                           
  4905                           ; BSR set to: 2
  4906                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4907  0176E0  0E01               	movlw	1
  4908  0176E2  6EE6               	movwf	postinc1,c
  4909                           
  4910                           ;stkvar	_i @ sp[(-2)+0]
  4911  0176E4  0EFE               	movlw	-2
  4912  0176E6  50E3               	movf	plusw1,w,c
  4913  0176E8  6EE6               	movwf	postinc1,c
  4914  0176EA  0E01               	movlw	1
  4915  0176EC  6EE6               	movwf	postinc1,c
  4916                           
  4917                           ;stkvar	_i @ sp[(-4)+0]
  4918  0176EE  0EFC               	movlw	-4
  4919  0176F0  50E3               	movf	plusw1,w,c
  4920  0176F2  6EE6               	movwf	postinc1,c
  4921  0176F4  ECB8  F09D         	call	_conv_raw_result	;wreg free
  4922  0176F8  0060  F097  FFE6   	movff	btemp,postinc1
  4923  0176FE  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4924  017704  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4925  01770A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4926  017710  ECB6  F0B0         	call	_lp_filter	;wreg free
  4927  017714  D01A               	goto	L3
  4928  017716                     l9431:
  4929                           
  4930                           ; BSR set to: 2
  4931                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4932  017716  0E00               	movlw	0
  4933  017718  6EE6               	movwf	postinc1,c
  4934                           
  4935                           ;stkvar	_i @ sp[(-2)+0]
  4936  01771A  0EFE               	movlw	-2
  4937  01771C  50E3               	movf	plusw1,w,c
  4938  01771E  6EE6               	movwf	postinc1,c
  4939  017720  0E00               	movlw	0
  4940  017722  6EE6               	movwf	postinc1,c
  4941                           
  4942                           ;stkvar	_i @ sp[(-4)+0]
  4943  017724  0EFC               	movlw	-4
  4944  017726  50E3               	movf	plusw1,w,c
  4945  017728  6EE6               	movwf	postinc1,c
  4946  01772A  ECB8  F09D         	call	_conv_raw_result	;wreg free
  4947  01772E  0060  F097  FFE6   	movff	btemp,postinc1
  4948  017734  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4949  01773A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4950  017740  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4951  017746  ECB6  F0B0         	call	_lp_filter	;wreg free
  4952  01774A                     L3:
  4953                           
  4954                           ;stkvar	_i @ sp[(-1)+0]
  4955  01774A  0EFF               	movlw	-1
  4956  01774C  50E3               	movf	plusw1,w,c
  4957  01774E  0D04               	mullw	4
  4958  017750  0E00               	movlw	low _C
  4959  017752  24F3               	addwf	243,w,c
  4960  017754  6ED9               	movwf	fsr2l,c
  4961  017756  0E01               	movlw	high _C
  4962  017758  20F4               	addwfc	prodh,w,c
  4963  01775A  6EDA               	movwf	fsr2h,c
  4964  01775C  0060  F097  FFDE   	movff	btemp,postinc2
  4965  017762  0060  F09B  FFDE   	movff	btemp+1,postinc2
  4966  017768  0060  F09F  FFDE   	movff	btemp+2,postinc2
  4967  01776E  0060  F0A3  FFDE   	movff	btemp+3,postinc2
  4968                           
  4969                           ;mbmc.c: 50:  } while (++i < 16);
  4970                           ;stkvar	_i @ sp[(-1)+0]
  4971  017774  0EFF               	movlw	-1
  4972  017776  2AE3               	incf	plusw1,f,c
  4973  017778  0EFF               	movlw	-1
  4974  01777A  006F FF8C  F025    	movff	plusw1,btemp
  4975  017780  0E0F               	movlw	15
  4976  017782  6425               	cpfsgt	btemp^0,c
  4977  017784  D7A9               	goto	l9427
  4978                           
  4979                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4980  017786  52E5               	movf	postdec1,f,c
  4981  017788  0012               	return		;funcret
  4982  01778A                     __end_of_convert_adc_data:
  4983                           	opt callstack 0
  4984                           
  4985 ;; *************** function _conv_raw_result *****************
  4986 ;; Defined at:
  4987 ;;		line 80 in file "daq.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  chan            1  [STACK] const enum E16136
  4990 ;;  to_what         1  [STACK] const enum E16198
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  4  [STACK] float 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4997 ;; Tracked objects:
  4998 ;;		On entry : 3F/2
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5006 ;;Total ram usage:        0 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:   12
  5009 ;; This function calls:
  5010 ;;		___fldiv
  5011 ;;		___flmul
  5012 ;;		___flsub
  5013 ;;		___xxtofl
  5014 ;;		_get_raw_result
  5015 ;;		_nanf
  5016 ;; This function is called by:
  5017 ;;		_convert_adc_data
  5018 ;; This function uses a reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text18
  5022  013B70                     __ptext18:
  5023                           	opt callstack 0
  5024  013B70                     _conv_raw_result:
  5025                           	opt callstack 17
  5026                           
  5027                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  5028                           
  5029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5030                           ;incstack = 0
  5031  013B70  D242               	goto	l9141
  5032  013B72                     l9087:
  5033                           
  5034                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  5035                           ;stkvar	_chan @ sp[(0)+-1]
  5036  013B72  0EFF               	movlw	-1
  5037  013B74  006F FF8C  F030    	movff	plusw1,btemp+11
  5038  013B7A  0E77               	movlw	119
  5039  013B7C  6E2D               	movwf	(btemp+8)^0,c
  5040  013B7E  0E3C               	movlw	60
  5041  013B80  6E2E               	movwf	(btemp+9)^0,c
  5042  013B82  2A30               	incf	(btemp+11)^0,f,c
  5043  013B84  D003               	goto	u8314
  5044  013B86                     u8315:
  5045  013B86  342E               	rlcf	(btemp+9)^0,w,c
  5046  013B88  322E               	rrcf	(btemp+9)^0,f,c
  5047  013B8A  322D               	rrcf	(btemp+8)^0,f,c
  5048  013B8C                     u8314:
  5049  013B8C  2E30               	decfsz	(btemp+11)^0,f,c
  5050  013B8E  D7FB               	goto	u8315
  5051  013B90  B02D               	btfsc	(btemp+8)^0,0,c
  5052  013B92  D007               	goto	l9093
  5053                           
  5054                           ;daq.c: 86:    return nanf("");
  5055  013B94  0E6B               	movlw	low (STR_39+18)
  5056  013B96  6EE6               	movwf	postinc1,c
  5057  013B98  0EFE               	movlw	high (STR_39+18)
  5058  013B9A  6EE6               	movwf	postinc1,c
  5059  013B9C  ECBF  F0C0         	call	_nanf	;wreg free
  5060  013BA0  D23A               	goto	l1691
  5061  013BA2                     l9093:
  5062                           
  5063                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  5064                           ;stkvar	_chan @ sp[(0)+-1]
  5065  013BA2  0EFF               	movlw	-1
  5066  013BA4  006F FF8C  F030    	movff	plusw1,btemp+11
  5067  013BAA  0E03               	movlw	3
  5068  013BAC  6E2D               	movwf	(btemp+8)^0,c
  5069  013BAE  0E00               	movlw	0
  5070  013BB0  6E2E               	movwf	(btemp+9)^0,c
  5071  013BB2  2A30               	incf	(btemp+11)^0,f,c
  5072  013BB4  D003               	goto	u8334
  5073  013BB6                     u8335:
  5074  013BB6  342E               	rlcf	(btemp+9)^0,w,c
  5075  013BB8  322E               	rrcf	(btemp+9)^0,f,c
  5076  013BBA  322D               	rrcf	(btemp+8)^0,f,c
  5077  013BBC                     u8334:
  5078  013BBC  2E30               	decfsz	(btemp+11)^0,f,c
  5079  013BBE  D7FB               	goto	u8335
  5080  013BC0  A02D               	btfss	(btemp+8)^0,0,c
  5081  013BC2  D0EB               	goto	l9107
  5082                           
  5083                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  5084                           ;stkvar	_chan @ sp[(0)+-1]
  5085  013BC4  0EFF               	movlw	-1
  5086  013BC6  006F FF8C  F030    	movff	plusw1,btemp+11
  5087  013BCC  0E01               	movlw	1
  5088  013BCE  6E2D               	movwf	(btemp+8)^0,c
  5089  013BD0  0E00               	movlw	0
  5090  013BD2  6E2E               	movwf	(btemp+9)^0,c
  5091  013BD4  2A30               	incf	(btemp+11)^0,f,c
  5092  013BD6  D003               	goto	u8354
  5093  013BD8                     u8355:
  5094  013BD8  342E               	rlcf	(btemp+9)^0,w,c
  5095  013BDA  322E               	rrcf	(btemp+9)^0,f,c
  5096  013BDC  322D               	rrcf	(btemp+8)^0,f,c
  5097  013BDE                     u8354:
  5098  013BDE  2E30               	decfsz	(btemp+11)^0,f,c
  5099  013BE0  D7FB               	goto	u8355
  5100  013BE2  A02D               	btfss	(btemp+8)^0,0,c
  5101  013BE4  D06D               	goto	l9103
  5102                           
  5103                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  5104  013BE6  0E7B               	movlw	123
  5105  013BE8  6EE6               	movwf	postinc1,c
  5106  013BEA  0E14               	movlw	20
  5107  013BEC  6EE6               	movwf	postinc1,c
  5108  013BEE  0EAE               	movlw	174
  5109  013BF0  6EE6               	movwf	postinc1,c
  5110  013BF2  0E3D               	movlw	61
  5111  013BF4  6EE6               	movwf	postinc1,c
  5112  013BF6  0060  F38C  F02D   	movff	_R+32,btemp+8	;volatile
  5113  013BFC  0060  F390  F02E   	movff	_R+33,btemp+9	;volatile
  5114  013C02  0E00               	movlw	0
  5115  013C04  BE2E               	btfsc	(btemp+9)^0,7,c
  5116  013C06  0EFF               	movlw	255
  5117  013C08  6E2F               	movwf	(btemp+10)^0,c
  5118  013C0A  6E30               	movwf	(btemp+11)^0,c
  5119  013C0C  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5120  013C12  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5121  013C18  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5122  013C1E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5123  013C24  0E01               	movlw	1
  5124  013C26  6EE6               	movwf	postinc1,c
  5125  013C28  ECD0  F0AE         	call	___xxtofl	;wreg free
  5126  013C2C  0060  F097  FFE6   	movff	btemp,postinc1
  5127  013C32  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5128  013C38  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5129  013C3E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5130                           
  5131                           ;stkvar	_chan @ sp[(-8)+-1]
  5132  013C44  0EF7               	movlw	-9
  5133  013C46  50E3               	movf	plusw1,w,c
  5134  013C48  6EE6               	movwf	postinc1,c
  5135  013C4A  EC9E  F0C7         	call	_get_raw_result	;wreg free
  5136  013C4E  0060  F094  F02F   	movff	btemp,btemp+10
  5137  013C54  0060  F098  F030   	movff	btemp+1,btemp+11
  5138  013C5A  502F               	movf	(btemp+10)^0,w,c
  5139  013C5C  6E29               	movwf	(btemp+4)^0,c
  5140  013C5E  5030               	movf	(btemp+11)^0,w,c
  5141  013C60  6E2A               	movwf	(btemp+5)^0,c
  5142  013C62  6A2B               	clrf	(btemp+6)^0,c
  5143  013C64  6A2C               	clrf	(btemp+7)^0,c
  5144  013C66  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5145  013C6C  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5146  013C72  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5147  013C78  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5148  013C7E  0E00               	movlw	0
  5149  013C80  6EE6               	movwf	postinc1,c
  5150  013C82  ECD0  F0AE         	call	___xxtofl	;wreg free
  5151  013C86  0060  F097  FFE6   	movff	btemp,postinc1
  5152  013C8C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5153  013C92  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5154  013C98  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5155  013C9E  ECBC  F0C2         	call	___flsub	;wreg free
  5156  013CA2  0060  F097  FFE6   	movff	btemp,postinc1
  5157  013CA8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5158  013CAE  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5159  013CB4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5160  013CBA  EC08  F093         	call	___flmul	;wreg free
  5161  013CBE  D1AB               	goto	l1691
  5162  013CC0                     l9103:
  5163                           
  5164                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5165  013CC0  0E29               	movlw	41
  5166  013CC2  6EE6               	movwf	postinc1,c
  5167  013CC4  0E5C               	movlw	92
  5168  013CC6  6EE6               	movwf	postinc1,c
  5169  013CC8  0E0F               	movlw	15
  5170  013CCA  6EE6               	movwf	postinc1,c
  5171  013CCC  0E3D               	movlw	61
  5172  013CCE  6EE6               	movwf	postinc1,c
  5173  013CD0  0060  F394  F02D   	movff	_R+34,btemp+8	;volatile
  5174  013CD6  0060  F398  F02E   	movff	_R+35,btemp+9	;volatile
  5175  013CDC  0E00               	movlw	0
  5176  013CDE  BE2E               	btfsc	(btemp+9)^0,7,c
  5177  013CE0  0EFF               	movlw	255
  5178  013CE2  6E2F               	movwf	(btemp+10)^0,c
  5179  013CE4  6E30               	movwf	(btemp+11)^0,c
  5180  013CE6  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5181  013CEC  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5182  013CF2  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5183  013CF8  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5184  013CFE  0E01               	movlw	1
  5185  013D00  6EE6               	movwf	postinc1,c
  5186  013D02  ECD0  F0AE         	call	___xxtofl	;wreg free
  5187  013D06  0060  F097  FFE6   	movff	btemp,postinc1
  5188  013D0C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5189  013D12  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5190  013D18  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5191                           
  5192                           ;stkvar	_chan @ sp[(-8)+-1]
  5193  013D1E  0EF7               	movlw	-9
  5194  013D20  50E3               	movf	plusw1,w,c
  5195  013D22  6EE6               	movwf	postinc1,c
  5196  013D24  EC9E  F0C7         	call	_get_raw_result	;wreg free
  5197  013D28  0060  F094  F02F   	movff	btemp,btemp+10
  5198  013D2E  0060  F098  F030   	movff	btemp+1,btemp+11
  5199  013D34  502F               	movf	(btemp+10)^0,w,c
  5200  013D36  6E29               	movwf	(btemp+4)^0,c
  5201  013D38  5030               	movf	(btemp+11)^0,w,c
  5202  013D3A  6E2A               	movwf	(btemp+5)^0,c
  5203  013D3C  6A2B               	clrf	(btemp+6)^0,c
  5204  013D3E  6A2C               	clrf	(btemp+7)^0,c
  5205  013D40  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5206  013D46  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5207  013D4C  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5208  013D52  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5209  013D58  0E00               	movlw	0
  5210  013D5A  6EE6               	movwf	postinc1,c
  5211  013D5C  ECD0  F0AE         	call	___xxtofl	;wreg free
  5212  013D60  0060  F097  FFE6   	movff	btemp,postinc1
  5213  013D66  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5214  013D6C  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5215  013D72  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5216  013D78  ECBC  F0C2         	call	___flsub	;wreg free
  5217  013D7C  0060  F097  FFE6   	movff	btemp,postinc1
  5218  013D82  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5219  013D88  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5220  013D8E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5221  013D94  EC08  F093         	call	___flmul	;wreg free
  5222  013D98  D13E               	goto	l1691
  5223  013D9A                     l9107:
  5224                           
  5225                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5226                           ;stkvar	_chan @ sp[(0)+-1]
  5227  013D9A  0EFF               	movlw	-1
  5228  013D9C  006F FF8C  F030    	movff	plusw1,btemp+11
  5229  013DA2  0E00               	movlw	0
  5230  013DA4  6E2D               	movwf	(btemp+8)^0,c
  5231  013DA6  0E08               	movlw	8
  5232  013DA8  6E2E               	movwf	(btemp+9)^0,c
  5233  013DAA  2A30               	incf	(btemp+11)^0,f,c
  5234  013DAC  D003               	goto	u8374
  5235  013DAE                     u8375:
  5236  013DAE  342E               	rlcf	(btemp+9)^0,w,c
  5237  013DB0  322E               	rrcf	(btemp+9)^0,f,c
  5238  013DB2  322D               	rrcf	(btemp+8)^0,f,c
  5239  013DB4                     u8374:
  5240  013DB4  2E30               	decfsz	(btemp+11)^0,f,c
  5241  013DB6  D7FB               	goto	u8375
  5242  013DB8  A02D               	btfss	(btemp+8)^0,0,c
  5243  013DBA  D008               	goto	l9115
  5244                           
  5245                           ;daq.c: 96:     return 25.0;
  5246  013DBC  0E00               	movlw	0
  5247  013DBE  6E25               	movwf	btemp^0,c
  5248  013DC0  0E00               	movlw	0
  5249  013DC2  6E26               	movwf	(btemp+1)^0,c
  5250  013DC4  0EC8               	movlw	200
  5251  013DC6  6E27               	movwf	(btemp+2)^0,c
  5252  013DC8  0E41               	movlw	65
  5253  013DCA  D113               	goto	L4
  5254  013DCC                     l9115:
  5255                           
  5256                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5257  013DCC  0E00               	movlw	0
  5258  013DCE  6EE6               	movwf	postinc1,c
  5259  013DD0  0E00               	movlw	0
  5260  013DD2  6EE6               	movwf	postinc1,c
  5261  013DD4  0E7A               	movlw	122
  5262  013DD6  6EE6               	movwf	postinc1,c
  5263  013DD8  0E44               	movlw	68
  5264  013DDA  6EE6               	movwf	postinc1,c
  5265  013DDC  0E61               	movlw	97
  5266  013DDE  6EE6               	movwf	postinc1,c
  5267  013DE0  0E03               	movlw	3
  5268  013DE2  6EE6               	movwf	postinc1,c
  5269  013DE4  0E84               	movlw	132
  5270  013DE6  6EE6               	movwf	postinc1,c
  5271  013DE8  0E40               	movlw	64
  5272  013DEA  6EE6               	movwf	postinc1,c
  5273                           
  5274                           ;stkvar	_chan @ sp[(-8)+-1]
  5275  013DEC  0EF7               	movlw	-9
  5276  013DEE  50E3               	movf	plusw1,w,c
  5277  013DF0  6EE6               	movwf	postinc1,c
  5278  013DF2  EC9E  F0C7         	call	_get_raw_result	;wreg free
  5279  013DF6  0060  F094  F02F   	movff	btemp,btemp+10
  5280  013DFC  0060  F098  F030   	movff	btemp+1,btemp+11
  5281  013E02  502F               	movf	(btemp+10)^0,w,c
  5282  013E04  6E29               	movwf	(btemp+4)^0,c
  5283  013E06  5030               	movf	(btemp+11)^0,w,c
  5284  013E08  6E2A               	movwf	(btemp+5)^0,c
  5285  013E0A  6A2B               	clrf	(btemp+6)^0,c
  5286  013E0C  6A2C               	clrf	(btemp+7)^0,c
  5287  013E0E  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5288  013E14  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5289  013E1A  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5290  013E20  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5291  013E26  0E00               	movlw	0
  5292  013E28  6EE6               	movwf	postinc1,c
  5293  013E2A  ECD0  F0AE         	call	___xxtofl	;wreg free
  5294  013E2E  0060  F097  FFE6   	movff	btemp,postinc1
  5295  013E34  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5296  013E3A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5297  013E40  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5298  013E46  EC08  F093         	call	___flmul	;wreg free
  5299  013E4A  0060  F097  FFE6   	movff	btemp,postinc1
  5300  013E50  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5301  013E56  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5302  013E5C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5303  013E62  ECFB  F09A         	call	___fldiv	;wreg free
  5304  013E66  D0D7               	goto	l1691
  5305  013E68                     l9119:
  5306                           
  5307                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5308                           ;stkvar	_chan @ sp[(0)+-1]
  5309  013E68  0EFF               	movlw	-1
  5310  013E6A  006F FF8C  F030    	movff	plusw1,btemp+11
  5311  013E70  0E03               	movlw	3
  5312  013E72  6E2D               	movwf	(btemp+8)^0,c
  5313  013E74  0E00               	movlw	0
  5314  013E76  6E2E               	movwf	(btemp+9)^0,c
  5315  013E78  2A30               	incf	(btemp+11)^0,f,c
  5316  013E7A  D003               	goto	u8394
  5317  013E7C                     u8395:
  5318  013E7C  342E               	rlcf	(btemp+9)^0,w,c
  5319  013E7E  322E               	rrcf	(btemp+9)^0,f,c
  5320  013E80  322D               	rrcf	(btemp+8)^0,f,c
  5321  013E82                     u8394:
  5322  013E82  2E30               	decfsz	(btemp+11)^0,f,c
  5323  013E84  D7FB               	goto	u8395
  5324  013E86  B02D               	btfsc	(btemp+8)^0,0,c
  5325  013E88  D011               	goto	u8420
  5326                           
  5327                           ;stkvar	_chan @ sp[(0)+-1]
  5328  013E8A  0EFF               	movlw	-1
  5329  013E8C  006F FF8C  F030    	movff	plusw1,btemp+11
  5330  013E92  0E00               	movlw	0
  5331  013E94  6E2D               	movwf	(btemp+8)^0,c
  5332  013E96  0E08               	movlw	8
  5333  013E98  6E2E               	movwf	(btemp+9)^0,c
  5334  013E9A  2A30               	incf	(btemp+11)^0,f,c
  5335  013E9C  D003               	goto	u8414
  5336  013E9E                     u8415:
  5337  013E9E  342E               	rlcf	(btemp+9)^0,w,c
  5338  013EA0  322E               	rrcf	(btemp+9)^0,f,c
  5339  013EA2  322D               	rrcf	(btemp+8)^0,f,c
  5340  013EA4                     u8414:
  5341  013EA4  2E30               	decfsz	(btemp+11)^0,f,c
  5342  013EA6  D7FB               	goto	u8415
  5343  013EA8  A02D               	btfss	(btemp+8)^0,0,c
  5344  013EAA  D04E               	goto	l9127
  5345  013EAC                     u8420:
  5346                           
  5347                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5348  013EAC  0E00               	movlw	0
  5349  013EAE  6EE6               	movwf	postinc1,c
  5350  013EB0  0E00               	movlw	0
  5351  013EB2  6EE6               	movwf	postinc1,c
  5352  013EB4  0E7A               	movlw	122
  5353  013EB6  6EE6               	movwf	postinc1,c
  5354  013EB8  0E44               	movlw	68
  5355  013EBA  6EE6               	movwf	postinc1,c
  5356  013EBC  0E00               	movlw	0
  5357  013EBE  6EE6               	movwf	postinc1,c
  5358  013EC0  0E00               	movlw	0
  5359  013EC2  6EE6               	movwf	postinc1,c
  5360  013EC4  0E20               	movlw	32
  5361  013EC6  6EE6               	movwf	postinc1,c
  5362  013EC8  0E3F               	movlw	63
  5363  013ECA  6EE6               	movwf	postinc1,c
  5364                           
  5365                           ;stkvar	_chan @ sp[(-8)+-1]
  5366  013ECC  0EF7               	movlw	-9
  5367  013ECE  50E3               	movf	plusw1,w,c
  5368  013ED0  6EE6               	movwf	postinc1,c
  5369  013ED2  EC9E  F0C7         	call	_get_raw_result	;wreg free
  5370  013ED6  0060  F094  F02F   	movff	btemp,btemp+10
  5371  013EDC  0060  F098  F030   	movff	btemp+1,btemp+11
  5372  013EE2  502F               	movf	(btemp+10)^0,w,c
  5373  013EE4  6E29               	movwf	(btemp+4)^0,c
  5374  013EE6  5030               	movf	(btemp+11)^0,w,c
  5375  013EE8  6E2A               	movwf	(btemp+5)^0,c
  5376  013EEA  6A2B               	clrf	(btemp+6)^0,c
  5377  013EEC  6A2C               	clrf	(btemp+7)^0,c
  5378  013EEE  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5379  013EF4  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5380  013EFA  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5381  013F00  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5382  013F06  0E00               	movlw	0
  5383  013F08  6EE6               	movwf	postinc1,c
  5384  013F0A  ECD0  F0AE         	call	___xxtofl	;wreg free
  5385  013F0E  0060  F097  FFE6   	movff	btemp,postinc1
  5386  013F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5387  013F1A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5388  013F20  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5389  013F26  EC08  F093         	call	___flmul	;wreg free
  5390  013F2A  0060  F097  FFE6   	movff	btemp,postinc1
  5391  013F30  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5392  013F36  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5393  013F3C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5394  013F42  ECFB  F09A         	call	___fldiv	;wreg free
  5395  013F46  D067               	goto	l1691
  5396  013F48                     l9127:
  5397                           
  5398                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5399  013F48  0E00               	movlw	0
  5400  013F4A  6EE6               	movwf	postinc1,c
  5401  013F4C  0E00               	movlw	0
  5402  013F4E  6EE6               	movwf	postinc1,c
  5403  013F50  0E7A               	movlw	122
  5404  013F52  6EE6               	movwf	postinc1,c
  5405  013F54  0E44               	movlw	68
  5406  013F56  6EE6               	movwf	postinc1,c
  5407  013F58  0E61               	movlw	97
  5408  013F5A  6EE6               	movwf	postinc1,c
  5409  013F5C  0E03               	movlw	3
  5410  013F5E  6EE6               	movwf	postinc1,c
  5411  013F60  0E84               	movlw	132
  5412  013F62  6EE6               	movwf	postinc1,c
  5413  013F64  0E40               	movlw	64
  5414  013F66  6EE6               	movwf	postinc1,c
  5415                           
  5416                           ;stkvar	_chan @ sp[(-8)+-1]
  5417  013F68  0EF7               	movlw	-9
  5418  013F6A  50E3               	movf	plusw1,w,c
  5419  013F6C  6EE6               	movwf	postinc1,c
  5420  013F6E  EC9E  F0C7         	call	_get_raw_result	;wreg free
  5421  013F72  0060  F094  F02F   	movff	btemp,btemp+10
  5422  013F78  0060  F098  F030   	movff	btemp+1,btemp+11
  5423  013F7E  502F               	movf	(btemp+10)^0,w,c
  5424  013F80  6E29               	movwf	(btemp+4)^0,c
  5425  013F82  5030               	movf	(btemp+11)^0,w,c
  5426  013F84  6E2A               	movwf	(btemp+5)^0,c
  5427  013F86  6A2B               	clrf	(btemp+6)^0,c
  5428  013F88  6A2C               	clrf	(btemp+7)^0,c
  5429  013F8A  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5430  013F90  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5431  013F96  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5432  013F9C  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5433  013FA2  0E00               	movlw	0
  5434  013FA4  6EE6               	movwf	postinc1,c
  5435  013FA6  ECD0  F0AE         	call	___xxtofl	;wreg free
  5436  013FAA  0060  F097  FFE6   	movff	btemp,postinc1
  5437  013FB0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5438  013FB6  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5439  013FBC  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5440  013FC2  EC08  F093         	call	___flmul	;wreg free
  5441  013FC6  0060  F097  FFE6   	movff	btemp,postinc1
  5442  013FCC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5443  013FD2  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5444  013FD8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5445  013FDE  ECFB  F09A         	call	___fldiv	;wreg free
  5446  013FE2  D019               	goto	l1691
  5447  013FE4                     l9133:
  5448                           
  5449                           ;daq.c: 109:   return 0.0;
  5450  013FE4  0E00               	movlw	0
  5451  013FE6  6E25               	movwf	btemp^0,c
  5452  013FE8  0E00               	movlw	0
  5453  013FEA  6E26               	movwf	(btemp+1)^0,c
  5454  013FEC  0E00               	movlw	0
  5455  013FEE  6E27               	movwf	(btemp+2)^0,c
  5456  013FF0  0E00               	movlw	0
  5457  013FF2                     L4:
  5458  013FF2  6E28               	movwf	(btemp+3)^0,c
  5459  013FF4  D010               	goto	l1691
  5460  013FF6                     l9141:
  5461                           
  5462                           ;stkvar	_to_what @ sp[(0)+-2]
  5463  013FF6  0EFE               	movlw	-2
  5464  013FF8  50E3               	movf	plusw1,w,c
  5465  013FFA  6E2F               	movwf	(btemp+10)^0,c
  5466  013FFC  6A30               	clrf	(btemp+11)^0,c
  5467                           
  5468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5469                           ; Switch size 1, requested type "simple"
  5470                           ; Number of cases is 1, Range of values is 0 to 0
  5471                           ; switch strategies available:
  5472                           ; Name         Instructions Cycles
  5473                           ; simple_byte            4     3 (average)
  5474                           ;	Chosen strategy is simple_byte
  5475  013FFE  5030               	movf	(btemp+11)^0,w,c
  5476  014000  0A00               	xorlw	0	; case 0
  5477  014002  A4D8               	btfss	status,2,c
  5478  014004  D7EF               	goto	l9133
  5479                           
  5480                           ; Switch size 1, requested type "simple"
  5481                           ; Number of cases is 2, Range of values is 0 to 1
  5482                           ; switch strategies available:
  5483                           ; Name         Instructions Cycles
  5484                           ; simple_byte            7     4 (average)
  5485                           ;	Chosen strategy is simple_byte
  5486  014006  502F               	movf	(btemp+10)^0,w,c
  5487  014008  0A00               	xorlw	0	; case 0
  5488  01400A  B4D8               	btfsc	status,2,c
  5489  01400C  D5B2               	goto	l9087
  5490  01400E  0A01               	xorlw	1	; case 1
  5491  014010  B4D8               	btfsc	status,2,c
  5492  014012  D72A               	goto	l9119
  5493  014014  D7E7               	goto	l9133
  5494  014016                     l1691:
  5495                           
  5496                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5497  014016  52E5               	movf	postdec1,f,c
  5498  014018  52E5               	movf	postdec1,f,c
  5499  01401A  0012               	return		;funcret
  5500  01401C                     __end_of_conv_raw_result:
  5501                           	opt callstack 0
  5502                           
  5503 ;; *************** function _nanf *****************
  5504 ;; Defined at:
  5505 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  s               2  [STACK] PTR const unsigned char 
  5508 ;;		 -> STR_45(1), 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  u               4  [STACK] struct .
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  4  [STACK] float 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/2
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5524 ;;Total ram usage:        0 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:   10
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_conv_raw_result
  5531 ;; This function uses a reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text19
  5535  01817E                     __ptext19:
  5536                           	opt callstack 0
  5537  01817E                     _nanf:
  5538                           	opt callstack 0
  5539                           
  5540                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5541  01817E  52E6               	movf	postinc1,f,c
  5542  018180  52E6               	movf	postinc1,f,c
  5543  018182  52E6               	movf	postinc1,f,c
  5544  018184  52E6               	movf	postinc1,f,c
  5545                           
  5546                           ;incstack = 0
  5547  018186  0EFF               	movlw	255
  5548  018188  6E2D               	movwf	(btemp+8)^0,c
  5549  01818A  0EFF               	movlw	255
  5550  01818C  6E2E               	movwf	(btemp+9)^0,c
  5551  01818E  0EFF               	movlw	255
  5552  018190  6E2F               	movwf	(btemp+10)^0,c
  5553  018192  0E7F               	movlw	127
  5554  018194  6E30               	movwf	(btemp+11)^0,c
  5555                           
  5556                           ;stkvar	_u @ sp[(-4)+0]
  5557  018196  0EFC               	movlw	-4
  5558  018198  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5559  01819E  0EFD               	movlw	-3
  5560  0181A0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5561  0181A6  0EFE               	movlw	-2
  5562  0181A8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5563  0181AE  0EFF               	movlw	-1
  5564  0181B0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5565                           
  5566                           ;stkvar	_u @ sp[(-4)+0]
  5567  0181B6  0EFC               	movlw	-4
  5568  0181B8  006F FF8C  F025    	movff	plusw1,btemp
  5569  0181BE  0EFD               	movlw	-3
  5570  0181C0  006F FF8C  F026    	movff	plusw1,btemp+1
  5571  0181C6  0EFE               	movlw	-2
  5572  0181C8  006F FF8C  F027    	movff	plusw1,btemp+2
  5573  0181CE  0EFF               	movlw	-1
  5574  0181D0  006F FF8C  F028    	movff	plusw1,btemp+3
  5575                           
  5576                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5577  0181D6  0EFA               	movlw	250
  5578  0181D8  26E1               	addwf	fsr1l,f,c
  5579  0181DA  0EFF               	movlw	255
  5580  0181DC  22E2               	addwfc	fsr1h,f,c
  5581  0181DE  0012               	return		;funcret
  5582  0181E0                     __end_of_nanf:
  5583                           	opt callstack 0
  5584                           
  5585 ;; *************** function _get_raw_result *****************
  5586 ;; Defined at:
  5587 ;;		line 72 in file "daq.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  index           1  [STACK] const enum E16136
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  2  [STACK] unsigned short 
  5594 ;; Registers used:
  5595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/2
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5605 ;;Total ram usage:        0 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:   10
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_main
  5612 ;;		_conv_raw_result
  5613 ;; This function uses a reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text20
  5617  018F3C                     __ptext20:
  5618                           	opt callstack 0
  5619  018F3C                     _get_raw_result:
  5620                           	opt callstack 20
  5621                           
  5622                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5623                           ;stkvar	_index @ sp[(0)+-1]
  5624                           
  5625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5626                           ;incstack = 0
  5627  018F3C  0EFF               	movlw	-1
  5628  018F3E  50E3               	movf	plusw1,w,c
  5629  018F40  0D02               	mullw	2
  5630  018F42  50F3               	movf	243,w,c
  5631  018F44  0FC3               	addlw	low _R
  5632  018F46  6ED9               	movwf	fsr2l,c
  5633  018F48  6ADA               	clrf	fsr2h,c
  5634  018F4A  006F FF78  F025    	movff	postinc2,btemp
  5635  018F50  006F FF74  F026    	movff	postdec2,btemp+1
  5636                           
  5637                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5638  018F56  52E5               	movf	postdec1,f,c
  5639  018F58  0012               	return		;funcret
  5640  018F5A                     __end_of_get_raw_result:
  5641                           	opt callstack 0
  5642                           
  5643 ;; *************** function ___xxtofl *****************
  5644 ;; Defined at:
  5645 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  sign            1  [STACK] unsigned char 
  5648 ;;  val             4  [STACK] long 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  arg             4  [STACK] unsigned long 
  5651 ;;  exp             1  [STACK] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  4  [STACK] unsigned char 
  5654 ;; Registers used:
  5655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/2
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5665 ;;Total ram usage:        0 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:   10
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_conv_raw_result
  5672 ;; This function uses a reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text21
  5676  015DA0                     __ptext21:
  5677                           	opt callstack 0
  5678  015DA0                     ___xxtofl:
  5679                           	opt callstack 0
  5680                           
  5681                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5682  015DA0  0E05               	movlw	5
  5683  015DA2  26E1               	addwf	fsr1l,f,c
  5684  015DA4  0E00               	movlw	0
  5685  015DA6  22E2               	addwfc	fsr1h,f,c
  5686                           
  5687                           ;stkvar	_sign @ sp[(-5)+-1]
  5688                           
  5689                           ;incstack = 0
  5690  015DA8  0EFA               	movlw	-6
  5691  015DAA  50E3               	movf	plusw1,w,c
  5692  015DAC  B4D8               	btfsc	status,2,c
  5693  015DAE  D01D               	goto	l8549
  5694                           
  5695                           ;stkvar	_val @ sp[(-5)+-5]
  5696  015DB0  0EF9               	movlw	-7
  5697  015DB2  AEE3               	btfss	plusw1,7,c
  5698  015DB4  D01A               	goto	l8549
  5699                           
  5700                           ;stkvar	_val @ sp[(-5)+-5]
  5701  015DB6  0EF6               	movlw	-10
  5702  015DB8  006F FF8C  F02D    	movff	plusw1,btemp+8
  5703  015DBE  0EF7               	movlw	-9
  5704  015DC0  006F FF8C  F02E    	movff	plusw1,btemp+9
  5705  015DC6  0EF8               	movlw	-8
  5706  015DC8  006F FF8C  F02F    	movff	plusw1,btemp+10
  5707  015DCE  0EF9               	movlw	-7
  5708  015DD0  006F FF8C  F030    	movff	plusw1,btemp+11
  5709  015DD6  1E2D               	comf	(btemp+8)^0,f,c
  5710  015DD8  1E2E               	comf	(btemp+9)^0,f,c
  5711  015DDA  1E2F               	comf	(btemp+10)^0,f,c
  5712  015DDC  1E30               	comf	(btemp+11)^0,f,c
  5713  015DDE  2A2D               	incf	(btemp+8)^0,f,c
  5714  015DE0  0E00               	movlw	0
  5715  015DE2  222E               	addwfc	(btemp+9)^0,f,c
  5716  015DE4  222F               	addwfc	(btemp+10)^0,f,c
  5717  015DE6  2230               	addwfc	(btemp+11)^0,f,c
  5718  015DE8  D010               	goto	L5
  5719  015DEA                     l8549:
  5720                           
  5721                           ;stkvar	_val @ sp[(-5)+-5]
  5722  015DEA  0EF6               	movlw	-10
  5723  015DEC  006F FF8C  F02D    	movff	plusw1,btemp+8
  5724  015DF2  0EF7               	movlw	-9
  5725  015DF4  006F FF8C  F02E    	movff	plusw1,btemp+9
  5726  015DFA  0EF8               	movlw	-8
  5727  015DFC  006F FF8C  F02F    	movff	plusw1,btemp+10
  5728  015E02  0EF9               	movlw	-7
  5729  015E04  006F FF8C  F030    	movff	plusw1,btemp+11
  5730  015E0A                     L5:
  5731                           
  5732                           ;stkvar	_arg @ sp[(-5)+0]
  5733  015E0A  0EFB               	movlw	-5
  5734  015E0C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5735  015E12  0EFC               	movlw	-4
  5736  015E14  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5737  015E1A  0EFD               	movlw	-3
  5738  015E1C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5739  015E22  0EFE               	movlw	-2
  5740  015E24  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5741                           
  5742                           ;stkvar	_val @ sp[(-5)+-5]
  5743  015E2A  0EF6               	movlw	-10
  5744  015E2C  50E3               	movf	plusw1,w,c
  5745  015E2E  E113               	bnz	l8557
  5746  015E30  0EF7               	movlw	-9
  5747  015E32  50E3               	movf	plusw1,w,c
  5748  015E34  E110               	bnz	l8557
  5749  015E36  0EF8               	movlw	-8
  5750  015E38  50E3               	movf	plusw1,w,c
  5751  015E3A  E10D               	bnz	l8557
  5752  015E3C  0EF9               	movlw	-7
  5753  015E3E  50E3               	movf	plusw1,w,c
  5754  015E40  A4D8               	btfss	status,2,c
  5755  015E42  D009               	goto	l8557
  5756  015E44  0E00               	movlw	0
  5757  015E46  6E25               	movwf	btemp^0,c
  5758  015E48  0E00               	movlw	0
  5759  015E4A  6E26               	movwf	(btemp+1)^0,c
  5760  015E4C  0E00               	movlw	0
  5761  015E4E  6E27               	movwf	(btemp+2)^0,c
  5762  015E50  0E00               	movlw	0
  5763  015E52  6E28               	movwf	(btemp+3)^0,c
  5764  015E54  D0A2               	goto	l2874
  5765  015E56                     l8557:
  5766  015E56  0E96               	movlw	150
  5767  015E58  6E30               	movwf	(btemp+11)^0,c
  5768                           
  5769                           ;stkvar	_exp @ sp[(-5)+4]
  5770  015E5A  0EFF               	movlw	-1
  5771  015E5C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5772  015E62  D00B               	goto	l8561
  5773  015E64                     l8559:
  5774                           
  5775                           ;stkvar	_exp @ sp[(-5)+4]
  5776  015E64  0EFF               	movlw	-1
  5777  015E66  2AE3               	incf	plusw1,f,c
  5778                           
  5779                           ;stkvar	_arg @ sp[(-5)+0]
  5780  015E68  90D8               	bcf	status,0,c
  5781  015E6A  0EFE               	movlw	-2
  5782  015E6C  32E3               	rrcf	plusw1,f,c
  5783  015E6E  0EFD               	movlw	-3
  5784  015E70  32E3               	rrcf	plusw1,f,c
  5785  015E72  0EFC               	movlw	-4
  5786  015E74  32E3               	rrcf	plusw1,f,c
  5787  015E76  0EFB               	movlw	-5
  5788  015E78  32E3               	rrcf	plusw1,f,c
  5789  015E7A                     l8561:
  5790                           
  5791                           ;stkvar	_arg @ sp[(-5)+0]
  5792  015E7A  50E1               	movf	fsr1l,w,c
  5793  015E7C  0FFB               	addlw	-5
  5794  015E7E  6ED9               	movwf	fsr2l,c
  5795  015E80  50E2               	movf	fsr1h,w,c
  5796  015E82  6EDA               	movwf	fsr2h,c
  5797  015E84  0EFF               	movlw	255
  5798  015E86  22DA               	addwfc	fsr2h,f,c
  5799  015E88  52DE               	movf	postinc2,f,c
  5800  015E8A  52DE               	movf	postinc2,f,c
  5801  015E8C  52DE               	movf	postinc2,f,c
  5802  015E8E  0EFE               	movlw	254
  5803  015E90  14DD               	andwf	postdec2,w,c
  5804  015E92  B4D8               	btfsc	status,2,c
  5805  015E94  D018               	goto	l8569
  5806  015E96  D7E6               	goto	l8559
  5807  015E98                     l8563:
  5808                           
  5809                           ;stkvar	_exp @ sp[(-5)+4]
  5810  015E98  0EFF               	movlw	-1
  5811  015E9A  2AE3               	incf	plusw1,f,c
  5812                           
  5813                           ;stkvar	_arg @ sp[(-5)+0]
  5814  015E9C  50E1               	movf	fsr1l,w,c
  5815  015E9E  0FFB               	addlw	-5
  5816  015EA0  6ED9               	movwf	fsr2l,c
  5817  015EA2  50E2               	movf	fsr1h,w,c
  5818  015EA4  6EDA               	movwf	fsr2h,c
  5819  015EA6  0EFF               	movlw	255
  5820  015EA8  22DA               	addwfc	fsr2h,f,c
  5821  015EAA  2ADE               	incf	postinc2,f,c
  5822  015EAC  0E00               	movlw	0
  5823  015EAE  22DE               	addwfc	postinc2,f,c
  5824  015EB0  22DE               	addwfc	postinc2,f,c
  5825  015EB2  22DE               	addwfc	postinc2,f,c
  5826                           
  5827                           ;stkvar	_arg @ sp[(-5)+0]
  5828  015EB4  90D8               	bcf	status,0,c
  5829  015EB6  0EFE               	movlw	-2
  5830  015EB8  32E3               	rrcf	plusw1,f,c
  5831  015EBA  0EFD               	movlw	-3
  5832  015EBC  32E3               	rrcf	plusw1,f,c
  5833  015EBE  0EFC               	movlw	-4
  5834  015EC0  32E3               	rrcf	plusw1,f,c
  5835  015EC2  0EFB               	movlw	-5
  5836  015EC4  32E3               	rrcf	plusw1,f,c
  5837  015EC6                     l8569:
  5838                           
  5839                           ;stkvar	_arg @ sp[(-5)+0]
  5840  015EC6  50E1               	movf	fsr1l,w,c
  5841  015EC8  0FFB               	addlw	-5
  5842  015ECA  6ED9               	movwf	fsr2l,c
  5843  015ECC  50E2               	movf	fsr1h,w,c
  5844  015ECE  6EDA               	movwf	fsr2h,c
  5845  015ED0  0EFF               	movlw	255
  5846  015ED2  22DA               	addwfc	fsr2h,f,c
  5847  015ED4  52DE               	movf	postinc2,f,c
  5848  015ED6  52DE               	movf	postinc2,f,c
  5849  015ED8  52DE               	movf	postinc2,f,c
  5850  015EDA  0EFF               	movlw	255
  5851  015EDC  14DD               	andwf	postdec2,w,c
  5852  015EDE  B4D8               	btfsc	status,2,c
  5853  015EE0  D00C               	goto	l8573
  5854  015EE2  D7DA               	goto	l8563
  5855  015EE4                     l8571:
  5856                           
  5857                           ;stkvar	_exp @ sp[(-5)+4]
  5858  015EE4  0EFF               	movlw	-1
  5859  015EE6  06E3               	decf	plusw1,f,c
  5860                           
  5861                           ;stkvar	_arg @ sp[(-5)+0]
  5862  015EE8  90D8               	bcf	status,0,c
  5863  015EEA  0EFB               	movlw	-5
  5864  015EEC  36E3               	rlcf	plusw1,f,c
  5865  015EEE  0EFC               	movlw	-4
  5866  015EF0  36E3               	rlcf	plusw1,f,c
  5867  015EF2  0EFD               	movlw	-3
  5868  015EF4  36E3               	rlcf	plusw1,f,c
  5869  015EF6  0EFE               	movlw	-2
  5870  015EF8  36E3               	rlcf	plusw1,f,c
  5871  015EFA                     l8573:
  5872                           
  5873                           ;stkvar	_arg @ sp[(-5)+0]
  5874  015EFA  0EFD               	movlw	-3
  5875  015EFC  BEE3               	btfsc	plusw1,7,c
  5876  015EFE  D007               	goto	u8140
  5877                           
  5878                           ;stkvar	_exp @ sp[(-5)+4]
  5879  015F00  0EFF               	movlw	-1
  5880  015F02  006F FF8C  F025    	movff	plusw1,btemp
  5881  015F08  0E02               	movlw	2
  5882  015F0A  6025               	cpfslt	btemp^0,c
  5883  015F0C  D7EB               	goto	l8571
  5884  015F0E                     u8140:
  5885                           
  5886                           ;stkvar	_exp @ sp[(-5)+4]
  5887  015F0E  0EFF               	movlw	-1
  5888  015F10  B0E3               	btfsc	plusw1,0,c
  5889  015F12  D002               	goto	l8581
  5890                           
  5891                           ;stkvar	_arg @ sp[(-5)+0]
  5892  015F14  0EFD               	movlw	-3
  5893  015F16  9EE3               	bcf	plusw1,7,c
  5894  015F18                     l8581:
  5895                           
  5896                           ;stkvar	_exp @ sp[(-5)+4]
  5897  015F18  50E1               	movf	fsr1l,w,c
  5898  015F1A  0FFF               	addlw	-1
  5899  015F1C  6ED9               	movwf	fsr2l,c
  5900  015F1E  50E2               	movf	fsr1h,w,c
  5901  015F20  6EDA               	movwf	fsr2h,c
  5902  015F22  0EFF               	movlw	255
  5903  015F24  22DA               	addwfc	fsr2h,f,c
  5904  015F26  90D8               	bcf	status,0,c
  5905  015F28  32DF               	rrcf	indf2,f,c
  5906                           
  5907                           ;stkvar	_exp @ sp[(-5)+4]
  5908  015F2A  0EFF               	movlw	-1
  5909  015F2C  006F FF8C  F030    	movff	plusw1,btemp+11
  5910  015F32  0060  F0C0  F029   	movff	btemp+11,btemp+4
  5911  015F38  6A2A               	clrf	(btemp+5)^0,c
  5912  015F3A  6A2B               	clrf	(btemp+6)^0,c
  5913  015F3C  6A2C               	clrf	(btemp+7)^0,c
  5914  015F3E  0060  F0A4  F02C   	movff	btemp+4,btemp+7
  5915  015F44  6A2B               	clrf	(btemp+6)^0,c
  5916  015F46  6A2A               	clrf	(btemp+5)^0,c
  5917  015F48  6A29               	clrf	(btemp+4)^0,c
  5918                           
  5919                           ;stkvar	_arg @ sp[(-5)+0]
  5920  015F4A  50E1               	movf	fsr1l,w,c
  5921  015F4C  0FFB               	addlw	-5
  5922  015F4E  6ED9               	movwf	fsr2l,c
  5923  015F50  50E2               	movf	fsr1h,w,c
  5924  015F52  6EDA               	movwf	fsr2h,c
  5925  015F54  0EFF               	movlw	255
  5926  015F56  22DA               	addwfc	fsr2h,f,c
  5927  015F58  5029               	movf	(btemp+4)^0,w,c
  5928  015F5A  12DE               	iorwf	postinc2,f,c
  5929  015F5C  502A               	movf	(btemp+5)^0,w,c
  5930  015F5E  12DE               	iorwf	postinc2,f,c
  5931  015F60  502B               	movf	(btemp+6)^0,w,c
  5932  015F62  12DE               	iorwf	postinc2,f,c
  5933  015F64  502C               	movf	(btemp+7)^0,w,c
  5934  015F66  12DE               	iorwf	postinc2,f,c
  5935                           
  5936                           ;stkvar	_sign @ sp[(-5)+-1]
  5937  015F68  0EFA               	movlw	-6
  5938  015F6A  50E3               	movf	plusw1,w,c
  5939  015F6C  B4D8               	btfsc	status,2,c
  5940  015F6E  D005               	goto	l8591
  5941                           
  5942                           ;stkvar	_val @ sp[(-5)+-5]
  5943  015F70  0EF9               	movlw	-7
  5944  015F72  AEE3               	btfss	plusw1,7,c
  5945  015F74  D002               	goto	l8591
  5946                           
  5947                           ;stkvar	_arg @ sp[(-5)+0]
  5948  015F76  0EFE               	movlw	-2
  5949  015F78  8EE3               	bsf	plusw1,7,c
  5950  015F7A                     l8591:
  5951                           
  5952                           ;stkvar	_arg @ sp[(-5)+0]
  5953  015F7A  0EFB               	movlw	-5
  5954  015F7C  006F FF8C  F025    	movff	plusw1,btemp
  5955  015F82  0EFC               	movlw	-4
  5956  015F84  006F FF8C  F026    	movff	plusw1,btemp+1
  5957  015F8A  0EFD               	movlw	-3
  5958  015F8C  006F FF8C  F027    	movff	plusw1,btemp+2
  5959  015F92  0EFE               	movlw	-2
  5960  015F94  006F FF8C  F028    	movff	plusw1,btemp+3
  5961  015F9A                     l2874:
  5962                           
  5963                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5964  015F9A  0EF6               	movlw	246
  5965  015F9C  26E1               	addwf	fsr1l,f,c
  5966  015F9E  0EFF               	movlw	255
  5967  015FA0  22E2               	addwfc	fsr1h,f,c
  5968  015FA2  0012               	return		;funcret
  5969  015FA4                     __end_of___xxtofl:
  5970                           	opt callstack 0
  5971                           
  5972 ;; *************** function _clear_hid_pflags *****************
  5973 ;; Defined at:
  5974 ;;		line 51 in file "hid.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  h               1  [STACK] PTR struct H_data
  5977 ;;		 -> H(7), 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;		None
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1  [STACK] void 
  5982 ;; Registers used:
  5983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5984 ;; Tracked objects:
  5985 ;;		On entry : 3F/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5993 ;;Total ram usage:        0 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:   10
  5996 ;; This function calls:
  5997 ;;		Nothing
  5998 ;; This function is called by:
  5999 ;;		_main
  6000 ;; This function uses a reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text22
  6004  018E2A                     __ptext22:
  6005                           	opt callstack 0
  6006  018E2A                     _clear_hid_pflags:
  6007                           	opt callstack 20
  6008                           
  6009                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6010                           ;stkvar	_h @ sp[(0)+-1]
  6011                           
  6012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6013                           ;incstack = 0
  6014  018E2A  0EFF               	movlw	-1
  6015  018E2C  50E3               	movf	plusw1,w,c
  6016  018E2E  6ED9               	movwf	fsr2l,c
  6017  018E30  6ADA               	clrf	fsr2h,c
  6018  018E32  0E03               	movlw	3
  6019  018E34  26D9               	addwf	fsr2l,f,c
  6020  018E36  0E00               	movlw	0
  6021  018E38  6EDF               	movwf	indf2,c
  6022                           
  6023                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6024                           ;stkvar	_h @ sp[(0)+-1]
  6025  018E3A  0EFF               	movlw	-1
  6026  018E3C  50E3               	movf	plusw1,w,c
  6027  018E3E  6ED9               	movwf	fsr2l,c
  6028  018E40  6ADA               	clrf	fsr2h,c
  6029  018E42  0E05               	movlw	5
  6030  018E44  26D9               	addwf	fsr2l,f,c
  6031  018E46  0E00               	movlw	0
  6032  018E48  6EDF               	movwf	indf2,c
  6033                           
  6034                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6035  018E4A  52E5               	movf	postdec1,f,c
  6036  018E4C  0012               	return		;funcret
  6037  018E4E                     __end_of_clear_hid_pflags:
  6038                           	opt callstack 0
  6039                           
  6040 ;; *************** function _clear_adc_scan *****************
  6041 ;; Defined at:
  6042 ;;		line 64 in file "daq.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1  [STACK] void 
  6049 ;; Registers used:
  6050 ;;		None
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/1
  6053 ;;		On exit  : 3F/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:   10
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_main
  6067 ;; This function uses a reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text23
  6071  019186                     __ptext23:
  6072                           	opt callstack 0
  6073  019186                     _clear_adc_scan:
  6074                           	opt callstack 20
  6075                           
  6076                           ;daq.c: 66:  R.done = 0;
  6077                           
  6078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6079                           ;incstack = 0
  6080  019186  0100               	movlb	0	; () banked
  6081  019188  6BEA               	clrf	(_R+39)& (0+255),b	;volatile
  6082                           
  6083                           ; BSR set to: 0
  6084                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6085  01918A  0012               	return		;funcret
  6086  01918C                     __end_of_clear_adc_scan:
  6087                           	opt callstack 0
  6088                           
  6089 ;; *************** function _check_help *****************
  6090 ;; Defined at:
  6091 ;;		line 40 in file "mconfig.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  flipper         1  [STACK] const _Bool 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  estatus         1    0        _Bool 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1  [STACK] _Bool 
  6098 ;; Registers used:
  6099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6100 ;; Tracked objects:
  6101 ;;		On entry : 3F/2
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6109 ;;Total ram usage:        0 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:   22
  6112 ;; This function calls:
  6113 ;;		_StartTimer
  6114 ;;		_TimerDone
  6115 ;;		_display_help
  6116 ;;		_display_info
  6117 ;;		_get_vterm_ptr
  6118 ;;		_help_button
  6119 ;;		_mode_lamp_bright
  6120 ;;		_mode_lamp_dim
  6121 ;;		_set_display_info
  6122 ;;		_set_temp_display_help
  6123 ;;		_set_vterm
  6124 ;;		_sprintf
  6125 ;;		_update_lcd
  6126 ;;		_vterm_dump
  6127 ;; This function is called by:
  6128 ;;		_main
  6129 ;; This function uses a reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text24
  6133  015B8E                     __ptext24:
  6134                           	opt callstack 0
  6135  015B8E                     _check_help:
  6136                           	opt callstack 8
  6137                           
  6138                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6139                           
  6140                           ; BSR set to: 0
  6141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6142                           ;incstack = 0
  6143  015B8E  EC07  F0C4         	call	_help_button	;wreg free
  6144  015B92  5025               	movf	btemp^0,w,c
  6145  015B94  B4D8               	btfsc	status,2,c
  6146  015B96  D0D0               	goto	l10989
  6147  015B98  ECB3  F0C8         	call	_display_info	;wreg free
  6148  015B9C  0425               	decf	btemp^0,w,c
  6149  015B9E  B4D8               	btfsc	status,2,c
  6150  015BA0  D0CB               	goto	l10989
  6151                           
  6152                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6153  015BA2  0EDC               	movlw	220
  6154  015BA4  6EE6               	movwf	postinc1,c
  6155  015BA6  0E05               	movlw	5
  6156  015BA8  6EE6               	movwf	postinc1,c
  6157  015BAA  0E0B               	movlw	11
  6158  015BAC  6EE6               	movwf	postinc1,c
  6159  015BAE  EC68  F0C3         	call	_StartTimer	;wreg free
  6160                           
  6161                           ;mconfig.c: 48:   if (V.debug)
  6162  015BB2  0102               	movlb	2	; () banked
  6163  015BB4  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6164                           
  6165                           ; BSR set to: 2
  6166                           ;mconfig.c: 49:    vterm_dump();
  6167  015BB6  EC16  F0B5         	call	_vterm_dump	;wreg free
  6168                           
  6169                           ;mconfig.c: 51:   set_vterm(1);
  6170  015BBA  0E01               	movlw	1
  6171  015BBC  6EE6               	movwf	postinc1,c
  6172  015BBE  ECAD  F0C7         	call	_set_vterm	;wreg free
  6173                           
  6174                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6175  015BC2  ECB3  F0C8         	call	_display_info	;wreg free
  6176  015BC6  5025               	movf	btemp^0,w,c
  6177  015BC8  6EE6               	movwf	postinc1,c
  6178  015BCA  EC74  F0C8         	call	_set_temp_display_help	;wreg free
  6179                           
  6180                           ; BSR set to: 2
  6181                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6182  015BCE  0E01               	movlw	1
  6183  015BD0  6EE6               	movwf	postinc1,c
  6184  015BD2  ECBC  F0C7         	call	_set_display_info	;wreg free
  6185                           
  6186                           ;mconfig.c: 54:   if (flipper) {
  6187                           ;stkvar	_flipper @ sp[(0)+-1]
  6188  015BD6  0EFF               	movlw	-1
  6189  015BD8  50E3               	movf	plusw1,w,c
  6190  015BDA  B4D8               	btfsc	status,2,c
  6191  015BDC  D019               	goto	l10975
  6192                           
  6193                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6194  015BDE  0EC0               	movlw	low STR_27
  6195  015BE0  6EE6               	movwf	postinc1,c
  6196  015BE2  0EFF               	movlw	high STR_27
  6197  015BE4  6EE6               	movwf	postinc1,c
  6198  015BE6  0E6C               	movlw	low STR_29
  6199  015BE8  6EE6               	movwf	postinc1,c
  6200  015BEA  0EFE               	movlw	high STR_29
  6201  015BEC  6EE6               	movwf	postinc1,c
  6202  015BEE  0E01               	movlw	1
  6203  015BF0  6EE6               	movwf	postinc1,c
  6204  015BF2  0E00               	movlw	0
  6205  015BF4  6EE6               	movwf	postinc1,c
  6206  015BF6  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6207  015BFA  0060  F097  FFE6   	movff	btemp,postinc1
  6208  015C00  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6209  015C06  0E06               	movlw	6
  6210  015C08  6EE6               	movwf	postinc1,c
  6211  015C0A  ECDD  F0B7         	call	_sprintf	;wreg free
  6212                           
  6213                           ;mconfig.c: 56:   } else {
  6214  015C0E  D018               	goto	l1595
  6215  015C10                     l10975:
  6216                           
  6217                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6218  015C10  0ED6               	movlw	low STR_28
  6219  015C12  6EE6               	movwf	postinc1,c
  6220  015C14  0EFF               	movlw	high STR_28
  6221  015C16  6EE6               	movwf	postinc1,c
  6222  015C18  0E6C               	movlw	low STR_29
  6223  015C1A  6EE6               	movwf	postinc1,c
  6224  015C1C  0EFE               	movlw	high STR_29
  6225  015C1E  6EE6               	movwf	postinc1,c
  6226  015C20  0E01               	movlw	1
  6227  015C22  6EE6               	movwf	postinc1,c
  6228  015C24  0E00               	movlw	0
  6229  015C26  6EE6               	movwf	postinc1,c
  6230  015C28  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6231  015C2C  0060  F097  FFE6   	movff	btemp,postinc1
  6232  015C32  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6233  015C38  0E06               	movlw	6
  6234  015C3A  6EE6               	movwf	postinc1,c
  6235  015C3C  ECDD  F0B7         	call	_sprintf	;wreg free
  6236  015C40                     l1595:
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6240  015C40  0102               	movlb	2	; () banked
  6241  015C42  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6242  015C44  32E8               	rrcf	wreg,f,c
  6243  015C46  32E8               	rrcf	wreg,f,c
  6244  015C48  0B03               	andlw	3
  6245  015C4A  0D24               	mullw	36
  6246  015C4C  0E12               	movlw	18
  6247  015C4E  26F3               	addwf	243,f,c
  6248  015C50  0E00               	movlw	0
  6249  015C52  22F4               	addwfc	244,f,c
  6250  015C54  0EB1               	movlw	low _T
  6251  015C56  6E2F               	movwf	(btemp+10)^0,c
  6252  015C58  0EFD               	movlw	high _T
  6253  015C5A  6E30               	movwf	(btemp+11)^0,c
  6254  015C5C  50F3               	movf	243,w,c
  6255  015C5E  262F               	addwf	(btemp+10)^0,f,c
  6256  015C60  50F4               	movf	244,w,c
  6257  015C62  2230               	addwfc	(btemp+11)^0,f,c
  6258  015C64  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6259  015C6A  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6260  015C70  0ECC               	movlw	low STR_31
  6261  015C72  6EE6               	movwf	postinc1,c
  6262  015C74  0EFF               	movlw	high STR_31
  6263  015C76  6EE6               	movwf	postinc1,c
  6264  015C78  0E01               	movlw	1
  6265  015C7A  6EE6               	movwf	postinc1,c
  6266  015C7C  0E01               	movlw	1
  6267  015C7E  6EE6               	movwf	postinc1,c
  6268  015C80  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6269  015C84  0060  F097  FFE6   	movff	btemp,postinc1
  6270  015C8A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6271  015C90  0E06               	movlw	6
  6272  015C92  6EE6               	movwf	postinc1,c
  6273  015C94  ECDD  F0B7         	call	_sprintf	;wreg free
  6274                           
  6275                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6276  015C98  0102               	movlb	2	; () banked
  6277  015C9A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6278  015C9C  32E8               	rrcf	wreg,f,c
  6279  015C9E  32E8               	rrcf	wreg,f,c
  6280  015CA0  0B03               	andlw	3
  6281  015CA2  0D24               	mullw	36
  6282  015CA4  0EB1               	movlw	low _T
  6283  015CA6  6E2F               	movwf	(btemp+10)^0,c
  6284  015CA8  0EFD               	movlw	high _T
  6285  015CAA  6E30               	movwf	(btemp+11)^0,c
  6286  015CAC  50F3               	movf	243,w,c
  6287  015CAE  262F               	addwf	(btemp+10)^0,f,c
  6288  015CB0  50F4               	movf	244,w,c
  6289  015CB2  2230               	addwfc	(btemp+11)^0,f,c
  6290  015CB4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6291  015CBA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6292  015CC0  0ECC               	movlw	low STR_31
  6293  015CC2  6EE6               	movwf	postinc1,c
  6294  015CC4  0EFF               	movlw	high STR_31
  6295  015CC6  6EE6               	movwf	postinc1,c
  6296  015CC8  0E01               	movlw	1
  6297  015CCA  6EE6               	movwf	postinc1,c
  6298  015CCC  0E02               	movlw	2
  6299  015CCE  6EE6               	movwf	postinc1,c
  6300  015CD0  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6301  015CD4  0060  F097  FFE6   	movff	btemp,postinc1
  6302  015CDA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6303  015CE0  0E06               	movlw	6
  6304  015CE2  6EE6               	movwf	postinc1,c
  6305  015CE4  ECDD  F0B7         	call	_sprintf	;wreg free
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;mconfig.c: 61:   V.help_id++;
  6309  015CE8  EE20  F29B         	lfsr	2,_V+155	;volatile
  6310  015CEC  38DF               	swapf	223,w,c
  6311  015CEE  6E30               	movwf	(btemp+11)^0,c
  6312  015CF0  3230               	rrcf	(btemp+11)^0,f,c
  6313  015CF2  3030               	rrcf	(btemp+11)^0,w,c
  6314  015CF4  0B03               	andlw	3
  6315  015CF6  6E30               	movwf	(btemp+11)^0,c
  6316  015CF8  2A30               	incf	(btemp+11)^0,f,c
  6317  015CFA  3A30               	swapf	(btemp+11)^0,f,c
  6318  015CFC  3630               	rlcf	(btemp+11)^0,f,c
  6319  015CFE  3630               	rlcf	(btemp+11)^0,f,c
  6320  015D00  50DF               	movf	223,w,c
  6321  015D02  1830               	xorwf	(btemp+11)^0,w,c
  6322  015D04  0B3F               	andlw	-193
  6323  015D06  1830               	xorwf	(btemp+11)^0,w,c
  6324  015D08  6EDF               	movwf	223,c
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6328  015D0A  0EB8               	movlw	184
  6329  015D0C  6EE6               	movwf	postinc1,c
  6330  015D0E  0E0B               	movlw	11
  6331  015D10  6EE6               	movwf	postinc1,c
  6332  015D12  0E09               	movlw	9
  6333  015D14  6EE6               	movwf	postinc1,c
  6334  015D16  EC68  F0C3         	call	_StartTimer	;wreg free
  6335                           
  6336                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6337  015D1A  0EB8               	movlw	184
  6338  015D1C  6EE6               	movwf	postinc1,c
  6339  015D1E  0E0B               	movlw	11
  6340  015D20  6EE6               	movwf	postinc1,c
  6341  015D22  0E07               	movlw	7
  6342  015D24  6EE6               	movwf	postinc1,c
  6343  015D26  EC68  F0C3         	call	_StartTimer	;wreg free
  6344                           
  6345                           ;mconfig.c: 64:   mode_lamp_bright();
  6346  015D2A  EC83  F0C8         	call	_mode_lamp_bright	;wreg free
  6347                           
  6348                           ;mconfig.c: 65:   update_lcd(1);
  6349  015D2E  0E01               	movlw	1
  6350  015D30  6EE6               	movwf	postinc1,c
  6351  015D32  EC55  F0B7         	call	_update_lcd	;wreg free
  6352                           
  6353                           ;mconfig.c: 67:  } else {
  6354  015D36  D032               	goto	l1596
  6355  015D38                     l10989:
  6356                           
  6357                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6358  015D38  0E09               	movlw	9
  6359  015D3A  6EE6               	movwf	postinc1,c
  6360  015D3C  ECAF  F0C5         	call	_TimerDone	;wreg free
  6361  015D40  5025               	movf	btemp^0,w,c
  6362  015D42  B4D8               	btfsc	status,2,c
  6363  015D44  D02B               	goto	l1596
  6364                           
  6365                           ;mconfig.c: 69:    set_vterm(0);
  6366  015D46  0E00               	movlw	0
  6367  015D48  6EE6               	movwf	postinc1,c
  6368  015D4A  ECAD  F0C7         	call	_set_vterm	;wreg free
  6369                           
  6370                           ;mconfig.c: 70:    V.help = 0;
  6371  015D4E  0102               	movlb	2	; () banked
  6372  015D50  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6373                           
  6374                           ; BSR set to: 2
  6375                           ;mconfig.c: 71:    set_display_info(display_help());
  6376  015D52  ECB7  F0C8         	call	_display_help	;wreg free
  6377  015D56  5025               	movf	btemp^0,w,c
  6378  015D58  6EE6               	movwf	postinc1,c
  6379  015D5A  ECBC  F0C7         	call	_set_display_info	;wreg free
  6380                           
  6381                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6382  015D5E  0060  FA57  FFE6   	movff	_V+149,postinc1
  6383  015D64  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6384  015D6A  EC1F  F0C8         	call	_mode_lamp_dim	;wreg free
  6385                           
  6386                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6387  015D6E  0E0B               	movlw	11
  6388  015D70  6EE6               	movwf	postinc1,c
  6389  015D72  ECAF  F0C5         	call	_TimerDone	;wreg free
  6390  015D76  5025               	movf	btemp^0,w,c
  6391  015D78  B4D8               	btfsc	status,2,c
  6392  015D7A  D010               	goto	l1596
  6393                           
  6394                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6395  015D7C  0102               	movlb	2	; () banked
  6396  015D7E  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6397  015D80  A4D8               	btfss	status,2,c
  6398  015D82  D002               	goto	u10690
  6399  015D84  0E01               	movlw	1
  6400  015D86  D001               	goto	u10700
  6401  015D88                     u10690:
  6402  015D88  0E00               	movlw	0
  6403  015D8A                     u10700:
  6404  015D8A  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6405                           
  6406                           ; BSR set to: 2
  6407                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6408  015D8C  0EDC               	movlw	220
  6409  015D8E  6EE6               	movwf	postinc1,c
  6410  015D90  0E05               	movlw	5
  6411  015D92  6EE6               	movwf	postinc1,c
  6412  015D94  0E0B               	movlw	11
  6413  015D96  6EE6               	movwf	postinc1,c
  6414  015D98  EC68  F0C3         	call	_StartTimer	;wreg free
  6415  015D9C                     l1596:
  6416                           
  6417                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6418  015D9C  52E5               	movf	postdec1,f,c
  6419  015D9E  0012               	return		;funcret
  6420  015DA0                     __end_of_check_help:
  6421                           	opt callstack 0
  6422                           
  6423 ;; *************** function _vterm_dump *****************
  6424 ;; Defined at:
  6425 ;;		line 121 in file "mconfig.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1  [STACK] void 
  6432 ;; Registers used:
  6433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6434 ;; Tracked objects:
  6435 ;;		On entry : 3F/2
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:   21
  6446 ;; This function calls:
  6447 ;;		_WaitMs
  6448 ;;		_eaDogM_WriteStringAtPos
  6449 ;;		_get_vterm_ptr
  6450 ;;		_sprintf
  6451 ;;		_wait_lcd_done
  6452 ;; This function is called by:
  6453 ;;		_check_help
  6454 ;; This function uses a reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text25
  6458  016A2C                     __ptext25:
  6459                           	opt callstack 0
  6460  016A2C                     _vterm_dump:
  6461                           	opt callstack 8
  6462                           
  6463                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6464                           
  6465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6466                           ;incstack = 0
  6467  016A2C  0E01               	movlw	1
  6468  016A2E  6EE6               	movwf	postinc1,c
  6469  016A30  0E00               	movlw	0
  6470  016A32  6EE6               	movwf	postinc1,c
  6471  016A34  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6472  016A38  0060  F097  FFE6   	movff	btemp,postinc1
  6473  016A3E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6474  016A44  0E00               	movlw	0
  6475  016A46  6EE6               	movwf	postinc1,c
  6476  016A48  0E00               	movlw	0
  6477  016A4A  6EE6               	movwf	postinc1,c
  6478  016A4C  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6479  016A50  0060  F097  FFE6   	movff	btemp,postinc1
  6480  016A56  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6481  016A5C  0EA2               	movlw	low STR_33
  6482  016A5E  6EE6               	movwf	postinc1,c
  6483  016A60  0EFF               	movlw	high STR_33
  6484  016A62  6EE6               	movwf	postinc1,c
  6485  016A64  0E01               	movlw	low (_V+1)
  6486  016A66  6EE6               	movwf	postinc1,c
  6487  016A68  0E02               	movlw	high (_V+1)
  6488  016A6A  6EE6               	movwf	postinc1,c
  6489  016A6C  0E08               	movlw	8
  6490  016A6E  6EE6               	movwf	postinc1,c
  6491  016A70  ECDD  F0B7         	call	_sprintf	;wreg free
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;mconfig.c: 124:  wait_lcd_done();
  6495  016A74  ECE9  F0C7         	call	_wait_lcd_done	;wreg free
  6496                           
  6497                           ; BSR set to: 0
  6498                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6499  016A78  0E01               	movlw	low (_V+1)
  6500  016A7A  6EE6               	movwf	postinc1,c
  6501  016A7C  0E02               	movlw	high (_V+1)
  6502  016A7E  6EE6               	movwf	postinc1,c
  6503  016A80  0E00               	movlw	0
  6504  016A82  6EE6               	movwf	postinc1,c
  6505  016A84  0E00               	movlw	0
  6506  016A86  6EE6               	movwf	postinc1,c
  6507  016A88  EC59  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  6508                           
  6509                           ; BSR set to: 59
  6510                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6511  016A8C  0E01               	movlw	1
  6512  016A8E  6EE6               	movwf	postinc1,c
  6513  016A90  0E01               	movlw	1
  6514  016A92  6EE6               	movwf	postinc1,c
  6515  016A94  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6516  016A98  0060  F097  FFE6   	movff	btemp,postinc1
  6517  016A9E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6518  016AA4  0E00               	movlw	0
  6519  016AA6  6EE6               	movwf	postinc1,c
  6520  016AA8  0E01               	movlw	1
  6521  016AAA  6EE6               	movwf	postinc1,c
  6522  016AAC  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6523  016AB0  0060  F097  FFE6   	movff	btemp,postinc1
  6524  016AB6  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6525  016ABC  0EA2               	movlw	low STR_33
  6526  016ABE  6EE6               	movwf	postinc1,c
  6527  016AC0  0EFF               	movlw	high STR_33
  6528  016AC2  6EE6               	movwf	postinc1,c
  6529  016AC4  0E01               	movlw	low (_V+1)
  6530  016AC6  6EE6               	movwf	postinc1,c
  6531  016AC8  0E02               	movlw	high (_V+1)
  6532  016ACA  6EE6               	movwf	postinc1,c
  6533  016ACC  0E08               	movlw	8
  6534  016ACE  6EE6               	movwf	postinc1,c
  6535  016AD0  ECDD  F0B7         	call	_sprintf	;wreg free
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;mconfig.c: 127:  wait_lcd_done();
  6539  016AD4  ECE9  F0C7         	call	_wait_lcd_done	;wreg free
  6540                           
  6541                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6542  016AD8  0E01               	movlw	low (_V+1)
  6543  016ADA  6EE6               	movwf	postinc1,c
  6544  016ADC  0E02               	movlw	high (_V+1)
  6545  016ADE  6EE6               	movwf	postinc1,c
  6546  016AE0  0E00               	movlw	0
  6547  016AE2  6EE6               	movwf	postinc1,c
  6548  016AE4  0E01               	movlw	1
  6549  016AE6  6EE6               	movwf	postinc1,c
  6550  016AE8  EC59  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  6551                           
  6552                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6553  016AEC  0E01               	movlw	1
  6554  016AEE  6EE6               	movwf	postinc1,c
  6555  016AF0  0E02               	movlw	2
  6556  016AF2  6EE6               	movwf	postinc1,c
  6557  016AF4  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6558  016AF8  0060  F097  FFE6   	movff	btemp,postinc1
  6559  016AFE  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6560  016B04  0E00               	movlw	0
  6561  016B06  6EE6               	movwf	postinc1,c
  6562  016B08  0E02               	movlw	2
  6563  016B0A  6EE6               	movwf	postinc1,c
  6564  016B0C  ECF0  F0C4         	call	_get_vterm_ptr	;wreg free
  6565  016B10  0060  F097  FFE6   	movff	btemp,postinc1
  6566  016B16  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6567  016B1C  0EA2               	movlw	low STR_33
  6568  016B1E  6EE6               	movwf	postinc1,c
  6569  016B20  0EFF               	movlw	high STR_33
  6570  016B22  6EE6               	movwf	postinc1,c
  6571  016B24  0E01               	movlw	low (_V+1)
  6572  016B26  6EE6               	movwf	postinc1,c
  6573  016B28  0E02               	movlw	high (_V+1)
  6574  016B2A  6EE6               	movwf	postinc1,c
  6575  016B2C  0E08               	movlw	8
  6576  016B2E  6EE6               	movwf	postinc1,c
  6577  016B30  ECDD  F0B7         	call	_sprintf	;wreg free
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;mconfig.c: 130:  wait_lcd_done();
  6581  016B34  ECE9  F0C7         	call	_wait_lcd_done	;wreg free
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6585  016B38  0E01               	movlw	low (_V+1)
  6586  016B3A  6EE6               	movwf	postinc1,c
  6587  016B3C  0E02               	movlw	high (_V+1)
  6588  016B3E  6EE6               	movwf	postinc1,c
  6589  016B40  0E00               	movlw	0
  6590  016B42  6EE6               	movwf	postinc1,c
  6591  016B44  0E02               	movlw	2
  6592  016B46  6EE6               	movwf	postinc1,c
  6593  016B48  EC59  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  6594                           
  6595                           ; BSR set to: 59
  6596                           ;mconfig.c: 132:  WaitMs(3000);
  6597  016B4C  0EB8               	movlw	184
  6598  016B4E  6EE6               	movwf	postinc1,c
  6599  016B50  0E0B               	movlw	11
  6600  016B52  6EE6               	movwf	postinc1,c
  6601  016B54  EC3E  F0C4         	call	_WaitMs	;wreg free
  6602                           
  6603                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6604  016B58  0012               	return		;funcret
  6605  016B5A                     __end_of_vterm_dump:
  6606                           	opt callstack 0
  6607                           
  6608 ;; *************** function _sprintf *****************
  6609 ;; Defined at:
  6610 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  s               2  [STACK] PTR unsigned char 
  6613 ;;		 -> D.lcd(288), D(290), V(188), 
  6614 ;;  fmt             2  [STACK] PTR const unsigned char 
  6615 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6616 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6617 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6618 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6619 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6620 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  6621 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6622 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6623 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6624 ;;		 -> STR_1(17), 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  f               6  [STACK] struct _IO_FILE
  6627 ;;  ap              2  [STACK] PTR void [1]
  6628 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6629 ;;  ret             2    0        int 
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  2  [STACK] int 
  6632 ;; Registers used:
  6633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/1
  6636 ;;		On exit  : 3F/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6643 ;;Total ram usage:        0 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:   18
  6646 ;; This function calls:
  6647 ;;		_vfprintf
  6648 ;; This function is called by:
  6649 ;;		_main
  6650 ;;		_check_help
  6651 ;;		_vterm_dump
  6652 ;; This function uses a reentrant model
  6653 ;;
  6654                           
  6655                           	psect	text26
  6656  016FBA                     __ptext26:
  6657                           	opt callstack 0
  6658  016FBA                     _sprintf:
  6659                           	opt callstack 0
  6660                           
  6661                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6662  016FBA  0E08               	movlw	8
  6663  016FBC  26E1               	addwf	fsr1l,f,c
  6664  016FBE  0E00               	movlw	0
  6665  016FC0  22E2               	addwfc	fsr1h,f,c
  6666                           
  6667                           ;incstack = 0
  6668  016FC2  0EFE               	movlw	254
  6669  016FC4  6E2F               	movwf	(btemp+10)^0,c
  6670  016FC6  0EFF               	movlw	255
  6671  016FC8  6E30               	movwf	(btemp+11)^0,c
  6672                           
  6673                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6674  016FCA  0EF5               	movlw	245
  6675  016FCC  24E1               	addwf	fsr1l,w,c
  6676  016FCE  6E2D               	movwf	(btemp+8)^0,c
  6677  016FD0  0EFF               	movlw	255
  6678  016FD2  20E2               	addwfc	fsr1h,w,c
  6679  016FD4  6E2E               	movwf	(btemp+9)^0,c
  6680  016FD6  502F               	movf	(btemp+10)^0,w,c
  6681  016FD8  262D               	addwf	(btemp+8)^0,f,c
  6682  016FDA  5030               	movf	(btemp+11)^0,w,c
  6683  016FDC  222E               	addwfc	(btemp+9)^0,f,c
  6684                           
  6685                           ;stkvar	_ap @ sp[(-8)+6]
  6686  016FDE  0EFF               	movlw	-1
  6687  016FE0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  6688  016FE6  0EFE               	movlw	-2
  6689  016FE8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  6690                           
  6691                           ;stkvar	_s @ sp[(-8)+-3]
  6692  016FEE  0EF5               	movlw	-11
  6693  016FF0  006F FF8C  F02F    	movff	plusw1,btemp+10
  6694  016FF6  0EF6               	movlw	-10
  6695  016FF8  006F FF8C  F030    	movff	plusw1,btemp+11
  6696                           
  6697                           ;stkvar	_f @ sp[(-8)+0]
  6698  016FFE  0EF9               	movlw	-7
  6699  017000  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  6700  017006  0EF8               	movlw	-8
  6701  017008  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  6702                           
  6703                           ;stkvar	_f @ sp[(-8)+0]
  6704  01700E  0EFA               	movlw	250
  6705  017010  24E1               	addwf	fsr1l,w,c
  6706  017012  6ED9               	movwf	fsr2l,c
  6707  017014  0EFF               	movlw	255
  6708  017016  20E2               	addwfc	fsr1h,w,c
  6709  017018  6EDA               	movwf	fsr2h,c
  6710  01701A  0E00               	movlw	0
  6711  01701C  6EDE               	movwf	postinc2,c
  6712  01701E  0E00               	movlw	0
  6713  017020  6EDD               	movwf	postdec2,c
  6714                           
  6715                           ;stkvar	_f @ sp[(-8)+0]
  6716  017022  0EFC               	movlw	252
  6717  017024  24E1               	addwf	fsr1l,w,c
  6718  017026  6ED9               	movwf	fsr2l,c
  6719  017028  0EFF               	movlw	255
  6720  01702A  20E2               	addwfc	fsr1h,w,c
  6721  01702C  6EDA               	movwf	fsr2h,c
  6722  01702E  0E00               	movlw	0
  6723  017030  6EDE               	movwf	postinc2,c
  6724  017032  0E00               	movlw	0
  6725  017034  6EDD               	movwf	postdec2,c
  6726                           
  6727                           ;stkvar	_ap @ sp[(-8)+6]
  6728  017036  0EFE               	movlw	254
  6729  017038  24E1               	addwf	fsr1l,w,c
  6730  01703A  6E25               	movwf	btemp^0,c
  6731  01703C  0EFF               	movlw	255
  6732  01703E  20E2               	addwfc	fsr1h,w,c
  6733  017040  6E26               	movwf	(btemp+1)^0,c
  6734  017042  0060  F097  FFE6   	movff	btemp,postinc1
  6735  017048  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6736                           
  6737                           ;stkvar	_fmt @ sp[(-10)+-5]
  6738  01704E  0EF1               	movlw	-15
  6739  017050  006F FF8F FFE6     	movff	plusw1,postinc1
  6740  017056  006F FF8F FFE6     	movff	plusw1,postinc1
  6741                           
  6742                           ;stkvar	_f @ sp[(-12)+0]
  6743  01705C  0EF4               	movlw	244
  6744  01705E  24E1               	addwf	fsr1l,w,c
  6745  017060  6E25               	movwf	btemp^0,c
  6746  017062  0EFF               	movlw	255
  6747  017064  20E2               	addwfc	fsr1h,w,c
  6748  017066  6E26               	movwf	(btemp+1)^0,c
  6749  017068  0060  F097  FFE6   	movff	btemp,postinc1
  6750  01706E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6751  017074  ECC5  F0BB         	call	_vfprintf	;wreg free
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;stkvar	_f @ sp[(-8)+0]
  6755  017078  0EFA               	movlw	250
  6756  01707A  24E1               	addwf	fsr1l,w,c
  6757  01707C  6ED9               	movwf	fsr2l,c
  6758  01707E  0EFF               	movlw	255
  6759  017080  20E2               	addwfc	fsr1h,w,c
  6760  017082  6EDA               	movwf	fsr2h,c
  6761  017084  006F FF78  F02F    	movff	postinc2,btemp+10
  6762  01708A  006F FF74  F030    	movff	postdec2,btemp+11
  6763                           
  6764                           ;stkvar	_s @ sp[(-8)+-3]
  6765  017090  0EF5               	movlw	-11
  6766  017092  006F FF8C  F02D    	movff	plusw1,btemp+8
  6767  017098  0EF6               	movlw	-10
  6768  01709A  006F FF8C  F02E    	movff	plusw1,btemp+9
  6769  0170A0  502F               	movf	(btemp+10)^0,w,c
  6770  0170A2  242D               	addwf	(btemp+8)^0,w,c
  6771  0170A4  6ED9               	movwf	fsr2l,c
  6772  0170A6  5030               	movf	(btemp+11)^0,w,c
  6773  0170A8  202E               	addwfc	(btemp+9)^0,w,c
  6774  0170AA  6EDA               	movwf	fsr2h,c
  6775  0170AC  0E00               	movlw	0
  6776  0170AE  6EDF               	movwf	indf2,c
  6777                           
  6778                           ; BSR set to: 0
  6779                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6780  0170B0  0EF8               	movlw	248
  6781  0170B2  26E1               	addwf	fsr1l,f,c
  6782  0170B4  0EFF               	movlw	255
  6783  0170B6  22E2               	addwfc	fsr1h,f,c
  6784  0170B8  52E5               	movf	postdec1,f,c
  6785  0170BA  50E7               	movf	indf1,w,c
  6786  0170BC  5EE1               	subwf	fsr1l,f,c
  6787  0170BE  0E00               	movlw	0
  6788  0170C0  5AE2               	subwfb	fsr1h,f,c
  6789  0170C2  0012               	return		;funcret
  6790  0170C4                     __end_of_sprintf:
  6791                           	opt callstack 0
  6792                           
  6793 ;; *************** function _get_vterm_ptr *****************
  6794 ;; Defined at:
  6795 ;;		line 116 in file "mconfig.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  line            1  [STACK] const unsigned char 
  6798 ;;  vterm           1  [STACK] const unsigned char 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;		None
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  2  [STACK] PTR unsigned char 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/1
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6814 ;;Total ram usage:        0 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:   10
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_main
  6821 ;;		_check_help
  6822 ;;		_vterm_dump
  6823 ;; This function uses a reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text27
  6827  0189E0                     __ptext27:
  6828                           	opt callstack 0
  6829  0189E0                     _get_vterm_ptr:
  6830                           	opt callstack 20
  6831                           
  6832                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6833                           ;stkvar	_vterm @ sp[(0)+-2]
  6834                           
  6835                           ; BSR set to: 0
  6836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6837                           ;incstack = 0
  6838  0189E0  0EFE               	movlw	-2
  6839  0189E2  50E3               	movf	plusw1,w,c
  6840  0189E4  0B03               	andlw	3
  6841  0189E6  0D48               	mullw	72
  6842  0189E8  0EFF               	movlw	low _D
  6843  0189EA  6E25               	movwf	btemp^0,c
  6844  0189EC  0E06               	movlw	high _D
  6845  0189EE  6E26               	movwf	(btemp+1)^0,c
  6846  0189F0  50F3               	movf	243,w,c
  6847  0189F2  2625               	addwf	btemp^0,f,c
  6848  0189F4  50F4               	movf	244,w,c
  6849  0189F6  2226               	addwfc	(btemp+1)^0,f,c
  6850                           
  6851                           ;stkvar	_line @ sp[(0)+-1]
  6852  0189F8  0EFF               	movlw	-1
  6853  0189FA  50E3               	movf	plusw1,w,c
  6854  0189FC  0B03               	andlw	3
  6855  0189FE  0D18               	mullw	24
  6856  018A00  50F3               	movf	243,w,c
  6857  018A02  2625               	addwf	btemp^0,f,c
  6858  018A04  50F4               	movf	244,w,c
  6859  018A06  2226               	addwfc	(btemp+1)^0,f,c
  6860                           
  6861                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6862  018A08  52E5               	movf	postdec1,f,c
  6863  018A0A  52E5               	movf	postdec1,f,c
  6864  018A0C  0012               	return		;funcret
  6865  018A0E                     __end_of_get_vterm_ptr:
  6866                           	opt callstack 0
  6867                           
  6868 ;; *************** function _WaitMs *****************
  6869 ;; Defined at:
  6870 ;;		line 32 in file "timers.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  numMilliseco    2  [STACK] const unsigned short 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;		None
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  1  [STACK] void 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/2
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6888 ;;Total ram usage:        0 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:   11
  6891 ;; This function calls:
  6892 ;;		_StartTimer
  6893 ;;		_TimerDone
  6894 ;; This function is called by:
  6895 ;;		_main
  6896 ;;		_vterm_dump
  6897 ;; This function uses a reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text28
  6901  01887C                     __ptext28:
  6902                           	opt callstack 0
  6903  01887C                     _WaitMs:
  6904                           	opt callstack 17
  6905                           
  6906                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6907                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6908                           
  6909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6910                           ;incstack = 0
  6911  01887C  0EFE               	movlw	-2
  6912  01887E  006F FF8F FFE6     	movff	plusw1,postinc1
  6913  018884  006F FF8F FFE6     	movff	plusw1,postinc1
  6914  01888A  0E00               	movlw	0
  6915  01888C  6EE6               	movwf	postinc1,c
  6916  01888E  EC68  F0C3         	call	_StartTimer	;wreg free
  6917                           
  6918                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6919  018892  D005               	goto	l8481
  6920  018894                     l1525:
  6921                           
  6922                           ;timers.c: 36:   __nop();
  6923  018894  F000               	nop	
  6924                           
  6925                           ;timers.c: 37:   __nop();
  6926  018896  F000               	nop	
  6927                           
  6928                           ;timers.c: 38:   __nop();
  6929  018898  F000               	nop	
  6930                           
  6931                           ;timers.c: 39:   __nop();
  6932  01889A  F000               	nop	
  6933  01889C  0004               	clrwdt		;# 
  6934  01889E                     l8481:
  6935                           
  6936                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6937  01889E  0E00               	movlw	0
  6938  0188A0  6EE6               	movwf	postinc1,c
  6939  0188A2  ECAF  F0C5         	call	_TimerDone	;wreg free
  6940  0188A6  5025               	movf	btemp^0,w,c
  6941  0188A8  B4D8               	btfsc	status,2,c
  6942  0188AA  D7F4               	goto	l1525
  6943                           
  6944                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6945  0188AC  52E5               	movf	postdec1,f,c
  6946  0188AE  52E5               	movf	postdec1,f,c
  6947  0188B0  0012               	return		;funcret
  6948  0188B2                     __end_of_WaitMs:
  6949                           	opt callstack 0
  6950                           
  6951 ;; *************** function _update_lcd *****************
  6952 ;; Defined at:
  6953 ;;		line 85 in file "mconfig.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  vterm           1  [STACK] unsigned char 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  1  [STACK] unsigned char 
  6960 ;; Registers used:
  6961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6971 ;;Total ram usage:        0 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:   21
  6974 ;; This function calls:
  6975 ;;		_eaDogM_WriteStringAtPos
  6976 ;;		_wait_lcd_done
  6977 ;; This function is called by:
  6978 ;;		_main
  6979 ;;		_check_help
  6980 ;; This function uses a reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text29
  6984  016EAA                     __ptext29:
  6985                           	opt callstack 0
  6986  016EAA                     _update_lcd:
  6987                           	opt callstack 9
  6988                           
  6989                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  6990                           ;stkvar	_vterm @ sp[(0)+-1]
  6991                           
  6992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6993                           ;incstack = 0
  6994  016EAA  0EFF               	movlw	-1
  6995  016EAC  006F FF8C  F025    	movff	plusw1,btemp
  6996  016EB2  0E03               	movlw	3
  6997  016EB4  1625               	andwf	btemp^0,f,c
  6998  016EB6  0EFF               	movlw	-1
  6999  016EB8  0060  F097  FFE3   	movff	btemp,plusw1
  7000                           
  7001                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7002  016EBE  EE22  F01F         	lfsr	2,_D+288
  7003  016EC2  A0DF               	btfss	indf2,0,c
  7004  016EC4  D004               	goto	l10855
  7005                           
  7006                           ;stkvar	_vterm @ sp[(0)+-1]
  7007  016EC6  0EFF               	movlw	-1
  7008  016EC8  50E3               	movf	plusw1,w,c
  7009  016ECA  B4D8               	btfsc	status,2,c
  7010  016ECC  D074               	goto	l1603
  7011  016ECE                     l10855:
  7012                           
  7013                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7014                           ;stkvar	_vterm @ sp[(0)+-1]
  7015  016ECE  0EFF               	movlw	-1
  7016  016ED0  50E3               	movf	plusw1,w,c
  7017  016ED2  0D48               	mullw	72
  7018  016ED4  0E0F               	movlw	low (_D+16)
  7019  016ED6  24F3               	addwf	243,w,c
  7020  016ED8  6ED9               	movwf	fsr2l,c
  7021  016EDA  0E07               	movlw	high (_D+16)
  7022  016EDC  20F4               	addwfc	prodh,w,c
  7023  016EDE  6EDA               	movwf	fsr2h,c
  7024  016EE0  0E00               	movlw	0
  7025  016EE2  6EDF               	movwf	indf2,c
  7026                           
  7027                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7028                           ;stkvar	_vterm @ sp[(0)+-1]
  7029  016EE4  0EFF               	movlw	-1
  7030  016EE6  50E3               	movf	plusw1,w,c
  7031  016EE8  0D48               	mullw	72
  7032  016EEA  0E27               	movlw	low (_D+40)
  7033  016EEC  24F3               	addwf	243,w,c
  7034  016EEE  6ED9               	movwf	fsr2l,c
  7035  016EF0  0E07               	movlw	high (_D+40)
  7036  016EF2  20F4               	addwfc	prodh,w,c
  7037  016EF4  6EDA               	movwf	fsr2h,c
  7038  016EF6  0E00               	movlw	0
  7039  016EF8  6EDF               	movwf	indf2,c
  7040                           
  7041                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7042                           ;stkvar	_vterm @ sp[(0)+-1]
  7043  016EFA  0EFF               	movlw	-1
  7044  016EFC  50E3               	movf	plusw1,w,c
  7045  016EFE  0D48               	mullw	72
  7046  016F00  0E3F               	movlw	low (_D+64)
  7047  016F02  24F3               	addwf	243,w,c
  7048  016F04  6ED9               	movwf	fsr2l,c
  7049  016F06  0E07               	movlw	high (_D+64)
  7050  016F08  20F4               	addwfc	prodh,w,c
  7051  016F0A  6EDA               	movwf	fsr2h,c
  7052  016F0C  0E00               	movlw	0
  7053  016F0E  6EDF               	movwf	indf2,c
  7054                           
  7055                           ;mconfig.c: 95:  wait_lcd_done();
  7056  016F10  ECE9  F0C7         	call	_wait_lcd_done	;wreg free
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7060                           ;stkvar	_vterm @ sp[(0)+-1]
  7061  016F14  0EFF               	movlw	-1
  7062  016F16  50E3               	movf	plusw1,w,c
  7063  016F18  0D48               	mullw	72
  7064  016F1A  0EFF               	movlw	low _D
  7065  016F1C  6E2F               	movwf	(btemp+10)^0,c
  7066  016F1E  0E06               	movlw	high _D
  7067  016F20  6E30               	movwf	(btemp+11)^0,c
  7068  016F22  50F3               	movf	243,w,c
  7069  016F24  262F               	addwf	(btemp+10)^0,f,c
  7070  016F26  50F4               	movf	244,w,c
  7071  016F28  2230               	addwfc	(btemp+11)^0,f,c
  7072  016F2A  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7073  016F30  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7074  016F36  0E00               	movlw	0
  7075  016F38  6EE6               	movwf	postinc1,c
  7076  016F3A  0E00               	movlw	0
  7077  016F3C  6EE6               	movwf	postinc1,c
  7078  016F3E  EC59  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  7079                           
  7080                           ; BSR set to: 59
  7081                           ;mconfig.c: 97:  wait_lcd_done();
  7082  016F42  ECE9  F0C7         	call	_wait_lcd_done	;wreg free
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7086                           ;stkvar	_vterm @ sp[(0)+-1]
  7087  016F46  0EFF               	movlw	-1
  7088  016F48  50E3               	movf	plusw1,w,c
  7089  016F4A  0D48               	mullw	72
  7090  016F4C  0EFF               	movlw	low _D
  7091  016F4E  6E2F               	movwf	(btemp+10)^0,c
  7092  016F50  0E06               	movlw	high _D
  7093  016F52  6E30               	movwf	(btemp+11)^0,c
  7094  016F54  0E18               	movlw	24
  7095  016F56  262F               	addwf	(btemp+10)^0,f,c
  7096  016F58  0E00               	movlw	0
  7097  016F5A  2230               	addwfc	(btemp+11)^0,f,c
  7098  016F5C  50F3               	movf	243,w,c
  7099  016F5E  262F               	addwf	(btemp+10)^0,f,c
  7100  016F60  50F4               	movf	244,w,c
  7101  016F62  2230               	addwfc	(btemp+11)^0,f,c
  7102  016F64  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7103  016F6A  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7104  016F70  0E00               	movlw	0
  7105  016F72  6EE6               	movwf	postinc1,c
  7106  016F74  0E01               	movlw	1
  7107  016F76  6EE6               	movwf	postinc1,c
  7108  016F78  EC59  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  7109                           
  7110                           ; BSR set to: 59
  7111                           ;mconfig.c: 99:  wait_lcd_done();
  7112  016F7C  ECE9  F0C7         	call	_wait_lcd_done	;wreg free
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7116                           ;stkvar	_vterm @ sp[(0)+-1]
  7117  016F80  0EFF               	movlw	-1
  7118  016F82  50E3               	movf	plusw1,w,c
  7119  016F84  0D48               	mullw	72
  7120  016F86  0EFF               	movlw	low _D
  7121  016F88  6E2F               	movwf	(btemp+10)^0,c
  7122  016F8A  0E06               	movlw	high _D
  7123  016F8C  6E30               	movwf	(btemp+11)^0,c
  7124  016F8E  0E30               	movlw	48
  7125  016F90  262F               	addwf	(btemp+10)^0,f,c
  7126  016F92  0E00               	movlw	0
  7127  016F94  2230               	addwfc	(btemp+11)^0,f,c
  7128  016F96  50F3               	movf	243,w,c
  7129  016F98  262F               	addwf	(btemp+10)^0,f,c
  7130  016F9A  50F4               	movf	244,w,c
  7131  016F9C  2230               	addwfc	(btemp+11)^0,f,c
  7132  016F9E  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7133  016FA4  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7134  016FAA  0E00               	movlw	0
  7135  016FAC  6EE6               	movwf	postinc1,c
  7136  016FAE  0E02               	movlw	2
  7137  016FB0  6EE6               	movwf	postinc1,c
  7138  016FB2  EC59  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  7139  016FB6                     l1603:
  7140                           
  7141                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7142  016FB6  52E5               	movf	postdec1,f,c
  7143  016FB8  0012               	return		;funcret
  7144  016FBA                     __end_of_update_lcd:
  7145                           	opt callstack 0
  7146                           
  7147 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7148 ;; Defined at:
  7149 ;;		line 255 in file "eadog.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;  r               1  [STACK] const unsigned char 
  7152 ;;  c               1  [STACK] const unsigned char 
  7153 ;;  strPtr          2  [STACK] PTR unsigned char 
  7154 ;;		 -> D.lcd(288), D(290), V(188), 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;		None
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1  [STACK] void 
  7159 ;; Registers used:
  7160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7161 ;; Tracked objects:
  7162 ;;		On entry : 3F/0
  7163 ;;		On exit  : 3F/3B
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7170 ;;Total ram usage:        0 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:   20
  7173 ;; This function calls:
  7174 ;;		_eaDogM_WriteString
  7175 ;;		_send_lcd_cmd_dma
  7176 ;; This function is called by:
  7177 ;;		_update_lcd
  7178 ;;		_vterm_dump
  7179 ;; This function uses a reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text30
  7183  0188B2                     __ptext30:
  7184                           	opt callstack 0
  7185  0188B2                     _eaDogM_WriteStringAtPos:
  7186                           	opt callstack 9
  7187                           
  7188                           ;eadog.c: 255: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 256: {;eadog.c: 257:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7189                           ;stkvar	_c @ sp[(0)+-2]
  7190                           
  7191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7192                           ;incstack = 0
  7193  0188B2  0EFE               	movlw	-2
  7194  0188B4  006F FF8C  F030    	movff	plusw1,btemp+11
  7195                           
  7196                           ;stkvar	_r @ sp[(0)+-1]
  7197  0188BA  0EFF               	movlw	-1
  7198  0188BC  50E3               	movf	plusw1,w,c
  7199  0188BE  0D10               	mullw	16
  7200  0188C0  50F3               	movf	243,w,c
  7201  0188C2  2430               	addwf	(btemp+11)^0,w,c
  7202  0188C4  0F80               	addlw	128
  7203  0188C6  6EE6               	movwf	postinc1,c
  7204  0188C8  ECD7  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  7205                           
  7206                           ;eadog.c: 258:  eaDogM_WriteString(strPtr);
  7207                           ;stkvar	_strPtr @ sp[(0)+-4]
  7208  0188CC  0EFC               	movlw	-4
  7209  0188CE  006F FF8F FFE6     	movff	plusw1,postinc1
  7210  0188D4  006F FF8F FFE6     	movff	plusw1,postinc1
  7211  0188DA  EC70  F0BC         	call	_eaDogM_WriteString	;wreg free
  7212                           
  7213                           ; BSR set to: 59
  7214                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7215  0188DE  52E5               	movf	postdec1,f,c
  7216  0188E0  52E5               	movf	postdec1,f,c
  7217  0188E2  52E5               	movf	postdec1,f,c
  7218  0188E4  52E5               	movf	postdec1,f,c
  7219  0188E6  0012               	return		;funcret
  7220  0188E8                     __end_of_eaDogM_WriteStringAtPos:
  7221                           	opt callstack 0
  7222                           
  7223 ;; *************** function _send_lcd_cmd_dma *****************
  7224 ;; Defined at:
  7225 ;;		line 208 in file "eadog.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  strPtr          1  [STACK] unsigned char 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;		None
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1  [STACK] void 
  7232 ;; Registers used:
  7233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/3D
  7236 ;;		On exit  : 3F/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7243 ;;Total ram usage:        0 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:   19
  7246 ;; This function calls:
  7247 ;;		_printf
  7248 ;;		_ringBufS_flush
  7249 ;;		_start_lcd
  7250 ;;		_wait_lcd_done
  7251 ;;		_wait_lcd_set
  7252 ;; This function is called by:
  7253 ;;		_eaDogM_WriteCommand
  7254 ;;		_eaDogM_WriteStringAtPos
  7255 ;; This function uses a reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text31
  7259  0183AE                     __ptext31:
  7260                           	opt callstack 0
  7261  0183AE                     _send_lcd_cmd_dma:
  7262                           	opt callstack 9
  7263                           
  7264                           ;eadog.c: 208: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 209: {;eadog.c: 211:  wait
      +                          _lcd_set();
  7265                           
  7266                           ; BSR set to: 59
  7267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7268                           ;incstack = 0
  7269  0183AE  ECC6  F0C8         	call	_wait_lcd_set	;wreg free
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;eadog.c: 213:  ringBufS_flush(spi_link.tx1a, 0);
  7273  0183B2  0E00               	movlw	0
  7274  0183B4  6EE6               	movwf	postinc1,c
  7275  0183B6  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7276  0183BC  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7277  0183C2  EC60  F0BD         	call	_ringBufS_flush	;wreg free
  7278  0183C6  92BC               	bcf	188,1,c	;volatile
  7279  0183C8  94BC               	bcf	188,2,c	;volatile
  7280                           
  7281                           ;eadog.c: 216:  DMA1CON0bits.EN = 0;
  7282  0183CA  013B               	movlb	59	; () banked
  7283  0183CC  9FFC               	bcf	252,7,b	;volatile
  7284                           
  7285                           ; BSR set to: 59
  7286                           ;eadog.c: 217:  DMA1SSZ = 1;
  7287  0183CE  0E00               	movlw	0
  7288  0183D0  6FF8               	movwf	248,b	;volatile
  7289  0183D2  0E01               	movlw	1
  7290  0183D4  6FF7               	movwf	247,b	;volatile
  7291                           
  7292                           ; BSR set to: 59
  7293                           ;eadog.c: 218:  DMA1CON0bits.EN = 1;
  7294  0183D6  8FFC               	bsf	252,7,b	;volatile
  7295                           
  7296                           ; BSR set to: 59
  7297                           ;eadog.c: 219:  printf("%c", strPtr);
  7298                           ;stkvar	_strPtr @ sp[(0)+-1]
  7299  0183D8  0EFF               	movlw	-1
  7300  0183DA  50E3               	movf	plusw1,w,c
  7301  0183DC  6EE6               	movwf	postinc1,c
  7302  0183DE  0E00               	movlw	0
  7303  0183E0  6EE6               	movwf	postinc1,c
  7304  0183E2  0EF8               	movlw	low STR_25
  7305  0183E4  6EE6               	movwf	postinc1,c
  7306  0183E6  0EFF               	movlw	high STR_25
  7307  0183E8  6EE6               	movwf	postinc1,c
  7308  0183EA  0E04               	movlw	4
  7309  0183EC  6EE6               	movwf	postinc1,c
  7310  0183EE  ECF0  F0C0         	call	_printf	;wreg free
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;eadog.c: 220:  start_lcd();
  7314  0183F2  ECC9  F0C8         	call	_start_lcd	;wreg free
  7315                           
  7316                           ; BSR set to: 59
  7317                           ;eadog.c: 221:  wait_lcd_done();
  7318  0183F6  ECE9  F0C7         	call	_wait_lcd_done	;wreg free
  7319                           
  7320                           ; BSR set to: 0
  7321  0183FA  82BC               	bsf	188,1,c	;volatile
  7322                           
  7323                           ; BSR set to: 0
  7324                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7325  0183FC  52E5               	movf	postdec1,f,c
  7326  0183FE  0012               	return		;funcret
  7327  018400                     __end_of_send_lcd_cmd_dma:
  7328                           	opt callstack 0
  7329                           
  7330 ;; *************** function _wait_lcd_done *****************
  7331 ;; Defined at:
  7332 ;;		line 144 in file "eadog.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;		None
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1  [STACK] void 
  7339 ;; Registers used:
  7340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 3F/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7350 ;;Total ram usage:        0 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:   11
  7353 ;; This function calls:
  7354 ;;		_wdtdelay
  7355 ;; This function is called by:
  7356 ;;		_send_lcd_cmd_dma
  7357 ;;		_update_lcd
  7358 ;;		_vterm_dump
  7359 ;; This function uses a reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text32
  7363  018FD2                     __ptext32:
  7364                           	opt callstack 0
  7365  018FD2                     _wait_lcd_done:
  7366                           	opt callstack 18
  7367                           
  7368                           ;eadog.c: 146:  while (spi_link.LCD_DATA);
  7369                           
  7370                           ; BSR set to: 0
  7371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7372                           ;incstack = 0
  7373  018FD2  0100               	movlb	0	; () banked
  7374  018FD4  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  7375  018FD6  D7FD               	goto	_wait_lcd_done
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;eadog.c: 147:  wdtdelay(50);
  7379  018FD8  0E32               	movlw	50
  7380  018FDA  6EE6               	movwf	postinc1,c
  7381  018FDC  0E00               	movlw	0
  7382  018FDE  6EE6               	movwf	postinc1,c
  7383  018FE0  0E00               	movlw	0
  7384  018FE2  6EE6               	movwf	postinc1,c
  7385  018FE4  0E00               	movlw	0
  7386  018FE6  6EE6               	movwf	postinc1,c
  7387  018FE8  EC50  F0C1         	call	_wdtdelay	;wreg free
  7388                           
  7389                           ; BSR set to: 0
  7390                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7391  018FEC  0012               	return		;funcret
  7392  018FEE                     __end_of_wait_lcd_done:
  7393                           	opt callstack 0
  7394                           
  7395 ;; *************** function _wdtdelay *****************
  7396 ;; Defined at:
  7397 ;;		line 22 in file "eadog.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  delay           4  [STACK] const unsigned long 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;		None
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  1  [STACK] void 
  7404 ;; Registers used:
  7405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 3F/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7415 ;;Total ram usage:        0 bytes
  7416 ;; Hardware stack levels used:    1
  7417 ;; Hardware stack levels required when called:   10
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_init_display
  7422 ;;		_send_lcd_cmd
  7423 ;;		_send_lcd_cmd_long
  7424 ;;		_wait_lcd_done
  7425 ;; This function uses a reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text33
  7429  0182A0                     __ptext33:
  7430                           	opt callstack 0
  7431  0182A0                     _wdtdelay:
  7432                           	opt callstack 18
  7433                           
  7434                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7435                           
  7436                           ; BSR set to: 0
  7437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7438                           ;incstack = 0
  7439  0182A0  0100               	movlb	0	; () banked
  7440  0182A2  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  7441  0182A4  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7442  0182A6  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7443  0182A8  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7444  0182AA                     l1370:
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;eadog.c: 27:   __nop();
  7448  0182AA  F000               	nop	
  7449  0182AC  0004               	clrwdt		;# 
  7450                           
  7451                           ;eadog.c: 29:  };
  7452  0182AE  0E01               	movlw	1
  7453  0182B0  0100               	movlb	0	; () banked
  7454  0182B2  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  7455  0182B4  0E00               	movlw	0
  7456  0182B6  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7457  0182B8  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7458  0182BA  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;stkvar	_delay @ sp[(0)+-4]
  7462  0182BC  0EFC               	movlw	-4
  7463  0182BE  006F FF8C  F025    	movff	plusw1,btemp
  7464  0182C4  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  7465  0182C6  5C25               	subwf	btemp^0,w,c
  7466  0182C8  0EFD               	movlw	-3
  7467  0182CA  006F FF8C  F025    	movff	plusw1,btemp
  7468  0182D0  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7469  0182D2  5825               	subwfb	btemp^0,w,c
  7470  0182D4  0EFE               	movlw	-2
  7471  0182D6  006F FF8C  F025    	movff	plusw1,btemp
  7472  0182DC  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7473  0182DE  5825               	subwfb	btemp^0,w,c
  7474  0182E0  0EFF               	movlw	-1
  7475  0182E2  006F FF8C  F025    	movff	plusw1,btemp
  7476  0182E8  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7477  0182EA  5825               	subwfb	btemp^0,w,c
  7478  0182EC  B0D8               	btfsc	status,0,c
  7479  0182EE  D7DD               	goto	l1370
  7480                           
  7481                           ; BSR set to: 0
  7482                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7483  0182F0  52E5               	movf	postdec1,f,c
  7484  0182F2  52E5               	movf	postdec1,f,c
  7485  0182F4  52E5               	movf	postdec1,f,c
  7486  0182F6  52E5               	movf	postdec1,f,c
  7487  0182F8  0012               	return		;funcret
  7488  0182FA                     __end_of_wdtdelay:
  7489                           	opt callstack 0
  7490                           
  7491 ;; *************** function _eaDogM_WriteString *****************
  7492 ;; Defined at:
  7493 ;;		line 187 in file "eadog.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  strPtr          2  [STACK] PTR unsigned char 
  7496 ;;		 -> D.lcd(288), D(290), V(188), 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1  [STACK] void 
  7501 ;; Registers used:
  7502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7503 ;; Tracked objects:
  7504 ;;		On entry : 3F/0
  7505 ;;		On exit  : 3F/3B
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7512 ;;Total ram usage:        0 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:   19
  7515 ;; This function calls:
  7516 ;;		_printf
  7517 ;;		_ringBufS_flush
  7518 ;;		_start_lcd
  7519 ;;		_strlen
  7520 ;;		_wait_lcd_set
  7521 ;; This function is called by:
  7522 ;;		_eaDogM_WriteStringAtPos
  7523 ;; This function uses a reentrant model
  7524 ;;
  7525                           
  7526                           	psect	text34
  7527  0178E0                     __ptext34:
  7528                           	opt callstack 0
  7529  0178E0                     _eaDogM_WriteString:
  7530                           	opt callstack 9
  7531                           
  7532                           ;eadog.c: 187: void eaDogM_WriteString(char *strPtr);eadog.c: 188: {;eadog.c: 190:  wait
      +                          _lcd_set();
  7533                           
  7534                           ; BSR set to: 0
  7535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7536                           ;incstack = 0
  7537  0178E0  ECC6  F0C8         	call	_wait_lcd_set	;wreg free
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;eadog.c: 192:  ringBufS_flush(spi_link.tx1a, 0);
  7541  0178E4  0E00               	movlw	0
  7542  0178E6  6EE6               	movwf	postinc1,c
  7543  0178E8  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7544  0178EE  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7545  0178F4  EC60  F0BD         	call	_ringBufS_flush	;wreg free
  7546  0178F8  94BC               	bcf	188,2,c	;volatile
  7547                           
  7548                           ;eadog.c: 194:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7549                           ;stkvar	_strPtr @ sp[(0)+-2]
  7550  0178FA  0EFE               	movlw	-2
  7551  0178FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7552  017902  006F FF8F FFE6     	movff	plusw1,postinc1
  7553  017908  ECC3  F0BC         	call	_strlen	;wreg free
  7554  01790C  5026               	movf	(btemp+1)^0,w,c
  7555  01790E  E104               	bnz	u10600
  7556  017910  0E41               	movlw	65
  7557  017912  5C25               	subwf	btemp^0,w,c
  7558  017914  A0D8               	btfss	status,0,c
  7559  017916  D010               	goto	l10821
  7560  017918                     u10600:
  7561                           
  7562                           ;stkvar	_strPtr @ sp[(0)+-2]
  7563  017918  0EFE               	movlw	-2
  7564  01791A  006F FF8C  F02F    	movff	plusw1,btemp+10
  7565  017920  0EFF               	movlw	-1
  7566  017922  006F FF8C  F030    	movff	plusw1,btemp+11
  7567  017928  0E40               	movlw	64
  7568  01792A  242F               	addwf	(btemp+10)^0,w,c
  7569  01792C  6ED9               	movwf	fsr2l,c
  7570  01792E  0E00               	movlw	0
  7571  017930  2030               	addwfc	(btemp+11)^0,w,c
  7572  017932  6EDA               	movwf	fsr2h,c
  7573  017934  0E00               	movlw	0
  7574  017936  6EDF               	movwf	indf2,c
  7575  017938                     l10821:
  7576                           
  7577                           ;eadog.c: 195:  DMA1CON0bits.EN = 0;
  7578  017938  013B               	movlb	59	; () banked
  7579  01793A  9FFC               	bcf	252,7,b	;volatile
  7580                           
  7581                           ; BSR set to: 59
  7582                           ;eadog.c: 196:  DMA1SSZ = strlen(strPtr);
  7583                           ;stkvar	_strPtr @ sp[(0)+-2]
  7584  01793C  0EFE               	movlw	-2
  7585  01793E  006F FF8F FFE6     	movff	plusw1,postinc1
  7586  017944  006F FF8F FFE6     	movff	plusw1,postinc1
  7587  01794A  ECC3  F0BC         	call	_strlen	;wreg free
  7588  01794E  0060  F097  FBF7   	movff	btemp,15351	;volatile
  7589  017954  0060  F09B  FBF8   	movff	btemp+1,15352	;volatile
  7590                           
  7591                           ;eadog.c: 197:  DMA1CON0bits.EN = 1;
  7592  01795A  013B               	movlb	59	; () banked
  7593  01795C  8FFC               	bsf	252,7,b	;volatile
  7594                           
  7595                           ; BSR set to: 59
  7596                           ;eadog.c: 198:  printf("%s", strPtr);
  7597                           ;stkvar	_strPtr @ sp[(0)+-2]
  7598  01795E  0EFE               	movlw	-2
  7599  017960  006F FF8F FFE6     	movff	plusw1,postinc1
  7600  017966  006F FF8F FFE6     	movff	plusw1,postinc1
  7601  01796C  0EFB               	movlw	low STR_24
  7602  01796E  6EE6               	movwf	postinc1,c
  7603  017970  0EFF               	movlw	high STR_24
  7604  017972  6EE6               	movwf	postinc1,c
  7605  017974  0E04               	movlw	4
  7606  017976  6EE6               	movwf	postinc1,c
  7607  017978  ECF0  F0C0         	call	_printf	;wreg free
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;eadog.c: 199:  start_lcd();
  7611  01797C  ECC9  F0C8         	call	_start_lcd	;wreg free
  7612                           
  7613                           ; BSR set to: 59
  7614                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7615  017980  52E5               	movf	postdec1,f,c
  7616  017982  52E5               	movf	postdec1,f,c
  7617  017984  0012               	return		;funcret
  7618  017986                     __end_of_eaDogM_WriteString:
  7619                           	opt callstack 0
  7620                           
  7621 ;; *************** function _wait_lcd_set *****************
  7622 ;; Defined at:
  7623 ;;		line 134 in file "eadog.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1  [STACK] void 
  7630 ;; Registers used:
  7631 ;;		None
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/3D
  7634 ;;		On exit  : 3F/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7641 ;;Total ram usage:        0 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:   10
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_eaDogM_WriteString
  7648 ;;		_send_lcd_cmd_dma
  7649 ;; This function uses a reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text35
  7653  01918C                     __ptext35:
  7654                           	opt callstack 0
  7655  01918C                     _wait_lcd_set:
  7656                           	opt callstack 17
  7657                           
  7658                           ;eadog.c: 136:  spi_link.LCD_DATA = 1;
  7659                           
  7660                           ; BSR set to: 59
  7661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7662                           ;incstack = 0
  7663  01918C  0100               	movlb	0	; () banked
  7664  01918E  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  7665                           
  7666                           ; BSR set to: 0
  7667                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7668  019190  0012               	return		;funcret
  7669  019192                     __end_of_wait_lcd_set:
  7670                           	opt callstack 0
  7671                           
  7672 ;; *************** function _start_lcd *****************
  7673 ;; Defined at:
  7674 ;;		line 129 in file "eadog.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;		None
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;		None
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  1  [STACK] void 
  7681 ;; Registers used:
  7682 ;;		None
  7683 ;; Tracked objects:
  7684 ;;		On entry : 3F/0
  7685 ;;		On exit  : 3F/3B
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7692 ;;Total ram usage:        0 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:   10
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_eaDogM_WriteString
  7699 ;;		_send_lcd_cmd_dma
  7700 ;; This function uses a reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text36
  7704  019192                     __ptext36:
  7705                           	opt callstack 0
  7706  019192                     _start_lcd:
  7707                           	opt callstack 17
  7708                           
  7709                           ;eadog.c: 131:  DMA1CON0bits.DMA1SIRQEN = 1;
  7710                           
  7711                           ; BSR set to: 0
  7712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7713                           ;incstack = 0
  7714  019192  013B               	movlb	59	; () banked
  7715  019194  8DFC               	bsf	252,6,b	;volatile
  7716                           
  7717                           ; BSR set to: 59
  7718                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7719  019196  0012               	return		;funcret
  7720  019198                     __end_of_start_lcd:
  7721                           	opt callstack 0
  7722                           
  7723 ;; *************** function _ringBufS_flush *****************
  7724 ;; Defined at:
  7725 ;;		line 76 in file "ringbufs.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7728 ;;		 -> ring_buf1(67), 
  7729 ;;  clearBuffer     1  [STACK] const char 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1  [STACK] void 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7736 ;; Tracked objects:
  7737 ;;		On entry : 3F/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;Total ram usage:        0 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:   11
  7748 ;; This function calls:
  7749 ;;		_memset
  7750 ;; This function is called by:
  7751 ;;		_eaDogM_WriteString
  7752 ;;		_send_lcd_cmd_dma
  7753 ;; This function uses a reentrant model
  7754 ;;
  7755                           
  7756                           	psect	text37
  7757  017AC0                     __ptext37:
  7758                           	opt callstack 0
  7759  017AC0                     _ringBufS_flush:
  7760                           	opt callstack 16
  7761                           
  7762                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7763                           ;stkvar	__this @ sp[(0)+-2]
  7764                           
  7765                           ; BSR set to: 59
  7766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7767                           ;incstack = 0
  7768  017AC0  0EFE               	movlw	-2
  7769  017AC2  006F FF8C  F02F    	movff	plusw1,btemp+10
  7770  017AC8  0EFF               	movlw	-1
  7771  017ACA  006F FF8C  F030    	movff	plusw1,btemp+11
  7772  017AD0  0E42               	movlw	66
  7773  017AD2  242F               	addwf	(btemp+10)^0,w,c
  7774  017AD4  6ED9               	movwf	fsr2l,c
  7775  017AD6  0E00               	movlw	0
  7776  017AD8  2030               	addwfc	(btemp+11)^0,w,c
  7777  017ADA  6EDA               	movwf	fsr2h,c
  7778  017ADC  0E00               	movlw	0
  7779  017ADE  6EDF               	movwf	indf2,c
  7780                           
  7781                           ;ringbufs.c: 79:  _this->head = 0;
  7782                           ;stkvar	__this @ sp[(0)+-2]
  7783  017AE0  0EFE               	movlw	-2
  7784  017AE2  006F FF8C  F02F    	movff	plusw1,btemp+10
  7785  017AE8  0EFF               	movlw	-1
  7786  017AEA  006F FF8C  F030    	movff	plusw1,btemp+11
  7787  017AF0  0E40               	movlw	64
  7788  017AF2  242F               	addwf	(btemp+10)^0,w,c
  7789  017AF4  6ED9               	movwf	fsr2l,c
  7790  017AF6  0E00               	movlw	0
  7791  017AF8  2030               	addwfc	(btemp+11)^0,w,c
  7792  017AFA  6EDA               	movwf	fsr2h,c
  7793  017AFC  0E00               	movlw	0
  7794  017AFE  6EDF               	movwf	indf2,c
  7795                           
  7796                           ;ringbufs.c: 80:  _this->tail = 0;
  7797                           ;stkvar	__this @ sp[(0)+-2]
  7798  017B00  0EFE               	movlw	-2
  7799  017B02  006F FF8C  F02F    	movff	plusw1,btemp+10
  7800  017B08  0EFF               	movlw	-1
  7801  017B0A  006F FF8C  F030    	movff	plusw1,btemp+11
  7802  017B10  0E41               	movlw	65
  7803  017B12  242F               	addwf	(btemp+10)^0,w,c
  7804  017B14  6ED9               	movwf	fsr2l,c
  7805  017B16  0E00               	movlw	0
  7806  017B18  2030               	addwfc	(btemp+11)^0,w,c
  7807  017B1A  6EDA               	movwf	fsr2h,c
  7808  017B1C  0E00               	movlw	0
  7809  017B1E  6EDF               	movwf	indf2,c
  7810                           
  7811                           ;ringbufs.c: 81:  if (clearBuffer) {
  7812                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7813  017B20  0EFD               	movlw	-3
  7814  017B22  50E3               	movf	plusw1,w,c
  7815  017B24  B4D8               	btfsc	status,2,c
  7816  017B26  D011               	goto	l1510
  7817                           
  7818                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7819  017B28  0E40               	movlw	64
  7820  017B2A  6EE6               	movwf	postinc1,c
  7821  017B2C  0E00               	movlw	0
  7822  017B2E  6EE6               	movwf	postinc1,c
  7823  017B30  0E00               	movlw	0
  7824  017B32  6EE6               	movwf	postinc1,c
  7825  017B34  0E00               	movlw	0
  7826  017B36  6EE6               	movwf	postinc1,c
  7827                           
  7828                           ;stkvar	__this @ sp[(-4)+-2]
  7829  017B38  0EFA               	movlw	-6
  7830  017B3A  006F FF8F FFE6     	movff	plusw1,postinc1
  7831  017B40  006F FF8F FFE6     	movff	plusw1,postinc1
  7832  017B46  EC58  F0A7         	call	_memset	;wreg free
  7833  017B4A                     l1510:
  7834                           
  7835                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7836  017B4A  52E5               	movf	postdec1,f,c
  7837  017B4C  52E5               	movf	postdec1,f,c
  7838  017B4E  52E5               	movf	postdec1,f,c
  7839  017B50  0012               	return		;funcret
  7840  017B52                     __end_of_ringBufS_flush:
  7841                           	opt callstack 0
  7842                           
  7843 ;; *************** function _memset *****************
  7844 ;; Defined at:
  7845 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  dest            2  [STACK] PTR void 
  7848 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7849 ;;  c               2  [STACK] int 
  7850 ;;  n               2  [STACK] unsigned int 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  s               2  [STACK] PTR unsigned char 
  7853 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7854 ;;  k               2  [STACK] unsigned int 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  2  [STACK] PTR void 
  7857 ;; Registers used:
  7858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7868 ;;Total ram usage:        0 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:   10
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_ringBufS_init
  7875 ;;		_ringBufS_flush
  7876 ;; This function uses a reentrant model
  7877 ;;
  7878                           
  7879                           	psect	text38
  7880  014EB0                     __ptext38:
  7881                           	opt callstack 0
  7882  014EB0                     _memset:
  7883                           	opt callstack 0
  7884                           
  7885                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7886  014EB0  52E6               	movf	postinc1,f,c
  7887  014EB2  52E6               	movf	postinc1,f,c
  7888  014EB4  52E6               	movf	postinc1,f,c
  7889  014EB6  52E6               	movf	postinc1,f,c
  7890                           
  7891                           ;stkvar	_dest @ sp[(-4)+-2]
  7892                           
  7893                           ;incstack = 0
  7894  014EB8  0EFA               	movlw	-6
  7895  014EBA  006F FF8C  F02F    	movff	plusw1,btemp+10
  7896  014EC0  0EFB               	movlw	-5
  7897  014EC2  006F FF8C  F030    	movff	plusw1,btemp+11
  7898                           
  7899                           ;stkvar	_s @ sp[(-4)+0]
  7900  014EC8  0EFD               	movlw	-3
  7901  014ECA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  7902  014ED0  0EFC               	movlw	-4
  7903  014ED2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  7904                           
  7905                           ;stkvar	_n @ sp[(-4)+-6]
  7906  014ED8  0EF6               	movlw	-10
  7907  014EDA  006F FF8C  F025    	movff	plusw1,btemp
  7908  014EE0  0EF7               	movlw	-9
  7909  014EE2  50E3               	movf	plusw1,w,c
  7910  014EE4  1025               	iorwf	btemp^0,w,c
  7911  014EE6  B4D8               	btfsc	status,2,c
  7912  014EE8  D154               	goto	u10570
  7913                           
  7914                           ;stkvar	_c @ sp[(-4)+-4]
  7915                           ;stkvar	_s @ sp[(-4)+0]
  7916  014EEA  0EFC               	movlw	-4
  7917  014EEC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7918  014EF2  0EFD               	movlw	-3
  7919  014EF4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7920  014EFA  0EF8               	movlw	-8
  7921  014EFC  006F FF8F FFDF     	movff	plusw1,indf2
  7922                           
  7923                           ;stkvar	_c @ sp[(-4)+-4]
  7924                           ;stkvar	_n @ sp[(-4)+-6]
  7925                           ;stkvar	_s @ sp[(-4)+0]
  7926  014F02  0EFC               	movlw	-4
  7927  014F04  006F FF8C  F02F    	movff	plusw1,btemp+10
  7928  014F0A  0EFD               	movlw	-3
  7929  014F0C  006F FF8C  F030    	movff	plusw1,btemp+11
  7930  014F12  0EF6               	movlw	-10
  7931  014F14  50E3               	movf	plusw1,w,c
  7932  014F16  262F               	addwf	(btemp+10)^0,f,c
  7933  014F18  0EF7               	movlw	-9
  7934  014F1A  50E3               	movf	plusw1,w,c
  7935  014F1C  2230               	addwfc	(btemp+11)^0,f,c
  7936  014F1E  0EFF               	movlw	255
  7937  014F20  242F               	addwf	(btemp+10)^0,w,c
  7938  014F22  6ED9               	movwf	fsr2l,c
  7939  014F24  0EFF               	movlw	255
  7940  014F26  2030               	addwfc	(btemp+11)^0,w,c
  7941  014F28  6EDA               	movwf	fsr2h,c
  7942  014F2A  0EF8               	movlw	-8
  7943  014F2C  006F FF8F FFDF     	movff	plusw1,indf2
  7944                           
  7945                           ;stkvar	_n @ sp[(-4)+-6]
  7946  014F32  0EF7               	movlw	-9
  7947  014F34  50E3               	movf	plusw1,w,c
  7948  014F36  E108               	bnz	l10737
  7949  014F38  0EF6               	movlw	-10
  7950  014F3A  006F FF8C  F025    	movff	plusw1,btemp
  7951  014F40  0E03               	movlw	3
  7952  014F42  5E25               	subwf	btemp^0,f,c
  7953  014F44  A0D8               	btfss	status,0,c
  7954  014F46  D125               	goto	u10570
  7955  014F48                     l10737:
  7956                           
  7957                           ;stkvar	_c @ sp[(-4)+-4]
  7958                           ;stkvar	_s @ sp[(-4)+0]
  7959  014F48  0EFC               	movlw	-4
  7960  014F4A  006F FF8C  F02F    	movff	plusw1,btemp+10
  7961  014F50  0EFD               	movlw	-3
  7962  014F52  006F FF8C  F030    	movff	plusw1,btemp+11
  7963  014F58  0E01               	movlw	1
  7964  014F5A  242F               	addwf	(btemp+10)^0,w,c
  7965  014F5C  6ED9               	movwf	fsr2l,c
  7966  014F5E  0E00               	movlw	0
  7967  014F60  2030               	addwfc	(btemp+11)^0,w,c
  7968  014F62  6EDA               	movwf	fsr2h,c
  7969  014F64  0EF8               	movlw	-8
  7970  014F66  006F FF8F FFDF     	movff	plusw1,indf2
  7971                           
  7972                           ;stkvar	_c @ sp[(-4)+-4]
  7973                           ;stkvar	_s @ sp[(-4)+0]
  7974  014F6C  0EFC               	movlw	-4
  7975  014F6E  006F FF8C  F02F    	movff	plusw1,btemp+10
  7976  014F74  0EFD               	movlw	-3
  7977  014F76  006F FF8C  F030    	movff	plusw1,btemp+11
  7978  014F7C  0E02               	movlw	2
  7979  014F7E  242F               	addwf	(btemp+10)^0,w,c
  7980  014F80  6ED9               	movwf	fsr2l,c
  7981  014F82  0E00               	movlw	0
  7982  014F84  2030               	addwfc	(btemp+11)^0,w,c
  7983  014F86  6EDA               	movwf	fsr2h,c
  7984  014F88  0EF8               	movlw	-8
  7985  014F8A  006F FF8F FFDF     	movff	plusw1,indf2
  7986                           
  7987                           ;stkvar	_c @ sp[(-4)+-4]
  7988                           ;stkvar	_n @ sp[(-4)+-6]
  7989                           ;stkvar	_s @ sp[(-4)+0]
  7990  014F90  0EFC               	movlw	-4
  7991  014F92  006F FF8C  F02F    	movff	plusw1,btemp+10
  7992  014F98  0EFD               	movlw	-3
  7993  014F9A  006F FF8C  F030    	movff	plusw1,btemp+11
  7994  014FA0  0EF6               	movlw	-10
  7995  014FA2  50E3               	movf	plusw1,w,c
  7996  014FA4  262F               	addwf	(btemp+10)^0,f,c
  7997  014FA6  0EF7               	movlw	-9
  7998  014FA8  50E3               	movf	plusw1,w,c
  7999  014FAA  2230               	addwfc	(btemp+11)^0,f,c
  8000  014FAC  0EFE               	movlw	254
  8001  014FAE  242F               	addwf	(btemp+10)^0,w,c
  8002  014FB0  6ED9               	movwf	fsr2l,c
  8003  014FB2  0EFF               	movlw	255
  8004  014FB4  2030               	addwfc	(btemp+11)^0,w,c
  8005  014FB6  6EDA               	movwf	fsr2h,c
  8006  014FB8  0EF8               	movlw	-8
  8007  014FBA  006F FF8F FFDF     	movff	plusw1,indf2
  8008                           
  8009                           ;stkvar	_c @ sp[(-4)+-4]
  8010                           ;stkvar	_n @ sp[(-4)+-6]
  8011                           ;stkvar	_s @ sp[(-4)+0]
  8012  014FC0  0EFC               	movlw	-4
  8013  014FC2  006F FF8C  F02F    	movff	plusw1,btemp+10
  8014  014FC8  0EFD               	movlw	-3
  8015  014FCA  006F FF8C  F030    	movff	plusw1,btemp+11
  8016  014FD0  0EF6               	movlw	-10
  8017  014FD2  50E3               	movf	plusw1,w,c
  8018  014FD4  262F               	addwf	(btemp+10)^0,f,c
  8019  014FD6  0EF7               	movlw	-9
  8020  014FD8  50E3               	movf	plusw1,w,c
  8021  014FDA  2230               	addwfc	(btemp+11)^0,f,c
  8022  014FDC  0EFD               	movlw	253
  8023  014FDE  242F               	addwf	(btemp+10)^0,w,c
  8024  014FE0  6ED9               	movwf	fsr2l,c
  8025  014FE2  0EFF               	movlw	255
  8026  014FE4  2030               	addwfc	(btemp+11)^0,w,c
  8027  014FE6  6EDA               	movwf	fsr2h,c
  8028  014FE8  0EF8               	movlw	-8
  8029  014FEA  006F FF8F FFDF     	movff	plusw1,indf2
  8030                           
  8031                           ;stkvar	_n @ sp[(-4)+-6]
  8032  014FF0  0EF7               	movlw	-9
  8033  014FF2  50E3               	movf	plusw1,w,c
  8034  014FF4  E108               	bnz	l10743
  8035  014FF6  0EF6               	movlw	-10
  8036  014FF8  006F FF8C  F025    	movff	plusw1,btemp
  8037  014FFE  0E07               	movlw	7
  8038  015000  5E25               	subwf	btemp^0,f,c
  8039  015002  A0D8               	btfss	status,0,c
  8040  015004  D0C6               	goto	u10570
  8041  015006                     l10743:
  8042                           
  8043                           ;stkvar	_c @ sp[(-4)+-4]
  8044                           ;stkvar	_s @ sp[(-4)+0]
  8045  015006  0EFC               	movlw	-4
  8046  015008  006F FF8C  F02F    	movff	plusw1,btemp+10
  8047  01500E  0EFD               	movlw	-3
  8048  015010  006F FF8C  F030    	movff	plusw1,btemp+11
  8049  015016  0E03               	movlw	3
  8050  015018  242F               	addwf	(btemp+10)^0,w,c
  8051  01501A  6ED9               	movwf	fsr2l,c
  8052  01501C  0E00               	movlw	0
  8053  01501E  2030               	addwfc	(btemp+11)^0,w,c
  8054  015020  6EDA               	movwf	fsr2h,c
  8055  015022  0EF8               	movlw	-8
  8056  015024  006F FF8F FFDF     	movff	plusw1,indf2
  8057                           
  8058                           ;stkvar	_c @ sp[(-4)+-4]
  8059                           ;stkvar	_n @ sp[(-4)+-6]
  8060                           ;stkvar	_s @ sp[(-4)+0]
  8061  01502A  0EFC               	movlw	-4
  8062  01502C  006F FF8C  F02F    	movff	plusw1,btemp+10
  8063  015032  0EFD               	movlw	-3
  8064  015034  006F FF8C  F030    	movff	plusw1,btemp+11
  8065  01503A  0EF6               	movlw	-10
  8066  01503C  50E3               	movf	plusw1,w,c
  8067  01503E  262F               	addwf	(btemp+10)^0,f,c
  8068  015040  0EF7               	movlw	-9
  8069  015042  50E3               	movf	plusw1,w,c
  8070  015044  2230               	addwfc	(btemp+11)^0,f,c
  8071  015046  0EFC               	movlw	252
  8072  015048  242F               	addwf	(btemp+10)^0,w,c
  8073  01504A  6ED9               	movwf	fsr2l,c
  8074  01504C  0EFF               	movlw	255
  8075  01504E  2030               	addwfc	(btemp+11)^0,w,c
  8076  015050  6EDA               	movwf	fsr2h,c
  8077  015052  0EF8               	movlw	-8
  8078  015054  006F FF8F FFDF     	movff	plusw1,indf2
  8079                           
  8080                           ;stkvar	_n @ sp[(-4)+-6]
  8081  01505A  0EF7               	movlw	-9
  8082  01505C  50E3               	movf	plusw1,w,c
  8083  01505E  E108               	bnz	l10749
  8084  015060  0EF6               	movlw	-10
  8085  015062  006F FF8C  F025    	movff	plusw1,btemp
  8086  015068  0E09               	movlw	9
  8087  01506A  5E25               	subwf	btemp^0,f,c
  8088  01506C  A0D8               	btfss	status,0,c
  8089  01506E  D091               	goto	u10570
  8090  015070                     l10749:
  8091                           
  8092                           ;stkvar	_s @ sp[(-4)+0]
  8093  015070  0EFC               	movlw	-4
  8094  015072  006F FF8C  F02F    	movff	plusw1,btemp+10
  8095  015078  1E2F               	comf	(btemp+10)^0,f,c
  8096  01507A  0EFD               	movlw	-3
  8097  01507C  006F FF8C  F030    	movff	plusw1,btemp+11
  8098  015082  1E30               	comf	(btemp+11)^0,f,c
  8099  015084  2A2F               	incf	(btemp+10)^0,f,c
  8100  015086  B4D8               	btfsc	status,2,c
  8101  015088  2A30               	incf	(btemp+11)^0,f,c
  8102  01508A  0E03               	movlw	3
  8103  01508C  162F               	andwf	(btemp+10)^0,f,c
  8104  01508E  0E00               	movlw	0
  8105  015090  1630               	andwf	(btemp+11)^0,f,c
  8106                           
  8107                           ;stkvar	_k @ sp[(-4)+2]
  8108  015092  0EFE               	movlw	-2
  8109  015094  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8110  01509A  0EFF               	movlw	-1
  8111  01509C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8112                           
  8113                           ;stkvar	_k @ sp[(-4)+2]
  8114                           ;stkvar	_s @ sp[(-4)+0]
  8115  0150A2  0EFC               	movlw	-4
  8116  0150A4  50E3               	movf	plusw1,w,c
  8117  0150A6  6E25               	movwf	btemp^0,c
  8118  0150A8  0EFE               	movlw	-2
  8119  0150AA  50E3               	movf	plusw1,w,c
  8120  0150AC  2625               	addwf	btemp^0,f,c
  8121  0150AE  0EFC               	movlw	-4
  8122  0150B0  0060  F097  FFE3   	movff	btemp,plusw1
  8123  0150B6  0EFD               	movlw	-3
  8124  0150B8  50E3               	movf	plusw1,w,c
  8125  0150BA  6E25               	movwf	btemp^0,c
  8126  0150BC  0EFF               	movlw	-1
  8127  0150BE  50E3               	movf	plusw1,w,c
  8128  0150C0  2225               	addwfc	btemp^0,f,c
  8129  0150C2  0EFD               	movlw	-3
  8130  0150C4  0060  F097  FFE3   	movff	btemp,plusw1
  8131                           
  8132                           ;stkvar	_k @ sp[(-4)+2]
  8133                           ;stkvar	_n @ sp[(-4)+-6]
  8134  0150CA  0EF6               	movlw	-10
  8135  0150CC  50E3               	movf	plusw1,w,c
  8136  0150CE  6E25               	movwf	btemp^0,c
  8137  0150D0  0EFE               	movlw	-2
  8138  0150D2  50E3               	movf	plusw1,w,c
  8139  0150D4  5E25               	subwf	btemp^0,f,c
  8140  0150D6  0EF6               	movlw	-10
  8141  0150D8  0060  F097  FFE3   	movff	btemp,plusw1
  8142  0150DE  0EF7               	movlw	-9
  8143  0150E0  50E3               	movf	plusw1,w,c
  8144  0150E2  6E25               	movwf	btemp^0,c
  8145  0150E4  0EFF               	movlw	-1
  8146  0150E6  50E3               	movf	plusw1,w,c
  8147  0150E8  5A25               	subwfb	btemp^0,f,c
  8148  0150EA  0EF7               	movlw	-9
  8149  0150EC  0060  F097  FFE3   	movff	btemp,plusw1
  8150  0150F2  0EFC               	movlw	252
  8151  0150F4  6E2F               	movwf	(btemp+10)^0,c
  8152  0150F6  0EFF               	movlw	255
  8153  0150F8  6E30               	movwf	(btemp+11)^0,c
  8154                           
  8155                           ;stkvar	_n @ sp[(-4)+-6]
  8156  0150FA  0EF6               	movlw	-10
  8157  0150FC  006F FF8C  F025    	movff	plusw1,btemp
  8158  015102  502F               	movf	(btemp+10)^0,w,c
  8159  015104  1625               	andwf	btemp^0,f,c
  8160  015106  0EF6               	movlw	-10
  8161  015108  0060  F097  FFE3   	movff	btemp,plusw1
  8162  01510E  0EF7               	movlw	-9
  8163  015110  006F FF8C  F025    	movff	plusw1,btemp
  8164  015116  5030               	movf	(btemp+11)^0,w,c
  8165  015118  1625               	andwf	btemp^0,f,c
  8166  01511A  0EF7               	movlw	-9
  8167  01511C  D02E               	goto	L6
  8168  01511E                     l10757:
  8169                           
  8170                           ;stkvar	_c @ sp[(-4)+-4]
  8171                           ;stkvar	_s @ sp[(-4)+0]
  8172  01511E  0EFC               	movlw	-4
  8173  015120  006F FF8F FFD9     	movff	plusw1,fsr2l
  8174  015126  0EFD               	movlw	-3
  8175  015128  006F FF8F FFDA     	movff	plusw1,fsr2h
  8176  01512E  0EF8               	movlw	-8
  8177  015130  006F FF8F FFDF     	movff	plusw1,indf2
  8178                           
  8179                           ;stkvar	_n @ sp[(-4)+-6]
  8180  015136  0EF6               	movlw	-10
  8181  015138  006F FF8C  F025    	movff	plusw1,btemp
  8182  01513E  0E01               	movlw	1
  8183  015140  5E25               	subwf	btemp^0,f,c
  8184  015142  0EF6               	movlw	-10
  8185  015144  0060  F097  FFE3   	movff	btemp,plusw1
  8186  01514A  0EF7               	movlw	-9
  8187  01514C  006F FF8C  F025    	movff	plusw1,btemp
  8188  015152  0E00               	movlw	0
  8189  015154  5A25               	subwfb	btemp^0,f,c
  8190  015156  0EF7               	movlw	-9
  8191  015158  0060  F097  FFE3   	movff	btemp,plusw1
  8192                           
  8193                           ;stkvar	_s @ sp[(-4)+0]
  8194  01515E  0EFC               	movlw	-4
  8195  015160  50E3               	movf	plusw1,w,c
  8196  015162  0F01               	addlw	1
  8197  015164  6E25               	movwf	btemp^0,c
  8198  015166  0EFC               	movlw	-4
  8199  015168  0060  F097  FFE3   	movff	btemp,plusw1
  8200  01516E  6A25               	clrf	btemp^0,c
  8201  015170  0EFD               	movlw	-3
  8202  015172  50E3               	movf	plusw1,w,c
  8203  015174  2025               	addwfc	btemp^0,w,c
  8204  015176  6E25               	movwf	btemp^0,c
  8205  015178  0EFD               	movlw	-3
  8206  01517A                     L6:
  8207  01517A  0060  F097  FFE3   	movff	btemp,plusw1
  8208                           
  8209                           ;stkvar	_n @ sp[(-4)+-6]
  8210  015180  0EF6               	movlw	-10
  8211  015182  006F FF8C  F025    	movff	plusw1,btemp
  8212  015188  0EF7               	movlw	-9
  8213  01518A  50E3               	movf	plusw1,w,c
  8214  01518C  1025               	iorwf	btemp^0,w,c
  8215  01518E  A4D8               	btfss	status,2,c
  8216  015190  D7C6               	goto	l10757
  8217  015192                     u10570:
  8218                           
  8219                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8220  015192  0EF6               	movlw	246
  8221  015194  26E1               	addwf	fsr1l,f,c
  8222  015196  0EFF               	movlw	255
  8223  015198  22E2               	addwfc	fsr1h,f,c
  8224  01519A  0012               	return		;funcret
  8225  01519C                     __end_of_memset:
  8226                           	opt callstack 0
  8227                           
  8228 ;; *************** function _printf *****************
  8229 ;; Defined at:
  8230 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  fmt             2  [STACK] PTR const unsigned char 
  8233 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  ap              2  [STACK] PTR void [1]
  8236 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8237 ;;  ret             2    0        int 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  2  [STACK] int 
  8240 ;; Registers used:
  8241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8242 ;; Tracked objects:
  8243 ;;		On entry : 3F/3B
  8244 ;;		On exit  : 3F/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8251 ;;Total ram usage:        0 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:   18
  8254 ;; This function calls:
  8255 ;;		_vfprintf
  8256 ;; This function is called by:
  8257 ;;		_eaDogM_WriteString
  8258 ;;		_send_lcd_cmd_dma
  8259 ;; This function uses a reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text39
  8263  0181E0                     __ptext39:
  8264                           	opt callstack 0
  8265  0181E0                     _printf:
  8266                           	opt callstack 0
  8267                           
  8268                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8269  0181E0  52E6               	movf	postinc1,f,c
  8270  0181E2  52E6               	movf	postinc1,f,c
  8271                           
  8272                           ;stkvar	?_printf @ sp[(-2)+-3]
  8273                           
  8274                           ;incstack = 0
  8275  0181E4  0EFB               	movlw	251
  8276  0181E6  24E1               	addwf	fsr1l,w,c
  8277  0181E8  6E2F               	movwf	(btemp+10)^0,c
  8278  0181EA  0EFF               	movlw	255
  8279  0181EC  20E2               	addwfc	fsr1h,w,c
  8280  0181EE  6E30               	movwf	(btemp+11)^0,c
  8281                           
  8282                           ;stkvar	_ap @ sp[(-2)+0]
  8283  0181F0  0EFF               	movlw	-1
  8284  0181F2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8285  0181F8  0EFE               	movlw	-2
  8286  0181FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8287                           
  8288                           ;stkvar	_ap @ sp[(-2)+0]
  8289  018200  0EFE               	movlw	254
  8290  018202  24E1               	addwf	fsr1l,w,c
  8291  018204  6E25               	movwf	btemp^0,c
  8292  018206  0EFF               	movlw	255
  8293  018208  20E2               	addwfc	fsr1h,w,c
  8294  01820A  6E26               	movwf	(btemp+1)^0,c
  8295  01820C  0060  F097  FFE6   	movff	btemp,postinc1
  8296  018212  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8297                           
  8298                           ;stkvar	_fmt @ sp[(-4)+-3]
  8299  018218  0EF9               	movlw	-7
  8300  01821A  006F FF8F FFE6     	movff	plusw1,postinc1
  8301  018220  006F FF8F FFE6     	movff	plusw1,postinc1
  8302  018226  0E00               	movlw	0
  8303  018228  6EE6               	movwf	postinc1,c
  8304  01822A  0E00               	movlw	0
  8305  01822C  6EE6               	movwf	postinc1,c
  8306  01822E  ECC5  F0BB         	call	_vfprintf	;wreg free
  8307                           
  8308                           ; BSR set to: 0
  8309                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8310  018232  52E5               	movf	postdec1,f,c
  8311  018234  52E5               	movf	postdec1,f,c
  8312  018236  52E5               	movf	postdec1,f,c
  8313  018238  50E7               	movf	indf1,w,c
  8314  01823A  5EE1               	subwf	fsr1l,f,c
  8315  01823C  0E00               	movlw	0
  8316  01823E  5AE2               	subwfb	fsr1h,f,c
  8317  018240  0012               	return		;funcret
  8318  018242                     __end_of_printf:
  8319                           	opt callstack 0
  8320                           
  8321 ;; *************** function _vfprintf *****************
  8322 ;; Defined at:
  8323 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8326 ;;		 -> f(6), NULL(0), 
  8327 ;;  fmt             2  [STACK] PTR const unsigned char 
  8328 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8329 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8330 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8331 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8332 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8333 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8334 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8335 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8336 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8337 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8338 ;;  ap              2  [STACK] PTR PTR void 
  8339 ;;		 -> ap(2), ap(2), 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  cfmt            2  [STACK] PTR unsigned char 
  8342 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8343 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8344 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8345 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8346 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8347 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8348 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8349 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8350 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8351 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  2  [STACK] int 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/1
  8358 ;;		On exit  : 3F/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;Total ram usage:        0 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:   17
  8368 ;; This function calls:
  8369 ;;		_vfpfcnvrt
  8370 ;; This function is called by:
  8371 ;;		_sprintf
  8372 ;;		_printf
  8373 ;; This function uses a reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text40
  8377  01778A                     __ptext40:
  8378                           	opt callstack 0
  8379  01778A                     _vfprintf:
  8380                           	opt callstack 0
  8381                           
  8382                           ; BSR set to: 0
  8383                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8384  01778A  52E6               	movf	postinc1,f,c
  8385  01778C  52E6               	movf	postinc1,f,c
  8386                           
  8387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8388                           ;stkvar	_fmt @ sp[(-2)+-4]
  8389                           
  8390                           ;incstack = 0
  8391  01778E  0EFA               	movlw	-6
  8392  017790  006F FF8C  F02F    	movff	plusw1,btemp+10
  8393  017796  0EFB               	movlw	-5
  8394  017798  006F FF8C  F030    	movff	plusw1,btemp+11
  8395                           
  8396                           ;stkvar	_cfmt @ sp[(-2)+0]
  8397  01779E  0EFF               	movlw	-1
  8398  0177A0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8399  0177A6  0EFE               	movlw	-2
  8400  0177A8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8401                           
  8402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8403  0177AE  0100               	movlb	0	; () banked
  8404  0177B0  6BC1               	clrf	_nout& (0+255),b
  8405  0177B2  6BC2               	clrf	(_nout+1)& (0+255),b
  8406                           
  8407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8408  0177B4  D021               	goto	l10771
  8409  0177B6                     l10769:
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8413                           ;stkvar	_ap @ sp[(-2)+-6]
  8414  0177B6  0EF8               	movlw	-8
  8415  0177B8  006F FF8F FFE6     	movff	plusw1,postinc1
  8416  0177BE  006F FF8F FFE6     	movff	plusw1,postinc1
  8417                           
  8418                           ;stkvar	_cfmt @ sp[(-4)+0]
  8419  0177C4  0EFC               	movlw	252
  8420  0177C6  24E1               	addwf	fsr1l,w,c
  8421  0177C8  6E25               	movwf	btemp^0,c
  8422  0177CA  0EFF               	movlw	255
  8423  0177CC  20E2               	addwfc	fsr1h,w,c
  8424  0177CE  6E26               	movwf	(btemp+1)^0,c
  8425  0177D0  0060  F097  FFE6   	movff	btemp,postinc1
  8426  0177D6  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8427                           
  8428                           ;stkvar	_fp @ sp[(-6)+-2]
  8429  0177DC  0EF8               	movlw	-8
  8430  0177DE  006F FF8F FFE6     	movff	plusw1,postinc1
  8431  0177E4  006F FF8F FFE6     	movff	plusw1,postinc1
  8432  0177EA  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8433  0177EE  5025               	movf	btemp^0,w,c
  8434  0177F0  0100               	movlb	0	; () banked
  8435  0177F2  27C1               	addwf	_nout& (0+255),f,b
  8436  0177F4  5026               	movf	(btemp+1)^0,w,c
  8437  0177F6  23C2               	addwfc	(_nout+1)& (0+255),f,b
  8438  0177F8                     l10771:
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8442                           ;stkvar	_cfmt @ sp[(-2)+0]
  8443  0177F8  50E1               	movf	fsr1l,w,c
  8444  0177FA  0FFE               	addlw	-2
  8445  0177FC  6ED9               	movwf	fsr2l,c
  8446  0177FE  50E2               	movf	fsr1h,w,c
  8447  017800  6EDA               	movwf	fsr2h,c
  8448  017802  0EFF               	movlw	255
  8449  017804  22DA               	addwfc	fsr2h,f,c
  8450  017806  006F FF7B FFF6     	movff	postinc2,tblptrl
  8451  01780C  006F FF77 FFF7     	movff	postdec2,tblptrh
  8452  017812                     	if	0	;tblptru may be non-zero
  8453  017812                     	endif
  8454  017812                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8455  017812  0E00               	movlw	low (__mediumconst shr (0+16))
  8456  017814  6EF8               	movwf	tblptru,c
  8457  017816                     	endif
  8458  017816  0008               	tblrd		*
  8459  017818  50F5               	movf	tablat,w,c
  8460  01781A  0900               	iorlw	0
  8461  01781C  A4D8               	btfss	status,2,c
  8462  01781E  D7CB               	goto	l10769
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8466  017820  0060  F304  F025   	movff	_nout,btemp
  8467  017826  0060  F308  F026   	movff	_nout+1,btemp+1
  8468                           
  8469                           ; BSR set to: 0
  8470                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8471  01782C  0EF8               	movlw	248
  8472  01782E  26E1               	addwf	fsr1l,f,c
  8473  017830  0EFF               	movlw	255
  8474  017832  22E2               	addwfc	fsr1h,f,c
  8475  017834  0012               	return		;funcret
  8476  017836                     __end_of_vfprintf:
  8477                           	opt callstack 0
  8478                           
  8479 ;; *************** function _vfpfcnvrt *****************
  8480 ;; Defined at:
  8481 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8484 ;;		 -> f(6), NULL(0), 
  8485 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8486 ;;		 -> cfmt(2), 
  8487 ;;  ap              2  [STACK] PTR PTR void 
  8488 ;;		 -> ap(2), ap(2), 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  llu             8  [STACK] unsigned long long 
  8491 ;;  ll              8  [STACK] long long 
  8492 ;;  f               4  [STACK] long long 
  8493 ;;  ct              3  [STACK] unsigned char [3]
  8494 ;;  vp              3    0        PTR void 
  8495 ;;  cp              2  [STACK] PTR unsigned char 
  8496 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8497 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8498 ;;		 -> STR_3(6), V(188), 
  8499 ;;  i               2    0        int 
  8500 ;;  done            2    0        int 
  8501 ;;  c               1  [STACK] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  2  [STACK] int 
  8504 ;; Registers used:
  8505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8515 ;;Total ram usage:        0 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; Hardware stack levels required when called:   16
  8518 ;; This function calls:
  8519 ;;		_atoi
  8520 ;;		_ctoa
  8521 ;;		_dtoa
  8522 ;;		_efgtoa
  8523 ;;		_fputc
  8524 ;;		_isdigit
  8525 ;;		_isupper
  8526 ;;		_stoa
  8527 ;;		_strncmp
  8528 ;;		_tolower
  8529 ;;		_xtoa
  8530 ;; This function is called by:
  8531 ;;		_vfprintf
  8532 ;; This function uses a reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text41
  8536  011244                     __ptext41:
  8537                           	opt callstack 0
  8538  011244                     _vfpfcnvrt:
  8539                           	opt callstack 0
  8540                           
  8541                           ; BSR set to: 0
  8542                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8543  011244  0E20               	movlw	32
  8544  011246  26E1               	addwf	fsr1l,f,c
  8545  011248  0E00               	movlw	0
  8546  01124A  22E2               	addwfc	fsr1h,f,c
  8547                           
  8548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8549                           ;stkvar	_fmt @ sp[(-32)+-4]
  8550                           
  8551                           ;incstack = 0
  8552  01124C  0EDC               	movlw	-36
  8553  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8554  011254  0EDD               	movlw	-35
  8555  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8556  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8557  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8558  011268                     	if	0	;tblptru may be non-zero
  8559  011268                     	endif
  8560  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8561  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8562  01126A  6EF8               	movwf	tblptru,c
  8563  01126C                     	endif
  8564  01126C  0008               	tblrd		*
  8565  01126E  50F5               	movf	tablat,w,c
  8566  011270  0A25               	xorlw	37
  8567  011272  A4D8               	btfss	status,2,c
  8568  011274  EF92  F08E         	goto	l10715
  8569                           
  8570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8571                           ;stkvar	_fmt @ sp[(-32)+-4]
  8572  011278  0EDC               	movlw	-36
  8573  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8574  011280  0EDD               	movlw	-35
  8575  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8576  011288  2ADE               	incf	postinc2,f,c
  8577  01128A  0E00               	movlw	0
  8578  01128C  22DD               	addwfc	postdec2,f,c
  8579                           
  8580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8581  01128E  6A0A               	clrf	_width^0,c
  8582  011290  6A0B               	clrf	(_width+1)^0,c
  8583  011292  6A0E               	clrf	_flags^0,c
  8584  011294  6A0F               	clrf	(_flags+1)^0,c
  8585                           
  8586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8587  011296  680C               	setf	_prec^0,c
  8588  011298  680D               	setf	(_prec+1)^0,c
  8589                           
  8590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8591                           ;stkvar	_fmt @ sp[(-32)+-4]
  8592  01129A  0EDC               	movlw	-36
  8593  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8594  0112A2  0EDD               	movlw	-35
  8595  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8596  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8597  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8598  0112B6                     	if	0	;tblptru may be non-zero
  8599  0112B6                     	endif
  8600  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8601  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8602  0112B8  6EF8               	movwf	tblptru,c
  8603  0112BA                     	endif
  8604  0112BA  0008               	tblrd		*
  8605  0112BC  50F5               	movf	tablat,w,c
  8606  0112BE  0A2A               	xorlw	42
  8607  0112C0  A4D8               	btfss	status,2,c
  8608  0112C2  D031               	goto	l10579
  8609                           
  8610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8611                           ;stkvar	_fmt @ sp[(-32)+-4]
  8612  0112C4  0EDC               	movlw	-36
  8613  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8614  0112CC  0EDD               	movlw	-35
  8615  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8616  0112D4  2ADE               	incf	postinc2,f,c
  8617  0112D6  0E00               	movlw	0
  8618  0112D8  22DD               	addwfc	postdec2,f,c
  8619                           
  8620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8621                           ;stkvar	_ap @ sp[(-32)+-6]
  8622  0112DA  0EDA               	movlw	-38
  8623  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8624  0112E2  0EDB               	movlw	-37
  8625  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8626  0112EA  0E02               	movlw	2
  8627  0112EC  5EDE               	subwf	postinc2,f,c
  8628  0112EE  0E00               	movlw	0
  8629  0112F0  5ADD               	subwfb	postdec2,f,c
  8630  0112F2  006F FF78  F02F    	movff	postinc2,btemp+10
  8631  0112F8  006F FF74  F030    	movff	postdec2,btemp+11
  8632  0112FE  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8633  011304  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8634  01130A  006F FF78  F00A    	movff	postinc2,_width
  8635  011310  006F FF74  F00B    	movff	postdec2,_width+1
  8636                           
  8637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8638  011316  AE0B               	btfss	(_width+1)^0,7,c
  8639  011318  D066               	goto	u10330
  8640                           
  8641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8642  01131A  800E               	bsf	_flags^0,0,c
  8643                           
  8644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8645  01131C  6C0A               	negf	_width^0,c
  8646  01131E  1E0B               	comf	(_width+1)^0,f,c
  8647  011320  B0D8               	btfsc	status,0,c
  8648  011322  2A0B               	incf	(_width+1)^0,f,c
  8649  011324  D060               	goto	u10330
  8650  011326                     l10579:
  8651                           
  8652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8653                           ;stkvar	_fmt @ sp[(-32)+-4]
  8654  011326  0EDC               	movlw	-36
  8655  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8656  01132E  0EDD               	movlw	-35
  8657  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8658  011336  006F FF78  F02F    	movff	postinc2,btemp+10
  8659  01133C  006F FF74  F030    	movff	postdec2,btemp+11
  8660  011342  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8661  011348  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8662  01134E  EC6D  F0AB         	call	_atoi	;wreg free
  8663  011352  0060  F094  F00A   	movff	btemp,_width
  8664  011358  0060  F098  F00B   	movff	btemp+1,_width+1
  8665                           
  8666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8667  01135E  D00B               	goto	l10583
  8668  011360                     l10581:
  8669                           
  8670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8671                           ;stkvar	_fmt @ sp[(-32)+-4]
  8672  011360  0EDC               	movlw	-36
  8673  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8674  011368  0EDD               	movlw	-35
  8675  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8676  011370  2ADE               	incf	postinc2,f,c
  8677  011372  0E00               	movlw	0
  8678  011374  22DD               	addwfc	postdec2,f,c
  8679  011376                     l10583:
  8680  011376  0ED0               	movlw	208
  8681  011378  6E2F               	movwf	(btemp+10)^0,c
  8682  01137A  0EFF               	movlw	255
  8683  01137C  6E30               	movwf	(btemp+11)^0,c
  8684                           
  8685                           ;stkvar	_fmt @ sp[(-32)+-4]
  8686  01137E  0EDC               	movlw	-36
  8687  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8688  011386  0EDD               	movlw	-35
  8689  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8690  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8691  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8692  01139A                     	if	0	;tblptru may be non-zero
  8693  01139A                     	endif
  8694  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8695  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8696  01139C  6EF8               	movwf	tblptru,c
  8697  01139E                     	endif
  8698  01139E  0008               	tblrd		*
  8699  0113A0  50F5               	movf	tablat,w,c
  8700  0113A2  6E2D               	movwf	(btemp+8)^0,c
  8701  0113A4  6A2E               	clrf	(btemp+9)^0,c
  8702  0113A6  502F               	movf	(btemp+10)^0,w,c
  8703  0113A8  262D               	addwf	(btemp+8)^0,f,c
  8704  0113AA  5030               	movf	(btemp+11)^0,w,c
  8705  0113AC  222E               	addwfc	(btemp+9)^0,f,c
  8706  0113AE  502E               	movf	(btemp+9)^0,w,c
  8707  0113B0  E106               	bnz	u10310
  8708  0113B2  0E0A               	movlw	10
  8709  0113B4  5C2D               	subwf	(btemp+8)^0,w,c
  8710  0113B6  B0D8               	btfsc	status,0,c
  8711  0113B8  D002               	goto	u10310
  8712  0113BA  0E01               	movlw	1
  8713  0113BC  D001               	goto	u10320
  8714  0113BE                     u10310:
  8715  0113BE  0E00               	movlw	0
  8716  0113C0                     u10320:
  8717  0113C0  6E2F               	movwf	(btemp+10)^0,c
  8718  0113C2  6A30               	clrf	(btemp+11)^0,c
  8719                           
  8720                           ;stkvar	_vfpfcnvrt$5005 @ sp[(-32)+4]
  8721  0113C4  0EE4               	movlw	-28
  8722  0113C6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8723  0113CC  0EE5               	movlw	-27
  8724  0113CE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8725                           
  8726                           ;stkvar	_vfpfcnvrt$5005 @ sp[(-32)+4]
  8727  0113D4  0EE4               	movlw	-28
  8728  0113D6  006F FF8C  F025    	movff	plusw1,btemp
  8729  0113DC  0EE5               	movlw	-27
  8730  0113DE  50E3               	movf	plusw1,w,c
  8731  0113E0  1025               	iorwf	btemp^0,w,c
  8732  0113E2  A4D8               	btfss	status,2,c
  8733  0113E4  D7BD               	goto	l10581
  8734  0113E6                     u10330:
  8735                           
  8736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8737                           ;stkvar	_fmt @ sp[(-32)+-4]
  8738  0113E6  0EDC               	movlw	-36
  8739  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8740  0113EE  0EDD               	movlw	-35
  8741  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8742  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8743  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8744  011402                     	if	0	;tblptru may be non-zero
  8745  011402                     	endif
  8746  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8747  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8748  011404  6EF8               	movwf	tblptru,c
  8749  011406                     	endif
  8750  011406  0008               	tblrd		*
  8751  011408  50F5               	movf	tablat,w,c
  8752  01140A  0A2E               	xorlw	46
  8753  01140C  A4D8               	btfss	status,2,c
  8754  01140E  D0AC               	goto	u10380
  8755                           
  8756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8757  011410  6A0C               	clrf	_prec^0,c
  8758  011412  6A0D               	clrf	(_prec+1)^0,c
  8759                           
  8760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8761                           ;stkvar	_fmt @ sp[(-32)+-4]
  8762  011414  0EDC               	movlw	-36
  8763  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8764  01141C  0EDD               	movlw	-35
  8765  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8766  011424  2ADE               	incf	postinc2,f,c
  8767  011426  0E00               	movlw	0
  8768  011428  22DD               	addwfc	postdec2,f,c
  8769                           
  8770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8771                           ;stkvar	_fmt @ sp[(-32)+-4]
  8772  01142A  0EDC               	movlw	-36
  8773  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8774  011432  0EDD               	movlw	-35
  8775  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8776  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8777  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8778  011446                     	if	0	;tblptru may be non-zero
  8779  011446                     	endif
  8780  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8781  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8782  011448  6EF8               	movwf	tblptru,c
  8783  01144A                     	endif
  8784  01144A  0008               	tblrd		*
  8785  01144C  50F5               	movf	tablat,w,c
  8786  01144E  0A2A               	xorlw	42
  8787  011450  A4D8               	btfss	status,2,c
  8788  011452  D02A               	goto	l10601
  8789                           
  8790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8791                           ;stkvar	_fmt @ sp[(-32)+-4]
  8792  011454  0EDC               	movlw	-36
  8793  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8794  01145C  0EDD               	movlw	-35
  8795  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8796  011464  2ADE               	incf	postinc2,f,c
  8797  011466  0E00               	movlw	0
  8798  011468  22DD               	addwfc	postdec2,f,c
  8799                           
  8800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8801                           ;stkvar	_ap @ sp[(-32)+-6]
  8802  01146A  0EDA               	movlw	-38
  8803  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8804  011472  0EDB               	movlw	-37
  8805  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8806  01147A  0E02               	movlw	2
  8807  01147C  5EDE               	subwf	postinc2,f,c
  8808  01147E  0E00               	movlw	0
  8809  011480  5ADD               	subwfb	postdec2,f,c
  8810  011482  006F FF78  F02F    	movff	postinc2,btemp+10
  8811  011488  006F FF74  F030    	movff	postdec2,btemp+11
  8812  01148E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8813  011494  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8814  01149A  006F FF78  F00C    	movff	postinc2,_prec
  8815  0114A0  006F FF74  F00D    	movff	postdec2,_prec+1
  8816                           
  8817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8818  0114A6  D060               	goto	u10380
  8819  0114A8                     l10601:
  8820                           
  8821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8822                           ;stkvar	_fmt @ sp[(-32)+-4]
  8823  0114A8  0EDC               	movlw	-36
  8824  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8825  0114B0  0EDD               	movlw	-35
  8826  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8827  0114B8  006F FF78  F02F    	movff	postinc2,btemp+10
  8828  0114BE  006F FF74  F030    	movff	postdec2,btemp+11
  8829  0114C4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8830  0114CA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8831  0114D0  EC6D  F0AB         	call	_atoi	;wreg free
  8832  0114D4  0060  F094  F00C   	movff	btemp,_prec
  8833  0114DA  0060  F098  F00D   	movff	btemp+1,_prec+1
  8834                           
  8835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8836  0114E0  D00B               	goto	l10605
  8837  0114E2                     l10603:
  8838                           
  8839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8840                           ;stkvar	_fmt @ sp[(-32)+-4]
  8841  0114E2  0EDC               	movlw	-36
  8842  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8843  0114EA  0EDD               	movlw	-35
  8844  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8845  0114F2  2ADE               	incf	postinc2,f,c
  8846  0114F4  0E00               	movlw	0
  8847  0114F6  22DD               	addwfc	postdec2,f,c
  8848  0114F8                     l10605:
  8849  0114F8  0ED0               	movlw	208
  8850  0114FA  6E2F               	movwf	(btemp+10)^0,c
  8851  0114FC  0EFF               	movlw	255
  8852  0114FE  6E30               	movwf	(btemp+11)^0,c
  8853                           
  8854                           ;stkvar	_fmt @ sp[(-32)+-4]
  8855  011500  0EDC               	movlw	-36
  8856  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8857  011508  0EDD               	movlw	-35
  8858  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8859  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8860  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8861  01151C                     	if	0	;tblptru may be non-zero
  8862  01151C                     	endif
  8863  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8864  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8865  01151E  6EF8               	movwf	tblptru,c
  8866  011520                     	endif
  8867  011520  0008               	tblrd		*
  8868  011522  50F5               	movf	tablat,w,c
  8869  011524  6E2D               	movwf	(btemp+8)^0,c
  8870  011526  6A2E               	clrf	(btemp+9)^0,c
  8871  011528  502F               	movf	(btemp+10)^0,w,c
  8872  01152A  262D               	addwf	(btemp+8)^0,f,c
  8873  01152C  5030               	movf	(btemp+11)^0,w,c
  8874  01152E  222E               	addwfc	(btemp+9)^0,f,c
  8875  011530  502E               	movf	(btemp+9)^0,w,c
  8876  011532  E106               	bnz	u10360
  8877  011534  0E0A               	movlw	10
  8878  011536  5C2D               	subwf	(btemp+8)^0,w,c
  8879  011538  B0D8               	btfsc	status,0,c
  8880  01153A  D002               	goto	u10360
  8881  01153C  0E01               	movlw	1
  8882  01153E  D001               	goto	u10370
  8883  011540                     u10360:
  8884  011540  0E00               	movlw	0
  8885  011542                     u10370:
  8886  011542  6E2F               	movwf	(btemp+10)^0,c
  8887  011544  6A30               	clrf	(btemp+11)^0,c
  8888                           
  8889                           ;stkvar	_vfpfcnvrt$5006 @ sp[(-32)+0]
  8890  011546  0EE0               	movlw	-32
  8891  011548  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8892  01154E  0EE1               	movlw	-31
  8893  011550  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8894                           
  8895                           ;stkvar	_vfpfcnvrt$5006 @ sp[(-32)+0]
  8896  011556  0EE0               	movlw	-32
  8897  011558  006F FF8C  F025    	movff	plusw1,btemp
  8898  01155E  0EE1               	movlw	-31
  8899  011560  50E3               	movf	plusw1,w,c
  8900  011562  1025               	iorwf	btemp^0,w,c
  8901  011564  A4D8               	btfss	status,2,c
  8902  011566  D7BD               	goto	l10603
  8903  011568                     u10380:
  8904                           
  8905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8906                           ;stkvar	_fmt @ sp[(-32)+-4]
  8907  011568  0EDC               	movlw	-36
  8908  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8909  011570  0EDD               	movlw	-35
  8910  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8911  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8912  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8913  011584                     	if	0	;tblptru may be non-zero
  8914  011584                     	endif
  8915  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8916  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8917  011586  6EF8               	movwf	tblptru,c
  8918  011588                     	endif
  8919  011588  0008               	tblrd		*
  8920  01158A  50F5               	movf	tablat,w,c
  8921  01158C  6EE6               	movwf	postinc1,c
  8922  01158E  0E00               	movlw	0
  8923  011590  6EE6               	movwf	postinc1,c
  8924  011592  EC07  F0BF         	call	_tolower	;wreg free
  8925                           
  8926                           ;stkvar	_ct @ sp[(-32)+26]
  8927  011596  0EFA               	movlw	-6
  8928  011598  0060  F097  FFE3   	movff	btemp,plusw1
  8929                           
  8930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8931                           ;stkvar	_ct @ sp[(-32)+26]
  8932  01159E  0EFA               	movlw	-6
  8933  0115A0  50E3               	movf	plusw1,w,c
  8934  0115A2  B4D8               	btfsc	status,2,c
  8935  0115A4  D05B               	goto	l10621
  8936                           
  8937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8938                           ;stkvar	_ct @ sp[(-32)+26]
  8939  0115A6  0EFB               	movlw	251
  8940  0115A8  24E1               	addwf	fsr1l,w,c
  8941  0115AA  6ED9               	movwf	fsr2l,c
  8942  0115AC  0EFF               	movlw	255
  8943  0115AE  20E2               	addwfc	fsr1h,w,c
  8944  0115B0  6EDA               	movwf	fsr2h,c
  8945                           
  8946                           ;stkvar	_fmt @ sp[(-32)+-4]
  8947  0115B2  0EDC               	movlw	-36
  8948  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8949  0115BA  0EDD               	movlw	-35
  8950  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8951  0115C2  006F FFB8  F02F    	movff	postinc0,btemp+10
  8952  0115C8  006F FFB4  F030    	movff	postdec0,btemp+11
  8953  0115CE  0E01               	movlw	1
  8954  0115D0  262F               	addwf	(btemp+10)^0,f,c
  8955  0115D2  0E00               	movlw	0
  8956  0115D4  2230               	addwfc	(btemp+11)^0,f,c
  8957  0115D6  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  8958  0115DC  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  8959  0115E2                     	if	0	;tblptru may be non-zero
  8960  0115E2                     	endif
  8961  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8962  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8963  0115E4  6EF8               	movwf	tblptru,c
  8964  0115E6                     	endif
  8965  0115E6  0008               	tblrd		*
  8966  0115E8  50F5               	movf	tablat,w,c
  8967  0115EA  6EE6               	movwf	postinc1,c
  8968  0115EC  0E00               	movlw	0
  8969  0115EE  6EE6               	movwf	postinc1,c
  8970  0115F0  EC07  F0BF         	call	_tolower	;wreg free
  8971  0115F4  5025               	movf	btemp^0,w,c
  8972  0115F6  6EDF               	movwf	indf2,c
  8973                           
  8974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  8975                           ;stkvar	_ct @ sp[(-32)+26]
  8976  0115F8  0EFB               	movlw	251
  8977  0115FA  24E1               	addwf	fsr1l,w,c
  8978  0115FC  6ED9               	movwf	fsr2l,c
  8979  0115FE  0EFF               	movlw	255
  8980  011600  20E2               	addwfc	fsr1h,w,c
  8981  011602  6EDA               	movwf	fsr2h,c
  8982  011604  50DF               	movf	indf2,w,c
  8983  011606  B4D8               	btfsc	status,2,c
  8984  011608  D029               	goto	l10621
  8985                           
  8986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  8987                           ;stkvar	_ct @ sp[(-32)+26]
  8988  01160A  0EFC               	movlw	252
  8989  01160C  24E1               	addwf	fsr1l,w,c
  8990  01160E  6ED9               	movwf	fsr2l,c
  8991  011610  0EFF               	movlw	255
  8992  011612  20E2               	addwfc	fsr1h,w,c
  8993  011614  6EDA               	movwf	fsr2h,c
  8994                           
  8995                           ;stkvar	_fmt @ sp[(-32)+-4]
  8996  011616  0EDC               	movlw	-36
  8997  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  8998  01161E  0EDD               	movlw	-35
  8999  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9000  011626  006F FFB8  F02F    	movff	postinc0,btemp+10
  9001  01162C  006F FFB4  F030    	movff	postdec0,btemp+11
  9002  011632  0E02               	movlw	2
  9003  011634  262F               	addwf	(btemp+10)^0,f,c
  9004  011636  0E00               	movlw	0
  9005  011638  2230               	addwfc	(btemp+11)^0,f,c
  9006  01163A  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9007  011640  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9008  011646                     	if	0	;tblptru may be non-zero
  9009  011646                     	endif
  9010  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9011  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9012  011648  6EF8               	movwf	tblptru,c
  9013  01164A                     	endif
  9014  01164A  0008               	tblrd		*
  9015  01164C  50F5               	movf	tablat,w,c
  9016  01164E  6EE6               	movwf	postinc1,c
  9017  011650  0E00               	movlw	0
  9018  011652  6EE6               	movwf	postinc1,c
  9019  011654  EC07  F0BF         	call	_tolower	;wreg free
  9020  011658  5025               	movf	btemp^0,w,c
  9021  01165A  6EDF               	movwf	indf2,c
  9022  01165C                     l10621:
  9023                           
  9024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9025                           ;stkvar	_fmt @ sp[(-32)+-4]
  9026  01165C  0EDC               	movlw	-36
  9027  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9028  011664  0EDD               	movlw	-35
  9029  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9030  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9031  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9032  011678                     	if	0	;tblptru may be non-zero
  9033  011678                     	endif
  9034  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9035  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9036  01167A  6EF8               	movwf	tblptru,c
  9037  01167C                     	endif
  9038  01167C  0008               	tblrd		*
  9039  01167E  50F5               	movf	tablat,w,c
  9040  011680  0A63               	xorlw	99
  9041  011682  A4D8               	btfss	status,2,c
  9042  011684  D036               	goto	l10631
  9043                           
  9044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9045                           ;stkvar	_fmt @ sp[(-32)+-4]
  9046  011686  0EDC               	movlw	-36
  9047  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9048  01168E  0EDD               	movlw	-35
  9049  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9050  011696  2ADE               	incf	postinc2,f,c
  9051  011698  0E00               	movlw	0
  9052  01169A  22DD               	addwfc	postdec2,f,c
  9053                           
  9054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9055                           ;stkvar	_ap @ sp[(-32)+-6]
  9056  01169C  0EDA               	movlw	-38
  9057  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9058  0116A4  0EDB               	movlw	-37
  9059  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9060  0116AC  0E02               	movlw	2
  9061  0116AE  5EDE               	subwf	postinc2,f,c
  9062  0116B0  0E00               	movlw	0
  9063  0116B2  5ADD               	subwfb	postdec2,f,c
  9064  0116B4  006F FF78  F02F    	movff	postinc2,btemp+10
  9065  0116BA  006F FF74  F030    	movff	postdec2,btemp+11
  9066  0116C0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9067  0116C6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9068  0116CC  50DF               	movf	indf2,w,c
  9069  0116CE  6E30               	movwf	(btemp+11)^0,c
  9070                           
  9071                           ;stkvar	_c @ sp[(-32)+31]
  9072  0116D0  0EFF               	movlw	-1
  9073  0116D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9074                           
  9075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9076                           ;stkvar	_c @ sp[(-32)+31]
  9077  0116D8  0EFF               	movlw	-1
  9078  0116DA  50E3               	movf	plusw1,w,c
  9079  0116DC  6EE6               	movwf	postinc1,c
  9080                           
  9081                           ;stkvar	_fp @ sp[(-33)+-2]
  9082  0116DE  0EDD               	movlw	-35
  9083  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9084  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9085  0116EC  EC81  F0BE         	call	_ctoa	;wreg free
  9086  0116F0  D343               	goto	l2191
  9087  0116F2                     l10631:
  9088                           
  9089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9090                           ;stkvar	_fmt @ sp[(-32)+-4]
  9091  0116F2  0EDC               	movlw	-36
  9092  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9093  0116FA  0EDD               	movlw	-35
  9094  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9095  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  9096  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  9097  01170E                     	if	0	;tblptru may be non-zero
  9098  01170E                     	endif
  9099  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9100  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  9101  011710  6EF8               	movwf	tblptru,c
  9102  011712                     	endif
  9103  011712  0008               	tblrd		*
  9104  011714  50F5               	movf	tablat,w,c
  9105  011716  0A64               	xorlw	100
  9106  011718  B4D8               	btfsc	status,2,c
  9107  01171A  D015               	goto	u10430
  9108                           
  9109                           ;stkvar	_fmt @ sp[(-32)+-4]
  9110  01171C  0EDC               	movlw	-36
  9111  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9112  011724  0EDD               	movlw	-35
  9113  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  9114  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9115  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  9116  011738                     	if	0	;tblptru may be non-zero
  9117  011738                     	endif
  9118  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9119  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9120  01173A  6EF8               	movwf	tblptru,c
  9121  01173C                     	endif
  9122  01173C  0008               	tblrd		*
  9123  01173E  50F5               	movf	tablat,w,c
  9124  011740  0A69               	xorlw	105
  9125  011742  A4D8               	btfss	status,2,c
  9126  011744  D075               	goto	l10643
  9127  011746                     u10430:
  9128                           
  9129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9130                           ;stkvar	_fmt @ sp[(-32)+-4]
  9131  011746  0EDC               	movlw	-36
  9132  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9133  01174E  0EDD               	movlw	-35
  9134  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9135  011756  2ADE               	incf	postinc2,f,c
  9136  011758  0E00               	movlw	0
  9137  01175A  22DD               	addwfc	postdec2,f,c
  9138                           
  9139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9140                           ;stkvar	_ap @ sp[(-32)+-6]
  9141  01175C  0EDA               	movlw	-38
  9142  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9143  011764  0EDB               	movlw	-37
  9144  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9145  01176C  0E02               	movlw	2
  9146  01176E  5EDE               	subwf	postinc2,f,c
  9147  011770  0E00               	movlw	0
  9148  011772  5ADD               	subwfb	postdec2,f,c
  9149  011774  006F FF78  F02F    	movff	postinc2,btemp+10
  9150  01177A  006F FF74  F030    	movff	postdec2,btemp+11
  9151  011780  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9152  011786  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9153  01178C  006F FF78  F02F    	movff	postinc2,btemp+10
  9154  011792  006F FF74  F030    	movff	postdec2,btemp+11
  9155                           
  9156                           ;stkvar	_ll @ sp[(-32)+14]
  9157  011798  0EEE               	movlw	-18
  9158  01179A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9159  0117A0  0EEF               	movlw	-17
  9160  0117A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9161  0117A8  6A25               	clrf	btemp^0,c
  9162  0117AA  BEE3               	btfsc	plusw1,7,c
  9163  0117AC  6825               	setf	btemp^0,c
  9164  0117AE  0EF0               	movlw	-16
  9165  0117B0  0060  F097  FFE3   	movff	btemp,plusw1
  9166  0117B6  0EF1               	movlw	-15
  9167  0117B8  0060  F097  FFE3   	movff	btemp,plusw1
  9168  0117BE  0EF2               	movlw	-14
  9169  0117C0  0060  F097  FFE3   	movff	btemp,plusw1
  9170  0117C6  0EF3               	movlw	-13
  9171  0117C8  0060  F097  FFE3   	movff	btemp,plusw1
  9172  0117CE  0EF4               	movlw	-12
  9173  0117D0  0060  F097  FFE3   	movff	btemp,plusw1
  9174  0117D6  0EF5               	movlw	-11
  9175  0117D8  0060  F097  FFE3   	movff	btemp,plusw1
  9176                           
  9177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9178                           ;stkvar	_ll @ sp[(-32)+14]
  9179  0117DE  50E1               	movf	fsr1l,w,c
  9180  0117E0  0FEE               	addlw	-18
  9181  0117E2  6ED9               	movwf	fsr2l,c
  9182  0117E4  50E2               	movf	fsr1h,w,c
  9183  0117E6  6EDA               	movwf	fsr2h,c
  9184  0117E8  0EFF               	movlw	255
  9185  0117EA  22DA               	addwfc	fsr2h,f,c
  9186  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9187  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9188  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9189  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9190  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9191  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9192  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9193  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9194                           
  9195                           ;stkvar	_fp @ sp[(-40)+-2]
  9196  01181C  0ED6               	movlw	-42
  9197  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9198  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9199  01182A  EC0E  F0A0         	call	_dtoa	;wreg free
  9200  01182E  D2A4               	goto	l2191
  9201  011830                     l10643:
  9202                           
  9203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9204                           ;stkvar	_ct @ sp[(-32)+26]
  9205  011830  0EFA               	movlw	-6
  9206  011832  006F FF8C  F025    	movff	plusw1,btemp
  9207  011838  0E66               	movlw	102
  9208  01183A  1825               	xorwf	btemp^0,w,c
  9209  01183C  A4D8               	btfss	status,2,c
  9210  01183E  D06E               	goto	l10655
  9211                           
  9212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9213                           ;stkvar	_fmt @ sp[(-32)+-4]
  9214  011840  0EDC               	movlw	-36
  9215  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9216  011848  0EDD               	movlw	-35
  9217  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9218  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9219  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9220  01185C                     	if	0	;tblptru may be non-zero
  9221  01185C                     	endif
  9222  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9223  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9224  01185E  6EF8               	movwf	tblptru,c
  9225  011860                     	endif
  9226                           
  9227                           ;stkvar	_c @ sp[(-32)+31]
  9228  011860  0008               	tblrd		*
  9229  011862  0EFF               	movlw	-1
  9230  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9231                           
  9232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9233                           ;stkvar	_fmt @ sp[(-32)+-4]
  9234  01186A  0EDC               	movlw	-36
  9235  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9236  011872  0EDD               	movlw	-35
  9237  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9238  01187A  2ADE               	incf	postinc2,f,c
  9239  01187C  0E00               	movlw	0
  9240  01187E  22DD               	addwfc	postdec2,f,c
  9241                           
  9242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9243                           ;stkvar	_ap @ sp[(-32)+-6]
  9244  011880  0EDA               	movlw	-38
  9245  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9246  011888  0EDB               	movlw	-37
  9247  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9248  011890  0E04               	movlw	4
  9249  011892  5EDE               	subwf	postinc2,f,c
  9250  011894  0E00               	movlw	0
  9251  011896  5ADD               	subwfb	postdec2,f,c
  9252  011898  006F FF78  F02F    	movff	postinc2,btemp+10
  9253  01189E  006F FF74  F030    	movff	postdec2,btemp+11
  9254  0118A4  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9255  0118AA  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9256  0118B0  006F FF78  F02D    	movff	postinc2,btemp+8
  9257  0118B6  006F FF78  F02E    	movff	postinc2,btemp+9
  9258  0118BC  006F FF78  F02F    	movff	postinc2,btemp+10
  9259  0118C2  006F FF78  F030    	movff	postinc2,btemp+11
  9260                           
  9261                           ;stkvar	_f @ sp[(-32)+22]
  9262  0118C8  0EF6               	movlw	-10
  9263  0118CA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9264  0118D0  0EF7               	movlw	-9
  9265  0118D2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9266  0118D8  0EF8               	movlw	-8
  9267  0118DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9268  0118E0  0EF9               	movlw	-7
  9269  0118E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9270  0118E8                     l10651:
  9271                           
  9272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9273                           ;stkvar	_c @ sp[(-32)+31]
  9274  0118E8  0EFF               	movlw	-1
  9275  0118EA  50E3               	movf	plusw1,w,c
  9276  0118EC  6EE6               	movwf	postinc1,c
  9277                           
  9278                           ;stkvar	_f @ sp[(-33)+22]
  9279  0118EE  0EF5               	movlw	-11
  9280  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9281  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9282  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9283  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9284                           
  9285                           ;stkvar	_fp @ sp[(-37)+-2]
  9286  011908  0ED9               	movlw	-39
  9287  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9288  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9289  011916  EC00  F080         	call	_efgtoa	;wreg free
  9290  01191A  D22E               	goto	l2191
  9291  01191C                     l10655:
  9292                           
  9293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9294  01191C  0E02               	movlw	2
  9295  01191E  6EE6               	movwf	postinc1,c
  9296  011920  0E00               	movlw	0
  9297  011922  6EE6               	movwf	postinc1,c
  9298  011924  0EF5               	movlw	low STR_54
  9299  011926  6EE6               	movwf	postinc1,c
  9300  011928  0EFF               	movlw	high STR_54
  9301  01192A  6EE6               	movwf	postinc1,c
  9302                           
  9303                           ;stkvar	_ct @ sp[(-36)+26]
  9304  01192C  0EF6               	movlw	246
  9305  01192E  24E1               	addwf	fsr1l,w,c
  9306  011930  6E25               	movwf	btemp^0,c
  9307  011932  0EFF               	movlw	255
  9308  011934  20E2               	addwfc	fsr1h,w,c
  9309  011936  6E26               	movwf	(btemp+1)^0,c
  9310  011938  0060  F097  FFE6   	movff	btemp,postinc1
  9311  01193E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  9312  011944  ECD2  F0AF         	call	_strncmp	;wreg free
  9313  011948  5025               	movf	btemp^0,w,c
  9314  01194A  1026               	iorwf	(btemp+1)^0,w,c
  9315  01194C  A4D8               	btfss	status,2,c
  9316  01194E  D096               	goto	l10675
  9317                           
  9318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9319                           ;stkvar	_fmt @ sp[(-32)+-4]
  9320  011950  0EDC               	movlw	-36
  9321  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9322  011958  0EDD               	movlw	-35
  9323  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9324  011960  006F FF78  F02F    	movff	postinc2,btemp+10
  9325  011966  006F FF74  F030    	movff	postdec2,btemp+11
  9326  01196C  0E01               	movlw	1
  9327  01196E  262F               	addwf	(btemp+10)^0,f,c
  9328  011970  0E00               	movlw	0
  9329  011972  2230               	addwfc	(btemp+11)^0,f,c
  9330  011974  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9331  01197A  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9332  011980                     	if	0	;tblptru may be non-zero
  9333  011980                     	endif
  9334  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9335  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9336  011982  6EF8               	movwf	tblptru,c
  9337  011984                     	endif
  9338                           
  9339                           ;stkvar	_c @ sp[(-32)+31]
  9340  011984  0008               	tblrd		*
  9341  011986  0EFF               	movlw	-1
  9342  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9343  01198E  0EBF               	movlw	191
  9344  011990  6E2F               	movwf	(btemp+10)^0,c
  9345  011992  0EFF               	movlw	255
  9346  011994  6E30               	movwf	(btemp+11)^0,c
  9347                           
  9348                           ;stkvar	_fmt @ sp[(-32)+-4]
  9349  011996  0EDC               	movlw	-36
  9350  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9351  01199E  0EDD               	movlw	-35
  9352  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9353  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9354  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9355  0119B2                     	if	0	;tblptru may be non-zero
  9356  0119B2                     	endif
  9357  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9358  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9359  0119B4  6EF8               	movwf	tblptru,c
  9360  0119B6                     	endif
  9361  0119B6  0008               	tblrd		*
  9362  0119B8  50F5               	movf	tablat,w,c
  9363  0119BA  6E2D               	movwf	(btemp+8)^0,c
  9364  0119BC  6A2E               	clrf	(btemp+9)^0,c
  9365  0119BE  502F               	movf	(btemp+10)^0,w,c
  9366  0119C0  262D               	addwf	(btemp+8)^0,f,c
  9367  0119C2  5030               	movf	(btemp+11)^0,w,c
  9368  0119C4  222E               	addwfc	(btemp+9)^0,f,c
  9369  0119C6  502E               	movf	(btemp+9)^0,w,c
  9370  0119C8  E106               	bnz	u10460
  9371  0119CA  0E1A               	movlw	26
  9372  0119CC  5C2D               	subwf	(btemp+8)^0,w,c
  9373  0119CE  B0D8               	btfsc	status,0,c
  9374  0119D0  D002               	goto	u10460
  9375  0119D2  0E01               	movlw	1
  9376  0119D4  D001               	goto	u10470
  9377  0119D6                     u10460:
  9378  0119D6  0E00               	movlw	0
  9379  0119D8                     u10470:
  9380  0119D8  6E2F               	movwf	(btemp+10)^0,c
  9381  0119DA  6A30               	clrf	(btemp+11)^0,c
  9382                           
  9383                           ;stkvar	_vfpfcnvrt$5012 @ sp[(-32)+2]
  9384  0119DC  0EE2               	movlw	-30
  9385  0119DE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9386  0119E4  0EE3               	movlw	-29
  9387  0119E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9388                           
  9389                           ;stkvar	_vfpfcnvrt$5012 @ sp[(-32)+2]
  9390  0119EC  0EE2               	movlw	-30
  9391  0119EE  006F FF8C  F025    	movff	plusw1,btemp
  9392  0119F4  0EE3               	movlw	-29
  9393  0119F6  50E3               	movf	plusw1,w,c
  9394  0119F8  1025               	iorwf	btemp^0,w,c
  9395                           
  9396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9397                           ;stkvar	_ap @ sp[(-32)+-6]
  9398                           
  9399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9400                           
  9401                           ;stkvar	_f @ sp[(-32)+22]
  9402                           
  9403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9404                           ;stkvar	_ap @ sp[(-32)+-6]
  9405  0119FA  0EDA               	movlw	-38
  9406  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9407  011A02  0EDB               	movlw	-37
  9408  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9409  011A0A  0E04               	movlw	4
  9410  011A0C  5EDE               	subwf	postinc2,f,c
  9411  011A0E  0E00               	movlw	0
  9412  011A10  5ADD               	subwfb	postdec2,f,c
  9413  011A12  006F FF78  F02F    	movff	postinc2,btemp+10
  9414  011A18  006F FF74  F030    	movff	postdec2,btemp+11
  9415  011A1E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9416  011A24  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9417  011A2A  006F FF78  F02D    	movff	postinc2,btemp+8
  9418  011A30  006F FF78  F02E    	movff	postinc2,btemp+9
  9419  011A36  006F FF78  F02F    	movff	postinc2,btemp+10
  9420  011A3C  006F FF78  F030    	movff	postinc2,btemp+11
  9421                           
  9422                           ;stkvar	_f @ sp[(-32)+22]
  9423  011A42  0EF6               	movlw	-10
  9424  011A44  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9425  011A4A  0EF7               	movlw	-9
  9426  011A4C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9427  011A52  0EF8               	movlw	-8
  9428  011A54  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9429  011A5A  0EF9               	movlw	-7
  9430  011A5C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9431                           
  9432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9433                           ;stkvar	_fmt @ sp[(-32)+-4]
  9434  011A62  0EDC               	movlw	-36
  9435  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9436  011A6A  0EDD               	movlw	-35
  9437  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9438  011A72  0E02               	movlw	2
  9439  011A74  26DE               	addwf	postinc2,f,c
  9440  011A76  0E00               	movlw	0
  9441  011A78  22DD               	addwfc	postdec2,f,c
  9442  011A7A  D736               	goto	l10651
  9443  011A7C                     l10675:
  9444                           
  9445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9446                           ;stkvar	_fmt @ sp[(-32)+-4]
  9447  011A7C  0EDC               	movlw	-36
  9448  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9449  011A84  0EDD               	movlw	-35
  9450  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9451  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9452  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9453  011A98                     	if	0	;tblptru may be non-zero
  9454  011A98                     	endif
  9455  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9456  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9457  011A9A  6EF8               	movwf	tblptru,c
  9458  011A9C                     	endif
  9459  011A9C  0008               	tblrd		*
  9460  011A9E  50F5               	movf	tablat,w,c
  9461  011AA0  0A73               	xorlw	115
  9462  011AA2  A4D8               	btfss	status,2,c
  9463  011AA4  D042               	goto	l10685
  9464                           
  9465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9466                           ;stkvar	_fmt @ sp[(-32)+-4]
  9467  011AA6  0EDC               	movlw	-36
  9468  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9469  011AAE  0EDD               	movlw	-35
  9470  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9471  011AB6  2ADE               	incf	postinc2,f,c
  9472  011AB8  0E00               	movlw	0
  9473  011ABA  22DD               	addwfc	postdec2,f,c
  9474                           
  9475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9476                           ;stkvar	_ap @ sp[(-32)+-6]
  9477  011ABC  0EDA               	movlw	-38
  9478  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9479  011AC4  0EDB               	movlw	-37
  9480  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9481  011ACC  0E02               	movlw	2
  9482  011ACE  5EDE               	subwf	postinc2,f,c
  9483  011AD0  0E00               	movlw	0
  9484  011AD2  5ADD               	subwfb	postdec2,f,c
  9485  011AD4  006F FF78  F02F    	movff	postinc2,btemp+10
  9486  011ADA  006F FF74  F030    	movff	postdec2,btemp+11
  9487  011AE0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9488  011AE6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9489  011AEC  006F FF78  F02F    	movff	postinc2,btemp+10
  9490  011AF2  006F FF74  F030    	movff	postdec2,btemp+11
  9491                           
  9492                           ;stkvar	_cp @ sp[(-32)+29]
  9493  011AF8  0EFE               	movlw	-2
  9494  011AFA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9495  011B00  0EFD               	movlw	-3
  9496  011B02  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9497                           
  9498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9499                           ;stkvar	_cp @ sp[(-32)+29]
  9500  011B08  0EFD               	movlw	-3
  9501  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9502  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9503                           
  9504                           ;stkvar	_fp @ sp[(-34)+-2]
  9505  011B16  0EDC               	movlw	-36
  9506  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9507  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9508  011B24  ECCE  F0A8         	call	_stoa	;wreg free
  9509  011B28  D127               	goto	l2191
  9510  011B2A                     l10685:
  9511                           
  9512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9513                           ;stkvar	_fmt @ sp[(-32)+-4]
  9514  011B2A  0EDC               	movlw	-36
  9515  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9516  011B32  0EDD               	movlw	-35
  9517  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9518  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9519  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9520  011B46                     	if	0	;tblptru may be non-zero
  9521  011B46                     	endif
  9522  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9523  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9524  011B48  6EF8               	movwf	tblptru,c
  9525  011B4A                     	endif
  9526  011B4A  0008               	tblrd		*
  9527  011B4C  50F5               	movf	tablat,w,c
  9528  011B4E  0A78               	xorlw	120
  9529  011B50  B4D8               	btfsc	status,2,c
  9530  011B52  D015               	goto	u10510
  9531                           
  9532                           ;stkvar	_fmt @ sp[(-32)+-4]
  9533  011B54  0EDC               	movlw	-36
  9534  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9535  011B5C  0EDD               	movlw	-35
  9536  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9537  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9538  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9539  011B70                     	if	0	;tblptru may be non-zero
  9540  011B70                     	endif
  9541  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9542  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9543  011B72  6EF8               	movwf	tblptru,c
  9544  011B74                     	endif
  9545  011B74  0008               	tblrd		*
  9546  011B76  50F5               	movf	tablat,w,c
  9547  011B78  0A58               	xorlw	88
  9548  011B7A  A4D8               	btfss	status,2,c
  9549  011B7C  D094               	goto	l10699
  9550  011B7E                     u10510:
  9551                           
  9552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9553                           ;stkvar	_fmt @ sp[(-32)+-4]
  9554  011B7E  0EDC               	movlw	-36
  9555  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9556  011B86  0EDD               	movlw	-35
  9557  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9558  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9559  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9560  011B9A                     	if	0	;tblptru may be non-zero
  9561  011B9A                     	endif
  9562  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9563  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9564  011B9C  6EF8               	movwf	tblptru,c
  9565  011B9E                     	endif
  9566                           
  9567                           ;stkvar	_c @ sp[(-32)+31]
  9568  011B9E  0008               	tblrd		*
  9569  011BA0  0EFF               	movlw	-1
  9570  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9571                           
  9572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9573                           ;stkvar	_fmt @ sp[(-32)+-4]
  9574  011BA8  0EDC               	movlw	-36
  9575  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9576  011BB0  0EDD               	movlw	-35
  9577  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9578  011BB8  2ADE               	incf	postinc2,f,c
  9579  011BBA  0E00               	movlw	0
  9580  011BBC  22DD               	addwfc	postdec2,f,c
  9581                           
  9582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9583                           ;stkvar	_ap @ sp[(-32)+-6]
  9584  011BBE  0EDA               	movlw	-38
  9585  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9586  011BC6  0EDB               	movlw	-37
  9587  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9588  011BCE  0E02               	movlw	2
  9589  011BD0  5EDE               	subwf	postinc2,f,c
  9590  011BD2  0E00               	movlw	0
  9591  011BD4  5ADD               	subwfb	postdec2,f,c
  9592  011BD6  006F FF78  F02F    	movff	postinc2,btemp+10
  9593  011BDC  006F FF74  F030    	movff	postdec2,btemp+11
  9594  011BE2  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9595  011BE8  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9596  011BEE  006F FF78  F02F    	movff	postinc2,btemp+10
  9597  011BF4  006F FF74  F030    	movff	postdec2,btemp+11
  9598  011BFA  502F               	movf	(btemp+10)^0,w,c
  9599  011BFC  6E35               	movwf	(btemp+16)^0,c
  9600  011BFE  5030               	movf	(btemp+11)^0,w,c
  9601  011C00  6E36               	movwf	(btemp+17)^0,c
  9602  011C02  6A37               	clrf	(btemp+18)^0,c
  9603  011C04  6A38               	clrf	(btemp+19)^0,c
  9604  011C06  6A39               	clrf	(btemp+20)^0,c
  9605  011C08  6A3A               	clrf	(btemp+21)^0,c
  9606  011C0A  6A3B               	clrf	(btemp+22)^0,c
  9607  011C0C  6A3C               	clrf	(btemp+23)^0,c
  9608                           
  9609                           ;stkvar	_llu @ sp[(-32)+6]
  9610  011C0E  0EE6               	movlw	-26
  9611  011C10  0060  F0D7  FFE3   	movff	btemp+16,plusw1
  9612  011C16  0EE7               	movlw	-25
  9613  011C18  0060  F0DB  FFE3   	movff	btemp+17,plusw1
  9614  011C1E  0EE8               	movlw	-24
  9615  011C20  0060  F0DF  FFE3   	movff	btemp+18,plusw1
  9616  011C26  0EE9               	movlw	-23
  9617  011C28  0060  F0E3  FFE3   	movff	btemp+19,plusw1
  9618  011C2E  0EEA               	movlw	-22
  9619  011C30  0060  F0E7  FFE3   	movff	btemp+20,plusw1
  9620  011C36  0EEB               	movlw	-21
  9621  011C38  0060  F0EB  FFE3   	movff	btemp+21,plusw1
  9622  011C3E  0EEC               	movlw	-20
  9623  011C40  0060  F0EF  FFE3   	movff	btemp+22,plusw1
  9624  011C46  0EED               	movlw	-19
  9625  011C48  0060  F0F3  FFE3   	movff	btemp+23,plusw1
  9626                           
  9627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9628                           ;stkvar	_c @ sp[(-32)+31]
  9629  011C4E  0EFF               	movlw	-1
  9630  011C50  50E3               	movf	plusw1,w,c
  9631  011C52  6EE6               	movwf	postinc1,c
  9632                           
  9633                           ;stkvar	_llu @ sp[(-33)+6]
  9634  011C54  50E1               	movf	fsr1l,w,c
  9635  011C56  0FE5               	addlw	-27
  9636  011C58  6ED9               	movwf	fsr2l,c
  9637  011C5A  50E2               	movf	fsr1h,w,c
  9638  011C5C  6EDA               	movwf	fsr2h,c
  9639  011C5E  0EFF               	movlw	255
  9640  011C60  22DA               	addwfc	fsr2h,f,c
  9641  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9642  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9643  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9644  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9645  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9646  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9647  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9648  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9649                           
  9650                           ;stkvar	_fp @ sp[(-41)+-2]
  9651  011C92  0ED5               	movlw	-43
  9652  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9653  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9654  011CA0  EC4E  F0A2         	call	_xtoa	;wreg free
  9655  011CA4  D069               	goto	l2191
  9656  011CA6                     l10699:
  9657                           
  9658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9659                           ;stkvar	_fmt @ sp[(-32)+-4]
  9660  011CA6  0EDC               	movlw	-36
  9661  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9662  011CAE  0EDD               	movlw	-35
  9663  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9664  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9665  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9666  011CC2                     	if	0	;tblptru may be non-zero
  9667  011CC2                     	endif
  9668  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9669  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9670  011CC4  6EF8               	movwf	tblptru,c
  9671  011CC6                     	endif
  9672  011CC6  0008               	tblrd		*
  9673  011CC8  50F5               	movf	tablat,w,c
  9674  011CCA  0A25               	xorlw	37
  9675  011CCC  A4D8               	btfss	status,2,c
  9676  011CCE  D01A               	goto	l10709
  9677                           
  9678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9679                           ;stkvar	_fmt @ sp[(-32)+-4]
  9680  011CD0  0EDC               	movlw	-36
  9681  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9682  011CD8  0EDD               	movlw	-35
  9683  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9684  011CE0  2ADE               	incf	postinc2,f,c
  9685  011CE2  0E00               	movlw	0
  9686  011CE4  22DD               	addwfc	postdec2,f,c
  9687                           
  9688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9689                           ;stkvar	_fp @ sp[(-32)+-2]
  9690  011CE6  0EDE               	movlw	-34
  9691  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9692  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9693  011CF4  0E25               	movlw	37
  9694  011CF6  6EE6               	movwf	postinc1,c
  9695  011CF8  0E00               	movlw	0
  9696  011CFA  6EE6               	movwf	postinc1,c
  9697  011CFC  ECAD  F0B5         	call	_fputc	;wreg free
  9698  011D00                     l10705:
  9699                           
  9700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9701  011D00  0E01               	movlw	1
  9702  011D02  D00C               	goto	L7
  9703  011D04                     l10709:
  9704                           
  9705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9706                           ;stkvar	_fmt @ sp[(-32)+-4]
  9707  011D04  0EDC               	movlw	-36
  9708  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9709  011D0C  0EDD               	movlw	-35
  9710  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9711  011D14  2ADE               	incf	postinc2,f,c
  9712  011D16  0E00               	movlw	0
  9713  011D18  22DD               	addwfc	postdec2,f,c
  9714                           
  9715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9716  011D1A  0E00               	movlw	0
  9717  011D1C                     L7:
  9718  011D1C  6E25               	movwf	btemp^0,c
  9719  011D1E  0E00               	movlw	0
  9720  011D20  6E26               	movwf	(btemp+1)^0,c
  9721  011D22  D02A               	goto	l2191
  9722  011D24                     l10715:
  9723                           
  9724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9725                           ;stkvar	_fp @ sp[(-32)+-2]
  9726  011D24  0EDE               	movlw	-34
  9727  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9728  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9729                           
  9730                           ;stkvar	_fmt @ sp[(-34)+-4]
  9731  011D32  0EDA               	movlw	-38
  9732  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9733  011D3A  0EDB               	movlw	-37
  9734  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9735  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9736  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9737  011D4E                     	if	0	;tblptru may be non-zero
  9738  011D4E                     	endif
  9739  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9740  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9741  011D50  6EF8               	movwf	tblptru,c
  9742  011D52                     	endif
  9743  011D52  0008               	tblrd		*
  9744  011D54  50F5               	movf	tablat,w,c
  9745  011D56  6EE6               	movwf	postinc1,c
  9746  011D58  0E00               	movlw	0
  9747  011D5A  6EE6               	movwf	postinc1,c
  9748  011D5C  ECAD  F0B5         	call	_fputc	;wreg free
  9749                           
  9750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9751                           ;stkvar	_fmt @ sp[(-32)+-4]
  9752  011D60  0EDC               	movlw	-36
  9753  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9754  011D68  0EDD               	movlw	-35
  9755  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9756  011D70  2ADE               	incf	postinc2,f,c
  9757  011D72  0E00               	movlw	0
  9758  011D74  22DD               	addwfc	postdec2,f,c
  9759  011D76  D7C4               	goto	l10705
  9760  011D78                     l2191:
  9761                           
  9762                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9763  011D78  0EDA               	movlw	218
  9764  011D7A  26E1               	addwf	fsr1l,f,c
  9765  011D7C  0EFF               	movlw	255
  9766  011D7E  22E2               	addwfc	fsr1h,f,c
  9767  011D80  0012               	return		;funcret
  9768  011D82                     __end_of_vfpfcnvrt:
  9769                           	opt callstack 0
  9770                           
  9771 ;; *************** function _xtoa *****************
  9772 ;; Defined at:
  9773 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9776 ;;		 -> f(6), NULL(0), 
  9777 ;;  d               8  [STACK] unsigned long long 
  9778 ;;  x               1  [STACK] unsigned char 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;  n               8  [STACK] unsigned long long 
  9781 ;;  c               2  [STACK] int 
  9782 ;;  i               2  [STACK] int 
  9783 ;;  w               2  [STACK] int 
  9784 ;;  p               2  [STACK] int 
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  2  [STACK] int 
  9787 ;; Registers used:
  9788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;Total ram usage:        0 bytes
  9799 ;; Hardware stack levels used:    1
  9800 ;; Hardware stack levels required when called:   15
  9801 ;; This function calls:
  9802 ;;		_isalpha
  9803 ;;		_isupper
  9804 ;;		_pad
  9805 ;;		_toupper
  9806 ;; This function is called by:
  9807 ;;		_vfpfcnvrt
  9808 ;; This function uses a reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text42
  9812  01449C                     __ptext42:
  9813                           	opt callstack 0
  9814  01449C                     _xtoa:
  9815                           	opt callstack 0
  9816                           
  9817                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9818  01449C  0E14               	movlw	20
  9819  01449E  26E1               	addwf	fsr1l,f,c
  9820  0144A0  0E00               	movlw	0
  9821  0144A2  22E2               	addwfc	fsr1h,f,c
  9822                           
  9823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9824                           
  9825                           ;incstack = 0
  9826  0144A4  AE0D               	btfss	(_prec+1)^0,7,c
  9827                           
  9828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9829  0144A6  920E               	bcf	_flags^0,1,c
  9830                           
  9831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9832  0144A8  BE0D               	btfsc	(_prec+1)^0,7,c
  9833  0144AA  D005               	goto	u10110
  9834  0144AC  500D               	movf	(_prec+1)^0,w,c
  9835  0144AE  E110               	bnz	l10497
  9836  0144B0  040C               	decf	_prec^0,w,c
  9837  0144B2  B0D8               	btfsc	status,0,c
  9838  0144B4  D00D               	goto	l10497
  9839  0144B6                     u10110:
  9840  0144B6  0E01               	movlw	1
  9841  0144B8  6E2F               	movwf	(btemp+10)^0,c
  9842  0144BA  0E00               	movlw	0
  9843  0144BC  6E30               	movwf	(btemp+11)^0,c
  9844                           
  9845                           ;stkvar	_p @ sp[(-20)+18]
  9846  0144BE  0EFE               	movlw	-2
  9847  0144C0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9848  0144C6  0EFF               	movlw	-1
  9849  0144C8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9850  0144CE  D008               	goto	l2141
  9851  0144D0                     l10497:
  9852                           
  9853                           ;stkvar	_p @ sp[(-20)+18]
  9854  0144D0  0EFE               	movlw	-2
  9855  0144D2  0060  F033  FFE3   	movff	_prec,plusw1
  9856  0144D8  0EFF               	movlw	-1
  9857  0144DA  0060  F037  FFE3   	movff	_prec+1,plusw1
  9858  0144E0                     l2141:
  9859                           
  9860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9861                           ;stkvar	_w @ sp[(-20)+16]
  9862  0144E0  0EFC               	movlw	-4
  9863  0144E2  0060  F02B  FFE3   	movff	_width,plusw1
  9864  0144E8  0EFD               	movlw	-3
  9865  0144EA  0060  F02F  FFE3   	movff	_width+1,plusw1
  9866                           
  9867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9868  0144F0  A80E               	btfss	_flags^0,4,c
  9869  0144F2  D00B               	goto	l10503
  9870                           
  9871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9872                           ;stkvar	_w @ sp[(-20)+16]
  9873  0144F4  50E1               	movf	fsr1l,w,c
  9874  0144F6  0FFC               	addlw	-4
  9875  0144F8  6ED9               	movwf	fsr2l,c
  9876  0144FA  50E2               	movf	fsr1h,w,c
  9877  0144FC  6EDA               	movwf	fsr2h,c
  9878  0144FE  0EFF               	movlw	255
  9879  014500  22DA               	addwfc	fsr2h,f,c
  9880  014502  0EFE               	movlw	254
  9881  014504  26DE               	addwf	postinc2,f,c
  9882  014506  0EFF               	movlw	255
  9883  014508  22DD               	addwfc	postdec2,f,c
  9884  01450A                     l10503:
  9885                           
  9886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9887                           ;stkvar	_d @ sp[(-20)+-10]
  9888  01450A  0EE2               	movlw	226
  9889  01450C  24E1               	addwf	fsr1l,w,c
  9890  01450E  6ED9               	movwf	fsr2l,c
  9891  014510  0EFF               	movlw	255
  9892  014512  20E2               	addwfc	fsr1h,w,c
  9893  014514  6EDA               	movwf	fsr2h,c
  9894                           
  9895                           ;stkvar	_n @ sp[(-20)+4]
  9896  014516  0E08               	movlw	8
  9897  014518  6E25               	movwf	btemp^0,c
  9898  01451A  0EF0               	movlw	-16
  9899  01451C                     us1013999:
  9900  01451C  006F FF7B FFE3     	movff	postinc2,plusw1
  9901  014522  28E8               	incf	wreg,w,c
  9902  014524  2E25               	decfsz	btemp^0,f,c
  9903  014526  D7FA               	bra	us1013999
  9904                           
  9905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9906  014528  0E4F               	movlw	79
  9907  01452A  6E2F               	movwf	(btemp+10)^0,c
  9908  01452C  0E00               	movlw	0
  9909  01452E  6E30               	movwf	(btemp+11)^0,c
  9910                           
  9911                           ;stkvar	_i @ sp[(-20)+14]
  9912  014530  0EFA               	movlw	-6
  9913  014532  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9914  014538  0EFB               	movlw	-5
  9915  01453A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9916                           
  9917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9918  014540  0101               	movlb	1	; () banked
  9919  014542  6BF4               	clrf	(_dbuf+79)& (0+255),b
  9920                           
  9921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9922  014544  D0EE               	goto	l10541
  9923  014546                     l10509:
  9924                           
  9925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9926                           ;stkvar	_i @ sp[(-20)+14]
  9927  014546  50E1               	movf	fsr1l,w,c
  9928  014548  0FFA               	addlw	-6
  9929  01454A  6ED9               	movwf	fsr2l,c
  9930  01454C  50E2               	movf	fsr1h,w,c
  9931  01454E  6EDA               	movwf	fsr2h,c
  9932  014550  0EFF               	movlw	255
  9933  014552  22DA               	addwfc	fsr2h,f,c
  9934  014554  06DE               	decf	postinc2,f,c
  9935  014556  0E00               	movlw	0
  9936  014558  5ADD               	subwfb	postdec2,f,c
  9937                           
  9938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9939                           ;stkvar	_n @ sp[(-20)+4]
  9940  01455A  0EF0               	movlw	-16
  9941  01455C  006F FF8C  F02F    	movff	plusw1,btemp+10
  9942  014562  0EF1               	movlw	-15
  9943  014564  006F FF8C  F030    	movff	plusw1,btemp+11
  9944  01456A  0E0F               	movlw	15
  9945  01456C  162F               	andwf	(btemp+10)^0,f,c
  9946  01456E  0E00               	movlw	0
  9947  014570  1630               	andwf	(btemp+11)^0,f,c
  9948                           
  9949                           ;stkvar	_c @ sp[(-20)+12]
  9950  014572  0EF8               	movlw	-8
  9951  014574  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9952  01457A  0EF9               	movlw	-7
  9953  01457C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9954                           
  9955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9956                           ;stkvar	_c @ sp[(-20)+12]
  9957  014582  0EF9               	movlw	-7
  9958  014584  BEE3               	btfsc	plusw1,7,c
  9959  014586  D00F               	goto	l10517
  9960  014588  0EF9               	movlw	-7
  9961  01458A  50E3               	movf	plusw1,w,c
  9962  01458C  E108               	bnz	u10140
  9963  01458E  0EF8               	movlw	-8
  9964  014590  006F FF8C  F025    	movff	plusw1,btemp
  9965  014596  0E0A               	movlw	10
  9966  014598  5E25               	subwf	btemp^0,f,c
  9967  01459A  A0D8               	btfss	status,0,c
  9968  01459C  D004               	goto	l10517
  9969  01459E                     u10140:
  9970                           
  9971                           ;stkvar	_c @ sp[(-20)+12]
  9972  01459E  0EF8               	movlw	-8
  9973  0145A0  50E3               	movf	plusw1,w,c
  9974  0145A2  0F57               	addlw	87
  9975  0145A4  D003               	goto	L8
  9976  0145A6                     l10517:
  9977                           
  9978                           ;stkvar	_c @ sp[(-20)+12]
  9979  0145A6  0EF8               	movlw	-8
  9980  0145A8  50E3               	movf	plusw1,w,c
  9981  0145AA  0F30               	addlw	48
  9982  0145AC                     L8:
  9983  0145AC  6E2F               	movwf	(btemp+10)^0,c
  9984  0145AE  0EF9               	movlw	-7
  9985  0145B0  006F FF8C  F030    	movff	plusw1,btemp+11
  9986  0145B6  0E00               	movlw	0
  9987  0145B8  2230               	addwfc	(btemp+11)^0,f,c
  9988                           
  9989                           ;stkvar	_c @ sp[(-20)+12]
  9990  0145BA  0EF8               	movlw	-8
  9991  0145BC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9992  0145C2  0EF9               	movlw	-7
  9993  0145C4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9994  0145CA  0EBF               	movlw	191
  9995  0145CC  6E2F               	movwf	(btemp+10)^0,c
  9996  0145CE  0EFF               	movlw	255
  9997  0145D0  6E30               	movwf	(btemp+11)^0,c
  9998                           
  9999                           ;stkvar	_x @ sp[(-20)+-11]
 10000  0145D2  0EE1               	movlw	-31
 10001  0145D4  50E3               	movf	plusw1,w,c
 10002  0145D6  6E2D               	movwf	(btemp+8)^0,c
 10003  0145D8  6A2E               	clrf	(btemp+9)^0,c
 10004  0145DA  502F               	movf	(btemp+10)^0,w,c
 10005  0145DC  262D               	addwf	(btemp+8)^0,f,c
 10006  0145DE  5030               	movf	(btemp+11)^0,w,c
 10007  0145E0  222E               	addwfc	(btemp+9)^0,f,c
 10008  0145E2  502E               	movf	(btemp+9)^0,w,c
 10009  0145E4  E106               	bnz	u10150
 10010  0145E6  0E1A               	movlw	26
 10011  0145E8  5C2D               	subwf	(btemp+8)^0,w,c
 10012  0145EA  B0D8               	btfsc	status,0,c
 10013  0145EC  D002               	goto	u10150
 10014  0145EE  0E01               	movlw	1
 10015  0145F0  D001               	goto	u10160
 10016  0145F2                     u10150:
 10017  0145F2  0E00               	movlw	0
 10018  0145F4                     u10160:
 10019  0145F4  6E2F               	movwf	(btemp+10)^0,c
 10020  0145F6  6A30               	clrf	(btemp+11)^0,c
 10021                           
 10022                           ;stkvar	_xtoa$4990 @ sp[(-20)+2]
 10023  0145F8  0EEE               	movlw	-18
 10024  0145FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10025  014600  0EEF               	movlw	-17
 10026  014602  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10027                           
 10028                           ;stkvar	_xtoa$4990 @ sp[(-20)+2]
 10029  014608  0EEE               	movlw	-18
 10030  01460A  006F FF8C  F025    	movff	plusw1,btemp
 10031  014610  0EEF               	movlw	-17
 10032  014612  50E3               	movf	plusw1,w,c
 10033  014614  1025               	iorwf	btemp^0,w,c
 10034  014616  B4D8               	btfsc	status,2,c
 10035  014618  D041               	goto	l10533
 10036  01461A  0E9F               	movlw	159
 10037  01461C  6E2F               	movwf	(btemp+10)^0,c
 10038  01461E  0EFF               	movlw	255
 10039  014620  6E30               	movwf	(btemp+11)^0,c
 10040                           
 10041                           ;stkvar	_c @ sp[(-20)+12]
 10042  014622  0EF8               	movlw	-8
 10043  014624  006F FF8C  F02D    	movff	plusw1,btemp+8
 10044  01462A  0EF9               	movlw	-7
 10045  01462C  006F FF8C  F02E    	movff	plusw1,btemp+9
 10046  014632  0E20               	movlw	32
 10047  014634  122D               	iorwf	(btemp+8)^0,f,c
 10048  014636  0E00               	movlw	0
 10049  014638  122E               	iorwf	(btemp+9)^0,f,c
 10050  01463A  502F               	movf	(btemp+10)^0,w,c
 10051  01463C  262D               	addwf	(btemp+8)^0,f,c
 10052  01463E  5030               	movf	(btemp+11)^0,w,c
 10053  014640  222E               	addwfc	(btemp+9)^0,f,c
 10054  014642  502E               	movf	(btemp+9)^0,w,c
 10055  014644  E106               	bnz	u10180
 10056  014646  0E1A               	movlw	26
 10057  014648  5C2D               	subwf	(btemp+8)^0,w,c
 10058  01464A  B0D8               	btfsc	status,0,c
 10059  01464C  D002               	goto	u10180
 10060  01464E  0E01               	movlw	1
 10061  014650  D001               	goto	u10190
 10062  014652                     u10180:
 10063  014652  0E00               	movlw	0
 10064  014654                     u10190:
 10065  014654  6E2F               	movwf	(btemp+10)^0,c
 10066  014656  6A30               	clrf	(btemp+11)^0,c
 10067                           
 10068                           ;stkvar	_xtoa$4991 @ sp[(-20)+0]
 10069  014658  0EEC               	movlw	-20
 10070  01465A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10071  014660  0EED               	movlw	-19
 10072  014662  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10073                           
 10074                           ;stkvar	_xtoa$4991 @ sp[(-20)+0]
 10075  014668  0EEC               	movlw	-20
 10076  01466A  006F FF8C  F025    	movff	plusw1,btemp
 10077  014670  0EED               	movlw	-19
 10078  014672  50E3               	movf	plusw1,w,c
 10079  014674  1025               	iorwf	btemp^0,w,c
 10080  014676  B4D8               	btfsc	status,2,c
 10081  014678  D011               	goto	l10533
 10082                           
 10083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 10084                           ;stkvar	_c @ sp[(-20)+12]
 10085  01467A  0EF8               	movlw	-8
 10086  01467C  006F FF8F FFE6     	movff	plusw1,postinc1
 10087  014682  006F FF8F FFE6     	movff	plusw1,postinc1
 10088  014688  ECC5  F0BE         	call	_toupper	;wreg free
 10089                           
 10090                           ;stkvar	_c @ sp[(-20)+12]
 10091  01468C  0EF8               	movlw	-8
 10092  01468E  0060  F097  FFE3   	movff	btemp,plusw1
 10093  014694  0EF9               	movlw	-7
 10094  014696  0060  F09B  FFE3   	movff	btemp+1,plusw1
 10095  01469C                     l10533:
 10096                           
 10097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 10098                           ;stkvar	_c @ sp[(-20)+12]
 10099                           ;stkvar	_i @ sp[(-20)+14]
 10100  01469C  0EFA               	movlw	-6
 10101  01469E  006F FF8C  F02F    	movff	plusw1,btemp+10
 10102  0146A4  0EFB               	movlw	-5
 10103  0146A6  006F FF8C  F030    	movff	plusw1,btemp+11
 10104  0146AC  0EA5               	movlw	low _dbuf
 10105  0146AE  242F               	addwf	(btemp+10)^0,w,c
 10106  0146B0  6ED9               	movwf	fsr2l,c
 10107  0146B2  0E01               	movlw	high _dbuf
 10108  0146B4  2030               	addwfc	(btemp+11)^0,w,c
 10109  0146B6  6EDA               	movwf	fsr2h,c
 10110  0146B8  0EF8               	movlw	-8
 10111  0146BA  006F FF8F FFDF     	movff	plusw1,indf2
 10112                           
 10113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 10114                           ;stkvar	_p @ sp[(-20)+18]
 10115  0146C0  50E1               	movf	fsr1l,w,c
 10116  0146C2  0FFE               	addlw	-2
 10117  0146C4  6ED9               	movwf	fsr2l,c
 10118  0146C6  50E2               	movf	fsr1h,w,c
 10119  0146C8  6EDA               	movwf	fsr2h,c
 10120  0146CA  0EFF               	movlw	255
 10121  0146CC  22DA               	addwfc	fsr2h,f,c
 10122  0146CE  06DE               	decf	postinc2,f,c
 10123  0146D0  0E00               	movlw	0
 10124  0146D2  5ADD               	subwfb	postdec2,f,c
 10125                           
 10126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10127                           ;stkvar	_w @ sp[(-20)+16]
 10128  0146D4  50E1               	movf	fsr1l,w,c
 10129  0146D6  0FFC               	addlw	-4
 10130  0146D8  6ED9               	movwf	fsr2l,c
 10131  0146DA  50E2               	movf	fsr1h,w,c
 10132  0146DC  6EDA               	movwf	fsr2h,c
 10133  0146DE  0EFF               	movlw	255
 10134  0146E0  22DA               	addwfc	fsr2h,f,c
 10135  0146E2  06DE               	decf	postinc2,f,c
 10136  0146E4  0E00               	movlw	0
 10137  0146E6  5ADD               	subwfb	postdec2,f,c
 10138                           
 10139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10140  0146E8  0E04               	movlw	4
 10141  0146EA  6E30               	movwf	(btemp+11)^0,c
 10142                           
 10143                           ;stkvar	_n @ sp[(-20)+4]
 10144  0146EC  50E1               	movf	fsr1l,w,c
 10145  0146EE  0FF0               	addlw	-16
 10146  0146F0  6ED9               	movwf	fsr2l,c
 10147  0146F2  50E2               	movf	fsr1h,w,c
 10148  0146F4  6EDA               	movwf	fsr2h,c
 10149  0146F6  0EFF               	movlw	255
 10150  0146F8  22DA               	addwfc	fsr2h,f,c
 10151  0146FA  2830               	incf	(btemp+11)^0,w,c
 10152  0146FC  52DE               	movf	postinc2,f,c
 10153  0146FE  D00F               	goto	u10210
 10154  014700                     u10215:
 10155  014700  52DE               	movf	postinc2,f,c
 10156  014702  52DE               	movf	postinc2,f,c
 10157  014704  52DE               	movf	postinc2,f,c
 10158  014706  52DE               	movf	postinc2,f,c
 10159  014708  52DE               	movf	postinc2,f,c
 10160  01470A  52DE               	movf	postinc2,f,c
 10161  01470C  90D8               	bcf	status,0,c
 10162  01470E  32DD               	rrcf	postdec2,f,c
 10163  014710  32DD               	rrcf	postdec2,f,c
 10164  014712  32DD               	rrcf	postdec2,f,c
 10165  014714  32DD               	rrcf	postdec2,f,c
 10166  014716  32DD               	rrcf	postdec2,f,c
 10167  014718  32DD               	rrcf	postdec2,f,c
 10168  01471A  32DD               	rrcf	postdec2,f,c
 10169  01471C  32DE               	rrcf	postinc2,f,c
 10170  01471E                     u10210:
 10171  01471E  2EE8               	decfsz	wreg,f,c
 10172  014720  D7EF               	goto	u10215
 10173  014722                     l10541:
 10174                           
 10175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10176                           ;stkvar	_i @ sp[(-20)+14]
 10177  014722  0EFB               	movlw	-5
 10178  014724  BEE3               	btfsc	plusw1,7,c
 10179  014726  D03A               	goto	u10260
 10180  014728  0EFB               	movlw	-5
 10181  01472A  50E3               	movf	plusw1,w,c
 10182  01472C  E108               	bnz	u10220
 10183  01472E  0EFA               	movlw	-6
 10184  014730  006F FF8C  F025    	movff	plusw1,btemp
 10185  014736  0E02               	movlw	2
 10186  014738  5E25               	subwf	btemp^0,f,c
 10187  01473A  A0D8               	btfss	status,0,c
 10188  01473C  D02F               	goto	u10260
 10189  01473E                     u10220:
 10190                           
 10191                           ;stkvar	_n @ sp[(-20)+4]
 10192  01473E  0EF0               	movlw	-16
 10193  014740  50E3               	movf	plusw1,w,c
 10194  014742  E115               	bnz	u10231
 10195  014744  0EF1               	movlw	-15
 10196  014746  50E3               	movf	plusw1,w,c
 10197  014748  E112               	bnz	u10231
 10198  01474A  0EF2               	movlw	-14
 10199  01474C  50E3               	movf	plusw1,w,c
 10200  01474E  E10F               	bnz	u10231
 10201  014750  0EF3               	movlw	-13
 10202  014752  50E3               	movf	plusw1,w,c
 10203  014754  E10C               	bnz	u10231
 10204  014756  0EF4               	movlw	-12
 10205  014758  50E3               	movf	plusw1,w,c
 10206  01475A  E109               	bnz	u10231
 10207  01475C  0EF5               	movlw	-11
 10208  01475E  50E3               	movf	plusw1,w,c
 10209  014760  E106               	bnz	u10231
 10210  014762  0EF6               	movlw	-10
 10211  014764  50E3               	movf	plusw1,w,c
 10212  014766  E103               	bnz	u10231
 10213  014768  0EF7               	movlw	-9
 10214  01476A  50E3               	movf	plusw1,w,c
 10215  01476C  A4D8               	btfss	status,2,c
 10216  01476E                     u10231:
 10217  01476E  D6EB               	goto	l10509
 10218                           
 10219                           ;stkvar	_p @ sp[(-20)+18]
 10220  014770  0EFF               	movlw	-1
 10221  014772  BEE3               	btfsc	plusw1,7,c
 10222  014774  D007               	goto	u10240
 10223  014776  0EFF               	movlw	-1
 10224  014778  50E3               	movf	plusw1,w,c
 10225  01477A  E103               	bnz	u10241
 10226  01477C  0EFE               	movlw	-2
 10227  01477E  04E3               	decf	plusw1,w,c
 10228  014780  B0D8               	btfsc	status,0,c
 10229  014782                     u10241:
 10230  014782  D6E1               	goto	l10509
 10231  014784                     u10240:
 10232                           
 10233                           ;stkvar	_w @ sp[(-20)+16]
 10234  014784  0EFD               	movlw	-3
 10235  014786  BEE3               	btfsc	plusw1,7,c
 10236  014788  D009               	goto	u10260
 10237  01478A  0EFD               	movlw	-3
 10238  01478C  50E3               	movf	plusw1,w,c
 10239  01478E  E104               	bnz	u10250
 10240  014790  0EFC               	movlw	-4
 10241  014792  04E3               	decf	plusw1,w,c
 10242  014794  A0D8               	btfss	status,0,c
 10243  014796  D002               	goto	u10260
 10244  014798                     u10250:
 10245  014798  B20E               	btfsc	_flags^0,1,c
 10246  01479A  D6D5               	goto	l10509
 10247  01479C                     u10260:
 10248                           
 10249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10250  01479C  A80E               	btfss	_flags^0,4,c
 10251  01479E  D036               	goto	l10557
 10252                           
 10253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10254                           ;stkvar	_i @ sp[(-20)+14]
 10255  0147A0  50E1               	movf	fsr1l,w,c
 10256  0147A2  0FFA               	addlw	-6
 10257  0147A4  6ED9               	movwf	fsr2l,c
 10258  0147A6  50E2               	movf	fsr1h,w,c
 10259  0147A8  6EDA               	movwf	fsr2h,c
 10260  0147AA  0EFF               	movlw	255
 10261  0147AC  22DA               	addwfc	fsr2h,f,c
 10262  0147AE  06DE               	decf	postinc2,f,c
 10263  0147B0  0E00               	movlw	0
 10264  0147B2  5ADD               	subwfb	postdec2,f,c
 10265                           
 10266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10267                           ;stkvar	_x @ sp[(-20)+-11]
 10268                           ;stkvar	_i @ sp[(-20)+14]
 10269  0147B4  0EFA               	movlw	-6
 10270  0147B6  006F FF8C  F02F    	movff	plusw1,btemp+10
 10271  0147BC  0EFB               	movlw	-5
 10272  0147BE  006F FF8C  F030    	movff	plusw1,btemp+11
 10273  0147C4  0EA5               	movlw	low _dbuf
 10274  0147C6  242F               	addwf	(btemp+10)^0,w,c
 10275  0147C8  6ED9               	movwf	fsr2l,c
 10276  0147CA  0E01               	movlw	high _dbuf
 10277  0147CC  2030               	addwfc	(btemp+11)^0,w,c
 10278  0147CE  6EDA               	movwf	fsr2h,c
 10279  0147D0  0EE1               	movlw	-31
 10280  0147D2  006F FF8F FFDF     	movff	plusw1,indf2
 10281                           
 10282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10283                           ;stkvar	_i @ sp[(-20)+14]
 10284  0147D8  50E1               	movf	fsr1l,w,c
 10285  0147DA  0FFA               	addlw	-6
 10286  0147DC  6ED9               	movwf	fsr2l,c
 10287  0147DE  50E2               	movf	fsr1h,w,c
 10288  0147E0  6EDA               	movwf	fsr2h,c
 10289  0147E2  0EFF               	movlw	255
 10290  0147E4  22DA               	addwfc	fsr2h,f,c
 10291  0147E6  06DE               	decf	postinc2,f,c
 10292  0147E8  0E00               	movlw	0
 10293  0147EA  5ADD               	subwfb	postdec2,f,c
 10294                           
 10295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10296                           ;stkvar	_i @ sp[(-20)+14]
 10297  0147EC  0EFA               	movlw	-6
 10298  0147EE  006F FF8C  F02F    	movff	plusw1,btemp+10
 10299  0147F4  0EFB               	movlw	-5
 10300  0147F6  006F FF8C  F030    	movff	plusw1,btemp+11
 10301  0147FC  0EA5               	movlw	low _dbuf
 10302  0147FE  242F               	addwf	(btemp+10)^0,w,c
 10303  014800  6ED9               	movwf	fsr2l,c
 10304  014802  0E01               	movlw	high _dbuf
 10305  014804  2030               	addwfc	(btemp+11)^0,w,c
 10306  014806  6EDA               	movwf	fsr2h,c
 10307  014808  0E30               	movlw	48
 10308  01480A  6EDF               	movwf	indf2,c
 10309  01480C                     l10557:
 10310                           
 10311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10312                           ;stkvar	_w @ sp[(-20)+16]
 10313  01480C  0EFC               	movlw	-4
 10314  01480E  006F FF8F FFE6     	movff	plusw1,postinc1
 10315  014814  006F FF8F FFE6     	movff	plusw1,postinc1
 10316                           
 10317                           ;stkvar	_i @ sp[(-22)+14]
 10318  01481A  0EA5               	movlw	low _dbuf
 10319  01481C  6E2F               	movwf	(btemp+10)^0,c
 10320  01481E  0E01               	movlw	high _dbuf
 10321  014820  6E30               	movwf	(btemp+11)^0,c
 10322  014822  0EF8               	movlw	-8
 10323  014824  50E3               	movf	plusw1,w,c
 10324  014826  262F               	addwf	(btemp+10)^0,f,c
 10325  014828  0EF9               	movlw	-7
 10326  01482A  50E3               	movf	plusw1,w,c
 10327  01482C  2230               	addwfc	(btemp+11)^0,f,c
 10328  01482E  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 10329  014834  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 10330                           
 10331                           ;stkvar	_fp @ sp[(-24)+-2]
 10332  01483A  0EE6               	movlw	-26
 10333  01483C  006F FF8F FFE6     	movff	plusw1,postinc1
 10334  014842  006F FF8F FFE6     	movff	plusw1,postinc1
 10335  014848  ECCB  F0B6         	call	_pad	;wreg free
 10336                           
 10337                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10338  01484C  0EE1               	movlw	225
 10339  01484E  26E1               	addwf	fsr1l,f,c
 10340  014850  0EFF               	movlw	255
 10341  014852  22E2               	addwfc	fsr1h,f,c
 10342  014854  0012               	return		;funcret
 10343  014856                     __end_of_xtoa:
 10344                           	opt callstack 0
 10345                           
 10346 ;; *************** function _toupper *****************
 10347 ;; Defined at:
 10348 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  c               2  [STACK] int 
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;		None
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  2  [STACK] int 
 10355 ;; Registers used:
 10356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/1
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10366 ;;Total ram usage:        0 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; Hardware stack levels required when called:   11
 10369 ;; This function calls:
 10370 ;;		_islower
 10371 ;; This function is called by:
 10372 ;;		_xtoa
 10373 ;; This function uses a reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text43
 10377  017D8A                     __ptext43:
 10378                           	opt callstack 0
 10379  017D8A                     _toupper:
 10380                           	opt callstack 0
 10381                           
 10382                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10383  017D8A  52E6               	movf	postinc1,f,c
 10384  017D8C  52E6               	movf	postinc1,f,c
 10385                           
 10386                           ;stkvar	_c @ sp[(-2)+-2]
 10387                           
 10388                           ;incstack = 0
 10389  017D8E  0EFC               	movlw	-4
 10390  017D90  50E3               	movf	plusw1,w,c
 10391  017D92  0F9F               	addlw	159
 10392  017D94  6E2F               	movwf	(btemp+10)^0,c
 10393  017D96  0EFD               	movlw	-3
 10394  017D98  006F FF8C  F030    	movff	plusw1,btemp+11
 10395  017D9E  0EFF               	movlw	255
 10396  017DA0  2230               	addwfc	(btemp+11)^0,f,c
 10397  017DA2  5030               	movf	(btemp+11)^0,w,c
 10398  017DA4  E106               	bnz	u5020
 10399  017DA6  0E1A               	movlw	26
 10400  017DA8  5C2F               	subwf	(btemp+10)^0,w,c
 10401  017DAA  B0D8               	btfsc	status,0,c
 10402  017DAC  D002               	goto	u5020
 10403  017DAE  0E01               	movlw	1
 10404  017DB0  D001               	goto	u5030
 10405  017DB2                     u5020:
 10406  017DB2  0E00               	movlw	0
 10407  017DB4                     u5030:
 10408  017DB4  6E2F               	movwf	(btemp+10)^0,c
 10409  017DB6  6A30               	clrf	(btemp+11)^0,c
 10410                           
 10411                           ;stkvar	_toupper$5651 @ sp[(-2)+0]
 10412  017DB8  0EFE               	movlw	-2
 10413  017DBA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10414  017DC0  0EFF               	movlw	-1
 10415  017DC2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10416                           
 10417                           ;stkvar	_toupper$5651 @ sp[(-2)+0]
 10418  017DC8  0EFE               	movlw	-2
 10419  017DCA  006F FF8C  F025    	movff	plusw1,btemp
 10420  017DD0  0EFF               	movlw	-1
 10421  017DD2  50E3               	movf	plusw1,w,c
 10422  017DD4  1025               	iorwf	btemp^0,w,c
 10423  017DD6  B4D8               	btfsc	status,2,c
 10424  017DD8  D00D               	goto	l6727
 10425                           
 10426                           ;stkvar	_c @ sp[(-2)+-2]
 10427  017DDA  0EFC               	movlw	-4
 10428  017DDC  006F FF8C  F025    	movff	plusw1,btemp
 10429  017DE2  0EFD               	movlw	-3
 10430  017DE4  006F FF8C  F026    	movff	plusw1,btemp+1
 10431  017DEA  0E5F               	movlw	95
 10432  017DEC  1625               	andwf	btemp^0,f,c
 10433  017DEE  0E00               	movlw	0
 10434  017DF0  1626               	andwf	(btemp+1)^0,f,c
 10435  017DF2  D008               	goto	l3074
 10436  017DF4                     l6727:
 10437                           
 10438                           ;stkvar	_c @ sp[(-2)+-2]
 10439  017DF4  0EFC               	movlw	-4
 10440  017DF6  006F FF8C  F025    	movff	plusw1,btemp
 10441  017DFC  0EFD               	movlw	-3
 10442  017DFE  006F FF8C  F026    	movff	plusw1,btemp+1
 10443  017E04                     l3074:
 10444                           
 10445                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10446  017E04  52E5               	movf	postdec1,f,c
 10447  017E06  52E5               	movf	postdec1,f,c
 10448  017E08  52E5               	movf	postdec1,f,c
 10449  017E0A  52E5               	movf	postdec1,f,c
 10450  017E0C  0012               	return		;funcret
 10451  017E0E                     __end_of_toupper:
 10452                           	opt callstack 0
 10453                           
 10454 ;; *************** function _islower *****************
 10455 ;; Defined at:
 10456 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  c               2  [STACK] int 
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;		None
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  2  [STACK] int 
 10463 ;; Registers used:
 10464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10474 ;;Total ram usage:        0 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; Hardware stack levels required when called:   10
 10477 ;; This function calls:
 10478 ;;		Nothing
 10479 ;; This function is called by:
 10480 ;;		_toupper
 10481 ;; This function uses a reentrant model
 10482 ;;
 10483                           
 10484                           	psect	text44
 10485  018950                     __ptext44:
 10486                           	opt callstack 0
 10487  018950                     _islower:
 10488                           	opt callstack 12
 10489                           
 10490                           ;stkvar	_c @ sp[(0)+-2]
 10491                           
 10492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10493                           ;incstack = 0
 10494  018950  0EFE               	movlw	-2
 10495  018952  50E3               	movf	plusw1,w,c
 10496  018954  0F9F               	addlw	159
 10497  018956  6E2F               	movwf	(btemp+10)^0,c
 10498  018958  0EFF               	movlw	-1
 10499  01895A  006F FF8C  F030    	movff	plusw1,btemp+11
 10500  018960  0EFF               	movlw	255
 10501  018962  2230               	addwfc	(btemp+11)^0,f,c
 10502  018964  5030               	movf	(btemp+11)^0,w,c
 10503  018966  E106               	bnz	u4710
 10504  018968  0E1A               	movlw	26
 10505  01896A  5C2F               	subwf	(btemp+10)^0,w,c
 10506  01896C  B0D8               	btfsc	status,0,c
 10507  01896E  D002               	goto	u4710
 10508  018970  0E01               	movlw	1
 10509  018972  D001               	goto	u4720
 10510  018974                     u4710:
 10511  018974  0E00               	movlw	0
 10512  018976                     u4720:
 10513  018976  6E25               	movwf	btemp^0,c
 10514  018978  6A26               	clrf	(btemp+1)^0,c
 10515                           
 10516                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10517  01897A  52E5               	movf	postdec1,f,c
 10518  01897C  52E5               	movf	postdec1,f,c
 10519  01897E  0012               	return		;funcret
 10520  018980                     __end_of_islower:
 10521                           	opt callstack 0
 10522                           
 10523 ;; *************** function _isalpha *****************
 10524 ;; Defined at:
 10525 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10526 ;; Parameters:    Size  Location     Type
 10527 ;;  c               2  [STACK] int 
 10528 ;; Auto vars:     Size  Location     Type
 10529 ;;		None
 10530 ;; Return value:  Size  Location     Type
 10531 ;;                  2  [STACK] int 
 10532 ;; Registers used:
 10533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10534 ;; Tracked objects:
 10535 ;;		On entry : 0/0
 10536 ;;		On exit  : 0/0
 10537 ;;		Unchanged: 0/0
 10538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10543 ;;Total ram usage:        0 bytes
 10544 ;; Hardware stack levels used:    1
 10545 ;; Hardware stack levels required when called:   10
 10546 ;; This function calls:
 10547 ;;		Nothing
 10548 ;; This function is called by:
 10549 ;;		_xtoa
 10550 ;; This function uses a reentrant model
 10551 ;;
 10552                           
 10553                           	psect	text45
 10554  01864A                     __ptext45:
 10555                           	opt callstack 0
 10556  01864A                     _isalpha:
 10557                           	opt callstack 13
 10558                           
 10559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10560                           ;incstack = 0
 10561  01864A  0E9F               	movlw	159
 10562  01864C  6E2F               	movwf	(btemp+10)^0,c
 10563  01864E  0EFF               	movlw	255
 10564  018650  6E30               	movwf	(btemp+11)^0,c
 10565                           
 10566                           ;stkvar	_c @ sp[(0)+-2]
 10567  018652  0EFE               	movlw	-2
 10568  018654  006F FF8C  F02D    	movff	plusw1,btemp+8
 10569  01865A  0EFF               	movlw	-1
 10570  01865C  006F FF8C  F02E    	movff	plusw1,btemp+9
 10571  018662  0E20               	movlw	32
 10572  018664  122D               	iorwf	(btemp+8)^0,f,c
 10573  018666  0E00               	movlw	0
 10574  018668  122E               	iorwf	(btemp+9)^0,f,c
 10575  01866A  502F               	movf	(btemp+10)^0,w,c
 10576  01866C  262D               	addwf	(btemp+8)^0,f,c
 10577  01866E  5030               	movf	(btemp+11)^0,w,c
 10578  018670  222E               	addwfc	(btemp+9)^0,f,c
 10579  018672  502E               	movf	(btemp+9)^0,w,c
 10580  018674  E106               	bnz	u5000
 10581  018676  0E1A               	movlw	26
 10582  018678  5C2D               	subwf	(btemp+8)^0,w,c
 10583  01867A  B0D8               	btfsc	status,0,c
 10584  01867C  D002               	goto	u5000
 10585  01867E  0E01               	movlw	1
 10586  018680  D001               	goto	u5010
 10587  018682                     u5000:
 10588  018682  0E00               	movlw	0
 10589  018684                     u5010:
 10590  018684  6E25               	movwf	btemp^0,c
 10591  018686  6A26               	clrf	(btemp+1)^0,c
 10592                           
 10593                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10594  018688  52E5               	movf	postdec1,f,c
 10595  01868A  52E5               	movf	postdec1,f,c
 10596  01868C  0012               	return		;funcret
 10597  01868E                     __end_of_isalpha:
 10598                           	opt callstack 0
 10599                           
 10600 ;; *************** function _strncmp *****************
 10601 ;; Defined at:
 10602 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  _l              2  [STACK] PTR const unsigned char 
 10605 ;;		 -> ct(3), 
 10606 ;;  _r              2  [STACK] PTR const unsigned char 
 10607 ;;		 -> STR_56(3), 
 10608 ;;  n               2  [STACK] unsigned int 
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;  r               2  [STACK] PTR const unsigned char 
 10611 ;;		 -> STR_56(3), 
 10612 ;;  l               2  [STACK] PTR const unsigned char 
 10613 ;;		 -> ct(3), 
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  2  [STACK] int 
 10616 ;; Registers used:
 10617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10627 ;;Total ram usage:        0 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:   10
 10630 ;; This function calls:
 10631 ;;		Nothing
 10632 ;; This function is called by:
 10633 ;;		_vfpfcnvrt
 10634 ;; This function uses a reentrant model
 10635 ;;
 10636                           
 10637                           	psect	text46
 10638  015FA4                     __ptext46:
 10639                           	opt callstack 0
 10640  015FA4                     _strncmp:
 10641                           	opt callstack 0
 10642                           
 10643                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10644  015FA4  52E6               	movf	postinc1,f,c
 10645  015FA6  52E6               	movf	postinc1,f,c
 10646  015FA8  52E6               	movf	postinc1,f,c
 10647  015FAA  52E6               	movf	postinc1,f,c
 10648                           
 10649                           ;stkvar	__l @ sp[(-4)+-2]
 10650                           
 10651                           ;incstack = 0
 10652  015FAC  0EFA               	movlw	-6
 10653  015FAE  006F FF8C  F02F    	movff	plusw1,btemp+10
 10654  015FB4  0EFB               	movlw	-5
 10655  015FB6  006F FF8C  F030    	movff	plusw1,btemp+11
 10656                           
 10657                           ;stkvar	_l @ sp[(-4)+2]
 10658  015FBC  0EFF               	movlw	-1
 10659  015FBE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10660  015FC4  0EFE               	movlw	-2
 10661  015FC6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10662                           
 10663                           ;stkvar	__r @ sp[(-4)+-4]
 10664  015FCC  0EF8               	movlw	-8
 10665  015FCE  006F FF8C  F02F    	movff	plusw1,btemp+10
 10666  015FD4  0EF9               	movlw	-7
 10667  015FD6  006F FF8C  F030    	movff	plusw1,btemp+11
 10668                           
 10669                           ;stkvar	_r @ sp[(-4)+0]
 10670  015FDC  0EFD               	movlw	-3
 10671  015FDE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10672  015FE4  0EFC               	movlw	-4
 10673  015FE6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10674                           
 10675                           ;stkvar	_n @ sp[(-4)+-6]
 10676  015FEC  0EF6               	movlw	-10
 10677  015FEE  006F FF8C  F025    	movff	plusw1,btemp
 10678  015FF4  0E01               	movlw	1
 10679  015FF6  5E25               	subwf	btemp^0,f,c
 10680  015FF8  0EF6               	movlw	-10
 10681  015FFA  0060  F097  FFE3   	movff	btemp,plusw1
 10682  016000  0EF7               	movlw	-9
 10683  016002  006F FF8C  F025    	movff	plusw1,btemp
 10684  016008  0E00               	movlw	0
 10685  01600A  5A25               	subwfb	btemp^0,f,c
 10686  01600C  0EF7               	movlw	-9
 10687  01600E  0060  F097  FFE3   	movff	btemp,plusw1
 10688  016014  0EF6               	movlw	-10
 10689  016016  28E3               	incf	plusw1,w,c
 10690  016018  E13F               	bnz	l7723
 10691  01601A  0EF7               	movlw	-9
 10692  01601C  28E3               	incf	plusw1,w,c
 10693  01601E  A4D8               	btfss	status,2,c
 10694  016020  D03B               	goto	l7723
 10695  016022  0E00               	movlw	0
 10696  016024  6E25               	movwf	btemp^0,c
 10697  016026  0E00               	movlw	0
 10698  016028  6E26               	movwf	(btemp+1)^0,c
 10699  01602A  D09B               	goto	l3046
 10700  01602C                     l7721:
 10701                           
 10702                           ;stkvar	_l @ sp[(-4)+2]
 10703  01602C  0EFE               	movlw	-2
 10704  01602E  50E3               	movf	plusw1,w,c
 10705  016030  0F01               	addlw	1
 10706  016032  6E25               	movwf	btemp^0,c
 10707  016034  0EFE               	movlw	-2
 10708  016036  0060  F097  FFE3   	movff	btemp,plusw1
 10709  01603C  6A25               	clrf	btemp^0,c
 10710  01603E  0EFF               	movlw	-1
 10711  016040  50E3               	movf	plusw1,w,c
 10712  016042  2025               	addwfc	btemp^0,w,c
 10713  016044  6E25               	movwf	btemp^0,c
 10714  016046  0EFF               	movlw	-1
 10715  016048  0060  F097  FFE3   	movff	btemp,plusw1
 10716                           
 10717                           ;stkvar	_r @ sp[(-4)+0]
 10718  01604E  0EFC               	movlw	-4
 10719  016050  50E3               	movf	plusw1,w,c
 10720  016052  0F01               	addlw	1
 10721  016054  6E25               	movwf	btemp^0,c
 10722  016056  0EFC               	movlw	-4
 10723  016058  0060  F097  FFE3   	movff	btemp,plusw1
 10724  01605E  6A25               	clrf	btemp^0,c
 10725  016060  0EFD               	movlw	-3
 10726  016062  50E3               	movf	plusw1,w,c
 10727  016064  2025               	addwfc	btemp^0,w,c
 10728  016066  6E25               	movwf	btemp^0,c
 10729  016068  0EFD               	movlw	-3
 10730  01606A  0060  F097  FFE3   	movff	btemp,plusw1
 10731                           
 10732                           ;stkvar	_n @ sp[(-4)+-6]
 10733  016070  0EF6               	movlw	-10
 10734  016072  006F FF8C  F025    	movff	plusw1,btemp
 10735  016078  0E01               	movlw	1
 10736  01607A  5E25               	subwf	btemp^0,f,c
 10737  01607C  0EF6               	movlw	-10
 10738  01607E  0060  F097  FFE3   	movff	btemp,plusw1
 10739  016084  0EF7               	movlw	-9
 10740  016086  006F FF8C  F025    	movff	plusw1,btemp
 10741  01608C  0E00               	movlw	0
 10742  01608E  5A25               	subwfb	btemp^0,f,c
 10743  016090  0EF7               	movlw	-9
 10744  016092  0060  F097  FFE3   	movff	btemp,plusw1
 10745  016098                     l7723:
 10746                           
 10747                           ;stkvar	_l @ sp[(-4)+2]
 10748  016098  0EFE               	movlw	-2
 10749  01609A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10750  0160A0  0EFF               	movlw	-1
 10751  0160A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10752  0160A8  50DF               	movf	indf2,w,c
 10753  0160AA  B4D8               	btfsc	status,2,c
 10754  0160AC  D03B               	goto	u6980
 10755                           
 10756                           ;stkvar	_r @ sp[(-4)+0]
 10757  0160AE  50E1               	movf	fsr1l,w,c
 10758  0160B0  0FFC               	addlw	-4
 10759  0160B2  6ED9               	movwf	fsr2l,c
 10760  0160B4  50E2               	movf	fsr1h,w,c
 10761  0160B6  6EDA               	movwf	fsr2h,c
 10762  0160B8  0EFF               	movlw	255
 10763  0160BA  22DA               	addwfc	fsr2h,f,c
 10764  0160BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 10765  0160C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 10766  0160C8                     	if	0	;tblptru may be non-zero
 10767  0160C8                     	endif
 10768  0160C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10769  0160C8  0E00               	movlw	low (__mediumconst shr (0+16))
 10770  0160CA  6EF8               	movwf	tblptru,c
 10771  0160CC                     	endif
 10772  0160CC  0008               	tblrd		*
 10773  0160CE  50F5               	movf	tablat,w,c
 10774  0160D0  0900               	iorlw	0
 10775  0160D2  B4D8               	btfsc	status,2,c
 10776  0160D4  D027               	goto	u6980
 10777                           
 10778                           ;stkvar	_n @ sp[(-4)+-6]
 10779  0160D6  0EF6               	movlw	-10
 10780  0160D8  006F FF8C  F025    	movff	plusw1,btemp
 10781  0160DE  0EF7               	movlw	-9
 10782  0160E0  50E3               	movf	plusw1,w,c
 10783  0160E2  1025               	iorwf	btemp^0,w,c
 10784  0160E4  B4D8               	btfsc	status,2,c
 10785  0160E6  D01E               	goto	u6980
 10786                           
 10787                           ;stkvar	_l @ sp[(-4)+2]
 10788  0160E8  0EFE               	movlw	-2
 10789  0160EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10790  0160F0  0EFF               	movlw	-1
 10791  0160F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10792  0160F8  50DF               	movf	indf2,w,c
 10793  0160FA  6E30               	movwf	(btemp+11)^0,c
 10794                           
 10795                           ;stkvar	_r @ sp[(-4)+0]
 10796  0160FC  50E1               	movf	fsr1l,w,c
 10797  0160FE  0FFC               	addlw	-4
 10798  016100  6ED9               	movwf	fsr2l,c
 10799  016102  50E2               	movf	fsr1h,w,c
 10800  016104  6EDA               	movwf	fsr2h,c
 10801  016106  0EFF               	movlw	255
 10802  016108  22DA               	addwfc	fsr2h,f,c
 10803  01610A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10804  016110  006F FF77 FFF7     	movff	postdec2,tblptrh
 10805  016116                     	if	0	;tblptru may be non-zero
 10806  016116                     	endif
 10807  016116                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10808  016116  0E00               	movlw	low (__mediumconst shr (0+16))
 10809  016118  6EF8               	movwf	tblptru,c
 10810  01611A                     	endif
 10811  01611A  0008               	tblrd		*
 10812  01611C  50F5               	movf	tablat,w,c
 10813  01611E  1830               	xorwf	(btemp+11)^0,w,c
 10814  016120  B4D8               	btfsc	status,2,c
 10815  016122  D784               	goto	l7721
 10816  016124                     u6980:
 10817                           
 10818                           ;stkvar	_l @ sp[(-4)+2]
 10819  016124  0EFE               	movlw	-2
 10820  016126  006F FF8F FFD9     	movff	plusw1,fsr2l
 10821  01612C  0EFF               	movlw	-1
 10822  01612E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10823  016134  50DF               	movf	indf2,w,c
 10824  016136  6E25               	movwf	btemp^0,c
 10825  016138  6A26               	clrf	(btemp+1)^0,c
 10826                           
 10827                           ;stkvar	_r @ sp[(-4)+0]
 10828  01613A  50E1               	movf	fsr1l,w,c
 10829  01613C  0FFC               	addlw	-4
 10830  01613E  6ED9               	movwf	fsr2l,c
 10831  016140  50E2               	movf	fsr1h,w,c
 10832  016142  6EDA               	movwf	fsr2h,c
 10833  016144  0EFF               	movlw	255
 10834  016146  22DA               	addwfc	fsr2h,f,c
 10835  016148  006F FF7B FFF6     	movff	postinc2,tblptrl
 10836  01614E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10837  016154                     	if	0	;tblptru may be non-zero
 10838  016154                     	endif
 10839  016154                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10840  016154  0E00               	movlw	low (__mediumconst shr (0+16))
 10841  016156  6EF8               	movwf	tblptru,c
 10842  016158                     	endif
 10843  016158  0008               	tblrd		*
 10844  01615A  50F5               	movf	tablat,w,c
 10845  01615C  5E25               	subwf	btemp^0,f,c
 10846  01615E  0E00               	movlw	0
 10847  016160  5A26               	subwfb	(btemp+1)^0,f,c
 10848  016162                     l3046:
 10849                           
 10850                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10851  016162  0EF6               	movlw	246
 10852  016164  26E1               	addwf	fsr1l,f,c
 10853  016166  0EFF               	movlw	255
 10854  016168  22E2               	addwfc	fsr1h,f,c
 10855  01616A  0012               	return		;funcret
 10856  01616C                     __end_of_strncmp:
 10857                           	opt callstack 0
 10858                           
 10859 ;; *************** function _stoa *****************
 10860 ;; Defined at:
 10861 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10864 ;;		 -> f(6), NULL(0), 
 10865 ;;  s               2  [STACK] PTR unsigned char 
 10866 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10867 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 10868 ;;		 -> STR_3(6), V(188), 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;  nuls            7  [STACK] unsigned char [7]
 10871 ;;  l               2  [STACK] int 
 10872 ;;  p               2  [STACK] int 
 10873 ;;  cp              2  [STACK] PTR unsigned char 
 10874 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10875 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 10876 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10877 ;;  w               2  [STACK] int 
 10878 ;;  i               2  [STACK] int 
 10879 ;; Return value:  Size  Location     Type
 10880 ;;                  2  [STACK] int 
 10881 ;; Registers used:
 10882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/0
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10892 ;;Total ram usage:        0 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; Hardware stack levels required when called:   13
 10895 ;; This function calls:
 10896 ;;		_fputc
 10897 ;;		_strlen
 10898 ;; This function is called by:
 10899 ;;		_vfpfcnvrt
 10900 ;; This function uses a reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text47
 10904  01519C                     __ptext47:
 10905                           	opt callstack 0
 10906  01519C                     _stoa:
 10907                           	opt callstack 0
 10908                           
 10909                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10910  01519C  0E11               	movlw	17
 10911  01519E  26E1               	addwf	fsr1l,f,c
 10912  0151A0  0E00               	movlw	0
 10913  0151A2  22E2               	addwfc	fsr1h,f,c
 10914                           
 10915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10916                           
 10917                           ;incstack = 0
 10918  0151A4  EE20  F0EB         	lfsr	2,stoa@F1166
 10919                           
 10920                           ;stkvar	_nuls @ sp[(-17)+0]
 10921  0151A8  0E07               	movlw	7
 10922  0151AA  6E25               	movwf	btemp^0,c
 10923  0151AC  0EEF               	movlw	-17
 10924  0151AE                     us1000999:
 10925  0151AE  006F FF7B FFE3     	movff	postinc2,plusw1
 10926  0151B4  28E8               	incf	wreg,w,c
 10927  0151B6  2E25               	decfsz	btemp^0,f,c
 10928  0151B8  D7FA               	bra	us1000999
 10929                           
 10930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10931                           ;stkvar	_s @ sp[(-17)+-4]
 10932  0151BA  0EEB               	movlw	-21
 10933  0151BC  006F FF8C  F02F    	movff	plusw1,btemp+10
 10934  0151C2  0EEC               	movlw	-20
 10935  0151C4  006F FF8C  F030    	movff	plusw1,btemp+11
 10936                           
 10937                           ;stkvar	_cp @ sp[(-17)+11]
 10938  0151CA  0EFB               	movlw	-5
 10939  0151CC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10940  0151D2  0EFA               	movlw	-6
 10941  0151D4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10942                           
 10943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10944                           ;stkvar	_cp @ sp[(-17)+11]
 10945  0151DA  0EFA               	movlw	-6
 10946  0151DC  006F FF8C  F025    	movff	plusw1,btemp
 10947  0151E2  0EFB               	movlw	-5
 10948  0151E4  50E3               	movf	plusw1,w,c
 10949  0151E6  1025               	iorwf	btemp^0,w,c
 10950  0151E8  A4D8               	btfss	status,2,c
 10951  0151EA  D00E               	goto	l10445
 10952                           
 10953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10954                           ;stkvar	_nuls @ sp[(-17)+0]
 10955  0151EC  0EEF               	movlw	239
 10956  0151EE  24E1               	addwf	fsr1l,w,c
 10957  0151F0  6E2F               	movwf	(btemp+10)^0,c
 10958  0151F2  0EFF               	movlw	255
 10959  0151F4  20E2               	addwfc	fsr1h,w,c
 10960  0151F6  6E30               	movwf	(btemp+11)^0,c
 10961                           
 10962                           ;stkvar	_cp @ sp[(-17)+11]
 10963  0151F8  0EFB               	movlw	-5
 10964  0151FA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10965  015200  0EFA               	movlw	-6
 10966  015202  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10967  015208                     l10445:
 10968                           
 10969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10970                           ;stkvar	_cp @ sp[(-17)+11]
 10971  015208  0EFA               	movlw	-6
 10972  01520A  006F FF8F FFE6     	movff	plusw1,postinc1
 10973  015210  006F FF8F FFE6     	movff	plusw1,postinc1
 10974  015216  ECC3  F0BC         	call	_strlen	;wreg free
 10975                           
 10976                           ;stkvar	_l @ sp[(-17)+7]
 10977  01521A  0EF6               	movlw	-10
 10978  01521C  0060  F097  FFE3   	movff	btemp,plusw1
 10979  015222  0EF7               	movlw	-9
 10980  015224  0060  F09B  FFE3   	movff	btemp+1,plusw1
 10981                           
 10982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10983                           ;stkvar	_p @ sp[(-17)+9]
 10984  01522A  0EF8               	movlw	-8
 10985  01522C  0060  F033  FFE3   	movff	_prec,plusw1
 10986  015232  0EF9               	movlw	-7
 10987  015234  0060  F037  FFE3   	movff	_prec+1,plusw1
 10988                           
 10989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10990                           ;stkvar	_p @ sp[(-17)+9]
 10991  01523A  0EF9               	movlw	-7
 10992  01523C  BEE3               	btfsc	plusw1,7,c
 10993  01523E  D023               	goto	l2120
 10994                           
 10995                           ;stkvar	_l @ sp[(-17)+7]
 10996                           ;stkvar	_p @ sp[(-17)+9]
 10997  015240  50E1               	movf	fsr1l,w,c
 10998  015242  0FF8               	addlw	-8
 10999  015244  6ED9               	movwf	fsr2l,c
 11000  015246  50E2               	movf	fsr1h,w,c
 11001  015248  6EDA               	movwf	fsr2h,c
 11002  01524A  0EFF               	movlw	255
 11003  01524C  22DA               	addwfc	fsr2h,f,c
 11004  01524E  0EF6               	movlw	-10
 11005  015250  50E3               	movf	plusw1,w,c
 11006  015252  5CDE               	subwf	postinc2,w,c
 11007  015254  50DE               	movf	postinc2,w,c
 11008  015256  0A80               	xorlw	128
 11009  015258  6E25               	movwf	btemp^0,c
 11010  01525A  0EF7               	movlw	-9
 11011  01525C  50E3               	movf	plusw1,w,c
 11012  01525E  0A80               	xorlw	128
 11013  015260  5825               	subwfb	btemp^0,w,c
 11014  015262  B0D8               	btfsc	status,0,c
 11015  015264  D010               	goto	l2120
 11016                           
 11017                           ;stkvar	_p @ sp[(-17)+9]
 11018                           ;stkvar	_l @ sp[(-17)+7]
 11019  015266  0EF8               	movlw	-8
 11020  015268  006F FF8C  F025    	movff	plusw1,btemp
 11021  01526E  0EF6               	movlw	-10
 11022  015270  0060  F097  FFE3   	movff	btemp,plusw1
 11023  015276  0EF9               	movlw	-7
 11024  015278  006F FF8C  F025    	movff	plusw1,btemp
 11025  01527E  0EF7               	movlw	-9
 11026  015280  0060  F097  FFE3   	movff	btemp,plusw1
 11027  015286                     l2120:
 11028                           
 11029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11030                           ;stkvar	_l @ sp[(-17)+7]
 11031                           ;stkvar	_p @ sp[(-17)+9]
 11032  015286  0EF6               	movlw	-10
 11033  015288  006F FF8C  F025    	movff	plusw1,btemp
 11034  01528E  0EF8               	movlw	-8
 11035  015290  0060  F097  FFE3   	movff	btemp,plusw1
 11036  015296  0EF7               	movlw	-9
 11037  015298  006F FF8C  F025    	movff	plusw1,btemp
 11038  01529E  0EF9               	movlw	-7
 11039  0152A0  0060  F097  FFE3   	movff	btemp,plusw1
 11040                           
 11041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11042                           ;stkvar	_w @ sp[(-17)+13]
 11043  0152A6  0EFC               	movlw	-4
 11044  0152A8  0060  F02B  FFE3   	movff	_width,plusw1
 11045  0152AE  0EFD               	movlw	-3
 11046  0152B0  0060  F02F  FFE3   	movff	_width+1,plusw1
 11047                           
 11048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11049  0152B6  A00E               	btfss	_flags^0,0,c
 11050  0152B8  D01F               	goto	l10465
 11051  0152BA  D031               	goto	u10050
 11052  0152BC                     l10461:
 11053                           
 11054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11055                           ;stkvar	_fp @ sp[(-17)+-2]
 11056  0152BC  0EED               	movlw	-19
 11057  0152BE  006F FF8F FFE6     	movff	plusw1,postinc1
 11058  0152C4  006F FF8F FFE6     	movff	plusw1,postinc1
 11059  0152CA  0E20               	movlw	32
 11060  0152CC  6EE6               	movwf	postinc1,c
 11061  0152CE  0E00               	movlw	0
 11062  0152D0  6EE6               	movwf	postinc1,c
 11063  0152D2  ECAD  F0B5         	call	_fputc	;wreg free
 11064                           
 11065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11066                           ;stkvar	_l @ sp[(-17)+7]
 11067  0152D6  0EF6               	movlw	-10
 11068  0152D8  50E3               	movf	plusw1,w,c
 11069  0152DA  0F01               	addlw	1
 11070  0152DC  6E25               	movwf	btemp^0,c
 11071  0152DE  0EF6               	movlw	-10
 11072  0152E0  0060  F097  FFE3   	movff	btemp,plusw1
 11073  0152E6  6A25               	clrf	btemp^0,c
 11074  0152E8  0EF7               	movlw	-9
 11075  0152EA  50E3               	movf	plusw1,w,c
 11076  0152EC  2025               	addwfc	btemp^0,w,c
 11077  0152EE  6E25               	movwf	btemp^0,c
 11078  0152F0  0EF7               	movlw	-9
 11079  0152F2  0060  F097  FFE3   	movff	btemp,plusw1
 11080  0152F8                     l10465:
 11081                           
 11082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11083                           ;stkvar	_w @ sp[(-17)+13]
 11084                           ;stkvar	_l @ sp[(-17)+7]
 11085  0152F8  50E1               	movf	fsr1l,w,c
 11086  0152FA  0FF6               	addlw	-10
 11087  0152FC  6ED9               	movwf	fsr2l,c
 11088  0152FE  50E2               	movf	fsr1h,w,c
 11089  015300  6EDA               	movwf	fsr2h,c
 11090  015302  0EFF               	movlw	255
 11091  015304  22DA               	addwfc	fsr2h,f,c
 11092  015306  0EFC               	movlw	-4
 11093  015308  50E3               	movf	plusw1,w,c
 11094  01530A  5CDE               	subwf	postinc2,w,c
 11095  01530C  50DE               	movf	postinc2,w,c
 11096  01530E  0A80               	xorlw	128
 11097  015310  6E25               	movwf	btemp^0,c
 11098  015312  0EFD               	movlw	-3
 11099  015314  50E3               	movf	plusw1,w,c
 11100  015316  0A80               	xorlw	128
 11101  015318  5825               	subwfb	btemp^0,w,c
 11102  01531A  A0D8               	btfss	status,0,c
 11103  01531C  D7CF               	goto	l10461
 11104  01531E                     u10050:
 11105                           
 11106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11107                           ;stkvar	_i @ sp[(-17)+15]
 11108  01531E  0EFE               	movlw	-2
 11109  015320  6AE3               	clrf	plusw1,c
 11110  015322  0EFF               	movlw	-1
 11111  015324  6AE3               	clrf	plusw1,c
 11112                           
 11113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11114  015326  D045               	goto	l10475
 11115  015328                     l10469:
 11116                           
 11117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11118                           ;stkvar	_fp @ sp[(-17)+-2]
 11119  015328  0EED               	movlw	-19
 11120  01532A  006F FF8F FFE6     	movff	plusw1,postinc1
 11121  015330  006F FF8F FFE6     	movff	plusw1,postinc1
 11122                           
 11123                           ;stkvar	_cp @ sp[(-19)+11]
 11124  015336  0EF8               	movlw	-8
 11125  015338  006F FF8F FFF6     	movff	plusw1,tblptrl
 11126  01533E  0EF9               	movlw	-7
 11127  015340  006F FF8F FFF7     	movff	plusw1,tblptrh
 11128  015346  0E00               	movlw	low (__mediumconst shr (0+16))
 11129  015348  6EF8               	movwf	tblptru,c
 11130  01534A  0E1F               	movlw	(high __ramtop+-1)
 11131  01534C  64F7               	cpfsgt	tblptrh,c
 11132  01534E  D003               	bra	u10067
 11133  015350  0008               	tblrd		*
 11134  015352  50F5               	movf	tablat,w,c
 11135  015354  D007               	bra	u10060
 11136  015356                     u10067:
 11137  015356  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11138  01535C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11139  015362  50EF               	movf	indf0,w,c
 11140  015364                     u10060:
 11141  015364  6EE6               	movwf	postinc1,c
 11142  015366  0E00               	movlw	0
 11143  015368  6EE6               	movwf	postinc1,c
 11144  01536A  ECAD  F0B5         	call	_fputc	;wreg free
 11145                           
 11146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11147                           ;stkvar	_cp @ sp[(-17)+11]
 11148  01536E  0EFA               	movlw	-6
 11149  015370  50E3               	movf	plusw1,w,c
 11150  015372  0F01               	addlw	1
 11151  015374  6E25               	movwf	btemp^0,c
 11152  015376  0EFA               	movlw	-6
 11153  015378  0060  F097  FFE3   	movff	btemp,plusw1
 11154  01537E  6A25               	clrf	btemp^0,c
 11155  015380  0EFB               	movlw	-5
 11156  015382  50E3               	movf	plusw1,w,c
 11157  015384  2025               	addwfc	btemp^0,w,c
 11158  015386  6E25               	movwf	btemp^0,c
 11159  015388  0EFB               	movlw	-5
 11160  01538A  0060  F097  FFE3   	movff	btemp,plusw1
 11161                           
 11162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11163                           ;stkvar	_i @ sp[(-17)+15]
 11164  015390  0EFE               	movlw	-2
 11165  015392  50E3               	movf	plusw1,w,c
 11166  015394  0F01               	addlw	1
 11167  015396  6E25               	movwf	btemp^0,c
 11168  015398  0EFE               	movlw	-2
 11169  01539A  0060  F097  FFE3   	movff	btemp,plusw1
 11170  0153A0  6A25               	clrf	btemp^0,c
 11171  0153A2  0EFF               	movlw	-1
 11172  0153A4  50E3               	movf	plusw1,w,c
 11173  0153A6  2025               	addwfc	btemp^0,w,c
 11174  0153A8  6E25               	movwf	btemp^0,c
 11175  0153AA  0EFF               	movlw	-1
 11176  0153AC  0060  F097  FFE3   	movff	btemp,plusw1
 11177  0153B2                     l10475:
 11178                           
 11179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11180                           ;stkvar	_p @ sp[(-17)+9]
 11181                           ;stkvar	_i @ sp[(-17)+15]
 11182  0153B2  50E1               	movf	fsr1l,w,c
 11183  0153B4  0FFE               	addlw	-2
 11184  0153B6  6ED9               	movwf	fsr2l,c
 11185  0153B8  50E2               	movf	fsr1h,w,c
 11186  0153BA  6EDA               	movwf	fsr2h,c
 11187  0153BC  0EFF               	movlw	255
 11188  0153BE  22DA               	addwfc	fsr2h,f,c
 11189  0153C0  0EF8               	movlw	-8
 11190  0153C2  50E3               	movf	plusw1,w,c
 11191  0153C4  5CDE               	subwf	postinc2,w,c
 11192  0153C6  50DE               	movf	postinc2,w,c
 11193  0153C8  0A80               	xorlw	128
 11194  0153CA  6E25               	movwf	btemp^0,c
 11195  0153CC  0EF9               	movlw	-7
 11196  0153CE  50E3               	movf	plusw1,w,c
 11197  0153D0  0A80               	xorlw	128
 11198  0153D2  5825               	subwfb	btemp^0,w,c
 11199  0153D4  A0D8               	btfss	status,0,c
 11200  0153D6  D7A8               	goto	l10469
 11201                           
 11202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11203  0153D8  B00E               	btfsc	_flags^0,0,c
 11204  0153DA  D01F               	goto	l10483
 11205  0153DC  D031               	goto	u10090
 11206  0153DE                     l10479:
 11207                           
 11208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11209                           ;stkvar	_fp @ sp[(-17)+-2]
 11210  0153DE  0EED               	movlw	-19
 11211  0153E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11212  0153E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11213  0153EC  0E20               	movlw	32
 11214  0153EE  6EE6               	movwf	postinc1,c
 11215  0153F0  0E00               	movlw	0
 11216  0153F2  6EE6               	movwf	postinc1,c
 11217  0153F4  ECAD  F0B5         	call	_fputc	;wreg free
 11218                           
 11219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11220                           ;stkvar	_l @ sp[(-17)+7]
 11221  0153F8  0EF6               	movlw	-10
 11222  0153FA  50E3               	movf	plusw1,w,c
 11223  0153FC  0F01               	addlw	1
 11224  0153FE  6E25               	movwf	btemp^0,c
 11225  015400  0EF6               	movlw	-10
 11226  015402  0060  F097  FFE3   	movff	btemp,plusw1
 11227  015408  6A25               	clrf	btemp^0,c
 11228  01540A  0EF7               	movlw	-9
 11229  01540C  50E3               	movf	plusw1,w,c
 11230  01540E  2025               	addwfc	btemp^0,w,c
 11231  015410  6E25               	movwf	btemp^0,c
 11232  015412  0EF7               	movlw	-9
 11233  015414  0060  F097  FFE3   	movff	btemp,plusw1
 11234  01541A                     l10483:
 11235                           
 11236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11237                           ;stkvar	_w @ sp[(-17)+13]
 11238                           ;stkvar	_l @ sp[(-17)+7]
 11239  01541A  50E1               	movf	fsr1l,w,c
 11240  01541C  0FF6               	addlw	-10
 11241  01541E  6ED9               	movwf	fsr2l,c
 11242  015420  50E2               	movf	fsr1h,w,c
 11243  015422  6EDA               	movwf	fsr2h,c
 11244  015424  0EFF               	movlw	255
 11245  015426  22DA               	addwfc	fsr2h,f,c
 11246  015428  0EFC               	movlw	-4
 11247  01542A  50E3               	movf	plusw1,w,c
 11248  01542C  5CDE               	subwf	postinc2,w,c
 11249  01542E  50DE               	movf	postinc2,w,c
 11250  015430  0A80               	xorlw	128
 11251  015432  6E25               	movwf	btemp^0,c
 11252  015434  0EFD               	movlw	-3
 11253  015436  50E3               	movf	plusw1,w,c
 11254  015438  0A80               	xorlw	128
 11255  01543A  5825               	subwfb	btemp^0,w,c
 11256  01543C  A0D8               	btfss	status,0,c
 11257  01543E  D7CF               	goto	l10479
 11258  015440                     u10090:
 11259                           
 11260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11261                           ;stkvar	_l @ sp[(-17)+7]
 11262  015440  0EF6               	movlw	-10
 11263  015442  006F FF8C  F025    	movff	plusw1,btemp
 11264  015448  0EF7               	movlw	-9
 11265  01544A  006F FF8C  F026    	movff	plusw1,btemp+1
 11266                           
 11267                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11268  015450  0EEB               	movlw	235
 11269  015452  26E1               	addwf	fsr1l,f,c
 11270  015454  0EFF               	movlw	255
 11271  015456  22E2               	addwfc	fsr1h,f,c
 11272  015458  0012               	return		;funcret
 11273  01545A                     __end_of_stoa:
 11274                           	opt callstack 0
 11275                           
 11276 ;; *************** function _efgtoa *****************
 11277 ;; Defined at:
 11278 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11279 ;; Parameters:    Size  Location     Type
 11280 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11281 ;;		 -> f(6), NULL(0), 
 11282 ;;  f               4  [STACK] PTR struct _IO_FILE
 11283 ;;  c               1  [STACK] unsigned char 
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;  u               4  [STACK] unsigned char 
 11286 ;;  g               4  [STACK] unsigned char 
 11287 ;;  l               4  [STACK] unsigned char 
 11288 ;;  h               4  [STACK] unsigned char 
 11289 ;;  ou              4  [STACK] unsigned char 
 11290 ;;  n               2  [STACK] int 
 11291 ;;  e               2  [STACK] int 
 11292 ;;  i               2  [STACK] int 
 11293 ;;  w               2  [STACK] int 
 11294 ;;  p               2  [STACK] int 
 11295 ;;  sign            2  [STACK] int 
 11296 ;;  d               2  [STACK] int 
 11297 ;;  ne              2  [STACK] int 
 11298 ;;  m               2  [STACK] int 
 11299 ;;  pp              2  [STACK] int 
 11300 ;;  t               2  [STACK] int 
 11301 ;;  mode            1  [STACK] unsigned char 
 11302 ;;  nmode           1  [STACK] unsigned char 
 11303 ;; Return value:  Size  Location     Type
 11304 ;;                  2  [STACK] int 
 11305 ;; Registers used:
 11306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11307 ;; Tracked objects:
 11308 ;;		On entry : 0/0
 11309 ;;		On exit  : 0/0
 11310 ;;		Unchanged: 0/0
 11311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11316 ;;Total ram usage:        0 bytes
 11317 ;; Hardware stack levels used:    1
 11318 ;; Hardware stack levels required when called:   15
 11319 ;; This function calls:
 11320 ;;		___awdiv
 11321 ;;		___awmod
 11322 ;;		___fladd
 11323 ;;		___fldiv
 11324 ;;		___fleq
 11325 ;;		___flge
 11326 ;;		___flmul
 11327 ;;		___flneg
 11328 ;;		___flsub
 11329 ;;		___fltol
 11330 ;;		___fpclassifyf
 11331 ;;		_floorf
 11332 ;;		_isupper
 11333 ;;		_pad
 11334 ;;		_strcpy
 11335 ;;		_tolower
 11336 ;; This function is called by:
 11337 ;;		_vfpfcnvrt
 11338 ;; This function uses a reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text48
 11342  010000                     __ptext48:
 11343                           	opt callstack 0
 11344  010000                     _efgtoa:
 11345                           	opt callstack 0
 11346                           
 11347                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11348  010000  0E38               	movlw	56
 11349  010002  26E1               	addwf	fsr1l,f,c
 11350  010004  0E00               	movlw	0
 11351  010006  22E2               	addwfc	fsr1h,f,c
 11352                           
 11353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11354                           ;stkvar	_sign @ sp[(-56)+42]
 11355                           
 11356                           ;incstack = 0
 11357  010008  0EF2               	movlw	-14
 11358  01000A  6AE3               	clrf	plusw1,c
 11359  01000C  0EF3               	movlw	-13
 11360  01000E  6AE3               	clrf	plusw1,c
 11361                           
 11362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11363                           ;stkvar	_f @ sp[(-56)+-6]
 11364  010010  0EC2               	movlw	-62
 11365  010012  006F FF8C  F02D    	movff	plusw1,btemp+8
 11366  010018  0EC3               	movlw	-61
 11367  01001A  006F FF8C  F02E    	movff	plusw1,btemp+9
 11368  010020  0EC4               	movlw	-60
 11369  010022  006F FF8C  F02F    	movff	plusw1,btemp+10
 11370  010028  0EC5               	movlw	-59
 11371  01002A  006F FF8C  F030    	movff	plusw1,btemp+11
 11372                           
 11373                           ;stkvar	_g @ sp[(-56)+16]
 11374  010030  0ED8               	movlw	-40
 11375  010032  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11376  010038  0ED9               	movlw	-39
 11377  01003A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11378  010040  0EDA               	movlw	-38
 11379  010042  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11380  010048  0EDB               	movlw	-37
 11381  01004A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11382                           
 11383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11384                           ;stkvar	_g @ sp[(-56)+16]
 11385  010050  0EDB               	movlw	-37
 11386  010052  AEE3               	btfss	plusw1,7,c
 11387  010054  D02B               	goto	l10143
 11388                           
 11389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11390  010056  0E01               	movlw	1
 11391  010058  6E2F               	movwf	(btemp+10)^0,c
 11392  01005A  0E00               	movlw	0
 11393  01005C  6E30               	movwf	(btemp+11)^0,c
 11394                           
 11395                           ;stkvar	_sign @ sp[(-56)+42]
 11396  01005E  0EF2               	movlw	-14
 11397  010060  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11398  010066  0EF3               	movlw	-13
 11399  010068  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11400                           
 11401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11402                           ;stkvar	_g @ sp[(-56)+16]
 11403  01006E  0ED8               	movlw	-40
 11404  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11405  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11406  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11407  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11408  010088  EC75  F0C2         	call	___flneg	;wreg free
 11409                           
 11410                           ;stkvar	_g @ sp[(-56)+16]
 11411  01008C  0ED8               	movlw	-40
 11412  01008E  0060  F097  FFE3   	movff	btemp,plusw1
 11413  010094  0ED9               	movlw	-39
 11414  010096  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11415  01009C  0EDA               	movlw	-38
 11416  01009E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11417  0100A4  0EDB               	movlw	-37
 11418  0100A6  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11419  0100AC                     l10143:
 11420                           
 11421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11422                           ;stkvar	_n @ sp[(-56)+32]
 11423  0100AC  0EE8               	movlw	-24
 11424  0100AE  6AE3               	clrf	plusw1,c
 11425  0100B0  0EE9               	movlw	-23
 11426  0100B2  6AE3               	clrf	plusw1,c
 11427                           
 11428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11429                           ;stkvar	_w @ sp[(-56)+38]
 11430  0100B4  0EEE               	movlw	-18
 11431  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 11432  0100BC  0EEF               	movlw	-17
 11433  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 11434                           
 11435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11436                           ;stkvar	_sign @ sp[(-56)+42]
 11437  0100C4  0EF2               	movlw	-14
 11438  0100C6  006F FF8C  F025    	movff	plusw1,btemp
 11439  0100CC  0EF3               	movlw	-13
 11440  0100CE  50E3               	movf	plusw1,w,c
 11441  0100D0  1025               	iorwf	btemp^0,w,c
 11442  0100D2  A4D8               	btfss	status,2,c
 11443  0100D4  D002               	goto	u9500
 11444  0100D6  A40E               	btfss	_flags^0,2,c
 11445  0100D8  D036               	goto	l10163
 11446  0100DA                     u9500:
 11447                           
 11448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11449                           ;stkvar	_sign @ sp[(-56)+42]
 11450  0100DA  0EF2               	movlw	-14
 11451  0100DC  006F FF8C  F025    	movff	plusw1,btemp
 11452  0100E2  0EF3               	movlw	-13
 11453  0100E4  50E3               	movf	plusw1,w,c
 11454  0100E6  1025               	iorwf	btemp^0,w,c
 11455  0100E8  A4D8               	btfss	status,2,c
 11456  0100EA  D002               	goto	l10155
 11457  0100EC  0E2B               	movlw	43
 11458  0100EE  D001               	goto	L9
 11459  0100F0                     l10155:
 11460  0100F0  0E2D               	movlw	45
 11461  0100F2                     L9:
 11462  0100F2  6E2F               	movwf	(btemp+10)^0,c
 11463  0100F4  0E00               	movlw	0
 11464  0100F6  6E30               	movwf	(btemp+11)^0,c
 11465                           
 11466                           ;stkvar	_efgtoa$4959 @ sp[(-56)+10]
 11467  0100F8  0ED2               	movlw	-46
 11468  0100FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11469  010100  0ED3               	movlw	-45
 11470  010102  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11471                           
 11472                           ;stkvar	_efgtoa$4959 @ sp[(-56)+10]
 11473  010108  0ED2               	movlw	-46
 11474  01010A  006F FF8C  F1A5    	movff	plusw1,_dbuf
 11475                           
 11476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11477                           ;stkvar	_n @ sp[(-56)+32]
 11478  010110  0EE8               	movlw	-24
 11479  010112  50E3               	movf	plusw1,w,c
 11480  010114  0F01               	addlw	1
 11481  010116  6E25               	movwf	btemp^0,c
 11482  010118  0EE8               	movlw	-24
 11483  01011A  0060  F097  FFE3   	movff	btemp,plusw1
 11484  010120  6A25               	clrf	btemp^0,c
 11485  010122  0EE9               	movlw	-23
 11486  010124  50E3               	movf	plusw1,w,c
 11487  010126  2025               	addwfc	btemp^0,w,c
 11488  010128  6E25               	movwf	btemp^0,c
 11489  01012A  0EE9               	movlw	-23
 11490  01012C  0060  F097  FFE3   	movff	btemp,plusw1
 11491                           
 11492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11493                           ;stkvar	_w @ sp[(-56)+38]
 11494  010132  50E1               	movf	fsr1l,w,c
 11495  010134  0FEE               	addlw	-18
 11496  010136  6ED9               	movwf	fsr2l,c
 11497  010138  50E2               	movf	fsr1h,w,c
 11498  01013A  6EDA               	movwf	fsr2h,c
 11499  01013C  0EFF               	movlw	255
 11500  01013E  22DA               	addwfc	fsr2h,f,c
 11501  010140  06DE               	decf	postinc2,f,c
 11502  010142  0E00               	movlw	0
 11503  010144  5ADD               	subwfb	postdec2,f,c
 11504  010146                     l10163:
 11505                           
 11506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11507                           ;stkvar	_g @ sp[(-56)+16]
 11508  010146  0ED8               	movlw	-40
 11509  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11510  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11511  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11512  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11513  010160  EC96  F0B1         	call	___fpclassifyf	;wreg free
 11514  010164  0425               	decf	btemp^0,w,c
 11515  010166  1026               	iorwf	(btemp+1)^0,w,c
 11516  010168  A4D8               	btfss	status,2,c
 11517  01016A  D076               	goto	l10181
 11518  01016C  0EBF               	movlw	191
 11519  01016E  6E2F               	movwf	(btemp+10)^0,c
 11520  010170  0EFF               	movlw	255
 11521  010172  6E30               	movwf	(btemp+11)^0,c
 11522                           
 11523                           ;stkvar	_c @ sp[(-56)+-7]
 11524  010174  0EC1               	movlw	-63
 11525  010176  50E3               	movf	plusw1,w,c
 11526  010178  6E2D               	movwf	(btemp+8)^0,c
 11527  01017A  6A2E               	clrf	(btemp+9)^0,c
 11528  01017C  502F               	movf	(btemp+10)^0,w,c
 11529  01017E  262D               	addwf	(btemp+8)^0,f,c
 11530  010180  5030               	movf	(btemp+11)^0,w,c
 11531  010182  222E               	addwfc	(btemp+9)^0,f,c
 11532  010184  502E               	movf	(btemp+9)^0,w,c
 11533  010186  E106               	bnz	u9530
 11534  010188  0E1A               	movlw	26
 11535  01018A  5C2D               	subwf	(btemp+8)^0,w,c
 11536  01018C  B0D8               	btfsc	status,0,c
 11537  01018E  D002               	goto	u9530
 11538  010190  0E01               	movlw	1
 11539  010192  D001               	goto	u9540
 11540  010194                     u9530:
 11541  010194  0E00               	movlw	0
 11542  010196                     u9540:
 11543  010196  6E2F               	movwf	(btemp+10)^0,c
 11544  010198  6A30               	clrf	(btemp+11)^0,c
 11545                           
 11546                           ;stkvar	_efgtoa$4960 @ sp[(-56)+8]
 11547  01019A  0ED0               	movlw	-48
 11548  01019C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11549  0101A2  0ED1               	movlw	-47
 11550  0101A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11551                           
 11552                           ;stkvar	_efgtoa$4960 @ sp[(-56)+8]
 11553  0101AA  0ED0               	movlw	-48
 11554  0101AC  006F FF8C  F025    	movff	plusw1,btemp
 11555  0101B2  0ED1               	movlw	-47
 11556  0101B4  50E3               	movf	plusw1,w,c
 11557  0101B6  1025               	iorwf	btemp^0,w,c
 11558  0101B8  B4D8               	btfsc	status,2,c
 11559  0101BA  D017               	goto	l10173
 11560                           
 11561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11562  0101BC  0EE5               	movlw	low STR_46
 11563  0101BE  6EE6               	movwf	postinc1,c
 11564  0101C0  0EFF               	movlw	high STR_46
 11565  0101C2  6EE6               	movwf	postinc1,c
 11566                           
 11567                           ;stkvar	_n @ sp[(-58)+32]
 11568  0101C4  0EA5               	movlw	low _dbuf
 11569  0101C6  6E2F               	movwf	(btemp+10)^0,c
 11570  0101C8  0E01               	movlw	high _dbuf
 11571  0101CA  6E30               	movwf	(btemp+11)^0,c
 11572  0101CC  0EE6               	movlw	-26
 11573  0101CE  50E3               	movf	plusw1,w,c
 11574  0101D0  262F               	addwf	(btemp+10)^0,f,c
 11575  0101D2  0EE7               	movlw	-25
 11576  0101D4  50E3               	movf	plusw1,w,c
 11577  0101D6  2230               	addwfc	(btemp+11)^0,f,c
 11578  0101D8  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11579  0101DE  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11580  0101E4  ECD0  F0B9         	call	_strcpy	;wreg free
 11581                           
 11582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11583  0101E8  D016               	goto	l10175
 11584  0101EA                     l10173:
 11585                           
 11586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11587  0101EA  0EED               	movlw	low STR_47
 11588  0101EC  6EE6               	movwf	postinc1,c
 11589  0101EE  0EFF               	movlw	high STR_47
 11590  0101F0  6EE6               	movwf	postinc1,c
 11591                           
 11592                           ;stkvar	_n @ sp[(-58)+32]
 11593  0101F2  0EA5               	movlw	low _dbuf
 11594  0101F4  6E2F               	movwf	(btemp+10)^0,c
 11595  0101F6  0E01               	movlw	high _dbuf
 11596  0101F8  6E30               	movwf	(btemp+11)^0,c
 11597  0101FA  0EE6               	movlw	-26
 11598  0101FC  50E3               	movf	plusw1,w,c
 11599  0101FE  262F               	addwf	(btemp+10)^0,f,c
 11600  010200  0EE7               	movlw	-25
 11601  010202  50E3               	movf	plusw1,w,c
 11602  010204  2230               	addwfc	(btemp+11)^0,f,c
 11603  010206  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11604  01020C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11605  010212  ECD0  F0B9         	call	_strcpy	;wreg free
 11606  010216                     l10175:
 11607                           
 11608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11609                           ;stkvar	_w @ sp[(-56)+38]
 11610  010216  50E1               	movf	fsr1l,w,c
 11611  010218  0FEE               	addlw	-18
 11612  01021A  6ED9               	movwf	fsr2l,c
 11613  01021C  50E2               	movf	fsr1h,w,c
 11614  01021E  6EDA               	movwf	fsr2h,c
 11615  010220  0EFF               	movlw	255
 11616  010222  22DA               	addwfc	fsr2h,f,c
 11617  010224  0EFD               	movlw	253
 11618  010226  26DE               	addwf	postinc2,f,c
 11619  010228  0EFF               	movlw	255
 11620  01022A  22DD               	addwfc	postdec2,f,c
 11621  01022C                     l10177:
 11622                           
 11623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11624                           ;stkvar	_w @ sp[(-56)+38]
 11625  01022C  0EEE               	movlw	-18
 11626  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11627  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11628  01023A  0EA5               	movlw	low _dbuf
 11629  01023C  6EE6               	movwf	postinc1,c
 11630  01023E  0E01               	movlw	high _dbuf
 11631  010240  6EE6               	movwf	postinc1,c
 11632                           
 11633                           ;stkvar	_fp @ sp[(-60)+-2]
 11634  010242  0EC2               	movlw	-62
 11635  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11636  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11637  010250  ECCB  F0B6         	call	_pad	;wreg free
 11638  010254  EF1D  F089         	goto	l2038
 11639  010258                     l10181:
 11640                           
 11641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11642                           ;stkvar	_g @ sp[(-56)+16]
 11643  010258  0ED8               	movlw	-40
 11644  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11645  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11646  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11647  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11648  010272  EC96  F0B1         	call	___fpclassifyf	;wreg free
 11649  010276  5025               	movf	btemp^0,w,c
 11650  010278  1026               	iorwf	(btemp+1)^0,w,c
 11651  01027A  A4D8               	btfss	status,2,c
 11652  01027C  D056               	goto	l10199
 11653  01027E  0EBF               	movlw	191
 11654  010280  6E2F               	movwf	(btemp+10)^0,c
 11655  010282  0EFF               	movlw	255
 11656  010284  6E30               	movwf	(btemp+11)^0,c
 11657                           
 11658                           ;stkvar	_c @ sp[(-56)+-7]
 11659  010286  0EC1               	movlw	-63
 11660  010288  50E3               	movf	plusw1,w,c
 11661  01028A  6E2D               	movwf	(btemp+8)^0,c
 11662  01028C  6A2E               	clrf	(btemp+9)^0,c
 11663  01028E  502F               	movf	(btemp+10)^0,w,c
 11664  010290  262D               	addwf	(btemp+8)^0,f,c
 11665  010292  5030               	movf	(btemp+11)^0,w,c
 11666  010294  222E               	addwfc	(btemp+9)^0,f,c
 11667  010296  502E               	movf	(btemp+9)^0,w,c
 11668  010298  E106               	bnz	u9570
 11669  01029A  0E1A               	movlw	26
 11670  01029C  5C2D               	subwf	(btemp+8)^0,w,c
 11671  01029E  B0D8               	btfsc	status,0,c
 11672  0102A0  D002               	goto	u9570
 11673  0102A2  0E01               	movlw	1
 11674  0102A4  D001               	goto	u9580
 11675  0102A6                     u9570:
 11676  0102A6  0E00               	movlw	0
 11677  0102A8                     u9580:
 11678  0102A8  6E2F               	movwf	(btemp+10)^0,c
 11679  0102AA  6A30               	clrf	(btemp+11)^0,c
 11680                           
 11681                           ;stkvar	_efgtoa$4964 @ sp[(-56)+6]
 11682  0102AC  0ECE               	movlw	-50
 11683  0102AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11684  0102B4  0ECF               	movlw	-49
 11685  0102B6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11686                           
 11687                           ;stkvar	_efgtoa$4964 @ sp[(-56)+6]
 11688  0102BC  0ECE               	movlw	-50
 11689  0102BE  006F FF8C  F025    	movff	plusw1,btemp
 11690  0102C4  0ECF               	movlw	-49
 11691  0102C6  50E3               	movf	plusw1,w,c
 11692  0102C8  1025               	iorwf	btemp^0,w,c
 11693  0102CA  B4D8               	btfsc	status,2,c
 11694  0102CC  D017               	goto	l10191
 11695                           
 11696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11697  0102CE  0EE9               	movlw	low STR_50
 11698  0102D0  6EE6               	movwf	postinc1,c
 11699  0102D2  0EFF               	movlw	high STR_50
 11700  0102D4  6EE6               	movwf	postinc1,c
 11701                           
 11702                           ;stkvar	_n @ sp[(-58)+32]
 11703  0102D6  0EA5               	movlw	low _dbuf
 11704  0102D8  6E2F               	movwf	(btemp+10)^0,c
 11705  0102DA  0E01               	movlw	high _dbuf
 11706  0102DC  6E30               	movwf	(btemp+11)^0,c
 11707  0102DE  0EE6               	movlw	-26
 11708  0102E0  50E3               	movf	plusw1,w,c
 11709  0102E2  262F               	addwf	(btemp+10)^0,f,c
 11710  0102E4  0EE7               	movlw	-25
 11711  0102E6  50E3               	movf	plusw1,w,c
 11712  0102E8  2230               	addwfc	(btemp+11)^0,f,c
 11713  0102EA  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11714  0102F0  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11715  0102F6  ECD0  F0B9         	call	_strcpy	;wreg free
 11716                           
 11717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11718  0102FA  D78D               	goto	l10175
 11719  0102FC                     l10191:
 11720                           
 11721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11722  0102FC  0EF1               	movlw	low STR_51
 11723  0102FE  6EE6               	movwf	postinc1,c
 11724  010300  0EFF               	movlw	high STR_51
 11725  010302  6EE6               	movwf	postinc1,c
 11726                           
 11727                           ;stkvar	_n @ sp[(-58)+32]
 11728  010304  0EA5               	movlw	low _dbuf
 11729  010306  6E2F               	movwf	(btemp+10)^0,c
 11730  010308  0E01               	movlw	high _dbuf
 11731  01030A  6E30               	movwf	(btemp+11)^0,c
 11732  01030C  0EE6               	movlw	-26
 11733  01030E  50E3               	movf	plusw1,w,c
 11734  010310  262F               	addwf	(btemp+10)^0,f,c
 11735  010312  0EE7               	movlw	-25
 11736  010314  50E3               	movf	plusw1,w,c
 11737  010316  2230               	addwfc	(btemp+11)^0,f,c
 11738  010318  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11739  01031E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11740  010324  ECD0  F0B9         	call	_strcpy	;wreg free
 11741  010328  D776               	goto	l10175
 11742  01032A                     l10199:
 11743                           
 11744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11745  01032A  0E00               	movlw	0
 11746  01032C  6E2D               	movwf	(btemp+8)^0,c
 11747  01032E  0E00               	movlw	0
 11748  010330  6E2E               	movwf	(btemp+9)^0,c
 11749  010332  0E80               	movlw	128
 11750  010334  6E2F               	movwf	(btemp+10)^0,c
 11751  010336  0E3F               	movlw	63
 11752  010338  6E30               	movwf	(btemp+11)^0,c
 11753                           
 11754                           ;stkvar	_u @ sp[(-56)+12]
 11755  01033A  0ED4               	movlw	-44
 11756  01033C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11757  010342  0ED5               	movlw	-43
 11758  010344  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11759  01034A  0ED6               	movlw	-42
 11760  01034C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11761  010352  0ED7               	movlw	-41
 11762  010354  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11763                           
 11764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11765                           ;stkvar	_e @ sp[(-56)+34]
 11766  01035A  0EEA               	movlw	-22
 11767  01035C  6AE3               	clrf	plusw1,c
 11768  01035E  0EEB               	movlw	-21
 11769  010360  6AE3               	clrf	plusw1,c
 11770                           
 11771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11772  010362  0E00               	movlw	0
 11773  010364  6EE6               	movwf	postinc1,c
 11774  010366  0E00               	movlw	0
 11775  010368  6EE6               	movwf	postinc1,c
 11776  01036A  0E00               	movlw	0
 11777  01036C  6EE6               	movwf	postinc1,c
 11778  01036E  0E00               	movlw	0
 11779  010370  6EE6               	movwf	postinc1,c
 11780                           
 11781                           ;stkvar	_g @ sp[(-60)+16]
 11782  010372  0ED4               	movlw	-44
 11783  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11784  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11785  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11786  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11787  01038C  EC07  F0BB         	call	___fleq	;wreg free
 11788  010390  A025               	btfss	btemp& (0+255),0,c
 11789  010392  D039               	goto	l10211
 11790  010394  D0BC               	goto	u9620
 11791  010396                     l10207:
 11792                           
 11793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11794  010396  0E00               	movlw	0
 11795  010398  6EE6               	movwf	postinc1,c
 11796  01039A  0E00               	movlw	0
 11797  01039C  6EE6               	movwf	postinc1,c
 11798  01039E  0E20               	movlw	32
 11799  0103A0  6EE6               	movwf	postinc1,c
 11800  0103A2  0E41               	movlw	65
 11801  0103A4  6EE6               	movwf	postinc1,c
 11802                           
 11803                           ;stkvar	_u @ sp[(-60)+12]
 11804  0103A6  0ED0               	movlw	-48
 11805  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11806  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11807  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11808  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11809  0103C0  EC08  F093         	call	___flmul	;wreg free
 11810                           
 11811                           ;stkvar	_u @ sp[(-56)+12]
 11812  0103C4  0ED4               	movlw	-44
 11813  0103C6  0060  F097  FFE3   	movff	btemp,plusw1
 11814  0103CC  0ED5               	movlw	-43
 11815  0103CE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11816  0103D4  0ED6               	movlw	-42
 11817  0103D6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11818  0103DC  0ED7               	movlw	-41
 11819  0103DE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11820                           
 11821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11822                           ;stkvar	_e @ sp[(-56)+34]
 11823  0103E4  0EEA               	movlw	-22
 11824  0103E6  50E3               	movf	plusw1,w,c
 11825  0103E8  0F01               	addlw	1
 11826  0103EA  6E25               	movwf	btemp^0,c
 11827  0103EC  0EEA               	movlw	-22
 11828  0103EE  0060  F097  FFE3   	movff	btemp,plusw1
 11829  0103F4  6A25               	clrf	btemp^0,c
 11830  0103F6  0EEB               	movlw	-21
 11831  0103F8  50E3               	movf	plusw1,w,c
 11832  0103FA  2025               	addwfc	btemp^0,w,c
 11833  0103FC  6E25               	movwf	btemp^0,c
 11834  0103FE  0EEB               	movlw	-21
 11835  010400  0060  F097  FFE3   	movff	btemp,plusw1
 11836  010406                     l10211:
 11837                           
 11838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11839  010406  0E00               	movlw	0
 11840  010408  6EE6               	movwf	postinc1,c
 11841  01040A  0E00               	movlw	0
 11842  01040C  6EE6               	movwf	postinc1,c
 11843  01040E  0E20               	movlw	32
 11844  010410  6EE6               	movwf	postinc1,c
 11845  010412  0E41               	movlw	65
 11846  010414  6EE6               	movwf	postinc1,c
 11847                           
 11848                           ;stkvar	_u @ sp[(-60)+12]
 11849  010416  0ED0               	movlw	-48
 11850  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11851  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11852  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11853  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11854  010430  EC08  F093         	call	___flmul	;wreg free
 11855  010434  0060  F097  FFE6   	movff	btemp,postinc1
 11856  01043A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 11857  010440  0060  F09F  FFE6   	movff	btemp+2,postinc1
 11858  010446  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 11859                           
 11860                           ;stkvar	_g @ sp[(-60)+16]
 11861  01044C  0ED4               	movlw	-44
 11862  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11863  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11864  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11865  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11866  010466  EC1A  F0B3         	call	___flge	;wreg free
 11867  01046A  A025               	btfss	btemp& (0+255),0,c
 11868  01046C  D032               	goto	l10217
 11869  01046E  D793               	goto	l10207
 11870  010470                     l10213:
 11871                           
 11872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11873  010470  0E00               	movlw	0
 11874  010472  6EE6               	movwf	postinc1,c
 11875  010474  0E00               	movlw	0
 11876  010476  6EE6               	movwf	postinc1,c
 11877  010478  0E20               	movlw	32
 11878  01047A  6EE6               	movwf	postinc1,c
 11879  01047C  0E41               	movlw	65
 11880  01047E  6EE6               	movwf	postinc1,c
 11881                           
 11882                           ;stkvar	_u @ sp[(-60)+12]
 11883  010480  0ED0               	movlw	-48
 11884  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11885  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11886  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11887  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11888  01049A  ECFB  F09A         	call	___fldiv	;wreg free
 11889                           
 11890                           ;stkvar	_u @ sp[(-56)+12]
 11891  01049E  0ED4               	movlw	-44
 11892  0104A0  0060  F097  FFE3   	movff	btemp,plusw1
 11893  0104A6  0ED5               	movlw	-43
 11894  0104A8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11895  0104AE  0ED6               	movlw	-42
 11896  0104B0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11897  0104B6  0ED7               	movlw	-41
 11898  0104B8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11899                           
 11900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11901                           ;stkvar	_e @ sp[(-56)+34]
 11902  0104BE  50E1               	movf	fsr1l,w,c
 11903  0104C0  0FEA               	addlw	-22
 11904  0104C2  6ED9               	movwf	fsr2l,c
 11905  0104C4  50E2               	movf	fsr1h,w,c
 11906  0104C6  6EDA               	movwf	fsr2h,c
 11907  0104C8  0EFF               	movlw	255
 11908  0104CA  22DA               	addwfc	fsr2h,f,c
 11909  0104CC  06DE               	decf	postinc2,f,c
 11910  0104CE  0E00               	movlw	0
 11911  0104D0  5ADD               	subwfb	postdec2,f,c
 11912  0104D2                     l10217:
 11913                           
 11914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11915                           ;stkvar	_u @ sp[(-56)+12]
 11916  0104D2  0ED4               	movlw	-44
 11917  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11918  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11919  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11920  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11921                           
 11922                           ;stkvar	_g @ sp[(-60)+16]
 11923  0104EC  0ED4               	movlw	-44
 11924  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11925  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11926  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11927  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11928  010506  EC1A  F0B3         	call	___flge	;wreg free
 11929  01050A  A025               	btfss	btemp& (0+255),0,c
 11930  01050C  D7B1               	goto	l10213
 11931  01050E                     u9620:
 11932                           
 11933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11934                           ;stkvar	_c @ sp[(-56)+-7]
 11935  01050E  0EC1               	movlw	-63
 11936  010510  50E3               	movf	plusw1,w,c
 11937  010512  6EE6               	movwf	postinc1,c
 11938  010514  0E00               	movlw	0
 11939  010516  6EE6               	movwf	postinc1,c
 11940  010518  EC07  F0BF         	call	_tolower	;wreg free
 11941                           
 11942                           ;stkvar	_mode @ sp[(-56)+54]
 11943  01051C  0EFE               	movlw	-2
 11944  01051E  0060  F097  FFE3   	movff	btemp,plusw1
 11945                           
 11946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11947                           ;stkvar	_mode @ sp[(-56)+54]
 11948                           ;stkvar	_nmode @ sp[(-56)+55]
 11949  010524  0EFE               	movlw	-2
 11950  010526  006F FF8C  F025    	movff	plusw1,btemp
 11951  01052C  0EFF               	movlw	-1
 11952  01052E  0060  F097  FFE3   	movff	btemp,plusw1
 11953                           
 11954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11955                           ;stkvar	_mode @ sp[(-56)+54]
 11956  010534  0EFE               	movlw	-2
 11957  010536  006F FF8C  F025    	movff	plusw1,btemp
 11958  01053C  0E67               	movlw	103
 11959  01053E  1825               	xorwf	btemp^0,w,c
 11960  010540  A4D8               	btfss	status,2,c
 11961  010542  D025               	goto	l10235
 11962                           
 11963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11964  010544  500C               	movf	_prec^0,w,c
 11965  010546  100D               	iorwf	(_prec+1)^0,w,c
 11966  010548  A4D8               	btfss	status,2,c
 11967  01054A  D004               	goto	l10229
 11968                           
 11969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11970  01054C  0E00               	movlw	0
 11971  01054E  6E0D               	movwf	(_prec+1)^0,c
 11972  010550  0E01               	movlw	1
 11973  010552  6E0C               	movwf	_prec^0,c
 11974  010554                     l10229:
 11975                           
 11976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11977  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 11978  010556  D005               	goto	u9650
 11979  010558  500D               	movf	(_prec+1)^0,w,c
 11980  01055A  E110               	bnz	l10233
 11981  01055C  040C               	decf	_prec^0,w,c
 11982  01055E  B0D8               	btfsc	status,0,c
 11983  010560  D00D               	goto	l10233
 11984  010562                     u9650:
 11985  010562  0E06               	movlw	6
 11986  010564  6E2F               	movwf	(btemp+10)^0,c
 11987  010566  0E00               	movlw	0
 11988  010568  6E30               	movwf	(btemp+11)^0,c
 11989                           
 11990                           ;stkvar	_p @ sp[(-56)+40]
 11991  01056A  0EF0               	movlw	-16
 11992  01056C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11993  010572  0EF1               	movlw	-15
 11994  010574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11995  01057A  D00C               	goto	l10241
 11996  01057C                     l10233:
 11997                           
 11998                           ;stkvar	_p @ sp[(-56)+40]
 11999  01057C  0EF0               	movlw	-16
 12000  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 12001  010584  0EF1               	movlw	-15
 12002  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 12003  01058C  D003               	goto	l10241
 12004  01058E                     l10235:
 12005                           
 12006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12007  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 12008  010590  D7F5               	goto	l10233
 12009  010592  D7E7               	goto	u9650
 12010  010594                     l10241:
 12011                           
 12012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12013                           ;stkvar	_mode @ sp[(-56)+54]
 12014  010594  0EFE               	movlw	-2
 12015  010596  006F FF8C  F025    	movff	plusw1,btemp
 12016  01059C  0E67               	movlw	103
 12017  01059E  1825               	xorwf	btemp^0,w,c
 12018  0105A0  A4D8               	btfss	status,2,c
 12019  0105A2  D02F               	goto	l10251
 12020                           
 12021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12022                           ;stkvar	_e @ sp[(-56)+34]
 12023  0105A4  0EEB               	movlw	-21
 12024  0105A6  AEE3               	btfss	plusw1,7,c
 12025  0105A8  D00E               	goto	u9680
 12026  0105AA  0EEA               	movlw	-22
 12027  0105AC  006F FF8C  F025    	movff	plusw1,btemp
 12028  0105B2  0EFC               	movlw	252
 12029  0105B4  5E25               	subwf	btemp^0,f,c
 12030  0105B6  0EEB               	movlw	-21
 12031  0105B8  006F FF8C  F025    	movff	plusw1,btemp
 12032  0105BE  0EFF               	movlw	255
 12033  0105C0  5A25               	subwfb	btemp^0,f,c
 12034  0105C2  A0D8               	btfss	status,0,c
 12035  0105C4  D018               	goto	l10249
 12036  0105C6                     u9680:
 12037                           
 12038                           ;stkvar	_e @ sp[(-56)+34]
 12039                           ;stkvar	_p @ sp[(-56)+40]
 12040  0105C6  0EF0               	movlw	-16
 12041  0105C8  50E3               	movf	plusw1,w,c
 12042  0105CA  0FFF               	addlw	255
 12043  0105CC  6E2F               	movwf	(btemp+10)^0,c
 12044  0105CE  0EF1               	movlw	-15
 12045  0105D0  006F FF8C  F030    	movff	plusw1,btemp+11
 12046  0105D6  0EFF               	movlw	255
 12047  0105D8  2230               	addwfc	(btemp+11)^0,f,c
 12048  0105DA  0EEA               	movlw	-22
 12049  0105DC  50E3               	movf	plusw1,w,c
 12050  0105DE  5C2F               	subwf	(btemp+10)^0,w,c
 12051  0105E0  5030               	movf	(btemp+11)^0,w,c
 12052  0105E2  0A80               	xorlw	128
 12053  0105E4  6E25               	movwf	btemp^0,c
 12054  0105E6  0EEB               	movlw	-21
 12055  0105E8  50E3               	movf	plusw1,w,c
 12056  0105EA  0A80               	xorlw	128
 12057  0105EC  5825               	subwfb	btemp^0,w,c
 12058  0105EE  A0D8               	btfss	status,0,c
 12059  0105F0  D002               	goto	l10249
 12060                           
 12061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12062  0105F2  0E66               	movlw	102
 12063  0105F4  D001               	goto	L10
 12064  0105F6                     l10249:
 12065                           
 12066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12067  0105F6  0E65               	movlw	101
 12068  0105F8                     L10:
 12069  0105F8  6E30               	movwf	(btemp+11)^0,c
 12070                           
 12071                           ;stkvar	_nmode @ sp[(-56)+55]
 12072  0105FA  0EFF               	movlw	-1
 12073  0105FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12074  010602                     l10251:
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12077                           ;stkvar	_p @ sp[(-56)+40]
 12078                           ;stkvar	_m @ sp[(-56)+48]
 12079  010602  0EF0               	movlw	-16
 12080  010604  006F FF8C  F025    	movff	plusw1,btemp
 12081  01060A  0EF8               	movlw	-8
 12082  01060C  0060  F097  FFE3   	movff	btemp,plusw1
 12083  010612  0EF1               	movlw	-15
 12084  010614  006F FF8C  F025    	movff	plusw1,btemp
 12085  01061A  0EF9               	movlw	-7
 12086  01061C  0060  F097  FFE3   	movff	btemp,plusw1
 12087                           
 12088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12089                           ;stkvar	_mode @ sp[(-56)+54]
 12090  010622  0EFE               	movlw	-2
 12091  010624  006F FF8C  F025    	movff	plusw1,btemp
 12092  01062A  0E67               	movlw	103
 12093  01062C  1825               	xorwf	btemp^0,w,c
 12094  01062E  A4D8               	btfss	status,2,c
 12095  010630  D00B               	goto	u9720
 12096                           
 12097                           ;stkvar	_nmode @ sp[(-56)+55]
 12098  010632  0EFF               	movlw	-1
 12099  010634  006F FF8C  F025    	movff	plusw1,btemp
 12100  01063A  0E66               	movlw	102
 12101  01063C  1825               	xorwf	btemp^0,w,c
 12102  01063E  A4D8               	btfss	status,2,c
 12103  010640  D014               	goto	l2067
 12104                           
 12105                           ;stkvar	_e @ sp[(-56)+34]
 12106  010642  0EEB               	movlw	-21
 12107  010644  AEE3               	btfss	plusw1,7,c
 12108  010646  D011               	goto	l2067
 12109  010648                     u9720:
 12110                           
 12111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12112                           ;stkvar	_m @ sp[(-56)+48]
 12113  010648  0EF8               	movlw	-8
 12114  01064A  50E3               	movf	plusw1,w,c
 12115  01064C  0F01               	addlw	1
 12116  01064E  6E25               	movwf	btemp^0,c
 12117  010650  0EF8               	movlw	-8
 12118  010652  0060  F097  FFE3   	movff	btemp,plusw1
 12119  010658  6A25               	clrf	btemp^0,c
 12120  01065A  0EF9               	movlw	-7
 12121  01065C  50E3               	movf	plusw1,w,c
 12122  01065E  2025               	addwfc	btemp^0,w,c
 12123  010660  6E25               	movwf	btemp^0,c
 12124  010662  0EF9               	movlw	-7
 12125  010664  0060  F097  FFE3   	movff	btemp,plusw1
 12126  01066A                     l2067:
 12127                           
 12128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12129                           ;stkvar	_nmode @ sp[(-56)+55]
 12130  01066A  0EFF               	movlw	-1
 12131  01066C  006F FF8C  F025    	movff	plusw1,btemp
 12132  010672  0E66               	movlw	102
 12133  010674  1825               	xorwf	btemp^0,w,c
 12134  010676  A4D8               	btfss	status,2,c
 12135  010678  D03B               	goto	l10271
 12136                           
 12137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12138                           ;stkvar	_e @ sp[(-56)+34]
 12139  01067A  0EEB               	movlw	-21
 12140  01067C  AEE3               	btfss	plusw1,7,c
 12141  01067E  D01C               	goto	l10267
 12142                           
 12143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12144  010680  0E00               	movlw	0
 12145  010682  6E2D               	movwf	(btemp+8)^0,c
 12146  010684  0E00               	movlw	0
 12147  010686  6E2E               	movwf	(btemp+9)^0,c
 12148  010688  0E80               	movlw	128
 12149  01068A  6E2F               	movwf	(btemp+10)^0,c
 12150  01068C  0E3F               	movlw	63
 12151  01068E  6E30               	movwf	(btemp+11)^0,c
 12152                           
 12153                           ;stkvar	_u @ sp[(-56)+12]
 12154  010690  0ED4               	movlw	-44
 12155  010692  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12156  010698  0ED5               	movlw	-43
 12157  01069A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12158  0106A0  0ED6               	movlw	-42
 12159  0106A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12160  0106A8  0ED7               	movlw	-41
 12161  0106AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12162                           
 12163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12164                           ;stkvar	_e @ sp[(-56)+34]
 12165  0106B0  0EEA               	movlw	-22
 12166  0106B2  6AE3               	clrf	plusw1,c
 12167  0106B4  0EEB               	movlw	-21
 12168  0106B6  6AE3               	clrf	plusw1,c
 12169  0106B8                     l10267:
 12170                           
 12171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12172                           ;stkvar	_mode @ sp[(-56)+54]
 12173  0106B8  0EFE               	movlw	-2
 12174  0106BA  006F FF8C  F025    	movff	plusw1,btemp
 12175  0106C0  0E67               	movlw	103
 12176  0106C2  1825               	xorwf	btemp^0,w,c
 12177  0106C4  B4D8               	btfsc	status,2,c
 12178  0106C6  D014               	goto	l10271
 12179                           
 12180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12181                           ;stkvar	_e @ sp[(-56)+34]
 12182                           ;stkvar	_m @ sp[(-56)+48]
 12183  0106C8  0EF8               	movlw	-8
 12184  0106CA  50E3               	movf	plusw1,w,c
 12185  0106CC  6E25               	movwf	btemp^0,c
 12186  0106CE  0EEA               	movlw	-22
 12187  0106D0  50E3               	movf	plusw1,w,c
 12188  0106D2  2625               	addwf	btemp^0,f,c
 12189  0106D4  0EF8               	movlw	-8
 12190  0106D6  0060  F097  FFE3   	movff	btemp,plusw1
 12191  0106DC  0EF9               	movlw	-7
 12192  0106DE  50E3               	movf	plusw1,w,c
 12193  0106E0  6E25               	movwf	btemp^0,c
 12194  0106E2  0EEB               	movlw	-21
 12195  0106E4  50E3               	movf	plusw1,w,c
 12196  0106E6  2225               	addwfc	btemp^0,f,c
 12197  0106E8  0EF9               	movlw	-7
 12198  0106EA  0060  F097  FFE3   	movff	btemp,plusw1
 12199  0106F0                     l10271:
 12200                           
 12201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12202                           ;stkvar	_i @ sp[(-56)+36]
 12203  0106F0  0EEC               	movlw	-20
 12204  0106F2  6AE3               	clrf	plusw1,c
 12205  0106F4  0EED               	movlw	-19
 12206  0106F6  6AE3               	clrf	plusw1,c
 12207                           
 12208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12209                           ;stkvar	_g @ sp[(-56)+16]
 12210  0106F8  0ED8               	movlw	-40
 12211  0106FA  006F FF8C  F02D    	movff	plusw1,btemp+8
 12212  010700  0ED9               	movlw	-39
 12213  010702  006F FF8C  F02E    	movff	plusw1,btemp+9
 12214  010708  0EDA               	movlw	-38
 12215  01070A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12216  010710  0EDB               	movlw	-37
 12217  010712  006F FF8C  F030    	movff	plusw1,btemp+11
 12218                           
 12219                           ;stkvar	_h @ sp[(-56)+24]
 12220  010718  0EE0               	movlw	-32
 12221  01071A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12222  010720  0EE1               	movlw	-31
 12223  010722  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12224  010728  0EE2               	movlw	-30
 12225  01072A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12226  010730  0EE3               	movlw	-29
 12227  010732  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12228                           
 12229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12230                           ;stkvar	_u @ sp[(-56)+12]
 12231  010738  0ED4               	movlw	-44
 12232  01073A  006F FF8C  F02D    	movff	plusw1,btemp+8
 12233  010740  0ED5               	movlw	-43
 12234  010742  006F FF8C  F02E    	movff	plusw1,btemp+9
 12235  010748  0ED6               	movlw	-42
 12236  01074A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12237  010750  0ED7               	movlw	-41
 12238  010752  006F FF8C  F030    	movff	plusw1,btemp+11
 12239                           
 12240                           ;stkvar	_ou @ sp[(-56)+28]
 12241  010758  0EE4               	movlw	-28
 12242  01075A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12243  010760  0EE5               	movlw	-27
 12244  010762  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12245  010768  0EE6               	movlw	-26
 12246  01076A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12247  010770  0EE7               	movlw	-25
 12248  010772  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12249                           
 12250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12251  010778  D0D6               	goto	l10287
 12252  01077A                     l10277:
 12253                           
 12254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12255                           ;stkvar	_u @ sp[(-56)+12]
 12256  01077A  0ED4               	movlw	-44
 12257  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12258  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12259  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12260  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12261                           
 12262                           ;stkvar	_h @ sp[(-60)+24]
 12263  010794  0EDC               	movlw	-36
 12264  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12265  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12266  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12267  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12268  0107AE  ECFB  F09A         	call	___fldiv	;wreg free
 12269  0107B2  0060  F097  FFE6   	movff	btemp,postinc1
 12270  0107B8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12271  0107BE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12272  0107C4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12273  0107CA  EC2B  F0A4         	call	_floorf	;wreg free
 12274                           
 12275                           ;stkvar	_l @ sp[(-56)+20]
 12276  0107CE  0EDC               	movlw	-36
 12277  0107D0  0060  F097  FFE3   	movff	btemp,plusw1
 12278  0107D6  0EDD               	movlw	-35
 12279  0107D8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12280  0107DE  0EDE               	movlw	-34
 12281  0107E0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12282  0107E6  0EDF               	movlw	-33
 12283  0107E8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12284                           
 12285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12286                           ;stkvar	_l @ sp[(-56)+20]
 12287  0107EE  0EDC               	movlw	-36
 12288  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12289  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12290  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12291  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12292  010808  EC61  F0B2         	call	___fltol	;wreg free
 12293  01080C  0060  F094  F02F   	movff	btemp,btemp+10
 12294  010812  0060  F098  F030   	movff	btemp+1,btemp+11
 12295                           
 12296                           ;stkvar	_d @ sp[(-56)+44]
 12297  010818  0EF4               	movlw	-12
 12298  01081A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12299  010820  0EF5               	movlw	-11
 12300  010822  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12301                           
 12302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12303                           ;stkvar	_u @ sp[(-56)+12]
 12304  010828  0ED4               	movlw	-44
 12305  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12306  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12307  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12308  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12309                           
 12310                           ;stkvar	_l @ sp[(-60)+20]
 12311  010842  0ED8               	movlw	-40
 12312  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12313  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12314  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12315  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12316  01085C  EC08  F093         	call	___flmul	;wreg free
 12317  010860  0060  F097  FFE6   	movff	btemp,postinc1
 12318  010866  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12319  01086C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12320  010872  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12321                           
 12322                           ;stkvar	_h @ sp[(-60)+24]
 12323  010878  0EDC               	movlw	-36
 12324  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12325  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12326  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12327  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12328  010892  ECBC  F0C2         	call	___flsub	;wreg free
 12329                           
 12330                           ;stkvar	_h @ sp[(-56)+24]
 12331  010896  0EE0               	movlw	-32
 12332  010898  0060  F097  FFE3   	movff	btemp,plusw1
 12333  01089E  0EE1               	movlw	-31
 12334  0108A0  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12335  0108A6  0EE2               	movlw	-30
 12336  0108A8  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12337  0108AE  0EE3               	movlw	-29
 12338  0108B0  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12339                           
 12340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12341  0108B6  0E00               	movlw	0
 12342  0108B8  6EE6               	movwf	postinc1,c
 12343  0108BA  0E00               	movlw	0
 12344  0108BC  6EE6               	movwf	postinc1,c
 12345  0108BE  0E20               	movlw	32
 12346  0108C0  6EE6               	movwf	postinc1,c
 12347  0108C2  0E41               	movlw	65
 12348  0108C4  6EE6               	movwf	postinc1,c
 12349                           
 12350                           ;stkvar	_u @ sp[(-60)+12]
 12351  0108C6  0ED0               	movlw	-48
 12352  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12353  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12354  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12355  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12356  0108E0  ECFB  F09A         	call	___fldiv	;wreg free
 12357                           
 12358                           ;stkvar	_u @ sp[(-56)+12]
 12359  0108E4  0ED4               	movlw	-44
 12360  0108E6  0060  F097  FFE3   	movff	btemp,plusw1
 12361  0108EC  0ED5               	movlw	-43
 12362  0108EE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12363  0108F4  0ED6               	movlw	-42
 12364  0108F6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12365  0108FC  0ED7               	movlw	-41
 12366  0108FE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12367                           
 12368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12369                           ;stkvar	_i @ sp[(-56)+36]
 12370  010904  0EEC               	movlw	-20
 12371  010906  50E3               	movf	plusw1,w,c
 12372  010908  0F01               	addlw	1
 12373  01090A  6E25               	movwf	btemp^0,c
 12374  01090C  0EEC               	movlw	-20
 12375  01090E  0060  F097  FFE3   	movff	btemp,plusw1
 12376  010914  6A25               	clrf	btemp^0,c
 12377  010916  0EED               	movlw	-19
 12378  010918  50E3               	movf	plusw1,w,c
 12379  01091A  2025               	addwfc	btemp^0,w,c
 12380  01091C  6E25               	movwf	btemp^0,c
 12381  01091E  0EED               	movlw	-19
 12382  010920  0060  F097  FFE3   	movff	btemp,plusw1
 12383  010926                     l10287:
 12384                           
 12385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12386                           ;stkvar	_m @ sp[(-56)+48]
 12387                           ;stkvar	_i @ sp[(-56)+36]
 12388  010926  50E1               	movf	fsr1l,w,c
 12389  010928  0FEC               	addlw	-20
 12390  01092A  6ED9               	movwf	fsr2l,c
 12391  01092C  50E2               	movf	fsr1h,w,c
 12392  01092E  6EDA               	movwf	fsr2h,c
 12393  010930  0EFF               	movlw	255
 12394  010932  22DA               	addwfc	fsr2h,f,c
 12395  010934  0EF8               	movlw	-8
 12396  010936  50E3               	movf	plusw1,w,c
 12397  010938  5CDE               	subwf	postinc2,w,c
 12398  01093A  50DE               	movf	postinc2,w,c
 12399  01093C  0A80               	xorlw	128
 12400  01093E  6E25               	movwf	btemp^0,c
 12401  010940  0EF9               	movlw	-7
 12402  010942  50E3               	movf	plusw1,w,c
 12403  010944  0A80               	xorlw	128
 12404  010946  5825               	subwfb	btemp^0,w,c
 12405  010948  A0D8               	btfss	status,0,c
 12406  01094A  D717               	goto	l10277
 12407                           
 12408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12409  01094C  0E00               	movlw	0
 12410  01094E  6EE6               	movwf	postinc1,c
 12411  010950  0E00               	movlw	0
 12412  010952  6EE6               	movwf	postinc1,c
 12413  010954  0EA0               	movlw	160
 12414  010956  6EE6               	movwf	postinc1,c
 12415  010958  0E40               	movlw	64
 12416  01095A  6EE6               	movwf	postinc1,c
 12417                           
 12418                           ;stkvar	_u @ sp[(-60)+12]
 12419  01095C  0ED0               	movlw	-48
 12420  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12421  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12422  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12423  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12424  010976  EC08  F093         	call	___flmul	;wreg free
 12425                           
 12426                           ;stkvar	_l @ sp[(-56)+20]
 12427  01097A  0EDC               	movlw	-36
 12428  01097C  0060  F097  FFE3   	movff	btemp,plusw1
 12429  010982  0EDD               	movlw	-35
 12430  010984  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12431  01098A  0EDE               	movlw	-34
 12432  01098C  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12433  010992  0EDF               	movlw	-33
 12434  010994  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12435                           
 12436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12437                           ;stkvar	_l @ sp[(-56)+20]
 12438  01099A  0EDC               	movlw	-36
 12439  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12440  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12441  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12442  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12443                           
 12444                           ;stkvar	_h @ sp[(-60)+24]
 12445  0109B4  0EDC               	movlw	-36
 12446  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12447  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12448  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12449  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12450  0109CE  EC1A  F0B3         	call	___flge	;wreg free
 12451  0109D2  A025               	btfss	btemp& (0+255),0,c
 12452  0109D4  D021               	goto	u9790
 12453                           
 12454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12455                           ;stkvar	_l @ sp[(-56)+20]
 12456                           
 12457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12458                           
 12459                           ;stkvar	_l @ sp[(-56)+20]
 12460                           
 12461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12462  0109D6  0EDC               	movlw	-36
 12463  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12464  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12465  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12466  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12467                           
 12468                           ;stkvar	_h @ sp[(-60)+24]
 12469  0109F0  0EDC               	movlw	-36
 12470  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12471  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12472  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12473  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12474  010A0A  EC07  F0BB         	call	___fleq	;wreg free
 12475  010A0E  A025               	btfss	btemp& (0+255),0,c
 12476  010A10  D01B               	goto	l10301
 12477                           
 12478                           ;stkvar	_d @ sp[(-56)+44]
 12479  010A12  0EF4               	movlw	-12
 12480  010A14  B0E3               	btfsc	plusw1,0,c
 12481  010A16  D018               	goto	l10301
 12482  010A18                     u9790:
 12483                           
 12484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12485  010A18  0E00               	movlw	0
 12486  010A1A  6E2D               	movwf	(btemp+8)^0,c
 12487  010A1C  0E00               	movlw	0
 12488  010A1E  6E2E               	movwf	(btemp+9)^0,c
 12489  010A20  0E00               	movlw	0
 12490  010A22  6E2F               	movwf	(btemp+10)^0,c
 12491  010A24  0E00               	movlw	0
 12492  010A26  6E30               	movwf	(btemp+11)^0,c
 12493                           
 12494                           ;stkvar	_l @ sp[(-56)+20]
 12495  010A28  0EDC               	movlw	-36
 12496  010A2A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12497  010A30  0EDD               	movlw	-35
 12498  010A32  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12499  010A38  0EDE               	movlw	-34
 12500  010A3A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12501  010A40  0EDF               	movlw	-33
 12502  010A42  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12503  010A48                     l10301:
 12504                           
 12505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12506                           ;stkvar	_l @ sp[(-56)+20]
 12507  010A48  0EDC               	movlw	-36
 12508  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12509  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12510  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12511  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12512                           
 12513                           ;stkvar	_g @ sp[(-60)+16]
 12514  010A62  0ED4               	movlw	-44
 12515  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12516  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12517  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12518  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12519  010A7C  EC1D  F097         	call	___fladd	;wreg free
 12520                           
 12521                           ;stkvar	_h @ sp[(-56)+24]
 12522  010A80  0EE0               	movlw	-32
 12523  010A82  0060  F097  FFE3   	movff	btemp,plusw1
 12524  010A88  0EE1               	movlw	-31
 12525  010A8A  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12526  010A90  0EE2               	movlw	-30
 12527  010A92  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12528  010A98  0EE3               	movlw	-29
 12529  010A9A  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12530                           
 12531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12532                           ;stkvar	_ou @ sp[(-56)+28]
 12533  010AA0  0EE4               	movlw	-28
 12534  010AA2  006F FF8C  F02D    	movff	plusw1,btemp+8
 12535  010AA8  0EE5               	movlw	-27
 12536  010AAA  006F FF8C  F02E    	movff	plusw1,btemp+9
 12537  010AB0  0EE6               	movlw	-26
 12538  010AB2  006F FF8C  F02F    	movff	plusw1,btemp+10
 12539  010AB8  0EE7               	movlw	-25
 12540  010ABA  006F FF8C  F030    	movff	plusw1,btemp+11
 12541                           
 12542                           ;stkvar	_u @ sp[(-56)+12]
 12543  010AC0  0ED4               	movlw	-44
 12544  010AC2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12545  010AC8  0ED5               	movlw	-43
 12546  010ACA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12547  010AD0  0ED6               	movlw	-42
 12548  010AD2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12549  010AD8  0ED7               	movlw	-41
 12550  010ADA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12551                           
 12552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12553                           ;stkvar	_nmode @ sp[(-56)+55]
 12554  010AE0  0EFF               	movlw	-1
 12555  010AE2  006F FF8C  F025    	movff	plusw1,btemp
 12556  010AE8  0E65               	movlw	101
 12557  010AEA  1825               	xorwf	btemp^0,w,c
 12558  010AEC  B4D8               	btfsc	status,2,c
 12559  010AEE  D011               	goto	l10309
 12560                           
 12561                           ;stkvar	_e @ sp[(-56)+34]
 12562                           ;stkvar	_ne @ sp[(-56)+46]
 12563  010AF0  0EEA               	movlw	-22
 12564  010AF2  006F FF8C  F025    	movff	plusw1,btemp
 12565  010AF8  0EF6               	movlw	-10
 12566  010AFA  0060  F097  FFE3   	movff	btemp,plusw1
 12567  010B00  0EEB               	movlw	-21
 12568  010B02  006F FF8C  F025    	movff	plusw1,btemp
 12569  010B08  0EF7               	movlw	-9
 12570  010B0A  0060  F097  FFE3   	movff	btemp,plusw1
 12571  010B10  D004               	goto	l2082
 12572  010B12                     l10309:
 12573                           
 12574                           ;stkvar	_ne @ sp[(-56)+46]
 12575  010B12  0EF6               	movlw	-10
 12576  010B14  6AE3               	clrf	plusw1,c
 12577  010B16  0EF7               	movlw	-9
 12578  010B18  6AE3               	clrf	plusw1,c
 12579  010B1A                     l2082:
 12580                           
 12581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12582                           ;stkvar	_pp @ sp[(-56)+50]
 12583  010B1A  0EFA               	movlw	-6
 12584  010B1C  6AE3               	clrf	plusw1,c
 12585  010B1E  0EFB               	movlw	-5
 12586  010B20  6AE3               	clrf	plusw1,c
 12587                           
 12588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12589                           ;stkvar	_t @ sp[(-56)+52]
 12590  010B22  0EFC               	movlw	-4
 12591  010B24  6AE3               	clrf	plusw1,c
 12592  010B26  0EFD               	movlw	-3
 12593  010B28  6AE3               	clrf	plusw1,c
 12594                           
 12595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12596                           ;stkvar	_i @ sp[(-56)+36]
 12597  010B2A  0EEC               	movlw	-20
 12598  010B2C  6AE3               	clrf	plusw1,c
 12599  010B2E  0EED               	movlw	-19
 12600  010B30  6AE3               	clrf	plusw1,c
 12601                           
 12602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12603  010B32  D1B7               	goto	l10361
 12604  010B34                     l10311:
 12605                           
 12606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12607                           ;stkvar	_u @ sp[(-56)+12]
 12608  010B34  0ED4               	movlw	-44
 12609  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12610  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12611  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12612  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12613                           
 12614                           ;stkvar	_h @ sp[(-60)+24]
 12615  010B4E  0EDC               	movlw	-36
 12616  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12617  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12618  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12619  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12620  010B68  ECFB  F09A         	call	___fldiv	;wreg free
 12621  010B6C  0060  F097  FFE6   	movff	btemp,postinc1
 12622  010B72  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12623  010B78  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12624  010B7E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12625  010B84  EC2B  F0A4         	call	_floorf	;wreg free
 12626                           
 12627                           ;stkvar	_l @ sp[(-56)+20]
 12628  010B88  0EDC               	movlw	-36
 12629  010B8A  0060  F097  FFE3   	movff	btemp,plusw1
 12630  010B90  0EDD               	movlw	-35
 12631  010B92  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12632  010B98  0EDE               	movlw	-34
 12633  010B9A  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12634  010BA0  0EDF               	movlw	-33
 12635  010BA2  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12636                           
 12637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12638                           ;stkvar	_l @ sp[(-56)+20]
 12639  010BA8  0EDC               	movlw	-36
 12640  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12641  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12642  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12643  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12644  010BC2  EC61  F0B2         	call	___fltol	;wreg free
 12645  010BC6  0060  F094  F02F   	movff	btemp,btemp+10
 12646  010BCC  0060  F098  F030   	movff	btemp+1,btemp+11
 12647                           
 12648                           ;stkvar	_d @ sp[(-56)+44]
 12649  010BD2  0EF4               	movlw	-12
 12650  010BD4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12651  010BDA  0EF5               	movlw	-11
 12652  010BDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12653                           
 12654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12655  010BE2  B80E               	btfsc	_flags^0,4,c
 12656  010BE4  D026               	goto	l10325
 12657                           
 12658                           ;stkvar	_d @ sp[(-56)+44]
 12659  010BE6  0EF4               	movlw	-12
 12660  010BE8  006F FF8C  F025    	movff	plusw1,btemp
 12661  010BEE  0EF5               	movlw	-11
 12662  010BF0  50E3               	movf	plusw1,w,c
 12663  010BF2  1025               	iorwf	btemp^0,w,c
 12664  010BF4  A4D8               	btfss	status,2,c
 12665  010BF6  D01D               	goto	l10325
 12666                           
 12667                           ;stkvar	_mode @ sp[(-56)+54]
 12668  010BF8  0EFE               	movlw	-2
 12669  010BFA  006F FF8C  F025    	movff	plusw1,btemp
 12670  010C00  0E67               	movlw	103
 12671  010C02  1825               	xorwf	btemp^0,w,c
 12672  010C04  A4D8               	btfss	status,2,c
 12673  010C06  D015               	goto	l10325
 12674                           
 12675                           ;stkvar	_ne @ sp[(-56)+46]
 12676  010C08  0EF7               	movlw	-9
 12677  010C0A  AEE3               	btfss	plusw1,7,c
 12678  010C0C  D012               	goto	l10325
 12679                           
 12680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12681                           ;stkvar	_t @ sp[(-56)+52]
 12682  010C0E  0EFC               	movlw	-4
 12683  010C10  50E3               	movf	plusw1,w,c
 12684  010C12  0F01               	addlw	1
 12685  010C14  6E25               	movwf	btemp^0,c
 12686  010C16  0EFC               	movlw	-4
 12687  010C18  0060  F097  FFE3   	movff	btemp,plusw1
 12688  010C1E  6A25               	clrf	btemp^0,c
 12689  010C20  0EFD               	movlw	-3
 12690  010C22  50E3               	movf	plusw1,w,c
 12691  010C24  2025               	addwfc	btemp^0,w,c
 12692  010C26  6E25               	movwf	btemp^0,c
 12693  010C28  0EFD               	movlw	-3
 12694  010C2A  0060  F097  FFE3   	movff	btemp,plusw1
 12695                           
 12696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12697  010C30  D0AF               	goto	l10353
 12698  010C32                     l10325:
 12699                           
 12700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12701                           ;stkvar	_pp @ sp[(-56)+50]
 12702  010C32  0EFA               	movlw	-6
 12703  010C34  006F FF8C  F025    	movff	plusw1,btemp
 12704  010C3A  0EFB               	movlw	-5
 12705  010C3C  50E3               	movf	plusw1,w,c
 12706  010C3E  1025               	iorwf	btemp^0,w,c
 12707  010C40  A4D8               	btfss	status,2,c
 12708  010C42  D070               	goto	l10345
 12709                           
 12710                           ;stkvar	_ne @ sp[(-56)+46]
 12711  010C44  0EF7               	movlw	-9
 12712  010C46  AEE3               	btfss	plusw1,7,c
 12713  010C48  D06D               	goto	l10345
 12714                           
 12715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12716                           ;stkvar	_n @ sp[(-56)+32]
 12717  010C4A  0EE8               	movlw	-24
 12718  010C4C  006F FF8C  F02F    	movff	plusw1,btemp+10
 12719  010C52  0EE9               	movlw	-23
 12720  010C54  006F FF8C  F030    	movff	plusw1,btemp+11
 12721  010C5A  0EA5               	movlw	low _dbuf
 12722  010C5C  242F               	addwf	(btemp+10)^0,w,c
 12723  010C5E  6ED9               	movwf	fsr2l,c
 12724  010C60  0E01               	movlw	high _dbuf
 12725  010C62  2030               	addwfc	(btemp+11)^0,w,c
 12726  010C64  6EDA               	movwf	fsr2h,c
 12727  010C66  0E2E               	movlw	46
 12728  010C68  6EDF               	movwf	indf2,c
 12729                           
 12730                           ;stkvar	_n @ sp[(-56)+32]
 12731  010C6A  0EE8               	movlw	-24
 12732  010C6C  50E3               	movf	plusw1,w,c
 12733  010C6E  0F01               	addlw	1
 12734  010C70  6E25               	movwf	btemp^0,c
 12735  010C72  0EE8               	movlw	-24
 12736  010C74  0060  F097  FFE3   	movff	btemp,plusw1
 12737  010C7A  6A25               	clrf	btemp^0,c
 12738  010C7C  0EE9               	movlw	-23
 12739  010C7E  50E3               	movf	plusw1,w,c
 12740  010C80  2025               	addwfc	btemp^0,w,c
 12741  010C82  6E25               	movwf	btemp^0,c
 12742  010C84  0EE9               	movlw	-23
 12743  010C86  0060  F097  FFE3   	movff	btemp,plusw1
 12744                           
 12745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12746                           ;stkvar	_w @ sp[(-56)+38]
 12747  010C8C  50E1               	movf	fsr1l,w,c
 12748  010C8E  0FEE               	addlw	-18
 12749  010C90  6ED9               	movwf	fsr2l,c
 12750  010C92  50E2               	movf	fsr1h,w,c
 12751  010C94  6EDA               	movwf	fsr2h,c
 12752  010C96  0EFF               	movlw	255
 12753  010C98  22DA               	addwfc	fsr2h,f,c
 12754  010C9A  06DE               	decf	postinc2,f,c
 12755  010C9C  0E00               	movlw	0
 12756  010C9E  5ADD               	subwfb	postdec2,f,c
 12757                           
 12758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12759  010CA0  0E01               	movlw	1
 12760  010CA2  6E2F               	movwf	(btemp+10)^0,c
 12761  010CA4  0E00               	movlw	0
 12762  010CA6  6E30               	movwf	(btemp+11)^0,c
 12763                           
 12764                           ;stkvar	_pp @ sp[(-56)+50]
 12765  010CA8  0EFA               	movlw	-6
 12766  010CAA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12767  010CB0  0EFB               	movlw	-5
 12768  010CB2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12769  010CB8  D035               	goto	l10345
 12770  010CBA                     l10337:
 12771                           
 12772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12773                           ;stkvar	_n @ sp[(-56)+32]
 12774  010CBA  0EE8               	movlw	-24
 12775  010CBC  006F FF8C  F02F    	movff	plusw1,btemp+10
 12776  010CC2  0EE9               	movlw	-23
 12777  010CC4  006F FF8C  F030    	movff	plusw1,btemp+11
 12778  010CCA  0EA5               	movlw	low _dbuf
 12779  010CCC  242F               	addwf	(btemp+10)^0,w,c
 12780  010CCE  6ED9               	movwf	fsr2l,c
 12781  010CD0  0E01               	movlw	high _dbuf
 12782  010CD2  2030               	addwfc	(btemp+11)^0,w,c
 12783  010CD4  6EDA               	movwf	fsr2h,c
 12784  010CD6  0E30               	movlw	48
 12785  010CD8  6EDF               	movwf	indf2,c
 12786                           
 12787                           ;stkvar	_n @ sp[(-56)+32]
 12788  010CDA  0EE8               	movlw	-24
 12789  010CDC  50E3               	movf	plusw1,w,c
 12790  010CDE  0F01               	addlw	1
 12791  010CE0  6E25               	movwf	btemp^0,c
 12792  010CE2  0EE8               	movlw	-24
 12793  010CE4  0060  F097  FFE3   	movff	btemp,plusw1
 12794  010CEA  6A25               	clrf	btemp^0,c
 12795  010CEC  0EE9               	movlw	-23
 12796  010CEE  50E3               	movf	plusw1,w,c
 12797  010CF0  2025               	addwfc	btemp^0,w,c
 12798  010CF2  6E25               	movwf	btemp^0,c
 12799  010CF4  0EE9               	movlw	-23
 12800  010CF6  0060  F097  FFE3   	movff	btemp,plusw1
 12801                           
 12802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12803                           ;stkvar	_w @ sp[(-56)+38]
 12804  010CFC  50E1               	movf	fsr1l,w,c
 12805  010CFE  0FEE               	addlw	-18
 12806  010D00  6ED9               	movwf	fsr2l,c
 12807  010D02  50E2               	movf	fsr1h,w,c
 12808  010D04  6EDA               	movwf	fsr2h,c
 12809  010D06  0EFF               	movlw	255
 12810  010D08  22DA               	addwfc	fsr2h,f,c
 12811  010D0A  06DE               	decf	postinc2,f,c
 12812  010D0C  0E00               	movlw	0
 12813  010D0E  5ADD               	subwfb	postdec2,f,c
 12814                           
 12815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12816                           ;stkvar	_t @ sp[(-56)+52]
 12817  010D10  50E1               	movf	fsr1l,w,c
 12818  010D12  0FFC               	addlw	-4
 12819  010D14  6ED9               	movwf	fsr2l,c
 12820  010D16  50E2               	movf	fsr1h,w,c
 12821  010D18  6EDA               	movwf	fsr2h,c
 12822  010D1A  0EFF               	movlw	255
 12823  010D1C  22DA               	addwfc	fsr2h,f,c
 12824  010D1E  06DE               	decf	postinc2,f,c
 12825  010D20  0E00               	movlw	0
 12826  010D22  5ADD               	subwfb	postdec2,f,c
 12827  010D24                     l10345:
 12828                           
 12829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12830                           ;stkvar	_t @ sp[(-56)+52]
 12831  010D24  0EFC               	movlw	-4
 12832  010D26  006F FF8C  F025    	movff	plusw1,btemp
 12833  010D2C  0EFD               	movlw	-3
 12834  010D2E  50E3               	movf	plusw1,w,c
 12835  010D30  1025               	iorwf	btemp^0,w,c
 12836  010D32  A4D8               	btfss	status,2,c
 12837  010D34  D7C2               	goto	l10337
 12838                           
 12839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12840                           ;stkvar	_n @ sp[(-56)+32]
 12841  010D36  0EE8               	movlw	-24
 12842  010D38  006F FF8C  F02F    	movff	plusw1,btemp+10
 12843  010D3E  0EE9               	movlw	-23
 12844  010D40  006F FF8C  F030    	movff	plusw1,btemp+11
 12845  010D46  0EA5               	movlw	low _dbuf
 12846  010D48  242F               	addwf	(btemp+10)^0,w,c
 12847  010D4A  6ED9               	movwf	fsr2l,c
 12848  010D4C  0E01               	movlw	high _dbuf
 12849  010D4E  2030               	addwfc	(btemp+11)^0,w,c
 12850  010D50  6EDA               	movwf	fsr2h,c
 12851                           
 12852                           ;stkvar	_d @ sp[(-56)+44]
 12853  010D52  0EF4               	movlw	-12
 12854  010D54  50E3               	movf	plusw1,w,c
 12855  010D56  0F30               	addlw	48
 12856  010D58  6EDF               	movwf	indf2,c
 12857                           
 12858                           ;stkvar	_n @ sp[(-56)+32]
 12859  010D5A  0EE8               	movlw	-24
 12860  010D5C  50E3               	movf	plusw1,w,c
 12861  010D5E  0F01               	addlw	1
 12862  010D60  6E25               	movwf	btemp^0,c
 12863  010D62  0EE8               	movlw	-24
 12864  010D64  0060  F097  FFE3   	movff	btemp,plusw1
 12865  010D6A  6A25               	clrf	btemp^0,c
 12866  010D6C  0EE9               	movlw	-23
 12867  010D6E  50E3               	movf	plusw1,w,c
 12868  010D70  2025               	addwfc	btemp^0,w,c
 12869  010D72  6E25               	movwf	btemp^0,c
 12870  010D74  0EE9               	movlw	-23
 12871  010D76  0060  F097  FFE3   	movff	btemp,plusw1
 12872                           
 12873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12874                           ;stkvar	_w @ sp[(-56)+38]
 12875  010D7C  50E1               	movf	fsr1l,w,c
 12876  010D7E  0FEE               	addlw	-18
 12877  010D80  6ED9               	movwf	fsr2l,c
 12878  010D82  50E2               	movf	fsr1h,w,c
 12879  010D84  6EDA               	movwf	fsr2h,c
 12880  010D86  0EFF               	movlw	255
 12881  010D88  22DA               	addwfc	fsr2h,f,c
 12882  010D8A  06DE               	decf	postinc2,f,c
 12883  010D8C  0E00               	movlw	0
 12884  010D8E  5ADD               	subwfb	postdec2,f,c
 12885  010D90                     l10353:
 12886                           
 12887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12888                           ;stkvar	_u @ sp[(-56)+12]
 12889  010D90  0ED4               	movlw	-44
 12890  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12891  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12892  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12893  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12894                           
 12895                           ;stkvar	_l @ sp[(-60)+20]
 12896  010DAA  0ED8               	movlw	-40
 12897  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12898  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12899  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12900  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12901  010DC4  EC08  F093         	call	___flmul	;wreg free
 12902  010DC8  0060  F097  FFE6   	movff	btemp,postinc1
 12903  010DCE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12904  010DD4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12905  010DDA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12906                           
 12907                           ;stkvar	_h @ sp[(-60)+24]
 12908  010DE0  0EDC               	movlw	-36
 12909  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12910  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12911  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12912  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12913  010DFA  ECBC  F0C2         	call	___flsub	;wreg free
 12914                           
 12915                           ;stkvar	_h @ sp[(-56)+24]
 12916  010DFE  0EE0               	movlw	-32
 12917  010E00  0060  F097  FFE3   	movff	btemp,plusw1
 12918  010E06  0EE1               	movlw	-31
 12919  010E08  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12920  010E0E  0EE2               	movlw	-30
 12921  010E10  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12922  010E16  0EE3               	movlw	-29
 12923  010E18  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12924                           
 12925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12926  010E1E  0E00               	movlw	0
 12927  010E20  6EE6               	movwf	postinc1,c
 12928  010E22  0E00               	movlw	0
 12929  010E24  6EE6               	movwf	postinc1,c
 12930  010E26  0E20               	movlw	32
 12931  010E28  6EE6               	movwf	postinc1,c
 12932  010E2A  0E41               	movlw	65
 12933  010E2C  6EE6               	movwf	postinc1,c
 12934                           
 12935                           ;stkvar	_u @ sp[(-60)+12]
 12936  010E2E  0ED0               	movlw	-48
 12937  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12938  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12939  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12940  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12941  010E48  ECFB  F09A         	call	___fldiv	;wreg free
 12942                           
 12943                           ;stkvar	_u @ sp[(-56)+12]
 12944  010E4C  0ED4               	movlw	-44
 12945  010E4E  0060  F097  FFE3   	movff	btemp,plusw1
 12946  010E54  0ED5               	movlw	-43
 12947  010E56  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12948  010E5C  0ED6               	movlw	-42
 12949  010E5E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12950  010E64  0ED7               	movlw	-41
 12951  010E66  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12952                           
 12953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12954                           ;stkvar	_ne @ sp[(-56)+46]
 12955  010E6C  50E1               	movf	fsr1l,w,c
 12956  010E6E  0FF6               	addlw	-10
 12957  010E70  6ED9               	movwf	fsr2l,c
 12958  010E72  50E2               	movf	fsr1h,w,c
 12959  010E74  6EDA               	movwf	fsr2h,c
 12960  010E76  0EFF               	movlw	255
 12961  010E78  22DA               	addwfc	fsr2h,f,c
 12962  010E7A  06DE               	decf	postinc2,f,c
 12963  010E7C  0E00               	movlw	0
 12964  010E7E  5ADD               	subwfb	postdec2,f,c
 12965                           
 12966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12967                           ;stkvar	_i @ sp[(-56)+36]
 12968  010E80  0EEC               	movlw	-20
 12969  010E82  50E3               	movf	plusw1,w,c
 12970  010E84  0F01               	addlw	1
 12971  010E86  6E25               	movwf	btemp^0,c
 12972  010E88  0EEC               	movlw	-20
 12973  010E8A  0060  F097  FFE3   	movff	btemp,plusw1
 12974  010E90  6A25               	clrf	btemp^0,c
 12975  010E92  0EED               	movlw	-19
 12976  010E94  50E3               	movf	plusw1,w,c
 12977  010E96  2025               	addwfc	btemp^0,w,c
 12978  010E98  6E25               	movwf	btemp^0,c
 12979  010E9A  0EED               	movlw	-19
 12980  010E9C  0060  F097  FFE3   	movff	btemp,plusw1
 12981  010EA2                     l10361:
 12982                           
 12983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12984                           ;stkvar	_m @ sp[(-56)+48]
 12985                           ;stkvar	_i @ sp[(-56)+36]
 12986  010EA2  50E1               	movf	fsr1l,w,c
 12987  010EA4  0FEC               	addlw	-20
 12988  010EA6  6ED9               	movwf	fsr2l,c
 12989  010EA8  50E2               	movf	fsr1h,w,c
 12990  010EAA  6EDA               	movwf	fsr2h,c
 12991  010EAC  0EFF               	movlw	255
 12992  010EAE  22DA               	addwfc	fsr2h,f,c
 12993  010EB0  0EF8               	movlw	-8
 12994  010EB2  50E3               	movf	plusw1,w,c
 12995  010EB4  5CDE               	subwf	postinc2,w,c
 12996  010EB6  50DE               	movf	postinc2,w,c
 12997  010EB8  0A80               	xorlw	128
 12998  010EBA  6E25               	movwf	btemp^0,c
 12999  010EBC  0EF9               	movlw	-7
 13000  010EBE  50E3               	movf	plusw1,w,c
 13001  010EC0  0A80               	xorlw	128
 13002  010EC2  5825               	subwfb	btemp^0,w,c
 13003  010EC4  B0D8               	btfsc	status,0,c
 13004  010EC6  D00E               	goto	u9890
 13005                           
 13006                           ;stkvar	_n @ sp[(-56)+32]
 13007  010EC8  0EE9               	movlw	-23
 13008  010ECA  BEE3               	btfsc	plusw1,7,c
 13009  010ECC  D633               	goto	l10311
 13010  010ECE  0EE9               	movlw	-23
 13011  010ED0  50E3               	movf	plusw1,w,c
 13012  010ED2  E108               	bnz	u9890
 13013  010ED4  0EE8               	movlw	-24
 13014  010ED6  006F FF8C  F025    	movff	plusw1,btemp
 13015  010EDC  0E4B               	movlw	75
 13016  010EDE  5E25               	subwf	btemp^0,f,c
 13017  010EE0  A0D8               	btfss	status,0,c
 13018  010EE2  D628               	goto	l10311
 13019  010EE4                     u9890:
 13020                           
 13021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13022                           ;stkvar	_pp @ sp[(-56)+50]
 13023  010EE4  0EFA               	movlw	-6
 13024  010EE6  006F FF8C  F025    	movff	plusw1,btemp
 13025  010EEC  0EFB               	movlw	-5
 13026  010EEE  50E3               	movf	plusw1,w,c
 13027  010EF0  1025               	iorwf	btemp^0,w,c
 13028  010EF2  B4D8               	btfsc	status,2,c
 13029  010EF4  A80E               	btfss	_flags^0,4,c
 13030  010EF6  D021               	goto	l10373
 13031                           
 13032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13033                           ;stkvar	_n @ sp[(-56)+32]
 13034  010EF8  0EE8               	movlw	-24
 13035  010EFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13036  010F00  0EE9               	movlw	-23
 13037  010F02  006F FF8C  F030    	movff	plusw1,btemp+11
 13038  010F08  0EA5               	movlw	low _dbuf
 13039  010F0A  242F               	addwf	(btemp+10)^0,w,c
 13040  010F0C  6ED9               	movwf	fsr2l,c
 13041  010F0E  0E01               	movlw	high _dbuf
 13042  010F10  2030               	addwfc	(btemp+11)^0,w,c
 13043  010F12  6EDA               	movwf	fsr2h,c
 13044  010F14  0E2E               	movlw	46
 13045  010F16  6EDF               	movwf	indf2,c
 13046                           
 13047                           ;stkvar	_n @ sp[(-56)+32]
 13048  010F18  0EE8               	movlw	-24
 13049  010F1A  50E3               	movf	plusw1,w,c
 13050  010F1C  0F01               	addlw	1
 13051  010F1E  6E25               	movwf	btemp^0,c
 13052  010F20  0EE8               	movlw	-24
 13053  010F22  0060  F097  FFE3   	movff	btemp,plusw1
 13054  010F28  6A25               	clrf	btemp^0,c
 13055  010F2A  0EE9               	movlw	-23
 13056  010F2C  50E3               	movf	plusw1,w,c
 13057  010F2E  2025               	addwfc	btemp^0,w,c
 13058  010F30  6E25               	movwf	btemp^0,c
 13059  010F32  0EE9               	movlw	-23
 13060  010F34  0060  F097  FFE3   	movff	btemp,plusw1
 13061  010F3A                     l10373:
 13062                           
 13063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13064                           ;stkvar	_n @ sp[(-56)+32]
 13065  010F3A  0EE8               	movlw	-24
 13066  010F3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 13067  010F42  0EE9               	movlw	-23
 13068  010F44  006F FF8C  F030    	movff	plusw1,btemp+11
 13069  010F4A  0EA5               	movlw	low _dbuf
 13070  010F4C  242F               	addwf	(btemp+10)^0,w,c
 13071  010F4E  6ED9               	movwf	fsr2l,c
 13072  010F50  0E01               	movlw	high _dbuf
 13073  010F52  2030               	addwfc	(btemp+11)^0,w,c
 13074  010F54  6EDA               	movwf	fsr2h,c
 13075  010F56  0E00               	movlw	0
 13076  010F58  6EDF               	movwf	indf2,c
 13077                           
 13078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13079                           ;stkvar	_nmode @ sp[(-56)+55]
 13080  010F5A  0EFF               	movlw	-1
 13081  010F5C  006F FF8C  F025    	movff	plusw1,btemp
 13082  010F62  0E65               	movlw	101
 13083  010F64  1825               	xorwf	btemp^0,w,c
 13084  010F66  A4D8               	btfss	status,2,c
 13085  010F68  EF16  F081         	goto	l10177
 13086                           
 13087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13088  010F6C  0E4F               	movlw	79
 13089  010F6E  6E2F               	movwf	(btemp+10)^0,c
 13090  010F70  0E00               	movlw	0
 13091  010F72  6E30               	movwf	(btemp+11)^0,c
 13092                           
 13093                           ;stkvar	_i @ sp[(-56)+36]
 13094  010F74  0EEC               	movlw	-20
 13095  010F76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13096  010F7C  0EED               	movlw	-19
 13097  010F7E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13098                           
 13099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13100                           ;stkvar	_i @ sp[(-56)+36]
 13101  010F84  0EEC               	movlw	-20
 13102  010F86  006F FF8C  F02F    	movff	plusw1,btemp+10
 13103  010F8C  0EED               	movlw	-19
 13104  010F8E  006F FF8C  F030    	movff	plusw1,btemp+11
 13105  010F94  0EA5               	movlw	low _dbuf
 13106  010F96  242F               	addwf	(btemp+10)^0,w,c
 13107  010F98  6ED9               	movwf	fsr2l,c
 13108  010F9A  0E01               	movlw	high _dbuf
 13109  010F9C  2030               	addwfc	(btemp+11)^0,w,c
 13110  010F9E  6EDA               	movwf	fsr2h,c
 13111  010FA0  0E00               	movlw	0
 13112  010FA2  6EDF               	movwf	indf2,c
 13113                           
 13114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13115                           ;stkvar	_sign @ sp[(-56)+42]
 13116  010FA4  0EF2               	movlw	-14
 13117  010FA6  6AE3               	clrf	plusw1,c
 13118  010FA8  0EF3               	movlw	-13
 13119  010FAA  6AE3               	clrf	plusw1,c
 13120                           
 13121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13122                           ;stkvar	_e @ sp[(-56)+34]
 13123  010FAC  0EEB               	movlw	-21
 13124  010FAE  AEE3               	btfss	plusw1,7,c
 13125  010FB0  D012               	goto	l10387
 13126                           
 13127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13128  010FB2  0E01               	movlw	1
 13129  010FB4  6E2F               	movwf	(btemp+10)^0,c
 13130  010FB6  0E00               	movlw	0
 13131  010FB8  6E30               	movwf	(btemp+11)^0,c
 13132                           
 13133                           ;stkvar	_sign @ sp[(-56)+42]
 13134  010FBA  0EF2               	movlw	-14
 13135  010FBC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13136  010FC2  0EF3               	movlw	-13
 13137  010FC4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13138                           
 13139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13140                           ;stkvar	_e @ sp[(-56)+34]
 13141                           ;stkvar	_e @ sp[(-56)+34]
 13142  010FCA  0EEA               	movlw	-22
 13143  010FCC  6CE3               	negf	plusw1,c
 13144  010FCE  0EEB               	movlw	-21
 13145  010FD0  1EE3               	comf	plusw1,f,c
 13146  010FD2  B0D8               	btfsc	status,0,c
 13147  010FD4  2AE3               	incf	plusw1,f,c
 13148  010FD6                     l10387:
 13149                           
 13150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13151  010FD6  0E02               	movlw	2
 13152  010FD8  6E2F               	movwf	(btemp+10)^0,c
 13153  010FDA  0E00               	movlw	0
 13154  010FDC  6E30               	movwf	(btemp+11)^0,c
 13155                           
 13156                           ;stkvar	_p @ sp[(-56)+40]
 13157  010FDE  0EF0               	movlw	-16
 13158  010FE0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13159  010FE6  0EF1               	movlw	-15
 13160  010FE8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13161                           
 13162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13163  010FEE  D051               	goto	l10399
 13164  010FF0                     l10389:
 13165                           
 13166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13167                           ;stkvar	_i @ sp[(-56)+36]
 13168  010FF0  50E1               	movf	fsr1l,w,c
 13169  010FF2  0FEC               	addlw	-20
 13170  010FF4  6ED9               	movwf	fsr2l,c
 13171  010FF6  50E2               	movf	fsr1h,w,c
 13172  010FF8  6EDA               	movwf	fsr2h,c
 13173  010FFA  0EFF               	movlw	255
 13174  010FFC  22DA               	addwfc	fsr2h,f,c
 13175  010FFE  06DE               	decf	postinc2,f,c
 13176  011000  0E00               	movlw	0
 13177  011002  5ADD               	subwfb	postdec2,f,c
 13178                           
 13179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13180                           ;stkvar	_i @ sp[(-56)+36]
 13181  011004  0EEC               	movlw	-20
 13182  011006  006F FF8C  F02F    	movff	plusw1,btemp+10
 13183  01100C  0EED               	movlw	-19
 13184  01100E  006F FF8C  F030    	movff	plusw1,btemp+11
 13185  011014  0EA5               	movlw	low _dbuf
 13186  011016  242F               	addwf	(btemp+10)^0,w,c
 13187  011018  6ED9               	movwf	fsr2l,c
 13188  01101A  0E01               	movlw	high _dbuf
 13189  01101C  2030               	addwfc	(btemp+11)^0,w,c
 13190  01101E  6EDA               	movwf	fsr2h,c
 13191  011020  0E0A               	movlw	10
 13192  011022  6EE6               	movwf	postinc1,c
 13193  011024  0E00               	movlw	0
 13194  011026  6EE6               	movwf	postinc1,c
 13195                           
 13196                           ;stkvar	_e @ sp[(-58)+34]
 13197  011028  0EE8               	movlw	-24
 13198  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13199  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13200  011036  EC3F  F0B6         	call	___awmod	;wreg free
 13201  01103A  5025               	movf	btemp^0,w,c
 13202  01103C  0F30               	addlw	48
 13203  01103E  6EDF               	movwf	indf2,c
 13204                           
 13205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13206  011040  0E0A               	movlw	10
 13207  011042  6EE6               	movwf	postinc1,c
 13208  011044  0E00               	movlw	0
 13209  011046  6EE6               	movwf	postinc1,c
 13210                           
 13211                           ;stkvar	_e @ sp[(-58)+34]
 13212  011048  0EE8               	movlw	-24
 13213  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13214  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13215  011056  ECCB  F0B3         	call	___awdiv	;wreg free
 13216                           
 13217                           ;stkvar	_e @ sp[(-56)+34]
 13218  01105A  0EEA               	movlw	-22
 13219  01105C  0060  F097  FFE3   	movff	btemp,plusw1
 13220  011062  0EEB               	movlw	-21
 13221  011064  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13222                           
 13223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13224                           ;stkvar	_p @ sp[(-56)+40]
 13225  01106A  50E1               	movf	fsr1l,w,c
 13226  01106C  0FF0               	addlw	-16
 13227  01106E  6ED9               	movwf	fsr2l,c
 13228  011070  50E2               	movf	fsr1h,w,c
 13229  011072  6EDA               	movwf	fsr2h,c
 13230  011074  0EFF               	movlw	255
 13231  011076  22DA               	addwfc	fsr2h,f,c
 13232  011078  06DE               	decf	postinc2,f,c
 13233  01107A  0E00               	movlw	0
 13234  01107C  5ADD               	subwfb	postdec2,f,c
 13235                           
 13236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13237                           ;stkvar	_w @ sp[(-56)+38]
 13238  01107E  50E1               	movf	fsr1l,w,c
 13239  011080  0FEE               	addlw	-18
 13240  011082  6ED9               	movwf	fsr2l,c
 13241  011084  50E2               	movf	fsr1h,w,c
 13242  011086  6EDA               	movwf	fsr2h,c
 13243  011088  0EFF               	movlw	255
 13244  01108A  22DA               	addwfc	fsr2h,f,c
 13245  01108C  06DE               	decf	postinc2,f,c
 13246  01108E  0E00               	movlw	0
 13247  011090  5ADD               	subwfb	postdec2,f,c
 13248  011092                     l10399:
 13249                           
 13250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13251                           ;stkvar	_e @ sp[(-56)+34]
 13252  011092  0EEA               	movlw	-22
 13253  011094  006F FF8C  F025    	movff	plusw1,btemp
 13254  01109A  0EEB               	movlw	-21
 13255  01109C  50E3               	movf	plusw1,w,c
 13256  01109E  1025               	iorwf	btemp^0,w,c
 13257  0110A0  A4D8               	btfss	status,2,c
 13258  0110A2  D7A6               	goto	l10389
 13259                           
 13260                           ;stkvar	_p @ sp[(-56)+40]
 13261  0110A4  0EF1               	movlw	-15
 13262  0110A6  BEE3               	btfsc	plusw1,7,c
 13263  0110A8  D007               	goto	u9950
 13264  0110AA  0EF1               	movlw	-15
 13265  0110AC  50E3               	movf	plusw1,w,c
 13266  0110AE  E1A0               	bnz	l10389
 13267  0110B0  0EF0               	movlw	-16
 13268  0110B2  04E3               	decf	plusw1,w,c
 13269  0110B4  B0D8               	btfsc	status,0,c
 13270  0110B6  D79C               	goto	l10389
 13271  0110B8                     u9950:
 13272                           
 13273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13274                           ;stkvar	_i @ sp[(-56)+36]
 13275  0110B8  50E1               	movf	fsr1l,w,c
 13276  0110BA  0FEC               	addlw	-20
 13277  0110BC  6ED9               	movwf	fsr2l,c
 13278  0110BE  50E2               	movf	fsr1h,w,c
 13279  0110C0  6EDA               	movwf	fsr2h,c
 13280  0110C2  0EFF               	movlw	255
 13281  0110C4  22DA               	addwfc	fsr2h,f,c
 13282  0110C6  06DE               	decf	postinc2,f,c
 13283  0110C8  0E00               	movlw	0
 13284  0110CA  5ADD               	subwfb	postdec2,f,c
 13285                           
 13286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13287                           ;stkvar	_sign @ sp[(-56)+42]
 13288  0110CC  0EF2               	movlw	-14
 13289  0110CE  006F FF8C  F025    	movff	plusw1,btemp
 13290  0110D4  0EF3               	movlw	-13
 13291  0110D6  50E3               	movf	plusw1,w,c
 13292  0110D8  1025               	iorwf	btemp^0,w,c
 13293  0110DA  A4D8               	btfss	status,2,c
 13294  0110DC  D002               	goto	l10409
 13295  0110DE  0E2B               	movlw	43
 13296  0110E0  D001               	goto	L11
 13297  0110E2                     l10409:
 13298  0110E2  0E2D               	movlw	45
 13299  0110E4                     L11:
 13300  0110E4  6E2F               	movwf	(btemp+10)^0,c
 13301  0110E6  0E00               	movlw	0
 13302  0110E8  6E30               	movwf	(btemp+11)^0,c
 13303                           
 13304                           ;stkvar	_efgtoa$4968 @ sp[(-56)+4]
 13305  0110EA  0ECC               	movlw	-52
 13306  0110EC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13307  0110F2  0ECD               	movlw	-51
 13308  0110F4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13309                           
 13310                           ;stkvar	_efgtoa$4968 @ sp[(-56)+4]
 13311                           ;stkvar	_i @ sp[(-56)+36]
 13312  0110FA  0EEC               	movlw	-20
 13313  0110FC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13314  011102  0EED               	movlw	-19
 13315  011104  006F FF8C  F030    	movff	plusw1,btemp+11
 13316  01110A  0EA5               	movlw	low _dbuf
 13317  01110C  242F               	addwf	(btemp+10)^0,w,c
 13318  01110E  6ED9               	movwf	fsr2l,c
 13319  011110  0E01               	movlw	high _dbuf
 13320  011112  2030               	addwfc	(btemp+11)^0,w,c
 13321  011114  6EDA               	movwf	fsr2h,c
 13322  011116  0ECC               	movlw	-52
 13323  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13324                           
 13325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13326                           ;stkvar	_w @ sp[(-56)+38]
 13327  01111E  50E1               	movf	fsr1l,w,c
 13328  011120  0FEE               	addlw	-18
 13329  011122  6ED9               	movwf	fsr2l,c
 13330  011124  50E2               	movf	fsr1h,w,c
 13331  011126  6EDA               	movwf	fsr2h,c
 13332  011128  0EFF               	movlw	255
 13333  01112A  22DA               	addwfc	fsr2h,f,c
 13334  01112C  06DE               	decf	postinc2,f,c
 13335  01112E  0E00               	movlw	0
 13336  011130  5ADD               	subwfb	postdec2,f,c
 13337                           
 13338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13339                           ;stkvar	_i @ sp[(-56)+36]
 13340  011132  50E1               	movf	fsr1l,w,c
 13341  011134  0FEC               	addlw	-20
 13342  011136  6ED9               	movwf	fsr2l,c
 13343  011138  50E2               	movf	fsr1h,w,c
 13344  01113A  6EDA               	movwf	fsr2h,c
 13345  01113C  0EFF               	movlw	255
 13346  01113E  22DA               	addwfc	fsr2h,f,c
 13347  011140  06DE               	decf	postinc2,f,c
 13348  011142  0E00               	movlw	0
 13349  011144  5ADD               	subwfb	postdec2,f,c
 13350  011146  0EBF               	movlw	191
 13351  011148  6E2F               	movwf	(btemp+10)^0,c
 13352  01114A  0EFF               	movlw	255
 13353  01114C  6E30               	movwf	(btemp+11)^0,c
 13354                           
 13355                           ;stkvar	_c @ sp[(-56)+-7]
 13356  01114E  0EC1               	movlw	-63
 13357  011150  50E3               	movf	plusw1,w,c
 13358  011152  6E2D               	movwf	(btemp+8)^0,c
 13359  011154  6A2E               	clrf	(btemp+9)^0,c
 13360  011156  502F               	movf	(btemp+10)^0,w,c
 13361  011158  262D               	addwf	(btemp+8)^0,f,c
 13362  01115A  5030               	movf	(btemp+11)^0,w,c
 13363  01115C  222E               	addwfc	(btemp+9)^0,f,c
 13364  01115E  502E               	movf	(btemp+9)^0,w,c
 13365  011160  E106               	bnz	u9970
 13366  011162  0E1A               	movlw	26
 13367  011164  5C2D               	subwf	(btemp+8)^0,w,c
 13368  011166  B0D8               	btfsc	status,0,c
 13369  011168  D002               	goto	u9970
 13370  01116A  0E01               	movlw	1
 13371  01116C  D001               	goto	u9980
 13372  01116E                     u9970:
 13373  01116E  0E00               	movlw	0
 13374  011170                     u9980:
 13375  011170  6E2F               	movwf	(btemp+10)^0,c
 13376  011172  6A30               	clrf	(btemp+11)^0,c
 13377                           
 13378                           ;stkvar	_efgtoa$4970 @ sp[(-56)+0]
 13379  011174  0EC8               	movlw	-56
 13380  011176  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13381  01117C  0EC9               	movlw	-55
 13382  01117E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13383                           
 13384                           ;stkvar	_efgtoa$4970 @ sp[(-56)+0]
 13385  011184  0EC8               	movlw	-56
 13386  011186  006F FF8C  F025    	movff	plusw1,btemp
 13387  01118C  0EC9               	movlw	-55
 13388  01118E  50E3               	movf	plusw1,w,c
 13389  011190  1025               	iorwf	btemp^0,w,c
 13390  011192  A4D8               	btfss	status,2,c
 13391  011194  D002               	goto	l10425
 13392  011196  0E65               	movlw	101
 13393  011198  D001               	goto	L12
 13394  01119A                     l10425:
 13395  01119A  0E45               	movlw	69
 13396  01119C                     L12:
 13397  01119C  6E2F               	movwf	(btemp+10)^0,c
 13398  01119E  0E00               	movlw	0
 13399  0111A0  6E30               	movwf	(btemp+11)^0,c
 13400                           
 13401                           ;stkvar	_efgtoa$4969 @ sp[(-56)+2]
 13402  0111A2  0ECA               	movlw	-54
 13403  0111A4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13404  0111AA  0ECB               	movlw	-53
 13405  0111AC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13406                           
 13407                           ;stkvar	_efgtoa$4969 @ sp[(-56)+2]
 13408                           ;stkvar	_i @ sp[(-56)+36]
 13409  0111B2  0EEC               	movlw	-20
 13410  0111B4  006F FF8C  F02F    	movff	plusw1,btemp+10
 13411  0111BA  0EED               	movlw	-19
 13412  0111BC  006F FF8C  F030    	movff	plusw1,btemp+11
 13413  0111C2  0EA5               	movlw	low _dbuf
 13414  0111C4  242F               	addwf	(btemp+10)^0,w,c
 13415  0111C6  6ED9               	movwf	fsr2l,c
 13416  0111C8  0E01               	movlw	high _dbuf
 13417  0111CA  2030               	addwfc	(btemp+11)^0,w,c
 13418  0111CC  6EDA               	movwf	fsr2h,c
 13419  0111CE  0ECA               	movlw	-54
 13420  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13421                           
 13422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13423                           ;stkvar	_w @ sp[(-56)+38]
 13424  0111D6  50E1               	movf	fsr1l,w,c
 13425  0111D8  0FEE               	addlw	-18
 13426  0111DA  6ED9               	movwf	fsr2l,c
 13427  0111DC  50E2               	movf	fsr1h,w,c
 13428  0111DE  6EDA               	movwf	fsr2h,c
 13429  0111E0  0EFF               	movlw	255
 13430  0111E2  22DA               	addwfc	fsr2h,f,c
 13431  0111E4  06DE               	decf	postinc2,f,c
 13432  0111E6  0E00               	movlw	0
 13433  0111E8  5ADD               	subwfb	postdec2,f,c
 13434                           
 13435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13436                           ;stkvar	_i @ sp[(-56)+36]
 13437  0111EA  0EEC               	movlw	-20
 13438  0111EC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13439  0111F2  0EED               	movlw	-19
 13440  0111F4  006F FF8C  F030    	movff	plusw1,btemp+11
 13441  0111FA  0EA5               	movlw	low _dbuf
 13442  0111FC  242F               	addwf	(btemp+10)^0,w,c
 13443  0111FE  6E2D               	movwf	(btemp+8)^0,c
 13444  011200  0E01               	movlw	high _dbuf
 13445  011202  2030               	addwfc	(btemp+11)^0,w,c
 13446  011204  6E2E               	movwf	(btemp+9)^0,c
 13447  011206  0060  F0B7  FFE6   	movff	btemp+8,postinc1
 13448  01120C  0060  F0BB  FFE6   	movff	btemp+9,postinc1
 13449                           
 13450                           ;stkvar	_n @ sp[(-58)+32]
 13451  011212  0EA5               	movlw	low _dbuf
 13452  011214  6E2F               	movwf	(btemp+10)^0,c
 13453  011216  0E01               	movlw	high _dbuf
 13454  011218  6E30               	movwf	(btemp+11)^0,c
 13455  01121A  0EE6               	movlw	-26
 13456  01121C  50E3               	movf	plusw1,w,c
 13457  01121E  262F               	addwf	(btemp+10)^0,f,c
 13458  011220  0EE7               	movlw	-25
 13459  011222  50E3               	movf	plusw1,w,c
 13460  011224  2230               	addwfc	(btemp+11)^0,f,c
 13461  011226  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 13462  01122C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 13463  011232  ECD0  F0B9         	call	_strcpy	;wreg free
 13464  011236  EF16  F081         	goto	l10177
 13465  01123A                     l2038:
 13466                           
 13467                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13468  01123A  0EC1               	movlw	193
 13469  01123C  26E1               	addwf	fsr1l,f,c
 13470  01123E  0EFF               	movlw	255
 13471  011240  22E2               	addwfc	fsr1h,f,c
 13472  011242  0012               	return		;funcret
 13473  011244                     __end_of_efgtoa:
 13474                           	opt callstack 0
 13475                           
 13476 ;; *************** function _tolower *****************
 13477 ;; Defined at:
 13478 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13479 ;; Parameters:    Size  Location     Type
 13480 ;;  c               2  [STACK] int 
 13481 ;; Auto vars:     Size  Location     Type
 13482 ;;		None
 13483 ;; Return value:  Size  Location     Type
 13484 ;;                  2  [STACK] int 
 13485 ;; Registers used:
 13486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13487 ;; Tracked objects:
 13488 ;;		On entry : 0/0
 13489 ;;		On exit  : 0/0
 13490 ;;		Unchanged: 0/0
 13491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13496 ;;Total ram usage:        0 bytes
 13497 ;; Hardware stack levels used:    1
 13498 ;; Hardware stack levels required when called:   11
 13499 ;; This function calls:
 13500 ;;		_isupper
 13501 ;; This function is called by:
 13502 ;;		_efgtoa
 13503 ;;		_vfpfcnvrt
 13504 ;; This function uses a reentrant model
 13505 ;;
 13506                           
 13507                           	psect	text49
 13508  017E0E                     __ptext49:
 13509                           	opt callstack 0
 13510  017E0E                     _tolower:
 13511                           	opt callstack 0
 13512                           
 13513                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13514  017E0E  52E6               	movf	postinc1,f,c
 13515  017E10  52E6               	movf	postinc1,f,c
 13516                           
 13517                           ;stkvar	_c @ sp[(-2)+-2]
 13518                           
 13519                           ;incstack = 0
 13520  017E12  0EFC               	movlw	-4
 13521  017E14  50E3               	movf	plusw1,w,c
 13522  017E16  0FBF               	addlw	191
 13523  017E18  6E2F               	movwf	(btemp+10)^0,c
 13524  017E1A  0EFD               	movlw	-3
 13525  017E1C  006F FF8C  F030    	movff	plusw1,btemp+11
 13526  017E22  0EFF               	movlw	255
 13527  017E24  2230               	addwfc	(btemp+11)^0,f,c
 13528  017E26  5030               	movf	(btemp+11)^0,w,c
 13529  017E28  E106               	bnz	u4870
 13530  017E2A  0E1A               	movlw	26
 13531  017E2C  5C2F               	subwf	(btemp+10)^0,w,c
 13532  017E2E  B0D8               	btfsc	status,0,c
 13533  017E30  D002               	goto	u4870
 13534  017E32  0E01               	movlw	1
 13535  017E34  D001               	goto	u4880
 13536  017E36                     u4870:
 13537  017E36  0E00               	movlw	0
 13538  017E38                     u4880:
 13539  017E38  6E2F               	movwf	(btemp+10)^0,c
 13540  017E3A  6A30               	clrf	(btemp+11)^0,c
 13541                           
 13542                           ;stkvar	_tolower$5636 @ sp[(-2)+0]
 13543  017E3C  0EFE               	movlw	-2
 13544  017E3E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13545  017E44  0EFF               	movlw	-1
 13546  017E46  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13547                           
 13548                           ;stkvar	_tolower$5636 @ sp[(-2)+0]
 13549  017E4C  0EFE               	movlw	-2
 13550  017E4E  006F FF8C  F025    	movff	plusw1,btemp
 13551  017E54  0EFF               	movlw	-1
 13552  017E56  50E3               	movf	plusw1,w,c
 13553  017E58  1025               	iorwf	btemp^0,w,c
 13554  017E5A  B4D8               	btfsc	status,2,c
 13555  017E5C  D00D               	goto	l6671
 13556                           
 13557                           ;stkvar	_c @ sp[(-2)+-2]
 13558  017E5E  0EFC               	movlw	-4
 13559  017E60  006F FF8C  F025    	movff	plusw1,btemp
 13560  017E66  0EFD               	movlw	-3
 13561  017E68  006F FF8C  F026    	movff	plusw1,btemp+1
 13562  017E6E  0E20               	movlw	32
 13563  017E70  1225               	iorwf	btemp^0,f,c
 13564  017E72  0E00               	movlw	0
 13565  017E74  1226               	iorwf	(btemp+1)^0,f,c
 13566  017E76  D008               	goto	l3061
 13567  017E78                     l6671:
 13568                           
 13569                           ;stkvar	_c @ sp[(-2)+-2]
 13570  017E78  0EFC               	movlw	-4
 13571  017E7A  006F FF8C  F025    	movff	plusw1,btemp
 13572  017E80  0EFD               	movlw	-3
 13573  017E82  006F FF8C  F026    	movff	plusw1,btemp+1
 13574  017E88                     l3061:
 13575                           
 13576                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13577  017E88  52E5               	movf	postdec1,f,c
 13578  017E8A  52E5               	movf	postdec1,f,c
 13579  017E8C  52E5               	movf	postdec1,f,c
 13580  017E8E  52E5               	movf	postdec1,f,c
 13581  017E90  0012               	return		;funcret
 13582  017E92                     __end_of_tolower:
 13583                           	opt callstack 0
 13584                           
 13585 ;; *************** function _isupper *****************
 13586 ;; Defined at:
 13587 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;  c               2  [STACK] int 
 13590 ;; Auto vars:     Size  Location     Type
 13591 ;;		None
 13592 ;; Return value:  Size  Location     Type
 13593 ;;                  2  [STACK] int 
 13594 ;; Registers used:
 13595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13596 ;; Tracked objects:
 13597 ;;		On entry : 0/0
 13598 ;;		On exit  : 0/0
 13599 ;;		Unchanged: 0/0
 13600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13605 ;;Total ram usage:        0 bytes
 13606 ;; Hardware stack levels used:    1
 13607 ;; Hardware stack levels required when called:   10
 13608 ;; This function calls:
 13609 ;;		Nothing
 13610 ;; This function is called by:
 13611 ;;		_efgtoa
 13612 ;;		_xtoa
 13613 ;;		_vfpfcnvrt
 13614 ;;		_tolower
 13615 ;; This function uses a reentrant model
 13616 ;;
 13617                           
 13618                           	psect	text50
 13619  018980                     __ptext50:
 13620                           	opt callstack 0
 13621  018980                     _isupper:
 13622                           	opt callstack 13
 13623                           
 13624                           ;stkvar	_c @ sp[(0)+-2]
 13625                           
 13626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13627                           ;incstack = 0
 13628  018980  0EFE               	movlw	-2
 13629  018982  50E3               	movf	plusw1,w,c
 13630  018984  0FBF               	addlw	191
 13631  018986  6E2F               	movwf	(btemp+10)^0,c
 13632  018988  0EFF               	movlw	-1
 13633  01898A  006F FF8C  F030    	movff	plusw1,btemp+11
 13634  018990  0EFF               	movlw	255
 13635  018992  2230               	addwfc	(btemp+11)^0,f,c
 13636  018994  5030               	movf	(btemp+11)^0,w,c
 13637  018996  E106               	bnz	u4690
 13638  018998  0E1A               	movlw	26
 13639  01899A  5C2F               	subwf	(btemp+10)^0,w,c
 13640  01899C  B0D8               	btfsc	status,0,c
 13641  01899E  D002               	goto	u4690
 13642  0189A0  0E01               	movlw	1
 13643  0189A2  D001               	goto	u4700
 13644  0189A4                     u4690:
 13645  0189A4  0E00               	movlw	0
 13646  0189A6                     u4700:
 13647  0189A6  6E25               	movwf	btemp^0,c
 13648  0189A8  6A26               	clrf	(btemp+1)^0,c
 13649                           
 13650                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13651  0189AA  52E5               	movf	postdec1,f,c
 13652  0189AC  52E5               	movf	postdec1,f,c
 13653  0189AE  0012               	return		;funcret
 13654  0189B0                     __end_of_isupper:
 13655                           	opt callstack 0
 13656                           
 13657 ;; *************** function _strcpy *****************
 13658 ;; Defined at:
 13659 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;  dest            2  [STACK] PTR unsigned char 
 13662 ;;		 -> dbuf(80), 
 13663 ;;  src             2  [STACK] PTR const unsigned char 
 13664 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13665 ;;		 -> dbuf(80), 
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;  d               2  [STACK] PTR unsigned char 
 13668 ;;		 -> dbuf(80), 
 13669 ;;  s               2  [STACK] PTR const unsigned char 
 13670 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13671 ;;		 -> dbuf(80), 
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  2  [STACK] PTR unsigned char 
 13674 ;; Registers used:
 13675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13676 ;; Tracked objects:
 13677 ;;		On entry : 0/0
 13678 ;;		On exit  : 0/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13685 ;;Total ram usage:        0 bytes
 13686 ;; Hardware stack levels used:    1
 13687 ;; Hardware stack levels required when called:   10
 13688 ;; This function calls:
 13689 ;;		Nothing
 13690 ;; This function is called by:
 13691 ;;		_efgtoa
 13692 ;; This function uses a reentrant model
 13693 ;;
 13694                           
 13695                           	psect	text51
 13696  0173A0                     __ptext51:
 13697                           	opt callstack 0
 13698  0173A0                     _strcpy:
 13699                           	opt callstack 0
 13700                           
 13701                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13702  0173A0  52E6               	movf	postinc1,f,c
 13703  0173A2  52E6               	movf	postinc1,f,c
 13704  0173A4  52E6               	movf	postinc1,f,c
 13705  0173A6  52E6               	movf	postinc1,f,c
 13706                           
 13707                           ;stkvar	_src @ sp[(-4)+-4]
 13708                           
 13709                           ;incstack = 0
 13710  0173A8  0EF8               	movlw	-8
 13711  0173AA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13712  0173B0  0EF9               	movlw	-7
 13713  0173B2  006F FF8C  F030    	movff	plusw1,btemp+11
 13714                           
 13715                           ;stkvar	_s @ sp[(-4)+2]
 13716  0173B8  0EFF               	movlw	-1
 13717  0173BA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13718  0173C0  0EFE               	movlw	-2
 13719  0173C2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13720                           
 13721                           ;stkvar	_dest @ sp[(-4)+-2]
 13722  0173C8  0EFA               	movlw	-6
 13723  0173CA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13724  0173D0  0EFB               	movlw	-5
 13725  0173D2  006F FF8C  F030    	movff	plusw1,btemp+11
 13726                           
 13727                           ;stkvar	_d @ sp[(-4)+0]
 13728  0173D8  0EFD               	movlw	-3
 13729  0173DA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13730  0173E0  0EFC               	movlw	-4
 13731  0173E2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13732  0173E8                     l10051:
 13733                           
 13734                           ;stkvar	_s @ sp[(-4)+2]
 13735  0173E8  50E1               	movf	fsr1l,w,c
 13736  0173EA  0FFE               	addlw	-2
 13737  0173EC  6ED9               	movwf	fsr2l,c
 13738  0173EE  50E2               	movf	fsr1h,w,c
 13739  0173F0  6EDA               	movwf	fsr2h,c
 13740  0173F2  0EFF               	movlw	255
 13741  0173F4  22DA               	addwfc	fsr2h,f,c
 13742  0173F6  006F FF7C  F02F    	movff	indf2,btemp+10
 13743  0173FC  0E01               	movlw	1
 13744  0173FE  26DE               	addwf	postinc2,f,c
 13745  017400  006F FF7C  F030    	movff	indf2,btemp+11
 13746  017406  0E00               	movlw	0
 13747  017408  22DD               	addwfc	postdec2,f,c
 13748  01740A  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
 13749  017410  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
 13750  017416  0E00               	movlw	low (__mediumconst shr (0+16))
 13751  017418  6EF8               	movwf	tblptru,c
 13752                           
 13753                           ;stkvar	_d @ sp[(-4)+0]
 13754  01741A  50E1               	movf	fsr1l,w,c
 13755  01741C  0FFC               	addlw	-4
 13756  01741E  6ED9               	movwf	fsr2l,c
 13757  017420  50E2               	movf	fsr1h,w,c
 13758  017422  6EDA               	movwf	fsr2h,c
 13759  017424  0EFF               	movlw	255
 13760  017426  22DA               	addwfc	fsr2h,f,c
 13761  017428  006F FF7C  F02F    	movff	indf2,btemp+10
 13762  01742E  0E01               	movlw	1
 13763  017430  26DE               	addwf	postinc2,f,c
 13764  017432  006F FF7C  F030    	movff	indf2,btemp+11
 13765  017438  0E00               	movlw	0
 13766  01743A  22DD               	addwfc	postdec2,f,c
 13767  01743C  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
 13768  017442  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
 13769  017448  0E1F               	movlw	(high __ramtop+-1)
 13770  01744A  64F7               	cpfsgt	tblptrh,c
 13771  01744C  D003               	bra	u9287
 13772  01744E  0008               	tblrd		*
 13773  017450  50F5               	movf	tablat,w,c
 13774  017452  D007               	bra	u9280
 13775  017454                     u9287:
 13776  017454  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13777  01745A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13778  017460  50EF               	movf	indf0,w,c
 13779  017462                     u9280:
 13780  017462  6EDF               	movwf	indf2,c
 13781  017464  50DF               	movf	indf2,w,c
 13782  017466  A4D8               	btfss	status,2,c
 13783  017468  D7BF               	goto	l10051
 13784                           
 13785                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13786  01746A  0EF8               	movlw	248
 13787  01746C  26E1               	addwf	fsr1l,f,c
 13788  01746E  0EFF               	movlw	255
 13789  017470  22E2               	addwfc	fsr1h,f,c
 13790  017472  0012               	return		;funcret
 13791  017474                     __end_of_strcpy:
 13792                           	opt callstack 0
 13793                           
 13794 ;; *************** function _floorf *****************
 13795 ;; Defined at:
 13796 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13797 ;; Parameters:    Size  Location     Type
 13798 ;;  x               4  [STACK] float 
 13799 ;; Auto vars:     Size  Location     Type
 13800 ;;  u               4  [STACK] struct .
 13801 ;;  m               4  [STACK] unsigned long 
 13802 ;;  e               2  [STACK] int 
 13803 ;; Return value:  Size  Location     Type
 13804 ;;                  4  [STACK] float 
 13805 ;; Registers used:
 13806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13807 ;; Tracked objects:
 13808 ;;		On entry : 0/0
 13809 ;;		On exit  : 0/0
 13810 ;;		Unchanged: 0/0
 13811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13816 ;;Total ram usage:        0 bytes
 13817 ;; Hardware stack levels used:    1
 13818 ;; Hardware stack levels required when called:   10
 13819 ;; This function calls:
 13820 ;;		Nothing
 13821 ;; This function is called by:
 13822 ;;		_efgtoa
 13823 ;; This function uses a reentrant model
 13824 ;;
 13825                           
 13826                           	psect	text52
 13827  014856                     __ptext52:
 13828                           	opt callstack 0
 13829  014856                     _floorf:
 13830                           	opt callstack 0
 13831                           
 13832                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13833  014856  0E0A               	movlw	10
 13834  014858  26E1               	addwf	fsr1l,f,c
 13835  01485A  0E00               	movlw	0
 13836  01485C  22E2               	addwfc	fsr1h,f,c
 13837                           
 13838                           ;incstack = 0
 13839  01485E  0060  F254  F02D   	movff	floorf@F524,btemp+8
 13840  014864  0060  F258  F02E   	movff	floorf@F524+1,btemp+9
 13841  01486A  0060  F25C  F02F   	movff	floorf@F524+2,btemp+10
 13842  014870  0060  F260  F030   	movff	floorf@F524+3,btemp+11
 13843                           
 13844                           ;stkvar	_u @ sp[(-10)+0]
 13845  014876  0EF6               	movlw	-10
 13846  014878  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13847  01487E  0EF7               	movlw	-9
 13848  014880  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13849  014886  0EF8               	movlw	-8
 13850  014888  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13851  01488E  0EF9               	movlw	-7
 13852  014890  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13853                           
 13854                           ;stkvar	_x @ sp[(-10)+-4]
 13855  014896  0EF2               	movlw	-14
 13856  014898  006F FF8C  F02D    	movff	plusw1,btemp+8
 13857  01489E  0EF3               	movlw	-13
 13858  0148A0  006F FF8C  F02E    	movff	plusw1,btemp+9
 13859  0148A6  0EF4               	movlw	-12
 13860  0148A8  006F FF8C  F02F    	movff	plusw1,btemp+10
 13861  0148AE  0EF5               	movlw	-11
 13862  0148B0  006F FF8C  F030    	movff	plusw1,btemp+11
 13863                           
 13864                           ;stkvar	_u @ sp[(-10)+0]
 13865  0148B6  0EF6               	movlw	-10
 13866  0148B8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13867  0148BE  0EF7               	movlw	-9
 13868  0148C0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13869  0148C6  0EF8               	movlw	-8
 13870  0148C8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13871  0148CE  0EF9               	movlw	-7
 13872  0148D0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13873  0148D6  0E81               	movlw	129
 13874  0148D8  6E2F               	movwf	(btemp+10)^0,c
 13875  0148DA  0EFF               	movlw	255
 13876  0148DC  6E30               	movwf	(btemp+11)^0,c
 13877                           
 13878                           ;stkvar	_u @ sp[(-10)+0]
 13879  0148DE  0EF6               	movlw	-10
 13880  0148E0  006F FF8C  F029    	movff	plusw1,btemp+4
 13881  0148E6  0EF7               	movlw	-9
 13882  0148E8  006F FF8C  F02A    	movff	plusw1,btemp+5
 13883  0148EE  0EF8               	movlw	-8
 13884  0148F0  006F FF8C  F02B    	movff	plusw1,btemp+6
 13885  0148F6  0EF9               	movlw	-7
 13886  0148F8  006F FF8C  F02C    	movff	plusw1,btemp+7
 13887  0148FE  0E18               	movlw	24
 13888  014900  D005               	goto	u4900
 13889  014902                     u4905:
 13890  014902  90D8               	bcf	status,0,c
 13891  014904  322C               	rrcf	(btemp+7)^0,f,c
 13892  014906  322B               	rrcf	(btemp+6)^0,f,c
 13893  014908  322A               	rrcf	(btemp+5)^0,f,c
 13894  01490A  3229               	rrcf	(btemp+4)^0,f,c
 13895  01490C                     u4900:
 13896  01490C  2EE8               	decfsz	wreg,f,c
 13897  01490E  D7F9               	goto	u4905
 13898  014910  0060  F0A4  F02D   	movff	btemp+4,btemp+8
 13899  014916  0060  F0A8  F02E   	movff	btemp+5,btemp+9
 13900  01491C  0EFF               	movlw	255
 13901  01491E  162D               	andwf	(btemp+8)^0,f,c
 13902  014920  0E00               	movlw	0
 13903  014922  162E               	andwf	(btemp+9)^0,f,c
 13904  014924  502F               	movf	(btemp+10)^0,w,c
 13905  014926  262D               	addwf	(btemp+8)^0,f,c
 13906  014928  5030               	movf	(btemp+11)^0,w,c
 13907  01492A  222E               	addwfc	(btemp+9)^0,f,c
 13908                           
 13909                           ;stkvar	_e @ sp[(-10)+8]
 13910  01492C  0EFE               	movlw	-2
 13911  01492E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13912  014934  0EFF               	movlw	-1
 13913  014936  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13914                           
 13915                           ;stkvar	_e @ sp[(-10)+8]
 13916  01493C  0EFF               	movlw	-1
 13917  01493E  BEE3               	btfsc	plusw1,7,c
 13918  014940  D019               	goto	l6685
 13919  014942  0EFF               	movlw	-1
 13920  014944  50E3               	movf	plusw1,w,c
 13921  014946  E108               	bnz	u4910
 13922  014948  0EFE               	movlw	-2
 13923  01494A  006F FF8C  F025    	movff	plusw1,btemp
 13924  014950  0E17               	movlw	23
 13925  014952  5E25               	subwf	btemp^0,f,c
 13926  014954  A0D8               	btfss	status,0,c
 13927  014956  D00E               	goto	l6685
 13928  014958                     u4910:
 13929                           
 13930                           ;stkvar	_x @ sp[(-10)+-4]
 13931  014958  0EF2               	movlw	-14
 13932  01495A  006F FF8C  F025    	movff	plusw1,btemp
 13933  014960  0EF3               	movlw	-13
 13934  014962  006F FF8C  F026    	movff	plusw1,btemp+1
 13935  014968  0EF4               	movlw	-12
 13936  01496A  006F FF8C  F027    	movff	plusw1,btemp+2
 13937  014970  0EF5               	movlw	-11
 13938  014972  D11F               	goto	L13
 13939  014974                     l6685:
 13940                           
 13941                           ;stkvar	_e @ sp[(-10)+8]
 13942  014974  0EFF               	movlw	-1
 13943  014976  BEE3               	btfsc	plusw1,7,c
 13944  014978  D0B4               	goto	l6701
 13945                           
 13946                           ;stkvar	_e @ sp[(-10)+8]
 13947  01497A  0EFE               	movlw	-2
 13948  01497C  006F FF8C  F030    	movff	plusw1,btemp+11
 13949  014982  0EFF               	movlw	255
 13950  014984  6E29               	movwf	(btemp+4)^0,c
 13951  014986  0EFF               	movlw	255
 13952  014988  6E2A               	movwf	(btemp+5)^0,c
 13953  01498A  0E7F               	movlw	127
 13954  01498C  6E2B               	movwf	(btemp+6)^0,c
 13955  01498E  0E00               	movlw	0
 13956  014990  6E2C               	movwf	(btemp+7)^0,c
 13957  014992                     u4935:
 13958  014992  6630               	tstfsz	(btemp+11)^0,c
 13959  014994  D001               	goto	u4936
 13960  014996  D007               	goto	u4937
 13961  014998                     u4936:
 13962  014998  342C               	rlcf	(btemp+7)^0,w,c
 13963  01499A  322C               	rrcf	(btemp+7)^0,f,c
 13964  01499C  322B               	rrcf	(btemp+6)^0,f,c
 13965  01499E  322A               	rrcf	(btemp+5)^0,f,c
 13966  0149A0  3229               	rrcf	(btemp+4)^0,f,c
 13967  0149A2  2E30               	decfsz	(btemp+11)^0,f,c
 13968  0149A4  D7F6               	goto	u4935
 13969  0149A6                     u4937:
 13970                           
 13971                           ;stkvar	_m @ sp[(-10)+4]
 13972  0149A6  0EFA               	movlw	-6
 13973  0149A8  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 13974  0149AE  0EFB               	movlw	-5
 13975  0149B0  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 13976  0149B6  0EFC               	movlw	-4
 13977  0149B8  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 13978  0149BE  0EFD               	movlw	-3
 13979  0149C0  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 13980                           
 13981                           ;stkvar	_m @ sp[(-10)+4]
 13982                           ;stkvar	_u @ sp[(-10)+0]
 13983  0149C6  0EF6               	movlw	-10
 13984  0149C8  006F FF8C  F02D    	movff	plusw1,btemp+8
 13985  0149CE  0EF7               	movlw	-9
 13986  0149D0  006F FF8C  F02E    	movff	plusw1,btemp+9
 13987  0149D6  0EF8               	movlw	-8
 13988  0149D8  006F FF8C  F02F    	movff	plusw1,btemp+10
 13989  0149DE  0EF9               	movlw	-7
 13990  0149E0  006F FF8C  F030    	movff	plusw1,btemp+11
 13991  0149E6  0EFA               	movlw	-6
 13992  0149E8  50E3               	movf	plusw1,w,c
 13993  0149EA  162D               	andwf	(btemp+8)^0,f,c
 13994  0149EC  0EFB               	movlw	-5
 13995  0149EE  50E3               	movf	plusw1,w,c
 13996  0149F0  162E               	andwf	(btemp+9)^0,f,c
 13997  0149F2  0EFC               	movlw	-4
 13998  0149F4  50E3               	movf	plusw1,w,c
 13999  0149F6  162F               	andwf	(btemp+10)^0,f,c
 14000  0149F8  0EFD               	movlw	-3
 14001  0149FA  50E3               	movf	plusw1,w,c
 14002  0149FC  1630               	andwf	(btemp+11)^0,f,c
 14003  0149FE  502D               	movf	(btemp+8)^0,w,c
 14004  014A00  102E               	iorwf	(btemp+9)^0,w,c
 14005  014A02  102F               	iorwf	(btemp+10)^0,w,c
 14006  014A04  1030               	iorwf	(btemp+11)^0,w,c
 14007  014A06  B4D8               	btfsc	status,2,c
 14008  014A08  D7A7               	goto	u4910
 14009                           
 14010                           ;stkvar	_u @ sp[(-10)+0]
 14011  014A0A  0EF6               	movlw	-10
 14012  014A0C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14013  014A12  0EF7               	movlw	-9
 14014  014A14  006F FF8C  F02E    	movff	plusw1,btemp+9
 14015  014A1A  0EF8               	movlw	-8
 14016  014A1C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14017  014A22  0EF9               	movlw	-7
 14018  014A24  006F FF8C  F030    	movff	plusw1,btemp+11
 14019  014A2A  0E20               	movlw	32
 14020  014A2C  D005               	goto	u4950
 14021  014A2E                     u4955:
 14022  014A2E  90D8               	bcf	status,0,c
 14023  014A30  3230               	rrcf	(btemp+11)^0,f,c
 14024  014A32  322F               	rrcf	(btemp+10)^0,f,c
 14025  014A34  322E               	rrcf	(btemp+9)^0,f,c
 14026  014A36  322D               	rrcf	(btemp+8)^0,f,c
 14027  014A38                     u4950:
 14028  014A38  2EE8               	decfsz	wreg,f,c
 14029  014A3A  D7F9               	goto	u4955
 14030  014A3C  502D               	movf	(btemp+8)^0,w,c
 14031  014A3E  B4D8               	btfsc	status,2,c
 14032  014A40  D028               	goto	l6699
 14033                           
 14034                           ;stkvar	_m @ sp[(-10)+4]
 14035                           ;stkvar	_u @ sp[(-10)+0]
 14036  014A42  0EF6               	movlw	-10
 14037  014A44  50E3               	movf	plusw1,w,c
 14038  014A46  6E25               	movwf	btemp^0,c
 14039  014A48  0EFA               	movlw	-6
 14040  014A4A  50E3               	movf	plusw1,w,c
 14041  014A4C  2625               	addwf	btemp^0,f,c
 14042  014A4E  0EF6               	movlw	-10
 14043  014A50  0060  F097  FFE3   	movff	btemp,plusw1
 14044  014A56  0EF7               	movlw	-9
 14045  014A58  50E3               	movf	plusw1,w,c
 14046  014A5A  6E25               	movwf	btemp^0,c
 14047  014A5C  0EFB               	movlw	-5
 14048  014A5E  50E3               	movf	plusw1,w,c
 14049  014A60  2225               	addwfc	btemp^0,f,c
 14050  014A62  0EF7               	movlw	-9
 14051  014A64  0060  F097  FFE3   	movff	btemp,plusw1
 14052  014A6A  0EF8               	movlw	-8
 14053  014A6C  50E3               	movf	plusw1,w,c
 14054  014A6E  6E25               	movwf	btemp^0,c
 14055  014A70  0EFC               	movlw	-4
 14056  014A72  50E3               	movf	plusw1,w,c
 14057  014A74  2225               	addwfc	btemp^0,f,c
 14058  014A76  0EF8               	movlw	-8
 14059  014A78  0060  F097  FFE3   	movff	btemp,plusw1
 14060  014A7E  0EF9               	movlw	-7
 14061  014A80  50E3               	movf	plusw1,w,c
 14062  014A82  6E25               	movwf	btemp^0,c
 14063  014A84  0EFD               	movlw	-3
 14064  014A86  50E3               	movf	plusw1,w,c
 14065  014A88  2225               	addwfc	btemp^0,f,c
 14066  014A8A  0EF9               	movlw	-7
 14067  014A8C  0060  F097  FFE3   	movff	btemp,plusw1
 14068  014A92                     l6699:
 14069                           
 14070                           ;stkvar	_m @ sp[(-10)+4]
 14071  014A92  0EFA               	movlw	-6
 14072  014A94  006F FF8C  F02D    	movff	plusw1,btemp+8
 14073  014A9A  0EFB               	movlw	-5
 14074  014A9C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14075  014AA2  0EFC               	movlw	-4
 14076  014AA4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14077  014AAA  0EFD               	movlw	-3
 14078  014AAC  006F FF8C  F030    	movff	plusw1,btemp+11
 14079  014AB2  1C2D               	comf	(btemp+8)^0,w,c
 14080  014AB4  6E29               	movwf	(btemp+4)^0,c
 14081  014AB6  1C2E               	comf	(btemp+9)^0,w,c
 14082  014AB8  6E2A               	movwf	(btemp+5)^0,c
 14083  014ABA  1C2F               	comf	(btemp+10)^0,w,c
 14084  014ABC  6E2B               	movwf	(btemp+6)^0,c
 14085  014ABE  1C30               	comf	(btemp+11)^0,w,c
 14086  014AC0  6E2C               	movwf	(btemp+7)^0,c
 14087                           
 14088                           ;stkvar	_u @ sp[(-10)+0]
 14089  014AC2  50E1               	movf	fsr1l,w,c
 14090  014AC4  0FF6               	addlw	-10
 14091  014AC6  6ED9               	movwf	fsr2l,c
 14092  014AC8  50E2               	movf	fsr1h,w,c
 14093  014ACA  6EDA               	movwf	fsr2h,c
 14094  014ACC  0EFF               	movlw	255
 14095  014ACE  22DA               	addwfc	fsr2h,f,c
 14096  014AD0  5029               	movf	(btemp+4)^0,w,c
 14097  014AD2  16DE               	andwf	postinc2,f,c
 14098  014AD4  502A               	movf	(btemp+5)^0,w,c
 14099  014AD6  16DE               	andwf	postinc2,f,c
 14100  014AD8  502B               	movf	(btemp+6)^0,w,c
 14101  014ADA  16DE               	andwf	postinc2,f,c
 14102  014ADC  502C               	movf	(btemp+7)^0,w,c
 14103  014ADE  16DE               	andwf	postinc2,f,c
 14104  014AE0  D05B               	goto	l6709
 14105  014AE2                     l6701:
 14106                           
 14107                           ;stkvar	_u @ sp[(-10)+0]
 14108  014AE2  0EF6               	movlw	-10
 14109  014AE4  006F FF8C  F02D    	movff	plusw1,btemp+8
 14110  014AEA  0EF7               	movlw	-9
 14111  014AEC  006F FF8C  F02E    	movff	plusw1,btemp+9
 14112  014AF2  0EF8               	movlw	-8
 14113  014AF4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14114  014AFA  0EF9               	movlw	-7
 14115  014AFC  006F FF8C  F030    	movff	plusw1,btemp+11
 14116  014B02  0E20               	movlw	32
 14117  014B04  D005               	goto	u4970
 14118  014B06                     u4975:
 14119  014B06  90D8               	bcf	status,0,c
 14120  014B08  3230               	rrcf	(btemp+11)^0,f,c
 14121  014B0A  322F               	rrcf	(btemp+10)^0,f,c
 14122  014B0C  322E               	rrcf	(btemp+9)^0,f,c
 14123  014B0E  322D               	rrcf	(btemp+8)^0,f,c
 14124  014B10                     u4970:
 14125  014B10  2EE8               	decfsz	wreg,f,c
 14126  014B12  D7F9               	goto	u4975
 14127  014B14  662D               	tstfsz	(btemp+8)^0,c
 14128  014B16  D009               	goto	l6705
 14129                           
 14130                           ;stkvar	_u @ sp[(-10)+0]
 14131  014B18  0EF6               	movlw	-10
 14132  014B1A  6AE3               	clrf	plusw1,c
 14133  014B1C  0EF7               	movlw	-9
 14134  014B1E  6AE3               	clrf	plusw1,c
 14135  014B20  0EF8               	movlw	-8
 14136  014B22  6AE3               	clrf	plusw1,c
 14137  014B24  0EF9               	movlw	-7
 14138  014B26  6AE3               	clrf	plusw1,c
 14139  014B28  D037               	goto	l6709
 14140  014B2A                     l6705:
 14141                           
 14142                           ;stkvar	_u @ sp[(-10)+0]
 14143  014B2A  0EF6               	movlw	-10
 14144  014B2C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14145  014B32  0EF7               	movlw	-9
 14146  014B34  006F FF8C  F02E    	movff	plusw1,btemp+9
 14147  014B3A  0EF8               	movlw	-8
 14148  014B3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14149  014B42  0EF9               	movlw	-7
 14150  014B44  006F FF8C  F030    	movff	plusw1,btemp+11
 14151  014B4A  90D8               	bcf	status,0,c
 14152  014B4C  342D               	rlcf	(btemp+8)^0,w,c
 14153  014B4E  6E29               	movwf	(btemp+4)^0,c
 14154  014B50  342E               	rlcf	(btemp+9)^0,w,c
 14155  014B52  6E2A               	movwf	(btemp+5)^0,c
 14156  014B54  342F               	rlcf	(btemp+10)^0,w,c
 14157  014B56  6E2B               	movwf	(btemp+6)^0,c
 14158  014B58  3430               	rlcf	(btemp+11)^0,w,c
 14159  014B5A  6E2C               	movwf	(btemp+7)^0,c
 14160  014B5C  5029               	movf	(btemp+4)^0,w,c
 14161  014B5E  102A               	iorwf	(btemp+5)^0,w,c
 14162  014B60  102B               	iorwf	(btemp+6)^0,w,c
 14163  014B62  102C               	iorwf	(btemp+7)^0,w,c
 14164  014B64  B4D8               	btfsc	status,2,c
 14165  014B66  D018               	goto	l6709
 14166  014B68  0E00               	movlw	0
 14167  014B6A  6E2D               	movwf	(btemp+8)^0,c
 14168  014B6C  0E00               	movlw	0
 14169  014B6E  6E2E               	movwf	(btemp+9)^0,c
 14170  014B70  0E80               	movlw	128
 14171  014B72  6E2F               	movwf	(btemp+10)^0,c
 14172  014B74  0EBF               	movlw	191
 14173  014B76  6E30               	movwf	(btemp+11)^0,c
 14174                           
 14175                           ;stkvar	_u @ sp[(-10)+0]
 14176  014B78  0EF6               	movlw	-10
 14177  014B7A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14178  014B80  0EF7               	movlw	-9
 14179  014B82  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14180  014B88  0EF8               	movlw	-8
 14181  014B8A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14182  014B90  0EF9               	movlw	-7
 14183  014B92  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14184  014B98                     l6709:
 14185                           
 14186                           ;stkvar	_u @ sp[(-10)+0]
 14187  014B98  0EF6               	movlw	-10
 14188  014B9A  006F FF8C  F025    	movff	plusw1,btemp
 14189  014BA0  0EF7               	movlw	-9
 14190  014BA2  006F FF8C  F026    	movff	plusw1,btemp+1
 14191  014BA8  0EF8               	movlw	-8
 14192  014BAA  006F FF8C  F027    	movff	plusw1,btemp+2
 14193  014BB0  0EF9               	movlw	-7
 14194  014BB2                     L13:
 14195  014BB2  006F FF8C  F028    	movff	plusw1,btemp+3
 14196                           
 14197                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14198  014BB8  0EF2               	movlw	242
 14199  014BBA  26E1               	addwf	fsr1l,f,c
 14200  014BBC  0EFF               	movlw	255
 14201  014BBE  22E2               	addwfc	fsr1h,f,c
 14202  014BC0  0012               	return		;funcret
 14203  014BC2                     __end_of_floorf:
 14204                           	opt callstack 0
 14205                           
 14206 ;; *************** function ___fpclassifyf *****************
 14207 ;; Defined at:
 14208 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14209 ;; Parameters:    Size  Location     Type
 14210 ;;  x               4  [STACK] float 
 14211 ;; Auto vars:     Size  Location     Type
 14212 ;;  u               4  [STACK] struct .
 14213 ;;  e               2  [STACK] int 
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  2  [STACK] int 
 14216 ;; Registers used:
 14217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14218 ;; Tracked objects:
 14219 ;;		On entry : 0/0
 14220 ;;		On exit  : 0/0
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14227 ;;Total ram usage:        0 bytes
 14228 ;; Hardware stack levels used:    1
 14229 ;; Hardware stack levels required when called:   10
 14230 ;; This function calls:
 14231 ;;		Nothing
 14232 ;; This function is called by:
 14233 ;;		_efgtoa
 14234 ;; This function uses a reentrant model
 14235 ;;
 14236                           
 14237                           	psect	text53
 14238  01632C                     __ptext53:
 14239                           	opt callstack 0
 14240  01632C                     ___fpclassifyf:
 14241                           	opt callstack 0
 14242                           
 14243                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14244  01632C  0E06               	movlw	6
 14245  01632E  26E1               	addwf	fsr1l,f,c
 14246  016330  0E00               	movlw	0
 14247  016332  22E2               	addwfc	fsr1h,f,c
 14248                           
 14249                           ;incstack = 0
 14250  016334  0060  F264  F02D   	movff	___fpclassifyf@F463,btemp+8
 14251  01633A  0060  F268  F02E   	movff	___fpclassifyf@F463+1,btemp+9
 14252  016340  0060  F26C  F02F   	movff	___fpclassifyf@F463+2,btemp+10
 14253  016346  0060  F270  F030   	movff	___fpclassifyf@F463+3,btemp+11
 14254                           
 14255                           ;stkvar	_u @ sp[(-6)+0]
 14256  01634C  0EFA               	movlw	-6
 14257  01634E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14258  016354  0EFB               	movlw	-5
 14259  016356  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14260  01635C  0EFC               	movlw	-4
 14261  01635E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14262  016364  0EFD               	movlw	-3
 14263  016366  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14264                           
 14265                           ;stkvar	_x @ sp[(-6)+-4]
 14266  01636C  0EF6               	movlw	-10
 14267  01636E  006F FF8C  F02D    	movff	plusw1,btemp+8
 14268  016374  0EF7               	movlw	-9
 14269  016376  006F FF8C  F02E    	movff	plusw1,btemp+9
 14270  01637C  0EF8               	movlw	-8
 14271  01637E  006F FF8C  F02F    	movff	plusw1,btemp+10
 14272  016384  0EF9               	movlw	-7
 14273  016386  006F FF8C  F030    	movff	plusw1,btemp+11
 14274                           
 14275                           ;stkvar	_u @ sp[(-6)+0]
 14276  01638C  0EFA               	movlw	-6
 14277  01638E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14278  016394  0EFB               	movlw	-5
 14279  016396  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14280  01639C  0EFC               	movlw	-4
 14281  01639E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14282  0163A4  0EFD               	movlw	-3
 14283  0163A6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14284                           
 14285                           ;stkvar	_u @ sp[(-6)+0]
 14286  0163AC  0EFA               	movlw	-6
 14287  0163AE  006F FF8C  F02D    	movff	plusw1,btemp+8
 14288  0163B4  0EFB               	movlw	-5
 14289  0163B6  006F FF8C  F02E    	movff	plusw1,btemp+9
 14290  0163BC  0EFC               	movlw	-4
 14291  0163BE  006F FF8C  F02F    	movff	plusw1,btemp+10
 14292  0163C4  0EFD               	movlw	-3
 14293  0163C6  006F FF8C  F030    	movff	plusw1,btemp+11
 14294  0163CC  0E18               	movlw	24
 14295  0163CE  D005               	goto	u4780
 14296  0163D0                     u4785:
 14297  0163D0  90D8               	bcf	status,0,c
 14298  0163D2  3230               	rrcf	(btemp+11)^0,f,c
 14299  0163D4  322F               	rrcf	(btemp+10)^0,f,c
 14300  0163D6  322E               	rrcf	(btemp+9)^0,f,c
 14301  0163D8  322D               	rrcf	(btemp+8)^0,f,c
 14302  0163DA                     u4780:
 14303  0163DA  2EE8               	decfsz	wreg,f,c
 14304  0163DC  D7F9               	goto	u4785
 14305  0163DE  0060  F0B4  F02B   	movff	btemp+8,btemp+6
 14306  0163E4  0060  F0B8  F02C   	movff	btemp+9,btemp+7
 14307  0163EA  0EFF               	movlw	255
 14308  0163EC  162B               	andwf	(btemp+6)^0,f,c
 14309  0163EE  0E00               	movlw	0
 14310  0163F0  162C               	andwf	(btemp+7)^0,f,c
 14311                           
 14312                           ;stkvar	_e @ sp[(-6)+4]
 14313  0163F2  0EFE               	movlw	-2
 14314  0163F4  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14315  0163FA  0EFF               	movlw	-1
 14316  0163FC  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14317                           
 14318                           ;stkvar	_e @ sp[(-6)+4]
 14319  016402  0EFE               	movlw	-2
 14320  016404  006F FF8C  F025    	movff	plusw1,btemp
 14321  01640A  0EFF               	movlw	-1
 14322  01640C  50E3               	movf	plusw1,w,c
 14323  01640E  1025               	iorwf	btemp^0,w,c
 14324  016410  A4D8               	btfss	status,2,c
 14325  016412  D023               	goto	l6647
 14326                           
 14327                           ;stkvar	_u @ sp[(-6)+0]
 14328  016414  0EFA               	movlw	-6
 14329  016416  006F FF8C  F02D    	movff	plusw1,btemp+8
 14330  01641C  0EFB               	movlw	-5
 14331  01641E  006F FF8C  F02E    	movff	plusw1,btemp+9
 14332  016424  0EFC               	movlw	-4
 14333  016426  006F FF8C  F02F    	movff	plusw1,btemp+10
 14334  01642C  0EFD               	movlw	-3
 14335  01642E  006F FF8C  F030    	movff	plusw1,btemp+11
 14336  016434  90D8               	bcf	status,0,c
 14337  016436  342D               	rlcf	(btemp+8)^0,w,c
 14338  016438  6E29               	movwf	(btemp+4)^0,c
 14339  01643A  342E               	rlcf	(btemp+9)^0,w,c
 14340  01643C  6E2A               	movwf	(btemp+5)^0,c
 14341  01643E  342F               	rlcf	(btemp+10)^0,w,c
 14342  016440  6E2B               	movwf	(btemp+6)^0,c
 14343  016442  3430               	rlcf	(btemp+11)^0,w,c
 14344  016444  6E2C               	movwf	(btemp+7)^0,c
 14345  016446  5029               	movf	(btemp+4)^0,w,c
 14346  016448  102A               	iorwf	(btemp+5)^0,w,c
 14347  01644A  102B               	iorwf	(btemp+6)^0,w,c
 14348  01644C  102C               	iorwf	(btemp+7)^0,w,c
 14349  01644E  A4D8               	btfss	status,2,c
 14350  016450  D002               	goto	l6643
 14351  016452  0E02               	movlw	2
 14352  016454  D02E               	goto	L14
 14353  016456                     l6643:
 14354  016456  0E03               	movlw	3
 14355  016458  D02C               	goto	L14
 14356  01645A                     l6647:
 14357                           
 14358                           ;stkvar	_e @ sp[(-6)+4]
 14359  01645A  0EFE               	movlw	-2
 14360  01645C  28E3               	incf	plusw1,w,c
 14361  01645E  E128               	bnz	l6653
 14362  016460  0EFF               	movlw	-1
 14363  016462  50E3               	movf	plusw1,w,c
 14364  016464  A4D8               	btfss	status,2,c
 14365  016466  D024               	goto	l6653
 14366                           
 14367                           ;stkvar	_u @ sp[(-6)+0]
 14368  016468  0EFA               	movlw	-6
 14369  01646A  006F FF8C  F02D    	movff	plusw1,btemp+8
 14370  016470  0EFB               	movlw	-5
 14371  016472  006F FF8C  F02E    	movff	plusw1,btemp+9
 14372  016478  0EFC               	movlw	-4
 14373  01647A  006F FF8C  F02F    	movff	plusw1,btemp+10
 14374  016480  0EFD               	movlw	-3
 14375  016482  006F FF8C  F030    	movff	plusw1,btemp+11
 14376  016488  0E09               	movlw	9
 14377  01648A                     u4825:
 14378  01648A  90D8               	bcf	status,0,c
 14379  01648C  362D               	rlcf	(btemp+8)^0,f,c
 14380  01648E  362E               	rlcf	(btemp+9)^0,f,c
 14381  016490  362F               	rlcf	(btemp+10)^0,f,c
 14382  016492  3630               	rlcf	(btemp+11)^0,f,c
 14383  016494  2EE8               	decfsz	wreg,f,c
 14384  016496  D7F9               	goto	u4825
 14385  016498  502D               	movf	(btemp+8)^0,w,c
 14386  01649A  102E               	iorwf	(btemp+9)^0,w,c
 14387  01649C  102F               	iorwf	(btemp+10)^0,w,c
 14388  01649E  1030               	iorwf	(btemp+11)^0,w,c
 14389  0164A0  A4D8               	btfss	status,2,c
 14390  0164A2  D002               	goto	u4830
 14391  0164A4  0E01               	movlw	1
 14392  0164A6  D001               	goto	u4840
 14393  0164A8                     u4830:
 14394  0164A8  0E00               	movlw	0
 14395  0164AA                     u4840:
 14396  0164AA  6E25               	movwf	btemp^0,c
 14397  0164AC  6A26               	clrf	(btemp+1)^0,c
 14398  0164AE  D004               	goto	l2897
 14399  0164B0                     l6653:
 14400  0164B0  0E04               	movlw	4
 14401  0164B2                     L14:
 14402  0164B2  6E25               	movwf	btemp^0,c
 14403  0164B4  0E00               	movlw	0
 14404  0164B6  6E26               	movwf	(btemp+1)^0,c
 14405  0164B8                     l2897:
 14406                           
 14407                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14408  0164B8  0EF6               	movlw	246
 14409  0164BA  26E1               	addwf	fsr1l,f,c
 14410  0164BC  0EFF               	movlw	255
 14411  0164BE  22E2               	addwfc	fsr1h,f,c
 14412  0164C0  0012               	return		;funcret
 14413  0164C2                     __end_of___fpclassifyf:
 14414                           	opt callstack 0
 14415                           
 14416 ;; *************** function ___fltol *****************
 14417 ;; Defined at:
 14418 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14419 ;; Parameters:    Size  Location     Type
 14420 ;;  f1              4  [STACK] int 
 14421 ;; Auto vars:     Size  Location     Type
 14422 ;;  exp1            1  [STACK] unsigned char 
 14423 ;;  sign1           1  [STACK] unsigned char 
 14424 ;; Return value:  Size  Location     Type
 14425 ;;                  4  [STACK] long 
 14426 ;; Registers used:
 14427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14428 ;; Tracked objects:
 14429 ;;		On entry : 0/0
 14430 ;;		On exit  : 0/0
 14431 ;;		Unchanged: 0/0
 14432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14437 ;;Total ram usage:        0 bytes
 14438 ;; Hardware stack levels used:    1
 14439 ;; Hardware stack levels required when called:   10
 14440 ;; This function calls:
 14441 ;;		Nothing
 14442 ;; This function is called by:
 14443 ;;		_efgtoa
 14444 ;; This function uses a reentrant model
 14445 ;;
 14446                           
 14447                           	psect	text54
 14448  0164C2                     __ptext54:
 14449                           	opt callstack 0
 14450  0164C2                     ___fltol:
 14451                           	opt callstack 0
 14452                           
 14453                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14454  0164C2  52E6               	movf	postinc1,f,c
 14455  0164C4  52E6               	movf	postinc1,f,c
 14456                           
 14457                           ;stkvar	_f1 @ sp[(-2)+-4]
 14458                           
 14459                           ;incstack = 0
 14460  0164C6  0EFA               	movlw	-6
 14461  0164C8  006F FF8C  F02D    	movff	plusw1,btemp+8
 14462  0164CE  0EFB               	movlw	-5
 14463  0164D0  006F FF8C  F02E    	movff	plusw1,btemp+9
 14464  0164D6  0EFC               	movlw	-4
 14465  0164D8  006F FF8C  F02F    	movff	plusw1,btemp+10
 14466  0164DE  0EFD               	movlw	-3
 14467  0164E0  006F FF8C  F030    	movff	plusw1,btemp+11
 14468  0164E6  0E18               	movlw	24
 14469  0164E8  D005               	goto	u5770
 14470  0164EA                     u5775:
 14471  0164EA  90D8               	bcf	status,0,c
 14472  0164EC  3230               	rrcf	(btemp+11)^0,f,c
 14473  0164EE  322F               	rrcf	(btemp+10)^0,f,c
 14474  0164F0  322E               	rrcf	(btemp+9)^0,f,c
 14475  0164F2  322D               	rrcf	(btemp+8)^0,f,c
 14476  0164F4                     u5770:
 14477  0164F4  2EE8               	decfsz	wreg,f,c
 14478  0164F6  D7F9               	goto	u5775
 14479                           
 14480                           ;stkvar	_exp1 @ sp[(-2)+0]
 14481  0164F8  0EFE               	movlw	-2
 14482  0164FA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14483  016500  0EFE               	movlw	-2
 14484  016502  50E3               	movf	plusw1,w,c
 14485  016504  A4D8               	btfss	status,2,c
 14486  016506  D006               	goto	l7111
 14487  016508                     u5780:
 14488  016508  0E00               	movlw	0
 14489  01650A  6E25               	movwf	btemp^0,c
 14490  01650C  6A26               	clrf	(btemp+1)^0,c
 14491  01650E  6A27               	clrf	(btemp+2)^0,c
 14492  016510  6A28               	clrf	(btemp+3)^0,c
 14493  016512  D08B               	goto	l2513
 14494  016514                     l7111:
 14495                           
 14496                           ;stkvar	_f1 @ sp[(-2)+-4]
 14497  016514  0EFA               	movlw	-6
 14498  016516  006F FF8C  F02D    	movff	plusw1,btemp+8
 14499  01651C  0EFB               	movlw	-5
 14500  01651E  006F FF8C  F02E    	movff	plusw1,btemp+9
 14501  016524  0EFC               	movlw	-4
 14502  016526  006F FF8C  F02F    	movff	plusw1,btemp+10
 14503  01652C  0EFD               	movlw	-3
 14504  01652E  006F FF8C  F030    	movff	plusw1,btemp+11
 14505  016534  0E20               	movlw	32
 14506  016536  D005               	goto	u5790
 14507  016538                     u5795:
 14508  016538  90D8               	bcf	status,0,c
 14509  01653A  3230               	rrcf	(btemp+11)^0,f,c
 14510  01653C  322F               	rrcf	(btemp+10)^0,f,c
 14511  01653E  322E               	rrcf	(btemp+9)^0,f,c
 14512  016540  322D               	rrcf	(btemp+8)^0,f,c
 14513  016542                     u5790:
 14514  016542  2EE8               	decfsz	wreg,f,c
 14515  016544  D7F9               	goto	u5795
 14516                           
 14517                           ;stkvar	_sign1 @ sp[(-2)+1]
 14518  016546  0EFF               	movlw	-1
 14519  016548  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14520                           
 14521                           ;stkvar	_f1 @ sp[(-2)+-4]
 14522  01654E  0EFC               	movlw	-4
 14523  016550  8EE3               	bsf	plusw1,7,c
 14524                           
 14525                           ;stkvar	_f1 @ sp[(-2)+-4]
 14526  016552  50E1               	movf	fsr1l,w,c
 14527  016554  0FFA               	addlw	-6
 14528  016556  6ED9               	movwf	fsr2l,c
 14529  016558  50E2               	movf	fsr1h,w,c
 14530  01655A  6EDA               	movwf	fsr2h,c
 14531  01655C  0EFF               	movlw	255
 14532  01655E  22DA               	addwfc	fsr2h,f,c
 14533  016560  0EFF               	movlw	255
 14534  016562  16DE               	andwf	postinc2,f,c
 14535  016564  0EFF               	movlw	255
 14536  016566  16DE               	andwf	postinc2,f,c
 14537  016568  0EFF               	movlw	255
 14538  01656A  16DE               	andwf	postinc2,f,c
 14539  01656C  0E00               	movlw	0
 14540  01656E  16DE               	andwf	postinc2,f,c
 14541                           
 14542                           ;stkvar	_exp1 @ sp[(-2)+0]
 14543  016570  0EFE               	movlw	-2
 14544  016572  006F FF8C  F025    	movff	plusw1,btemp
 14545  016578  0E96               	movlw	150
 14546  01657A  5E25               	subwf	btemp^0,f,c
 14547  01657C  0EFE               	movlw	-2
 14548  01657E  0060  F097  FFE3   	movff	btemp,plusw1
 14549                           
 14550                           ;stkvar	_exp1 @ sp[(-2)+0]
 14551  016584  0EFE               	movlw	-2
 14552  016586  AEE3               	btfss	plusw1,7,c
 14553  016588  D014               	goto	l7129
 14554                           
 14555                           ;stkvar	_exp1 @ sp[(-2)+0]
 14556  01658A  0EFE               	movlw	-2
 14557  01658C  50E3               	movf	plusw1,w,c
 14558  01658E  0A80               	xorlw	128
 14559  016590  0F97               	addlw	151
 14560  016592  A0D8               	btfss	status,0,c
 14561  016594  D7B9               	goto	u5780
 14562  016596                     l7127:
 14563                           
 14564                           ;stkvar	_f1 @ sp[(-2)+-4]
 14565  016596  90D8               	bcf	status,0,c
 14566  016598  0EFD               	movlw	-3
 14567  01659A  32E3               	rrcf	plusw1,f,c
 14568  01659C  0EFC               	movlw	-4
 14569  01659E  32E3               	rrcf	plusw1,f,c
 14570  0165A0  0EFB               	movlw	-5
 14571  0165A2  32E3               	rrcf	plusw1,f,c
 14572  0165A4  0EFA               	movlw	-6
 14573  0165A6  32E3               	rrcf	plusw1,f,c
 14574                           
 14575                           ;stkvar	_exp1 @ sp[(-2)+0]
 14576  0165A8  0EFE               	movlw	-2
 14577  0165AA  2AE3               	incf	plusw1,f,c
 14578  0165AC  B4D8               	btfsc	status,2,c
 14579  0165AE  D018               	goto	u5840
 14580  0165B0  D7F2               	goto	l7127
 14581  0165B2                     l7129:
 14582                           
 14583                           ;stkvar	_exp1 @ sp[(-2)+0]
 14584  0165B2  0EFE               	movlw	-2
 14585  0165B4  006F FF8C  F025    	movff	plusw1,btemp
 14586  0165BA  0E1F               	movlw	31
 14587  0165BC  6425               	cpfsgt	btemp^0,c
 14588  0165BE  D00C               	goto	l7137
 14589  0165C0  D7A3               	goto	u5780
 14590  0165C2                     l7135:
 14591                           
 14592                           ;stkvar	_f1 @ sp[(-2)+-4]
 14593  0165C2  90D8               	bcf	status,0,c
 14594  0165C4  0EFA               	movlw	-6
 14595  0165C6  36E3               	rlcf	plusw1,f,c
 14596  0165C8  0EFB               	movlw	-5
 14597  0165CA  36E3               	rlcf	plusw1,f,c
 14598  0165CC  0EFC               	movlw	-4
 14599  0165CE  36E3               	rlcf	plusw1,f,c
 14600  0165D0  0EFD               	movlw	-3
 14601  0165D2  36E3               	rlcf	plusw1,f,c
 14602                           
 14603                           ;stkvar	_exp1 @ sp[(-2)+0]
 14604  0165D4  0EFE               	movlw	-2
 14605  0165D6  06E3               	decf	plusw1,f,c
 14606  0165D8                     l7137:
 14607                           
 14608                           ;stkvar	_exp1 @ sp[(-2)+0]
 14609  0165D8  0EFE               	movlw	-2
 14610  0165DA  50E3               	movf	plusw1,w,c
 14611  0165DC  A4D8               	btfss	status,2,c
 14612  0165DE  D7F1               	goto	l7135
 14613  0165E0                     u5840:
 14614                           
 14615                           ;stkvar	_sign1 @ sp[(-2)+1]
 14616  0165E0  0EFF               	movlw	-1
 14617  0165E2  50E3               	movf	plusw1,w,c
 14618  0165E4  B4D8               	btfsc	status,2,c
 14619  0165E6  D011               	goto	u5860
 14620                           
 14621                           ;stkvar	_f1 @ sp[(-2)+-4]
 14622                           ;stkvar	_f1 @ sp[(-2)+-4]
 14623  0165E8  0EFA               	movlw	-6
 14624  0165EA  6CE3               	negf	plusw1,c
 14625  0165EC  0EFB               	movlw	-5
 14626  0165EE  1EE3               	comf	plusw1,f,c
 14627  0165F0  0EFC               	movlw	-4
 14628  0165F2  1EE3               	comf	plusw1,f,c
 14629  0165F4  0EFD               	movlw	-3
 14630  0165F6  1EE3               	comf	plusw1,f,c
 14631  0165F8  E308               	bnc	u5860
 14632  0165FA  0EFB               	movlw	-5
 14633  0165FC  2AE3               	incf	plusw1,f,c
 14634  0165FE  E305               	bnc	u5860
 14635  016600  0EFC               	movlw	-4
 14636  016602  2AE3               	incf	plusw1,f,c
 14637  016604  E302               	bnc	u5860
 14638  016606  0EFD               	movlw	-3
 14639  016608  2AE3               	incf	plusw1,f,c
 14640  01660A                     u5860:
 14641                           
 14642                           ;stkvar	_f1 @ sp[(-2)+-4]
 14643  01660A  0EFA               	movlw	-6
 14644  01660C  006F FF8C  F025    	movff	plusw1,btemp
 14645  016612  0EFB               	movlw	-5
 14646  016614  006F FF8C  F026    	movff	plusw1,btemp+1
 14647  01661A  0EFC               	movlw	-4
 14648  01661C  006F FF8C  F027    	movff	plusw1,btemp+2
 14649  016622  0EFD               	movlw	-3
 14650  016624  006F FF8C  F028    	movff	plusw1,btemp+3
 14651  01662A                     l2513:
 14652                           
 14653                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14654  01662A  0EFA               	movlw	250
 14655  01662C  26E1               	addwf	fsr1l,f,c
 14656  01662E  0EFF               	movlw	255
 14657  016630  22E2               	addwfc	fsr1h,f,c
 14658  016632  0012               	return		;funcret
 14659  016634                     __end_of___fltol:
 14660                           	opt callstack 0
 14661                           
 14662 ;; *************** function ___flneg *****************
 14663 ;; Defined at:
 14664 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;  f1              4  [STACK] long 
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;		None
 14669 ;; Return value:  Size  Location     Type
 14670 ;;                  4  [STACK] long 
 14671 ;; Registers used:
 14672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14673 ;; Tracked objects:
 14674 ;;		On entry : 0/0
 14675 ;;		On exit  : 0/0
 14676 ;;		Unchanged: 0/0
 14677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14682 ;;Total ram usage:        0 bytes
 14683 ;; Hardware stack levels used:    1
 14684 ;; Hardware stack levels required when called:   10
 14685 ;; This function calls:
 14686 ;;		Nothing
 14687 ;; This function is called by:
 14688 ;;		_efgtoa
 14689 ;; This function uses a reentrant model
 14690 ;;
 14691                           
 14692                           	psect	text55
 14693  0184EA                     __ptext55:
 14694                           	opt callstack 0
 14695  0184EA                     ___flneg:
 14696                           	opt callstack 13
 14697                           
 14698                           ;stkvar	_f1 @ sp[(0)+-4]
 14699                           
 14700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14701                           ;incstack = 0
 14702  0184EA  0EFC               	movlw	-4
 14703  0184EC  50E3               	movf	plusw1,w,c
 14704  0184EE  E10A               	bnz	u5760
 14705  0184F0  0EFD               	movlw	-3
 14706  0184F2  50E3               	movf	plusw1,w,c
 14707  0184F4  E107               	bnz	u5760
 14708  0184F6  0EFE               	movlw	-2
 14709  0184F8  50E3               	movf	plusw1,w,c
 14710  0184FA  E104               	bnz	u5760
 14711  0184FC  0EFF               	movlw	-1
 14712  0184FE  50E3               	movf	plusw1,w,c
 14713  018500  B4D8               	btfsc	status,2,c
 14714  018502  D002               	goto	l7101
 14715  018504                     u5760:
 14716                           
 14717                           ;stkvar	_f1 @ sp[(0)+-4]
 14718  018504  0EFF               	movlw	-1
 14719  018506  7EE3               	btg	plusw1,7,c
 14720  018508                     l7101:
 14721                           
 14722                           ;stkvar	_f1 @ sp[(0)+-4]
 14723  018508  0EFC               	movlw	-4
 14724  01850A  006F FF8C  F025    	movff	plusw1,btemp
 14725  018510  0EFD               	movlw	-3
 14726  018512  006F FF8C  F026    	movff	plusw1,btemp+1
 14727  018518  0EFE               	movlw	-2
 14728  01851A  006F FF8C  F027    	movff	plusw1,btemp+2
 14729  018520  0EFF               	movlw	-1
 14730  018522  006F FF8C  F028    	movff	plusw1,btemp+3
 14731                           
 14732                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14733  018528  52E5               	movf	postdec1,f,c
 14734  01852A  52E5               	movf	postdec1,f,c
 14735  01852C  52E5               	movf	postdec1,f,c
 14736  01852E  52E5               	movf	postdec1,f,c
 14737  018530  0012               	return		;funcret
 14738  018532                     __end_of___flneg:
 14739                           	opt callstack 0
 14740                           
 14741 ;; *************** function ___flge *****************
 14742 ;; Defined at:
 14743 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14744 ;; Parameters:    Size  Location     Type
 14745 ;;  ff1             4  [STACK] long 
 14746 ;;  ff2             4  [STACK] long 
 14747 ;; Auto vars:     Size  Location     Type
 14748 ;;		None
 14749 ;; Return value:  Size  Location     Type
 14750 ;;		None               void
 14751 ;; Registers used:
 14752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14762 ;;Total ram usage:        0 bytes
 14763 ;; Hardware stack levels used:    1
 14764 ;; Hardware stack levels required when called:   10
 14765 ;; This function calls:
 14766 ;;		Nothing
 14767 ;; This function is called by:
 14768 ;;		_efgtoa
 14769 ;; This function uses a reentrant model
 14770 ;;
 14771                           
 14772                           	psect	text56
 14773  016634                     __ptext56:
 14774                           	opt callstack 0
 14775  016634                     ___flge:
 14776                           	opt callstack 13
 14777                           
 14778                           ;stkvar	_ff1 @ sp[(0)+-4]
 14779                           
 14780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14781                           ;incstack = 0
 14782  016634  50E1               	movf	fsr1l,w,c
 14783  016636  0FFC               	addlw	-4
 14784  016638  6ED9               	movwf	fsr2l,c
 14785  01663A  50E2               	movf	fsr1h,w,c
 14786  01663C  6EDA               	movwf	fsr2h,c
 14787  01663E  0EFF               	movlw	255
 14788  016640  22DA               	addwfc	fsr2h,f,c
 14789  016642  0E00               	movlw	0
 14790  016644  14DE               	andwf	postinc2,w,c
 14791  016646  6E2D               	movwf	(btemp+8)^0,c
 14792  016648  0E00               	movlw	0
 14793  01664A  14DE               	andwf	postinc2,w,c
 14794  01664C  6E2E               	movwf	(btemp+9)^0,c
 14795  01664E  0E80               	movlw	128
 14796  016650  14DE               	andwf	postinc2,w,c
 14797  016652  6E2F               	movwf	(btemp+10)^0,c
 14798  016654  0E7F               	movlw	127
 14799  016656  14DE               	andwf	postinc2,w,c
 14800  016658  6E30               	movwf	(btemp+11)^0,c
 14801  01665A  502D               	movf	(btemp+8)^0,w,c
 14802  01665C  102E               	iorwf	(btemp+9)^0,w,c
 14803  01665E  102F               	iorwf	(btemp+10)^0,w,c
 14804  016660  1030               	iorwf	(btemp+11)^0,w,c
 14805  016662  A4D8               	btfss	status,2,c
 14806  016664  D008               	goto	l7075
 14807                           
 14808                           ;stkvar	_ff1 @ sp[(0)+-4]
 14809  016666  0EFC               	movlw	-4
 14810  016668  6AE3               	clrf	plusw1,c
 14811  01666A  0EFD               	movlw	-3
 14812  01666C  6AE3               	clrf	plusw1,c
 14813  01666E  0EFE               	movlw	-2
 14814  016670  6AE3               	clrf	plusw1,c
 14815  016672  0EFF               	movlw	-1
 14816  016674  6AE3               	clrf	plusw1,c
 14817  016676                     l7075:
 14818                           
 14819                           ;stkvar	_ff2 @ sp[(0)+-8]
 14820  016676  50E1               	movf	fsr1l,w,c
 14821  016678  0FF8               	addlw	-8
 14822  01667A  6ED9               	movwf	fsr2l,c
 14823  01667C  50E2               	movf	fsr1h,w,c
 14824  01667E  6EDA               	movwf	fsr2h,c
 14825  016680  0EFF               	movlw	255
 14826  016682  22DA               	addwfc	fsr2h,f,c
 14827  016684  0E00               	movlw	0
 14828  016686  14DE               	andwf	postinc2,w,c
 14829  016688  6E2D               	movwf	(btemp+8)^0,c
 14830  01668A  0E00               	movlw	0
 14831  01668C  14DE               	andwf	postinc2,w,c
 14832  01668E  6E2E               	movwf	(btemp+9)^0,c
 14833  016690  0E80               	movlw	128
 14834  016692  14DE               	andwf	postinc2,w,c
 14835  016694  6E2F               	movwf	(btemp+10)^0,c
 14836  016696  0E7F               	movlw	127
 14837  016698  14DE               	andwf	postinc2,w,c
 14838  01669A  6E30               	movwf	(btemp+11)^0,c
 14839  01669C  502D               	movf	(btemp+8)^0,w,c
 14840  01669E  102E               	iorwf	(btemp+9)^0,w,c
 14841  0166A0  102F               	iorwf	(btemp+10)^0,w,c
 14842  0166A2  1030               	iorwf	(btemp+11)^0,w,c
 14843  0166A4  A4D8               	btfss	status,2,c
 14844  0166A6  D008               	goto	l2479
 14845                           
 14846                           ;stkvar	_ff2 @ sp[(0)+-8]
 14847  0166A8  0EF8               	movlw	-8
 14848  0166AA  6AE3               	clrf	plusw1,c
 14849  0166AC  0EF9               	movlw	-7
 14850  0166AE  6AE3               	clrf	plusw1,c
 14851  0166B0  0EFA               	movlw	-6
 14852  0166B2  6AE3               	clrf	plusw1,c
 14853  0166B4  0EFB               	movlw	-5
 14854  0166B6  6AE3               	clrf	plusw1,c
 14855  0166B8                     l2479:
 14856                           
 14857                           ;stkvar	_ff1 @ sp[(0)+-4]
 14858  0166B8  0EFF               	movlw	-1
 14859  0166BA  AEE3               	btfss	plusw1,7,c
 14860  0166BC  D024               	goto	l7081
 14861                           
 14862                           ;stkvar	_ff1 @ sp[(0)+-4]
 14863  0166BE  0E00               	movlw	0
 14864  0166C0  6E2D               	movwf	(btemp+8)^0,c
 14865  0166C2  0E00               	movlw	0
 14866  0166C4  6E2E               	movwf	(btemp+9)^0,c
 14867  0166C6  0E00               	movlw	0
 14868  0166C8  6E2F               	movwf	(btemp+10)^0,c
 14869  0166CA  0E80               	movlw	128
 14870  0166CC  6E30               	movwf	(btemp+11)^0,c
 14871  0166CE  0EFC               	movlw	-4
 14872  0166D0  50E3               	movf	plusw1,w,c
 14873  0166D2  5E2D               	subwf	(btemp+8)^0,f,c
 14874  0166D4  0EFD               	movlw	-3
 14875  0166D6  50E3               	movf	plusw1,w,c
 14876  0166D8  5A2E               	subwfb	(btemp+9)^0,f,c
 14877  0166DA  0EFE               	movlw	-2
 14878  0166DC  50E3               	movf	plusw1,w,c
 14879  0166DE  5A2F               	subwfb	(btemp+10)^0,f,c
 14880  0166E0  0EFF               	movlw	-1
 14881  0166E2  50E3               	movf	plusw1,w,c
 14882  0166E4  5A30               	subwfb	(btemp+11)^0,f,c
 14883                           
 14884                           ;stkvar	_ff1 @ sp[(0)+-4]
 14885  0166E6  0EFC               	movlw	-4
 14886  0166E8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14887  0166EE  0EFD               	movlw	-3
 14888  0166F0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14889  0166F6  0EFE               	movlw	-2
 14890  0166F8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14891  0166FE  0EFF               	movlw	-1
 14892  016700  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14893  016706                     l7081:
 14894                           
 14895                           ;stkvar	_ff2 @ sp[(0)+-8]
 14896  016706  0EFB               	movlw	-5
 14897  016708  AEE3               	btfss	plusw1,7,c
 14898  01670A  D024               	goto	l7085
 14899                           
 14900                           ;stkvar	_ff2 @ sp[(0)+-8]
 14901  01670C  0E00               	movlw	0
 14902  01670E  6E2D               	movwf	(btemp+8)^0,c
 14903  016710  0E00               	movlw	0
 14904  016712  6E2E               	movwf	(btemp+9)^0,c
 14905  016714  0E00               	movlw	0
 14906  016716  6E2F               	movwf	(btemp+10)^0,c
 14907  016718  0E80               	movlw	128
 14908  01671A  6E30               	movwf	(btemp+11)^0,c
 14909  01671C  0EF8               	movlw	-8
 14910  01671E  50E3               	movf	plusw1,w,c
 14911  016720  5E2D               	subwf	(btemp+8)^0,f,c
 14912  016722  0EF9               	movlw	-7
 14913  016724  50E3               	movf	plusw1,w,c
 14914  016726  5A2E               	subwfb	(btemp+9)^0,f,c
 14915  016728  0EFA               	movlw	-6
 14916  01672A  50E3               	movf	plusw1,w,c
 14917  01672C  5A2F               	subwfb	(btemp+10)^0,f,c
 14918  01672E  0EFB               	movlw	-5
 14919  016730  50E3               	movf	plusw1,w,c
 14920  016732  5A30               	subwfb	(btemp+11)^0,f,c
 14921                           
 14922                           ;stkvar	_ff2 @ sp[(0)+-8]
 14923  016734  0EF8               	movlw	-8
 14924  016736  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14925  01673C  0EF9               	movlw	-7
 14926  01673E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14927  016744  0EFA               	movlw	-6
 14928  016746  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14929  01674C  0EFB               	movlw	-5
 14930  01674E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14931  016754                     l7085:
 14932                           
 14933                           ;stkvar	_ff1 @ sp[(0)+-4]
 14934  016754  0EFF               	movlw	-1
 14935  016756  7EE3               	btg	plusw1,7,c
 14936                           
 14937                           ;stkvar	_ff2 @ sp[(0)+-8]
 14938  016758  0EFB               	movlw	-5
 14939  01675A  7EE3               	btg	plusw1,7,c
 14940                           
 14941                           ;stkvar	_ff2 @ sp[(0)+-8]
 14942                           ;stkvar	_ff1 @ sp[(0)+-4]
 14943  01675C  50E1               	movf	fsr1l,w,c
 14944  01675E  0FFC               	addlw	-4
 14945  016760  6ED9               	movwf	fsr2l,c
 14946  016762  50E2               	movf	fsr1h,w,c
 14947  016764  6EDA               	movwf	fsr2h,c
 14948  016766  0EFF               	movlw	255
 14949  016768  22DA               	addwfc	fsr2h,f,c
 14950  01676A  0EF8               	movlw	-8
 14951  01676C  50E3               	movf	plusw1,w,c
 14952  01676E  5CDE               	subwf	postinc2,w,c
 14953  016770  0EF9               	movlw	-7
 14954  016772  50E3               	movf	plusw1,w,c
 14955  016774  58DE               	subwfb	postinc2,w,c
 14956  016776  0EFA               	movlw	-6
 14957  016778  50E3               	movf	plusw1,w,c
 14958  01677A  58DE               	subwfb	postinc2,w,c
 14959  01677C  0EFB               	movlw	-5
 14960  01677E  50E3               	movf	plusw1,w,c
 14961  016780  58DE               	subwfb	postinc2,w,c
 14962  016782  B0D8               	btfsc	status,0,c
 14963  016784  D002               	goto	l7093
 14964  016786  9025               	bcf	btemp& (0+255),0,c
 14965  016788  D001               	goto	l2486
 14966  01678A                     l7093:
 14967  01678A  8025               	bsf	btemp& (0+255),0,c
 14968  01678C                     l2486:
 14969                           
 14970                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14971  01678C  0EF8               	movlw	248
 14972  01678E  26E1               	addwf	fsr1l,f,c
 14973  016790  0EFF               	movlw	255
 14974  016792  22E2               	addwfc	fsr1h,f,c
 14975  016794  0012               	return		;funcret
 14976  016796                     __end_of___flge:
 14977                           	opt callstack 0
 14978                           
 14979 ;; *************** function ___fleq *****************
 14980 ;; Defined at:
 14981 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;  ff1             4  [STACK] long 
 14984 ;;  ff2             4  [STACK] long 
 14985 ;; Auto vars:     Size  Location     Type
 14986 ;;		None
 14987 ;; Return value:  Size  Location     Type
 14988 ;;		None               void
 14989 ;; Registers used:
 14990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14991 ;; Tracked objects:
 14992 ;;		On entry : 0/0
 14993 ;;		On exit  : 0/0
 14994 ;;		Unchanged: 0/0
 14995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15000 ;;Total ram usage:        0 bytes
 15001 ;; Hardware stack levels used:    1
 15002 ;; Hardware stack levels required when called:   10
 15003 ;; This function calls:
 15004 ;;		Nothing
 15005 ;; This function is called by:
 15006 ;;		_efgtoa
 15007 ;; This function uses a reentrant model
 15008 ;;
 15009                           
 15010                           	psect	text57
 15011  01760E                     __ptext57:
 15012                           	opt callstack 0
 15013  01760E                     ___fleq:
 15014                           	opt callstack 13
 15015                           
 15016                           ;stkvar	_ff1 @ sp[(0)+-4]
 15017                           
 15018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15019                           ;incstack = 0
 15020  01760E  50E1               	movf	fsr1l,w,c
 15021  017610  0FFC               	addlw	-4
 15022  017612  6ED9               	movwf	fsr2l,c
 15023  017614  50E2               	movf	fsr1h,w,c
 15024  017616  6EDA               	movwf	fsr2h,c
 15025  017618  0EFF               	movlw	255
 15026  01761A  22DA               	addwfc	fsr2h,f,c
 15027  01761C  0E00               	movlw	0
 15028  01761E  14DE               	andwf	postinc2,w,c
 15029  017620  6E2D               	movwf	(btemp+8)^0,c
 15030  017622  0E00               	movlw	0
 15031  017624  14DE               	andwf	postinc2,w,c
 15032  017626  6E2E               	movwf	(btemp+9)^0,c
 15033  017628  0E80               	movlw	128
 15034  01762A  14DE               	andwf	postinc2,w,c
 15035  01762C  6E2F               	movwf	(btemp+10)^0,c
 15036  01762E  0E7F               	movlw	127
 15037  017630  14DE               	andwf	postinc2,w,c
 15038  017632  6E30               	movwf	(btemp+11)^0,c
 15039  017634  502D               	movf	(btemp+8)^0,w,c
 15040  017636  102E               	iorwf	(btemp+9)^0,w,c
 15041  017638  102F               	iorwf	(btemp+10)^0,w,c
 15042  01763A  1030               	iorwf	(btemp+11)^0,w,c
 15043  01763C  A4D8               	btfss	status,2,c
 15044  01763E  D008               	goto	l7059
 15045                           
 15046                           ;stkvar	_ff1 @ sp[(0)+-4]
 15047  017640  0EFC               	movlw	-4
 15048  017642  6AE3               	clrf	plusw1,c
 15049  017644  0EFD               	movlw	-3
 15050  017646  6AE3               	clrf	plusw1,c
 15051  017648  0EFE               	movlw	-2
 15052  01764A  6AE3               	clrf	plusw1,c
 15053  01764C  0EFF               	movlw	-1
 15054  01764E  6AE3               	clrf	plusw1,c
 15055  017650                     l7059:
 15056                           
 15057                           ;stkvar	_ff2 @ sp[(0)+-8]
 15058  017650  50E1               	movf	fsr1l,w,c
 15059  017652  0FF8               	addlw	-8
 15060  017654  6ED9               	movwf	fsr2l,c
 15061  017656  50E2               	movf	fsr1h,w,c
 15062  017658  6EDA               	movwf	fsr2h,c
 15063  01765A  0EFF               	movlw	255
 15064  01765C  22DA               	addwfc	fsr2h,f,c
 15065  01765E  0E00               	movlw	0
 15066  017660  14DE               	andwf	postinc2,w,c
 15067  017662  6E2D               	movwf	(btemp+8)^0,c
 15068  017664  0E00               	movlw	0
 15069  017666  14DE               	andwf	postinc2,w,c
 15070  017668  6E2E               	movwf	(btemp+9)^0,c
 15071  01766A  0E80               	movlw	128
 15072  01766C  14DE               	andwf	postinc2,w,c
 15073  01766E  6E2F               	movwf	(btemp+10)^0,c
 15074  017670  0E7F               	movlw	127
 15075  017672  14DE               	andwf	postinc2,w,c
 15076  017674  6E30               	movwf	(btemp+11)^0,c
 15077  017676  502D               	movf	(btemp+8)^0,w,c
 15078  017678  102E               	iorwf	(btemp+9)^0,w,c
 15079  01767A  102F               	iorwf	(btemp+10)^0,w,c
 15080  01767C  1030               	iorwf	(btemp+11)^0,w,c
 15081  01767E  A4D8               	btfss	status,2,c
 15082  017680  D008               	goto	l7063
 15083                           
 15084                           ;stkvar	_ff2 @ sp[(0)+-8]
 15085  017682  0EF8               	movlw	-8
 15086  017684  6AE3               	clrf	plusw1,c
 15087  017686  0EF9               	movlw	-7
 15088  017688  6AE3               	clrf	plusw1,c
 15089  01768A  0EFA               	movlw	-6
 15090  01768C  6AE3               	clrf	plusw1,c
 15091  01768E  0EFB               	movlw	-5
 15092  017690  6AE3               	clrf	plusw1,c
 15093  017692                     l7063:
 15094                           
 15095                           ;stkvar	_ff2 @ sp[(0)+-8]
 15096                           ;stkvar	_ff1 @ sp[(0)+-4]
 15097  017692  50E1               	movf	fsr1l,w,c
 15098  017694  0FFC               	addlw	-4
 15099  017696  6ED9               	movwf	fsr2l,c
 15100  017698  50E2               	movf	fsr1h,w,c
 15101  01769A  6EDA               	movwf	fsr2h,c
 15102  01769C  0EFF               	movlw	255
 15103  01769E  22DA               	addwfc	fsr2h,f,c
 15104  0176A0  0EF8               	movlw	-8
 15105  0176A2  50E3               	movf	plusw1,w,c
 15106  0176A4  18DE               	xorwf	postinc2,w,c
 15107  0176A6  E10D               	bnz	u5700
 15108  0176A8  0EF9               	movlw	-7
 15109  0176AA  50E3               	movf	plusw1,w,c
 15110  0176AC  18DE               	xorwf	postinc2,w,c
 15111  0176AE  E109               	bnz	u5700
 15112  0176B0  0EFA               	movlw	-6
 15113  0176B2  50E3               	movf	plusw1,w,c
 15114  0176B4  18DE               	xorwf	postinc2,w,c
 15115  0176B6  E105               	bnz	u5700
 15116  0176B8  0EFB               	movlw	-5
 15117  0176BA  50E3               	movf	plusw1,w,c
 15118  0176BC  18DE               	xorwf	postinc2,w,c
 15119  0176BE  B4D8               	btfsc	status,2,c
 15120  0176C0  D002               	goto	l7067
 15121  0176C2                     u5700:
 15122  0176C2  9025               	bcf	btemp& (0+255),0,c
 15123  0176C4  D001               	goto	l2475
 15124  0176C6                     l7067:
 15125  0176C6  8025               	bsf	btemp& (0+255),0,c
 15126  0176C8                     l2475:
 15127                           
 15128                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15129  0176C8  0EF8               	movlw	248
 15130  0176CA  26E1               	addwf	fsr1l,f,c
 15131  0176CC  0EFF               	movlw	255
 15132  0176CE  22E2               	addwfc	fsr1h,f,c
 15133  0176D0  0012               	return		;funcret
 15134  0176D2                     __end_of___fleq:
 15135                           	opt callstack 0
 15136                           
 15137 ;; *************** function ___fldiv *****************
 15138 ;; Defined at:
 15139 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15140 ;; Parameters:    Size  Location     Type
 15141 ;;  b               4  [STACK] long 
 15142 ;;  a               4  [STACK] long 
 15143 ;; Auto vars:     Size  Location     Type
 15144 ;;  grs             4  [STACK] unsigned long 
 15145 ;;  rem             4  [STACK] unsigned long 
 15146 ;;  new_exp         2  [STACK] short 
 15147 ;;  aexp            1  [STACK] unsigned char 
 15148 ;;  bexp            1  [STACK] unsigned char 
 15149 ;;  sign            1  [STACK] unsigned char 
 15150 ;; Return value:  Size  Location     Type
 15151 ;;                  4  [STACK] unsigned char 
 15152 ;; Registers used:
 15153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15154 ;; Tracked objects:
 15155 ;;		On entry : 0/2
 15156 ;;		On exit  : 0/0
 15157 ;;		Unchanged: 0/0
 15158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15163 ;;Total ram usage:        0 bytes
 15164 ;; Hardware stack levels used:    1
 15165 ;; Hardware stack levels required when called:   10
 15166 ;; This function calls:
 15167 ;;		Nothing
 15168 ;; This function is called by:
 15169 ;;		_conv_raw_result
 15170 ;;		_efgtoa
 15171 ;; This function uses a reentrant model
 15172 ;;
 15173                           
 15174                           	psect	text58
 15175  0135F6                     __ptext58:
 15176                           	opt callstack 0
 15177  0135F6                     ___fldiv:
 15178                           	opt callstack 0
 15179                           
 15180                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15181  0135F6  0E0D               	movlw	13
 15182  0135F8  26E1               	addwf	fsr1l,f,c
 15183  0135FA  0E00               	movlw	0
 15184  0135FC  22E2               	addwfc	fsr1h,f,c
 15185                           
 15186                           ;stkvar	_b @ sp[(-13)+-4]
 15187                           
 15188                           ;incstack = 0
 15189  0135FE  0EF2               	movlw	242
 15190  013600  24E1               	addwf	fsr1l,w,c
 15191  013602  6ED9               	movwf	fsr2l,c
 15192  013604  0EFF               	movlw	255
 15193  013606  20E2               	addwfc	fsr1h,w,c
 15194  013608  6EDA               	movwf	fsr2h,c
 15195  01360A  50DF               	movf	indf2,w,c
 15196  01360C  6E30               	movwf	(btemp+11)^0,c
 15197  01360E  0E80               	movlw	128
 15198  013610  1630               	andwf	(btemp+11)^0,f,c
 15199                           
 15200                           ;stkvar	_sign @ sp[(-13)+12]
 15201  013612  0EFF               	movlw	-1
 15202  013614  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15203                           
 15204                           ;stkvar	_b @ sp[(-13)+-4]
 15205  01361A  0EF2               	movlw	242
 15206  01361C  24E1               	addwf	fsr1l,w,c
 15207  01361E  6ED9               	movwf	fsr2l,c
 15208  013620  0EFF               	movlw	255
 15209  013622  20E2               	addwfc	fsr1h,w,c
 15210  013624  6EDA               	movwf	fsr2h,c
 15211  013626  50DF               	movf	indf2,w,c
 15212  013628  6E30               	movwf	(btemp+11)^0,c
 15213  01362A  90D8               	bcf	status,0,c
 15214  01362C  3430               	rlcf	(btemp+11)^0,w,c
 15215  01362E  6E2F               	movwf	(btemp+10)^0,c
 15216                           
 15217                           ;stkvar	_bexp @ sp[(-13)+11]
 15218  013630  0EFE               	movlw	-2
 15219  013632  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15220                           
 15221                           ;stkvar	_b @ sp[(-13)+-4]
 15222  013638  0EF1               	movlw	241
 15223  01363A  24E1               	addwf	fsr1l,w,c
 15224  01363C  6ED9               	movwf	fsr2l,c
 15225  01363E  0EFF               	movlw	255
 15226  013640  20E2               	addwfc	fsr1h,w,c
 15227  013642  6EDA               	movwf	fsr2h,c
 15228  013644  AEDF               	btfss	indf2,7,c
 15229  013646  D002               	goto	l6823
 15230                           
 15231                           ;stkvar	_bexp @ sp[(-13)+11]
 15232  013648  0EFE               	movlw	-2
 15233  01364A  80E3               	bsf	plusw1,0,c
 15234  01364C                     l6823:
 15235                           
 15236                           ;stkvar	_bexp @ sp[(-13)+11]
 15237  01364C  0EFE               	movlw	-2
 15238  01364E  50E3               	movf	plusw1,w,c
 15239  013650  B4D8               	btfsc	status,2,c
 15240  013652  D027               	goto	l6833
 15241                           
 15242                           ;stkvar	_bexp @ sp[(-13)+11]
 15243  013654  0EFE               	movlw	-2
 15244  013656  28E3               	incf	plusw1,w,c
 15245  013658  A4D8               	btfss	status,2,c
 15246  01365A  D018               	goto	l6829
 15247  01365C  0E00               	movlw	0
 15248  01365E  6E2D               	movwf	(btemp+8)^0,c
 15249  013660  0E00               	movlw	0
 15250  013662  6E2E               	movwf	(btemp+9)^0,c
 15251  013664  0E00               	movlw	0
 15252  013666  6E2F               	movwf	(btemp+10)^0,c
 15253  013668  0E00               	movlw	0
 15254  01366A  6E30               	movwf	(btemp+11)^0,c
 15255                           
 15256                           ;stkvar	_b @ sp[(-13)+-4]
 15257  01366C  0EEF               	movlw	-17
 15258  01366E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15259  013674  0EF0               	movlw	-16
 15260  013676  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15261  01367C  0EF1               	movlw	-15
 15262  01367E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15263  013684  0EF2               	movlw	-14
 15264  013686  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15265  01368C                     l6829:
 15266                           
 15267                           ;stkvar	_b @ sp[(-13)+-4]
 15268  01368C  0EF1               	movlw	-15
 15269  01368E  8EE3               	bsf	plusw1,7,c
 15270                           
 15271                           ;stkvar	_b @ sp[(-13)+-4]
 15272  013690  0EF2               	movlw	242
 15273  013692  24E1               	addwf	fsr1l,w,c
 15274  013694  6ED9               	movwf	fsr2l,c
 15275  013696  0EFF               	movlw	255
 15276  013698  20E2               	addwfc	fsr1h,w,c
 15277  01369A  6EDA               	movwf	fsr2h,c
 15278  01369C  0E00               	movlw	0
 15279  01369E  6EDF               	movwf	indf2,c
 15280  0136A0  D018               	goto	l6835
 15281  0136A2                     l6833:
 15282  0136A2  0E00               	movlw	0
 15283  0136A4  6E2D               	movwf	(btemp+8)^0,c
 15284  0136A6  0E00               	movlw	0
 15285  0136A8  6E2E               	movwf	(btemp+9)^0,c
 15286  0136AA  0E00               	movlw	0
 15287  0136AC  6E2F               	movwf	(btemp+10)^0,c
 15288  0136AE  0E00               	movlw	0
 15289  0136B0  6E30               	movwf	(btemp+11)^0,c
 15290                           
 15291                           ;stkvar	_b @ sp[(-13)+-4]
 15292  0136B2  0EEF               	movlw	-17
 15293  0136B4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15294  0136BA  0EF0               	movlw	-16
 15295  0136BC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15296  0136C2  0EF1               	movlw	-15
 15297  0136C4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15298  0136CA  0EF2               	movlw	-14
 15299  0136CC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15300  0136D2                     l6835:
 15301                           
 15302                           ;stkvar	_a @ sp[(-13)+-8]
 15303  0136D2  0EEE               	movlw	238
 15304  0136D4  24E1               	addwf	fsr1l,w,c
 15305  0136D6  6ED9               	movwf	fsr2l,c
 15306  0136D8  0EFF               	movlw	255
 15307  0136DA  20E2               	addwfc	fsr1h,w,c
 15308  0136DC  6EDA               	movwf	fsr2h,c
 15309  0136DE  50DF               	movf	indf2,w,c
 15310  0136E0  6E30               	movwf	(btemp+11)^0,c
 15311  0136E2  0E80               	movlw	128
 15312  0136E4  1630               	andwf	(btemp+11)^0,f,c
 15313                           
 15314                           ;stkvar	_sign @ sp[(-13)+12]
 15315  0136E6  50E1               	movf	fsr1l,w,c
 15316  0136E8  0FFF               	addlw	-1
 15317  0136EA  6ED9               	movwf	fsr2l,c
 15318  0136EC  50E2               	movf	fsr1h,w,c
 15319  0136EE  6EDA               	movwf	fsr2h,c
 15320  0136F0  0EFF               	movlw	255
 15321  0136F2  22DA               	addwfc	fsr2h,f,c
 15322  0136F4  5030               	movf	(btemp+11)^0,w,c
 15323  0136F6  1ADF               	xorwf	indf2,f,c
 15324                           
 15325                           ;stkvar	_a @ sp[(-13)+-8]
 15326  0136F8  0EEE               	movlw	238
 15327  0136FA  24E1               	addwf	fsr1l,w,c
 15328  0136FC  6ED9               	movwf	fsr2l,c
 15329  0136FE  0EFF               	movlw	255
 15330  013700  20E2               	addwfc	fsr1h,w,c
 15331  013702  6EDA               	movwf	fsr2h,c
 15332  013704  50DF               	movf	indf2,w,c
 15333  013706  6E30               	movwf	(btemp+11)^0,c
 15334  013708  90D8               	bcf	status,0,c
 15335  01370A  3430               	rlcf	(btemp+11)^0,w,c
 15336  01370C  6E2F               	movwf	(btemp+10)^0,c
 15337                           
 15338                           ;stkvar	_aexp @ sp[(-13)+10]
 15339  01370E  0EFD               	movlw	-3
 15340  013710  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15341                           
 15342                           ;stkvar	_a @ sp[(-13)+-8]
 15343  013716  0EED               	movlw	237
 15344  013718  24E1               	addwf	fsr1l,w,c
 15345  01371A  6ED9               	movwf	fsr2l,c
 15346  01371C  0EFF               	movlw	255
 15347  01371E  20E2               	addwfc	fsr1h,w,c
 15348  013720  6EDA               	movwf	fsr2h,c
 15349  013722  AEDF               	btfss	indf2,7,c
 15350  013724  D002               	goto	l6843
 15351                           
 15352                           ;stkvar	_aexp @ sp[(-13)+10]
 15353  013726  0EFD               	movlw	-3
 15354  013728  80E3               	bsf	plusw1,0,c
 15355  01372A                     l6843:
 15356                           
 15357                           ;stkvar	_aexp @ sp[(-13)+10]
 15358  01372A  0EFD               	movlw	-3
 15359  01372C  50E3               	movf	plusw1,w,c
 15360  01372E  B4D8               	btfsc	status,2,c
 15361  013730  D027               	goto	l6853
 15362                           
 15363                           ;stkvar	_aexp @ sp[(-13)+10]
 15364  013732  0EFD               	movlw	-3
 15365  013734  28E3               	incf	plusw1,w,c
 15366  013736  A4D8               	btfss	status,2,c
 15367  013738  D018               	goto	l6849
 15368  01373A  0E00               	movlw	0
 15369  01373C  6E2D               	movwf	(btemp+8)^0,c
 15370  01373E  0E00               	movlw	0
 15371  013740  6E2E               	movwf	(btemp+9)^0,c
 15372  013742  0E00               	movlw	0
 15373  013744  6E2F               	movwf	(btemp+10)^0,c
 15374  013746  0E00               	movlw	0
 15375  013748  6E30               	movwf	(btemp+11)^0,c
 15376                           
 15377                           ;stkvar	_a @ sp[(-13)+-8]
 15378  01374A  0EEB               	movlw	-21
 15379  01374C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15380  013752  0EEC               	movlw	-20
 15381  013754  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15382  01375A  0EED               	movlw	-19
 15383  01375C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15384  013762  0EEE               	movlw	-18
 15385  013764  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15386  01376A                     l6849:
 15387                           
 15388                           ;stkvar	_a @ sp[(-13)+-8]
 15389  01376A  0EED               	movlw	-19
 15390  01376C  8EE3               	bsf	plusw1,7,c
 15391                           
 15392                           ;stkvar	_a @ sp[(-13)+-8]
 15393  01376E  0EEE               	movlw	238
 15394  013770  24E1               	addwf	fsr1l,w,c
 15395  013772  6ED9               	movwf	fsr2l,c
 15396  013774  0EFF               	movlw	255
 15397  013776  20E2               	addwfc	fsr1h,w,c
 15398  013778  6EDA               	movwf	fsr2h,c
 15399  01377A  0E00               	movlw	0
 15400  01377C  6EDF               	movwf	indf2,c
 15401  01377E  D018               	goto	l6855
 15402  013780                     l6853:
 15403  013780  0E00               	movlw	0
 15404  013782  6E2D               	movwf	(btemp+8)^0,c
 15405  013784  0E00               	movlw	0
 15406  013786  6E2E               	movwf	(btemp+9)^0,c
 15407  013788  0E00               	movlw	0
 15408  01378A  6E2F               	movwf	(btemp+10)^0,c
 15409  01378C  0E00               	movlw	0
 15410  01378E  6E30               	movwf	(btemp+11)^0,c
 15411                           
 15412                           ;stkvar	_a @ sp[(-13)+-8]
 15413  013790  0EEB               	movlw	-21
 15414  013792  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15415  013798  0EEC               	movlw	-20
 15416  01379A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15417  0137A0  0EED               	movlw	-19
 15418  0137A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15419  0137A8  0EEE               	movlw	-18
 15420  0137AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15421  0137B0                     l6855:
 15422                           
 15423                           ;stkvar	_a @ sp[(-13)+-8]
 15424  0137B0  0EEB               	movlw	-21
 15425  0137B2  50E3               	movf	plusw1,w,c
 15426  0137B4  E139               	bnz	l6867
 15427  0137B6  0EEC               	movlw	-20
 15428  0137B8  50E3               	movf	plusw1,w,c
 15429  0137BA  E136               	bnz	l6867
 15430  0137BC  0EED               	movlw	-19
 15431  0137BE  50E3               	movf	plusw1,w,c
 15432  0137C0  E133               	bnz	l6867
 15433  0137C2  0EEE               	movlw	-18
 15434  0137C4  50E3               	movf	plusw1,w,c
 15435  0137C6  A4D8               	btfss	status,2,c
 15436  0137C8  D02F               	goto	l6867
 15437                           
 15438                           ;stkvar	_b @ sp[(-13)+-4]
 15439  0137CA  0EEF               	movlw	-17
 15440  0137CC  6AE3               	clrf	plusw1,c
 15441  0137CE  0EF0               	movlw	-16
 15442  0137D0  6AE3               	clrf	plusw1,c
 15443  0137D2  0EF1               	movlw	-15
 15444  0137D4  6AE3               	clrf	plusw1,c
 15445  0137D6  0EF2               	movlw	-14
 15446  0137D8  6AE3               	clrf	plusw1,c
 15447                           
 15448                           ;stkvar	_b @ sp[(-13)+-4]
 15449  0137DA  0EF1               	movlw	241
 15450  0137DC  24E1               	addwf	fsr1l,w,c
 15451  0137DE  6ED9               	movwf	fsr2l,c
 15452  0137E0  0EFF               	movlw	255
 15453  0137E2  20E2               	addwfc	fsr1h,w,c
 15454  0137E4  6EDA               	movwf	fsr2h,c
 15455  0137E6  0E80               	movlw	128
 15456  0137E8  12DE               	iorwf	postinc2,f,c
 15457  0137EA  0E7F               	movlw	127
 15458  0137EC  12DD               	iorwf	postdec2,f,c
 15459  0137EE                     l6861:
 15460                           
 15461                           ;stkvar	_sign @ sp[(-13)+12]
 15462  0137EE  0EFF               	movlw	-1
 15463  0137F0  006F FF8C  F030    	movff	plusw1,btemp+11
 15464                           
 15465                           ;stkvar	_b @ sp[(-13)+-4]
 15466  0137F6  0EF2               	movlw	242
 15467  0137F8  24E1               	addwf	fsr1l,w,c
 15468  0137FA  6ED9               	movwf	fsr2l,c
 15469  0137FC  0EFF               	movlw	255
 15470  0137FE  20E2               	addwfc	fsr1h,w,c
 15471  013800  6EDA               	movwf	fsr2h,c
 15472  013802  5030               	movf	(btemp+11)^0,w,c
 15473  013804  12DF               	iorwf	indf2,f,c
 15474                           
 15475                           ;stkvar	_b @ sp[(-13)+-4]
 15476  013806  0EEF               	movlw	-17
 15477  013808  006F FF8C  F025    	movff	plusw1,btemp
 15478  01380E  0EF0               	movlw	-16
 15479  013810  006F FF8C  F026    	movff	plusw1,btemp+1
 15480  013816  0EF1               	movlw	-15
 15481  013818  006F FF8C  F027    	movff	plusw1,btemp+2
 15482  01381E  0EF2               	movlw	-14
 15483  013820  006F FF8C  F028    	movff	plusw1,btemp+3
 15484  013826  D19F               	goto	l2798
 15485  013828                     l6867:
 15486                           
 15487                           ;stkvar	_bexp @ sp[(-13)+11]
 15488  013828  0EFE               	movlw	-2
 15489  01382A  50E3               	movf	plusw1,w,c
 15490  01382C  A4D8               	btfss	status,2,c
 15491  01382E  D009               	goto	l6875
 15492  013830  0E00               	movlw	0
 15493  013832  6E25               	movwf	btemp^0,c
 15494  013834  0E00               	movlw	0
 15495  013836  6E26               	movwf	(btemp+1)^0,c
 15496  013838  0E00               	movlw	0
 15497  01383A  6E27               	movwf	(btemp+2)^0,c
 15498  01383C  0E00               	movlw	0
 15499  01383E  6E28               	movwf	(btemp+3)^0,c
 15500  013840  D192               	goto	l2798
 15501  013842                     l6875:
 15502                           
 15503                           ;stkvar	_bexp @ sp[(-13)+11]
 15504  013842  0EFE               	movlw	-2
 15505  013844  50E3               	movf	plusw1,w,c
 15506  013846  6E2F               	movwf	(btemp+10)^0,c
 15507  013848  6A30               	clrf	(btemp+11)^0,c
 15508                           
 15509                           ;stkvar	_aexp @ sp[(-13)+10]
 15510  01384A  0EFD               	movlw	-3
 15511  01384C  50E3               	movf	plusw1,w,c
 15512  01384E  5E2F               	subwf	(btemp+10)^0,f,c
 15513  013850  0E00               	movlw	0
 15514  013852  5A30               	subwfb	(btemp+11)^0,f,c
 15515  013854  0E7F               	movlw	127
 15516  013856  262F               	addwf	(btemp+10)^0,f,c
 15517  013858  0E00               	movlw	0
 15518  01385A  2230               	addwfc	(btemp+11)^0,f,c
 15519                           
 15520                           ;stkvar	_new_exp @ sp[(-13)+8]
 15521  01385C  0EFB               	movlw	-5
 15522  01385E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15523  013864  0EFC               	movlw	-4
 15524  013866  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15525                           
 15526                           ;stkvar	_b @ sp[(-13)+-4]
 15527  01386C  0EEF               	movlw	-17
 15528  01386E  006F FF8C  F02D    	movff	plusw1,btemp+8
 15529  013874  0EF0               	movlw	-16
 15530  013876  006F FF8C  F02E    	movff	plusw1,btemp+9
 15531  01387C  0EF1               	movlw	-15
 15532  01387E  006F FF8C  F02F    	movff	plusw1,btemp+10
 15533  013884  0EF2               	movlw	-14
 15534  013886  006F FF8C  F030    	movff	plusw1,btemp+11
 15535                           
 15536                           ;stkvar	_rem @ sp[(-13)+4]
 15537  01388C  0EF7               	movlw	-9
 15538  01388E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15539  013894  0EF8               	movlw	-8
 15540  013896  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15541  01389C  0EF9               	movlw	-7
 15542  01389E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15543  0138A4  0EFA               	movlw	-6
 15544  0138A6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15545                           
 15546                           ;stkvar	_b @ sp[(-13)+-4]
 15547  0138AC  0EEF               	movlw	-17
 15548  0138AE  6AE3               	clrf	plusw1,c
 15549  0138B0  0EF0               	movlw	-16
 15550  0138B2  6AE3               	clrf	plusw1,c
 15551  0138B4  0EF1               	movlw	-15
 15552  0138B6  6AE3               	clrf	plusw1,c
 15553  0138B8  0EF2               	movlw	-14
 15554  0138BA  6AE3               	clrf	plusw1,c
 15555                           
 15556                           ;stkvar	_grs @ sp[(-13)+0]
 15557  0138BC  0EF3               	movlw	-13
 15558  0138BE  6AE3               	clrf	plusw1,c
 15559  0138C0  0EF4               	movlw	-12
 15560  0138C2  6AE3               	clrf	plusw1,c
 15561  0138C4  0EF5               	movlw	-11
 15562  0138C6  6AE3               	clrf	plusw1,c
 15563  0138C8  0EF6               	movlw	-10
 15564  0138CA  6AE3               	clrf	plusw1,c
 15565                           
 15566                           ;stkvar	_aexp @ sp[(-13)+10]
 15567  0138CC  0EFD               	movlw	-3
 15568  0138CE  6AE3               	clrf	plusw1,c
 15569  0138D0  D050               	goto	l6903
 15570  0138D2                     l6885:
 15571                           
 15572                           ;stkvar	_aexp @ sp[(-13)+10]
 15573  0138D2  0EFD               	movlw	-3
 15574  0138D4  50E3               	movf	plusw1,w,c
 15575  0138D6  B4D8               	btfsc	status,2,c
 15576  0138D8  D020               	goto	l6895
 15577                           
 15578                           ;stkvar	_rem @ sp[(-13)+4]
 15579  0138DA  90D8               	bcf	status,0,c
 15580  0138DC  0EF7               	movlw	-9
 15581  0138DE  36E3               	rlcf	plusw1,f,c
 15582  0138E0  0EF8               	movlw	-8
 15583  0138E2  36E3               	rlcf	plusw1,f,c
 15584  0138E4  0EF9               	movlw	-7
 15585  0138E6  36E3               	rlcf	plusw1,f,c
 15586  0138E8  0EFA               	movlw	-6
 15587  0138EA  36E3               	rlcf	plusw1,f,c
 15588                           
 15589                           ;stkvar	_b @ sp[(-13)+-4]
 15590  0138EC  90D8               	bcf	status,0,c
 15591  0138EE  0EEF               	movlw	-17
 15592  0138F0  36E3               	rlcf	plusw1,f,c
 15593  0138F2  0EF0               	movlw	-16
 15594  0138F4  36E3               	rlcf	plusw1,f,c
 15595  0138F6  0EF1               	movlw	-15
 15596  0138F8  36E3               	rlcf	plusw1,f,c
 15597  0138FA  0EF2               	movlw	-14
 15598  0138FC  36E3               	rlcf	plusw1,f,c
 15599                           
 15600                           ;stkvar	_grs @ sp[(-13)+0]
 15601  0138FE  0EF6               	movlw	-10
 15602  013900  AEE3               	btfss	plusw1,7,c
 15603  013902  D002               	goto	l6893
 15604                           
 15605                           ;stkvar	_b @ sp[(-13)+-4]
 15606  013904  0EEF               	movlw	-17
 15607  013906  80E3               	bsf	plusw1,0,c
 15608  013908                     l6893:
 15609                           
 15610                           ;stkvar	_grs @ sp[(-13)+0]
 15611  013908  90D8               	bcf	status,0,c
 15612  01390A  0EF3               	movlw	-13
 15613  01390C  36E3               	rlcf	plusw1,f,c
 15614  01390E  0EF4               	movlw	-12
 15615  013910  36E3               	rlcf	plusw1,f,c
 15616  013912  0EF5               	movlw	-11
 15617  013914  36E3               	rlcf	plusw1,f,c
 15618  013916  0EF6               	movlw	-10
 15619  013918  36E3               	rlcf	plusw1,f,c
 15620  01391A                     l6895:
 15621                           
 15622                           ;stkvar	_a @ sp[(-13)+-8]
 15623                           ;stkvar	_rem @ sp[(-13)+4]
 15624  01391A  50E1               	movf	fsr1l,w,c
 15625  01391C  0FF7               	addlw	-9
 15626  01391E  6ED9               	movwf	fsr2l,c
 15627  013920  50E2               	movf	fsr1h,w,c
 15628  013922  6EDA               	movwf	fsr2h,c
 15629  013924  0EFF               	movlw	255
 15630  013926  22DA               	addwfc	fsr2h,f,c
 15631  013928  0EEB               	movlw	-21
 15632  01392A  50E3               	movf	plusw1,w,c
 15633  01392C  5CDE               	subwf	postinc2,w,c
 15634  01392E  0EEC               	movlw	-20
 15635  013930  50E3               	movf	plusw1,w,c
 15636  013932  58DE               	subwfb	postinc2,w,c
 15637  013934  0EED               	movlw	-19
 15638  013936  50E3               	movf	plusw1,w,c
 15639  013938  58DE               	subwfb	postinc2,w,c
 15640  01393A  0EEE               	movlw	-18
 15641  01393C  50E3               	movf	plusw1,w,c
 15642  01393E  58DE               	subwfb	postinc2,w,c
 15643  013940  A0D8               	btfss	status,0,c
 15644  013942  D015               	goto	l6901
 15645                           
 15646                           ;stkvar	_grs @ sp[(-13)+0]
 15647  013944  0EF6               	movlw	-10
 15648  013946  8CE3               	bsf	plusw1,6,c
 15649                           
 15650                           ;stkvar	_a @ sp[(-13)+-8]
 15651                           ;stkvar	_rem @ sp[(-13)+4]
 15652  013948  50E1               	movf	fsr1l,w,c
 15653  01394A  0FF7               	addlw	-9
 15654  01394C  6ED9               	movwf	fsr2l,c
 15655  01394E  50E2               	movf	fsr1h,w,c
 15656  013950  6EDA               	movwf	fsr2h,c
 15657  013952  0EFF               	movlw	255
 15658  013954  22DA               	addwfc	fsr2h,f,c
 15659  013956  0EEB               	movlw	-21
 15660  013958  50E3               	movf	plusw1,w,c
 15661  01395A  5EDE               	subwf	postinc2,f,c
 15662  01395C  0EEC               	movlw	-20
 15663  01395E  50E3               	movf	plusw1,w,c
 15664  013960  5ADE               	subwfb	postinc2,f,c
 15665  013962  0EED               	movlw	-19
 15666  013964  50E3               	movf	plusw1,w,c
 15667  013966  5ADE               	subwfb	postinc2,f,c
 15668  013968  0EEE               	movlw	-18
 15669  01396A  50E3               	movf	plusw1,w,c
 15670  01396C  5ADE               	subwfb	postinc2,f,c
 15671  01396E                     l6901:
 15672                           
 15673                           ;stkvar	_aexp @ sp[(-13)+10]
 15674  01396E  0EFD               	movlw	-3
 15675  013970  2AE3               	incf	plusw1,f,c
 15676  013972                     l6903:
 15677                           
 15678                           ;stkvar	_aexp @ sp[(-13)+10]
 15679  013972  0EFD               	movlw	-3
 15680  013974  006F FF8C  F025    	movff	plusw1,btemp
 15681  01397A  0E19               	movlw	25
 15682  01397C  6425               	cpfsgt	btemp^0,c
 15683  01397E  D7A9               	goto	l6885
 15684                           
 15685                           ;stkvar	_rem @ sp[(-13)+4]
 15686  013980  0EF7               	movlw	-9
 15687  013982  50E3               	movf	plusw1,w,c
 15688  013984  E10A               	bnz	u5420
 15689  013986  0EF8               	movlw	-8
 15690  013988  50E3               	movf	plusw1,w,c
 15691  01398A  E107               	bnz	u5420
 15692  01398C  0EF9               	movlw	-7
 15693  01398E  50E3               	movf	plusw1,w,c
 15694  013990  E104               	bnz	u5420
 15695  013992  0EFA               	movlw	-6
 15696  013994  50E3               	movf	plusw1,w,c
 15697  013996  B4D8               	btfsc	status,2,c
 15698  013998  D024               	goto	l6919
 15699  01399A                     u5420:
 15700                           
 15701                           ;stkvar	_grs @ sp[(-13)+0]
 15702  01399A  0EF3               	movlw	-13
 15703  01399C  80E3               	bsf	plusw1,0,c
 15704  01399E  D021               	goto	l6919
 15705  0139A0                     l6909:
 15706                           
 15707                           ;stkvar	_b @ sp[(-13)+-4]
 15708  0139A0  90D8               	bcf	status,0,c
 15709  0139A2  0EEF               	movlw	-17
 15710  0139A4  36E3               	rlcf	plusw1,f,c
 15711  0139A6  0EF0               	movlw	-16
 15712  0139A8  36E3               	rlcf	plusw1,f,c
 15713  0139AA  0EF1               	movlw	-15
 15714  0139AC  36E3               	rlcf	plusw1,f,c
 15715  0139AE  0EF2               	movlw	-14
 15716  0139B0  36E3               	rlcf	plusw1,f,c
 15717                           
 15718                           ;stkvar	_grs @ sp[(-13)+0]
 15719  0139B2  0EF6               	movlw	-10
 15720  0139B4  AEE3               	btfss	plusw1,7,c
 15721  0139B6  D002               	goto	l6915
 15722                           
 15723                           ;stkvar	_b @ sp[(-13)+-4]
 15724  0139B8  0EEF               	movlw	-17
 15725  0139BA  80E3               	bsf	plusw1,0,c
 15726  0139BC                     l6915:
 15727                           
 15728                           ;stkvar	_grs @ sp[(-13)+0]
 15729  0139BC  90D8               	bcf	status,0,c
 15730  0139BE  0EF3               	movlw	-13
 15731  0139C0  36E3               	rlcf	plusw1,f,c
 15732  0139C2  0EF4               	movlw	-12
 15733  0139C4  36E3               	rlcf	plusw1,f,c
 15734  0139C6  0EF5               	movlw	-11
 15735  0139C8  36E3               	rlcf	plusw1,f,c
 15736  0139CA  0EF6               	movlw	-10
 15737  0139CC  36E3               	rlcf	plusw1,f,c
 15738                           
 15739                           ;stkvar	_new_exp @ sp[(-13)+8]
 15740  0139CE  50E1               	movf	fsr1l,w,c
 15741  0139D0  0FFB               	addlw	-5
 15742  0139D2  6ED9               	movwf	fsr2l,c
 15743  0139D4  50E2               	movf	fsr1h,w,c
 15744  0139D6  6EDA               	movwf	fsr2h,c
 15745  0139D8  0EFF               	movlw	255
 15746  0139DA  22DA               	addwfc	fsr2h,f,c
 15747  0139DC  06DE               	decf	postinc2,f,c
 15748  0139DE  0E00               	movlw	0
 15749  0139E0  5ADD               	subwfb	postdec2,f,c
 15750  0139E2                     l6919:
 15751                           
 15752                           ;stkvar	_b @ sp[(-13)+-4]
 15753  0139E2  0EF1               	movlw	-15
 15754  0139E4  AEE3               	btfss	plusw1,7,c
 15755  0139E6  D7DC               	goto	l6909
 15756                           
 15757                           ;stkvar	_aexp @ sp[(-13)+10]
 15758  0139E8  0EFD               	movlw	-3
 15759  0139EA  6AE3               	clrf	plusw1,c
 15760                           
 15761                           ;stkvar	_grs @ sp[(-13)+0]
 15762  0139EC  0EF6               	movlw	-10
 15763  0139EE  AEE3               	btfss	plusw1,7,c
 15764  0139F0  D020               	goto	l6933
 15765                           
 15766                           ;stkvar	_grs @ sp[(-13)+0]
 15767  0139F2  50E1               	movf	fsr1l,w,c
 15768  0139F4  0FF3               	addlw	-13
 15769  0139F6  6ED9               	movwf	fsr2l,c
 15770  0139F8  50E2               	movf	fsr1h,w,c
 15771  0139FA  6EDA               	movwf	fsr2h,c
 15772  0139FC  0EFF               	movlw	255
 15773  0139FE  22DA               	addwfc	fsr2h,f,c
 15774  013A00  0EFF               	movlw	255
 15775  013A02  14DE               	andwf	postinc2,w,c
 15776  013A04  6E2D               	movwf	(btemp+8)^0,c
 15777  013A06  0EFF               	movlw	255
 15778  013A08  14DE               	andwf	postinc2,w,c
 15779  013A0A  6E2E               	movwf	(btemp+9)^0,c
 15780  013A0C  0EFF               	movlw	255
 15781  013A0E  14DE               	andwf	postinc2,w,c
 15782  013A10  6E2F               	movwf	(btemp+10)^0,c
 15783  013A12  0E7F               	movlw	127
 15784  013A14  14DE               	andwf	postinc2,w,c
 15785  013A16  6E30               	movwf	(btemp+11)^0,c
 15786  013A18  502D               	movf	(btemp+8)^0,w,c
 15787  013A1A  102E               	iorwf	(btemp+9)^0,w,c
 15788  013A1C  102F               	iorwf	(btemp+10)^0,w,c
 15789  013A1E  1030               	iorwf	(btemp+11)^0,w,c
 15790  013A20  B4D8               	btfsc	status,2,c
 15791  013A22  D004               	goto	l6929
 15792  013A24                     u5460:
 15793                           
 15794                           ;stkvar	_aexp @ sp[(-13)+10]
 15795  013A24  0EFD               	movlw	-3
 15796  013A26  6AE3               	clrf	plusw1,c
 15797  013A28  2AE3               	incf	plusw1,f,c
 15798  013A2A  D003               	goto	l6933
 15799  013A2C                     l6929:
 15800                           
 15801                           ;stkvar	_b @ sp[(-13)+-4]
 15802  013A2C  0EEF               	movlw	-17
 15803  013A2E  B0E3               	btfsc	plusw1,0,c
 15804  013A30  D7F9               	goto	u5460
 15805  013A32                     l6933:
 15806                           
 15807                           ;stkvar	_aexp @ sp[(-13)+10]
 15808  013A32  0EFD               	movlw	-3
 15809  013A34  50E3               	movf	plusw1,w,c
 15810  013A36  B4D8               	btfsc	status,2,c
 15811  013A38  D036               	goto	l6943
 15812                           
 15813                           ;stkvar	_b @ sp[(-13)+-4]
 15814  013A3A  50E1               	movf	fsr1l,w,c
 15815  013A3C  0FEF               	addlw	-17
 15816  013A3E  6ED9               	movwf	fsr2l,c
 15817  013A40  50E2               	movf	fsr1h,w,c
 15818  013A42  6EDA               	movwf	fsr2h,c
 15819  013A44  0EFF               	movlw	255
 15820  013A46  22DA               	addwfc	fsr2h,f,c
 15821  013A48  2ADE               	incf	postinc2,f,c
 15822  013A4A  0E00               	movlw	0
 15823  013A4C  22DE               	addwfc	postinc2,f,c
 15824  013A4E  22DE               	addwfc	postinc2,f,c
 15825  013A50  22DE               	addwfc	postinc2,f,c
 15826                           
 15827                           ;stkvar	_b @ sp[(-13)+-4]
 15828  013A52  0EF2               	movlw	-14
 15829  013A54  A0E3               	btfss	plusw1,0,c
 15830  013A56  D027               	goto	l6943
 15831  013A58  0E01               	movlw	1
 15832  013A5A  6E30               	movwf	(btemp+11)^0,c
 15833                           
 15834                           ;stkvar	_b @ sp[(-13)+-4]
 15835  013A5C  50E1               	movf	fsr1l,w,c
 15836  013A5E  0FEF               	addlw	-17
 15837  013A60  6ED9               	movwf	fsr2l,c
 15838  013A62  50E2               	movf	fsr1h,w,c
 15839  013A64  6EDA               	movwf	fsr2h,c
 15840  013A66  0EFF               	movlw	255
 15841  013A68  22DA               	addwfc	fsr2h,f,c
 15842  013A6A  2830               	incf	(btemp+11)^0,w,c
 15843  013A6C  52DE               	movf	postinc2,f,c
 15844  013A6E  D008               	goto	u5500
 15845  013A70                     u5505:
 15846  013A70  52DE               	movf	postinc2,f,c
 15847  013A72  90D8               	bcf	status,0,c
 15848  013A74  BEDC               	btfsc	preinc2,7,c
 15849  013A76  80D8               	bsf	status,0,c
 15850  013A78  32DD               	rrcf	postdec2,f,c
 15851  013A7A  32DD               	rrcf	postdec2,f,c
 15852  013A7C  32DD               	rrcf	postdec2,f,c
 15853  013A7E  32DE               	rrcf	postinc2,f,c
 15854  013A80                     u5500:
 15855  013A80  2EE8               	decfsz	wreg,f,c
 15856  013A82  D7F6               	goto	u5505
 15857                           
 15858                           ;stkvar	_new_exp @ sp[(-13)+8]
 15859  013A84  0EFB               	movlw	-5
 15860  013A86  50E3               	movf	plusw1,w,c
 15861  013A88  0F01               	addlw	1
 15862  013A8A  6E25               	movwf	btemp^0,c
 15863  013A8C  0EFB               	movlw	-5
 15864  013A8E  0060  F097  FFE3   	movff	btemp,plusw1
 15865  013A94  6A25               	clrf	btemp^0,c
 15866  013A96  0EFC               	movlw	-4
 15867  013A98  50E3               	movf	plusw1,w,c
 15868  013A9A  2025               	addwfc	btemp^0,w,c
 15869  013A9C  6E25               	movwf	btemp^0,c
 15870  013A9E  0EFC               	movlw	-4
 15871  013AA0  0060  F097  FFE3   	movff	btemp,plusw1
 15872  013AA6                     l6943:
 15873                           
 15874                           ;stkvar	_new_exp @ sp[(-13)+8]
 15875  013AA6  0EFC               	movlw	-4
 15876  013AA8  BEE3               	btfsc	plusw1,7,c
 15877  013AAA  D01B               	goto	l6949
 15878  013AAC  0EFC               	movlw	-4
 15879  013AAE  50E3               	movf	plusw1,w,c
 15880  013AB0  E104               	bnz	u5510
 15881  013AB2  0EFB               	movlw	-5
 15882  013AB4  28E3               	incf	plusw1,w,c
 15883  013AB6  A0D8               	btfss	status,0,c
 15884  013AB8  D014               	goto	l6949
 15885  013ABA                     u5510:
 15886  013ABA  0EFF               	movlw	255
 15887  013ABC  6E2F               	movwf	(btemp+10)^0,c
 15888  013ABE  0E00               	movlw	0
 15889  013AC0  6E30               	movwf	(btemp+11)^0,c
 15890                           
 15891                           ;stkvar	_new_exp @ sp[(-13)+8]
 15892  013AC2  0EFB               	movlw	-5
 15893  013AC4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15894  013ACA  0EFC               	movlw	-4
 15895  013ACC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15896                           
 15897                           ;stkvar	_b @ sp[(-13)+-4]
 15898  013AD2  0EEF               	movlw	-17
 15899  013AD4  6AE3               	clrf	plusw1,c
 15900  013AD6  0EF0               	movlw	-16
 15901  013AD8  6AE3               	clrf	plusw1,c
 15902  013ADA  0EF1               	movlw	-15
 15903  013ADC  6AE3               	clrf	plusw1,c
 15904  013ADE  0EF2               	movlw	-14
 15905  013AE0  6AE3               	clrf	plusw1,c
 15906  013AE2                     l6949:
 15907                           
 15908                           ;stkvar	_new_exp @ sp[(-13)+8]
 15909  013AE2  0EFC               	movlw	-4
 15910  013AE4  BEE3               	btfsc	plusw1,7,c
 15911  013AE6  D007               	goto	u5520
 15912  013AE8  0EFC               	movlw	-4
 15913  013AEA  50E3               	movf	plusw1,w,c
 15914  013AEC  E112               	bnz	l6955
 15915  013AEE  0EFB               	movlw	-5
 15916  013AF0  04E3               	decf	plusw1,w,c
 15917  013AF2  B0D8               	btfsc	status,0,c
 15918  013AF4  D00E               	goto	l6955
 15919  013AF6                     u5520:
 15920                           
 15921                           ;stkvar	_new_exp @ sp[(-13)+8]
 15922  013AF6  0EFB               	movlw	-5
 15923  013AF8  6AE3               	clrf	plusw1,c
 15924  013AFA  0EFC               	movlw	-4
 15925  013AFC  6AE3               	clrf	plusw1,c
 15926                           
 15927                           ;stkvar	_b @ sp[(-13)+-4]
 15928  013AFE  0EEF               	movlw	-17
 15929  013B00  6AE3               	clrf	plusw1,c
 15930  013B02  0EF0               	movlw	-16
 15931  013B04  6AE3               	clrf	plusw1,c
 15932  013B06  0EF1               	movlw	-15
 15933  013B08  6AE3               	clrf	plusw1,c
 15934  013B0A  0EF2               	movlw	-14
 15935  013B0C  6AE3               	clrf	plusw1,c
 15936                           
 15937                           ;stkvar	_sign @ sp[(-13)+12]
 15938  013B0E  0EFF               	movlw	-1
 15939  013B10  6AE3               	clrf	plusw1,c
 15940  013B12                     l6955:
 15941                           
 15942                           ;stkvar	_new_exp @ sp[(-13)+8]
 15943                           ;stkvar	_bexp @ sp[(-13)+11]
 15944  013B12  0EFB               	movlw	-5
 15945  013B14  006F FF8C  F025    	movff	plusw1,btemp
 15946  013B1A  0EFE               	movlw	-2
 15947  013B1C  0060  F097  FFE3   	movff	btemp,plusw1
 15948                           
 15949                           ;stkvar	_bexp @ sp[(-13)+11]
 15950  013B22  0EFE               	movlw	-2
 15951  013B24  A0E3               	btfss	plusw1,0,c
 15952  013B26  D009               	goto	l6961
 15953                           
 15954                           ;stkvar	_b @ sp[(-13)+-4]
 15955  013B28  0EF1               	movlw	241
 15956  013B2A  24E1               	addwf	fsr1l,w,c
 15957  013B2C  6ED9               	movwf	fsr2l,c
 15958  013B2E  0EFF               	movlw	255
 15959  013B30  20E2               	addwfc	fsr1h,w,c
 15960  013B32  6EDA               	movwf	fsr2h,c
 15961  013B34  0E00               	movlw	0
 15962  013B36  8EDB               	bsf	plusw2,7,c
 15963  013B38  D008               	goto	l6963
 15964  013B3A                     l6961:
 15965                           
 15966                           ;stkvar	_b @ sp[(-13)+-4]
 15967  013B3A  0EF1               	movlw	241
 15968  013B3C  24E1               	addwf	fsr1l,w,c
 15969  013B3E  6ED9               	movwf	fsr2l,c
 15970  013B40  0EFF               	movlw	255
 15971  013B42  20E2               	addwfc	fsr1h,w,c
 15972  013B44  6EDA               	movwf	fsr2h,c
 15973  013B46  0E7F               	movlw	127
 15974  013B48  16DF               	andwf	indf2,f,c
 15975  013B4A                     l6963:
 15976                           
 15977                           ;stkvar	_b @ sp[(-13)+-4]
 15978  013B4A  0EF2               	movlw	242
 15979  013B4C  24E1               	addwf	fsr1l,w,c
 15980  013B4E  6ED9               	movwf	fsr2l,c
 15981  013B50  0EFF               	movlw	255
 15982  013B52  20E2               	addwfc	fsr1h,w,c
 15983  013B54  6EDA               	movwf	fsr2h,c
 15984                           
 15985                           ;stkvar	_bexp @ sp[(-13)+11]
 15986  013B56  0EFE               	movlw	-2
 15987  013B58  006F FF8C  F030    	movff	plusw1,btemp+11
 15988  013B5E  90D8               	bcf	status,0,c
 15989  013B60  3030               	rrcf	(btemp+11)^0,w,c
 15990  013B62  6EDF               	movwf	indf2,c
 15991  013B64  D644               	goto	l6861
 15992  013B66                     l2798:
 15993                           
 15994                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15995  013B66  0EEB               	movlw	235
 15996  013B68  26E1               	addwf	fsr1l,f,c
 15997  013B6A  0EFF               	movlw	255
 15998  013B6C  22E2               	addwfc	fsr1h,f,c
 15999  013B6E  0012               	return		;funcret
 16000  013B70                     __end_of___fldiv:
 16001                           	opt callstack 0
 16002                           
 16003 ;; *************** function ___awmod *****************
 16004 ;; Defined at:
 16005 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16006 ;; Parameters:    Size  Location     Type
 16007 ;;  dividend        2  [STACK] int 
 16008 ;;  divisor         2  [STACK] int 
 16009 ;; Auto vars:     Size  Location     Type
 16010 ;;  sign            1  [STACK] unsigned char 
 16011 ;;  counter         1  [STACK] unsigned char 
 16012 ;; Return value:  Size  Location     Type
 16013 ;;                  2  [STACK] int 
 16014 ;; Registers used:
 16015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16016 ;; Tracked objects:
 16017 ;;		On entry : 0/0
 16018 ;;		On exit  : 0/0
 16019 ;;		Unchanged: 0/0
 16020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16025 ;;Total ram usage:        0 bytes
 16026 ;; Hardware stack levels used:    1
 16027 ;; Hardware stack levels required when called:   10
 16028 ;; This function calls:
 16029 ;;		Nothing
 16030 ;; This function is called by:
 16031 ;;		_efgtoa
 16032 ;; This function uses a reentrant model
 16033 ;;
 16034                           
 16035                           	psect	text59
 16036  016C7E                     __ptext59:
 16037                           	opt callstack 0
 16038  016C7E                     ___awmod:
 16039                           	opt callstack 0
 16040                           
 16041                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16042  016C7E  52E6               	movf	postinc1,f,c
 16043  016C80  52E6               	movf	postinc1,f,c
 16044                           
 16045                           ;stkvar	_sign @ sp[(-2)+0]
 16046                           
 16047                           ;incstack = 0
 16048  016C82  0EFE               	movlw	-2
 16049  016C84  6AE3               	clrf	plusw1,c
 16050                           
 16051                           ;stkvar	_dividend @ sp[(-2)+-2]
 16052  016C86  0EFD               	movlw	-3
 16053  016C88  AEE3               	btfss	plusw1,7,c
 16054  016C8A  D009               	goto	l7025
 16055                           
 16056                           ;stkvar	_dividend @ sp[(-2)+-2]
 16057                           ;stkvar	_dividend @ sp[(-2)+-2]
 16058  016C8C  0EFC               	movlw	-4
 16059  016C8E  6CE3               	negf	plusw1,c
 16060  016C90  0EFD               	movlw	-3
 16061  016C92  1EE3               	comf	plusw1,f,c
 16062  016C94  B0D8               	btfsc	status,0,c
 16063  016C96  2AE3               	incf	plusw1,f,c
 16064                           
 16065                           ;stkvar	_sign @ sp[(-2)+0]
 16066  016C98  0EFE               	movlw	-2
 16067  016C9A  6AE3               	clrf	plusw1,c
 16068  016C9C  2AE3               	incf	plusw1,f,c
 16069  016C9E                     l7025:
 16070                           
 16071                           ;stkvar	_divisor @ sp[(-2)+-4]
 16072  016C9E  0EFB               	movlw	-5
 16073  016CA0  AEE3               	btfss	plusw1,7,c
 16074  016CA2  D006               	goto	l7029
 16075                           
 16076                           ;stkvar	_divisor @ sp[(-2)+-4]
 16077                           ;stkvar	_divisor @ sp[(-2)+-4]
 16078  016CA4  0EFA               	movlw	-6
 16079  016CA6  6CE3               	negf	plusw1,c
 16080  016CA8  0EFB               	movlw	-5
 16081  016CAA  1EE3               	comf	plusw1,f,c
 16082  016CAC  B0D8               	btfsc	status,0,c
 16083  016CAE  2AE3               	incf	plusw1,f,c
 16084  016CB0                     l7029:
 16085                           
 16086                           ;stkvar	_divisor @ sp[(-2)+-4]
 16087  016CB0  0EFA               	movlw	-6
 16088  016CB2  006F FF8C  F025    	movff	plusw1,btemp
 16089  016CB8  0EFB               	movlw	-5
 16090  016CBA  50E3               	movf	plusw1,w,c
 16091  016CBC  1025               	iorwf	btemp^0,w,c
 16092  016CBE  B4D8               	btfsc	status,2,c
 16093  016CC0  D053               	goto	u5660
 16094                           
 16095                           ;stkvar	_counter @ sp[(-2)+1]
 16096  016CC2  0EFF               	movlw	-1
 16097  016CC4  6AE3               	clrf	plusw1,c
 16098  016CC6  D012               	goto	L15
 16099  016CC8                     l7033:
 16100                           
 16101                           ;stkvar	_divisor @ sp[(-2)+-4]
 16102  016CC8  0EFA               	movlw	-6
 16103  016CCA  50E3               	movf	plusw1,w,c
 16104  016CCC  90D8               	bcf	status,0,c
 16105  016CCE  34E8               	rlcf	wreg,w,c
 16106  016CD0  6E25               	movwf	btemp^0,c
 16107  016CD2  0EFA               	movlw	-6
 16108  016CD4  0060  F097  FFE3   	movff	btemp,plusw1
 16109  016CDA  0EFB               	movlw	-5
 16110  016CDC  50E3               	movf	plusw1,w,c
 16111  016CDE  34E8               	rlcf	wreg,w,c
 16112  016CE0  6E25               	movwf	btemp^0,c
 16113  016CE2  0EFB               	movlw	-5
 16114  016CE4  0060  F097  FFE3   	movff	btemp,plusw1
 16115                           
 16116                           ;stkvar	_counter @ sp[(-2)+1]
 16117  016CEA  0EFF               	movlw	-1
 16118  016CEC                     L15:
 16119  016CEC  2AE3               	incf	plusw1,f,c
 16120                           
 16121                           ;stkvar	_divisor @ sp[(-2)+-4]
 16122  016CEE  0EFB               	movlw	-5
 16123  016CF0  AEE3               	btfss	plusw1,7,c
 16124  016CF2  D7EA               	goto	l7033
 16125  016CF4                     u5640:
 16126                           
 16127                           ;stkvar	_divisor @ sp[(-2)+-4]
 16128  016CF4  0EFA               	movlw	-6
 16129  016CF6  006F FF8C  F02F    	movff	plusw1,btemp+10
 16130  016CFC  0EFB               	movlw	-5
 16131  016CFE  006F FF8C  F030    	movff	plusw1,btemp+11
 16132                           
 16133                           ;stkvar	_dividend @ sp[(-2)+-2]
 16134  016D04  0EFC               	movlw	-4
 16135  016D06  006F FF8C  F02D    	movff	plusw1,btemp+8
 16136  016D0C  0EFD               	movlw	-3
 16137  016D0E  006F FF8C  F02E    	movff	plusw1,btemp+9
 16138  016D14  502F               	movf	(btemp+10)^0,w,c
 16139  016D16  5C2D               	subwf	(btemp+8)^0,w,c
 16140  016D18  5030               	movf	(btemp+11)^0,w,c
 16141  016D1A  582E               	subwfb	(btemp+9)^0,w,c
 16142  016D1C  A0D8               	btfss	status,0,c
 16143  016D1E  D014               	goto	l7043
 16144                           
 16145                           ;stkvar	_divisor @ sp[(-2)+-4]
 16146                           ;stkvar	_dividend @ sp[(-2)+-2]
 16147  016D20  0EFC               	movlw	-4
 16148  016D22  50E3               	movf	plusw1,w,c
 16149  016D24  6E25               	movwf	btemp^0,c
 16150  016D26  0EFA               	movlw	-6
 16151  016D28  50E3               	movf	plusw1,w,c
 16152  016D2A  5E25               	subwf	btemp^0,f,c
 16153  016D2C  0EFC               	movlw	-4
 16154  016D2E  0060  F097  FFE3   	movff	btemp,plusw1
 16155  016D34  0EFD               	movlw	-3
 16156  016D36  50E3               	movf	plusw1,w,c
 16157  016D38  6E25               	movwf	btemp^0,c
 16158  016D3A  0EFB               	movlw	-5
 16159  016D3C  50E3               	movf	plusw1,w,c
 16160  016D3E  5A25               	subwfb	btemp^0,f,c
 16161  016D40  0EFD               	movlw	-3
 16162  016D42  0060  F097  FFE3   	movff	btemp,plusw1
 16163  016D48                     l7043:
 16164                           
 16165                           ;stkvar	_divisor @ sp[(-2)+-4]
 16166  016D48  90D8               	bcf	status,0,c
 16167  016D4A  0EFB               	movlw	-5
 16168  016D4C  32E3               	rrcf	plusw1,f,c
 16169  016D4E  0EFA               	movlw	-6
 16170  016D50  32E3               	rrcf	plusw1,f,c
 16171                           
 16172                           ;stkvar	_counter @ sp[(-2)+1]
 16173  016D52  0EFF               	movlw	-1
 16174  016D54  50E3               	movf	plusw1,w,c
 16175  016D56  6E25               	movwf	btemp^0,c
 16176  016D58  0E01               	movlw	1
 16177  016D5A  5E25               	subwf	btemp^0,f,c
 16178  016D5C  0EFF               	movlw	-1
 16179  016D5E  0060  F097  FFE3   	movff	btemp,plusw1
 16180  016D64  A4D8               	btfss	status,2,c
 16181  016D66  D7C6               	goto	u5640
 16182  016D68                     u5660:
 16183                           
 16184                           ;stkvar	_sign @ sp[(-2)+0]
 16185  016D68  0EFE               	movlw	-2
 16186  016D6A  50E3               	movf	plusw1,w,c
 16187  016D6C  B4D8               	btfsc	status,2,c
 16188  016D6E  D006               	goto	l7051
 16189                           
 16190                           ;stkvar	_dividend @ sp[(-2)+-2]
 16191                           ;stkvar	_dividend @ sp[(-2)+-2]
 16192  016D70  0EFC               	movlw	-4
 16193  016D72  6CE3               	negf	plusw1,c
 16194  016D74  0EFD               	movlw	-3
 16195  016D76  1EE3               	comf	plusw1,f,c
 16196  016D78  B0D8               	btfsc	status,0,c
 16197  016D7A  2AE3               	incf	plusw1,f,c
 16198  016D7C                     l7051:
 16199                           
 16200                           ;stkvar	_dividend @ sp[(-2)+-2]
 16201  016D7C  0EFC               	movlw	-4
 16202  016D7E  006F FF8C  F025    	movff	plusw1,btemp
 16203  016D84  0EFD               	movlw	-3
 16204  016D86  006F FF8C  F026    	movff	plusw1,btemp+1
 16205                           
 16206                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16207  016D8C  0EFA               	movlw	250
 16208  016D8E  26E1               	addwf	fsr1l,f,c
 16209  016D90  0EFF               	movlw	255
 16210  016D92  22E2               	addwfc	fsr1h,f,c
 16211  016D94  0012               	return		;funcret
 16212  016D96                     __end_of___awmod:
 16213                           	opt callstack 0
 16214                           
 16215 ;; *************** function ___awdiv *****************
 16216 ;; Defined at:
 16217 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;  dividend        2  [STACK] int 
 16220 ;;  divisor         2  [STACK] int 
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;  quotient        2  [STACK] int 
 16223 ;;  sign            1  [STACK] unsigned char 
 16224 ;;  counter         1  [STACK] unsigned char 
 16225 ;; Return value:  Size  Location     Type
 16226 ;;                  2  [STACK] int 
 16227 ;; Registers used:
 16228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16229 ;; Tracked objects:
 16230 ;;		On entry : 0/0
 16231 ;;		On exit  : 0/0
 16232 ;;		Unchanged: 0/0
 16233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16238 ;;Total ram usage:        0 bytes
 16239 ;; Hardware stack levels used:    1
 16240 ;; Hardware stack levels required when called:   10
 16241 ;; This function calls:
 16242 ;;		Nothing
 16243 ;; This function is called by:
 16244 ;;		_efgtoa
 16245 ;; This function uses a reentrant model
 16246 ;;
 16247                           
 16248                           	psect	text60
 16249  016796                     __ptext60:
 16250                           	opt callstack 0
 16251  016796                     ___awdiv:
 16252                           	opt callstack 0
 16253                           
 16254                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16255  016796  52E6               	movf	postinc1,f,c
 16256  016798  52E6               	movf	postinc1,f,c
 16257  01679A  52E6               	movf	postinc1,f,c
 16258  01679C  52E6               	movf	postinc1,f,c
 16259                           
 16260                           ;stkvar	_sign @ sp[(-4)+2]
 16261                           
 16262                           ;incstack = 0
 16263  01679E  0EFE               	movlw	-2
 16264  0167A0  6AE3               	clrf	plusw1,c
 16265                           
 16266                           ;stkvar	_divisor @ sp[(-4)+-4]
 16267  0167A2  0EF9               	movlw	-7
 16268  0167A4  AEE3               	btfss	plusw1,7,c
 16269  0167A6  D009               	goto	l6979
 16270                           
 16271                           ;stkvar	_divisor @ sp[(-4)+-4]
 16272                           ;stkvar	_divisor @ sp[(-4)+-4]
 16273  0167A8  0EF8               	movlw	-8
 16274  0167AA  6CE3               	negf	plusw1,c
 16275  0167AC  0EF9               	movlw	-7
 16276  0167AE  1EE3               	comf	plusw1,f,c
 16277  0167B0  B0D8               	btfsc	status,0,c
 16278  0167B2  2AE3               	incf	plusw1,f,c
 16279                           
 16280                           ;stkvar	_sign @ sp[(-4)+2]
 16281  0167B4  0EFE               	movlw	-2
 16282  0167B6  6AE3               	clrf	plusw1,c
 16283  0167B8  2AE3               	incf	plusw1,f,c
 16284  0167BA                     l6979:
 16285                           
 16286                           ;stkvar	_dividend @ sp[(-4)+-2]
 16287  0167BA  0EFB               	movlw	-5
 16288  0167BC  AEE3               	btfss	plusw1,7,c
 16289  0167BE  D008               	goto	l6985
 16290                           
 16291                           ;stkvar	_dividend @ sp[(-4)+-2]
 16292                           ;stkvar	_dividend @ sp[(-4)+-2]
 16293  0167C0  0EFA               	movlw	-6
 16294  0167C2  6CE3               	negf	plusw1,c
 16295  0167C4  0EFB               	movlw	-5
 16296  0167C6  1EE3               	comf	plusw1,f,c
 16297  0167C8  B0D8               	btfsc	status,0,c
 16298  0167CA  2AE3               	incf	plusw1,f,c
 16299                           
 16300                           ;stkvar	_sign @ sp[(-4)+2]
 16301  0167CC  0EFE               	movlw	-2
 16302  0167CE  70E3               	btg	plusw1,0,c
 16303  0167D0                     l6985:
 16304                           
 16305                           ;stkvar	_quotient @ sp[(-4)+0]
 16306  0167D0  0EFC               	movlw	-4
 16307  0167D2  6AE3               	clrf	plusw1,c
 16308  0167D4  0EFD               	movlw	-3
 16309  0167D6  6AE3               	clrf	plusw1,c
 16310                           
 16311                           ;stkvar	_divisor @ sp[(-4)+-4]
 16312  0167D8  0EF8               	movlw	-8
 16313  0167DA  006F FF8C  F025    	movff	plusw1,btemp
 16314  0167E0  0EF9               	movlw	-7
 16315  0167E2  50E3               	movf	plusw1,w,c
 16316  0167E4  1025               	iorwf	btemp^0,w,c
 16317  0167E6  B4D8               	btfsc	status,2,c
 16318  0167E8  D066               	goto	u5590
 16319                           
 16320                           ;stkvar	_counter @ sp[(-4)+3]
 16321  0167EA  0EFF               	movlw	-1
 16322  0167EC  6AE3               	clrf	plusw1,c
 16323  0167EE  D012               	goto	L16
 16324  0167F0                     l6991:
 16325                           
 16326                           ;stkvar	_divisor @ sp[(-4)+-4]
 16327  0167F0  0EF8               	movlw	-8
 16328  0167F2  50E3               	movf	plusw1,w,c
 16329  0167F4  90D8               	bcf	status,0,c
 16330  0167F6  34E8               	rlcf	wreg,w,c
 16331  0167F8  6E25               	movwf	btemp^0,c
 16332  0167FA  0EF8               	movlw	-8
 16333  0167FC  0060  F097  FFE3   	movff	btemp,plusw1
 16334  016802  0EF9               	movlw	-7
 16335  016804  50E3               	movf	plusw1,w,c
 16336  016806  34E8               	rlcf	wreg,w,c
 16337  016808  6E25               	movwf	btemp^0,c
 16338  01680A  0EF9               	movlw	-7
 16339  01680C  0060  F097  FFE3   	movff	btemp,plusw1
 16340                           
 16341                           ;stkvar	_counter @ sp[(-4)+3]
 16342  016812  0EFF               	movlw	-1
 16343  016814                     L16:
 16344  016814  2AE3               	incf	plusw1,f,c
 16345                           
 16346                           ;stkvar	_divisor @ sp[(-4)+-4]
 16347  016816  0EF9               	movlw	-7
 16348  016818  AEE3               	btfss	plusw1,7,c
 16349  01681A  D7EA               	goto	l6991
 16350  01681C                     u5570:
 16351                           
 16352                           ;stkvar	_quotient @ sp[(-4)+0]
 16353  01681C  0EFC               	movlw	-4
 16354  01681E  50E3               	movf	plusw1,w,c
 16355  016820  90D8               	bcf	status,0,c
 16356  016822  34E8               	rlcf	wreg,w,c
 16357  016824  6E25               	movwf	btemp^0,c
 16358  016826  0EFC               	movlw	-4
 16359  016828  0060  F097  FFE3   	movff	btemp,plusw1
 16360  01682E  0EFD               	movlw	-3
 16361  016830  50E3               	movf	plusw1,w,c
 16362  016832  34E8               	rlcf	wreg,w,c
 16363  016834  6E25               	movwf	btemp^0,c
 16364  016836  0EFD               	movlw	-3
 16365  016838  0060  F097  FFE3   	movff	btemp,plusw1
 16366                           
 16367                           ;stkvar	_divisor @ sp[(-4)+-4]
 16368  01683E  0EF8               	movlw	-8
 16369  016840  006F FF8C  F02F    	movff	plusw1,btemp+10
 16370  016846  0EF9               	movlw	-7
 16371  016848  006F FF8C  F030    	movff	plusw1,btemp+11
 16372                           
 16373                           ;stkvar	_dividend @ sp[(-4)+-2]
 16374  01684E  0EFA               	movlw	-6
 16375  016850  006F FF8C  F02D    	movff	plusw1,btemp+8
 16376  016856  0EFB               	movlw	-5
 16377  016858  006F FF8C  F02E    	movff	plusw1,btemp+9
 16378  01685E  502F               	movf	(btemp+10)^0,w,c
 16379  016860  5C2D               	subwf	(btemp+8)^0,w,c
 16380  016862  5030               	movf	(btemp+11)^0,w,c
 16381  016864  582E               	subwfb	(btemp+9)^0,w,c
 16382  016866  A0D8               	btfss	status,0,c
 16383  016868  D016               	goto	l7005
 16384                           
 16385                           ;stkvar	_divisor @ sp[(-4)+-4]
 16386                           ;stkvar	_dividend @ sp[(-4)+-2]
 16387  01686A  0EFA               	movlw	-6
 16388  01686C  50E3               	movf	plusw1,w,c
 16389  01686E  6E25               	movwf	btemp^0,c
 16390  016870  0EF8               	movlw	-8
 16391  016872  50E3               	movf	plusw1,w,c
 16392  016874  5E25               	subwf	btemp^0,f,c
 16393  016876  0EFA               	movlw	-6
 16394  016878  0060  F097  FFE3   	movff	btemp,plusw1
 16395  01687E  0EFB               	movlw	-5
 16396  016880  50E3               	movf	plusw1,w,c
 16397  016882  6E25               	movwf	btemp^0,c
 16398  016884  0EF9               	movlw	-7
 16399  016886  50E3               	movf	plusw1,w,c
 16400  016888  5A25               	subwfb	btemp^0,f,c
 16401  01688A  0EFB               	movlw	-5
 16402  01688C  0060  F097  FFE3   	movff	btemp,plusw1
 16403                           
 16404                           ;stkvar	_quotient @ sp[(-4)+0]
 16405  016892  0EFC               	movlw	-4
 16406  016894  80E3               	bsf	plusw1,0,c
 16407  016896                     l7005:
 16408                           
 16409                           ;stkvar	_divisor @ sp[(-4)+-4]
 16410  016896  90D8               	bcf	status,0,c
 16411  016898  0EF9               	movlw	-7
 16412  01689A  32E3               	rrcf	plusw1,f,c
 16413  01689C  0EF8               	movlw	-8
 16414  01689E  32E3               	rrcf	plusw1,f,c
 16415                           
 16416                           ;stkvar	_counter @ sp[(-4)+3]
 16417  0168A0  0EFF               	movlw	-1
 16418  0168A2  50E3               	movf	plusw1,w,c
 16419  0168A4  6E25               	movwf	btemp^0,c
 16420  0168A6  0E01               	movlw	1
 16421  0168A8  5E25               	subwf	btemp^0,f,c
 16422  0168AA  0EFF               	movlw	-1
 16423  0168AC  0060  F097  FFE3   	movff	btemp,plusw1
 16424  0168B2  A4D8               	btfss	status,2,c
 16425  0168B4  D7B3               	goto	u5570
 16426  0168B6                     u5590:
 16427                           
 16428                           ;stkvar	_sign @ sp[(-4)+2]
 16429  0168B6  0EFE               	movlw	-2
 16430  0168B8  50E3               	movf	plusw1,w,c
 16431  0168BA  B4D8               	btfsc	status,2,c
 16432  0168BC  D006               	goto	l7013
 16433                           
 16434                           ;stkvar	_quotient @ sp[(-4)+0]
 16435                           ;stkvar	_quotient @ sp[(-4)+0]
 16436  0168BE  0EFC               	movlw	-4
 16437  0168C0  6CE3               	negf	plusw1,c
 16438  0168C2  0EFD               	movlw	-3
 16439  0168C4  1EE3               	comf	plusw1,f,c
 16440  0168C6  B0D8               	btfsc	status,0,c
 16441  0168C8  2AE3               	incf	plusw1,f,c
 16442  0168CA                     l7013:
 16443                           
 16444                           ;stkvar	_quotient @ sp[(-4)+0]
 16445  0168CA  0EFC               	movlw	-4
 16446  0168CC  006F FF8C  F025    	movff	plusw1,btemp
 16447  0168D2  0EFD               	movlw	-3
 16448  0168D4  006F FF8C  F026    	movff	plusw1,btemp+1
 16449                           
 16450                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16451  0168DA  0EF8               	movlw	248
 16452  0168DC  26E1               	addwf	fsr1l,f,c
 16453  0168DE  0EFF               	movlw	255
 16454  0168E0  22E2               	addwfc	fsr1h,f,c
 16455  0168E2  0012               	return		;funcret
 16456  0168E4                     __end_of___awdiv:
 16457                           	opt callstack 0
 16458                           
 16459 ;; *************** function _dtoa *****************
 16460 ;; Defined at:
 16461 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16464 ;;		 -> f(6), NULL(0), 
 16465 ;;  d               8  [STACK] long long 
 16466 ;; Auto vars:     Size  Location     Type
 16467 ;;  n               8  [STACK] long long 
 16468 ;;  i               2  [STACK] int 
 16469 ;;  s               2  [STACK] int 
 16470 ;;  w               2  [STACK] int 
 16471 ;;  p               2  [STACK] int 
 16472 ;; Return value:  Size  Location     Type
 16473 ;;                  2  [STACK] int 
 16474 ;; Registers used:
 16475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16485 ;;Total ram usage:        0 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:   15
 16488 ;; This function calls:
 16489 ;;		___aodiv
 16490 ;;		___aomod
 16491 ;;		_abs
 16492 ;;		_pad
 16493 ;; This function is called by:
 16494 ;;		_vfpfcnvrt
 16495 ;; This function uses a reentrant model
 16496 ;;
 16497                           
 16498                           	psect	text61
 16499  01401C                     __ptext61:
 16500                           	opt callstack 0
 16501  01401C                     _dtoa:
 16502                           	opt callstack 0
 16503                           
 16504                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16505  01401C  0E12               	movlw	18
 16506  01401E  26E1               	addwf	fsr1l,f,c
 16507  014020  0E00               	movlw	0
 16508  014022  22E2               	addwfc	fsr1h,f,c
 16509                           
 16510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16511                           ;stkvar	_d @ sp[(-18)+-10]
 16512                           
 16513                           ;incstack = 0
 16514  014024  0EE4               	movlw	228
 16515  014026  24E1               	addwf	fsr1l,w,c
 16516  014028  6ED9               	movwf	fsr2l,c
 16517  01402A  0EFF               	movlw	255
 16518  01402C  20E2               	addwfc	fsr1h,w,c
 16519  01402E  6EDA               	movwf	fsr2h,c
 16520                           
 16521                           ;stkvar	_n @ sp[(-18)+2]
 16522  014030  0E08               	movlw	8
 16523  014032  6E25               	movwf	btemp^0,c
 16524  014034  0EF0               	movlw	-16
 16525  014036                     us931999:
 16526  014036  006F FF7B FFE3     	movff	postinc2,plusw1
 16527  01403C  28E8               	incf	wreg,w,c
 16528  01403E  2E25               	decfsz	btemp^0,f,c
 16529  014040  D7FA               	bra	us931999
 16530                           
 16531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16532                           ;stkvar	_n @ sp[(-18)+2]
 16533  014042  0EF7               	movlw	-9
 16534  014044  AEE3               	btfss	plusw1,7,c
 16535  014046  D002               	goto	u9320
 16536  014048  0E01               	movlw	1
 16537  01404A  D001               	goto	u9330
 16538  01404C                     u9320:
 16539  01404C  0E00               	movlw	0
 16540  01404E                     u9330:
 16541  01404E  6E2F               	movwf	(btemp+10)^0,c
 16542  014050  6A30               	clrf	(btemp+11)^0,c
 16543                           
 16544                           ;stkvar	_s @ sp[(-18)+12]
 16545  014052  0EFA               	movlw	-6
 16546  014054  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16547  01405A  0EFB               	movlw	-5
 16548  01405C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16549                           
 16550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16551                           ;stkvar	_s @ sp[(-18)+12]
 16552  014062  0EFA               	movlw	-6
 16553  014064  006F FF8C  F025    	movff	plusw1,btemp
 16554  01406A  0EFB               	movlw	-5
 16555  01406C  50E3               	movf	plusw1,w,c
 16556  01406E  1025               	iorwf	btemp^0,w,c
 16557  014070  B4D8               	btfsc	status,2,c
 16558  014072  D025               	goto	u9350
 16559                           
 16560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16561                           ;stkvar	_n @ sp[(-18)+2]
 16562                           ;stkvar	_n @ sp[(-18)+2]
 16563  014074  0EF0               	movlw	-16
 16564  014076  6CE3               	negf	plusw1,c
 16565  014078  0EF1               	movlw	-15
 16566  01407A  1EE3               	comf	plusw1,f,c
 16567  01407C  0EF2               	movlw	-14
 16568  01407E  1EE3               	comf	plusw1,f,c
 16569  014080  0EF3               	movlw	-13
 16570  014082  1EE3               	comf	plusw1,f,c
 16571  014084  0EF4               	movlw	-12
 16572  014086  1EE3               	comf	plusw1,f,c
 16573  014088  0EF5               	movlw	-11
 16574  01408A  1EE3               	comf	plusw1,f,c
 16575  01408C  0EF6               	movlw	-10
 16576  01408E  1EE3               	comf	plusw1,f,c
 16577  014090  0EF7               	movlw	-9
 16578  014092  1EE3               	comf	plusw1,f,c
 16579  014094  E314               	bnc	u9350
 16580  014096  0EF1               	movlw	-15
 16581  014098  2AE3               	incf	plusw1,f,c
 16582  01409A  E311               	bnc	u9350
 16583  01409C  0EF2               	movlw	-14
 16584  01409E  2AE3               	incf	plusw1,f,c
 16585  0140A0  E30E               	bnc	u9350
 16586  0140A2  0EF3               	movlw	-13
 16587  0140A4  2AE3               	incf	plusw1,f,c
 16588  0140A6  E30B               	bnc	u9350
 16589  0140A8  0EF4               	movlw	-12
 16590  0140AA  2AE3               	incf	plusw1,f,c
 16591  0140AC  E308               	bnc	u9350
 16592  0140AE  0EF5               	movlw	-11
 16593  0140B0  2AE3               	incf	plusw1,f,c
 16594  0140B2  E305               	bnc	u9350
 16595  0140B4  0EF6               	movlw	-10
 16596  0140B6  2AE3               	incf	plusw1,f,c
 16597  0140B8  E302               	bnc	u9350
 16598  0140BA  0EF7               	movlw	-9
 16599  0140BC  2AE3               	incf	plusw1,f,c
 16600  0140BE                     u9350:
 16601                           
 16602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16603  0140BE  AE0D               	btfss	(_prec+1)^0,7,c
 16604                           
 16605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16606  0140C0  920E               	bcf	_flags^0,1,c
 16607                           
 16608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16609  0140C2  BE0D               	btfsc	(_prec+1)^0,7,c
 16610  0140C4  D005               	goto	u9370
 16611  0140C6  500D               	movf	(_prec+1)^0,w,c
 16612  0140C8  E110               	bnz	l10083
 16613  0140CA  040C               	decf	_prec^0,w,c
 16614  0140CC  B0D8               	btfsc	status,0,c
 16615  0140CE  D00D               	goto	l10083
 16616  0140D0                     u9370:
 16617  0140D0  0E01               	movlw	1
 16618  0140D2  6E2F               	movwf	(btemp+10)^0,c
 16619  0140D4  0E00               	movlw	0
 16620  0140D6  6E30               	movwf	(btemp+11)^0,c
 16621                           
 16622                           ;stkvar	_p @ sp[(-18)+16]
 16623  0140D8  0EFE               	movlw	-2
 16624  0140DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16625  0140E0  0EFF               	movlw	-1
 16626  0140E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16627  0140E8  D008               	goto	l2002
 16628  0140EA                     l10083:
 16629                           
 16630                           ;stkvar	_p @ sp[(-18)+16]
 16631  0140EA  0EFE               	movlw	-2
 16632  0140EC  0060  F033  FFE3   	movff	_prec,plusw1
 16633  0140F2  0EFF               	movlw	-1
 16634  0140F4  0060  F037  FFE3   	movff	_prec+1,plusw1
 16635  0140FA                     l2002:
 16636                           
 16637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16638                           ;stkvar	_w @ sp[(-18)+14]
 16639  0140FA  0EFC               	movlw	-4
 16640  0140FC  0060  F02B  FFE3   	movff	_width,plusw1
 16641  014102  0EFD               	movlw	-3
 16642  014104  0060  F02F  FFE3   	movff	_width+1,plusw1
 16643                           
 16644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16645                           ;stkvar	_s @ sp[(-18)+12]
 16646  01410A  0EFA               	movlw	-6
 16647  01410C  006F FF8C  F025    	movff	plusw1,btemp
 16648  014112  0EFB               	movlw	-5
 16649  014114  50E3               	movf	plusw1,w,c
 16650  014116  1025               	iorwf	btemp^0,w,c
 16651  014118  A4D8               	btfss	status,2,c
 16652  01411A  D002               	goto	u9390
 16653  01411C  A40E               	btfss	_flags^0,2,c
 16654  01411E  D00A               	goto	l10091
 16655  014120                     u9390:
 16656                           
 16657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16658                           ;stkvar	_w @ sp[(-18)+14]
 16659  014120  50E1               	movf	fsr1l,w,c
 16660  014122  0FFC               	addlw	-4
 16661  014124  6ED9               	movwf	fsr2l,c
 16662  014126  50E2               	movf	fsr1h,w,c
 16663  014128  6EDA               	movwf	fsr2h,c
 16664  01412A  0EFF               	movlw	255
 16665  01412C  22DA               	addwfc	fsr2h,f,c
 16666  01412E  06DE               	decf	postinc2,f,c
 16667  014130  0E00               	movlw	0
 16668  014132  5ADD               	subwfb	postdec2,f,c
 16669  014134                     l10091:
 16670                           
 16671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16672  014134  0E4F               	movlw	79
 16673  014136  6E2F               	movwf	(btemp+10)^0,c
 16674  014138  0E00               	movlw	0
 16675  01413A  6E30               	movwf	(btemp+11)^0,c
 16676                           
 16677                           ;stkvar	_i @ sp[(-18)+10]
 16678  01413C  0EF8               	movlw	-8
 16679  01413E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16680  014144  0EF9               	movlw	-7
 16681  014146  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16682                           
 16683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16684  01414C  0101               	movlb	1	; () banked
 16685  01414E  6BF4               	clrf	(_dbuf+79)& (0+255),b
 16686                           
 16687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16688  014150  D109               	goto	l10105
 16689  014152                     l10095:
 16690                           
 16691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16692                           ;stkvar	_i @ sp[(-18)+10]
 16693  014152  50E1               	movf	fsr1l,w,c
 16694  014154  0FF8               	addlw	-8
 16695  014156  6ED9               	movwf	fsr2l,c
 16696  014158  50E2               	movf	fsr1h,w,c
 16697  01415A  6EDA               	movwf	fsr2h,c
 16698  01415C  0EFF               	movlw	255
 16699  01415E  22DA               	addwfc	fsr2h,f,c
 16700  014160  06DE               	decf	postinc2,f,c
 16701  014162  0E00               	movlw	0
 16702  014164  5ADD               	subwfb	postdec2,f,c
 16703                           
 16704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16705  014166  0E0A               	movlw	10
 16706  014168  6EE6               	movwf	postinc1,c
 16707  01416A  0E00               	movlw	0
 16708  01416C  6EE6               	movwf	postinc1,c
 16709  01416E  0E00               	movlw	0
 16710  014170  6EE6               	movwf	postinc1,c
 16711  014172  0E00               	movlw	0
 16712  014174  6EE6               	movwf	postinc1,c
 16713  014176  0E00               	movlw	0
 16714  014178  6EE6               	movwf	postinc1,c
 16715  01417A  0E00               	movlw	0
 16716  01417C  6EE6               	movwf	postinc1,c
 16717  01417E  0E00               	movlw	0
 16718  014180  6EE6               	movwf	postinc1,c
 16719  014182  0E00               	movlw	0
 16720  014184  6EE6               	movwf	postinc1,c
 16721                           
 16722                           ;stkvar	_n @ sp[(-26)+2]
 16723  014186  50E1               	movf	fsr1l,w,c
 16724  014188  0FE8               	addlw	-24
 16725  01418A  6ED9               	movwf	fsr2l,c
 16726  01418C  50E2               	movf	fsr1h,w,c
 16727  01418E  6EDA               	movwf	fsr2h,c
 16728  014190  0EFF               	movlw	255
 16729  014192  22DA               	addwfc	fsr2h,f,c
 16730  014194  006F FF7B FFE6     	movff	postinc2,postinc1
 16731  01419A  006F FF7B FFE6     	movff	postinc2,postinc1
 16732  0141A0  006F FF7B FFE6     	movff	postinc2,postinc1
 16733  0141A6  006F FF7B FFE6     	movff	postinc2,postinc1
 16734  0141AC  006F FF7B FFE6     	movff	postinc2,postinc1
 16735  0141B2  006F FF7B FFE6     	movff	postinc2,postinc1
 16736  0141B8  006F FF7B FFE6     	movff	postinc2,postinc1
 16737  0141BE  006F FF7B FFE6     	movff	postinc2,postinc1
 16738  0141C4  ECA7  F0AC         	call	___aomod	;wreg free
 16739  0141C8  52E5               	movf	postdec1,f,c
 16740  0141CA  006F FF9C  F03C    	movff	indf1,btemp+23
 16741  0141D0  52E5               	movf	postdec1,f,c
 16742  0141D2  006F FF9C  F03B    	movff	indf1,btemp+22
 16743  0141D8  52E5               	movf	postdec1,f,c
 16744  0141DA  006F FF9C  F03A    	movff	indf1,btemp+21
 16745  0141E0  52E5               	movf	postdec1,f,c
 16746  0141E2  006F FF9C  F039    	movff	indf1,btemp+20
 16747  0141E8  52E5               	movf	postdec1,f,c
 16748  0141EA  006F FF9C  F038    	movff	indf1,btemp+19
 16749  0141F0  52E5               	movf	postdec1,f,c
 16750  0141F2  006F FF9C  F037    	movff	indf1,btemp+18
 16751  0141F8  52E5               	movf	postdec1,f,c
 16752  0141FA  006F FF9C  F036    	movff	indf1,btemp+17
 16753  014200  52E5               	movf	postdec1,f,c
 16754  014202  006F FF9C  F035    	movff	indf1,btemp+16
 16755  014208  0EF8               	movlw	248
 16756  01420A  26E1               	addwf	fsr1l,f,c
 16757  01420C  0EFF               	movlw	255
 16758  01420E  22E2               	addwfc	fsr1h,f,c
 16759  014210  0060  F0D4  F02F   	movff	btemp+16,btemp+10
 16760  014216  0060  F0D8  F030   	movff	btemp+17,btemp+11
 16761  01421C  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 16762  014222  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 16763  014228  EC99  F0C2         	call	_abs	;wreg free
 16764  01422C  0E30               	movlw	48
 16765  01422E  2625               	addwf	btemp^0,f,c
 16766                           
 16767                           ;stkvar	_i @ sp[(-18)+10]
 16768  014230  0EF8               	movlw	-8
 16769  014232  006F FF8C  F02F    	movff	plusw1,btemp+10
 16770  014238  0EF9               	movlw	-7
 16771  01423A  006F FF8C  F030    	movff	plusw1,btemp+11
 16772  014240  0EA5               	movlw	low _dbuf
 16773  014242  242F               	addwf	(btemp+10)^0,w,c
 16774  014244  6ED9               	movwf	fsr2l,c
 16775  014246  0E01               	movlw	high _dbuf
 16776  014248  2030               	addwfc	(btemp+11)^0,w,c
 16777  01424A  6EDA               	movwf	fsr2h,c
 16778  01424C  0060  F097  FFDF   	movff	btemp,indf2
 16779                           
 16780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16781                           ;stkvar	_p @ sp[(-18)+16]
 16782  014252  50E1               	movf	fsr1l,w,c
 16783  014254  0FFE               	addlw	-2
 16784  014256  6ED9               	movwf	fsr2l,c
 16785  014258  50E2               	movf	fsr1h,w,c
 16786  01425A  6EDA               	movwf	fsr2h,c
 16787  01425C  0EFF               	movlw	255
 16788  01425E  22DA               	addwfc	fsr2h,f,c
 16789  014260  06DE               	decf	postinc2,f,c
 16790  014262  0E00               	movlw	0
 16791  014264  5ADD               	subwfb	postdec2,f,c
 16792                           
 16793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16794                           ;stkvar	_w @ sp[(-18)+14]
 16795  014266  50E1               	movf	fsr1l,w,c
 16796  014268  0FFC               	addlw	-4
 16797  01426A  6ED9               	movwf	fsr2l,c
 16798  01426C  50E2               	movf	fsr1h,w,c
 16799  01426E  6EDA               	movwf	fsr2h,c
 16800  014270  0EFF               	movlw	255
 16801  014272  22DA               	addwfc	fsr2h,f,c
 16802  014274  06DE               	decf	postinc2,f,c
 16803  014276  0E00               	movlw	0
 16804  014278  5ADD               	subwfb	postdec2,f,c
 16805                           
 16806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16807  01427A  0E0A               	movlw	10
 16808  01427C  6EE6               	movwf	postinc1,c
 16809  01427E  0E00               	movlw	0
 16810  014280  6EE6               	movwf	postinc1,c
 16811  014282  0E00               	movlw	0
 16812  014284  6EE6               	movwf	postinc1,c
 16813  014286  0E00               	movlw	0
 16814  014288  6EE6               	movwf	postinc1,c
 16815  01428A  0E00               	movlw	0
 16816  01428C  6EE6               	movwf	postinc1,c
 16817  01428E  0E00               	movlw	0
 16818  014290  6EE6               	movwf	postinc1,c
 16819  014292  0E00               	movlw	0
 16820  014294  6EE6               	movwf	postinc1,c
 16821  014296  0E00               	movlw	0
 16822  014298  6EE6               	movwf	postinc1,c
 16823                           
 16824                           ;stkvar	_n @ sp[(-26)+2]
 16825  01429A  50E1               	movf	fsr1l,w,c
 16826  01429C  0FE8               	addlw	-24
 16827  01429E  6ED9               	movwf	fsr2l,c
 16828  0142A0  50E2               	movf	fsr1h,w,c
 16829  0142A2  6EDA               	movwf	fsr2h,c
 16830  0142A4  0EFF               	movlw	255
 16831  0142A6  22DA               	addwfc	fsr2h,f,c
 16832  0142A8  006F FF7B FFE6     	movff	postinc2,postinc1
 16833  0142AE  006F FF7B FFE6     	movff	postinc2,postinc1
 16834  0142B4  006F FF7B FFE6     	movff	postinc2,postinc1
 16835  0142BA  006F FF7B FFE6     	movff	postinc2,postinc1
 16836  0142C0  006F FF7B FFE6     	movff	postinc2,postinc1
 16837  0142C6  006F FF7B FFE6     	movff	postinc2,postinc1
 16838  0142CC  006F FF7B FFE6     	movff	postinc2,postinc1
 16839  0142D2  006F FF7B FFE6     	movff	postinc2,postinc1
 16840  0142D8  EC2D  F0AA         	call	___aodiv	;wreg free
 16841  0142DC  52E5               	movf	postdec1,f,c
 16842  0142DE  006F FF9C  F03C    	movff	indf1,btemp+23
 16843  0142E4  52E5               	movf	postdec1,f,c
 16844  0142E6  006F FF9C  F03B    	movff	indf1,btemp+22
 16845  0142EC  52E5               	movf	postdec1,f,c
 16846  0142EE  006F FF9C  F03A    	movff	indf1,btemp+21
 16847  0142F4  52E5               	movf	postdec1,f,c
 16848  0142F6  006F FF9C  F039    	movff	indf1,btemp+20
 16849  0142FC  52E5               	movf	postdec1,f,c
 16850  0142FE  006F FF9C  F038    	movff	indf1,btemp+19
 16851  014304  52E5               	movf	postdec1,f,c
 16852  014306  006F FF9C  F037    	movff	indf1,btemp+18
 16853  01430C  52E5               	movf	postdec1,f,c
 16854  01430E  006F FF9C  F036    	movff	indf1,btemp+17
 16855  014314  52E5               	movf	postdec1,f,c
 16856  014316  006F FF9C  F035    	movff	indf1,btemp+16
 16857  01431C  0EF8               	movlw	248
 16858  01431E  26E1               	addwf	fsr1l,f,c
 16859  014320  0EFF               	movlw	255
 16860  014322  22E2               	addwfc	fsr1h,f,c
 16861                           
 16862                           ;stkvar	_n @ sp[(-18)+2]
 16863  014324  0EF0               	movlw	-16
 16864  014326  0060  F0D7  FFE3   	movff	btemp+16,plusw1
 16865  01432C  0EF1               	movlw	-15
 16866  01432E  0060  F0DB  FFE3   	movff	btemp+17,plusw1
 16867  014334  0EF2               	movlw	-14
 16868  014336  0060  F0DF  FFE3   	movff	btemp+18,plusw1
 16869  01433C  0EF3               	movlw	-13
 16870  01433E  0060  F0E3  FFE3   	movff	btemp+19,plusw1
 16871  014344  0EF4               	movlw	-12
 16872  014346  0060  F0E7  FFE3   	movff	btemp+20,plusw1
 16873  01434C  0EF5               	movlw	-11
 16874  01434E  0060  F0EB  FFE3   	movff	btemp+21,plusw1
 16875  014354  0EF6               	movlw	-10
 16876  014356  0060  F0EF  FFE3   	movff	btemp+22,plusw1
 16877  01435C  0EF7               	movlw	-9
 16878  01435E  0060  F0F3  FFE3   	movff	btemp+23,plusw1
 16879  014364                     l10105:
 16880                           
 16881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16882                           ;stkvar	_i @ sp[(-18)+10]
 16883  014364  0EF9               	movlw	-7
 16884  014366  BEE3               	btfsc	plusw1,7,c
 16885  014368  D036               	goto	u9440
 16886  01436A  0EF9               	movlw	-7
 16887  01436C  50E3               	movf	plusw1,w,c
 16888  01436E  E104               	bnz	u9400
 16889  014370  0EF8               	movlw	-8
 16890  014372  04E3               	decf	plusw1,w,c
 16891  014374  A0D8               	btfss	status,0,c
 16892  014376  D02F               	goto	u9440
 16893  014378                     u9400:
 16894                           
 16895                           ;stkvar	_n @ sp[(-18)+2]
 16896  014378  0EF0               	movlw	-16
 16897  01437A  50E3               	movf	plusw1,w,c
 16898  01437C  E115               	bnz	u9411
 16899  01437E  0EF1               	movlw	-15
 16900  014380  50E3               	movf	plusw1,w,c
 16901  014382  E112               	bnz	u9411
 16902  014384  0EF2               	movlw	-14
 16903  014386  50E3               	movf	plusw1,w,c
 16904  014388  E10F               	bnz	u9411
 16905  01438A  0EF3               	movlw	-13
 16906  01438C  50E3               	movf	plusw1,w,c
 16907  01438E  E10C               	bnz	u9411
 16908  014390  0EF4               	movlw	-12
 16909  014392  50E3               	movf	plusw1,w,c
 16910  014394  E109               	bnz	u9411
 16911  014396  0EF5               	movlw	-11
 16912  014398  50E3               	movf	plusw1,w,c
 16913  01439A  E106               	bnz	u9411
 16914  01439C  0EF6               	movlw	-10
 16915  01439E  50E3               	movf	plusw1,w,c
 16916  0143A0  E103               	bnz	u9411
 16917  0143A2  0EF7               	movlw	-9
 16918  0143A4  50E3               	movf	plusw1,w,c
 16919  0143A6  A4D8               	btfss	status,2,c
 16920  0143A8                     u9411:
 16921  0143A8  D6D4               	goto	l10095
 16922                           
 16923                           ;stkvar	_p @ sp[(-18)+16]
 16924  0143AA  0EFF               	movlw	-1
 16925  0143AC  BEE3               	btfsc	plusw1,7,c
 16926  0143AE  D007               	goto	u9420
 16927  0143B0  0EFF               	movlw	-1
 16928  0143B2  50E3               	movf	plusw1,w,c
 16929  0143B4  E103               	bnz	u9421
 16930  0143B6  0EFE               	movlw	-2
 16931  0143B8  04E3               	decf	plusw1,w,c
 16932  0143BA  B0D8               	btfsc	status,0,c
 16933  0143BC                     u9421:
 16934  0143BC  D6CA               	goto	l10095
 16935  0143BE                     u9420:
 16936                           
 16937                           ;stkvar	_w @ sp[(-18)+14]
 16938  0143BE  0EFD               	movlw	-3
 16939  0143C0  BEE3               	btfsc	plusw1,7,c
 16940  0143C2  D009               	goto	u9440
 16941  0143C4  0EFD               	movlw	-3
 16942  0143C6  50E3               	movf	plusw1,w,c
 16943  0143C8  E104               	bnz	u9430
 16944  0143CA  0EFC               	movlw	-4
 16945  0143CC  04E3               	decf	plusw1,w,c
 16946  0143CE  A0D8               	btfss	status,0,c
 16947  0143D0  D002               	goto	u9440
 16948  0143D2                     u9430:
 16949  0143D2  B20E               	btfsc	_flags^0,1,c
 16950  0143D4  D6BE               	goto	l10095
 16951  0143D6                     u9440:
 16952                           
 16953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16954                           ;stkvar	_s @ sp[(-18)+12]
 16955  0143D6  0EFA               	movlw	-6
 16956  0143D8  006F FF8C  F025    	movff	plusw1,btemp
 16957  0143DE  0EFB               	movlw	-5
 16958  0143E0  50E3               	movf	plusw1,w,c
 16959  0143E2  1025               	iorwf	btemp^0,w,c
 16960  0143E4  A4D8               	btfss	status,2,c
 16961  0143E6  D002               	goto	u9460
 16962  0143E8  A40E               	btfss	_flags^0,2,c
 16963  0143EA  D033               	goto	l10129
 16964  0143EC                     u9460:
 16965                           
 16966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 16967                           ;stkvar	_i @ sp[(-18)+10]
 16968  0143EC  50E1               	movf	fsr1l,w,c
 16969  0143EE  0FF8               	addlw	-8
 16970  0143F0  6ED9               	movwf	fsr2l,c
 16971  0143F2  50E2               	movf	fsr1h,w,c
 16972  0143F4  6EDA               	movwf	fsr2h,c
 16973  0143F6  0EFF               	movlw	255
 16974  0143F8  22DA               	addwfc	fsr2h,f,c
 16975  0143FA  06DE               	decf	postinc2,f,c
 16976  0143FC  0E00               	movlw	0
 16977  0143FE  5ADD               	subwfb	postdec2,f,c
 16978                           
 16979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 16980                           ;stkvar	_s @ sp[(-18)+12]
 16981  014400  0EFA               	movlw	-6
 16982  014402  006F FF8C  F025    	movff	plusw1,btemp
 16983  014408  0EFB               	movlw	-5
 16984  01440A  50E3               	movf	plusw1,w,c
 16985  01440C  1025               	iorwf	btemp^0,w,c
 16986  01440E  A4D8               	btfss	status,2,c
 16987  014410  D002               	goto	l10125
 16988  014412  0E2B               	movlw	43
 16989  014414  D001               	goto	L17
 16990  014416                     l10125:
 16991  014416  0E2D               	movlw	45
 16992  014418                     L17:
 16993  014418  6E2F               	movwf	(btemp+10)^0,c
 16994  01441A  0E00               	movlw	0
 16995  01441C  6E30               	movwf	(btemp+11)^0,c
 16996                           
 16997                           ;stkvar	_dtoa$4936 @ sp[(-18)+0]
 16998  01441E  0EEE               	movlw	-18
 16999  014420  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 17000  014426  0EEF               	movlw	-17
 17001  014428  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 17002                           
 17003                           ;stkvar	_dtoa$4936 @ sp[(-18)+0]
 17004                           ;stkvar	_i @ sp[(-18)+10]
 17005  01442E  0EF8               	movlw	-8
 17006  014430  006F FF8C  F02F    	movff	plusw1,btemp+10
 17007  014436  0EF9               	movlw	-7
 17008  014438  006F FF8C  F030    	movff	plusw1,btemp+11
 17009  01443E  0EA5               	movlw	low _dbuf
 17010  014440  242F               	addwf	(btemp+10)^0,w,c
 17011  014442  6ED9               	movwf	fsr2l,c
 17012  014444  0E01               	movlw	high _dbuf
 17013  014446  2030               	addwfc	(btemp+11)^0,w,c
 17014  014448  6EDA               	movwf	fsr2h,c
 17015  01444A  0EEE               	movlw	-18
 17016  01444C  006F FF8F FFDF     	movff	plusw1,indf2
 17017  014452                     l10129:
 17018                           
 17019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17020                           ;stkvar	_w @ sp[(-18)+14]
 17021  014452  0EFC               	movlw	-4
 17022  014454  006F FF8F FFE6     	movff	plusw1,postinc1
 17023  01445A  006F FF8F FFE6     	movff	plusw1,postinc1
 17024                           
 17025                           ;stkvar	_i @ sp[(-20)+10]
 17026  014460  0EA5               	movlw	low _dbuf
 17027  014462  6E2F               	movwf	(btemp+10)^0,c
 17028  014464  0E01               	movlw	high _dbuf
 17029  014466  6E30               	movwf	(btemp+11)^0,c
 17030  014468  0EF6               	movlw	-10
 17031  01446A  50E3               	movf	plusw1,w,c
 17032  01446C  262F               	addwf	(btemp+10)^0,f,c
 17033  01446E  0EF7               	movlw	-9
 17034  014470  50E3               	movf	plusw1,w,c
 17035  014472  2230               	addwfc	(btemp+11)^0,f,c
 17036  014474  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 17037  01447A  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 17038                           
 17039                           ;stkvar	_fp @ sp[(-22)+-2]
 17040  014480  0EE8               	movlw	-24
 17041  014482  006F FF8F FFE6     	movff	plusw1,postinc1
 17042  014488  006F FF8F FFE6     	movff	plusw1,postinc1
 17043  01448E  ECCB  F0B6         	call	_pad	;wreg free
 17044                           
 17045                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17046  014492  0EE4               	movlw	228
 17047  014494  26E1               	addwf	fsr1l,f,c
 17048  014496  0EFF               	movlw	255
 17049  014498  22E2               	addwfc	fsr1h,f,c
 17050  01449A  0012               	return		;funcret
 17051  01449C                     __end_of_dtoa:
 17052                           	opt callstack 0
 17053                           
 17054 ;; *************** function _abs *****************
 17055 ;; Defined at:
 17056 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17057 ;; Parameters:    Size  Location     Type
 17058 ;;  a               2  [STACK] int 
 17059 ;; Auto vars:     Size  Location     Type
 17060 ;;		None
 17061 ;; Return value:  Size  Location     Type
 17062 ;;                  2  [STACK] int 
 17063 ;; Registers used:
 17064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17065 ;; Tracked objects:
 17066 ;;		On entry : 0/1
 17067 ;;		On exit  : 0/0
 17068 ;;		Unchanged: 0/0
 17069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17074 ;;Total ram usage:        0 bytes
 17075 ;; Hardware stack levels used:    1
 17076 ;; Hardware stack levels required when called:   10
 17077 ;; This function calls:
 17078 ;;		Nothing
 17079 ;; This function is called by:
 17080 ;;		_dtoa
 17081 ;; This function uses a reentrant model
 17082 ;;
 17083                           
 17084                           	psect	text62
 17085  018532                     __ptext62:
 17086                           	opt callstack 0
 17087  018532                     _abs:
 17088                           	opt callstack 13
 17089                           
 17090                           ;stkvar	_a @ sp[(0)+-2]
 17091                           
 17092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17093                           ;incstack = 0
 17094  018532  0EFF               	movlw	-1
 17095  018534  BEE3               	btfsc	plusw1,7,c
 17096  018536  D007               	goto	u4770
 17097  018538  0EFF               	movlw	-1
 17098  01853A  50E3               	movf	plusw1,w,c
 17099  01853C  E112               	bnz	l6629
 17100  01853E  0EFE               	movlw	-2
 17101  018540  04E3               	decf	plusw1,w,c
 17102  018542  B0D8               	btfsc	status,0,c
 17103  018544  D00E               	goto	l6629
 17104  018546                     u4770:
 17105                           
 17106                           ;stkvar	_a @ sp[(0)+-2]
 17107  018546  0EFE               	movlw	-2
 17108  018548  006F FF8C  F025    	movff	plusw1,btemp
 17109  01854E  1E25               	comf	btemp^0,f,c
 17110  018550  0EFF               	movlw	-1
 17111  018552  006F FF8C  F026    	movff	plusw1,btemp+1
 17112  018558  1E26               	comf	(btemp+1)^0,f,c
 17113  01855A  2A25               	incf	btemp^0,f,c
 17114  01855C  B4D8               	btfsc	status,2,c
 17115  01855E  2A26               	incf	(btemp+1)^0,f,c
 17116  018560  D008               	goto	l2905
 17117  018562                     l6629:
 17118                           
 17119                           ;stkvar	_a @ sp[(0)+-2]
 17120  018562  0EFE               	movlw	-2
 17121  018564  006F FF8C  F025    	movff	plusw1,btemp
 17122  01856A  0EFF               	movlw	-1
 17123  01856C  006F FF8C  F026    	movff	plusw1,btemp+1
 17124  018572                     l2905:
 17125                           
 17126                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17127  018572  52E5               	movf	postdec1,f,c
 17128  018574  52E5               	movf	postdec1,f,c
 17129  018576  0012               	return		;funcret
 17130  018578                     __end_of_abs:
 17131                           	opt callstack 0
 17132                           
 17133 ;; *************** function ___aomod *****************
 17134 ;; Defined at:
 17135 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17136 ;; Parameters:    Size  Location     Type
 17137 ;;  dividend        8  [STACK] long long 
 17138 ;;  divisor         8  [STACK] long long 
 17139 ;; Auto vars:     Size  Location     Type
 17140 ;;  sign            1  [STACK] unsigned char 
 17141 ;;  counter         1  [STACK] unsigned char 
 17142 ;; Return value:  Size  Location     Type
 17143 ;;                  8  [STACK] long long 
 17144 ;; Registers used:
 17145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17146 ;; Tracked objects:
 17147 ;;		On entry : 0/1
 17148 ;;		On exit  : 0/0
 17149 ;;		Unchanged: 0/0
 17150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17155 ;;Total ram usage:        0 bytes
 17156 ;; Hardware stack levels used:    1
 17157 ;; Hardware stack levels required when called:   10
 17158 ;; This function calls:
 17159 ;;		Nothing
 17160 ;; This function is called by:
 17161 ;;		_dtoa
 17162 ;; This function uses a reentrant model
 17163 ;;
 17164                           
 17165                           	psect	text63
 17166  01594E                     __ptext63:
 17167                           	opt callstack 0
 17168  01594E                     ___aomod:
 17169                           	opt callstack 0
 17170                           
 17171                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17172  01594E  52E6               	movf	postinc1,f,c
 17173  015950  52E6               	movf	postinc1,f,c
 17174                           
 17175                           ;stkvar	_sign @ sp[(-2)+0]
 17176                           
 17177                           ;incstack = 0
 17178  015952  0EFE               	movlw	-2
 17179  015954  6AE3               	clrf	plusw1,c
 17180                           
 17181                           ;stkvar	_dividend @ sp[(-2)+-8]
 17182  015956  0EFD               	movlw	-3
 17183  015958  AEE3               	btfss	plusw1,7,c
 17184  01595A  D028               	goto	l6787
 17185                           
 17186                           ;stkvar	_dividend @ sp[(-2)+-8]
 17187                           ;stkvar	_dividend @ sp[(-2)+-8]
 17188  01595C  0EF6               	movlw	-10
 17189  01595E  6CE3               	negf	plusw1,c
 17190  015960  0EF7               	movlw	-9
 17191  015962  1EE3               	comf	plusw1,f,c
 17192  015964  0EF8               	movlw	-8
 17193  015966  1EE3               	comf	plusw1,f,c
 17194  015968  0EF9               	movlw	-7
 17195  01596A  1EE3               	comf	plusw1,f,c
 17196  01596C  0EFA               	movlw	-6
 17197  01596E  1EE3               	comf	plusw1,f,c
 17198  015970  0EFB               	movlw	-5
 17199  015972  1EE3               	comf	plusw1,f,c
 17200  015974  0EFC               	movlw	-4
 17201  015976  1EE3               	comf	plusw1,f,c
 17202  015978  0EFD               	movlw	-3
 17203  01597A  1EE3               	comf	plusw1,f,c
 17204  01597C  E314               	bnc	u5200
 17205  01597E  0EF7               	movlw	-9
 17206  015980  2AE3               	incf	plusw1,f,c
 17207  015982  E311               	bnc	u5200
 17208  015984  0EF8               	movlw	-8
 17209  015986  2AE3               	incf	plusw1,f,c
 17210  015988  E30E               	bnc	u5200
 17211  01598A  0EF9               	movlw	-7
 17212  01598C  2AE3               	incf	plusw1,f,c
 17213  01598E  E30B               	bnc	u5200
 17214  015990  0EFA               	movlw	-6
 17215  015992  2AE3               	incf	plusw1,f,c
 17216  015994  E308               	bnc	u5200
 17217  015996  0EFB               	movlw	-5
 17218  015998  2AE3               	incf	plusw1,f,c
 17219  01599A  E305               	bnc	u5200
 17220  01599C  0EFC               	movlw	-4
 17221  01599E  2AE3               	incf	plusw1,f,c
 17222  0159A0  E302               	bnc	u5200
 17223  0159A2  0EFD               	movlw	-3
 17224  0159A4  2AE3               	incf	plusw1,f,c
 17225  0159A6                     u5200:
 17226                           
 17227                           ;stkvar	_sign @ sp[(-2)+0]
 17228  0159A6  0EFE               	movlw	-2
 17229  0159A8  6AE3               	clrf	plusw1,c
 17230  0159AA  2AE3               	incf	plusw1,f,c
 17231  0159AC                     l6787:
 17232                           
 17233                           ;stkvar	_divisor @ sp[(-2)+-16]
 17234  0159AC  0EF5               	movlw	-11
 17235  0159AE  AEE3               	btfss	plusw1,7,c
 17236  0159B0  D025               	goto	u5220
 17237                           
 17238                           ;stkvar	_divisor @ sp[(-2)+-16]
 17239                           ;stkvar	_divisor @ sp[(-2)+-16]
 17240  0159B2  0EEE               	movlw	-18
 17241  0159B4  6CE3               	negf	plusw1,c
 17242  0159B6  0EEF               	movlw	-17
 17243  0159B8  1EE3               	comf	plusw1,f,c
 17244  0159BA  0EF0               	movlw	-16
 17245  0159BC  1EE3               	comf	plusw1,f,c
 17246  0159BE  0EF1               	movlw	-15
 17247  0159C0  1EE3               	comf	plusw1,f,c
 17248  0159C2  0EF2               	movlw	-14
 17249  0159C4  1EE3               	comf	plusw1,f,c
 17250  0159C6  0EF3               	movlw	-13
 17251  0159C8  1EE3               	comf	plusw1,f,c
 17252  0159CA  0EF4               	movlw	-12
 17253  0159CC  1EE3               	comf	plusw1,f,c
 17254  0159CE  0EF5               	movlw	-11
 17255  0159D0  1EE3               	comf	plusw1,f,c
 17256  0159D2  E314               	bnc	u5220
 17257  0159D4  0EEF               	movlw	-17
 17258  0159D6  2AE3               	incf	plusw1,f,c
 17259  0159D8  E311               	bnc	u5220
 17260  0159DA  0EF0               	movlw	-16
 17261  0159DC  2AE3               	incf	plusw1,f,c
 17262  0159DE  E30E               	bnc	u5220
 17263  0159E0  0EF1               	movlw	-15
 17264  0159E2  2AE3               	incf	plusw1,f,c
 17265  0159E4  E30B               	bnc	u5220
 17266  0159E6  0EF2               	movlw	-14
 17267  0159E8  2AE3               	incf	plusw1,f,c
 17268  0159EA  E308               	bnc	u5220
 17269  0159EC  0EF3               	movlw	-13
 17270  0159EE  2AE3               	incf	plusw1,f,c
 17271  0159F0  E305               	bnc	u5220
 17272  0159F2  0EF4               	movlw	-12
 17273  0159F4  2AE3               	incf	plusw1,f,c
 17274  0159F6  E302               	bnc	u5220
 17275  0159F8  0EF5               	movlw	-11
 17276  0159FA  2AE3               	incf	plusw1,f,c
 17277  0159FC                     u5220:
 17278                           
 17279                           ;stkvar	_divisor @ sp[(-2)+-16]
 17280  0159FC  0EEE               	movlw	-18
 17281  0159FE  50E3               	movf	plusw1,w,c
 17282  015A00  E116               	bnz	u5230
 17283  015A02  0EEF               	movlw	-17
 17284  015A04  50E3               	movf	plusw1,w,c
 17285  015A06  E113               	bnz	u5230
 17286  015A08  0EF0               	movlw	-16
 17287  015A0A  50E3               	movf	plusw1,w,c
 17288  015A0C  E110               	bnz	u5230
 17289  015A0E  0EF1               	movlw	-15
 17290  015A10  50E3               	movf	plusw1,w,c
 17291  015A12  E10D               	bnz	u5230
 17292  015A14  0EF2               	movlw	-14
 17293  015A16  50E3               	movf	plusw1,w,c
 17294  015A18  E10A               	bnz	u5230
 17295  015A1A  0EF3               	movlw	-13
 17296  015A1C  50E3               	movf	plusw1,w,c
 17297  015A1E  E107               	bnz	u5230
 17298  015A20  0EF4               	movlw	-12
 17299  015A22  50E3               	movf	plusw1,w,c
 17300  015A24  E104               	bnz	u5230
 17301  015A26  0EF5               	movlw	-11
 17302  015A28  50E3               	movf	plusw1,w,c
 17303  015A2A  B4D8               	btfsc	status,2,c
 17304  015A2C  D075               	goto	u5260
 17305  015A2E                     u5230:
 17306                           
 17307                           ;stkvar	_counter @ sp[(-2)+1]
 17308  015A2E  0EFF               	movlw	-1
 17309  015A30  6AE3               	clrf	plusw1,c
 17310  015A32  D012               	goto	L18
 17311  015A34                     l6795:
 17312                           
 17313                           ;stkvar	_divisor @ sp[(-2)+-16]
 17314  015A34  90D8               	bcf	status,0,c
 17315  015A36  0EEE               	movlw	-18
 17316  015A38  36E3               	rlcf	plusw1,f,c
 17317  015A3A  0EEF               	movlw	-17
 17318  015A3C  36E3               	rlcf	plusw1,f,c
 17319  015A3E  0EF0               	movlw	-16
 17320  015A40  36E3               	rlcf	plusw1,f,c
 17321  015A42  0EF1               	movlw	-15
 17322  015A44  36E3               	rlcf	plusw1,f,c
 17323  015A46  0EF2               	movlw	-14
 17324  015A48  36E3               	rlcf	plusw1,f,c
 17325  015A4A  0EF3               	movlw	-13
 17326  015A4C  36E3               	rlcf	plusw1,f,c
 17327  015A4E  0EF4               	movlw	-12
 17328  015A50  36E3               	rlcf	plusw1,f,c
 17329  015A52  0EF5               	movlw	-11
 17330  015A54  36E3               	rlcf	plusw1,f,c
 17331                           
 17332                           ;stkvar	_counter @ sp[(-2)+1]
 17333  015A56  0EFF               	movlw	-1
 17334  015A58                     L18:
 17335  015A58  2AE3               	incf	plusw1,f,c
 17336                           
 17337                           ;stkvar	_divisor @ sp[(-2)+-16]
 17338  015A5A  0EF5               	movlw	-11
 17339  015A5C  AEE3               	btfss	plusw1,7,c
 17340  015A5E  D7EA               	goto	l6795
 17341  015A60                     u5240:
 17342                           
 17343                           ;stkvar	_divisor @ sp[(-2)+-16]
 17344                           ;stkvar	_dividend @ sp[(-2)+-8]
 17345  015A60  50E1               	movf	fsr1l,w,c
 17346  015A62  0FF6               	addlw	-10
 17347  015A64  6ED9               	movwf	fsr2l,c
 17348  015A66  50E2               	movf	fsr1h,w,c
 17349  015A68  6EDA               	movwf	fsr2h,c
 17350  015A6A  0EFF               	movlw	255
 17351  015A6C  22DA               	addwfc	fsr2h,f,c
 17352  015A6E  0EEE               	movlw	-18
 17353  015A70  50E3               	movf	plusw1,w,c
 17354  015A72  5CDE               	subwf	postinc2,w,c
 17355  015A74  0EEF               	movlw	-17
 17356  015A76  50E3               	movf	plusw1,w,c
 17357  015A78  58DE               	subwfb	postinc2,w,c
 17358  015A7A  0EF0               	movlw	-16
 17359  015A7C  50E3               	movf	plusw1,w,c
 17360  015A7E  58DE               	subwfb	postinc2,w,c
 17361  015A80  0EF1               	movlw	-15
 17362  015A82  50E3               	movf	plusw1,w,c
 17363  015A84  58DE               	subwfb	postinc2,w,c
 17364  015A86  0EF2               	movlw	-14
 17365  015A88  50E3               	movf	plusw1,w,c
 17366  015A8A  58DE               	subwfb	postinc2,w,c
 17367  015A8C  0EF3               	movlw	-13
 17368  015A8E  50E3               	movf	plusw1,w,c
 17369  015A90  58DE               	subwfb	postinc2,w,c
 17370  015A92  0EF4               	movlw	-12
 17371  015A94  50E3               	movf	plusw1,w,c
 17372  015A96  58DE               	subwfb	postinc2,w,c
 17373  015A98  0EF5               	movlw	-11
 17374  015A9A  50E3               	movf	plusw1,w,c
 17375  015A9C  58DE               	subwfb	postinc2,w,c
 17376  015A9E  A0D8               	btfss	status,0,c
 17377  015AA0  D01F               	goto	l6803
 17378                           
 17379                           ;stkvar	_divisor @ sp[(-2)+-16]
 17380                           ;stkvar	_dividend @ sp[(-2)+-8]
 17381  015AA2  50E1               	movf	fsr1l,w,c
 17382  015AA4  0FF6               	addlw	-10
 17383  015AA6  6ED9               	movwf	fsr2l,c
 17384  015AA8  50E2               	movf	fsr1h,w,c
 17385  015AAA  6EDA               	movwf	fsr2h,c
 17386  015AAC  0EFF               	movlw	255
 17387  015AAE  22DA               	addwfc	fsr2h,f,c
 17388  015AB0  0EEE               	movlw	-18
 17389  015AB2  50E3               	movf	plusw1,w,c
 17390  015AB4  5EDE               	subwf	postinc2,f,c
 17391  015AB6  0EEF               	movlw	-17
 17392  015AB8  50E3               	movf	plusw1,w,c
 17393  015ABA  5ADE               	subwfb	postinc2,f,c
 17394  015ABC  0EF0               	movlw	-16
 17395  015ABE  50E3               	movf	plusw1,w,c
 17396  015AC0  5ADE               	subwfb	postinc2,f,c
 17397  015AC2  0EF1               	movlw	-15
 17398  015AC4  50E3               	movf	plusw1,w,c
 17399  015AC6  5ADE               	subwfb	postinc2,f,c
 17400  015AC8  0EF2               	movlw	-14
 17401  015ACA  50E3               	movf	plusw1,w,c
 17402  015ACC  5ADE               	subwfb	postinc2,f,c
 17403  015ACE  0EF3               	movlw	-13
 17404  015AD0  50E3               	movf	plusw1,w,c
 17405  015AD2  5ADE               	subwfb	postinc2,f,c
 17406  015AD4  0EF4               	movlw	-12
 17407  015AD6  50E3               	movf	plusw1,w,c
 17408  015AD8  5ADE               	subwfb	postinc2,f,c
 17409  015ADA  0EF5               	movlw	-11
 17410  015ADC  50E3               	movf	plusw1,w,c
 17411  015ADE  5ADE               	subwfb	postinc2,f,c
 17412  015AE0                     l6803:
 17413                           
 17414                           ;stkvar	_divisor @ sp[(-2)+-16]
 17415  015AE0  90D8               	bcf	status,0,c
 17416  015AE2  0EF5               	movlw	-11
 17417  015AE4  32E3               	rrcf	plusw1,f,c
 17418  015AE6  0EF4               	movlw	-12
 17419  015AE8  32E3               	rrcf	plusw1,f,c
 17420  015AEA  0EF3               	movlw	-13
 17421  015AEC  32E3               	rrcf	plusw1,f,c
 17422  015AEE  0EF2               	movlw	-14
 17423  015AF0  32E3               	rrcf	plusw1,f,c
 17424  015AF2  0EF1               	movlw	-15
 17425  015AF4  32E3               	rrcf	plusw1,f,c
 17426  015AF6  0EF0               	movlw	-16
 17427  015AF8  32E3               	rrcf	plusw1,f,c
 17428  015AFA  0EEF               	movlw	-17
 17429  015AFC  32E3               	rrcf	plusw1,f,c
 17430  015AFE  0EEE               	movlw	-18
 17431  015B00  32E3               	rrcf	plusw1,f,c
 17432                           
 17433                           ;stkvar	_counter @ sp[(-2)+1]
 17434  015B02  0EFF               	movlw	-1
 17435  015B04  50E3               	movf	plusw1,w,c
 17436  015B06  6E25               	movwf	btemp^0,c
 17437  015B08  0E01               	movlw	1
 17438  015B0A  5E25               	subwf	btemp^0,f,c
 17439  015B0C  0EFF               	movlw	-1
 17440  015B0E  0060  F097  FFE3   	movff	btemp,plusw1
 17441  015B14  A4D8               	btfss	status,2,c
 17442  015B16  D7A4               	goto	u5240
 17443  015B18                     u5260:
 17444                           
 17445                           ;stkvar	_sign @ sp[(-2)+0]
 17446  015B18  0EFE               	movlw	-2
 17447  015B1A  50E3               	movf	plusw1,w,c
 17448  015B1C  B4D8               	btfsc	status,2,c
 17449  015B1E  D025               	goto	u5280
 17450                           
 17451                           ;stkvar	_dividend @ sp[(-2)+-8]
 17452                           ;stkvar	_dividend @ sp[(-2)+-8]
 17453  015B20  0EF6               	movlw	-10
 17454  015B22  6CE3               	negf	plusw1,c
 17455  015B24  0EF7               	movlw	-9
 17456  015B26  1EE3               	comf	plusw1,f,c
 17457  015B28  0EF8               	movlw	-8
 17458  015B2A  1EE3               	comf	plusw1,f,c
 17459  015B2C  0EF9               	movlw	-7
 17460  015B2E  1EE3               	comf	plusw1,f,c
 17461  015B30  0EFA               	movlw	-6
 17462  015B32  1EE3               	comf	plusw1,f,c
 17463  015B34  0EFB               	movlw	-5
 17464  015B36  1EE3               	comf	plusw1,f,c
 17465  015B38  0EFC               	movlw	-4
 17466  015B3A  1EE3               	comf	plusw1,f,c
 17467  015B3C  0EFD               	movlw	-3
 17468  015B3E  1EE3               	comf	plusw1,f,c
 17469  015B40  E314               	bnc	u5280
 17470  015B42  0EF7               	movlw	-9
 17471  015B44  2AE3               	incf	plusw1,f,c
 17472  015B46  E311               	bnc	u5280
 17473  015B48  0EF8               	movlw	-8
 17474  015B4A  2AE3               	incf	plusw1,f,c
 17475  015B4C  E30E               	bnc	u5280
 17476  015B4E  0EF9               	movlw	-7
 17477  015B50  2AE3               	incf	plusw1,f,c
 17478  015B52  E30B               	bnc	u5280
 17479  015B54  0EFA               	movlw	-6
 17480  015B56  2AE3               	incf	plusw1,f,c
 17481  015B58  E308               	bnc	u5280
 17482  015B5A  0EFB               	movlw	-5
 17483  015B5C  2AE3               	incf	plusw1,f,c
 17484  015B5E  E305               	bnc	u5280
 17485  015B60  0EFC               	movlw	-4
 17486  015B62  2AE3               	incf	plusw1,f,c
 17487  015B64  E302               	bnc	u5280
 17488  015B66  0EFD               	movlw	-3
 17489  015B68  2AE3               	incf	plusw1,f,c
 17490  015B6A                     u5280:
 17491                           
 17492                           ;stkvar	_dividend @ sp[(-2)+-8]
 17493  015B6A  0EF6               	movlw	246
 17494  015B6C  24E1               	addwf	fsr1l,w,c
 17495  015B6E  6ED9               	movwf	fsr2l,c
 17496  015B70  0EFF               	movlw	255
 17497  015B72  20E2               	addwfc	fsr1h,w,c
 17498  015B74  6EDA               	movwf	fsr2h,c
 17499                           
 17500                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17501  015B76  0E08               	movlw	8
 17502  015B78  6E25               	movwf	btemp^0,c
 17503  015B7A  0EF6               	movlw	-10
 17504  015B7C                     us529999:
 17505  015B7C  006F FF7B FFE3     	movff	postinc2,plusw1
 17506  015B82  28E8               	incf	wreg,w,c
 17507  015B84  2E25               	decfsz	btemp^0,f,c
 17508  015B86  D7FA               	bra	us529999
 17509                           
 17510                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17511  015B88  52E5               	movf	postdec1,f,c
 17512  015B8A  52E5               	movf	postdec1,f,c
 17513  015B8C  0012               	return		;funcret
 17514  015B8E                     __end_of___aomod:
 17515                           	opt callstack 0
 17516                           
 17517 ;; *************** function ___aodiv *****************
 17518 ;; Defined at:
 17519 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17520 ;; Parameters:    Size  Location     Type
 17521 ;;  dividend        8  [STACK] long long 
 17522 ;;  divisor         8  [STACK] long long 
 17523 ;; Auto vars:     Size  Location     Type
 17524 ;;  quotient        8  [STACK] long long 
 17525 ;;  sign            1  [STACK] unsigned char 
 17526 ;;  counter         1  [STACK] unsigned char 
 17527 ;; Return value:  Size  Location     Type
 17528 ;;                  8  [STACK] long long 
 17529 ;; Registers used:
 17530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17531 ;; Tracked objects:
 17532 ;;		On entry : 0/1
 17533 ;;		On exit  : 0/0
 17534 ;;		Unchanged: 0/0
 17535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17540 ;;Total ram usage:        0 bytes
 17541 ;; Hardware stack levels used:    1
 17542 ;; Hardware stack levels required when called:   10
 17543 ;; This function calls:
 17544 ;;		Nothing
 17545 ;; This function is called by:
 17546 ;;		_dtoa
 17547 ;; This function uses a reentrant model
 17548 ;;
 17549                           
 17550                           	psect	text64
 17551  01545A                     __ptext64:
 17552                           	opt callstack 0
 17553  01545A                     ___aodiv:
 17554                           	opt callstack 0
 17555                           
 17556                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17557  01545A  0E0A               	movlw	10
 17558  01545C  26E1               	addwf	fsr1l,f,c
 17559  01545E  0E00               	movlw	0
 17560  015460  22E2               	addwfc	fsr1h,f,c
 17561                           
 17562                           ;stkvar	_sign @ sp[(-10)+8]
 17563                           
 17564                           ;incstack = 0
 17565  015462  0EFE               	movlw	-2
 17566  015464  6AE3               	clrf	plusw1,c
 17567                           
 17568                           ;stkvar	_divisor @ sp[(-10)+-16]
 17569  015466  0EED               	movlw	-19
 17570  015468  AEE3               	btfss	plusw1,7,c
 17571  01546A  D028               	goto	l6743
 17572                           
 17573                           ;stkvar	_divisor @ sp[(-10)+-16]
 17574                           ;stkvar	_divisor @ sp[(-10)+-16]
 17575  01546C  0EE6               	movlw	-26
 17576  01546E  6CE3               	negf	plusw1,c
 17577  015470  0EE7               	movlw	-25
 17578  015472  1EE3               	comf	plusw1,f,c
 17579  015474  0EE8               	movlw	-24
 17580  015476  1EE3               	comf	plusw1,f,c
 17581  015478  0EE9               	movlw	-23
 17582  01547A  1EE3               	comf	plusw1,f,c
 17583  01547C  0EEA               	movlw	-22
 17584  01547E  1EE3               	comf	plusw1,f,c
 17585  015480  0EEB               	movlw	-21
 17586  015482  1EE3               	comf	plusw1,f,c
 17587  015484  0EEC               	movlw	-20
 17588  015486  1EE3               	comf	plusw1,f,c
 17589  015488  0EED               	movlw	-19
 17590  01548A  1EE3               	comf	plusw1,f,c
 17591  01548C  E314               	bnc	u5080
 17592  01548E  0EE7               	movlw	-25
 17593  015490  2AE3               	incf	plusw1,f,c
 17594  015492  E311               	bnc	u5080
 17595  015494  0EE8               	movlw	-24
 17596  015496  2AE3               	incf	plusw1,f,c
 17597  015498  E30E               	bnc	u5080
 17598  01549A  0EE9               	movlw	-23
 17599  01549C  2AE3               	incf	plusw1,f,c
 17600  01549E  E30B               	bnc	u5080
 17601  0154A0  0EEA               	movlw	-22
 17602  0154A2  2AE3               	incf	plusw1,f,c
 17603  0154A4  E308               	bnc	u5080
 17604  0154A6  0EEB               	movlw	-21
 17605  0154A8  2AE3               	incf	plusw1,f,c
 17606  0154AA  E305               	bnc	u5080
 17607  0154AC  0EEC               	movlw	-20
 17608  0154AE  2AE3               	incf	plusw1,f,c
 17609  0154B0  E302               	bnc	u5080
 17610  0154B2  0EED               	movlw	-19
 17611  0154B4  2AE3               	incf	plusw1,f,c
 17612  0154B6                     u5080:
 17613                           
 17614                           ;stkvar	_sign @ sp[(-10)+8]
 17615  0154B6  0EFE               	movlw	-2
 17616  0154B8  6AE3               	clrf	plusw1,c
 17617  0154BA  2AE3               	incf	plusw1,f,c
 17618  0154BC                     l6743:
 17619                           
 17620                           ;stkvar	_dividend @ sp[(-10)+-8]
 17621  0154BC  0EF5               	movlw	-11
 17622  0154BE  AEE3               	btfss	plusw1,7,c
 17623  0154C0  D027               	goto	l6749
 17624                           
 17625                           ;stkvar	_dividend @ sp[(-10)+-8]
 17626                           ;stkvar	_dividend @ sp[(-10)+-8]
 17627  0154C2  0EEE               	movlw	-18
 17628  0154C4  6CE3               	negf	plusw1,c
 17629  0154C6  0EEF               	movlw	-17
 17630  0154C8  1EE3               	comf	plusw1,f,c
 17631  0154CA  0EF0               	movlw	-16
 17632  0154CC  1EE3               	comf	plusw1,f,c
 17633  0154CE  0EF1               	movlw	-15
 17634  0154D0  1EE3               	comf	plusw1,f,c
 17635  0154D2  0EF2               	movlw	-14
 17636  0154D4  1EE3               	comf	plusw1,f,c
 17637  0154D6  0EF3               	movlw	-13
 17638  0154D8  1EE3               	comf	plusw1,f,c
 17639  0154DA  0EF4               	movlw	-12
 17640  0154DC  1EE3               	comf	plusw1,f,c
 17641  0154DE  0EF5               	movlw	-11
 17642  0154E0  1EE3               	comf	plusw1,f,c
 17643  0154E2  E314               	bnc	u5100
 17644  0154E4  0EEF               	movlw	-17
 17645  0154E6  2AE3               	incf	plusw1,f,c
 17646  0154E8  E311               	bnc	u5100
 17647  0154EA  0EF0               	movlw	-16
 17648  0154EC  2AE3               	incf	plusw1,f,c
 17649  0154EE  E30E               	bnc	u5100
 17650  0154F0  0EF1               	movlw	-15
 17651  0154F2  2AE3               	incf	plusw1,f,c
 17652  0154F4  E30B               	bnc	u5100
 17653  0154F6  0EF2               	movlw	-14
 17654  0154F8  2AE3               	incf	plusw1,f,c
 17655  0154FA  E308               	bnc	u5100
 17656  0154FC  0EF3               	movlw	-13
 17657  0154FE  2AE3               	incf	plusw1,f,c
 17658  015500  E305               	bnc	u5100
 17659  015502  0EF4               	movlw	-12
 17660  015504  2AE3               	incf	plusw1,f,c
 17661  015506  E302               	bnc	u5100
 17662  015508  0EF5               	movlw	-11
 17663  01550A  2AE3               	incf	plusw1,f,c
 17664  01550C                     u5100:
 17665                           
 17666                           ;stkvar	_sign @ sp[(-10)+8]
 17667  01550C  0EFE               	movlw	-2
 17668  01550E  70E3               	btg	plusw1,0,c
 17669  015510                     l6749:
 17670                           
 17671                           ;stkvar	_quotient @ sp[(-10)+0]
 17672  015510  0E07               	movlw	7
 17673  015512  6E25               	movwf	btemp^0,c
 17674  015514  0EF6               	movlw	-10
 17675  015516                     u5111:
 17676  015516  6AE3               	clrf	plusw1,c
 17677  015518  2AE8               	incf	wreg,f,c
 17678  01551A  0625               	decf	btemp^0,f,c
 17679  01551C  E2FC               	bc	u5111
 17680                           
 17681                           ;stkvar	_divisor @ sp[(-10)+-16]
 17682  01551E  0EE6               	movlw	-26
 17683  015520  50E3               	movf	plusw1,w,c
 17684  015522  E116               	bnz	u5120
 17685  015524  0EE7               	movlw	-25
 17686  015526  50E3               	movf	plusw1,w,c
 17687  015528  E113               	bnz	u5120
 17688  01552A  0EE8               	movlw	-24
 17689  01552C  50E3               	movf	plusw1,w,c
 17690  01552E  E110               	bnz	u5120
 17691  015530  0EE9               	movlw	-23
 17692  015532  50E3               	movf	plusw1,w,c
 17693  015534  E10D               	bnz	u5120
 17694  015536  0EEA               	movlw	-22
 17695  015538  50E3               	movf	plusw1,w,c
 17696  01553A  E10A               	bnz	u5120
 17697  01553C  0EEB               	movlw	-21
 17698  01553E  50E3               	movf	plusw1,w,c
 17699  015540  E107               	bnz	u5120
 17700  015542  0EEC               	movlw	-20
 17701  015544  50E3               	movf	plusw1,w,c
 17702  015546  E104               	bnz	u5120
 17703  015548  0EED               	movlw	-19
 17704  01554A  50E3               	movf	plusw1,w,c
 17705  01554C  B4D8               	btfsc	status,2,c
 17706  01554E  D088               	goto	u5150
 17707  015550                     u5120:
 17708                           
 17709                           ;stkvar	_counter @ sp[(-10)+9]
 17710  015550  0EFF               	movlw	-1
 17711  015552  6AE3               	clrf	plusw1,c
 17712  015554  D012               	goto	L19
 17713  015556                     l6755:
 17714                           
 17715                           ;stkvar	_divisor @ sp[(-10)+-16]
 17716  015556  90D8               	bcf	status,0,c
 17717  015558  0EE6               	movlw	-26
 17718  01555A  36E3               	rlcf	plusw1,f,c
 17719  01555C  0EE7               	movlw	-25
 17720  01555E  36E3               	rlcf	plusw1,f,c
 17721  015560  0EE8               	movlw	-24
 17722  015562  36E3               	rlcf	plusw1,f,c
 17723  015564  0EE9               	movlw	-23
 17724  015566  36E3               	rlcf	plusw1,f,c
 17725  015568  0EEA               	movlw	-22
 17726  01556A  36E3               	rlcf	plusw1,f,c
 17727  01556C  0EEB               	movlw	-21
 17728  01556E  36E3               	rlcf	plusw1,f,c
 17729  015570  0EEC               	movlw	-20
 17730  015572  36E3               	rlcf	plusw1,f,c
 17731  015574  0EED               	movlw	-19
 17732  015576  36E3               	rlcf	plusw1,f,c
 17733                           
 17734                           ;stkvar	_counter @ sp[(-10)+9]
 17735  015578  0EFF               	movlw	-1
 17736  01557A                     L19:
 17737  01557A  2AE3               	incf	plusw1,f,c
 17738                           
 17739                           ;stkvar	_divisor @ sp[(-10)+-16]
 17740  01557C  0EED               	movlw	-19
 17741  01557E  AEE3               	btfss	plusw1,7,c
 17742  015580  D7EA               	goto	l6755
 17743  015582                     u5130:
 17744                           
 17745                           ;stkvar	_quotient @ sp[(-10)+0]
 17746  015582  90D8               	bcf	status,0,c
 17747  015584  0EF6               	movlw	-10
 17748  015586  36E3               	rlcf	plusw1,f,c
 17749  015588  0EF7               	movlw	-9
 17750  01558A  36E3               	rlcf	plusw1,f,c
 17751  01558C  0EF8               	movlw	-8
 17752  01558E  36E3               	rlcf	plusw1,f,c
 17753  015590  0EF9               	movlw	-7
 17754  015592  36E3               	rlcf	plusw1,f,c
 17755  015594  0EFA               	movlw	-6
 17756  015596  36E3               	rlcf	plusw1,f,c
 17757  015598  0EFB               	movlw	-5
 17758  01559A  36E3               	rlcf	plusw1,f,c
 17759  01559C  0EFC               	movlw	-4
 17760  01559E  36E3               	rlcf	plusw1,f,c
 17761  0155A0  0EFD               	movlw	-3
 17762  0155A2  36E3               	rlcf	plusw1,f,c
 17763                           
 17764                           ;stkvar	_divisor @ sp[(-10)+-16]
 17765                           ;stkvar	_dividend @ sp[(-10)+-8]
 17766  0155A4  50E1               	movf	fsr1l,w,c
 17767  0155A6  0FEE               	addlw	-18
 17768  0155A8  6ED9               	movwf	fsr2l,c
 17769  0155AA  50E2               	movf	fsr1h,w,c
 17770  0155AC  6EDA               	movwf	fsr2h,c
 17771  0155AE  0EFF               	movlw	255
 17772  0155B0  22DA               	addwfc	fsr2h,f,c
 17773  0155B2  0EE6               	movlw	-26
 17774  0155B4  50E3               	movf	plusw1,w,c
 17775  0155B6  5CDE               	subwf	postinc2,w,c
 17776  0155B8  0EE7               	movlw	-25
 17777  0155BA  50E3               	movf	plusw1,w,c
 17778  0155BC  58DE               	subwfb	postinc2,w,c
 17779  0155BE  0EE8               	movlw	-24
 17780  0155C0  50E3               	movf	plusw1,w,c
 17781  0155C2  58DE               	subwfb	postinc2,w,c
 17782  0155C4  0EE9               	movlw	-23
 17783  0155C6  50E3               	movf	plusw1,w,c
 17784  0155C8  58DE               	subwfb	postinc2,w,c
 17785  0155CA  0EEA               	movlw	-22
 17786  0155CC  50E3               	movf	plusw1,w,c
 17787  0155CE  58DE               	subwfb	postinc2,w,c
 17788  0155D0  0EEB               	movlw	-21
 17789  0155D2  50E3               	movf	plusw1,w,c
 17790  0155D4  58DE               	subwfb	postinc2,w,c
 17791  0155D6  0EEC               	movlw	-20
 17792  0155D8  50E3               	movf	plusw1,w,c
 17793  0155DA  58DE               	subwfb	postinc2,w,c
 17794  0155DC  0EED               	movlw	-19
 17795  0155DE  50E3               	movf	plusw1,w,c
 17796  0155E0  58DE               	subwfb	postinc2,w,c
 17797  0155E2  A0D8               	btfss	status,0,c
 17798  0155E4  D021               	goto	l6767
 17799                           
 17800                           ;stkvar	_divisor @ sp[(-10)+-16]
 17801                           ;stkvar	_dividend @ sp[(-10)+-8]
 17802  0155E6  50E1               	movf	fsr1l,w,c
 17803  0155E8  0FEE               	addlw	-18
 17804  0155EA  6ED9               	movwf	fsr2l,c
 17805  0155EC  50E2               	movf	fsr1h,w,c
 17806  0155EE  6EDA               	movwf	fsr2h,c
 17807  0155F0  0EFF               	movlw	255
 17808  0155F2  22DA               	addwfc	fsr2h,f,c
 17809  0155F4  0EE6               	movlw	-26
 17810  0155F6  50E3               	movf	plusw1,w,c
 17811  0155F8  5EDE               	subwf	postinc2,f,c
 17812  0155FA  0EE7               	movlw	-25
 17813  0155FC  50E3               	movf	plusw1,w,c
 17814  0155FE  5ADE               	subwfb	postinc2,f,c
 17815  015600  0EE8               	movlw	-24
 17816  015602  50E3               	movf	plusw1,w,c
 17817  015604  5ADE               	subwfb	postinc2,f,c
 17818  015606  0EE9               	movlw	-23
 17819  015608  50E3               	movf	plusw1,w,c
 17820  01560A  5ADE               	subwfb	postinc2,f,c
 17821  01560C  0EEA               	movlw	-22
 17822  01560E  50E3               	movf	plusw1,w,c
 17823  015610  5ADE               	subwfb	postinc2,f,c
 17824  015612  0EEB               	movlw	-21
 17825  015614  50E3               	movf	plusw1,w,c
 17826  015616  5ADE               	subwfb	postinc2,f,c
 17827  015618  0EEC               	movlw	-20
 17828  01561A  50E3               	movf	plusw1,w,c
 17829  01561C  5ADE               	subwfb	postinc2,f,c
 17830  01561E  0EED               	movlw	-19
 17831  015620  50E3               	movf	plusw1,w,c
 17832  015622  5ADE               	subwfb	postinc2,f,c
 17833                           
 17834                           ;stkvar	_quotient @ sp[(-10)+0]
 17835  015624  0EF6               	movlw	-10
 17836  015626  80E3               	bsf	plusw1,0,c
 17837  015628                     l6767:
 17838                           
 17839                           ;stkvar	_divisor @ sp[(-10)+-16]
 17840  015628  90D8               	bcf	status,0,c
 17841  01562A  0EED               	movlw	-19
 17842  01562C  32E3               	rrcf	plusw1,f,c
 17843  01562E  0EEC               	movlw	-20
 17844  015630  32E3               	rrcf	plusw1,f,c
 17845  015632  0EEB               	movlw	-21
 17846  015634  32E3               	rrcf	plusw1,f,c
 17847  015636  0EEA               	movlw	-22
 17848  015638  32E3               	rrcf	plusw1,f,c
 17849  01563A  0EE9               	movlw	-23
 17850  01563C  32E3               	rrcf	plusw1,f,c
 17851  01563E  0EE8               	movlw	-24
 17852  015640  32E3               	rrcf	plusw1,f,c
 17853  015642  0EE7               	movlw	-25
 17854  015644  32E3               	rrcf	plusw1,f,c
 17855  015646  0EE6               	movlw	-26
 17856  015648  32E3               	rrcf	plusw1,f,c
 17857                           
 17858                           ;stkvar	_counter @ sp[(-10)+9]
 17859  01564A  0EFF               	movlw	-1
 17860  01564C  50E3               	movf	plusw1,w,c
 17861  01564E  6E25               	movwf	btemp^0,c
 17862  015650  0E01               	movlw	1
 17863  015652  5E25               	subwf	btemp^0,f,c
 17864  015654  0EFF               	movlw	-1
 17865  015656  0060  F097  FFE3   	movff	btemp,plusw1
 17866  01565C  A4D8               	btfss	status,2,c
 17867  01565E  D791               	goto	u5130
 17868  015660                     u5150:
 17869                           
 17870                           ;stkvar	_sign @ sp[(-10)+8]
 17871  015660  0EFE               	movlw	-2
 17872  015662  50E3               	movf	plusw1,w,c
 17873  015664  B4D8               	btfsc	status,2,c
 17874  015666  D025               	goto	u5170
 17875                           
 17876                           ;stkvar	_quotient @ sp[(-10)+0]
 17877                           ;stkvar	_quotient @ sp[(-10)+0]
 17878  015668  0EF6               	movlw	-10
 17879  01566A  6CE3               	negf	plusw1,c
 17880  01566C  0EF7               	movlw	-9
 17881  01566E  1EE3               	comf	plusw1,f,c
 17882  015670  0EF8               	movlw	-8
 17883  015672  1EE3               	comf	plusw1,f,c
 17884  015674  0EF9               	movlw	-7
 17885  015676  1EE3               	comf	plusw1,f,c
 17886  015678  0EFA               	movlw	-6
 17887  01567A  1EE3               	comf	plusw1,f,c
 17888  01567C  0EFB               	movlw	-5
 17889  01567E  1EE3               	comf	plusw1,f,c
 17890  015680  0EFC               	movlw	-4
 17891  015682  1EE3               	comf	plusw1,f,c
 17892  015684  0EFD               	movlw	-3
 17893  015686  1EE3               	comf	plusw1,f,c
 17894  015688  E314               	bnc	u5170
 17895  01568A  0EF7               	movlw	-9
 17896  01568C  2AE3               	incf	plusw1,f,c
 17897  01568E  E311               	bnc	u5170
 17898  015690  0EF8               	movlw	-8
 17899  015692  2AE3               	incf	plusw1,f,c
 17900  015694  E30E               	bnc	u5170
 17901  015696  0EF9               	movlw	-7
 17902  015698  2AE3               	incf	plusw1,f,c
 17903  01569A  E30B               	bnc	u5170
 17904  01569C  0EFA               	movlw	-6
 17905  01569E  2AE3               	incf	plusw1,f,c
 17906  0156A0  E308               	bnc	u5170
 17907  0156A2  0EFB               	movlw	-5
 17908  0156A4  2AE3               	incf	plusw1,f,c
 17909  0156A6  E305               	bnc	u5170
 17910  0156A8  0EFC               	movlw	-4
 17911  0156AA  2AE3               	incf	plusw1,f,c
 17912  0156AC  E302               	bnc	u5170
 17913  0156AE  0EFD               	movlw	-3
 17914  0156B0  2AE3               	incf	plusw1,f,c
 17915  0156B2                     u5170:
 17916                           
 17917                           ;stkvar	_quotient @ sp[(-10)+0]
 17918  0156B2  0EF6               	movlw	246
 17919  0156B4  24E1               	addwf	fsr1l,w,c
 17920  0156B6  6ED9               	movwf	fsr2l,c
 17921  0156B8  0EFF               	movlw	255
 17922  0156BA  20E2               	addwfc	fsr1h,w,c
 17923  0156BC  6EDA               	movwf	fsr2h,c
 17924                           
 17925                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17926  0156BE  0E08               	movlw	8
 17927  0156C0  6E25               	movwf	btemp^0,c
 17928  0156C2  0EEE               	movlw	-18
 17929  0156C4                     us518999:
 17930  0156C4  006F FF7B FFE3     	movff	postinc2,plusw1
 17931  0156CA  28E8               	incf	wreg,w,c
 17932  0156CC  2E25               	decfsz	btemp^0,f,c
 17933  0156CE  D7FA               	bra	us518999
 17934                           
 17935                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17936  0156D0  0EF6               	movlw	246
 17937  0156D2  26E1               	addwf	fsr1l,f,c
 17938  0156D4  0EFF               	movlw	255
 17939  0156D6  22E2               	addwfc	fsr1h,f,c
 17940  0156D8  0012               	return		;funcret
 17941  0156DA                     __end_of___aodiv:
 17942                           	opt callstack 0
 17943                           
 17944 ;; *************** function _ctoa *****************
 17945 ;; Defined at:
 17946 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17947 ;; Parameters:    Size  Location     Type
 17948 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17949 ;;		 -> f(6), NULL(0), 
 17950 ;;  c               1  [STACK] unsigned char 
 17951 ;; Auto vars:     Size  Location     Type
 17952 ;;  w               2  [STACK] int 
 17953 ;;  l               2    0        int 
 17954 ;; Return value:  Size  Location     Type
 17955 ;;                  2  [STACK] int 
 17956 ;; Registers used:
 17957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17958 ;; Tracked objects:
 17959 ;;		On entry : 0/0
 17960 ;;		On exit  : 0/0
 17961 ;;		Unchanged: 0/0
 17962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17967 ;;Total ram usage:        0 bytes
 17968 ;; Hardware stack levels used:    1
 17969 ;; Hardware stack levels required when called:   15
 17970 ;; This function calls:
 17971 ;;		_pad
 17972 ;; This function is called by:
 17973 ;;		_vfpfcnvrt
 17974 ;; This function uses a reentrant model
 17975 ;;
 17976                           
 17977                           	psect	text65
 17978  017D02                     __ptext65:
 17979                           	opt callstack 0
 17980  017D02                     _ctoa:
 17981                           	opt callstack 0
 17982                           
 17983                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17984  017D02  52E6               	movf	postinc1,f,c
 17985  017D04  52E6               	movf	postinc1,f,c
 17986                           
 17987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17988                           
 17989                           ;incstack = 0
 17990  017D06  500A               	movf	_width^0,w,c
 17991  017D08  100B               	iorwf	(_width+1)^0,w,c
 17992  017D0A  A4D8               	btfss	status,2,c
 17993  017D0C  D009               	goto	l10057
 17994                           
 17995                           ;stkvar	_w @ sp[(-2)+0]
 17996  017D0E  0EFE               	movlw	-2
 17997  017D10  0060  F02B  FFE3   	movff	_width,plusw1
 17998  017D16  0EFF               	movlw	-1
 17999  017D18  0060  F02F  FFE3   	movff	_width+1,plusw1
 18000  017D1E  D016               	goto	l10059
 18001  017D20                     l10057:
 18002  017D20  0EFF               	movlw	255
 18003  017D22  6E2F               	movwf	(btemp+10)^0,c
 18004  017D24  0EFF               	movlw	255
 18005  017D26  6E30               	movwf	(btemp+11)^0,c
 18006  017D28  0060  F028  F02D   	movff	_width,btemp+8
 18007  017D2E  0060  F02C  F02E   	movff	_width+1,btemp+9
 18008  017D34  502F               	movf	(btemp+10)^0,w,c
 18009  017D36  262D               	addwf	(btemp+8)^0,f,c
 18010  017D38  5030               	movf	(btemp+11)^0,w,c
 18011  017D3A  222E               	addwfc	(btemp+9)^0,f,c
 18012                           
 18013                           ;stkvar	_w @ sp[(-2)+0]
 18014  017D3C  0EFE               	movlw	-2
 18015  017D3E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 18016  017D44  0EFF               	movlw	-1
 18017  017D46  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 18018  017D4C                     l10059:
 18019                           
 18020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18021                           ;stkvar	_c @ sp[(-2)+-3]
 18022  017D4C  0EFB               	movlw	-5
 18023  017D4E  006F FF8C  F1A5    	movff	plusw1,_dbuf
 18024                           
 18025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18026  017D54  0101               	movlb	1	; () banked
 18027  017D56  6BA6               	clrf	(_dbuf+1)& (0+255),b
 18028                           
 18029                           ; BSR set to: 1
 18030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18031                           ;stkvar	_w @ sp[(-2)+0]
 18032  017D58  0EFE               	movlw	-2
 18033  017D5A  006F FF8F FFE6     	movff	plusw1,postinc1
 18034  017D60  006F FF8F FFE6     	movff	plusw1,postinc1
 18035  017D66  0EA5               	movlw	low _dbuf
 18036  017D68  6EE6               	movwf	postinc1,c
 18037  017D6A  0E01               	movlw	high _dbuf
 18038  017D6C  6EE6               	movwf	postinc1,c
 18039                           
 18040                           ;stkvar	_fp @ sp[(-6)+-2]
 18041  017D6E  0EF8               	movlw	-8
 18042  017D70  006F FF8F FFE6     	movff	plusw1,postinc1
 18043  017D76  006F FF8F FFE6     	movff	plusw1,postinc1
 18044  017D7C  ECCB  F0B6         	call	_pad	;wreg free
 18045                           
 18046                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18047  017D80  0EFB               	movlw	251
 18048  017D82  26E1               	addwf	fsr1l,f,c
 18049  017D84  0EFF               	movlw	255
 18050  017D86  22E2               	addwfc	fsr1h,f,c
 18051  017D88  0012               	return		;funcret
 18052  017D8A                     __end_of_ctoa:
 18053                           	opt callstack 0
 18054                           
 18055 ;; *************** function _pad *****************
 18056 ;; Defined at:
 18057 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18058 ;; Parameters:    Size  Location     Type
 18059 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18060 ;;		 -> f(6), NULL(0), 
 18061 ;;  buf             2  [STACK] PTR unsigned char 
 18062 ;;		 -> dbuf(80), 
 18063 ;;  p               2  [STACK] int 
 18064 ;; Auto vars:     Size  Location     Type
 18065 ;;  w               2  [STACK] int 
 18066 ;;  i               2  [STACK] int 
 18067 ;; Return value:  Size  Location     Type
 18068 ;;                  2  [STACK] int 
 18069 ;; Registers used:
 18070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18071 ;; Tracked objects:
 18072 ;;		On entry : 0/1
 18073 ;;		On exit  : 0/0
 18074 ;;		Unchanged: 0/0
 18075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18080 ;;Total ram usage:        0 bytes
 18081 ;; Hardware stack levels used:    1
 18082 ;; Hardware stack levels required when called:   14
 18083 ;; This function calls:
 18084 ;;		_fputc
 18085 ;;		_fputs
 18086 ;;		_strlen
 18087 ;; This function is called by:
 18088 ;;		_ctoa
 18089 ;;		_dtoa
 18090 ;;		_efgtoa
 18091 ;;		_xtoa
 18092 ;; This function uses a reentrant model
 18093 ;;
 18094                           
 18095                           	psect	text66
 18096  016D96                     __ptext66:
 18097                           	opt callstack 0
 18098  016D96                     _pad:
 18099                           	opt callstack 0
 18100                           
 18101                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18102  016D96  52E6               	movf	postinc1,f,c
 18103  016D98  52E6               	movf	postinc1,f,c
 18104  016D9A  52E6               	movf	postinc1,f,c
 18105  016D9C  52E6               	movf	postinc1,f,c
 18106                           
 18107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18108                           
 18109                           ;incstack = 0
 18110  016D9E  A00E               	btfss	_flags^0,0,c
 18111  016DA0  D010               	goto	l10031
 18112                           
 18113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18114                           ;stkvar	_fp @ sp[(-4)+-2]
 18115  016DA2  0EFA               	movlw	-6
 18116  016DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18117  016DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 18118                           
 18119                           ;stkvar	_buf @ sp[(-6)+-4]
 18120  016DB0  0EF6               	movlw	-10
 18121  016DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 18122  016DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 18123  016DBE  EC14  F0BD         	call	_fputs	;wreg free
 18124  016DC2                     l10031:
 18125                           
 18126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18127                           ;stkvar	_p @ sp[(-4)+-6]
 18128  016DC2  0EF7               	movlw	-9
 18129  016DC4  BEE3               	btfsc	plusw1,7,c
 18130  016DC6  D011               	goto	l10035
 18131                           
 18132                           ;stkvar	_p @ sp[(-4)+-6]
 18133                           ;stkvar	_w @ sp[(-4)+0]
 18134  016DC8  0EF6               	movlw	-10
 18135  016DCA  006F FF8C  F025    	movff	plusw1,btemp
 18136  016DD0  0EFC               	movlw	-4
 18137  016DD2  0060  F097  FFE3   	movff	btemp,plusw1
 18138  016DD8  0EF7               	movlw	-9
 18139  016DDA  006F FF8C  F025    	movff	plusw1,btemp
 18140  016DE0  0EFD               	movlw	-3
 18141  016DE2  0060  F097  FFE3   	movff	btemp,plusw1
 18142  016DE8  D004               	goto	l1982
 18143  016DEA                     l10035:
 18144                           
 18145                           ;stkvar	_w @ sp[(-4)+0]
 18146  016DEA  0EFC               	movlw	-4
 18147  016DEC  6AE3               	clrf	plusw1,c
 18148  016DEE  0EFD               	movlw	-3
 18149  016DF0  6AE3               	clrf	plusw1,c
 18150  016DF2                     l1982:
 18151                           
 18152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18153                           ;stkvar	_i @ sp[(-4)+2]
 18154  016DF2  0EFE               	movlw	-2
 18155  016DF4  6AE3               	clrf	plusw1,c
 18156  016DF6  0EFF               	movlw	-1
 18157  016DF8  6AE3               	clrf	plusw1,c
 18158                           
 18159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18160  016DFA  D01E               	goto	l10041
 18161  016DFC                     l10037:
 18162                           
 18163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18164                           ;stkvar	_fp @ sp[(-4)+-2]
 18165  016DFC  0EFA               	movlw	-6
 18166  016DFE  006F FF8F FFE6     	movff	plusw1,postinc1
 18167  016E04  006F FF8F FFE6     	movff	plusw1,postinc1
 18168  016E0A  0E20               	movlw	32
 18169  016E0C  6EE6               	movwf	postinc1,c
 18170  016E0E  0E00               	movlw	0
 18171  016E10  6EE6               	movwf	postinc1,c
 18172  016E12  ECAD  F0B5         	call	_fputc	;wreg free
 18173                           
 18174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18175                           ;stkvar	_i @ sp[(-4)+2]
 18176  016E16  0EFE               	movlw	-2
 18177  016E18  50E3               	movf	plusw1,w,c
 18178  016E1A  0F01               	addlw	1
 18179  016E1C  6E25               	movwf	btemp^0,c
 18180  016E1E  0EFE               	movlw	-2
 18181  016E20  0060  F097  FFE3   	movff	btemp,plusw1
 18182  016E26  6A25               	clrf	btemp^0,c
 18183  016E28  0EFF               	movlw	-1
 18184  016E2A  50E3               	movf	plusw1,w,c
 18185  016E2C  2025               	addwfc	btemp^0,w,c
 18186  016E2E  6E25               	movwf	btemp^0,c
 18187  016E30  0EFF               	movlw	-1
 18188  016E32  0060  F097  FFE3   	movff	btemp,plusw1
 18189  016E38                     l10041:
 18190                           
 18191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18192                           ;stkvar	_w @ sp[(-4)+0]
 18193                           ;stkvar	_i @ sp[(-4)+2]
 18194  016E38  50E1               	movf	fsr1l,w,c
 18195  016E3A  0FFE               	addlw	-2
 18196  016E3C  6ED9               	movwf	fsr2l,c
 18197  016E3E  50E2               	movf	fsr1h,w,c
 18198  016E40  6EDA               	movwf	fsr2h,c
 18199  016E42  0EFF               	movlw	255
 18200  016E44  22DA               	addwfc	fsr2h,f,c
 18201  016E46  0EFC               	movlw	-4
 18202  016E48  50E3               	movf	plusw1,w,c
 18203  016E4A  5CDE               	subwf	postinc2,w,c
 18204  016E4C  50DE               	movf	postinc2,w,c
 18205  016E4E  0A80               	xorlw	128
 18206  016E50  6E25               	movwf	btemp^0,c
 18207  016E52  0EFD               	movlw	-3
 18208  016E54  50E3               	movf	plusw1,w,c
 18209  016E56  0A80               	xorlw	128
 18210  016E58  5825               	subwfb	btemp^0,w,c
 18211  016E5A  A0D8               	btfss	status,0,c
 18212  016E5C  D7CF               	goto	l10037
 18213                           
 18214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18215  016E5E  B00E               	btfsc	_flags^0,0,c
 18216  016E60  D010               	goto	l10045
 18217                           
 18218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18219                           ;stkvar	_fp @ sp[(-4)+-2]
 18220  016E62  0EFA               	movlw	-6
 18221  016E64  006F FF8F FFE6     	movff	plusw1,postinc1
 18222  016E6A  006F FF8F FFE6     	movff	plusw1,postinc1
 18223                           
 18224                           ;stkvar	_buf @ sp[(-6)+-4]
 18225  016E70  0EF6               	movlw	-10
 18226  016E72  006F FF8F FFE6     	movff	plusw1,postinc1
 18227  016E78  006F FF8F FFE6     	movff	plusw1,postinc1
 18228  016E7E  EC14  F0BD         	call	_fputs	;wreg free
 18229  016E82                     l10045:
 18230                           
 18231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18232                           ;stkvar	_w @ sp[(-4)+0]
 18233                           ;stkvar	_buf @ sp[(-4)+-4]
 18234  016E82  0EF8               	movlw	-8
 18235  016E84  006F FF8F FFE6     	movff	plusw1,postinc1
 18236  016E8A  006F FF8F FFE6     	movff	plusw1,postinc1
 18237  016E90  ECC3  F0BC         	call	_strlen	;wreg free
 18238  016E94  0EFC               	movlw	-4
 18239  016E96  50E3               	movf	plusw1,w,c
 18240  016E98  2625               	addwf	btemp^0,f,c
 18241  016E9A  0EFD               	movlw	-3
 18242  016E9C  50E3               	movf	plusw1,w,c
 18243  016E9E  2226               	addwfc	(btemp+1)^0,f,c
 18244                           
 18245                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18246  016EA0  0EF6               	movlw	246
 18247  016EA2  26E1               	addwf	fsr1l,f,c
 18248  016EA4  0EFF               	movlw	255
 18249  016EA6  22E2               	addwfc	fsr1h,f,c
 18250  016EA8  0012               	return		;funcret
 18251  016EAA                     __end_of_pad:
 18252                           	opt callstack 0
 18253                           
 18254 ;; *************** function _strlen *****************
 18255 ;; Defined at:
 18256 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18257 ;; Parameters:    Size  Location     Type
 18258 ;;  s               2  [STACK] PTR const unsigned char 
 18259 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18260 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18261 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18262 ;; Auto vars:     Size  Location     Type
 18263 ;;  a               2  [STACK] PTR const unsigned char 
 18264 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18265 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18266 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18267 ;; Return value:  Size  Location     Type
 18268 ;;                  2  [STACK] unsigned int 
 18269 ;; Registers used:
 18270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18271 ;; Tracked objects:
 18272 ;;		On entry : 0/0
 18273 ;;		On exit  : 0/0
 18274 ;;		Unchanged: 0/0
 18275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18280 ;;Total ram usage:        0 bytes
 18281 ;; Hardware stack levels used:    1
 18282 ;; Hardware stack levels required when called:   10
 18283 ;; This function calls:
 18284 ;;		Nothing
 18285 ;; This function is called by:
 18286 ;;		_eaDogM_WriteString
 18287 ;;		_pad
 18288 ;;		_stoa
 18289 ;; This function uses a reentrant model
 18290 ;;
 18291                           
 18292                           	psect	text67
 18293  017986                     __ptext67:
 18294                           	opt callstack 0
 18295  017986                     _strlen:
 18296                           	opt callstack 0
 18297                           
 18298                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18299  017986  52E6               	movf	postinc1,f,c
 18300  017988  52E6               	movf	postinc1,f,c
 18301                           
 18302                           ;stkvar	_s @ sp[(-2)+-2]
 18303                           
 18304                           ;incstack = 0
 18305  01798A  0EFC               	movlw	-4
 18306  01798C  006F FF8C  F02F    	movff	plusw1,btemp+10
 18307  017992  0EFD               	movlw	-3
 18308  017994  006F FF8C  F030    	movff	plusw1,btemp+11
 18309                           
 18310                           ;stkvar	_a @ sp[(-2)+0]
 18311  01799A  0EFF               	movlw	-1
 18312  01799C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18313  0179A2  0EFE               	movlw	-2
 18314  0179A4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 18315  0179AA  D011               	goto	l6581
 18316  0179AC                     l6579:
 18317                           
 18318                           ;stkvar	_s @ sp[(-2)+-2]
 18319  0179AC  0EFC               	movlw	-4
 18320  0179AE  50E3               	movf	plusw1,w,c
 18321  0179B0  0F01               	addlw	1
 18322  0179B2  6E25               	movwf	btemp^0,c
 18323  0179B4  0EFC               	movlw	-4
 18324  0179B6  0060  F097  FFE3   	movff	btemp,plusw1
 18325  0179BC  6A25               	clrf	btemp^0,c
 18326  0179BE  0EFD               	movlw	-3
 18327  0179C0  50E3               	movf	plusw1,w,c
 18328  0179C2  2025               	addwfc	btemp^0,w,c
 18329  0179C4  6E25               	movwf	btemp^0,c
 18330  0179C6  0EFD               	movlw	-3
 18331  0179C8  0060  F097  FFE3   	movff	btemp,plusw1
 18332  0179CE                     l6581:
 18333                           
 18334                           ;stkvar	_s @ sp[(-2)+-2]
 18335  0179CE  0EFC               	movlw	-4
 18336  0179D0  006F FF8F FFF6     	movff	plusw1,tblptrl
 18337  0179D6  0EFD               	movlw	-3
 18338  0179D8  006F FF8F FFF7     	movff	plusw1,tblptrh
 18339  0179DE  0E00               	movlw	low (__mediumconst shr (0+16))
 18340  0179E0  6EF8               	movwf	tblptru,c
 18341  0179E2  0E1F               	movlw	(high __ramtop+-1)
 18342  0179E4  64F7               	cpfsgt	tblptrh,c
 18343  0179E6  D003               	bra	u4667
 18344  0179E8  0008               	tblrd		*
 18345  0179EA  50F5               	movf	tablat,w,c
 18346  0179EC  D007               	bra	u4660
 18347  0179EE                     u4667:
 18348  0179EE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18349  0179F4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18350  0179FA  50EF               	movf	indf0,w,c
 18351  0179FC                     u4660:
 18352  0179FC  0900               	iorlw	0
 18353  0179FE  A4D8               	btfss	status,2,c
 18354  017A00  D7D5               	goto	l6579
 18355                           
 18356                           ;stkvar	_a @ sp[(-2)+0]
 18357                           ;stkvar	_s @ sp[(-2)+-2]
 18358  017A02  0EFC               	movlw	-4
 18359  017A04  006F FF8C  F025    	movff	plusw1,btemp
 18360  017A0A  0EFD               	movlw	-3
 18361  017A0C  006F FF8C  F026    	movff	plusw1,btemp+1
 18362  017A12  0EFE               	movlw	-2
 18363  017A14  50E3               	movf	plusw1,w,c
 18364  017A16  5E25               	subwf	btemp^0,f,c
 18365  017A18  0EFF               	movlw	-1
 18366  017A1A  50E3               	movf	plusw1,w,c
 18367  017A1C  5A26               	subwfb	(btemp+1)^0,f,c
 18368                           
 18369                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18370  017A1E  52E5               	movf	postdec1,f,c
 18371  017A20  52E5               	movf	postdec1,f,c
 18372  017A22  52E5               	movf	postdec1,f,c
 18373  017A24  52E5               	movf	postdec1,f,c
 18374  017A26  0012               	return		;funcret
 18375  017A28                     __end_of_strlen:
 18376                           	opt callstack 0
 18377                           
 18378 ;; *************** function _fputs *****************
 18379 ;; Defined at:
 18380 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18381 ;; Parameters:    Size  Location     Type
 18382 ;;  s               2  [STACK] PTR const unsigned char 
 18383 ;;		 -> dbuf(80), 
 18384 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18385 ;;		 -> f(6), NULL(0), 
 18386 ;; Auto vars:     Size  Location     Type
 18387 ;;  i               2  [STACK] int 
 18388 ;;  c               1  [STACK] unsigned char 
 18389 ;; Return value:  Size  Location     Type
 18390 ;;                  2  [STACK] int 
 18391 ;; Registers used:
 18392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18393 ;; Tracked objects:
 18394 ;;		On entry : 0/1
 18395 ;;		On exit  : 0/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18402 ;;Total ram usage:        0 bytes
 18403 ;; Hardware stack levels used:    1
 18404 ;; Hardware stack levels required when called:   13
 18405 ;; This function calls:
 18406 ;;		_fputc
 18407 ;; This function is called by:
 18408 ;;		_pad
 18409 ;; This function uses a reentrant model
 18410 ;;
 18411                           
 18412                           	psect	text68
 18413  017A28                     __ptext68:
 18414                           	opt callstack 0
 18415  017A28                     _fputs:
 18416                           	opt callstack 0
 18417                           
 18418                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18419  017A28  52E6               	movf	postinc1,f,c
 18420  017A2A  52E6               	movf	postinc1,f,c
 18421  017A2C  52E6               	movf	postinc1,f,c
 18422                           
 18423                           ;stkvar	_i @ sp[(-3)+0]
 18424                           
 18425                           ;incstack = 0
 18426  017A2E  0EFD               	movlw	-3
 18427  017A30  6AE3               	clrf	plusw1,c
 18428  017A32  0EFE               	movlw	-2
 18429  017A34  6AE3               	clrf	plusw1,c
 18430  017A36  D01F               	goto	l10025
 18431  017A38                     l10021:
 18432                           
 18433                           ;stkvar	_fp @ sp[(-3)+-4]
 18434  017A38  0EF9               	movlw	-7
 18435  017A3A  006F FF8F FFE6     	movff	plusw1,postinc1
 18436  017A40  006F FF8F FFE6     	movff	plusw1,postinc1
 18437                           
 18438                           ;stkvar	_c @ sp[(-5)+2]
 18439  017A46  0EFD               	movlw	-3
 18440  017A48  50E3               	movf	plusw1,w,c
 18441  017A4A  6EE6               	movwf	postinc1,c
 18442  017A4C  0E00               	movlw	0
 18443  017A4E  6EE6               	movwf	postinc1,c
 18444  017A50  ECAD  F0B5         	call	_fputc	;wreg free
 18445                           
 18446                           ;stkvar	_i @ sp[(-3)+0]
 18447  017A54  0EFD               	movlw	-3
 18448  017A56  50E3               	movf	plusw1,w,c
 18449  017A58  0F01               	addlw	1
 18450  017A5A  6E25               	movwf	btemp^0,c
 18451  017A5C  0EFD               	movlw	-3
 18452  017A5E  0060  F097  FFE3   	movff	btemp,plusw1
 18453  017A64  6A25               	clrf	btemp^0,c
 18454  017A66  0EFE               	movlw	-2
 18455  017A68  50E3               	movf	plusw1,w,c
 18456  017A6A  2025               	addwfc	btemp^0,w,c
 18457  017A6C  6E25               	movwf	btemp^0,c
 18458  017A6E  0EFE               	movlw	-2
 18459  017A70  0060  F097  FFE3   	movff	btemp,plusw1
 18460  017A76                     l10025:
 18461                           
 18462                           ;stkvar	_i @ sp[(-3)+0]
 18463  017A76  0EFD               	movlw	-3
 18464  017A78  006F FF8C  F02F    	movff	plusw1,btemp+10
 18465  017A7E  0EFE               	movlw	-2
 18466  017A80  006F FF8C  F030    	movff	plusw1,btemp+11
 18467                           
 18468                           ;stkvar	_s @ sp[(-3)+-2]
 18469  017A86  0EFB               	movlw	-5
 18470  017A88  006F FF8C  F02D    	movff	plusw1,btemp+8
 18471  017A8E  0EFC               	movlw	-4
 18472  017A90  006F FF8C  F02E    	movff	plusw1,btemp+9
 18473  017A96  502F               	movf	(btemp+10)^0,w,c
 18474  017A98  242D               	addwf	(btemp+8)^0,w,c
 18475  017A9A  6ED9               	movwf	fsr2l,c
 18476  017A9C  5030               	movf	(btemp+11)^0,w,c
 18477  017A9E  202E               	addwfc	(btemp+9)^0,w,c
 18478  017AA0  6EDA               	movwf	fsr2h,c
 18479  017AA2  50DF               	movf	indf2,w,c
 18480  017AA4  6E30               	movwf	(btemp+11)^0,c
 18481                           
 18482                           ;stkvar	_c @ sp[(-3)+2]
 18483  017AA6  0EFF               	movlw	-1
 18484  017AA8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18485  017AAE  0EFF               	movlw	-1
 18486  017AB0  50E3               	movf	plusw1,w,c
 18487  017AB2  A4D8               	btfss	status,2,c
 18488  017AB4  D7C1               	goto	l10021
 18489                           
 18490                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18491  017AB6  0EF9               	movlw	249
 18492  017AB8  26E1               	addwf	fsr1l,f,c
 18493  017ABA  0EFF               	movlw	255
 18494  017ABC  22E2               	addwfc	fsr1h,f,c
 18495  017ABE  0012               	return		;funcret
 18496  017AC0                     __end_of_fputs:
 18497                           	opt callstack 0
 18498                           
 18499 ;; *************** function _fputc *****************
 18500 ;; Defined at:
 18501 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18502 ;; Parameters:    Size  Location     Type
 18503 ;;  c               2  [STACK] int 
 18504 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18505 ;;		 -> f(6), NULL(0), 
 18506 ;; Auto vars:     Size  Location     Type
 18507 ;;		None
 18508 ;; Return value:  Size  Location     Type
 18509 ;;                  2  [STACK] int 
 18510 ;; Registers used:
 18511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18512 ;; Tracked objects:
 18513 ;;		On entry : 0/0
 18514 ;;		On exit  : 0/0
 18515 ;;		Unchanged: 0/0
 18516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18521 ;;Total ram usage:        0 bytes
 18522 ;; Hardware stack levels used:    1
 18523 ;; Hardware stack levels required when called:   12
 18524 ;; This function calls:
 18525 ;;		_putch
 18526 ;; This function is called by:
 18527 ;;		_pad
 18528 ;;		_stoa
 18529 ;;		_vfpfcnvrt
 18530 ;;		_fputs
 18531 ;; This function uses a reentrant model
 18532 ;;
 18533                           
 18534                           	psect	text69
 18535  016B5A                     __ptext69:
 18536                           	opt callstack 0
 18537  016B5A                     _fputc:
 18538                           	opt callstack 9
 18539                           
 18540                           ;stkvar	_fp @ sp[(0)+-4]
 18541                           
 18542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18543                           ;incstack = 0
 18544  016B5A  0EFC               	movlw	-4
 18545  016B5C  006F FF8C  F025    	movff	plusw1,btemp
 18546  016B62  0EFD               	movlw	-3
 18547  016B64  50E3               	movf	plusw1,w,c
 18548  016B66  1025               	iorwf	btemp^0,w,c
 18549  016B68  B4D8               	btfsc	status,2,c
 18550  016B6A  D009               	goto	u9200
 18551                           
 18552                           ;stkvar	_fp @ sp[(0)+-4]
 18553  016B6C  0EFC               	movlw	-4
 18554  016B6E  006F FF8C  F025    	movff	plusw1,btemp
 18555  016B74  0EFD               	movlw	-3
 18556  016B76  50E3               	movf	plusw1,w,c
 18557  016B78  1025               	iorwf	btemp^0,w,c
 18558  016B7A  A4D8               	btfss	status,2,c
 18559  016B7C  D006               	goto	l10009
 18560  016B7E                     u9200:
 18561                           
 18562                           ;stkvar	_c @ sp[(0)+-2]
 18563  016B7E  0EFE               	movlw	-2
 18564  016B80  50E3               	movf	plusw1,w,c
 18565  016B82  6EE6               	movwf	postinc1,c
 18566  016B84  ECF7  F0C7         	call	_putch	;wreg free
 18567  016B88  D075               	goto	l3000
 18568  016B8A                     l10009:
 18569                           
 18570                           ;stkvar	_fp @ sp[(0)+-4]
 18571  016B8A  0EFC               	movlw	-4
 18572  016B8C  006F FF8C  F02F    	movff	plusw1,btemp+10
 18573  016B92  0EFD               	movlw	-3
 18574  016B94  006F FF8C  F030    	movff	plusw1,btemp+11
 18575  016B9A  0E04               	movlw	4
 18576  016B9C  242F               	addwf	(btemp+10)^0,w,c
 18577  016B9E  6ED9               	movwf	fsr2l,c
 18578  016BA0  0E00               	movlw	0
 18579  016BA2  2030               	addwfc	(btemp+11)^0,w,c
 18580  016BA4  6EDA               	movwf	fsr2h,c
 18581  016BA6  50DE               	movf	postinc2,w,c
 18582  016BA8  10DE               	iorwf	postinc2,w,c
 18583  016BAA  B4D8               	btfsc	status,2,c
 18584  016BAC  D026               	goto	u9220
 18585                           
 18586                           ;stkvar	_fp @ sp[(0)+-4]
 18587  016BAE  0EFC               	movlw	-4
 18588  016BB0  006F FF8C  F02F    	movff	plusw1,btemp+10
 18589  016BB6  0EFD               	movlw	-3
 18590  016BB8  006F FF8C  F030    	movff	plusw1,btemp+11
 18591  016BBE  0E04               	movlw	4
 18592  016BC0  242F               	addwf	(btemp+10)^0,w,c
 18593  016BC2  6ED9               	movwf	fsr2l,c
 18594  016BC4  0E00               	movlw	0
 18595  016BC6  2030               	addwfc	(btemp+11)^0,w,c
 18596  016BC8  6EDA               	movwf	fsr2h,c
 18597                           
 18598                           ;stkvar	_fp @ sp[(0)+-4]
 18599  016BCA  0EFC               	movlw	-4
 18600  016BCC  006F FF8C  F02F    	movff	plusw1,btemp+10
 18601  016BD2  0EFD               	movlw	-3
 18602  016BD4  006F FF8C  F030    	movff	plusw1,btemp+11
 18603  016BDA  0E02               	movlw	2
 18604  016BDC  242F               	addwf	(btemp+10)^0,w,c
 18605  016BDE  6EE9               	movwf	fsr0l,c
 18606  016BE0  0E00               	movlw	0
 18607  016BE2  2030               	addwfc	(btemp+11)^0,w,c
 18608  016BE4  6EEA               	movwf	fsr0h,c
 18609  016BE6  50DE               	movf	postinc2,w,c
 18610  016BE8  5CEE               	subwf	postinc0,w,c
 18611  016BEA  50EE               	movf	postinc0,w,c
 18612  016BEC  0A80               	xorlw	128
 18613  016BEE  6E25               	movwf	btemp^0,c
 18614  016BF0  50DE               	movf	postinc2,w,c
 18615  016BF2  0A80               	xorlw	128
 18616  016BF4  5825               	subwfb	btemp^0,w,c
 18617  016BF6  B0D8               	btfsc	status,0,c
 18618  016BF8  D03D               	goto	l3000
 18619  016BFA                     u9220:
 18620                           
 18621                           ;stkvar	_c @ sp[(0)+-2]
 18622                           ;stkvar	_fp @ sp[(0)+-4]
 18623  016BFA  0EFC               	movlw	-4
 18624  016BFC  006F FF8C  F02F    	movff	plusw1,btemp+10
 18625  016C02  0EFD               	movlw	-3
 18626  016C04  006F FF8C  F030    	movff	plusw1,btemp+11
 18627  016C0A  0E02               	movlw	2
 18628  016C0C  242F               	addwf	(btemp+10)^0,w,c
 18629  016C0E  6ED9               	movwf	fsr2l,c
 18630  016C10  0E00               	movlw	0
 18631  016C12  2030               	addwfc	(btemp+11)^0,w,c
 18632  016C14  6EDA               	movwf	fsr2h,c
 18633  016C16  006F FF78  F02F    	movff	postinc2,btemp+10
 18634  016C1C  006F FF74  F030    	movff	postdec2,btemp+11
 18635                           
 18636                           ;stkvar	_fp @ sp[(0)+-4]
 18637  016C22  0EFC               	movlw	-4
 18638  016C24  006F FF8F FFD9     	movff	plusw1,fsr2l
 18639  016C2A  0EFD               	movlw	-3
 18640  016C2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 18641  016C32  006F FF78  F02D    	movff	postinc2,btemp+8
 18642  016C38  006F FF74  F02E    	movff	postdec2,btemp+9
 18643  016C3E  502F               	movf	(btemp+10)^0,w,c
 18644  016C40  242D               	addwf	(btemp+8)^0,w,c
 18645  016C42  6ED9               	movwf	fsr2l,c
 18646  016C44  5030               	movf	(btemp+11)^0,w,c
 18647  016C46  202E               	addwfc	(btemp+9)^0,w,c
 18648  016C48  6EDA               	movwf	fsr2h,c
 18649  016C4A  0EFE               	movlw	-2
 18650  016C4C  006F FF8F FFDF     	movff	plusw1,indf2
 18651                           
 18652                           ;stkvar	_fp @ sp[(0)+-4]
 18653  016C52  0EFC               	movlw	-4
 18654  016C54  006F FF8C  F02F    	movff	plusw1,btemp+10
 18655  016C5A  0EFD               	movlw	-3
 18656  016C5C  006F FF8C  F030    	movff	plusw1,btemp+11
 18657  016C62  0E02               	movlw	2
 18658  016C64  242F               	addwf	(btemp+10)^0,w,c
 18659  016C66  6ED9               	movwf	fsr2l,c
 18660  016C68  0E00               	movlw	0
 18661  016C6A  2030               	addwfc	(btemp+11)^0,w,c
 18662  016C6C  6EDA               	movwf	fsr2h,c
 18663  016C6E  2ADE               	incf	postinc2,f,c
 18664  016C70  0E00               	movlw	0
 18665  016C72  22DD               	addwfc	postdec2,f,c
 18666  016C74                     l3000:
 18667                           
 18668                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18669  016C74  52E5               	movf	postdec1,f,c
 18670  016C76  52E5               	movf	postdec1,f,c
 18671  016C78  52E5               	movf	postdec1,f,c
 18672  016C7A  52E5               	movf	postdec1,f,c
 18673  016C7C  0012               	return		;funcret
 18674  016C7E                     __end_of_fputc:
 18675                           	opt callstack 0
 18676                           
 18677 ;; *************** function _putch *****************
 18678 ;; Defined at:
 18679 ;;		line 158 in file "eadog.c"
 18680 ;; Parameters:    Size  Location     Type
 18681 ;;  c               1  [STACK] unsigned char 
 18682 ;; Auto vars:     Size  Location     Type
 18683 ;;		None
 18684 ;; Return value:  Size  Location     Type
 18685 ;;                  1  [STACK] void 
 18686 ;; Registers used:
 18687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18688 ;; Tracked objects:
 18689 ;;		On entry : 0/0
 18690 ;;		On exit  : 0/0
 18691 ;;		Unchanged: 0/0
 18692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18697 ;;Total ram usage:        0 bytes
 18698 ;; Hardware stack levels used:    1
 18699 ;; Hardware stack levels required when called:   11
 18700 ;; This function calls:
 18701 ;;		_ringBufS_put_dma
 18702 ;; This function is called by:
 18703 ;;		_fputc
 18704 ;; This function uses a reentrant model
 18705 ;;
 18706                           
 18707                           	psect	text70
 18708  018FEE                     __ptext70:
 18709                           	opt callstack 0
 18710  018FEE                     _putch:
 18711                           	opt callstack 9
 18712                           
 18713                           ;eadog.c: 158: void putch(char c);eadog.c: 159: {;eadog.c: 160:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18714                           ;stkvar	_c @ sp[(0)+-1]
 18715                           
 18716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18717                           ;incstack = 0
 18718  018FEE  0EFF               	movlw	-1
 18719  018FF0  50E3               	movf	plusw1,w,c
 18720  018FF2  6EE6               	movwf	postinc1,c
 18721  018FF4  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 18722  018FFA  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 18723  019000  EC1B  F0BC         	call	_ringBufS_put_dma	;wreg free
 18724                           
 18725                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18726  019004  52E5               	movf	postdec1,f,c
 18727  019006  0012               	return		;funcret
 18728  019008                     __end_of_putch:
 18729                           	opt callstack 0
 18730                           
 18731 ;; *************** function _ringBufS_put_dma *****************
 18732 ;; Defined at:
 18733 ;;		line 67 in file "ringbufs.c"
 18734 ;; Parameters:    Size  Location     Type
 18735 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18736 ;;		 -> ring_buf1(67), 
 18737 ;;  c               1  [STACK] const unsigned char 
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;		None
 18740 ;; Return value:  Size  Location     Type
 18741 ;;                  1  [STACK] void 
 18742 ;; Registers used:
 18743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18744 ;; Tracked objects:
 18745 ;;		On entry : 0/0
 18746 ;;		On exit  : 0/0
 18747 ;;		Unchanged: 0/0
 18748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18753 ;;Total ram usage:        0 bytes
 18754 ;; Hardware stack levels used:    1
 18755 ;; Hardware stack levels required when called:   10
 18756 ;; This function calls:
 18757 ;;		Nothing
 18758 ;; This function is called by:
 18759 ;;		_putch
 18760 ;; This function uses a reentrant model
 18761 ;;
 18762                           
 18763                           	psect	text71
 18764  017836                     __ptext71:
 18765                           	opt callstack 0
 18766  017836                     _ringBufS_put_dma:
 18767                           	opt callstack 9
 18768                           
 18769                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18770                           ;stkvar	__this @ sp[(0)+-2]
 18771                           
 18772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18773                           ;incstack = 0
 18774  017836  0EFE               	movlw	-2
 18775  017838  006F FF8C  F02F    	movff	plusw1,btemp+10
 18776  01783E  0EFF               	movlw	-1
 18777  017840  006F FF8C  F030    	movff	plusw1,btemp+11
 18778  017846  0E42               	movlw	66
 18779  017848  242F               	addwf	(btemp+10)^0,w,c
 18780  01784A  6ED9               	movwf	fsr2l,c
 18781  01784C  0E00               	movlw	0
 18782  01784E  2030               	addwfc	(btemp+11)^0,w,c
 18783  017850  6EDA               	movwf	fsr2h,c
 18784  017852  0E40               	movlw	64
 18785  017854  60DF               	cpfslt	indf2,c
 18786  017856  D040               	goto	l1506
 18787                           
 18788                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18789                           ;stkvar	_c @ sp[(0)+-3]
 18790                           ;stkvar	__this @ sp[(0)+-2]
 18791  017858  0EFE               	movlw	-2
 18792  01785A  006F FF8C  F02F    	movff	plusw1,btemp+10
 18793  017860  0EFF               	movlw	-1
 18794  017862  006F FF8C  F030    	movff	plusw1,btemp+11
 18795  017868  0E40               	movlw	64
 18796  01786A  242F               	addwf	(btemp+10)^0,w,c
 18797  01786C  6ED9               	movwf	fsr2l,c
 18798  01786E  0E00               	movlw	0
 18799  017870  2030               	addwfc	(btemp+11)^0,w,c
 18800  017872  6EDA               	movwf	fsr2h,c
 18801  017874  50DF               	movf	indf2,w,c
 18802  017876  6E30               	movwf	(btemp+11)^0,c
 18803                           
 18804                           ;stkvar	__this @ sp[(0)+-2]
 18805  017878  0EFE               	movlw	-2
 18806  01787A  006F FF8C  F02D    	movff	plusw1,btemp+8
 18807  017880  0EFF               	movlw	-1
 18808  017882  006F FF8C  F02E    	movff	plusw1,btemp+9
 18809  017888  5030               	movf	(btemp+11)^0,w,c
 18810  01788A  242D               	addwf	(btemp+8)^0,w,c
 18811  01788C  6ED9               	movwf	fsr2l,c
 18812  01788E  0E00               	movlw	0
 18813  017890  202E               	addwfc	(btemp+9)^0,w,c
 18814  017892  6EDA               	movwf	fsr2h,c
 18815  017894  0EFD               	movlw	-3
 18816  017896  006F FF8F FFDF     	movff	plusw1,indf2
 18817                           
 18818                           ;ringbufs.c: 71:   ++_this->head;
 18819                           ;stkvar	__this @ sp[(0)+-2]
 18820  01789C  0EFE               	movlw	-2
 18821  01789E  006F FF8C  F02F    	movff	plusw1,btemp+10
 18822  0178A4  0EFF               	movlw	-1
 18823  0178A6  006F FF8C  F030    	movff	plusw1,btemp+11
 18824  0178AC  0E40               	movlw	64
 18825  0178AE  242F               	addwf	(btemp+10)^0,w,c
 18826  0178B0  6ED9               	movwf	fsr2l,c
 18827  0178B2  0E00               	movlw	0
 18828  0178B4  2030               	addwfc	(btemp+11)^0,w,c
 18829  0178B6  6EDA               	movwf	fsr2h,c
 18830  0178B8  2ADF               	incf	indf2,f,c
 18831                           
 18832                           ;ringbufs.c: 72:   ++_this->count;
 18833                           ;stkvar	__this @ sp[(0)+-2]
 18834  0178BA  0EFE               	movlw	-2
 18835  0178BC  006F FF8C  F02F    	movff	plusw1,btemp+10
 18836  0178C2  0EFF               	movlw	-1
 18837  0178C4  006F FF8C  F030    	movff	plusw1,btemp+11
 18838  0178CA  0E42               	movlw	66
 18839  0178CC  242F               	addwf	(btemp+10)^0,w,c
 18840  0178CE  6ED9               	movwf	fsr2l,c
 18841  0178D0  0E00               	movlw	0
 18842  0178D2  2030               	addwfc	(btemp+11)^0,w,c
 18843  0178D4  6EDA               	movwf	fsr2h,c
 18844  0178D6  2ADF               	incf	indf2,f,c
 18845  0178D8                     l1506:
 18846                           
 18847                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18848  0178D8  52E5               	movf	postdec1,f,c
 18849  0178DA  52E5               	movf	postdec1,f,c
 18850  0178DC  52E5               	movf	postdec1,f,c
 18851  0178DE  0012               	return		;funcret
 18852  0178E0                     __end_of_ringBufS_put_dma:
 18853                           	opt callstack 0
 18854                           
 18855 ;; *************** function _atoi *****************
 18856 ;; Defined at:
 18857 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18858 ;; Parameters:    Size  Location     Type
 18859 ;;  s               2  [STACK] PTR const unsigned char 
 18860 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18861 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18862 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18863 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18864 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18865 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
 18866 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18867 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18868 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18869 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18870 ;; Auto vars:     Size  Location     Type
 18871 ;;  n               2  [STACK] int 
 18872 ;;  neg             2  [STACK] int 
 18873 ;; Return value:  Size  Location     Type
 18874 ;;                  2  [STACK] int 
 18875 ;; Registers used:
 18876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18877 ;; Tracked objects:
 18878 ;;		On entry : 0/0
 18879 ;;		On exit  : 0/0
 18880 ;;		Unchanged: 0/0
 18881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18886 ;;Total ram usage:        0 bytes
 18887 ;; Hardware stack levels used:    1
 18888 ;; Hardware stack levels required when called:   11
 18889 ;; This function calls:
 18890 ;;		_isdigit
 18891 ;;		_isspace
 18892 ;; This function is called by:
 18893 ;;		_vfpfcnvrt
 18894 ;; This function uses a reentrant model
 18895 ;;
 18896                           
 18897                           	psect	text72
 18898  0156DA                     __ptext72:
 18899                           	opt callstack 0
 18900  0156DA                     _atoi:
 18901                           	opt callstack 0
 18902                           
 18903                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18904  0156DA  0E09               	movlw	9
 18905  0156DC  26E1               	addwf	fsr1l,f,c
 18906  0156DE  0E00               	movlw	0
 18907  0156E0  22E2               	addwfc	fsr1h,f,c
 18908                           
 18909                           ;stkvar	_n @ sp[(-9)+5]
 18910                           
 18911                           ;incstack = 0
 18912  0156E2  0EFC               	movlw	-4
 18913  0156E4  6AE3               	clrf	plusw1,c
 18914  0156E6  0EFD               	movlw	-3
 18915  0156E8  6AE3               	clrf	plusw1,c
 18916                           
 18917                           ;stkvar	_neg @ sp[(-9)+7]
 18918  0156EA  0EFE               	movlw	-2
 18919  0156EC  6AE3               	clrf	plusw1,c
 18920  0156EE  0EFF               	movlw	-1
 18921  0156F0  6AE3               	clrf	plusw1,c
 18922  0156F2  D011               	goto	l7671
 18923  0156F4                     l7669:
 18924                           
 18925                           ;stkvar	_s @ sp[(-9)+-2]
 18926  0156F4  0EF5               	movlw	-11
 18927  0156F6  50E3               	movf	plusw1,w,c
 18928  0156F8  0F01               	addlw	1
 18929  0156FA  6E25               	movwf	btemp^0,c
 18930  0156FC  0EF5               	movlw	-11
 18931  0156FE  0060  F097  FFE3   	movff	btemp,plusw1
 18932  015704  6A25               	clrf	btemp^0,c
 18933  015706  0EF6               	movlw	-10
 18934  015708  50E3               	movf	plusw1,w,c
 18935  01570A  2025               	addwfc	btemp^0,w,c
 18936  01570C  6E25               	movwf	btemp^0,c
 18937  01570E  0EF6               	movlw	-10
 18938  015710  0060  F097  FFE3   	movff	btemp,plusw1
 18939  015716                     l7671:
 18940                           
 18941                           ;stkvar	_atoi$5488 @ sp[(-9)+4]
 18942  015716  0EFB               	movlw	-5
 18943  015718  6AE3               	clrf	plusw1,c
 18944  01571A  2AE3               	incf	plusw1,f,c
 18945                           
 18946                           ;stkvar	_s @ sp[(-9)+-2]
 18947  01571C  50E1               	movf	fsr1l,w,c
 18948  01571E  0FF5               	addlw	-11
 18949  015720  6ED9               	movwf	fsr2l,c
 18950  015722  50E2               	movf	fsr1h,w,c
 18951  015724  6EDA               	movwf	fsr2h,c
 18952  015726  0EFF               	movlw	255
 18953  015728  22DA               	addwfc	fsr2h,f,c
 18954  01572A  006F FF7B FFF6     	movff	postinc2,tblptrl
 18955  015730  006F FF77 FFF7     	movff	postdec2,tblptrh
 18956  015736                     	if	0	;tblptru may be non-zero
 18957  015736                     	endif
 18958  015736                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18959  015736  0E00               	movlw	low (__mediumconst shr (0+16))
 18960  015738  6EF8               	movwf	tblptru,c
 18961  01573A                     	endif
 18962  01573A  0008               	tblrd		*
 18963  01573C  50F5               	movf	tablat,w,c
 18964  01573E  0A20               	xorlw	32
 18965  015740  B4D8               	btfsc	status,2,c
 18966  015742  D023               	goto	l7679
 18967  015744  0EF7               	movlw	247
 18968  015746  6E2F               	movwf	(btemp+10)^0,c
 18969  015748  0EFF               	movlw	255
 18970  01574A  6E30               	movwf	(btemp+11)^0,c
 18971                           
 18972                           ;stkvar	_s @ sp[(-9)+-2]
 18973  01574C  50E1               	movf	fsr1l,w,c
 18974  01574E  0FF5               	addlw	-11
 18975  015750  6ED9               	movwf	fsr2l,c
 18976  015752  50E2               	movf	fsr1h,w,c
 18977  015754  6EDA               	movwf	fsr2h,c
 18978  015756  0EFF               	movlw	255
 18979  015758  22DA               	addwfc	fsr2h,f,c
 18980  01575A  006F FF7B FFF6     	movff	postinc2,tblptrl
 18981  015760  006F FF77 FFF7     	movff	postdec2,tblptrh
 18982  015766                     	if	0	;tblptru may be non-zero
 18983  015766                     	endif
 18984  015766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18985  015766  0E00               	movlw	low (__mediumconst shr (0+16))
 18986  015768  6EF8               	movwf	tblptru,c
 18987  01576A                     	endif
 18988  01576A  0008               	tblrd		*
 18989  01576C  50F5               	movf	tablat,w,c
 18990  01576E  6E2D               	movwf	(btemp+8)^0,c
 18991  015770  6A2E               	clrf	(btemp+9)^0,c
 18992  015772  502F               	movf	(btemp+10)^0,w,c
 18993  015774  262D               	addwf	(btemp+8)^0,f,c
 18994  015776  5030               	movf	(btemp+11)^0,w,c
 18995  015778  222E               	addwfc	(btemp+9)^0,f,c
 18996  01577A  502E               	movf	(btemp+9)^0,w,c
 18997  01577C  E104               	bnz	u6880
 18998  01577E  0E05               	movlw	5
 18999  015780  5C2D               	subwf	(btemp+8)^0,w,c
 19000  015782  A0D8               	btfss	status,0,c
 19001  015784  D002               	goto	l7679
 19002  015786                     u6880:
 19003                           
 19004                           ;stkvar	_atoi$5488 @ sp[(-9)+4]
 19005  015786  0EFB               	movlw	-5
 19006  015788  6AE3               	clrf	plusw1,c
 19007  01578A                     l7679:
 19008                           
 19009                           ;stkvar	_atoi$5488 @ sp[(-9)+4]
 19010  01578A  0EFB               	movlw	-5
 19011  01578C  50E3               	movf	plusw1,w,c
 19012  01578E  6E2F               	movwf	(btemp+10)^0,c
 19013  015790  6A30               	clrf	(btemp+11)^0,c
 19014                           
 19015                           ;stkvar	_atoi$5487 @ sp[(-9)+2]
 19016  015792  0EF9               	movlw	-7
 19017  015794  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19018  01579A  0EFA               	movlw	-6
 19019  01579C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19020                           
 19021                           ;stkvar	_atoi$5487 @ sp[(-9)+2]
 19022  0157A2  0EF9               	movlw	-7
 19023  0157A4  006F FF8C  F025    	movff	plusw1,btemp
 19024  0157AA  0EFA               	movlw	-6
 19025  0157AC  50E3               	movf	plusw1,w,c
 19026  0157AE  1025               	iorwf	btemp^0,w,c
 19027  0157B0  B4D8               	btfsc	status,2,c
 19028  0157B2  D01F               	goto	l7689
 19029  0157B4  D79F               	goto	l7669
 19030  0157B6                     l7685:
 19031  0157B6  0E01               	movlw	1
 19032  0157B8  6E2F               	movwf	(btemp+10)^0,c
 19033  0157BA  0E00               	movlw	0
 19034  0157BC  6E30               	movwf	(btemp+11)^0,c
 19035                           
 19036                           ;stkvar	_neg @ sp[(-9)+7]
 19037  0157BE  0EFE               	movlw	-2
 19038  0157C0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19039  0157C6  0EFF               	movlw	-1
 19040  0157C8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19041  0157CE                     l7687:
 19042                           
 19043                           ;stkvar	_s @ sp[(-9)+-2]
 19044  0157CE  0EF5               	movlw	-11
 19045  0157D0  50E3               	movf	plusw1,w,c
 19046  0157D2  0F01               	addlw	1
 19047  0157D4  6E25               	movwf	btemp^0,c
 19048  0157D6  0EF5               	movlw	-11
 19049  0157D8  0060  F097  FFE3   	movff	btemp,plusw1
 19050  0157DE  6A25               	clrf	btemp^0,c
 19051  0157E0  0EF6               	movlw	-10
 19052  0157E2  50E3               	movf	plusw1,w,c
 19053  0157E4  2025               	addwfc	btemp^0,w,c
 19054  0157E6  6E25               	movwf	btemp^0,c
 19055  0157E8  0EF6               	movlw	-10
 19056  0157EA  0060  F097  FFE3   	movff	btemp,plusw1
 19057  0157F0  D053               	goto	l7695
 19058  0157F2                     l7689:
 19059                           
 19060                           ;stkvar	_s @ sp[(-9)+-2]
 19061  0157F2  50E1               	movf	fsr1l,w,c
 19062  0157F4  0FF5               	addlw	-11
 19063  0157F6  6ED9               	movwf	fsr2l,c
 19064  0157F8  50E2               	movf	fsr1h,w,c
 19065  0157FA  6EDA               	movwf	fsr2h,c
 19066  0157FC  0EFF               	movlw	255
 19067  0157FE  22DA               	addwfc	fsr2h,f,c
 19068  015800  006F FF7B FFF6     	movff	postinc2,tblptrl
 19069  015806  006F FF77 FFF7     	movff	postdec2,tblptrh
 19070  01580C                     	if	0	;tblptru may be non-zero
 19071  01580C                     	endif
 19072  01580C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19073  01580C  0E00               	movlw	low (__mediumconst shr (0+16))
 19074  01580E  6EF8               	movwf	tblptru,c
 19075  015810                     	endif
 19076  015810  0008               	tblrd		*
 19077  015812  50F5               	movf	tablat,w,c
 19078  015814  6E2F               	movwf	(btemp+10)^0,c
 19079  015816  6A30               	clrf	(btemp+11)^0,c
 19080                           
 19081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19082                           ; Switch size 1, requested type "simple"
 19083                           ; Number of cases is 1, Range of values is 0 to 0
 19084                           ; switch strategies available:
 19085                           ; Name         Instructions Cycles
 19086                           ; simple_byte            4     3 (average)
 19087                           ;	Chosen strategy is simple_byte
 19088  015818  5030               	movf	(btemp+11)^0,w,c
 19089  01581A  0A00               	xorlw	0	; case 0
 19090  01581C  A4D8               	btfss	status,2,c
 19091  01581E  D03C               	goto	l7695
 19092                           
 19093                           ; Switch size 1, requested type "simple"
 19094                           ; Number of cases is 2, Range of values is 43 to 45
 19095                           ; switch strategies available:
 19096                           ; Name         Instructions Cycles
 19097                           ; simple_byte            7     4 (average)
 19098                           ;	Chosen strategy is simple_byte
 19099  015820  502F               	movf	(btemp+10)^0,w,c
 19100  015822  0A2B               	xorlw	43	; case 43
 19101  015824  B4D8               	btfsc	status,2,c
 19102  015826  D7D3               	goto	l7687
 19103  015828  0A06               	xorlw	6	; case 45
 19104  01582A  B4D8               	btfsc	status,2,c
 19105  01582C  D7C4               	goto	l7685
 19106  01582E  D034               	goto	l7695
 19107  015830                     l7691:
 19108                           
 19109                           ;stkvar	_n @ sp[(-9)+5]
 19110  015830  0EFC               	movlw	-4
 19111  015832  006F FF8C  F02F    	movff	plusw1,btemp+10
 19112  015838  0EFD               	movlw	-3
 19113  01583A  006F FF8C  F030    	movff	plusw1,btemp+11
 19114  015840  0E0A               	movlw	10
 19115  015842  022F               	mulwf	(btemp+10)^0,c
 19116  015844  006F FFCC  F02D    	movff	prodl,btemp+8
 19117  01584A  006F FFD0  F02E    	movff	prodh,btemp+9
 19118  015850  0230               	mulwf	(btemp+11)^0,c
 19119  015852  50F3               	movf	prodl,w,c
 19120  015854  262E               	addwf	(btemp+9)^0,f,c
 19121                           
 19122                           ;stkvar	_s @ sp[(-9)+-2]
 19123  015856  50E1               	movf	fsr1l,w,c
 19124  015858  0FF5               	addlw	-11
 19125  01585A  6ED9               	movwf	fsr2l,c
 19126  01585C  50E2               	movf	fsr1h,w,c
 19127  01585E  6EDA               	movwf	fsr2h,c
 19128  015860  0EFF               	movlw	255
 19129  015862  22DA               	addwfc	fsr2h,f,c
 19130  015864  006F FF7B FFF6     	movff	postinc2,tblptrl
 19131  01586A  006F FF77 FFF7     	movff	postdec2,tblptrh
 19132  015870                     	if	0	;tblptru may be non-zero
 19133  015870                     	endif
 19134  015870                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19135  015870  0E00               	movlw	low (__mediumconst shr (0+16))
 19136  015872  6EF8               	movwf	tblptru,c
 19137  015874                     	endif
 19138  015874  0008               	tblrd		*
 19139  015876  50F5               	movf	tablat,w,c
 19140  015878  5E2D               	subwf	(btemp+8)^0,f,c
 19141  01587A  0E00               	movlw	0
 19142  01587C  5A2E               	subwfb	(btemp+9)^0,f,c
 19143  01587E  0E30               	movlw	48
 19144  015880  262D               	addwf	(btemp+8)^0,f,c
 19145  015882  0E00               	movlw	0
 19146  015884  222E               	addwfc	(btemp+9)^0,f,c
 19147                           
 19148                           ;stkvar	_n @ sp[(-9)+5]
 19149  015886  0EFC               	movlw	-4
 19150  015888  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 19151  01588E  0EFD               	movlw	-3
 19152  015890  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 19153  015896  D79B               	goto	l7687
 19154  015898                     l7695:
 19155  015898  0ED0               	movlw	208
 19156  01589A  6E2F               	movwf	(btemp+10)^0,c
 19157  01589C  0EFF               	movlw	255
 19158  01589E  6E30               	movwf	(btemp+11)^0,c
 19159                           
 19160                           ;stkvar	_s @ sp[(-9)+-2]
 19161  0158A0  50E1               	movf	fsr1l,w,c
 19162  0158A2  0FF5               	addlw	-11
 19163  0158A4  6ED9               	movwf	fsr2l,c
 19164  0158A6  50E2               	movf	fsr1h,w,c
 19165  0158A8  6EDA               	movwf	fsr2h,c
 19166  0158AA  0EFF               	movlw	255
 19167  0158AC  22DA               	addwfc	fsr2h,f,c
 19168  0158AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19169  0158B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19170  0158BA                     	if	0	;tblptru may be non-zero
 19171  0158BA                     	endif
 19172  0158BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19173  0158BA  0E00               	movlw	low (__mediumconst shr (0+16))
 19174  0158BC  6EF8               	movwf	tblptru,c
 19175  0158BE                     	endif
 19176  0158BE  0008               	tblrd		*
 19177  0158C0  50F5               	movf	tablat,w,c
 19178  0158C2  6E2D               	movwf	(btemp+8)^0,c
 19179  0158C4  6A2E               	clrf	(btemp+9)^0,c
 19180  0158C6  502F               	movf	(btemp+10)^0,w,c
 19181  0158C8  262D               	addwf	(btemp+8)^0,f,c
 19182  0158CA  5030               	movf	(btemp+11)^0,w,c
 19183  0158CC  222E               	addwfc	(btemp+9)^0,f,c
 19184  0158CE  502E               	movf	(btemp+9)^0,w,c
 19185  0158D0  E106               	bnz	u6900
 19186  0158D2  0E0A               	movlw	10
 19187  0158D4  5C2D               	subwf	(btemp+8)^0,w,c
 19188  0158D6  B0D8               	btfsc	status,0,c
 19189  0158D8  D002               	goto	u6900
 19190  0158DA  0E01               	movlw	1
 19191  0158DC  D001               	goto	u6910
 19192  0158DE                     u6900:
 19193  0158DE  0E00               	movlw	0
 19194  0158E0                     u6910:
 19195  0158E0  6E2F               	movwf	(btemp+10)^0,c
 19196  0158E2  6A30               	clrf	(btemp+11)^0,c
 19197                           
 19198                           ;stkvar	_atoi$5489 @ sp[(-9)+0]
 19199  0158E4  0EF7               	movlw	-9
 19200  0158E6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19201  0158EC  0EF8               	movlw	-8
 19202  0158EE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19203                           
 19204                           ;stkvar	_atoi$5489 @ sp[(-9)+0]
 19205  0158F4  0EF7               	movlw	-9
 19206  0158F6  006F FF8C  F025    	movff	plusw1,btemp
 19207  0158FC  0EF8               	movlw	-8
 19208  0158FE  50E3               	movf	plusw1,w,c
 19209  015900  1025               	iorwf	btemp^0,w,c
 19210  015902  A4D8               	btfss	status,2,c
 19211  015904  D795               	goto	l7691
 19212                           
 19213                           ;stkvar	_neg @ sp[(-9)+7]
 19214  015906  0EFE               	movlw	-2
 19215  015908  006F FF8C  F025    	movff	plusw1,btemp
 19216  01590E  0EFF               	movlw	-1
 19217  015910  50E3               	movf	plusw1,w,c
 19218  015912  1025               	iorwf	btemp^0,w,c
 19219  015914  A4D8               	btfss	status,2,c
 19220  015916  D00E               	goto	l7705
 19221                           
 19222                           ;stkvar	_n @ sp[(-9)+5]
 19223  015918  0EFC               	movlw	-4
 19224  01591A  006F FF8C  F025    	movff	plusw1,btemp
 19225  015920  1E25               	comf	btemp^0,f,c
 19226  015922  0EFD               	movlw	-3
 19227  015924  006F FF8C  F026    	movff	plusw1,btemp+1
 19228  01592A  1E26               	comf	(btemp+1)^0,f,c
 19229  01592C  2A25               	incf	btemp^0,f,c
 19230  01592E  B4D8               	btfsc	status,2,c
 19231  015930  2A26               	incf	(btemp+1)^0,f,c
 19232  015932  D008               	goto	l2936
 19233  015934                     l7705:
 19234                           
 19235                           ;stkvar	_n @ sp[(-9)+5]
 19236  015934  0EFC               	movlw	-4
 19237  015936  006F FF8C  F025    	movff	plusw1,btemp
 19238  01593C  0EFD               	movlw	-3
 19239  01593E  006F FF8C  F026    	movff	plusw1,btemp+1
 19240  015944                     l2936:
 19241                           
 19242                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19243  015944  0EF5               	movlw	245
 19244  015946  26E1               	addwf	fsr1l,f,c
 19245  015948  0EFF               	movlw	255
 19246  01594A  22E2               	addwfc	fsr1h,f,c
 19247  01594C  0012               	return		;funcret
 19248  01594E                     __end_of_atoi:
 19249                           	opt callstack 0
 19250                           
 19251 ;; *************** function _isspace *****************
 19252 ;; Defined at:
 19253 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19254 ;; Parameters:    Size  Location     Type
 19255 ;;  c               2  [STACK] int 
 19256 ;; Auto vars:     Size  Location     Type
 19257 ;;		None
 19258 ;; Return value:  Size  Location     Type
 19259 ;;                  2  [STACK] int 
 19260 ;; Registers used:
 19261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19262 ;; Tracked objects:
 19263 ;;		On entry : 0/0
 19264 ;;		On exit  : 0/0
 19265 ;;		Unchanged: 0/0
 19266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19271 ;;Total ram usage:        0 bytes
 19272 ;; Hardware stack levels used:    1
 19273 ;; Hardware stack levels required when called:   10
 19274 ;; This function calls:
 19275 ;;		Nothing
 19276 ;; This function is called by:
 19277 ;;		_atoi
 19278 ;; This function uses a reentrant model
 19279 ;;
 19280                           
 19281                           	psect	text73
 19282  018400                     __ptext73:
 19283                           	opt callstack 0
 19284  018400                     _isspace:
 19285                           	opt callstack 0
 19286                           
 19287                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19288  018400  52E6               	movf	postinc1,f,c
 19289                           
 19290                           ;stkvar	_isspace$5527 @ sp[(-1)+0]
 19291                           
 19292                           ;incstack = 0
 19293  018402  0EFF               	movlw	-1
 19294  018404  6AE3               	clrf	plusw1,c
 19295  018406  2AE3               	incf	plusw1,f,c
 19296                           
 19297                           ;stkvar	_c @ sp[(-1)+-2]
 19298  018408  0EFD               	movlw	-3
 19299  01840A  006F FF8C  F025    	movff	plusw1,btemp
 19300  018410  0E20               	movlw	32
 19301  018412  1825               	xorwf	btemp^0,w,c
 19302  018414  E104               	bnz	u5870
 19303  018416  0EFE               	movlw	-2
 19304  018418  50E3               	movf	plusw1,w,c
 19305  01841A  B4D8               	btfsc	status,2,c
 19306  01841C  D012               	goto	l7155
 19307  01841E                     u5870:
 19308                           
 19309                           ;stkvar	_c @ sp[(-1)+-2]
 19310  01841E  0EFD               	movlw	-3
 19311  018420  50E3               	movf	plusw1,w,c
 19312  018422  0FF7               	addlw	247
 19313  018424  6E2F               	movwf	(btemp+10)^0,c
 19314  018426  0EFE               	movlw	-2
 19315  018428  006F FF8C  F030    	movff	plusw1,btemp+11
 19316  01842E  0EFF               	movlw	255
 19317  018430  2230               	addwfc	(btemp+11)^0,f,c
 19318  018432  5030               	movf	(btemp+11)^0,w,c
 19319  018434  E104               	bnz	u5880
 19320  018436  0E05               	movlw	5
 19321  018438  5C2F               	subwf	(btemp+10)^0,w,c
 19322  01843A  A0D8               	btfss	status,0,c
 19323  01843C  D002               	goto	l7155
 19324  01843E                     u5880:
 19325                           
 19326                           ;stkvar	_isspace$5527 @ sp[(-1)+0]
 19327  01843E  0EFF               	movlw	-1
 19328  018440  6AE3               	clrf	plusw1,c
 19329  018442                     l7155:
 19330                           
 19331                           ;stkvar	_isspace$5527 @ sp[(-1)+0]
 19332  018442  0EFF               	movlw	-1
 19333  018444  50E3               	movf	plusw1,w,c
 19334  018446  6E25               	movwf	btemp^0,c
 19335  018448  6A26               	clrf	(btemp+1)^0,c
 19336                           
 19337                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19338  01844A  52E5               	movf	postdec1,f,c
 19339  01844C  52E5               	movf	postdec1,f,c
 19340  01844E  52E5               	movf	postdec1,f,c
 19341  018450  0012               	return		;funcret
 19342  018452                     __end_of_isspace:
 19343                           	opt callstack 0
 19344                           
 19345 ;; *************** function _isdigit *****************
 19346 ;; Defined at:
 19347 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19348 ;; Parameters:    Size  Location     Type
 19349 ;;  c               2  [STACK] int 
 19350 ;; Auto vars:     Size  Location     Type
 19351 ;;		None
 19352 ;; Return value:  Size  Location     Type
 19353 ;;                  2  [STACK] int 
 19354 ;; Registers used:
 19355 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19356 ;; Tracked objects:
 19357 ;;		On entry : 0/0
 19358 ;;		On exit  : 0/0
 19359 ;;		Unchanged: 0/0
 19360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19365 ;;Total ram usage:        0 bytes
 19366 ;; Hardware stack levels used:    1
 19367 ;; Hardware stack levels required when called:   10
 19368 ;; This function calls:
 19369 ;;		Nothing
 19370 ;; This function is called by:
 19371 ;;		_vfpfcnvrt
 19372 ;;		_atoi
 19373 ;; This function uses a reentrant model
 19374 ;;
 19375                           
 19376                           	psect	text74
 19377  0189B0                     __ptext74:
 19378                           	opt callstack 0
 19379  0189B0                     _isdigit:
 19380                           	opt callstack 14
 19381                           
 19382                           ;stkvar	_c @ sp[(0)+-2]
 19383                           
 19384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19385                           ;incstack = 0
 19386  0189B0  0EFE               	movlw	-2
 19387  0189B2  50E3               	movf	plusw1,w,c
 19388  0189B4  0FD0               	addlw	208
 19389  0189B6  6E2F               	movwf	(btemp+10)^0,c
 19390  0189B8  0EFF               	movlw	-1
 19391  0189BA  006F FF8C  F030    	movff	plusw1,btemp+11
 19392  0189C0  0EFF               	movlw	255
 19393  0189C2  2230               	addwfc	(btemp+11)^0,f,c
 19394  0189C4  5030               	movf	(btemp+11)^0,w,c
 19395  0189C6  E106               	bnz	u5050
 19396  0189C8  0E0A               	movlw	10
 19397  0189CA  5C2F               	subwf	(btemp+10)^0,w,c
 19398  0189CC  B0D8               	btfsc	status,0,c
 19399  0189CE  D002               	goto	u5050
 19400  0189D0  0E01               	movlw	1
 19401  0189D2  D001               	goto	u5060
 19402  0189D4                     u5050:
 19403  0189D4  0E00               	movlw	0
 19404  0189D6                     u5060:
 19405  0189D6  6E25               	movwf	btemp^0,c
 19406  0189D8  6A26               	clrf	(btemp+1)^0,c
 19407                           
 19408                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19409  0189DA  52E5               	movf	postdec1,f,c
 19410  0189DC  52E5               	movf	postdec1,f,c
 19411  0189DE  0012               	return		;funcret
 19412  0189E0                     __end_of_isdigit:
 19413                           	opt callstack 0
 19414                           
 19415 ;; *************** function _set_vterm *****************
 19416 ;; Defined at:
 19417 ;;		line 107 in file "mconfig.c"
 19418 ;; Parameters:    Size  Location     Type
 19419 ;;  vterm           1  [STACK] const unsigned char 
 19420 ;; Auto vars:     Size  Location     Type
 19421 ;;		None
 19422 ;; Return value:  Size  Location     Type
 19423 ;;                  1  [STACK] unsigned char 
 19424 ;; Registers used:
 19425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19426 ;; Tracked objects:
 19427 ;;		On entry : 0/1
 19428 ;;		On exit  : 0/0
 19429 ;;		Unchanged: 0/0
 19430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19435 ;;Total ram usage:        0 bytes
 19436 ;; Hardware stack levels used:    1
 19437 ;; Hardware stack levels required when called:   10
 19438 ;; This function calls:
 19439 ;;		Nothing
 19440 ;; This function is called by:
 19441 ;;		_main
 19442 ;;		_check_help
 19443 ;; This function uses a reentrant model
 19444 ;;
 19445                           
 19446                           	psect	text75
 19447  018F5A                     __ptext75:
 19448                           	opt callstack 0
 19449  018F5A                     _set_vterm:
 19450                           	opt callstack 20
 19451                           
 19452                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19453                           ;stkvar	_vterm @ sp[(0)+-1]
 19454                           
 19455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19456                           ;incstack = 0
 19457  018F5A  0EFF               	movlw	-1
 19458  018F5C  006F FF8C  F030    	movff	plusw1,btemp+11
 19459  018F62  0E03               	movlw	3
 19460  018F64  1630               	andwf	(btemp+11)^0,f,c
 19461  018F66  EE22  F01F         	lfsr	2,_D+288
 19462  018F6A  50DF               	movf	223,w,c
 19463  018F6C  1830               	xorwf	(btemp+11)^0,w,c
 19464  018F6E  0BFE               	andlw	-2
 19465  018F70  1830               	xorwf	(btemp+11)^0,w,c
 19466  018F72  6EDF               	movwf	223,c
 19467                           
 19468                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19469  018F74  52E5               	movf	postdec1,f,c
 19470  018F76  0012               	return		;funcret
 19471  018F78                     __end_of_set_vterm:
 19472                           	opt callstack 0
 19473                           
 19474 ;; *************** function _set_temp_display_help *****************
 19475 ;; Defined at:
 19476 ;;		line 211 in file "mconfig.c"
 19477 ;; Parameters:    Size  Location     Type
 19478 ;;  new_response    1  [STACK] const enum E16518
 19479 ;; Auto vars:     Size  Location     Type
 19480 ;;		None
 19481 ;; Return value:  Size  Location     Type
 19482 ;;                  1  [STACK] enum E16518
 19483 ;; Registers used:
 19484 ;;		wreg, fsr1l, fsr1h
 19485 ;; Tracked objects:
 19486 ;;		On entry : 0/2
 19487 ;;		On exit  : 3F/2
 19488 ;;		Unchanged: 0/0
 19489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19494 ;;Total ram usage:        0 bytes
 19495 ;; Hardware stack levels used:    1
 19496 ;; Hardware stack levels required when called:   10
 19497 ;; This function calls:
 19498 ;;		Nothing
 19499 ;; This function is called by:
 19500 ;;		_check_help
 19501 ;; This function uses a reentrant model
 19502 ;;
 19503                           
 19504                           	psect	text76
 19505  0190E8                     __ptext76:
 19506                           	opt callstack 0
 19507  0190E8                     _set_temp_display_help:
 19508                           	opt callstack 19
 19509                           
 19510                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19511                           
 19512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19513                           ;incstack = 0
 19514  0190E8  0102               	movlb	2	; () banked
 19515  0190EA  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19516                           
 19517                           ; BSR set to: 2
 19518                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19519                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19520  0190EC  0EFF               	movlw	-1
 19521  0190EE  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19522                           
 19523                           ; BSR set to: 2
 19524                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19525  0190F4  52E5               	movf	postdec1,f,c
 19526  0190F6  0012               	return		;funcret
 19527  0190F8                     __end_of_set_temp_display_help:
 19528                           	opt callstack 0
 19529                           
 19530 ;; *************** function _set_display_info *****************
 19531 ;; Defined at:
 19532 ;;		line 200 in file "mconfig.c"
 19533 ;; Parameters:    Size  Location     Type
 19534 ;;  new_response    1  [STACK] const enum E16518
 19535 ;; Auto vars:     Size  Location     Type
 19536 ;;		None
 19537 ;; Return value:  Size  Location     Type
 19538 ;;                  1  [STACK] enum E17003
 19539 ;; Registers used:
 19540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19541 ;; Tracked objects:
 19542 ;;		On entry : 0/1
 19543 ;;		On exit  : 0/0
 19544 ;;		Unchanged: 0/0
 19545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19550 ;;Total ram usage:        0 bytes
 19551 ;; Hardware stack levels used:    1
 19552 ;; Hardware stack levels required when called:   11
 19553 ;; This function calls:
 19554 ;;		_TimerDone
 19555 ;; This function is called by:
 19556 ;;		_main
 19557 ;;		_check_help
 19558 ;; This function uses a reentrant model
 19559 ;;
 19560                           
 19561                           	psect	text77
 19562  018F78                     __ptext77:
 19563                           	opt callstack 0
 19564  018F78                     _set_display_info:
 19565                           	opt callstack 19
 19566                           
 19567                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19568                           
 19569                           ; BSR set to: 2
 19570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19571                           ;incstack = 0
 19572  018F78  0E07               	movlw	7
 19573  018F7A  6EE6               	movwf	postinc1,c
 19574  018F7C  ECAF  F0C5         	call	_TimerDone	;wreg free
 19575  018F80  5025               	movf	btemp^0,w,c
 19576  018F82  B4D8               	btfsc	status,2,c
 19577  018F84  D006               	goto	l1643
 19578                           
 19579                           ;mconfig.c: 205:   old_info = V.response.info;
 19580  018F86  0102               	movlb	2	; () banked
 19581  018F88  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19582                           
 19583                           ; BSR set to: 2
 19584                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19585                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19586  018F8A  0EFF               	movlw	-1
 19587  018F8C  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19588  018F92                     l1643:
 19589                           
 19590                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19591  018F92  52E5               	movf	postdec1,f,c
 19592  018F94  0012               	return		;funcret
 19593  018F96                     __end_of_set_display_info:
 19594                           	opt callstack 0
 19595                           
 19596 ;; *************** function _mode_lamp_dim *****************
 19597 ;; Defined at:
 19598 ;;		line 13 in file "mconfig.c"
 19599 ;; Parameters:    Size  Location     Type
 19600 ;;  level           2  [STACK] const unsigned short 
 19601 ;; Auto vars:     Size  Location     Type
 19602 ;;		None
 19603 ;; Return value:  Size  Location     Type
 19604 ;;                  1  [STACK] void 
 19605 ;; Registers used:
 19606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19607 ;; Tracked objects:
 19608 ;;		On entry : 0/2
 19609 ;;		On exit  : 0/0
 19610 ;;		Unchanged: 0/0
 19611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19616 ;;Total ram usage:        0 bytes
 19617 ;; Hardware stack levels used:    1
 19618 ;; Hardware stack levels required when called:   11
 19619 ;; This function calls:
 19620 ;;		_PWM8_LoadDutyValue
 19621 ;; This function is called by:
 19622 ;;		_main
 19623 ;;		_check_help
 19624 ;; This function uses a reentrant model
 19625 ;;
 19626                           
 19627                           	psect	text78
 19628  01903E                     __ptext78:
 19629                           	opt callstack 0
 19630  01903E                     _mode_lamp_dim:
 19631                           	opt callstack 19
 19632                           
 19633                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19634                           ;stkvar	_level @ sp[(0)+-2]
 19635                           
 19636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19637                           ;incstack = 0
 19638  01903E  0EFE               	movlw	-2
 19639  019040  006F FF8F FFE6     	movff	plusw1,postinc1
 19640  019046  006F FF8F FFE6     	movff	plusw1,postinc1
 19641  01904C  EC47  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 19642                           
 19643                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19644  019050  52E5               	movf	postdec1,f,c
 19645  019052  52E5               	movf	postdec1,f,c
 19646  019054  0012               	return		;funcret
 19647  019056                     __end_of_mode_lamp_dim:
 19648                           	opt callstack 0
 19649                           
 19650 ;; *************** function _mode_lamp_bright *****************
 19651 ;; Defined at:
 19652 ;;		line 18 in file "mconfig.c"
 19653 ;; Parameters:    Size  Location     Type
 19654 ;;		None
 19655 ;; Auto vars:     Size  Location     Type
 19656 ;;		None
 19657 ;; Return value:  Size  Location     Type
 19658 ;;                  1  [STACK] void 
 19659 ;; Registers used:
 19660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19661 ;; Tracked objects:
 19662 ;;		On entry : 0/0
 19663 ;;		On exit  : 0/0
 19664 ;;		Unchanged: 0/0
 19665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19670 ;;Total ram usage:        0 bytes
 19671 ;; Hardware stack levels used:    1
 19672 ;; Hardware stack levels required when called:   11
 19673 ;; This function calls:
 19674 ;;		_PWM8_LoadDutyValue
 19675 ;; This function is called by:
 19676 ;;		_check_help
 19677 ;; This function uses a reentrant model
 19678 ;;
 19679                           
 19680                           	psect	text79
 19681  019106                     __ptext79:
 19682                           	opt callstack 0
 19683  019106                     _mode_lamp_bright:
 19684                           	opt callstack 18
 19685                           
 19686                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19687                           
 19688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19689                           ;incstack = 0
 19690  019106  0E2C               	movlw	44
 19691  019108  6EE6               	movwf	postinc1,c
 19692  01910A  0E01               	movlw	1
 19693  01910C  6EE6               	movwf	postinc1,c
 19694  01910E  EC47  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 19695                           
 19696                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19697  019112  0012               	return		;funcret
 19698  019114                     __end_of_mode_lamp_bright:
 19699                           	opt callstack 0
 19700                           
 19701 ;; *************** function _PWM8_LoadDutyValue *****************
 19702 ;; Defined at:
 19703 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19704 ;; Parameters:    Size  Location     Type
 19705 ;;  dutyValue       2  [STACK] unsigned short 
 19706 ;; Auto vars:     Size  Location     Type
 19707 ;;		None
 19708 ;; Return value:  Size  Location     Type
 19709 ;;                  1  [STACK] void 
 19710 ;; Registers used:
 19711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19712 ;; Tracked objects:
 19713 ;;		On entry : 0/2
 19714 ;;		On exit  : 0/0
 19715 ;;		Unchanged: 0/0
 19716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19721 ;;Total ram usage:        0 bytes
 19722 ;; Hardware stack levels used:    1
 19723 ;; Hardware stack levels required when called:   10
 19724 ;; This function calls:
 19725 ;;		Nothing
 19726 ;; This function is called by:
 19727 ;;		_mode_lamp_dim
 19728 ;;		_mode_lamp_bright
 19729 ;; This function uses a reentrant model
 19730 ;;
 19731                           
 19732                           	psect	text80
 19733  01868E                     __ptext80:
 19734                           	opt callstack 0
 19735  01868E                     _PWM8_LoadDutyValue:
 19736                           	opt callstack 19
 19737                           
 19738                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19739                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19740                           
 19741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19742                           ;incstack = 0
 19743  01868E  0EFE               	movlw	-2
 19744  018690  006F FF8C  F02F    	movff	plusw1,btemp+10
 19745  018696  0EFF               	movlw	-1
 19746  018698  006F FF8C  F030    	movff	plusw1,btemp+11
 19747  01869E  90D8               	bcf	status,0,c
 19748  0186A0  3230               	rrcf	(btemp+11)^0,f,c
 19749  0186A2  322F               	rrcf	(btemp+10)^0,f,c
 19750  0186A4  90D8               	bcf	status,0,c
 19751  0186A6  3230               	rrcf	(btemp+11)^0,f,c
 19752  0186A8  322F               	rrcf	(btemp+10)^0,f,c
 19753  0186AA  502F               	movf	(btemp+10)^0,w,c
 19754  0186AC  6E61               	movwf	97,c	;volatile
 19755                           
 19756                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19757                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19758  0186AE  0EFE               	movlw	-2
 19759  0186B0  006F FF8C  F030    	movff	plusw1,btemp+11
 19760  0186B6  0E03               	movlw	3
 19761  0186B8  1630               	andwf	(btemp+11)^0,f,c
 19762  0186BA  0E06               	movlw	6
 19763  0186BC  6E25               	movwf	btemp^0,c
 19764  0186BE                     u8035:
 19765  0186BE  90D8               	bcf	status,0,c
 19766  0186C0  3630               	rlcf	(btemp+11)^0,f,c
 19767  0186C2  2E25               	decfsz	btemp^0,f,c
 19768  0186C4  D7FC               	goto	u8035
 19769  0186C6  5030               	movf	(btemp+11)^0,w,c
 19770  0186C8  6E60               	movwf	96,c	;volatile
 19771                           
 19772                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19773  0186CA  52E5               	movf	postdec1,f,c
 19774  0186CC  52E5               	movf	postdec1,f,c
 19775  0186CE  0012               	return		;funcret
 19776  0186D0                     __end_of_PWM8_LoadDutyValue:
 19777                           	opt callstack 0
 19778                           
 19779 ;; *************** function _help_button *****************
 19780 ;; Defined at:
 19781 ;;		line 26 in file "mconfig.c"
 19782 ;; Parameters:    Size  Location     Type
 19783 ;;		None
 19784 ;; Auto vars:     Size  Location     Type
 19785 ;;		None
 19786 ;; Return value:  Size  Location     Type
 19787 ;;                  1  [STACK] _Bool 
 19788 ;; Registers used:
 19789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19790 ;; Tracked objects:
 19791 ;;		On entry : 0/2
 19792 ;;		On exit  : 0/0
 19793 ;;		Unchanged: 0/0
 19794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19799 ;;Total ram usage:        0 bytes
 19800 ;; Hardware stack levels used:    1
 19801 ;; Hardware stack levels required when called:   11
 19802 ;; This function calls:
 19803 ;;		_StartTimer
 19804 ;;		_TimerDone
 19805 ;; This function is called by:
 19806 ;;		_check_help
 19807 ;; This function uses a reentrant model
 19808 ;;
 19809                           
 19810                           	psect	text81
 19811  01880E                     __ptext81:
 19812                           	opt callstack 0
 19813  01880E                     _help_button:
 19814                           	opt callstack 18
 19815                           
 19816                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19817                           
 19818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19819                           ;incstack = 0
 19820  01880E  B0CB               	btfsc	203,0,c	;volatile
 19821  018810  D00C               	goto	l1586
 19822                           
 19823                           ;mconfig.c: 29:   V.help = 1;
 19824  018812  0102               	movlb	2	; () banked
 19825  018814  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19826                           
 19827                           ; BSR set to: 2
 19828                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19829  018816  0E08               	movlw	8
 19830  018818  6EE6               	movwf	postinc1,c
 19831  01881A  ECAF  F0C5         	call	_TimerDone	;wreg free
 19832  01881E  5025               	movf	btemp^0,w,c
 19833  018820  B4D8               	btfsc	status,2,c
 19834  018822  D003               	goto	l1586
 19835                           
 19836                           ;mconfig.c: 31:    return 1;
 19837  018824  0E01               	movlw	1
 19838  018826  6E25               	movwf	btemp^0,c
 19839  018828  0012               	return	
 19840  01882A                     l1586:
 19841                           
 19842                           ;mconfig.c: 34:  if (!V.help)
 19843  01882A  0102               	movlb	2	; () banked
 19844  01882C  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19845  01882E  D008               	goto	l9051
 19846                           
 19847                           ; BSR set to: 2
 19848                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19849  018830  0E2C               	movlw	44
 19850  018832  6EE6               	movwf	postinc1,c
 19851  018834  0E01               	movlw	1
 19852  018836  6EE6               	movwf	postinc1,c
 19853  018838  0E08               	movlw	8
 19854  01883A  6EE6               	movwf	postinc1,c
 19855  01883C  EC68  F0C3         	call	_StartTimer	;wreg free
 19856  018840                     l9051:
 19857                           
 19858                           ;mconfig.c: 37:  return 0;
 19859  018840  0E00               	movlw	0
 19860  018842  6E25               	movwf	btemp^0,c
 19861                           
 19862                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19863  018844  0012               	return		;funcret
 19864  018846                     __end_of_help_button:
 19865                           	opt callstack 0
 19866                           
 19867 ;; *************** function _TimerDone *****************
 19868 ;; Defined at:
 19869 ;;		line 20 in file "timers.c"
 19870 ;; Parameters:    Size  Location     Type
 19871 ;;  timer           1  [STACK] const unsigned char 
 19872 ;; Auto vars:     Size  Location     Type
 19873 ;;		None
 19874 ;; Return value:  Size  Location     Type
 19875 ;;                  1  [STACK] _Bool 
 19876 ;; Registers used:
 19877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19878 ;; Tracked objects:
 19879 ;;		On entry : 0/1
 19880 ;;		On exit  : 0/0
 19881 ;;		Unchanged: 0/0
 19882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19887 ;;Total ram usage:        0 bytes
 19888 ;; Hardware stack levels used:    1
 19889 ;; Hardware stack levels required when called:   10
 19890 ;; This function calls:
 19891 ;;		Nothing
 19892 ;; This function is called by:
 19893 ;;		_main
 19894 ;;		_WaitMs
 19895 ;;		_help_button
 19896 ;;		_check_help
 19897 ;;		_set_display_info
 19898 ;; This function uses a reentrant model
 19899 ;;
 19900                           
 19901                           	psect	text82
 19902  018B5E                     __ptext82:
 19903                           	opt callstack 0
 19904  018B5E                     _TimerDone:
 19905                           	opt callstack 19
 19906                           
 19907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19908                           ;incstack = 0
 19909  018B5E  0004               	clrwdt		;# 
 19910                           
 19911                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19912                           ;stkvar	_timer @ sp[(0)+-1]
 19913  018B60  0EFF               	movlw	-1
 19914  018B62  50E3               	movf	plusw1,w,c
 19915  018B64  0D02               	mullw	2
 19916  018B66  0E8D               	movlw	low _tickCount
 19917  018B68  24F3               	addwf	243,w,c
 19918  018B6A  6ED9               	movwf	fsr2l,c
 19919  018B6C  0E01               	movlw	high _tickCount
 19920  018B6E  20F4               	addwfc	prodh,w,c
 19921  018B70  6EDA               	movwf	fsr2h,c
 19922  018B72  50DE               	movf	postinc2,w,c
 19923  018B74  10DE               	iorwf	postinc2,w,c
 19924  018B76  A4D8               	btfss	status,2,c
 19925  018B78  D002               	goto	l8373
 19926                           
 19927                           ;timers.c: 24:   return 1;
 19928  018B7A  0E01               	movlw	1
 19929  018B7C  D001               	goto	L20
 19930  018B7E                     l8373:
 19931                           
 19932                           ;timers.c: 26:  return 0;
 19933  018B7E  0E00               	movlw	0
 19934  018B80                     L20:
 19935  018B80  6E25               	movwf	btemp^0,c
 19936                           
 19937                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19938  018B82  52E5               	movf	postdec1,f,c
 19939  018B84  0012               	return		;funcret
 19940  018B86                     __end_of_TimerDone:
 19941                           	opt callstack 0
 19942                           
 19943 ;; *************** function _StartTimer *****************
 19944 ;; Defined at:
 19945 ;;		line 12 in file "timers.c"
 19946 ;; Parameters:    Size  Location     Type
 19947 ;;  timer           1  [STACK] const unsigned char 
 19948 ;;  count           2  [STACK] const unsigned short 
 19949 ;; Auto vars:     Size  Location     Type
 19950 ;;		None
 19951 ;; Return value:  Size  Location     Type
 19952 ;;                  1  [STACK] void 
 19953 ;; Registers used:
 19954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19955 ;; Tracked objects:
 19956 ;;		On entry : 0/0
 19957 ;;		On exit  : 0/0
 19958 ;;		Unchanged: 0/0
 19959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19964 ;;Total ram usage:        0 bytes
 19965 ;; Hardware stack levels used:    1
 19966 ;; Hardware stack levels required when called:   10
 19967 ;; This function calls:
 19968 ;;		Nothing
 19969 ;; This function is called by:
 19970 ;;		_main
 19971 ;;		_WaitMs
 19972 ;;		_help_button
 19973 ;;		_check_help
 19974 ;; This function uses a reentrant model
 19975 ;;
 19976                           
 19977                           	psect	text83
 19978  0186D0                     __ptext83:
 19979                           	opt callstack 0
 19980  0186D0                     _StartTimer:
 19981                           	opt callstack 17
 19982                           
 19983                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 19984                           ;stkvar	_count @ sp[(0)+-3]
 19985                           
 19986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19987                           ;incstack = 0
 19988  0186D0  0EFD               	movlw	-3
 19989  0186D2  006F FF8C  F02F    	movff	plusw1,btemp+10
 19990  0186D8  0EFE               	movlw	-2
 19991  0186DA  006F FF8C  F030    	movff	plusw1,btemp+11
 19992  0186E0  90D8               	bcf	status,0,c
 19993  0186E2  342F               	rlcf	(btemp+10)^0,w,c
 19994  0186E4  6E2D               	movwf	(btemp+8)^0,c
 19995  0186E6  3430               	rlcf	(btemp+11)^0,w,c
 19996  0186E8  6E2E               	movwf	(btemp+9)^0,c
 19997                           
 19998                           ;stkvar	_timer @ sp[(0)+-1]
 19999  0186EA  0EFF               	movlw	-1
 20000  0186EC  50E3               	movf	plusw1,w,c
 20001  0186EE  0D02               	mullw	2
 20002  0186F0  0E8D               	movlw	low _tickCount
 20003  0186F2  24F3               	addwf	243,w,c
 20004  0186F4  6ED9               	movwf	fsr2l,c
 20005  0186F6  0E01               	movlw	high _tickCount
 20006  0186F8  20F4               	addwfc	prodh,w,c
 20007  0186FA  6EDA               	movwf	fsr2h,c
 20008  0186FC  0060  F0B7  FFDE   	movff	btemp+8,postinc2
 20009  018702  0060  F0BB  FFDD   	movff	btemp+9,postdec2
 20010                           
 20011                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20012  018708  52E5               	movf	postdec1,f,c
 20013  01870A  52E5               	movf	postdec1,f,c
 20014  01870C  52E5               	movf	postdec1,f,c
 20015  01870E  0012               	return		;funcret
 20016  018710                     __end_of_StartTimer:
 20017                           	opt callstack 0
 20018                           
 20019 ;; *************** function _display_info *****************
 20020 ;; Defined at:
 20021 ;;		line 190 in file "mconfig.c"
 20022 ;; Parameters:    Size  Location     Type
 20023 ;;		None
 20024 ;; Auto vars:     Size  Location     Type
 20025 ;;		None
 20026 ;; Return value:  Size  Location     Type
 20027 ;;                  1  [STACK] enum E16518
 20028 ;; Registers used:
 20029 ;;		btemp
 20030 ;; Tracked objects:
 20031 ;;		On entry : 0/2
 20032 ;;		On exit  : 0/0
 20033 ;;		Unchanged: 0/0
 20034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20039 ;;Total ram usage:        0 bytes
 20040 ;; Hardware stack levels used:    1
 20041 ;; Hardware stack levels required when called:   10
 20042 ;; This function calls:
 20043 ;;		Nothing
 20044 ;; This function is called by:
 20045 ;;		_check_help
 20046 ;; This function uses a reentrant model
 20047 ;;
 20048                           
 20049                           	psect	text84
 20050  019166                     __ptext84:
 20051                           	opt callstack 0
 20052  019166                     _display_info:
 20053                           	opt callstack 19
 20054                           
 20055                           ;mconfig.c: 192:  return V.response.info;
 20056                           
 20057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20058                           ;incstack = 0
 20059  019166  0060  FA8C  F025   	movff	_V+163,btemp	;volatile
 20060                           
 20061                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20062  01916C  0012               	return		;funcret
 20063  01916E                     __end_of_display_info:
 20064                           	opt callstack 0
 20065                           
 20066 ;; *************** function _display_help *****************
 20067 ;; Defined at:
 20068 ;;		line 195 in file "mconfig.c"
 20069 ;; Parameters:    Size  Location     Type
 20070 ;;		None
 20071 ;; Auto vars:     Size  Location     Type
 20072 ;;		None
 20073 ;; Return value:  Size  Location     Type
 20074 ;;                  1  [STACK] enum E16518
 20075 ;; Registers used:
 20076 ;;		btemp
 20077 ;; Tracked objects:
 20078 ;;		On entry : 3F/2
 20079 ;;		On exit  : 0/0
 20080 ;;		Unchanged: 0/0
 20081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20086 ;;Total ram usage:        0 bytes
 20087 ;; Hardware stack levels used:    1
 20088 ;; Hardware stack levels required when called:   10
 20089 ;; This function calls:
 20090 ;;		Nothing
 20091 ;; This function is called by:
 20092 ;;		_check_help
 20093 ;; This function uses a reentrant model
 20094 ;;
 20095                           
 20096                           	psect	text85
 20097  01916E                     __ptext85:
 20098                           	opt callstack 0
 20099  01916E                     _display_help:
 20100                           	opt callstack 19
 20101                           
 20102                           ;mconfig.c: 197:  return V.response.help_temp;
 20103                           
 20104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20105                           ;incstack = 0
 20106  01916E  0060  FA90  F025   	movff	_V+164,btemp	;volatile
 20107                           
 20108                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20109  019174  0012               	return		;funcret
 20110  019176                     __end_of_display_help:
 20111                           	opt callstack 0
 20112                           
 20113 ;; *************** function _check_enter_button *****************
 20114 ;; Defined at:
 20115 ;;		line 42 in file "hid.c"
 20116 ;; Parameters:    Size  Location     Type
 20117 ;;  h               1  [STACK] PTR struct H_data
 20118 ;;		 -> H(7), 
 20119 ;; Auto vars:     Size  Location     Type
 20120 ;;		None
 20121 ;; Return value:  Size  Location     Type
 20122 ;;                  1  [STACK] _Bool 
 20123 ;; Registers used:
 20124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20125 ;; Tracked objects:
 20126 ;;		On entry : 0/1
 20127 ;;		On exit  : 0/0
 20128 ;;		Unchanged: 0/0
 20129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20134 ;;Total ram usage:        0 bytes
 20135 ;; Hardware stack levels used:    1
 20136 ;; Hardware stack levels required when called:   10
 20137 ;; This function calls:
 20138 ;;		Nothing
 20139 ;; This function is called by:
 20140 ;;		_main
 20141 ;; This function uses a reentrant model
 20142 ;;
 20143                           
 20144                           	psect	text86
 20145  018710                     __ptext86:
 20146                           	opt callstack 0
 20147  018710                     _check_enter_button:
 20148                           	opt callstack 20
 20149                           
 20150                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20151                           ;stkvar	_h @ sp[(0)+-1]
 20152                           
 20153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20154                           ;incstack = 0
 20155  018710  0EFF               	movlw	-1
 20156  018712  50E3               	movf	plusw1,w,c
 20157  018714  6ED9               	movwf	fsr2l,c
 20158  018716  6ADA               	clrf	fsr2h,c
 20159  018718  0E04               	movlw	4
 20160  01871A  26D9               	addwf	fsr2l,f,c
 20161  01871C  50DF               	movf	indf2,w,c
 20162  01871E  A4D8               	btfss	status,2,c
 20163  018720  D013               	goto	l9533
 20164                           
 20165                           ;stkvar	_h @ sp[(0)+-1]
 20166  018722  0EFF               	movlw	-1
 20167  018724  50E3               	movf	plusw1,w,c
 20168  018726  6ED9               	movwf	fsr2l,c
 20169  018728  6ADA               	clrf	fsr2h,c
 20170  01872A  0E05               	movlw	5
 20171  01872C  26D9               	addwf	fsr2l,f,c
 20172  01872E  50DF               	movf	indf2,w,c
 20173  018730  A4D8               	btfss	status,2,c
 20174  018732  D00A               	goto	l9533
 20175                           
 20176                           ;hid.c: 45:   h->wait_enter = 1;
 20177                           ;stkvar	_h @ sp[(0)+-1]
 20178  018734  0EFF               	movlw	-1
 20179  018736  50E3               	movf	plusw1,w,c
 20180  018738  6ED9               	movwf	fsr2l,c
 20181  01873A  6ADA               	clrf	fsr2h,c
 20182  01873C  0E04               	movlw	4
 20183  01873E  26D9               	addwf	fsr2l,f,c
 20184  018740  0E01               	movlw	1
 20185  018742  6EDF               	movwf	indf2,c
 20186                           
 20187                           ;hid.c: 46:   return 1;
 20188  018744  0E01               	movlw	1
 20189  018746  D001               	goto	L21
 20190  018748                     l9533:
 20191                           
 20192                           ;hid.c: 48:  return 0;
 20193  018748  0E00               	movlw	0
 20194  01874A                     L21:
 20195  01874A  6E25               	movwf	btemp^0,c
 20196                           
 20197                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20198  01874C  52E5               	movf	postdec1,f,c
 20199  01874E  0012               	return		;funcret
 20200  018750                     __end_of_check_enter_button:
 20201                           	opt callstack 0
 20202                           
 20203 ;; *************** function _check_adc_scan *****************
 20204 ;; Defined at:
 20205 ;;		line 56 in file "daq.c"
 20206 ;; Parameters:    Size  Location     Type
 20207 ;;		None
 20208 ;; Auto vars:     Size  Location     Type
 20209 ;;		None
 20210 ;; Return value:  Size  Location     Type
 20211 ;;                  1  [STACK] _Bool 
 20212 ;; Registers used:
 20213 ;;		btemp
 20214 ;; Tracked objects:
 20215 ;;		On entry : 0/1
 20216 ;;		On exit  : 0/0
 20217 ;;		Unchanged: 0/0
 20218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20223 ;;Total ram usage:        0 bytes
 20224 ;; Hardware stack levels used:    1
 20225 ;; Hardware stack levels required when called:   10
 20226 ;; This function calls:
 20227 ;;		Nothing
 20228 ;; This function is called by:
 20229 ;;		_main
 20230 ;; This function uses a reentrant model
 20231 ;;
 20232                           
 20233                           	psect	text87
 20234  019176                     __ptext87:
 20235                           	opt callstack 0
 20236  019176                     _check_adc_scan:
 20237                           	opt callstack 20
 20238                           
 20239                           ;daq.c: 58:  return R.done;
 20240                           
 20241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20242                           ;incstack = 0
 20243  019176  0060  F3A8  F025   	movff	_R+39,btemp	;volatile
 20244                           
 20245                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20246  01917C  0012               	return		;funcret
 20247  01917E                     __end_of_check_adc_scan:
 20248                           	opt callstack 0
 20249                           
 20250 ;; *************** function _calc_model_data *****************
 20251 ;; Defined at:
 20252 ;;		line 56 in file "mbmc.c"
 20253 ;; Parameters:    Size  Location     Type
 20254 ;;		None
 20255 ;; Auto vars:     Size  Location     Type
 20256 ;;		None
 20257 ;; Return value:  Size  Location     Type
 20258 ;;                  1  [STACK] void 
 20259 ;; Registers used:
 20260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20261 ;; Tracked objects:
 20262 ;;		On entry : 0/1
 20263 ;;		On exit  : 3F/39
 20264 ;;		Unchanged: 0/0
 20265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20270 ;;Total ram usage:        0 bytes
 20271 ;; Hardware stack levels used:    1
 20272 ;; Hardware stack levels required when called:   13
 20273 ;; This function calls:
 20274 ;;		___fladd
 20275 ;;		___flmul
 20276 ;;		___flsub
 20277 ;;		_lp_filter
 20278 ;;		_start_bsoc
 20279 ;;		_stop_bsoc
 20280 ;; This function is called by:
 20281 ;;		_main
 20282 ;;		_calc_bsoc
 20283 ;; This function uses a reentrant model
 20284 ;;
 20285                           
 20286                           	psect	text88
 20287  014BC2                     __ptext88:
 20288                           	opt callstack 0
 20289  014BC2                     _calc_model_data:
 20290                           	opt callstack 1
 20291                           
 20292                           ;mbmc.c: 58:  stop_bsoc();
 20293                           
 20294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20295                           ;incstack = 0
 20296  014BC2  ECCC  F0C8         	call	_stop_bsoc	;wreg free
 20297                           
 20298                           ; BSR set to: 57
 20299                           ;mbmc.c: 59:  C.update = 1;
 20300  014BC6  0E01               	movlw	1
 20301  014BC8  0101               	movlb	1	; () banked
 20302  014BCA  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 20303                           
 20304                           ;mbmc.c: 60:  if (!V.calib) {
 20305  014BCC  0102               	movlb	2	; () banked
 20306  014BCE  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20307  014BD0  A4D8               	btfss	status,2,c
 20308  014BD2  D169               	goto	l8515
 20309                           
 20310                           ; BSR set to: 2
 20311                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 20312  014BD4  C100  F144         	movff	_C,_C+68	;volatile
 20313  014BD8  C101  F145         	movff	_C+1,_C+69	;volatile
 20314  014BDC  C102  F146         	movff	_C+2,_C+70	;volatile
 20315  014BE0  C103  F147         	movff	_C+3,_C+71	;volatile
 20316                           
 20317                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 20318  014BE4  C104  F148         	movff	_C+4,_C+72	;volatile
 20319  014BE8  C105  F149         	movff	_C+5,_C+73	;volatile
 20320  014BEC  C106  F14A         	movff	_C+6,_C+74	;volatile
 20321  014BF0  C107  F14B         	movff	_C+7,_C+75	;volatile
 20322                           
 20323                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 20324  014BF4  C110  F154         	movff	_C+16,_C+84	;volatile
 20325  014BF8  C111  F155         	movff	_C+17,_C+85	;volatile
 20326  014BFC  C112  F156         	movff	_C+18,_C+86	;volatile
 20327  014C00  C113  F157         	movff	_C+19,_C+87	;volatile
 20328                           
 20329                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 20330  014C04  C114  F150         	movff	_C+20,_C+80	;volatile
 20331  014C08  C115  F151         	movff	_C+21,_C+81	;volatile
 20332  014C0C  C116  F152         	movff	_C+22,_C+82	;volatile
 20333  014C10  C117  F153         	movff	_C+23,_C+83	;volatile
 20334                           
 20335                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 20336  014C14  C130  F164         	movff	_C+48,_C+100	;volatile
 20337  014C18  C131  F165         	movff	_C+49,_C+101	;volatile
 20338  014C1C  C132  F166         	movff	_C+50,_C+102	;volatile
 20339  014C20  C133  F167         	movff	_C+51,_C+103	;volatile
 20340                           
 20341                           ; BSR set to: 2
 20342                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20343  014C24  0E01               	movlw	1
 20344  014C26  6EE6               	movwf	postinc1,c
 20345  014C28  0E10               	movlw	16
 20346  014C2A  6EE6               	movwf	postinc1,c
 20347  014C2C  0060  F403  FFE6   	movff	_C,postinc1
 20348  014C32  0060  F407  FFE6   	movff	_C+1,postinc1
 20349  014C38  0060  F40B  FFE6   	movff	_C+2,postinc1
 20350  014C3E  0060  F40F  FFE6   	movff	_C+3,postinc1
 20351  014C44  0060  F413  FFE6   	movff	_C+4,postinc1
 20352  014C4A  0060  F417  FFE6   	movff	_C+5,postinc1
 20353  014C50  0060  F41B  FFE6   	movff	_C+6,postinc1
 20354  014C56  0060  F41F  FFE6   	movff	_C+7,postinc1
 20355  014C5C  ECBC  F0C2         	call	___flsub	;wreg free
 20356  014C60  0060  F097  FFE6   	movff	btemp,postinc1
 20357  014C66  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20358  014C6C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20359  014C72  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20360  014C78  ECB6  F0B0         	call	_lp_filter	;wreg free
 20361  014C7C  0060  F094  F140   	movff	btemp,_C+64	;volatile
 20362  014C82  0060  F098  F141   	movff	btemp+1,_C+65	;volatile
 20363  014C88  0060  F09C  F142   	movff	btemp+2,_C+66	;volatile
 20364  014C8E  0060  F0A0  F143   	movff	btemp+3,_C+67	;volatile
 20365                           
 20366                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20367  014C94  0E01               	movlw	1
 20368  014C96  6EE6               	movwf	postinc1,c
 20369  014C98  0E11               	movlw	17
 20370  014C9A  6EE6               	movwf	postinc1,c
 20371  014C9C  0060  F553  FFE6   	movff	_C+84,postinc1
 20372  014CA2  0060  F557  FFE6   	movff	_C+85,postinc1
 20373  014CA8  0060  F55B  FFE6   	movff	_C+86,postinc1
 20374  014CAE  0060  F55F  FFE6   	movff	_C+87,postinc1
 20375  014CB4  0060  F503  FFE6   	movff	_C+64,postinc1
 20376  014CBA  0060  F507  FFE6   	movff	_C+65,postinc1
 20377  014CC0  0060  F50B  FFE6   	movff	_C+66,postinc1
 20378  014CC6  0060  F50F  FFE6   	movff	_C+67,postinc1
 20379  014CCC  EC08  F093         	call	___flmul	;wreg free
 20380  014CD0  0060  F097  FFE6   	movff	btemp,postinc1
 20381  014CD6  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20382  014CDC  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20383  014CE2  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20384  014CE8  ECB6  F0B0         	call	_lp_filter	;wreg free
 20385  014CEC  0060  F094  F168   	movff	btemp,_C+104	;volatile
 20386  014CF2  0060  F098  F169   	movff	btemp+1,_C+105	;volatile
 20387  014CF8  0060  F09C  F16A   	movff	btemp+2,_C+106	;volatile
 20388  014CFE  0060  F0A0  F16B   	movff	btemp+3,_C+107	;volatile
 20389                           
 20390                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20391  014D04  0E01               	movlw	1
 20392  014D06  6EE6               	movwf	postinc1,c
 20393  014D08  0E12               	movlw	18
 20394  014D0A  6EE6               	movwf	postinc1,c
 20395  014D0C  0060  F543  FFE6   	movff	_C+80,postinc1
 20396  014D12  0060  F547  FFE6   	movff	_C+81,postinc1
 20397  014D18  0060  F54B  FFE6   	movff	_C+82,postinc1
 20398  014D1E  0060  F54F  FFE6   	movff	_C+83,postinc1
 20399  014D24  0060  F523  FFE6   	movff	_C+72,postinc1
 20400  014D2A  0060  F527  FFE6   	movff	_C+73,postinc1
 20401  014D30  0060  F52B  FFE6   	movff	_C+74,postinc1
 20402  014D36  0060  F52F  FFE6   	movff	_C+75,postinc1
 20403  014D3C  EC08  F093         	call	___flmul	;wreg free
 20404  014D40  0060  F097  FFE6   	movff	btemp,postinc1
 20405  014D46  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20406  014D4C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20407  014D52  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20408  014D58  ECB6  F0B0         	call	_lp_filter	;wreg free
 20409  014D5C  0060  F094  F170   	movff	btemp,_C+112	;volatile
 20410  014D62  0060  F098  F171   	movff	btemp+1,_C+113	;volatile
 20411  014D68  0060  F09C  F172   	movff	btemp+2,_C+114	;volatile
 20412  014D6E  0060  F0A0  F173   	movff	btemp+3,_C+115	;volatile
 20413                           
 20414                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20415  014D74  0E01               	movlw	1
 20416  014D76  6EE6               	movwf	postinc1,c
 20417  014D78  0E13               	movlw	19
 20418  014D7A  6EE6               	movwf	postinc1,c
 20419  014D7C  0E00               	movlw	0
 20420  014D7E  6EE6               	movwf	postinc1,c
 20421  014D80  0E00               	movlw	0
 20422  014D82  6EE6               	movwf	postinc1,c
 20423  014D84  0E60               	movlw	96
 20424  014D86  6EE6               	movwf	postinc1,c
 20425  014D88  0EC1               	movlw	193
 20426  014D8A  6EE6               	movwf	postinc1,c
 20427  014D8C  0060  F593  FFE6   	movff	_C+100,postinc1
 20428  014D92  0060  F597  FFE6   	movff	_C+101,postinc1
 20429  014D98  0060  F59B  FFE6   	movff	_C+102,postinc1
 20430  014D9E  0060  F59F  FFE6   	movff	_C+103,postinc1
 20431  014DA4  0060  F503  FFE6   	movff	_C+64,postinc1
 20432  014DAA  0060  F507  FFE6   	movff	_C+65,postinc1
 20433  014DB0  0060  F50B  FFE6   	movff	_C+66,postinc1
 20434  014DB6  0060  F50F  FFE6   	movff	_C+67,postinc1
 20435  014DBC  EC08  F093         	call	___flmul	;wreg free
 20436  014DC0  0060  F097  FFE6   	movff	btemp,postinc1
 20437  014DC6  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20438  014DCC  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20439  014DD2  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20440  014DD8  EC1D  F097         	call	___fladd	;wreg free
 20441  014DDC  0060  F097  FFE6   	movff	btemp,postinc1
 20442  014DE2  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20443  014DE8  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20444  014DEE  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20445  014DF4  ECB6  F0B0         	call	_lp_filter	;wreg free
 20446  014DF8  0060  F094  F16C   	movff	btemp,_C+108	;volatile
 20447  014DFE  0060  F098  F16D   	movff	btemp+1,_C+109	;volatile
 20448  014E04  0060  F09C  F16E   	movff	btemp+2,_C+110	;volatile
 20449  014E0A  0060  F0A0  F16F   	movff	btemp+3,_C+111	;volatile
 20450                           
 20451                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20452  014E10  0E01               	movlw	1
 20453  014E12  6EE6               	movwf	postinc1,c
 20454  014E14  0E14               	movlw	20
 20455  014E16  6EE6               	movwf	postinc1,c
 20456  014E18  0060  F553  FFE6   	movff	_C+84,postinc1
 20457  014E1E  0060  F557  FFE6   	movff	_C+85,postinc1
 20458  014E24  0060  F55B  FFE6   	movff	_C+86,postinc1
 20459  014E2A  0060  F55F  FFE6   	movff	_C+87,postinc1
 20460  014E30  0060  F513  FFE6   	movff	_C+68,postinc1
 20461  014E36  0060  F517  FFE6   	movff	_C+69,postinc1
 20462  014E3C  0060  F51B  FFE6   	movff	_C+70,postinc1
 20463  014E42  0060  F51F  FFE6   	movff	_C+71,postinc1
 20464  014E48  EC08  F093         	call	___flmul	;wreg free
 20465  014E4C  0060  F097  FFE6   	movff	btemp,postinc1
 20466  014E52  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20467  014E58  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20468  014E5E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20469  014E64  ECB6  F0B0         	call	_lp_filter	;wreg free
 20470  014E68  0060  F094  F174   	movff	btemp,_C+116	;volatile
 20471  014E6E  0060  F098  F175   	movff	btemp+1,_C+117	;volatile
 20472  014E74  0060  F09C  F176   	movff	btemp+2,_C+118	;volatile
 20473  014E7A  0060  F0A0  F177   	movff	btemp+3,_C+119	;volatile
 20474                           
 20475                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 20476  014E80  0101               	movlb	1	; () banked
 20477  014E82  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 20478  014E84  D008               	goto	l8513
 20479                           
 20480                           ; BSR set to: 1
 20481                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 20482  014E86  0E17               	movlw	23
 20483  014E88  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 20484  014E8A  0EB7               	movlw	183
 20485  014E8C  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 20486  014E8E  0ED1               	movlw	209
 20487  014E90  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 20488  014E92  0E38               	movlw	56
 20489  014E94  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 20490  014E96                     l8513:
 20491                           
 20492                           ; BSR set to: 1
 20493                           ;mbmc.c: 79:   C.dynamic_ah = C.static_ah;
 20494  014E96  C180  F184         	movff	_C+128,_C+132	;volatile
 20495  014E9A  C181  F185         	movff	_C+129,_C+133	;volatile
 20496  014E9E  C182  F186         	movff	_C+130,_C+134	;volatile
 20497  014EA2  C183  F187         	movff	_C+131,_C+135	;volatile
 20498  014EA6                     l8515:
 20499                           
 20500                           ;mbmc.c: 81:  C.update = 0;
 20501  014EA6  0101               	movlb	1	; () banked
 20502  014EA8  6B8C               	clrf	(_C+140)& (0+255),b	;volatile
 20503                           
 20504                           ; BSR set to: 1
 20505                           ;mbmc.c: 82:  start_bsoc();
 20506  014EAA  ECCF  F0C8         	call	_start_bsoc	;wreg free
 20507                           
 20508                           ; BSR set to: 57
 20509                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20510  014EAE  0012               	return		;funcret
 20511  014EB0                     __end_of_calc_model_data:
 20512                           	opt callstack 0
 20513                           
 20514 ;; *************** function _stop_bsoc *****************
 20515 ;; Defined at:
 20516 ;;		line 26 in file "bsoc.c"
 20517 ;; Parameters:    Size  Location     Type
 20518 ;;		None
 20519 ;; Auto vars:     Size  Location     Type
 20520 ;;		None
 20521 ;; Return value:  Size  Location     Type
 20522 ;;                  1  [STACK] void 
 20523 ;; Registers used:
 20524 ;;		None
 20525 ;; Tracked objects:
 20526 ;;		On entry : 0/1
 20527 ;;		On exit  : 3F/39
 20528 ;;		Unchanged: 0/0
 20529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20534 ;;Total ram usage:        0 bytes
 20535 ;; Hardware stack levels used:    1
 20536 ;; Hardware stack levels required when called:   10
 20537 ;; This function calls:
 20538 ;;		Nothing
 20539 ;; This function is called by:
 20540 ;;		_calc_model_data
 20541 ;; This function uses a reentrant model
 20542 ;;
 20543                           
 20544                           	psect	text89
 20545  019198                     __ptext89:
 20546                           	opt callstack 0
 20547  019198                     _stop_bsoc:
 20548                           	opt callstack 3
 20549                           
 20550                           ;bsoc.c: 29:  PIE6bits.TMR3IE = 0;
 20551                           
 20552                           ; BSR set to: 57
 20553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20554                           ;incstack = 0
 20555  019198  0139               	movlb	57	; () banked
 20556  01919A  9D96               	bcf	150,6,b	;volatile
 20557                           
 20558                           ; BSR set to: 57
 20559                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20560  01919C  0012               	return		;funcret
 20561  01919E                     __end_of_stop_bsoc:
 20562                           	opt callstack 0
 20563                           
 20564 ;; *************** function _start_bsoc *****************
 20565 ;; Defined at:
 20566 ;;		line 20 in file "bsoc.c"
 20567 ;; Parameters:    Size  Location     Type
 20568 ;;		None
 20569 ;; Auto vars:     Size  Location     Type
 20570 ;;		None
 20571 ;; Return value:  Size  Location     Type
 20572 ;;                  1  [STACK] void 
 20573 ;; Registers used:
 20574 ;;		None
 20575 ;; Tracked objects:
 20576 ;;		On entry : 3F/1
 20577 ;;		On exit  : 3F/39
 20578 ;;		Unchanged: 0/0
 20579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20584 ;;Total ram usage:        0 bytes
 20585 ;; Hardware stack levels used:    1
 20586 ;; Hardware stack levels required when called:   10
 20587 ;; This function calls:
 20588 ;;		Nothing
 20589 ;; This function is called by:
 20590 ;;		_calc_model_data
 20591 ;; This function uses a reentrant model
 20592 ;;
 20593                           
 20594                           	psect	text90
 20595  01919E                     __ptext90:
 20596                           	opt callstack 0
 20597  01919E                     _start_bsoc:
 20598                           	opt callstack 3
 20599                           
 20600                           ;bsoc.c: 23:  PIE6bits.TMR3IE = 1;
 20601                           
 20602                           ; BSR set to: 57
 20603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20604                           ;incstack = 0
 20605  01919E  0139               	movlb	57	; () banked
 20606  0191A0  8D96               	bsf	150,6,b	;volatile
 20607                           
 20608                           ; BSR set to: 57
 20609                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20610  0191A2  0012               	return		;funcret
 20611  0191A4                     __end_of_start_bsoc:
 20612                           	opt callstack 0
 20613                           
 20614 ;; *************** function _lp_filter *****************
 20615 ;; Defined at:
 20616 ;;		line 18 in file "mbmc.c"
 20617 ;; Parameters:    Size  Location     Type
 20618 ;;  new             4  [STACK] const float 
 20619 ;;  bn              1  [STACK] const unsigned char 
 20620 ;;  slow            1  [STACK] const char 
 20621 ;; Auto vars:     Size  Location     Type
 20622 ;;  lp_speed        4  [STACK] float 
 20623 ;; Return value:  Size  Location     Type
 20624 ;;                  4  [STACK] float 
 20625 ;; Registers used:
 20626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20627 ;; Tracked objects:
 20628 ;;		On entry : 0/2
 20629 ;;		On exit  : 0/0
 20630 ;;		Unchanged: 0/0
 20631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20636 ;;Total ram usage:        0 bytes
 20637 ;; Hardware stack levels used:    1
 20638 ;; Hardware stack levels required when called:   12
 20639 ;; This function calls:
 20640 ;;		___fladd
 20641 ;;		___flmul
 20642 ;;		___flsub
 20643 ;; This function is called by:
 20644 ;;		_main
 20645 ;;		_convert_adc_data
 20646 ;;		_calc_model_data
 20647 ;; This function uses a reentrant model
 20648 ;;
 20649                           
 20650                           	psect	text91
 20651  01616C                     __ptext91:
 20652                           	opt callstack 0
 20653  01616C                     _lp_filter:
 20654                           	opt callstack 0
 20655                           
 20656                           ; BSR set to: 57
 20657                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20658  01616C  52E6               	movf	postinc1,f,c
 20659  01616E  52E6               	movf	postinc1,f,c
 20660  016170  52E6               	movf	postinc1,f,c
 20661  016172  52E6               	movf	postinc1,f,c
 20662                           
 20663                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 20664                           ;stkvar	_bn @ sp[(-4)+-5]
 20665                           
 20666                           ;incstack = 0
 20667  016174  0EF7               	movlw	-9
 20668  016176  006F FF8C  F025    	movff	plusw1,btemp
 20669  01617C  0E14               	movlw	20
 20670  01617E  6425               	cpfsgt	btemp^0,c
 20671  016180  D011               	goto	l8383
 20672  016182                     u7980:
 20673                           
 20674                           ;mbmc.c: 24:   return new;
 20675                           ;stkvar	_new @ sp[(-4)+-4]
 20676  016182  0EF8               	movlw	-8
 20677  016184  006F FF8C  F025    	movff	plusw1,btemp
 20678  01618A  0EF9               	movlw	-7
 20679  01618C  006F FF8C  F026    	movff	plusw1,btemp+1
 20680  016192  0EFA               	movlw	-6
 20681  016194  006F FF8C  F027    	movff	plusw1,btemp+2
 20682  01619A  0EFB               	movlw	-5
 20683  01619C  006F FF8C  F028    	movff	plusw1,btemp+3
 20684  0161A2  D0BF               	goto	l1734
 20685  0161A4                     l8383:
 20686                           
 20687                           ;mbmc.c: 26:  if (slow == (-1)) {
 20688                           ;stkvar	_slow @ sp[(-4)+-6]
 20689  0161A4  0EF6               	movlw	-10
 20690  0161A6  28E3               	incf	plusw1,w,c
 20691  0161A8  A4D8               	btfss	status,2,c
 20692  0161AA  D012               	goto	l8391
 20693                           
 20694                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 20695                           ;stkvar	_bn @ sp[(-4)+-5]
 20696  0161AC  0EF7               	movlw	-9
 20697  0161AE  50E3               	movf	plusw1,w,c
 20698  0161B0  0D04               	mullw	4
 20699  0161B2  0E00               	movlw	low lp_filter@smooth
 20700  0161B4  24F3               	addwf	243,w,c
 20701  0161B6  6ED9               	movwf	fsr2l,c
 20702  0161B8  0E03               	movlw	high lp_filter@smooth
 20703  0161BA  20F4               	addwfc	prodh,w,c
 20704  0161BC  6EDA               	movwf	fsr2h,c
 20705  0161BE  0E00               	movlw	0
 20706  0161C0  6EDE               	movwf	postinc2,c
 20707  0161C2  0E00               	movlw	0
 20708  0161C4  6EDE               	movwf	postinc2,c
 20709  0161C6  0E00               	movlw	0
 20710  0161C8  6EDE               	movwf	postinc2,c
 20711  0161CA  0E00               	movlw	0
 20712  0161CC  6EDD               	movwf	postdec2,c
 20713  0161CE  D7D9               	goto	u7980
 20714  0161D0                     l8391:
 20715                           
 20716                           ;mbmc.c: 31:  if (slow) {
 20717                           ;stkvar	_slow @ sp[(-4)+-6]
 20718  0161D0  0EF6               	movlw	-10
 20719  0161D2  50E3               	movf	plusw1,w,c
 20720  0161D4  B4D8               	btfsc	status,2,c
 20721  0161D6  D008               	goto	l8395
 20722                           
 20723                           ;mbmc.c: 32:   lp_speed = 0.033;
 20724  0161D8  0E02               	movlw	2
 20725  0161DA  6E2D               	movwf	(btemp+8)^0,c
 20726  0161DC  0E2B               	movlw	43
 20727  0161DE  6E2E               	movwf	(btemp+9)^0,c
 20728  0161E0  0E07               	movlw	7
 20729  0161E2  6E2F               	movwf	(btemp+10)^0,c
 20730  0161E4  0E3D               	movlw	61
 20731  0161E6  D007               	goto	L22
 20732  0161E8                     l8395:
 20733                           
 20734                           ;mbmc.c: 34:   lp_speed = 0.125;
 20735  0161E8  0E00               	movlw	0
 20736  0161EA  6E2D               	movwf	(btemp+8)^0,c
 20737  0161EC  0E00               	movlw	0
 20738  0161EE  6E2E               	movwf	(btemp+9)^0,c
 20739  0161F0  0E00               	movlw	0
 20740  0161F2  6E2F               	movwf	(btemp+10)^0,c
 20741  0161F4  0E3E               	movlw	62
 20742  0161F6                     L22:
 20743  0161F6  6E30               	movwf	(btemp+11)^0,c
 20744                           
 20745                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20746  0161F8  0EFC               	movlw	-4
 20747  0161FA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 20748  016200  0EFD               	movlw	-3
 20749  016202  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 20750  016208  0EFE               	movlw	-2
 20751  01620A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 20752  016210  0EFF               	movlw	-1
 20753  016212  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 20754                           
 20755                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20756                           ;stkvar	_bn @ sp[(-4)+-5]
 20757  016218  0EF7               	movlw	-9
 20758  01621A  50E3               	movf	plusw1,w,c
 20759  01621C  0D04               	mullw	4
 20760  01621E  0E00               	movlw	low lp_filter@smooth
 20761  016220  24F3               	addwf	243,w,c
 20762  016222  6ED9               	movwf	fsr2l,c
 20763  016224  0E03               	movlw	high lp_filter@smooth
 20764  016226  20F4               	addwfc	prodh,w,c
 20765  016228  6EDA               	movwf	fsr2h,c
 20766  01622A  006F FF7B FFE6     	movff	postinc2,postinc1
 20767  016230  006F FF7B FFE6     	movff	postinc2,postinc1
 20768  016236  006F FF7B FFE6     	movff	postinc2,postinc1
 20769  01623C  006F FF7B FFE6     	movff	postinc2,postinc1
 20770                           
 20771                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20772  016242  0EF8               	movlw	-8
 20773  016244  006F FF8F FFE6     	movff	plusw1,postinc1
 20774  01624A  006F FF8F FFE6     	movff	plusw1,postinc1
 20775  016250  006F FF8F FFE6     	movff	plusw1,postinc1
 20776  016256  006F FF8F FFE6     	movff	plusw1,postinc1
 20777                           
 20778                           ;stkvar	_bn @ sp[(-12)+-5]
 20779  01625C  0EEF               	movlw	-17
 20780  01625E  50E3               	movf	plusw1,w,c
 20781  016260  0D04               	mullw	4
 20782  016262  0E00               	movlw	low lp_filter@smooth
 20783  016264  24F3               	addwf	243,w,c
 20784  016266  6ED9               	movwf	fsr2l,c
 20785  016268  0E03               	movlw	high lp_filter@smooth
 20786  01626A  20F4               	addwfc	prodh,w,c
 20787  01626C  6EDA               	movwf	fsr2h,c
 20788  01626E  006F FF7B FFE6     	movff	postinc2,postinc1
 20789  016274  006F FF7B FFE6     	movff	postinc2,postinc1
 20790  01627A  006F FF7B FFE6     	movff	postinc2,postinc1
 20791  016280  006F FF7B FFE6     	movff	postinc2,postinc1
 20792                           
 20793                           ;stkvar	_new @ sp[(-16)+-4]
 20794  016286  0EEC               	movlw	-20
 20795  016288  006F FF8F FFE6     	movff	plusw1,postinc1
 20796  01628E  006F FF8F FFE6     	movff	plusw1,postinc1
 20797  016294  006F FF8F FFE6     	movff	plusw1,postinc1
 20798  01629A  006F FF8F FFE6     	movff	plusw1,postinc1
 20799  0162A0  ECBC  F0C2         	call	___flsub	;wreg free
 20800  0162A4  0060  F097  FFE6   	movff	btemp,postinc1
 20801  0162AA  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20802  0162B0  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20803  0162B6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20804  0162BC  EC08  F093         	call	___flmul	;wreg free
 20805  0162C0  0060  F097  FFE6   	movff	btemp,postinc1
 20806  0162C6  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20807  0162CC  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20808  0162D2  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20809  0162D8  EC1D  F097         	call	___fladd	;wreg free
 20810                           
 20811                           ;stkvar	_bn @ sp[(-4)+-5]
 20812  0162DC  0EF7               	movlw	-9
 20813  0162DE  50E3               	movf	plusw1,w,c
 20814  0162E0  0D04               	mullw	4
 20815  0162E2  0E00               	movlw	low lp_filter@smooth
 20816  0162E4  24F3               	addwf	243,w,c
 20817  0162E6  6ED9               	movwf	fsr2l,c
 20818  0162E8  0E03               	movlw	high lp_filter@smooth
 20819  0162EA  20F4               	addwfc	prodh,w,c
 20820  0162EC  6EDA               	movwf	fsr2h,c
 20821  0162EE  0060  F097  FFDE   	movff	btemp,postinc2
 20822  0162F4  0060  F09B  FFDE   	movff	btemp+1,postinc2
 20823  0162FA  0060  F09F  FFDE   	movff	btemp+2,postinc2
 20824  016300  0060  F0A3  FFDD   	movff	btemp+3,postdec2
 20825  016306  52DD               	movf	postdec2,f,c
 20826  016308  52DD               	movf	postdec2,f,c
 20827  01630A  006F FF78  F025    	movff	postinc2,btemp
 20828  016310  006F FF78  F026    	movff	postinc2,btemp+1
 20829  016316  006F FF78  F027    	movff	postinc2,btemp+2
 20830  01631C  006F FF78  F028    	movff	postinc2,btemp+3
 20831  016322                     l1734:
 20832                           
 20833                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20834  016322  0EF6               	movlw	246
 20835  016324  26E1               	addwf	fsr1l,f,c
 20836  016326  0EFF               	movlw	255
 20837  016328  22E2               	addwfc	fsr1h,f,c
 20838  01632A  0012               	return		;funcret
 20839  01632C                     __end_of_lp_filter:
 20840                           	opt callstack 0
 20841                           
 20842 ;; *************** function ___flsub *****************
 20843 ;; Defined at:
 20844 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20845 ;; Parameters:    Size  Location     Type
 20846 ;;  b               4  [STACK] float 
 20847 ;;  a               4  [STACK] float 
 20848 ;; Auto vars:     Size  Location     Type
 20849 ;;		None
 20850 ;; Return value:  Size  Location     Type
 20851 ;;                  4  [STACK] float 
 20852 ;; Registers used:
 20853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20854 ;; Tracked objects:
 20855 ;;		On entry : 0/2
 20856 ;;		On exit  : 0/0
 20857 ;;		Unchanged: 0/0
 20858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20863 ;;Total ram usage:        0 bytes
 20864 ;; Hardware stack levels used:    1
 20865 ;; Hardware stack levels required when called:   11
 20866 ;; This function calls:
 20867 ;;		___fladd
 20868 ;; This function is called by:
 20869 ;;		_conv_raw_result
 20870 ;;		_lp_filter
 20871 ;;		_calc_model_data
 20872 ;;		_efgtoa
 20873 ;; This function uses a reentrant model
 20874 ;;
 20875                           
 20876                           	psect	text92
 20877  018578                     __ptext92:
 20878                           	opt callstack 0
 20879  018578                     ___flsub:
 20880                           	opt callstack 1
 20881                           
 20882                           ;stkvar	_a @ sp[(0)+-8]
 20883                           
 20884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20885                           ;incstack = 0
 20886  018578  0EFB               	movlw	-5
 20887  01857A  7EE3               	btg	plusw1,7,c
 20888                           
 20889                           ;stkvar	_a @ sp[(0)+-8]
 20890  01857C  0EF8               	movlw	-8
 20891  01857E  006F FF8F FFE6     	movff	plusw1,postinc1
 20892  018584  006F FF8F FFE6     	movff	plusw1,postinc1
 20893  01858A  006F FF8F FFE6     	movff	plusw1,postinc1
 20894  018590  006F FF8F FFE6     	movff	plusw1,postinc1
 20895                           
 20896                           ;stkvar	_b @ sp[(-4)+-4]
 20897  018596  0EF8               	movlw	-8
 20898  018598  006F FF8F FFE6     	movff	plusw1,postinc1
 20899  01859E  006F FF8F FFE6     	movff	plusw1,postinc1
 20900  0185A4  006F FF8F FFE6     	movff	plusw1,postinc1
 20901  0185AA  006F FF8F FFE6     	movff	plusw1,postinc1
 20902  0185B0  EC1D  F097         	call	___fladd	;wreg free
 20903                           
 20904                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20905  0185B4  0EF8               	movlw	248
 20906  0185B6  26E1               	addwf	fsr1l,f,c
 20907  0185B8  0EFF               	movlw	255
 20908  0185BA  22E2               	addwfc	fsr1h,f,c
 20909  0185BC  0012               	return		;funcret
 20910  0185BE                     __end_of___flsub:
 20911                           	opt callstack 0
 20912                           
 20913 ;; *************** function ___fladd *****************
 20914 ;; Defined at:
 20915 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20916 ;; Parameters:    Size  Location     Type
 20917 ;;  b               4  [STACK] float 
 20918 ;;  a               4  [STACK] float 
 20919 ;; Auto vars:     Size  Location     Type
 20920 ;;  grs             1  [STACK] unsigned char 
 20921 ;;  bexp            1  [STACK] unsigned char 
 20922 ;;  aexp            1  [STACK] unsigned char 
 20923 ;;  signs           1  [STACK] unsigned char 
 20924 ;; Return value:  Size  Location     Type
 20925 ;;                  4  [STACK] unsigned char 
 20926 ;; Registers used:
 20927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20928 ;; Tracked objects:
 20929 ;;		On entry : 0/0
 20930 ;;		On exit  : 0/0
 20931 ;;		Unchanged: 0/0
 20932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20937 ;;Total ram usage:        0 bytes
 20938 ;; Hardware stack levels used:    1
 20939 ;; Hardware stack levels required when called:   10
 20940 ;; This function calls:
 20941 ;;		Nothing
 20942 ;; This function is called by:
 20943 ;;		_lp_filter
 20944 ;;		_calc_model_data
 20945 ;;		_efgtoa
 20946 ;;		___flsub
 20947 ;; This function uses a reentrant model
 20948 ;;
 20949                           
 20950                           	psect	text93
 20951  012E3A                     __ptext93:
 20952                           	opt callstack 0
 20953  012E3A                     ___fladd:
 20954                           	opt callstack 0
 20955                           
 20956                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20957  012E3A  52E6               	movf	postinc1,f,c
 20958  012E3C  52E6               	movf	postinc1,f,c
 20959  012E3E  52E6               	movf	postinc1,f,c
 20960  012E40  52E6               	movf	postinc1,f,c
 20961                           
 20962                           ;stkvar	_b @ sp[(-4)+-4]
 20963                           
 20964                           ;incstack = 0
 20965  012E42  0EFB               	movlw	251
 20966  012E44  24E1               	addwf	fsr1l,w,c
 20967  012E46  6ED9               	movwf	fsr2l,c
 20968  012E48  0EFF               	movlw	255
 20969  012E4A  20E2               	addwfc	fsr1h,w,c
 20970  012E4C  6EDA               	movwf	fsr2h,c
 20971  012E4E  50DF               	movf	indf2,w,c
 20972  012E50  6E30               	movwf	(btemp+11)^0,c
 20973  012E52  0E80               	movlw	128
 20974  012E54  1630               	andwf	(btemp+11)^0,f,c
 20975                           
 20976                           ;stkvar	_signs @ sp[(-4)+3]
 20977  012E56  0EFF               	movlw	-1
 20978  012E58  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 20979                           
 20980                           ;stkvar	_b @ sp[(-4)+-4]
 20981  012E5E  0EFB               	movlw	251
 20982  012E60  24E1               	addwf	fsr1l,w,c
 20983  012E62  6ED9               	movwf	fsr2l,c
 20984  012E64  0EFF               	movlw	255
 20985  012E66  20E2               	addwfc	fsr1h,w,c
 20986  012E68  6EDA               	movwf	fsr2h,c
 20987  012E6A  50DF               	movf	indf2,w,c
 20988  012E6C  6E30               	movwf	(btemp+11)^0,c
 20989  012E6E  90D8               	bcf	status,0,c
 20990  012E70  3430               	rlcf	(btemp+11)^0,w,c
 20991  012E72  6E2F               	movwf	(btemp+10)^0,c
 20992                           
 20993                           ;stkvar	_bexp @ sp[(-4)+1]
 20994  012E74  0EFD               	movlw	-3
 20995  012E76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 20996                           
 20997                           ;stkvar	_b @ sp[(-4)+-4]
 20998  012E7C  0EFA               	movlw	250
 20999  012E7E  24E1               	addwf	fsr1l,w,c
 21000  012E80  6ED9               	movwf	fsr2l,c
 21001  012E82  0EFF               	movlw	255
 21002  012E84  20E2               	addwfc	fsr1h,w,c
 21003  012E86  6EDA               	movwf	fsr2h,c
 21004  012E88  AEDF               	btfss	indf2,7,c
 21005  012E8A  D002               	goto	l7969
 21006                           
 21007                           ;stkvar	_bexp @ sp[(-4)+1]
 21008  012E8C  0EFD               	movlw	-3
 21009  012E8E  80E3               	bsf	plusw1,0,c
 21010  012E90                     l7969:
 21011                           
 21012                           ;stkvar	_bexp @ sp[(-4)+1]
 21013  012E90  0EFD               	movlw	-3
 21014  012E92  50E3               	movf	plusw1,w,c
 21015  012E94  B4D8               	btfsc	status,2,c
 21016  012E96  D027               	goto	l7979
 21017                           
 21018                           ;stkvar	_bexp @ sp[(-4)+1]
 21019  012E98  0EFD               	movlw	-3
 21020  012E9A  28E3               	incf	plusw1,w,c
 21021  012E9C  A4D8               	btfss	status,2,c
 21022  012E9E  D018               	goto	l7975
 21023  012EA0  0E00               	movlw	0
 21024  012EA2  6E2D               	movwf	(btemp+8)^0,c
 21025  012EA4  0E00               	movlw	0
 21026  012EA6  6E2E               	movwf	(btemp+9)^0,c
 21027  012EA8  0E00               	movlw	0
 21028  012EAA  6E2F               	movwf	(btemp+10)^0,c
 21029  012EAC  0E00               	movlw	0
 21030  012EAE  6E30               	movwf	(btemp+11)^0,c
 21031                           
 21032                           ;stkvar	_b @ sp[(-4)+-4]
 21033  012EB0  0EF8               	movlw	-8
 21034  012EB2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21035  012EB8  0EF9               	movlw	-7
 21036  012EBA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21037  012EC0  0EFA               	movlw	-6
 21038  012EC2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21039  012EC8  0EFB               	movlw	-5
 21040  012ECA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21041  012ED0                     l7975:
 21042                           
 21043                           ;stkvar	_b @ sp[(-4)+-4]
 21044  012ED0  0EFA               	movlw	-6
 21045  012ED2  8EE3               	bsf	plusw1,7,c
 21046                           
 21047                           ;stkvar	_b @ sp[(-4)+-4]
 21048  012ED4  0EFB               	movlw	251
 21049  012ED6  24E1               	addwf	fsr1l,w,c
 21050  012ED8  6ED9               	movwf	fsr2l,c
 21051  012EDA  0EFF               	movlw	255
 21052  012EDC  20E2               	addwfc	fsr1h,w,c
 21053  012EDE  6EDA               	movwf	fsr2h,c
 21054  012EE0  0E00               	movlw	0
 21055  012EE2  6EDF               	movwf	indf2,c
 21056  012EE4  D018               	goto	l7981
 21057  012EE6                     l7979:
 21058  012EE6  0E00               	movlw	0
 21059  012EE8  6E2D               	movwf	(btemp+8)^0,c
 21060  012EEA  0E00               	movlw	0
 21061  012EEC  6E2E               	movwf	(btemp+9)^0,c
 21062  012EEE  0E00               	movlw	0
 21063  012EF0  6E2F               	movwf	(btemp+10)^0,c
 21064  012EF2  0E00               	movlw	0
 21065  012EF4  6E30               	movwf	(btemp+11)^0,c
 21066                           
 21067                           ;stkvar	_b @ sp[(-4)+-4]
 21068  012EF6  0EF8               	movlw	-8
 21069  012EF8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21070  012EFE  0EF9               	movlw	-7
 21071  012F00  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21072  012F06  0EFA               	movlw	-6
 21073  012F08  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21074  012F0E  0EFB               	movlw	-5
 21075  012F10  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21076  012F16                     l7981:
 21077                           
 21078                           ;stkvar	_a @ sp[(-4)+-8]
 21079  012F16  0EF7               	movlw	247
 21080  012F18  24E1               	addwf	fsr1l,w,c
 21081  012F1A  6ED9               	movwf	fsr2l,c
 21082  012F1C  0EFF               	movlw	255
 21083  012F1E  20E2               	addwfc	fsr1h,w,c
 21084  012F20  6EDA               	movwf	fsr2h,c
 21085  012F22  50DF               	movf	indf2,w,c
 21086  012F24  6E30               	movwf	(btemp+11)^0,c
 21087  012F26  0E80               	movlw	128
 21088  012F28  1630               	andwf	(btemp+11)^0,f,c
 21089                           
 21090                           ;stkvar	_aexp @ sp[(-4)+2]
 21091  012F2A  0EFE               	movlw	-2
 21092  012F2C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21093                           
 21094                           ;stkvar	_signs @ sp[(-4)+3]
 21095                           ;stkvar	_aexp @ sp[(-4)+2]
 21096  012F32  50E1               	movf	fsr1l,w,c
 21097  012F34  0FFE               	addlw	-2
 21098  012F36  6ED9               	movwf	fsr2l,c
 21099  012F38  50E2               	movf	fsr1h,w,c
 21100  012F3A  6EDA               	movwf	fsr2h,c
 21101  012F3C  0EFF               	movlw	255
 21102  012F3E  22DA               	addwfc	fsr2h,f,c
 21103  012F40  0EFF               	movlw	-1
 21104  012F42  50E3               	movf	plusw1,w,c
 21105  012F44  18DE               	xorwf	postinc2,w,c
 21106  012F46  B4D8               	btfsc	status,2,c
 21107  012F48  D002               	goto	l7987
 21108                           
 21109                           ;stkvar	_signs @ sp[(-4)+3]
 21110  012F4A  0EFF               	movlw	-1
 21111  012F4C  8CE3               	bsf	plusw1,6,c
 21112  012F4E                     l7987:
 21113                           
 21114                           ;stkvar	_a @ sp[(-4)+-8]
 21115  012F4E  0EF7               	movlw	247
 21116  012F50  24E1               	addwf	fsr1l,w,c
 21117  012F52  6ED9               	movwf	fsr2l,c
 21118  012F54  0EFF               	movlw	255
 21119  012F56  20E2               	addwfc	fsr1h,w,c
 21120  012F58  6EDA               	movwf	fsr2h,c
 21121  012F5A  50DF               	movf	indf2,w,c
 21122  012F5C  6E30               	movwf	(btemp+11)^0,c
 21123  012F5E  90D8               	bcf	status,0,c
 21124  012F60  3430               	rlcf	(btemp+11)^0,w,c
 21125  012F62  6E2F               	movwf	(btemp+10)^0,c
 21126                           
 21127                           ;stkvar	_aexp @ sp[(-4)+2]
 21128  012F64  0EFE               	movlw	-2
 21129  012F66  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21130                           
 21131                           ;stkvar	_a @ sp[(-4)+-8]
 21132  012F6C  0EF6               	movlw	246
 21133  012F6E  24E1               	addwf	fsr1l,w,c
 21134  012F70  6ED9               	movwf	fsr2l,c
 21135  012F72  0EFF               	movlw	255
 21136  012F74  20E2               	addwfc	fsr1h,w,c
 21137  012F76  6EDA               	movwf	fsr2h,c
 21138  012F78  AEDF               	btfss	indf2,7,c
 21139  012F7A  D002               	goto	l7993
 21140                           
 21141                           ;stkvar	_aexp @ sp[(-4)+2]
 21142  012F7C  0EFE               	movlw	-2
 21143  012F7E  80E3               	bsf	plusw1,0,c
 21144  012F80                     l7993:
 21145                           
 21146                           ;stkvar	_aexp @ sp[(-4)+2]
 21147  012F80  0EFE               	movlw	-2
 21148  012F82  50E3               	movf	plusw1,w,c
 21149  012F84  B4D8               	btfsc	status,2,c
 21150  012F86  D027               	goto	l8003
 21151                           
 21152                           ;stkvar	_aexp @ sp[(-4)+2]
 21153  012F88  0EFE               	movlw	-2
 21154  012F8A  28E3               	incf	plusw1,w,c
 21155  012F8C  A4D8               	btfss	status,2,c
 21156  012F8E  D018               	goto	l7999
 21157  012F90  0E00               	movlw	0
 21158  012F92  6E2D               	movwf	(btemp+8)^0,c
 21159  012F94  0E00               	movlw	0
 21160  012F96  6E2E               	movwf	(btemp+9)^0,c
 21161  012F98  0E00               	movlw	0
 21162  012F9A  6E2F               	movwf	(btemp+10)^0,c
 21163  012F9C  0E00               	movlw	0
 21164  012F9E  6E30               	movwf	(btemp+11)^0,c
 21165                           
 21166                           ;stkvar	_a @ sp[(-4)+-8]
 21167  012FA0  0EF4               	movlw	-12
 21168  012FA2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21169  012FA8  0EF5               	movlw	-11
 21170  012FAA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21171  012FB0  0EF6               	movlw	-10
 21172  012FB2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21173  012FB8  0EF7               	movlw	-9
 21174  012FBA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21175  012FC0                     l7999:
 21176                           
 21177                           ;stkvar	_a @ sp[(-4)+-8]
 21178  012FC0  0EF6               	movlw	-10
 21179  012FC2  8EE3               	bsf	plusw1,7,c
 21180                           
 21181                           ;stkvar	_a @ sp[(-4)+-8]
 21182  012FC4  0EF7               	movlw	247
 21183  012FC6  24E1               	addwf	fsr1l,w,c
 21184  012FC8  6ED9               	movwf	fsr2l,c
 21185  012FCA  0EFF               	movlw	255
 21186  012FCC  20E2               	addwfc	fsr1h,w,c
 21187  012FCE  6EDA               	movwf	fsr2h,c
 21188  012FD0  0E00               	movlw	0
 21189  012FD2  6EDF               	movwf	indf2,c
 21190  012FD4  D018               	goto	l8005
 21191  012FD6                     l8003:
 21192  012FD6  0E00               	movlw	0
 21193  012FD8  6E2D               	movwf	(btemp+8)^0,c
 21194  012FDA  0E00               	movlw	0
 21195  012FDC  6E2E               	movwf	(btemp+9)^0,c
 21196  012FDE  0E00               	movlw	0
 21197  012FE0  6E2F               	movwf	(btemp+10)^0,c
 21198  012FE2  0E00               	movlw	0
 21199  012FE4  6E30               	movwf	(btemp+11)^0,c
 21200                           
 21201                           ;stkvar	_a @ sp[(-4)+-8]
 21202  012FE6  0EF4               	movlw	-12
 21203  012FE8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21204  012FEE  0EF5               	movlw	-11
 21205  012FF0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21206  012FF6  0EF6               	movlw	-10
 21207  012FF8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21208  012FFE  0EF7               	movlw	-9
 21209  013000  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21210  013006                     l8005:
 21211                           
 21212                           ;stkvar	_bexp @ sp[(-4)+1]
 21213                           ;stkvar	_aexp @ sp[(-4)+2]
 21214  013006  50E1               	movf	fsr1l,w,c
 21215  013008  0FFE               	addlw	-2
 21216  01300A  6ED9               	movwf	fsr2l,c
 21217  01300C  50E2               	movf	fsr1h,w,c
 21218  01300E  6EDA               	movwf	fsr2h,c
 21219  013010  0EFF               	movlw	255
 21220  013012  22DA               	addwfc	fsr2h,f,c
 21221  013014  0EFD               	movlw	-3
 21222  013016  50E3               	movf	plusw1,w,c
 21223  013018  5CDE               	subwf	postinc2,w,c
 21224  01301A  B0D8               	btfsc	status,0,c
 21225  01301C  D0A4               	goto	l8041
 21226                           
 21227                           ;stkvar	_signs @ sp[(-4)+3]
 21228  01301E  0EFF               	movlw	-1
 21229  013020  ACE3               	btfss	plusw1,6,c
 21230  013022  D002               	goto	l8011
 21231                           
 21232                           ;stkvar	_signs @ sp[(-4)+3]
 21233  013024  0EFF               	movlw	-1
 21234  013026  7EE3               	btg	plusw1,7,c
 21235  013028                     l8011:
 21236                           
 21237                           ;stkvar	_bexp @ sp[(-4)+1]
 21238                           ;stkvar	_grs @ sp[(-4)+0]
 21239  013028  0EFD               	movlw	-3
 21240  01302A  006F FF8C  F025    	movff	plusw1,btemp
 21241  013030  0EFC               	movlw	-4
 21242  013032  0060  F097  FFE3   	movff	btemp,plusw1
 21243                           
 21244                           ;stkvar	_aexp @ sp[(-4)+2]
 21245                           ;stkvar	_bexp @ sp[(-4)+1]
 21246  013038  0EFE               	movlw	-2
 21247  01303A  006F FF8C  F025    	movff	plusw1,btemp
 21248  013040  0EFD               	movlw	-3
 21249  013042  0060  F097  FFE3   	movff	btemp,plusw1
 21250                           
 21251                           ;stkvar	_grs @ sp[(-4)+0]
 21252                           ;stkvar	_aexp @ sp[(-4)+2]
 21253  013048  0EFC               	movlw	-4
 21254  01304A  006F FF8C  F025    	movff	plusw1,btemp
 21255  013050  0EFE               	movlw	-2
 21256  013052  0060  F097  FFE3   	movff	btemp,plusw1
 21257                           
 21258                           ;stkvar	_b @ sp[(-4)+-4]
 21259                           ;stkvar	_grs @ sp[(-4)+0]
 21260  013058  0EF8               	movlw	-8
 21261  01305A  006F FF8C  F025    	movff	plusw1,btemp
 21262  013060  0EFC               	movlw	-4
 21263  013062  0060  F097  FFE3   	movff	btemp,plusw1
 21264                           
 21265                           ;stkvar	_a @ sp[(-4)+-8]
 21266                           ;stkvar	_b @ sp[(-4)+-4]
 21267  013068  0EF4               	movlw	-12
 21268  01306A  006F FF8C  F025    	movff	plusw1,btemp
 21269  013070  0EF8               	movlw	-8
 21270  013072  0060  F097  FFE3   	movff	btemp,plusw1
 21271                           
 21272                           ;stkvar	_grs @ sp[(-4)+0]
 21273                           ;stkvar	_a @ sp[(-4)+-8]
 21274  013078  0EFC               	movlw	-4
 21275  01307A  006F FF8C  F025    	movff	plusw1,btemp
 21276  013080  0EF4               	movlw	-12
 21277  013082  0060  F097  FFE3   	movff	btemp,plusw1
 21278                           
 21279                           ;stkvar	_b @ sp[(-4)+-4]
 21280  013088  0EF9               	movlw	249
 21281  01308A  24E1               	addwf	fsr1l,w,c
 21282  01308C  6ED9               	movwf	fsr2l,c
 21283  01308E  0EFF               	movlw	255
 21284  013090  20E2               	addwfc	fsr1h,w,c
 21285  013092  6EDA               	movwf	fsr2h,c
 21286  013094  50DF               	movf	indf2,w,c
 21287  013096  6E30               	movwf	(btemp+11)^0,c
 21288                           
 21289                           ;stkvar	_grs @ sp[(-4)+0]
 21290  013098  0EFC               	movlw	-4
 21291  01309A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21292                           
 21293                           ;stkvar	_a @ sp[(-4)+-8]
 21294  0130A0  0EF5               	movlw	245
 21295  0130A2  24E1               	addwf	fsr1l,w,c
 21296  0130A4  6ED9               	movwf	fsr2l,c
 21297  0130A6  0EFF               	movlw	255
 21298  0130A8  20E2               	addwfc	fsr1h,w,c
 21299  0130AA  6EDA               	movwf	fsr2h,c
 21300                           
 21301                           ;stkvar	_b @ sp[(-4)+-4]
 21302  0130AC  0EF9               	movlw	249
 21303  0130AE  24E1               	addwf	fsr1l,w,c
 21304  0130B0  6EE9               	movwf	fsr0l,c
 21305  0130B2  0EFF               	movlw	255
 21306  0130B4  20E2               	addwfc	fsr1h,w,c
 21307  0130B6  6EEA               	movwf	fsr0h,c
 21308  0130B8  006F FF7F FFEF     	movff	indf2,indf0
 21309                           
 21310                           ;stkvar	_grs @ sp[(-4)+0]
 21311                           ;stkvar	_a @ sp[(-4)+-8]
 21312  0130BE  0EF5               	movlw	245
 21313  0130C0  24E1               	addwf	fsr1l,w,c
 21314  0130C2  6ED9               	movwf	fsr2l,c
 21315  0130C4  0EFF               	movlw	255
 21316  0130C6  20E2               	addwfc	fsr1h,w,c
 21317  0130C8  6EDA               	movwf	fsr2h,c
 21318  0130CA  0EFC               	movlw	-4
 21319  0130CC  006F FF8F FFDF     	movff	plusw1,indf2
 21320                           
 21321                           ;stkvar	_b @ sp[(-4)+-4]
 21322  0130D2  0EFA               	movlw	250
 21323  0130D4  24E1               	addwf	fsr1l,w,c
 21324  0130D6  6ED9               	movwf	fsr2l,c
 21325  0130D8  0EFF               	movlw	255
 21326  0130DA  20E2               	addwfc	fsr1h,w,c
 21327  0130DC  6EDA               	movwf	fsr2h,c
 21328  0130DE  50DF               	movf	indf2,w,c
 21329  0130E0  6E30               	movwf	(btemp+11)^0,c
 21330                           
 21331                           ;stkvar	_grs @ sp[(-4)+0]
 21332  0130E2  0EFC               	movlw	-4
 21333  0130E4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21334                           
 21335                           ;stkvar	_a @ sp[(-4)+-8]
 21336  0130EA  0EF6               	movlw	246
 21337  0130EC  24E1               	addwf	fsr1l,w,c
 21338  0130EE  6ED9               	movwf	fsr2l,c
 21339  0130F0  0EFF               	movlw	255
 21340  0130F2  20E2               	addwfc	fsr1h,w,c
 21341  0130F4  6EDA               	movwf	fsr2h,c
 21342                           
 21343                           ;stkvar	_b @ sp[(-4)+-4]
 21344  0130F6  0EFA               	movlw	250
 21345  0130F8  24E1               	addwf	fsr1l,w,c
 21346  0130FA  6EE9               	movwf	fsr0l,c
 21347  0130FC  0EFF               	movlw	255
 21348  0130FE  20E2               	addwfc	fsr1h,w,c
 21349  013100  6EEA               	movwf	fsr0h,c
 21350  013102  006F FF7F FFEF     	movff	indf2,indf0
 21351                           
 21352                           ;stkvar	_grs @ sp[(-4)+0]
 21353                           ;stkvar	_a @ sp[(-4)+-8]
 21354  013108  0EF6               	movlw	246
 21355  01310A  24E1               	addwf	fsr1l,w,c
 21356  01310C  6ED9               	movwf	fsr2l,c
 21357  01310E  0EFF               	movlw	255
 21358  013110  20E2               	addwfc	fsr1h,w,c
 21359  013112  6EDA               	movwf	fsr2h,c
 21360  013114  0EFC               	movlw	-4
 21361  013116  006F FF8F FFDF     	movff	plusw1,indf2
 21362                           
 21363                           ;stkvar	_b @ sp[(-4)+-4]
 21364  01311C  0EFB               	movlw	251
 21365  01311E  24E1               	addwf	fsr1l,w,c
 21366  013120  6ED9               	movwf	fsr2l,c
 21367  013122  0EFF               	movlw	255
 21368  013124  20E2               	addwfc	fsr1h,w,c
 21369  013126  6EDA               	movwf	fsr2h,c
 21370  013128  50DF               	movf	indf2,w,c
 21371  01312A  6E30               	movwf	(btemp+11)^0,c
 21372                           
 21373                           ;stkvar	_grs @ sp[(-4)+0]
 21374  01312C  0EFC               	movlw	-4
 21375  01312E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21376                           
 21377                           ;stkvar	_a @ sp[(-4)+-8]
 21378  013134  0EF7               	movlw	247
 21379  013136  24E1               	addwf	fsr1l,w,c
 21380  013138  6ED9               	movwf	fsr2l,c
 21381  01313A  0EFF               	movlw	255
 21382  01313C  20E2               	addwfc	fsr1h,w,c
 21383  01313E  6EDA               	movwf	fsr2h,c
 21384                           
 21385                           ;stkvar	_b @ sp[(-4)+-4]
 21386  013140  0EFB               	movlw	251
 21387  013142  24E1               	addwf	fsr1l,w,c
 21388  013144  6EE9               	movwf	fsr0l,c
 21389  013146  0EFF               	movlw	255
 21390  013148  20E2               	addwfc	fsr1h,w,c
 21391  01314A  6EEA               	movwf	fsr0h,c
 21392  01314C  006F FF7F FFEF     	movff	indf2,indf0
 21393                           
 21394                           ;stkvar	_grs @ sp[(-4)+0]
 21395                           ;stkvar	_a @ sp[(-4)+-8]
 21396  013152  0EF7               	movlw	247
 21397  013154  24E1               	addwf	fsr1l,w,c
 21398  013156  6ED9               	movwf	fsr2l,c
 21399  013158  0EFF               	movlw	255
 21400  01315A  20E2               	addwfc	fsr1h,w,c
 21401  01315C  6EDA               	movwf	fsr2h,c
 21402  01315E  0EFC               	movlw	-4
 21403  013160  006F FF8F FFDF     	movff	plusw1,indf2
 21404  013166                     l8041:
 21405                           
 21406                           ;stkvar	_grs @ sp[(-4)+0]
 21407  013166  0EFC               	movlw	-4
 21408  013168  6AE3               	clrf	plusw1,c
 21409                           
 21410                           ;stkvar	_aexp @ sp[(-4)+2]
 21411  01316A  0EFE               	movlw	-2
 21412  01316C  50E3               	movf	plusw1,w,c
 21413  01316E  6E2F               	movwf	(btemp+10)^0,c
 21414  013170  6A30               	clrf	(btemp+11)^0,c
 21415                           
 21416                           ;stkvar	_bexp @ sp[(-4)+1]
 21417  013172  0EFD               	movlw	-3
 21418  013174  50E3               	movf	plusw1,w,c
 21419  013176  5E2F               	subwf	(btemp+10)^0,f,c
 21420  013178  0E00               	movlw	0
 21421  01317A  5A30               	subwfb	(btemp+11)^0,f,c
 21422  01317C  BE30               	btfsc	(btemp+11)^0,7,c
 21423  01317E  D062               	goto	l8065
 21424  013180  5030               	movf	(btemp+11)^0,w,c
 21425  013182  E104               	bnz	u7400
 21426  013184  0E1A               	movlw	26
 21427  013186  5C2F               	subwf	(btemp+10)^0,w,c
 21428  013188  A0D8               	btfss	status,0,c
 21429  01318A  D05C               	goto	l8065
 21430  01318C                     u7400:
 21431                           
 21432                           ;stkvar	_b @ sp[(-4)+-4]
 21433  01318C  0EF8               	movlw	-8
 21434  01318E  50E3               	movf	plusw1,w,c
 21435  013190  E10A               	bnz	u7411
 21436  013192  0EF9               	movlw	-7
 21437  013194  50E3               	movf	plusw1,w,c
 21438  013196  E107               	bnz	u7411
 21439  013198  0EFA               	movlw	-6
 21440  01319A  50E3               	movf	plusw1,w,c
 21441  01319C  E104               	bnz	u7411
 21442  01319E  0EFB               	movlw	-5
 21443  0131A0  50E3               	movf	plusw1,w,c
 21444  0131A2  B4D8               	btfsc	status,2,c
 21445  0131A4  D003               	goto	u7410
 21446  0131A6                     u7411:
 21447  0131A6  6A30               	clrf	(btemp+11)^0,c
 21448  0131A8  2A30               	incf	(btemp+11)^0,f,c
 21449  0131AA  D001               	goto	u7428
 21450  0131AC                     u7410:
 21451  0131AC  6A30               	clrf	(btemp+11)^0,c
 21452  0131AE                     u7428:
 21453                           
 21454                           ;stkvar	_grs @ sp[(-4)+0]
 21455  0131AE  0EFC               	movlw	-4
 21456  0131B0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21457                           
 21458                           ;stkvar	_b @ sp[(-4)+-4]
 21459  0131B6  0EF8               	movlw	-8
 21460  0131B8  6AE3               	clrf	plusw1,c
 21461  0131BA  0EF9               	movlw	-7
 21462  0131BC  6AE3               	clrf	plusw1,c
 21463  0131BE  0EFA               	movlw	-6
 21464  0131C0  6AE3               	clrf	plusw1,c
 21465  0131C2  0EFB               	movlw	-5
 21466  0131C4  6AE3               	clrf	plusw1,c
 21467                           
 21468                           ;stkvar	_aexp @ sp[(-4)+2]
 21469                           ;stkvar	_bexp @ sp[(-4)+1]
 21470  0131C6  0EFE               	movlw	-2
 21471  0131C8  006F FF8C  F025    	movff	plusw1,btemp
 21472  0131CE  0EFD               	movlw	-3
 21473  0131D0  0060  F097  FFE3   	movff	btemp,plusw1
 21474  0131D6  D042               	goto	u7460
 21475  0131D8                     l8051:
 21476                           
 21477                           ;stkvar	_grs @ sp[(-4)+0]
 21478  0131D8  0EFC               	movlw	-4
 21479  0131DA  A0E3               	btfss	plusw1,0,c
 21480  0131DC  D00D               	goto	l8055
 21481                           
 21482                           ;stkvar	_grs @ sp[(-4)+0]
 21483  0131DE  0EFC               	movlw	-4
 21484  0131E0  006F FF8C  F030    	movff	plusw1,btemp+11
 21485  0131E6  90D8               	bcf	status,0,c
 21486  0131E8  3230               	rrcf	(btemp+11)^0,f,c
 21487  0131EA  0E01               	movlw	1
 21488  0131EC  1230               	iorwf	(btemp+11)^0,f,c
 21489                           
 21490                           ;stkvar	_grs @ sp[(-4)+0]
 21491  0131EE  0EFC               	movlw	-4
 21492  0131F0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21493  0131F6  D009               	goto	l8057
 21494  0131F8                     l8055:
 21495                           
 21496                           ;stkvar	_grs @ sp[(-4)+0]
 21497  0131F8  50E1               	movf	fsr1l,w,c
 21498  0131FA  0FFC               	addlw	-4
 21499  0131FC  6ED9               	movwf	fsr2l,c
 21500  0131FE  50E2               	movf	fsr1h,w,c
 21501  013200  6EDA               	movwf	fsr2h,c
 21502  013202  0EFF               	movlw	255
 21503  013204  22DA               	addwfc	fsr2h,f,c
 21504  013206  90D8               	bcf	status,0,c
 21505  013208  32DF               	rrcf	indf2,f,c
 21506  01320A                     l8057:
 21507                           
 21508                           ;stkvar	_b @ sp[(-4)+-4]
 21509  01320A  0EF8               	movlw	-8
 21510  01320C  A0E3               	btfss	plusw1,0,c
 21511  01320E  D002               	goto	l8061
 21512                           
 21513                           ;stkvar	_grs @ sp[(-4)+0]
 21514  013210  0EFC               	movlw	-4
 21515  013212  8EE3               	bsf	plusw1,7,c
 21516  013214                     l8061:
 21517  013214  0E01               	movlw	1
 21518  013216  6E30               	movwf	(btemp+11)^0,c
 21519                           
 21520                           ;stkvar	_b @ sp[(-4)+-4]
 21521  013218  50E1               	movf	fsr1l,w,c
 21522  01321A  0FF8               	addlw	-8
 21523  01321C  6ED9               	movwf	fsr2l,c
 21524  01321E  50E2               	movf	fsr1h,w,c
 21525  013220  6EDA               	movwf	fsr2h,c
 21526  013222  0EFF               	movlw	255
 21527  013224  22DA               	addwfc	fsr2h,f,c
 21528  013226  2830               	incf	(btemp+11)^0,w,c
 21529  013228  52DE               	movf	postinc2,f,c
 21530  01322A  D008               	goto	u7450
 21531  01322C                     u7455:
 21532  01322C  52DE               	movf	postinc2,f,c
 21533  01322E  90D8               	bcf	status,0,c
 21534  013230  BEDC               	btfsc	preinc2,7,c
 21535  013232  80D8               	bsf	status,0,c
 21536  013234  32DD               	rrcf	postdec2,f,c
 21537  013236  32DD               	rrcf	postdec2,f,c
 21538  013238  32DD               	rrcf	postdec2,f,c
 21539  01323A  32DE               	rrcf	postinc2,f,c
 21540  01323C                     u7450:
 21541  01323C  2EE8               	decfsz	wreg,f,c
 21542  01323E  D7F6               	goto	u7455
 21543                           
 21544                           ;stkvar	_bexp @ sp[(-4)+1]
 21545  013240  0EFD               	movlw	-3
 21546  013242  2AE3               	incf	plusw1,f,c
 21547  013244                     l8065:
 21548                           
 21549                           ;stkvar	_aexp @ sp[(-4)+2]
 21550                           ;stkvar	_bexp @ sp[(-4)+1]
 21551  013244  50E1               	movf	fsr1l,w,c
 21552  013246  0FFD               	addlw	-3
 21553  013248  6ED9               	movwf	fsr2l,c
 21554  01324A  50E2               	movf	fsr1h,w,c
 21555  01324C  6EDA               	movwf	fsr2h,c
 21556  01324E  0EFF               	movlw	255
 21557  013250  22DA               	addwfc	fsr2h,f,c
 21558  013252  0EFE               	movlw	-2
 21559  013254  50E3               	movf	plusw1,w,c
 21560  013256  5CDE               	subwf	postinc2,w,c
 21561  013258  A0D8               	btfss	status,0,c
 21562  01325A  D7BE               	goto	l8051
 21563  01325C                     u7460:
 21564                           
 21565                           ;stkvar	_signs @ sp[(-4)+3]
 21566  01325C  0EFF               	movlw	-1
 21567  01325E  BCE3               	btfsc	plusw1,6,c
 21568  013260  D066               	goto	l8093
 21569                           
 21570                           ;stkvar	_bexp @ sp[(-4)+1]
 21571  013262  0EFD               	movlw	-3
 21572  013264  50E3               	movf	plusw1,w,c
 21573  013266  B4D8               	btfsc	status,2,c
 21574  013268  D0F2               	goto	u7560
 21575                           
 21576                           ;stkvar	_a @ sp[(-4)+-8]
 21577                           ;stkvar	_b @ sp[(-4)+-4]
 21578  01326A  0EF8               	movlw	-8
 21579  01326C  50E3               	movf	plusw1,w,c
 21580  01326E  6E25               	movwf	btemp^0,c
 21581  013270  0EF4               	movlw	-12
 21582  013272  50E3               	movf	plusw1,w,c
 21583  013274  2625               	addwf	btemp^0,f,c
 21584  013276  0EF8               	movlw	-8
 21585  013278  0060  F097  FFE3   	movff	btemp,plusw1
 21586  01327E  0EF9               	movlw	-7
 21587  013280  50E3               	movf	plusw1,w,c
 21588  013282  6E25               	movwf	btemp^0,c
 21589  013284  0EF5               	movlw	-11
 21590  013286  50E3               	movf	plusw1,w,c
 21591  013288  2225               	addwfc	btemp^0,f,c
 21592  01328A  0EF9               	movlw	-7
 21593  01328C  0060  F097  FFE3   	movff	btemp,plusw1
 21594  013292  0EFA               	movlw	-6
 21595  013294  50E3               	movf	plusw1,w,c
 21596  013296  6E25               	movwf	btemp^0,c
 21597  013298  0EF6               	movlw	-10
 21598  01329A  50E3               	movf	plusw1,w,c
 21599  01329C  2225               	addwfc	btemp^0,f,c
 21600  01329E  0EFA               	movlw	-6
 21601  0132A0  0060  F097  FFE3   	movff	btemp,plusw1
 21602  0132A6  0EFB               	movlw	-5
 21603  0132A8  50E3               	movf	plusw1,w,c
 21604  0132AA  6E25               	movwf	btemp^0,c
 21605  0132AC  0EF7               	movlw	-9
 21606  0132AE  50E3               	movf	plusw1,w,c
 21607  0132B0  2225               	addwfc	btemp^0,f,c
 21608  0132B2  0EFB               	movlw	-5
 21609  0132B4  0060  F097  FFE3   	movff	btemp,plusw1
 21610                           
 21611                           ;stkvar	_b @ sp[(-4)+-4]
 21612  0132BA  0EFB               	movlw	-5
 21613  0132BC  A0E3               	btfss	plusw1,0,c
 21614  0132BE  D101               	goto	u7600
 21615                           
 21616                           ;stkvar	_grs @ sp[(-4)+0]
 21617  0132C0  0EFC               	movlw	-4
 21618  0132C2  A0E3               	btfss	plusw1,0,c
 21619  0132C4  D00D               	goto	l8083
 21620                           
 21621                           ;stkvar	_grs @ sp[(-4)+0]
 21622  0132C6  0EFC               	movlw	-4
 21623  0132C8  006F FF8C  F030    	movff	plusw1,btemp+11
 21624  0132CE  90D8               	bcf	status,0,c
 21625  0132D0  3230               	rrcf	(btemp+11)^0,f,c
 21626  0132D2  0E01               	movlw	1
 21627  0132D4  1230               	iorwf	(btemp+11)^0,f,c
 21628                           
 21629                           ;stkvar	_grs @ sp[(-4)+0]
 21630  0132D6  0EFC               	movlw	-4
 21631  0132D8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21632  0132DE  D009               	goto	l8085
 21633  0132E0                     l8083:
 21634                           
 21635                           ;stkvar	_grs @ sp[(-4)+0]
 21636  0132E0  50E1               	movf	fsr1l,w,c
 21637  0132E2  0FFC               	addlw	-4
 21638  0132E4  6ED9               	movwf	fsr2l,c
 21639  0132E6  50E2               	movf	fsr1h,w,c
 21640  0132E8  6EDA               	movwf	fsr2h,c
 21641  0132EA  0EFF               	movlw	255
 21642  0132EC  22DA               	addwfc	fsr2h,f,c
 21643  0132EE  90D8               	bcf	status,0,c
 21644  0132F0  32DF               	rrcf	indf2,f,c
 21645  0132F2                     l8085:
 21646                           
 21647                           ;stkvar	_b @ sp[(-4)+-4]
 21648  0132F2  0EF8               	movlw	-8
 21649  0132F4  A0E3               	btfss	plusw1,0,c
 21650  0132F6  D002               	goto	l8089
 21651                           
 21652                           ;stkvar	_grs @ sp[(-4)+0]
 21653  0132F8  0EFC               	movlw	-4
 21654  0132FA  8EE3               	bsf	plusw1,7,c
 21655  0132FC                     l8089:
 21656  0132FC  0E01               	movlw	1
 21657  0132FE  6E30               	movwf	(btemp+11)^0,c
 21658                           
 21659                           ;stkvar	_b @ sp[(-4)+-4]
 21660  013300  50E1               	movf	fsr1l,w,c
 21661  013302  0FF8               	addlw	-8
 21662  013304  6ED9               	movwf	fsr2l,c
 21663  013306  50E2               	movf	fsr1h,w,c
 21664  013308  6EDA               	movwf	fsr2h,c
 21665  01330A  0EFF               	movlw	255
 21666  01330C  22DA               	addwfc	fsr2h,f,c
 21667  01330E  2830               	incf	(btemp+11)^0,w,c
 21668  013310  52DE               	movf	postinc2,f,c
 21669  013312  D008               	goto	u7520
 21670  013314                     u7525:
 21671  013314  52DE               	movf	postinc2,f,c
 21672  013316  90D8               	bcf	status,0,c
 21673  013318  BEDC               	btfsc	preinc2,7,c
 21674  01331A  80D8               	bsf	status,0,c
 21675  01331C  32DD               	rrcf	postdec2,f,c
 21676  01331E  32DD               	rrcf	postdec2,f,c
 21677  013320  32DD               	rrcf	postdec2,f,c
 21678  013322  32DE               	rrcf	postinc2,f,c
 21679  013324                     u7520:
 21680  013324  2EE8               	decfsz	wreg,f,c
 21681  013326  D7F6               	goto	u7525
 21682                           
 21683                           ;stkvar	_bexp @ sp[(-4)+1]
 21684  013328  0EFD               	movlw	-3
 21685  01332A  2AE3               	incf	plusw1,f,c
 21686  01332C  D0CA               	goto	u7600
 21687  01332E                     l8093:
 21688                           
 21689                           ;stkvar	_a @ sp[(-4)+-8]
 21690                           ;stkvar	_b @ sp[(-4)+-4]
 21691  01332E  50E1               	movf	fsr1l,w,c
 21692  013330  0FF8               	addlw	-8
 21693  013332  6ED9               	movwf	fsr2l,c
 21694  013334  50E2               	movf	fsr1h,w,c
 21695  013336  6EDA               	movwf	fsr2h,c
 21696  013338  0EFF               	movlw	255
 21697  01333A  22DA               	addwfc	fsr2h,f,c
 21698  01333C  0EF4               	movlw	-12
 21699  01333E  50E3               	movf	plusw1,w,c
 21700  013340  5CDE               	subwf	postinc2,w,c
 21701  013342  0EF5               	movlw	-11
 21702  013344  50E3               	movf	plusw1,w,c
 21703  013346  58DE               	subwfb	postinc2,w,c
 21704  013348  0EF6               	movlw	-10
 21705  01334A  50E3               	movf	plusw1,w,c
 21706  01334C  58DE               	subwfb	postinc2,w,c
 21707  01334E  50DE               	movf	postinc2,w,c
 21708  013350  0A80               	xorlw	128
 21709  013352  6E25               	movwf	btemp^0,c
 21710  013354  0EF7               	movlw	-9
 21711  013356  50E3               	movf	plusw1,w,c
 21712  013358  0A80               	xorlw	128
 21713  01335A  5825               	subwfb	btemp^0,w,c
 21714  01335C  B0D8               	btfsc	status,0,c
 21715  01335E  D053               	goto	l8105
 21716                           
 21717                           ;stkvar	_b @ sp[(-4)+-4]
 21718                           ;stkvar	_a @ sp[(-4)+-8]
 21719  013360  0EF4               	movlw	-12
 21720  013362  006F FF8C  F02D    	movff	plusw1,btemp+8
 21721  013368  0EF5               	movlw	-11
 21722  01336A  006F FF8C  F02E    	movff	plusw1,btemp+9
 21723  013370  0EF6               	movlw	-10
 21724  013372  006F FF8C  F02F    	movff	plusw1,btemp+10
 21725  013378  0EF7               	movlw	-9
 21726  01337A  006F FF8C  F030    	movff	plusw1,btemp+11
 21727  013380  0EF8               	movlw	-8
 21728  013382  50E3               	movf	plusw1,w,c
 21729  013384  5E2D               	subwf	(btemp+8)^0,f,c
 21730  013386  0EF9               	movlw	-7
 21731  013388  50E3               	movf	plusw1,w,c
 21732  01338A  5A2E               	subwfb	(btemp+9)^0,f,c
 21733  01338C  0EFA               	movlw	-6
 21734  01338E  50E3               	movf	plusw1,w,c
 21735  013390  5A2F               	subwfb	(btemp+10)^0,f,c
 21736  013392  0EFB               	movlw	-5
 21737  013394  50E3               	movf	plusw1,w,c
 21738  013396  5A30               	subwfb	(btemp+11)^0,f,c
 21739  013398  0EFF               	movlw	255
 21740  01339A  242D               	addwf	(btemp+8)^0,w,c
 21741  01339C  6E29               	movwf	(btemp+4)^0,c
 21742  01339E  0EFF               	movlw	255
 21743  0133A0  202E               	addwfc	(btemp+9)^0,w,c
 21744  0133A2  6E2A               	movwf	(btemp+5)^0,c
 21745  0133A4  0EFF               	movlw	255
 21746  0133A6  202F               	addwfc	(btemp+10)^0,w,c
 21747  0133A8  6E2B               	movwf	(btemp+6)^0,c
 21748  0133AA  0EFF               	movlw	255
 21749  0133AC  2030               	addwfc	(btemp+11)^0,w,c
 21750  0133AE  6E2C               	movwf	(btemp+7)^0,c
 21751                           
 21752                           ;stkvar	_b @ sp[(-4)+-4]
 21753  0133B0  0EF8               	movlw	-8
 21754  0133B2  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 21755  0133B8  0EF9               	movlw	-7
 21756  0133BA  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 21757  0133C0  0EFA               	movlw	-6
 21758  0133C2  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 21759  0133C8  0EFB               	movlw	-5
 21760  0133CA  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 21761                           
 21762                           ;stkvar	_signs @ sp[(-4)+3]
 21763  0133D0  0EFF               	movlw	-1
 21764  0133D2  7EE3               	btg	plusw1,7,c
 21765                           
 21766                           ;stkvar	_grs @ sp[(-4)+0]
 21767  0133D4  0EFC               	movlw	-4
 21768  0133D6  50E3               	movf	plusw1,w,c
 21769  0133D8  0800               	sublw	0
 21770  0133DA  6E30               	movwf	(btemp+11)^0,c
 21771                           
 21772                           ;stkvar	_grs @ sp[(-4)+0]
 21773  0133DC  0EFC               	movlw	-4
 21774  0133DE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21775                           
 21776                           ;stkvar	_grs @ sp[(-4)+0]
 21777  0133E4  0EFC               	movlw	-4
 21778  0133E6  50E3               	movf	plusw1,w,c
 21779  0133E8  A4D8               	btfss	status,2,c
 21780  0133EA  D020               	goto	l8107
 21781                           
 21782                           ;stkvar	_b @ sp[(-4)+-4]
 21783  0133EC  50E1               	movf	fsr1l,w,c
 21784  0133EE  0FF8               	addlw	-8
 21785  0133F0  6ED9               	movwf	fsr2l,c
 21786  0133F2  50E2               	movf	fsr1h,w,c
 21787  0133F4  6EDA               	movwf	fsr2h,c
 21788  0133F6  0EFF               	movlw	255
 21789  0133F8  22DA               	addwfc	fsr2h,f,c
 21790  0133FA  2ADE               	incf	postinc2,f,c
 21791  0133FC  0E00               	movlw	0
 21792  0133FE  22DE               	addwfc	postinc2,f,c
 21793  013400  22DE               	addwfc	postinc2,f,c
 21794  013402  22DE               	addwfc	postinc2,f,c
 21795  013404  D013               	goto	l8107
 21796  013406                     l8105:
 21797                           
 21798                           ;stkvar	_a @ sp[(-4)+-8]
 21799                           ;stkvar	_b @ sp[(-4)+-4]
 21800  013406  50E1               	movf	fsr1l,w,c
 21801  013408  0FF8               	addlw	-8
 21802  01340A  6ED9               	movwf	fsr2l,c
 21803  01340C  50E2               	movf	fsr1h,w,c
 21804  01340E  6EDA               	movwf	fsr2h,c
 21805  013410  0EFF               	movlw	255
 21806  013412  22DA               	addwfc	fsr2h,f,c
 21807  013414  0EF4               	movlw	-12
 21808  013416  50E3               	movf	plusw1,w,c
 21809  013418  5EDE               	subwf	postinc2,f,c
 21810  01341A  0EF5               	movlw	-11
 21811  01341C  50E3               	movf	plusw1,w,c
 21812  01341E  5ADE               	subwfb	postinc2,f,c
 21813  013420  0EF6               	movlw	-10
 21814  013422  50E3               	movf	plusw1,w,c
 21815  013424  5ADE               	subwfb	postinc2,f,c
 21816  013426  0EF7               	movlw	-9
 21817  013428  50E3               	movf	plusw1,w,c
 21818  01342A  5ADE               	subwfb	postinc2,f,c
 21819  01342C                     l8107:
 21820                           
 21821                           ;stkvar	_b @ sp[(-4)+-4]
 21822  01342C  0EF8               	movlw	-8
 21823  01342E  50E3               	movf	plusw1,w,c
 21824  013430  E145               	bnz	l8129
 21825  013432  0EF9               	movlw	-7
 21826  013434  50E3               	movf	plusw1,w,c
 21827  013436  E142               	bnz	l8129
 21828  013438  0EFA               	movlw	-6
 21829  01343A  50E3               	movf	plusw1,w,c
 21830  01343C  E13F               	bnz	l8129
 21831  01343E  0EFB               	movlw	-5
 21832  013440  50E3               	movf	plusw1,w,c
 21833  013442  A4D8               	btfss	status,2,c
 21834  013444  D03B               	goto	l8129
 21835                           
 21836                           ;stkvar	_grs @ sp[(-4)+0]
 21837  013446  0EFC               	movlw	-4
 21838  013448  50E3               	movf	plusw1,w,c
 21839  01344A  A4D8               	btfss	status,2,c
 21840  01344C  D037               	goto	l8129
 21841  01344E                     u7560:
 21842  01344E  0E00               	movlw	0
 21843  013450  6E25               	movwf	btemp^0,c
 21844  013452  0E00               	movlw	0
 21845  013454  6E26               	movwf	(btemp+1)^0,c
 21846  013456  0E00               	movlw	0
 21847  013458  6E27               	movwf	(btemp+2)^0,c
 21848  01345A  0E00               	movlw	0
 21849  01345C  6E28               	movwf	(btemp+3)^0,c
 21850  01345E  D0C6               	goto	l2753
 21851  013460                     l8115:
 21852                           
 21853                           ;stkvar	_b @ sp[(-4)+-4]
 21854  013460  90D8               	bcf	status,0,c
 21855  013462  0EF8               	movlw	-8
 21856  013464  36E3               	rlcf	plusw1,f,c
 21857  013466  0EF9               	movlw	-7
 21858  013468  36E3               	rlcf	plusw1,f,c
 21859  01346A  0EFA               	movlw	-6
 21860  01346C  36E3               	rlcf	plusw1,f,c
 21861  01346E  0EFB               	movlw	-5
 21862  013470  36E3               	rlcf	plusw1,f,c
 21863                           
 21864                           ;stkvar	_grs @ sp[(-4)+0]
 21865  013472  0EFC               	movlw	-4
 21866  013474  AEE3               	btfss	plusw1,7,c
 21867  013476  D002               	goto	l2765
 21868                           
 21869                           ;stkvar	_b @ sp[(-4)+-4]
 21870  013478  0EF8               	movlw	-8
 21871  01347A  80E3               	bsf	plusw1,0,c
 21872  01347C                     l2765:
 21873                           
 21874                           ;stkvar	_grs @ sp[(-4)+0]
 21875  01347C  0EFC               	movlw	-4
 21876  01347E  A0E3               	btfss	plusw1,0,c
 21877  013480  D00E               	goto	l8123
 21878                           
 21879                           ;stkvar	_grs @ sp[(-4)+0]
 21880  013482  0EFC               	movlw	-4
 21881  013484  006F FF8C  F030    	movff	plusw1,btemp+11
 21882  01348A  90D8               	bcf	status,0,c
 21883  01348C  3430               	rlcf	(btemp+11)^0,w,c
 21884  01348E  6E2F               	movwf	(btemp+10)^0,c
 21885  013490  0E01               	movlw	1
 21886  013492  122F               	iorwf	(btemp+10)^0,f,c
 21887                           
 21888                           ;stkvar	_grs @ sp[(-4)+0]
 21889  013494  0EFC               	movlw	-4
 21890  013496  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21891  01349C  D009               	goto	l8125
 21892  01349E                     l8123:
 21893                           
 21894                           ;stkvar	_grs @ sp[(-4)+0]
 21895  01349E  50E1               	movf	fsr1l,w,c
 21896  0134A0  0FFC               	addlw	-4
 21897  0134A2  6ED9               	movwf	fsr2l,c
 21898  0134A4  50E2               	movf	fsr1h,w,c
 21899  0134A6  6EDA               	movwf	fsr2h,c
 21900  0134A8  0EFF               	movlw	255
 21901  0134AA  22DA               	addwfc	fsr2h,f,c
 21902  0134AC  90D8               	bcf	status,0,c
 21903  0134AE  36DF               	rlcf	indf2,f,c
 21904  0134B0                     l8125:
 21905                           
 21906                           ;stkvar	_bexp @ sp[(-4)+1]
 21907  0134B0  0EFD               	movlw	-3
 21908  0134B2  50E3               	movf	plusw1,w,c
 21909  0134B4  B4D8               	btfsc	status,2,c
 21910  0134B6  D002               	goto	l8129
 21911                           
 21912                           ;stkvar	_bexp @ sp[(-4)+1]
 21913  0134B8  0EFD               	movlw	-3
 21914  0134BA  06E3               	decf	plusw1,f,c
 21915  0134BC                     l8129:
 21916                           
 21917                           ;stkvar	_b @ sp[(-4)+-4]
 21918  0134BC  0EFA               	movlw	-6
 21919  0134BE  AEE3               	btfss	plusw1,7,c
 21920  0134C0  D7CF               	goto	l8115
 21921  0134C2                     u7600:
 21922                           
 21923                           ;stkvar	_aexp @ sp[(-4)+2]
 21924  0134C2  0EFE               	movlw	-2
 21925  0134C4  6AE3               	clrf	plusw1,c
 21926                           
 21927                           ;stkvar	_grs @ sp[(-4)+0]
 21928  0134C6  0EFC               	movlw	-4
 21929  0134C8  AEE3               	btfss	plusw1,7,c
 21930  0134CA  D00F               	goto	l8143
 21931                           
 21932                           ;stkvar	_grs @ sp[(-4)+0]
 21933  0134CC  0EFC               	movlw	-4
 21934  0134CE  006F FF8C  F030    	movff	plusw1,btemp+11
 21935  0134D4  0E7F               	movlw	127
 21936  0134D6  1630               	andwf	(btemp+11)^0,f,c
 21937  0134D8  B4D8               	btfsc	status,2,c
 21938  0134DA  D004               	goto	l8139
 21939  0134DC                     u7620:
 21940                           
 21941                           ;stkvar	_aexp @ sp[(-4)+2]
 21942  0134DC  0EFE               	movlw	-2
 21943  0134DE  6AE3               	clrf	plusw1,c
 21944  0134E0  2AE3               	incf	plusw1,f,c
 21945  0134E2  D003               	goto	l8143
 21946  0134E4                     l8139:
 21947                           
 21948                           ;stkvar	_b @ sp[(-4)+-4]
 21949  0134E4  0EF8               	movlw	-8
 21950  0134E6  B0E3               	btfsc	plusw1,0,c
 21951  0134E8  D7F9               	goto	u7620
 21952  0134EA                     l8143:
 21953                           
 21954                           ;stkvar	_aexp @ sp[(-4)+2]
 21955  0134EA  0EFE               	movlw	-2
 21956  0134EC  50E3               	movf	plusw1,w,c
 21957  0134EE  B4D8               	btfsc	status,2,c
 21958  0134F0  D02B               	goto	l8155
 21959                           
 21960                           ;stkvar	_b @ sp[(-4)+-4]
 21961  0134F2  50E1               	movf	fsr1l,w,c
 21962  0134F4  0FF8               	addlw	-8
 21963  0134F6  6ED9               	movwf	fsr2l,c
 21964  0134F8  50E2               	movf	fsr1h,w,c
 21965  0134FA  6EDA               	movwf	fsr2h,c
 21966  0134FC  0EFF               	movlw	255
 21967  0134FE  22DA               	addwfc	fsr2h,f,c
 21968  013500  2ADE               	incf	postinc2,f,c
 21969  013502  0E00               	movlw	0
 21970  013504  22DE               	addwfc	postinc2,f,c
 21971  013506  22DE               	addwfc	postinc2,f,c
 21972  013508  22DE               	addwfc	postinc2,f,c
 21973                           
 21974                           ;stkvar	_b @ sp[(-4)+-4]
 21975  01350A  0EFB               	movlw	-5
 21976  01350C  A0E3               	btfss	plusw1,0,c
 21977  01350E  D01C               	goto	l8155
 21978  013510  0E01               	movlw	1
 21979  013512  6E30               	movwf	(btemp+11)^0,c
 21980                           
 21981                           ;stkvar	_b @ sp[(-4)+-4]
 21982  013514  50E1               	movf	fsr1l,w,c
 21983  013516  0FF8               	addlw	-8
 21984  013518  6ED9               	movwf	fsr2l,c
 21985  01351A  50E2               	movf	fsr1h,w,c
 21986  01351C  6EDA               	movwf	fsr2h,c
 21987  01351E  0EFF               	movlw	255
 21988  013520  22DA               	addwfc	fsr2h,f,c
 21989  013522  2830               	incf	(btemp+11)^0,w,c
 21990  013524  52DE               	movf	postinc2,f,c
 21991  013526  D008               	goto	u7660
 21992  013528                     u7665:
 21993  013528  52DE               	movf	postinc2,f,c
 21994  01352A  90D8               	bcf	status,0,c
 21995  01352C  BEDC               	btfsc	preinc2,7,c
 21996  01352E  80D8               	bsf	status,0,c
 21997  013530  32DD               	rrcf	postdec2,f,c
 21998  013532  32DD               	rrcf	postdec2,f,c
 21999  013534  32DD               	rrcf	postdec2,f,c
 22000  013536  32DE               	rrcf	postinc2,f,c
 22001  013538                     u7660:
 22002  013538  2EE8               	decfsz	wreg,f,c
 22003  01353A  D7F6               	goto	u7665
 22004                           
 22005                           ;stkvar	_bexp @ sp[(-4)+1]
 22006  01353C  0EFD               	movlw	-3
 22007  01353E  28E3               	incf	plusw1,w,c
 22008  013540  B4D8               	btfsc	status,2,c
 22009  013542  D002               	goto	l8155
 22010                           
 22011                           ;stkvar	_bexp @ sp[(-4)+1]
 22012  013544  0EFD               	movlw	-3
 22013  013546  2AE3               	incf	plusw1,f,c
 22014  013548                     l8155:
 22015                           
 22016                           ;stkvar	_bexp @ sp[(-4)+1]
 22017  013548  0EFD               	movlw	-3
 22018  01354A  28E3               	incf	plusw1,w,c
 22019  01354C  B4D8               	btfsc	status,2,c
 22020  01354E  D004               	goto	u7690
 22021                           
 22022                           ;stkvar	_bexp @ sp[(-4)+1]
 22023  013550  0EFD               	movlw	-3
 22024  013552  50E3               	movf	plusw1,w,c
 22025  013554  A4D8               	btfss	status,2,c
 22026  013556  D00E               	goto	l8165
 22027  013558                     u7690:
 22028                           
 22029                           ;stkvar	_b @ sp[(-4)+-4]
 22030  013558  0EF8               	movlw	-8
 22031  01355A  6AE3               	clrf	plusw1,c
 22032  01355C  0EF9               	movlw	-7
 22033  01355E  6AE3               	clrf	plusw1,c
 22034  013560  0EFA               	movlw	-6
 22035  013562  6AE3               	clrf	plusw1,c
 22036  013564  0EFB               	movlw	-5
 22037  013566  6AE3               	clrf	plusw1,c
 22038                           
 22039                           ;stkvar	_bexp @ sp[(-4)+1]
 22040  013568  0EFD               	movlw	-3
 22041  01356A  50E3               	movf	plusw1,w,c
 22042  01356C  A4D8               	btfss	status,2,c
 22043  01356E  D002               	goto	l8165
 22044                           
 22045                           ;stkvar	_signs @ sp[(-4)+3]
 22046  013570  0EFF               	movlw	-1
 22047  013572  6AE3               	clrf	plusw1,c
 22048  013574                     l8165:
 22049                           
 22050                           ;stkvar	_bexp @ sp[(-4)+1]
 22051  013574  0EFD               	movlw	-3
 22052  013576  A0E3               	btfss	plusw1,0,c
 22053  013578  D009               	goto	l8169
 22054                           
 22055                           ;stkvar	_b @ sp[(-4)+-4]
 22056  01357A  0EFA               	movlw	250
 22057  01357C  24E1               	addwf	fsr1l,w,c
 22058  01357E  6ED9               	movwf	fsr2l,c
 22059  013580  0EFF               	movlw	255
 22060  013582  20E2               	addwfc	fsr1h,w,c
 22061  013584  6EDA               	movwf	fsr2h,c
 22062  013586  0E00               	movlw	0
 22063  013588  8EDB               	bsf	plusw2,7,c
 22064  01358A  D008               	goto	l8171
 22065  01358C                     l8169:
 22066                           
 22067                           ;stkvar	_b @ sp[(-4)+-4]
 22068  01358C  0EFA               	movlw	250
 22069  01358E  24E1               	addwf	fsr1l,w,c
 22070  013590  6ED9               	movwf	fsr2l,c
 22071  013592  0EFF               	movlw	255
 22072  013594  20E2               	addwfc	fsr1h,w,c
 22073  013596  6EDA               	movwf	fsr2h,c
 22074  013598  0E7F               	movlw	127
 22075  01359A  16DF               	andwf	indf2,f,c
 22076  01359C                     l8171:
 22077                           
 22078                           ;stkvar	_b @ sp[(-4)+-4]
 22079  01359C  0EFB               	movlw	251
 22080  01359E  24E1               	addwf	fsr1l,w,c
 22081  0135A0  6ED9               	movwf	fsr2l,c
 22082  0135A2  0EFF               	movlw	255
 22083  0135A4  20E2               	addwfc	fsr1h,w,c
 22084  0135A6  6EDA               	movwf	fsr2h,c
 22085                           
 22086                           ;stkvar	_bexp @ sp[(-4)+1]
 22087  0135A8  0EFD               	movlw	-3
 22088  0135AA  006F FF8C  F030    	movff	plusw1,btemp+11
 22089  0135B0  90D8               	bcf	status,0,c
 22090  0135B2  3030               	rrcf	(btemp+11)^0,w,c
 22091  0135B4  6EDF               	movwf	indf2,c
 22092                           
 22093                           ;stkvar	_signs @ sp[(-4)+3]
 22094  0135B6  0EFF               	movlw	-1
 22095  0135B8  AEE3               	btfss	plusw1,7,c
 22096  0135BA  D008               	goto	l8177
 22097                           
 22098                           ;stkvar	_b @ sp[(-4)+-4]
 22099  0135BC  0EFB               	movlw	251
 22100  0135BE  24E1               	addwf	fsr1l,w,c
 22101  0135C0  6ED9               	movwf	fsr2l,c
 22102  0135C2  0EFF               	movlw	255
 22103  0135C4  20E2               	addwfc	fsr1h,w,c
 22104  0135C6  6EDA               	movwf	fsr2h,c
 22105  0135C8  0E00               	movlw	0
 22106  0135CA  8EDB               	bsf	plusw2,7,c
 22107  0135CC                     l8177:
 22108                           
 22109                           ;stkvar	_b @ sp[(-4)+-4]
 22110  0135CC  0EF8               	movlw	-8
 22111  0135CE  006F FF8C  F025    	movff	plusw1,btemp
 22112  0135D4  0EF9               	movlw	-7
 22113  0135D6  006F FF8C  F026    	movff	plusw1,btemp+1
 22114  0135DC  0EFA               	movlw	-6
 22115  0135DE  006F FF8C  F027    	movff	plusw1,btemp+2
 22116  0135E4  0EFB               	movlw	-5
 22117  0135E6  006F FF8C  F028    	movff	plusw1,btemp+3
 22118  0135EC                     l2753:
 22119                           
 22120                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22121  0135EC  0EF4               	movlw	244
 22122  0135EE  26E1               	addwf	fsr1l,f,c
 22123  0135F0  0EFF               	movlw	255
 22124  0135F2  22E2               	addwfc	fsr1h,f,c
 22125  0135F4  0012               	return		;funcret
 22126  0135F6                     __end_of___fladd:
 22127                           	opt callstack 0
 22128                           
 22129 ;; *************** function ___flmul *****************
 22130 ;; Defined at:
 22131 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 22132 ;; Parameters:    Size  Location     Type
 22133 ;;  b               4  [STACK] unsigned char 
 22134 ;;  a               4  [STACK] unsigned char 
 22135 ;; Auto vars:     Size  Location     Type
 22136 ;;  prod            4  [STACK] struct .
 22137 ;;  grs             4  [STACK] unsigned long 
 22138 ;;  temp            2  [STACK] struct .
 22139 ;;  bexp            1  [STACK] unsigned char 
 22140 ;;  aexp            1  [STACK] unsigned char 
 22141 ;;  sign            1  [STACK] unsigned char 
 22142 ;; Return value:  Size  Location     Type
 22143 ;;                  4  [STACK] unsigned char 
 22144 ;; Registers used:
 22145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22146 ;; Tracked objects:
 22147 ;;		On entry : 0/2
 22148 ;;		On exit  : 0/0
 22149 ;;		Unchanged: 0/0
 22150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22155 ;;Total ram usage:        0 bytes
 22156 ;; Hardware stack levels used:    1
 22157 ;; Hardware stack levels required when called:   10
 22158 ;; This function calls:
 22159 ;;		Nothing
 22160 ;; This function is called by:
 22161 ;;		_conv_raw_result
 22162 ;;		_lp_filter
 22163 ;;		_calc_model_data
 22164 ;;		_efgtoa
 22165 ;; This function uses a reentrant model
 22166 ;;
 22167                           
 22168                           	psect	text94
 22169  012610                     __ptext94:
 22170                           	opt callstack 0
 22171  012610                     ___flmul:
 22172                           	opt callstack 0
 22173                           
 22174                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22175  012610  0E0D               	movlw	13
 22176  012612  26E1               	addwf	fsr1l,f,c
 22177  012614  0E00               	movlw	0
 22178  012616  22E2               	addwfc	fsr1h,f,c
 22179                           
 22180                           ;stkvar	_b @ sp[(-13)+-4]
 22181                           
 22182                           ;incstack = 0
 22183  012618  0EF2               	movlw	242
 22184  01261A  24E1               	addwf	fsr1l,w,c
 22185  01261C  6ED9               	movwf	fsr2l,c
 22186  01261E  0EFF               	movlw	255
 22187  012620  20E2               	addwfc	fsr1h,w,c
 22188  012622  6EDA               	movwf	fsr2h,c
 22189  012624  50DF               	movf	indf2,w,c
 22190  012626  6E30               	movwf	(btemp+11)^0,c
 22191  012628  0E80               	movlw	128
 22192  01262A  1630               	andwf	(btemp+11)^0,f,c
 22193                           
 22194                           ;stkvar	_sign @ sp[(-13)+12]
 22195  01262C  0EFF               	movlw	-1
 22196  01262E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22197                           
 22198                           ;stkvar	_b @ sp[(-13)+-4]
 22199  012634  0EF2               	movlw	242
 22200  012636  24E1               	addwf	fsr1l,w,c
 22201  012638  6ED9               	movwf	fsr2l,c
 22202  01263A  0EFF               	movlw	255
 22203  01263C  20E2               	addwfc	fsr1h,w,c
 22204  01263E  6EDA               	movwf	fsr2h,c
 22205  012640  50DF               	movf	indf2,w,c
 22206  012642  6E30               	movwf	(btemp+11)^0,c
 22207  012644  90D8               	bcf	status,0,c
 22208  012646  3430               	rlcf	(btemp+11)^0,w,c
 22209  012648  6E2F               	movwf	(btemp+10)^0,c
 22210                           
 22211                           ;stkvar	_bexp @ sp[(-13)+10]
 22212  01264A  0EFD               	movlw	-3
 22213  01264C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22214                           
 22215                           ;stkvar	_b @ sp[(-13)+-4]
 22216  012652  0EF1               	movlw	241
 22217  012654  24E1               	addwf	fsr1l,w,c
 22218  012656  6ED9               	movwf	fsr2l,c
 22219  012658  0EFF               	movlw	255
 22220  01265A  20E2               	addwfc	fsr1h,w,c
 22221  01265C  6EDA               	movwf	fsr2h,c
 22222  01265E  AEDF               	btfss	indf2,7,c
 22223  012660  D002               	goto	l8209
 22224                           
 22225                           ;stkvar	_bexp @ sp[(-13)+10]
 22226  012662  0EFD               	movlw	-3
 22227  012664  80E3               	bsf	plusw1,0,c
 22228  012666                     l8209:
 22229                           
 22230                           ;stkvar	_bexp @ sp[(-13)+10]
 22231  012666  0EFD               	movlw	-3
 22232  012668  50E3               	movf	plusw1,w,c
 22233  01266A  B4D8               	btfsc	status,2,c
 22234  01266C  D01F               	goto	l8217
 22235                           
 22236                           ;stkvar	_bexp @ sp[(-13)+10]
 22237  01266E  0EFD               	movlw	-3
 22238  012670  28E3               	incf	plusw1,w,c
 22239  012672  A4D8               	btfss	status,2,c
 22240  012674  D018               	goto	l8215
 22241  012676  0E00               	movlw	0
 22242  012678  6E2D               	movwf	(btemp+8)^0,c
 22243  01267A  0E00               	movlw	0
 22244  01267C  6E2E               	movwf	(btemp+9)^0,c
 22245  01267E  0E00               	movlw	0
 22246  012680  6E2F               	movwf	(btemp+10)^0,c
 22247  012682  0E00               	movlw	0
 22248  012684  6E30               	movwf	(btemp+11)^0,c
 22249                           
 22250                           ;stkvar	_b @ sp[(-13)+-4]
 22251  012686  0EEF               	movlw	-17
 22252  012688  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22253  01268E  0EF0               	movlw	-16
 22254  012690  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22255  012696  0EF1               	movlw	-15
 22256  012698  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22257  01269E  0EF2               	movlw	-14
 22258  0126A0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22259  0126A6                     l8215:
 22260                           
 22261                           ;stkvar	_b @ sp[(-13)+-4]
 22262  0126A6  0EF1               	movlw	-15
 22263  0126A8  8EE3               	bsf	plusw1,7,c
 22264  0126AA  D018               	goto	l8219
 22265  0126AC                     l8217:
 22266  0126AC  0E00               	movlw	0
 22267  0126AE  6E2D               	movwf	(btemp+8)^0,c
 22268  0126B0  0E00               	movlw	0
 22269  0126B2  6E2E               	movwf	(btemp+9)^0,c
 22270  0126B4  0E00               	movlw	0
 22271  0126B6  6E2F               	movwf	(btemp+10)^0,c
 22272  0126B8  0E00               	movlw	0
 22273  0126BA  6E30               	movwf	(btemp+11)^0,c
 22274                           
 22275                           ;stkvar	_b @ sp[(-13)+-4]
 22276  0126BC  0EEF               	movlw	-17
 22277  0126BE  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22278  0126C4  0EF0               	movlw	-16
 22279  0126C6  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22280  0126CC  0EF1               	movlw	-15
 22281  0126CE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22282  0126D4  0EF2               	movlw	-14
 22283  0126D6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22284  0126DC                     l8219:
 22285                           
 22286                           ;stkvar	_a @ sp[(-13)+-8]
 22287  0126DC  0EEE               	movlw	238
 22288  0126DE  24E1               	addwf	fsr1l,w,c
 22289  0126E0  6ED9               	movwf	fsr2l,c
 22290  0126E2  0EFF               	movlw	255
 22291  0126E4  20E2               	addwfc	fsr1h,w,c
 22292  0126E6  6EDA               	movwf	fsr2h,c
 22293  0126E8  50DF               	movf	indf2,w,c
 22294  0126EA  6E30               	movwf	(btemp+11)^0,c
 22295  0126EC  0E80               	movlw	128
 22296  0126EE  1630               	andwf	(btemp+11)^0,f,c
 22297                           
 22298                           ;stkvar	_sign @ sp[(-13)+12]
 22299  0126F0  50E1               	movf	fsr1l,w,c
 22300  0126F2  0FFF               	addlw	-1
 22301  0126F4  6ED9               	movwf	fsr2l,c
 22302  0126F6  50E2               	movf	fsr1h,w,c
 22303  0126F8  6EDA               	movwf	fsr2h,c
 22304  0126FA  0EFF               	movlw	255
 22305  0126FC  22DA               	addwfc	fsr2h,f,c
 22306  0126FE  5030               	movf	(btemp+11)^0,w,c
 22307  012700  1ADF               	xorwf	indf2,f,c
 22308                           
 22309                           ;stkvar	_a @ sp[(-13)+-8]
 22310  012702  0EEE               	movlw	238
 22311  012704  24E1               	addwf	fsr1l,w,c
 22312  012706  6ED9               	movwf	fsr2l,c
 22313  012708  0EFF               	movlw	255
 22314  01270A  20E2               	addwfc	fsr1h,w,c
 22315  01270C  6EDA               	movwf	fsr2h,c
 22316  01270E  50DF               	movf	indf2,w,c
 22317  012710  6E30               	movwf	(btemp+11)^0,c
 22318  012712  90D8               	bcf	status,0,c
 22319  012714  3430               	rlcf	(btemp+11)^0,w,c
 22320  012716  6E2F               	movwf	(btemp+10)^0,c
 22321                           
 22322                           ;stkvar	_aexp @ sp[(-13)+11]
 22323  012718  0EFE               	movlw	-2
 22324  01271A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22325                           
 22326                           ;stkvar	_a @ sp[(-13)+-8]
 22327  012720  0EED               	movlw	237
 22328  012722  24E1               	addwf	fsr1l,w,c
 22329  012724  6ED9               	movwf	fsr2l,c
 22330  012726  0EFF               	movlw	255
 22331  012728  20E2               	addwfc	fsr1h,w,c
 22332  01272A  6EDA               	movwf	fsr2h,c
 22333  01272C  AEDF               	btfss	indf2,7,c
 22334  01272E  D002               	goto	l8227
 22335                           
 22336                           ;stkvar	_aexp @ sp[(-13)+11]
 22337  012730  0EFE               	movlw	-2
 22338  012732  80E3               	bsf	plusw1,0,c
 22339  012734                     l8227:
 22340                           
 22341                           ;stkvar	_aexp @ sp[(-13)+11]
 22342  012734  0EFE               	movlw	-2
 22343  012736  50E3               	movf	plusw1,w,c
 22344  012738  B4D8               	btfsc	status,2,c
 22345  01273A  D01F               	goto	l8235
 22346                           
 22347                           ;stkvar	_aexp @ sp[(-13)+11]
 22348  01273C  0EFE               	movlw	-2
 22349  01273E  28E3               	incf	plusw1,w,c
 22350  012740  A4D8               	btfss	status,2,c
 22351  012742  D018               	goto	l8233
 22352  012744  0E00               	movlw	0
 22353  012746  6E2D               	movwf	(btemp+8)^0,c
 22354  012748  0E00               	movlw	0
 22355  01274A  6E2E               	movwf	(btemp+9)^0,c
 22356  01274C  0E00               	movlw	0
 22357  01274E  6E2F               	movwf	(btemp+10)^0,c
 22358  012750  0E00               	movlw	0
 22359  012752  6E30               	movwf	(btemp+11)^0,c
 22360                           
 22361                           ;stkvar	_a @ sp[(-13)+-8]
 22362  012754  0EEB               	movlw	-21
 22363  012756  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22364  01275C  0EEC               	movlw	-20
 22365  01275E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22366  012764  0EED               	movlw	-19
 22367  012766  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22368  01276C  0EEE               	movlw	-18
 22369  01276E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22370  012774                     l8233:
 22371                           
 22372                           ;stkvar	_a @ sp[(-13)+-8]
 22373  012774  0EED               	movlw	-19
 22374  012776  8EE3               	bsf	plusw1,7,c
 22375  012778  D018               	goto	l8237
 22376  01277A                     l8235:
 22377  01277A  0E00               	movlw	0
 22378  01277C  6E2D               	movwf	(btemp+8)^0,c
 22379  01277E  0E00               	movlw	0
 22380  012780  6E2E               	movwf	(btemp+9)^0,c
 22381  012782  0E00               	movlw	0
 22382  012784  6E2F               	movwf	(btemp+10)^0,c
 22383  012786  0E00               	movlw	0
 22384  012788  6E30               	movwf	(btemp+11)^0,c
 22385                           
 22386                           ;stkvar	_a @ sp[(-13)+-8]
 22387  01278A  0EEB               	movlw	-21
 22388  01278C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22389  012792  0EEC               	movlw	-20
 22390  012794  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22391  01279A  0EED               	movlw	-19
 22392  01279C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22393  0127A2  0EEE               	movlw	-18
 22394  0127A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22395  0127AA                     l8237:
 22396                           
 22397                           ;stkvar	_aexp @ sp[(-13)+11]
 22398  0127AA  0EFE               	movlw	-2
 22399  0127AC  50E3               	movf	plusw1,w,c
 22400  0127AE  B4D8               	btfsc	status,2,c
 22401  0127B0  D004               	goto	u7820
 22402                           
 22403                           ;stkvar	_bexp @ sp[(-13)+10]
 22404  0127B2  0EFD               	movlw	-3
 22405  0127B4  50E3               	movf	plusw1,w,c
 22406  0127B6  A4D8               	btfss	status,2,c
 22407  0127B8  D009               	goto	l8245
 22408  0127BA                     u7820:
 22409  0127BA  0E00               	movlw	0
 22410  0127BC  6E25               	movwf	btemp^0,c
 22411  0127BE  0E00               	movlw	0
 22412  0127C0  6E26               	movwf	(btemp+1)^0,c
 22413  0127C2  0E00               	movlw	0
 22414  0127C4  6E27               	movwf	(btemp+2)^0,c
 22415  0127C6  0E00               	movlw	0
 22416  0127C8  6E28               	movwf	(btemp+3)^0,c
 22417  0127CA  D332               	goto	l2834
 22418  0127CC                     l8245:
 22419                           
 22420                           ;stkvar	_b @ sp[(-13)+-4]
 22421  0127CC  0EEF               	movlw	-17
 22422  0127CE  006F FF8C  F030    	movff	plusw1,btemp+11
 22423                           
 22424                           ;stkvar	_a @ sp[(-13)+-8]
 22425  0127D4  0EED               	movlw	237
 22426  0127D6  24E1               	addwf	fsr1l,w,c
 22427  0127D8  6ED9               	movwf	fsr2l,c
 22428  0127DA  0EFF               	movlw	255
 22429  0127DC  20E2               	addwfc	fsr1h,w,c
 22430  0127DE  6EDA               	movwf	fsr2h,c
 22431  0127E0  50DF               	movf	indf2,w,c
 22432  0127E2  0230               	mulwf	(btemp+11)^0,c
 22433                           
 22434                           ;stkvar	_temp @ sp[(-13)+8]
 22435  0127E4  0EFB               	movlw	-5
 22436  0127E6  006F FFCF FFE3     	movff	prodl,plusw1
 22437  0127EC  0EFC               	movlw	-4
 22438  0127EE  006F FFD3 FFE3     	movff	prodh,plusw1
 22439                           
 22440                           ;stkvar	_temp @ sp[(-13)+8]
 22441  0127F4  0EFB               	movlw	-5
 22442  0127F6  006F FF8C  F030    	movff	plusw1,btemp+11
 22443  0127FC  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22444  012802  6A2A               	clrf	(btemp+5)^0,c
 22445  012804  6A2B               	clrf	(btemp+6)^0,c
 22446  012806  6A2C               	clrf	(btemp+7)^0,c
 22447                           
 22448                           ;stkvar	_grs @ sp[(-13)+4]
 22449  012808  0EF7               	movlw	-9
 22450  01280A  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22451  012810  0EF8               	movlw	-8
 22452  012812  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22453  012818  0EF9               	movlw	-7
 22454  01281A  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22455  012820  0EFA               	movlw	-6
 22456  012822  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22457                           
 22458                           ;stkvar	_temp @ sp[(-13)+8]
 22459  012828  0EFC               	movlw	252
 22460  01282A  24E1               	addwf	fsr1l,w,c
 22461  01282C  6ED9               	movwf	fsr2l,c
 22462  01282E  0EFF               	movlw	255
 22463  012830  20E2               	addwfc	fsr1h,w,c
 22464  012832  6EDA               	movwf	fsr2h,c
 22465  012834  50DF               	movf	indf2,w,c
 22466  012836  6E30               	movwf	(btemp+11)^0,c
 22467  012838  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22468  01283E  6A2A               	clrf	(btemp+5)^0,c
 22469  012840  6A2B               	clrf	(btemp+6)^0,c
 22470  012842  6A2C               	clrf	(btemp+7)^0,c
 22471                           
 22472                           ;stkvar	_prod @ sp[(-13)+0]
 22473  012844  0EF3               	movlw	-13
 22474  012846  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22475  01284C  0EF4               	movlw	-12
 22476  01284E  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22477  012854  0EF5               	movlw	-11
 22478  012856  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22479  01285C  0EF6               	movlw	-10
 22480  01285E  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22481                           
 22482                           ;stkvar	_b @ sp[(-13)+-4]
 22483  012864  0EF0               	movlw	240
 22484  012866  24E1               	addwf	fsr1l,w,c
 22485  012868  6ED9               	movwf	fsr2l,c
 22486  01286A  0EFF               	movlw	255
 22487  01286C  20E2               	addwfc	fsr1h,w,c
 22488  01286E  6EDA               	movwf	fsr2h,c
 22489  012870  50DF               	movf	indf2,w,c
 22490  012872  6E30               	movwf	(btemp+11)^0,c
 22491                           
 22492                           ;stkvar	_a @ sp[(-13)+-8]
 22493  012874  0EEC               	movlw	236
 22494  012876  24E1               	addwf	fsr1l,w,c
 22495  012878  6ED9               	movwf	fsr2l,c
 22496  01287A  0EFF               	movlw	255
 22497  01287C  20E2               	addwfc	fsr1h,w,c
 22498  01287E  6EDA               	movwf	fsr2h,c
 22499  012880  50DF               	movf	indf2,w,c
 22500  012882  0230               	mulwf	(btemp+11)^0,c
 22501                           
 22502                           ;stkvar	_temp @ sp[(-13)+8]
 22503  012884  0EFB               	movlw	-5
 22504  012886  006F FFCF FFE3     	movff	prodl,plusw1
 22505  01288C  0EFC               	movlw	-4
 22506  01288E  006F FFD3 FFE3     	movff	prodh,plusw1
 22507                           
 22508                           ;stkvar	_grs @ sp[(-13)+4]
 22509  012894  50E1               	movf	fsr1l,w,c
 22510  012896  0FF7               	addlw	-9
 22511  012898  6ED9               	movwf	fsr2l,c
 22512  01289A  50E2               	movf	fsr1h,w,c
 22513  01289C  6EDA               	movwf	fsr2h,c
 22514  01289E  0EFF               	movlw	255
 22515  0128A0  22DA               	addwfc	fsr2h,f,c
 22516                           
 22517                           ;stkvar	_temp @ sp[(-13)+8]
 22518  0128A2  0EFB               	movlw	-5
 22519  0128A4  50E3               	movf	plusw1,w,c
 22520  0128A6  26DE               	addwf	postinc2,f,c
 22521  0128A8  0E00               	movlw	0
 22522  0128AA  22DE               	addwfc	postinc2,f,c
 22523  0128AC  22DE               	addwfc	postinc2,f,c
 22524  0128AE  22DE               	addwfc	postinc2,f,c
 22525                           
 22526                           ;stkvar	_prod @ sp[(-13)+0]
 22527  0128B0  50E1               	movf	fsr1l,w,c
 22528  0128B2  0FF3               	addlw	-13
 22529  0128B4  6ED9               	movwf	fsr2l,c
 22530  0128B6  50E2               	movf	fsr1h,w,c
 22531  0128B8  6EDA               	movwf	fsr2h,c
 22532  0128BA  0EFF               	movlw	255
 22533  0128BC  22DA               	addwfc	fsr2h,f,c
 22534                           
 22535                           ;stkvar	_temp @ sp[(-13)+8]
 22536  0128BE  0EFC               	movlw	252
 22537  0128C0  24E1               	addwf	fsr1l,w,c
 22538  0128C2  6EE9               	movwf	fsr0l,c
 22539  0128C4  0EFF               	movlw	255
 22540  0128C6  20E2               	addwfc	fsr1h,w,c
 22541  0128C8  6EEA               	movwf	fsr0h,c
 22542  0128CA  50EF               	movf	indf0,w,c
 22543  0128CC  26DE               	addwf	postinc2,f,c
 22544  0128CE  0E00               	movlw	0
 22545  0128D0  22DE               	addwfc	postinc2,f,c
 22546  0128D2  22DE               	addwfc	postinc2,f,c
 22547  0128D4  22DE               	addwfc	postinc2,f,c
 22548                           
 22549                           ;stkvar	_b @ sp[(-13)+-4]
 22550  0128D6  0EF1               	movlw	241
 22551  0128D8  24E1               	addwf	fsr1l,w,c
 22552  0128DA  6ED9               	movwf	fsr2l,c
 22553  0128DC  0EFF               	movlw	255
 22554  0128DE  20E2               	addwfc	fsr1h,w,c
 22555  0128E0  6EDA               	movwf	fsr2h,c
 22556  0128E2  50DF               	movf	indf2,w,c
 22557  0128E4  6E30               	movwf	(btemp+11)^0,c
 22558                           
 22559                           ;stkvar	_a @ sp[(-13)+-8]
 22560  0128E6  0EEB               	movlw	-21
 22561  0128E8  50E3               	movf	plusw1,w,c
 22562  0128EA  0230               	mulwf	(btemp+11)^0,c
 22563                           
 22564                           ;stkvar	_temp @ sp[(-13)+8]
 22565  0128EC  0EFB               	movlw	-5
 22566  0128EE  006F FFCF FFE3     	movff	prodl,plusw1
 22567  0128F4  0EFC               	movlw	-4
 22568  0128F6  006F FFD3 FFE3     	movff	prodh,plusw1
 22569                           
 22570                           ;stkvar	_grs @ sp[(-13)+4]
 22571  0128FC  50E1               	movf	fsr1l,w,c
 22572  0128FE  0FF7               	addlw	-9
 22573  012900  6ED9               	movwf	fsr2l,c
 22574  012902  50E2               	movf	fsr1h,w,c
 22575  012904  6EDA               	movwf	fsr2h,c
 22576  012906  0EFF               	movlw	255
 22577  012908  22DA               	addwfc	fsr2h,f,c
 22578                           
 22579                           ;stkvar	_temp @ sp[(-13)+8]
 22580  01290A  0EFB               	movlw	-5
 22581  01290C  50E3               	movf	plusw1,w,c
 22582  01290E  26DE               	addwf	postinc2,f,c
 22583  012910  0E00               	movlw	0
 22584  012912  22DE               	addwfc	postinc2,f,c
 22585  012914  22DE               	addwfc	postinc2,f,c
 22586  012916  22DE               	addwfc	postinc2,f,c
 22587                           
 22588                           ;stkvar	_prod @ sp[(-13)+0]
 22589  012918  50E1               	movf	fsr1l,w,c
 22590  01291A  0FF3               	addlw	-13
 22591  01291C  6ED9               	movwf	fsr2l,c
 22592  01291E  50E2               	movf	fsr1h,w,c
 22593  012920  6EDA               	movwf	fsr2h,c
 22594  012922  0EFF               	movlw	255
 22595  012924  22DA               	addwfc	fsr2h,f,c
 22596                           
 22597                           ;stkvar	_temp @ sp[(-13)+8]
 22598  012926  0EFC               	movlw	252
 22599  012928  24E1               	addwf	fsr1l,w,c
 22600  01292A  6EE9               	movwf	fsr0l,c
 22601  01292C  0EFF               	movlw	255
 22602  01292E  20E2               	addwfc	fsr1h,w,c
 22603  012930  6EEA               	movwf	fsr0h,c
 22604  012932  50EF               	movf	indf0,w,c
 22605  012934  26DE               	addwf	postinc2,f,c
 22606  012936  0E00               	movlw	0
 22607  012938  22DE               	addwfc	postinc2,f,c
 22608  01293A  22DE               	addwfc	postinc2,f,c
 22609  01293C  22DE               	addwfc	postinc2,f,c
 22610                           
 22611                           ;stkvar	_grs @ sp[(-13)+4]
 22612  01293E  50E1               	movf	fsr1l,w,c
 22613  012940  0FF7               	addlw	-9
 22614  012942  6ED9               	movwf	fsr2l,c
 22615  012944  50E2               	movf	fsr1h,w,c
 22616  012946  6EDA               	movwf	fsr2h,c
 22617  012948  0EFF               	movlw	255
 22618  01294A  22DA               	addwfc	fsr2h,f,c
 22619  01294C  0E08               	movlw	8
 22620  01294E                     u7835:
 22621  01294E  90D8               	bcf	status,0,c
 22622  012950  36DE               	rlcf	postinc2,f,c
 22623  012952  36DE               	rlcf	postinc2,f,c
 22624  012954  36DE               	rlcf	postinc2,f,c
 22625  012956  36DD               	rlcf	postdec2,f,c
 22626  012958  52DD               	movf	postdec2,f,c
 22627  01295A  52DD               	movf	postdec2,f,c
 22628  01295C  2EE8               	decfsz	wreg,f,c
 22629  01295E  D7F7               	goto	u7835
 22630                           
 22631                           ;stkvar	_b @ sp[(-13)+-4]
 22632  012960  0EF0               	movlw	240
 22633  012962  24E1               	addwf	fsr1l,w,c
 22634  012964  6ED9               	movwf	fsr2l,c
 22635  012966  0EFF               	movlw	255
 22636  012968  20E2               	addwfc	fsr1h,w,c
 22637  01296A  6EDA               	movwf	fsr2h,c
 22638  01296C  50DF               	movf	indf2,w,c
 22639  01296E  6E30               	movwf	(btemp+11)^0,c
 22640                           
 22641                           ;stkvar	_a @ sp[(-13)+-8]
 22642  012970  0EEB               	movlw	-21
 22643  012972  50E3               	movf	plusw1,w,c
 22644  012974  0230               	mulwf	(btemp+11)^0,c
 22645                           
 22646                           ;stkvar	_temp @ sp[(-13)+8]
 22647  012976  0EFB               	movlw	-5
 22648  012978  006F FFCF FFE3     	movff	prodl,plusw1
 22649  01297E  0EFC               	movlw	-4
 22650  012980  006F FFD3 FFE3     	movff	prodh,plusw1
 22651                           
 22652                           ;stkvar	_temp @ sp[(-13)+8]
 22653  012986  0EFB               	movlw	-5
 22654  012988  006F FF8C  F02F    	movff	plusw1,btemp+10
 22655  01298E  0EFC               	movlw	-4
 22656  012990  006F FF8C  F030    	movff	plusw1,btemp+11
 22657                           
 22658                           ;stkvar	_grs @ sp[(-13)+4]
 22659  012996  50E1               	movf	fsr1l,w,c
 22660  012998  0FF7               	addlw	-9
 22661  01299A  6ED9               	movwf	fsr2l,c
 22662  01299C  50E2               	movf	fsr1h,w,c
 22663  01299E  6EDA               	movwf	fsr2h,c
 22664  0129A0  0EFF               	movlw	255
 22665  0129A2  22DA               	addwfc	fsr2h,f,c
 22666  0129A4  502F               	movf	(btemp+10)^0,w,c
 22667  0129A6  26DE               	addwf	postinc2,f,c
 22668  0129A8  5030               	movf	(btemp+11)^0,w,c
 22669  0129AA  22DE               	addwfc	postinc2,f,c
 22670  0129AC  0E00               	movlw	0
 22671  0129AE  22DE               	addwfc	postinc2,f,c
 22672  0129B0  22DE               	addwfc	postinc2,f,c
 22673                           
 22674                           ;stkvar	_b @ sp[(-13)+-4]
 22675  0129B2  0EEF               	movlw	-17
 22676  0129B4  006F FF8C  F030    	movff	plusw1,btemp+11
 22677                           
 22678                           ;stkvar	_a @ sp[(-13)+-8]
 22679  0129BA  0EEC               	movlw	236
 22680  0129BC  24E1               	addwf	fsr1l,w,c
 22681  0129BE  6ED9               	movwf	fsr2l,c
 22682  0129C0  0EFF               	movlw	255
 22683  0129C2  20E2               	addwfc	fsr1h,w,c
 22684  0129C4  6EDA               	movwf	fsr2h,c
 22685  0129C6  50DF               	movf	indf2,w,c
 22686  0129C8  0230               	mulwf	(btemp+11)^0,c
 22687                           
 22688                           ;stkvar	_temp @ sp[(-13)+8]
 22689  0129CA  0EFB               	movlw	-5
 22690  0129CC  006F FFCF FFE3     	movff	prodl,plusw1
 22691  0129D2  0EFC               	movlw	-4
 22692  0129D4  006F FFD3 FFE3     	movff	prodh,plusw1
 22693                           
 22694                           ;stkvar	_temp @ sp[(-13)+8]
 22695  0129DA  0EFB               	movlw	-5
 22696  0129DC  006F FF8C  F02F    	movff	plusw1,btemp+10
 22697  0129E2  0EFC               	movlw	-4
 22698  0129E4  006F FF8C  F030    	movff	plusw1,btemp+11
 22699                           
 22700                           ;stkvar	_grs @ sp[(-13)+4]
 22701  0129EA  50E1               	movf	fsr1l,w,c
 22702  0129EC  0FF7               	addlw	-9
 22703  0129EE  6ED9               	movwf	fsr2l,c
 22704  0129F0  50E2               	movf	fsr1h,w,c
 22705  0129F2  6EDA               	movwf	fsr2h,c
 22706  0129F4  0EFF               	movlw	255
 22707  0129F6  22DA               	addwfc	fsr2h,f,c
 22708  0129F8  502F               	movf	(btemp+10)^0,w,c
 22709  0129FA  26DE               	addwf	postinc2,f,c
 22710  0129FC  5030               	movf	(btemp+11)^0,w,c
 22711  0129FE  22DE               	addwfc	postinc2,f,c
 22712  012A00  0E00               	movlw	0
 22713  012A02  22DE               	addwfc	postinc2,f,c
 22714  012A04  22DE               	addwfc	postinc2,f,c
 22715                           
 22716                           ;stkvar	_grs @ sp[(-13)+4]
 22717  012A06  50E1               	movf	fsr1l,w,c
 22718  012A08  0FF7               	addlw	-9
 22719  012A0A  6ED9               	movwf	fsr2l,c
 22720  012A0C  50E2               	movf	fsr1h,w,c
 22721  012A0E  6EDA               	movwf	fsr2h,c
 22722  012A10  0EFF               	movlw	255
 22723  012A12  22DA               	addwfc	fsr2h,f,c
 22724  012A14  0E08               	movlw	8
 22725  012A16                     u7845:
 22726  012A16  90D8               	bcf	status,0,c
 22727  012A18  36DE               	rlcf	postinc2,f,c
 22728  012A1A  36DE               	rlcf	postinc2,f,c
 22729  012A1C  36DE               	rlcf	postinc2,f,c
 22730  012A1E  36DD               	rlcf	postdec2,f,c
 22731  012A20  52DD               	movf	postdec2,f,c
 22732  012A22  52DD               	movf	postdec2,f,c
 22733  012A24  2EE8               	decfsz	wreg,f,c
 22734  012A26  D7F7               	goto	u7845
 22735                           
 22736                           ;stkvar	_b @ sp[(-13)+-4]
 22737  012A28  0EEF               	movlw	-17
 22738  012A2A  006F FF8C  F030    	movff	plusw1,btemp+11
 22739                           
 22740                           ;stkvar	_a @ sp[(-13)+-8]
 22741  012A30  0EEB               	movlw	-21
 22742  012A32  50E3               	movf	plusw1,w,c
 22743  012A34  0230               	mulwf	(btemp+11)^0,c
 22744                           
 22745                           ;stkvar	_temp @ sp[(-13)+8]
 22746  012A36  0EFB               	movlw	-5
 22747  012A38  006F FFCF FFE3     	movff	prodl,plusw1
 22748  012A3E  0EFC               	movlw	-4
 22749  012A40  006F FFD3 FFE3     	movff	prodh,plusw1
 22750                           
 22751                           ;stkvar	_temp @ sp[(-13)+8]
 22752  012A46  0EFB               	movlw	-5
 22753  012A48  006F FF8C  F02F    	movff	plusw1,btemp+10
 22754  012A4E  0EFC               	movlw	-4
 22755  012A50  006F FF8C  F030    	movff	plusw1,btemp+11
 22756                           
 22757                           ;stkvar	_grs @ sp[(-13)+4]
 22758  012A56  50E1               	movf	fsr1l,w,c
 22759  012A58  0FF7               	addlw	-9
 22760  012A5A  6ED9               	movwf	fsr2l,c
 22761  012A5C  50E2               	movf	fsr1h,w,c
 22762  012A5E  6EDA               	movwf	fsr2h,c
 22763  012A60  0EFF               	movlw	255
 22764  012A62  22DA               	addwfc	fsr2h,f,c
 22765  012A64  502F               	movf	(btemp+10)^0,w,c
 22766  012A66  26DE               	addwf	postinc2,f,c
 22767  012A68  5030               	movf	(btemp+11)^0,w,c
 22768  012A6A  22DE               	addwfc	postinc2,f,c
 22769  012A6C  0E00               	movlw	0
 22770  012A6E  22DE               	addwfc	postinc2,f,c
 22771  012A70  22DE               	addwfc	postinc2,f,c
 22772                           
 22773                           ;stkvar	_b @ sp[(-13)+-4]
 22774  012A72  0EF0               	movlw	240
 22775  012A74  24E1               	addwf	fsr1l,w,c
 22776  012A76  6ED9               	movwf	fsr2l,c
 22777  012A78  0EFF               	movlw	255
 22778  012A7A  20E2               	addwfc	fsr1h,w,c
 22779  012A7C  6EDA               	movwf	fsr2h,c
 22780  012A7E  50DF               	movf	indf2,w,c
 22781  012A80  6E30               	movwf	(btemp+11)^0,c
 22782                           
 22783                           ;stkvar	_a @ sp[(-13)+-8]
 22784  012A82  0EED               	movlw	237
 22785  012A84  24E1               	addwf	fsr1l,w,c
 22786  012A86  6ED9               	movwf	fsr2l,c
 22787  012A88  0EFF               	movlw	255
 22788  012A8A  20E2               	addwfc	fsr1h,w,c
 22789  012A8C  6EDA               	movwf	fsr2h,c
 22790  012A8E  50DF               	movf	indf2,w,c
 22791  012A90  0230               	mulwf	(btemp+11)^0,c
 22792                           
 22793                           ;stkvar	_temp @ sp[(-13)+8]
 22794  012A92  0EFB               	movlw	-5
 22795  012A94  006F FFCF FFE3     	movff	prodl,plusw1
 22796  012A9A  0EFC               	movlw	-4
 22797  012A9C  006F FFD3 FFE3     	movff	prodh,plusw1
 22798                           
 22799                           ;stkvar	_temp @ sp[(-13)+8]
 22800  012AA2  0EFB               	movlw	-5
 22801  012AA4  006F FF8C  F02F    	movff	plusw1,btemp+10
 22802  012AAA  0EFC               	movlw	-4
 22803  012AAC  006F FF8C  F030    	movff	plusw1,btemp+11
 22804                           
 22805                           ;stkvar	_prod @ sp[(-13)+0]
 22806  012AB2  50E1               	movf	fsr1l,w,c
 22807  012AB4  0FF3               	addlw	-13
 22808  012AB6  6ED9               	movwf	fsr2l,c
 22809  012AB8  50E2               	movf	fsr1h,w,c
 22810  012ABA  6EDA               	movwf	fsr2h,c
 22811  012ABC  0EFF               	movlw	255
 22812  012ABE  22DA               	addwfc	fsr2h,f,c
 22813  012AC0  502F               	movf	(btemp+10)^0,w,c
 22814  012AC2  26DE               	addwf	postinc2,f,c
 22815  012AC4  5030               	movf	(btemp+11)^0,w,c
 22816  012AC6  22DE               	addwfc	postinc2,f,c
 22817  012AC8  0E00               	movlw	0
 22818  012ACA  22DE               	addwfc	postinc2,f,c
 22819  012ACC  22DE               	addwfc	postinc2,f,c
 22820                           
 22821                           ;stkvar	_b @ sp[(-13)+-4]
 22822  012ACE  0EF1               	movlw	241
 22823  012AD0  24E1               	addwf	fsr1l,w,c
 22824  012AD2  6ED9               	movwf	fsr2l,c
 22825  012AD4  0EFF               	movlw	255
 22826  012AD6  20E2               	addwfc	fsr1h,w,c
 22827  012AD8  6EDA               	movwf	fsr2h,c
 22828  012ADA  50DF               	movf	indf2,w,c
 22829  012ADC  6E30               	movwf	(btemp+11)^0,c
 22830                           
 22831                           ;stkvar	_a @ sp[(-13)+-8]
 22832  012ADE  0EEC               	movlw	236
 22833  012AE0  24E1               	addwf	fsr1l,w,c
 22834  012AE2  6ED9               	movwf	fsr2l,c
 22835  012AE4  0EFF               	movlw	255
 22836  012AE6  20E2               	addwfc	fsr1h,w,c
 22837  012AE8  6EDA               	movwf	fsr2h,c
 22838  012AEA  50DF               	movf	indf2,w,c
 22839  012AEC  0230               	mulwf	(btemp+11)^0,c
 22840                           
 22841                           ;stkvar	_temp @ sp[(-13)+8]
 22842  012AEE  0EFB               	movlw	-5
 22843  012AF0  006F FFCF FFE3     	movff	prodl,plusw1
 22844  012AF6  0EFC               	movlw	-4
 22845  012AF8  006F FFD3 FFE3     	movff	prodh,plusw1
 22846                           
 22847                           ;stkvar	_temp @ sp[(-13)+8]
 22848  012AFE  0EFB               	movlw	-5
 22849  012B00  006F FF8C  F02F    	movff	plusw1,btemp+10
 22850  012B06  0EFC               	movlw	-4
 22851  012B08  006F FF8C  F030    	movff	plusw1,btemp+11
 22852                           
 22853                           ;stkvar	_prod @ sp[(-13)+0]
 22854  012B0E  50E1               	movf	fsr1l,w,c
 22855  012B10  0FF3               	addlw	-13
 22856  012B12  6ED9               	movwf	fsr2l,c
 22857  012B14  50E2               	movf	fsr1h,w,c
 22858  012B16  6EDA               	movwf	fsr2h,c
 22859  012B18  0EFF               	movlw	255
 22860  012B1A  22DA               	addwfc	fsr2h,f,c
 22861  012B1C  502F               	movf	(btemp+10)^0,w,c
 22862  012B1E  26DE               	addwf	postinc2,f,c
 22863  012B20  5030               	movf	(btemp+11)^0,w,c
 22864  012B22  22DE               	addwfc	postinc2,f,c
 22865  012B24  0E00               	movlw	0
 22866  012B26  22DE               	addwfc	postinc2,f,c
 22867  012B28  22DE               	addwfc	postinc2,f,c
 22868                           
 22869                           ;stkvar	_b @ sp[(-13)+-4]
 22870  012B2A  0EF1               	movlw	241
 22871  012B2C  24E1               	addwf	fsr1l,w,c
 22872  012B2E  6ED9               	movwf	fsr2l,c
 22873  012B30  0EFF               	movlw	255
 22874  012B32  20E2               	addwfc	fsr1h,w,c
 22875  012B34  6EDA               	movwf	fsr2h,c
 22876  012B36  50DF               	movf	indf2,w,c
 22877  012B38  6E30               	movwf	(btemp+11)^0,c
 22878                           
 22879                           ;stkvar	_a @ sp[(-13)+-8]
 22880  012B3A  0EED               	movlw	237
 22881  012B3C  24E1               	addwf	fsr1l,w,c
 22882  012B3E  6ED9               	movwf	fsr2l,c
 22883  012B40  0EFF               	movlw	255
 22884  012B42  20E2               	addwfc	fsr1h,w,c
 22885  012B44  6EDA               	movwf	fsr2h,c
 22886  012B46  50DF               	movf	indf2,w,c
 22887  012B48  0230               	mulwf	(btemp+11)^0,c
 22888                           
 22889                           ;stkvar	_temp @ sp[(-13)+8]
 22890  012B4A  0EFB               	movlw	-5
 22891  012B4C  006F FFCF FFE3     	movff	prodl,plusw1
 22892  012B52  0EFC               	movlw	-4
 22893  012B54  006F FFD3 FFE3     	movff	prodh,plusw1
 22894                           
 22895                           ;stkvar	_temp @ sp[(-13)+8]
 22896  012B5A  0EFB               	movlw	-5
 22897  012B5C  006F FF8C  F02F    	movff	plusw1,btemp+10
 22898  012B62  0EFC               	movlw	-4
 22899  012B64  006F FF8C  F030    	movff	plusw1,btemp+11
 22900  012B6A  502F               	movf	(btemp+10)^0,w,c
 22901  012B6C  6E29               	movwf	(btemp+4)^0,c
 22902  012B6E  5030               	movf	(btemp+11)^0,w,c
 22903  012B70  6E2A               	movwf	(btemp+5)^0,c
 22904  012B72  6A2B               	clrf	(btemp+6)^0,c
 22905  012B74  6A2C               	clrf	(btemp+7)^0,c
 22906  012B76  0060  F0AC  F02C   	movff	btemp+6,btemp+7
 22907  012B7C  0060  F0A8  F02B   	movff	btemp+5,btemp+6
 22908  012B82  0060  F0A4  F02A   	movff	btemp+4,btemp+5
 22909  012B88  6A29               	clrf	(btemp+4)^0,c
 22910                           
 22911                           ;stkvar	_prod @ sp[(-13)+0]
 22912  012B8A  50E1               	movf	fsr1l,w,c
 22913  012B8C  0FF3               	addlw	-13
 22914  012B8E  6ED9               	movwf	fsr2l,c
 22915  012B90  50E2               	movf	fsr1h,w,c
 22916  012B92  6EDA               	movwf	fsr2h,c
 22917  012B94  0EFF               	movlw	255
 22918  012B96  22DA               	addwfc	fsr2h,f,c
 22919  012B98  5029               	movf	(btemp+4)^0,w,c
 22920  012B9A  26DE               	addwf	postinc2,f,c
 22921  012B9C  502A               	movf	(btemp+5)^0,w,c
 22922  012B9E  22DE               	addwfc	postinc2,f,c
 22923  012BA0  502B               	movf	(btemp+6)^0,w,c
 22924  012BA2  22DE               	addwfc	postinc2,f,c
 22925  012BA4  502C               	movf	(btemp+7)^0,w,c
 22926  012BA6  22DE               	addwfc	postinc2,f,c
 22927                           
 22928                           ;stkvar	_prod @ sp[(-13)+0]
 22929  012BA8  50E1               	movf	fsr1l,w,c
 22930  012BAA  0FF3               	addlw	-13
 22931  012BAC  6ED9               	movwf	fsr2l,c
 22932  012BAE  50E2               	movf	fsr1h,w,c
 22933  012BB0  6EDA               	movwf	fsr2h,c
 22934  012BB2  0EFF               	movlw	255
 22935  012BB4  22DA               	addwfc	fsr2h,f,c
 22936                           
 22937                           ;stkvar	_grs @ sp[(-13)+4]
 22938  012BB6  0EFA               	movlw	250
 22939  012BB8  24E1               	addwf	fsr1l,w,c
 22940  012BBA  6EE9               	movwf	fsr0l,c
 22941  012BBC  0EFF               	movlw	255
 22942  012BBE  20E2               	addwfc	fsr1h,w,c
 22943  012BC0  6EEA               	movwf	fsr0h,c
 22944  012BC2  50EF               	movf	indf0,w,c
 22945  012BC4  26DE               	addwf	postinc2,f,c
 22946  012BC6  0E00               	movlw	0
 22947  012BC8  22DE               	addwfc	postinc2,f,c
 22948  012BCA  22DE               	addwfc	postinc2,f,c
 22949  012BCC  22DE               	addwfc	postinc2,f,c
 22950                           
 22951                           ;stkvar	_grs @ sp[(-13)+4]
 22952  012BCE  50E1               	movf	fsr1l,w,c
 22953  012BD0  0FF7               	addlw	-9
 22954  012BD2  6ED9               	movwf	fsr2l,c
 22955  012BD4  50E2               	movf	fsr1h,w,c
 22956  012BD6  6EDA               	movwf	fsr2h,c
 22957  012BD8  0EFF               	movlw	255
 22958  012BDA  22DA               	addwfc	fsr2h,f,c
 22959  012BDC  0E08               	movlw	8
 22960  012BDE                     u7855:
 22961  012BDE  90D8               	bcf	status,0,c
 22962  012BE0  36DE               	rlcf	postinc2,f,c
 22963  012BE2  36DE               	rlcf	postinc2,f,c
 22964  012BE4  36DE               	rlcf	postinc2,f,c
 22965  012BE6  36DD               	rlcf	postdec2,f,c
 22966  012BE8  52DD               	movf	postdec2,f,c
 22967  012BEA  52DD               	movf	postdec2,f,c
 22968  012BEC  2EE8               	decfsz	wreg,f,c
 22969  012BEE  D7F7               	goto	u7855
 22970  012BF0  0E82               	movlw	130
 22971  012BF2  6E2F               	movwf	(btemp+10)^0,c
 22972  012BF4  0EFF               	movlw	255
 22973  012BF6  6E30               	movwf	(btemp+11)^0,c
 22974                           
 22975                           ;stkvar	_bexp @ sp[(-13)+10]
 22976  012BF8  0EFD               	movlw	-3
 22977  012BFA  50E3               	movf	plusw1,w,c
 22978  012BFC  6E2D               	movwf	(btemp+8)^0,c
 22979  012BFE  6A2E               	clrf	(btemp+9)^0,c
 22980                           
 22981                           ;stkvar	_aexp @ sp[(-13)+11]
 22982  012C00  0EFE               	movlw	-2
 22983  012C02  50E3               	movf	plusw1,w,c
 22984  012C04  262D               	addwf	(btemp+8)^0,f,c
 22985  012C06  0E00               	movlw	0
 22986  012C08  222E               	addwfc	(btemp+9)^0,f,c
 22987  012C0A  502F               	movf	(btemp+10)^0,w,c
 22988  012C0C  262D               	addwf	(btemp+8)^0,f,c
 22989  012C0E  5030               	movf	(btemp+11)^0,w,c
 22990  012C10  222E               	addwfc	(btemp+9)^0,f,c
 22991                           
 22992                           ;stkvar	_temp @ sp[(-13)+8]
 22993  012C12  0EFB               	movlw	-5
 22994  012C14  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22995  012C1A  0EFC               	movlw	-4
 22996  012C1C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22997  012C22  D021               	goto	l8307
 22998  012C24                     l8297:
 22999                           
 23000                           ;stkvar	_prod @ sp[(-13)+0]
 23001  012C24  90D8               	bcf	status,0,c
 23002  012C26  0EF3               	movlw	-13
 23003  012C28  36E3               	rlcf	plusw1,f,c
 23004  012C2A  0EF4               	movlw	-12
 23005  012C2C  36E3               	rlcf	plusw1,f,c
 23006  012C2E  0EF5               	movlw	-11
 23007  012C30  36E3               	rlcf	plusw1,f,c
 23008  012C32  0EF6               	movlw	-10
 23009  012C34  36E3               	rlcf	plusw1,f,c
 23010                           
 23011                           ;stkvar	_grs @ sp[(-13)+4]
 23012  012C36  0EFA               	movlw	-6
 23013  012C38  AEE3               	btfss	plusw1,7,c
 23014  012C3A  D002               	goto	l8303
 23015                           
 23016                           ;stkvar	_prod @ sp[(-13)+0]
 23017  012C3C  0EF3               	movlw	-13
 23018  012C3E  80E3               	bsf	plusw1,0,c
 23019  012C40                     l8303:
 23020                           
 23021                           ;stkvar	_grs @ sp[(-13)+4]
 23022  012C40  90D8               	bcf	status,0,c
 23023  012C42  0EF7               	movlw	-9
 23024  012C44  36E3               	rlcf	plusw1,f,c
 23025  012C46  0EF8               	movlw	-8
 23026  012C48  36E3               	rlcf	plusw1,f,c
 23027  012C4A  0EF9               	movlw	-7
 23028  012C4C  36E3               	rlcf	plusw1,f,c
 23029  012C4E  0EFA               	movlw	-6
 23030  012C50  36E3               	rlcf	plusw1,f,c
 23031                           
 23032                           ;stkvar	_temp @ sp[(-13)+8]
 23033  012C52  50E1               	movf	fsr1l,w,c
 23034  012C54  0FFB               	addlw	-5
 23035  012C56  6ED9               	movwf	fsr2l,c
 23036  012C58  50E2               	movf	fsr1h,w,c
 23037  012C5A  6EDA               	movwf	fsr2h,c
 23038  012C5C  0EFF               	movlw	255
 23039  012C5E  22DA               	addwfc	fsr2h,f,c
 23040  012C60  06DE               	decf	postinc2,f,c
 23041  012C62  0E00               	movlw	0
 23042  012C64  5ADD               	subwfb	postdec2,f,c
 23043  012C66                     l8307:
 23044                           
 23045                           ;stkvar	_prod @ sp[(-13)+0]
 23046  012C66  0EF5               	movlw	-11
 23047  012C68  AEE3               	btfss	plusw1,7,c
 23048  012C6A  D7DC               	goto	l8297
 23049                           
 23050                           ;stkvar	_aexp @ sp[(-13)+11]
 23051  012C6C  0EFE               	movlw	-2
 23052  012C6E  6AE3               	clrf	plusw1,c
 23053                           
 23054                           ;stkvar	_grs @ sp[(-13)+4]
 23055  012C70  0EFA               	movlw	-6
 23056  012C72  AEE3               	btfss	plusw1,7,c
 23057  012C74  D020               	goto	l8321
 23058                           
 23059                           ;stkvar	_grs @ sp[(-13)+4]
 23060  012C76  50E1               	movf	fsr1l,w,c
 23061  012C78  0FF7               	addlw	-9
 23062  012C7A  6ED9               	movwf	fsr2l,c
 23063  012C7C  50E2               	movf	fsr1h,w,c
 23064  012C7E  6EDA               	movwf	fsr2h,c
 23065  012C80  0EFF               	movlw	255
 23066  012C82  22DA               	addwfc	fsr2h,f,c
 23067  012C84  0EFF               	movlw	255
 23068  012C86  14DE               	andwf	postinc2,w,c
 23069  012C88  6E2D               	movwf	(btemp+8)^0,c
 23070  012C8A  0EFF               	movlw	255
 23071  012C8C  14DE               	andwf	postinc2,w,c
 23072  012C8E  6E2E               	movwf	(btemp+9)^0,c
 23073  012C90  0EFF               	movlw	255
 23074  012C92  14DE               	andwf	postinc2,w,c
 23075  012C94  6E2F               	movwf	(btemp+10)^0,c
 23076  012C96  0E7F               	movlw	127
 23077  012C98  14DE               	andwf	postinc2,w,c
 23078  012C9A  6E30               	movwf	(btemp+11)^0,c
 23079  012C9C  502D               	movf	(btemp+8)^0,w,c
 23080  012C9E  102E               	iorwf	(btemp+9)^0,w,c
 23081  012CA0  102F               	iorwf	(btemp+10)^0,w,c
 23082  012CA2  1030               	iorwf	(btemp+11)^0,w,c
 23083  012CA4  B4D8               	btfsc	status,2,c
 23084  012CA6  D004               	goto	l8317
 23085  012CA8                     u7890:
 23086                           
 23087                           ;stkvar	_aexp @ sp[(-13)+11]
 23088  012CA8  0EFE               	movlw	-2
 23089  012CAA  6AE3               	clrf	plusw1,c
 23090  012CAC  2AE3               	incf	plusw1,f,c
 23091  012CAE  D003               	goto	l8321
 23092  012CB0                     l8317:
 23093                           
 23094                           ;stkvar	_prod @ sp[(-13)+0]
 23095  012CB0  0EF3               	movlw	-13
 23096  012CB2  B0E3               	btfsc	plusw1,0,c
 23097  012CB4  D7F9               	goto	u7890
 23098  012CB6                     l8321:
 23099                           
 23100                           ;stkvar	_aexp @ sp[(-13)+11]
 23101  012CB6  0EFE               	movlw	-2
 23102  012CB8  50E3               	movf	plusw1,w,c
 23103  012CBA  B4D8               	btfsc	status,2,c
 23104  012CBC  D036               	goto	l8331
 23105                           
 23106                           ;stkvar	_prod @ sp[(-13)+0]
 23107  012CBE  50E1               	movf	fsr1l,w,c
 23108  012CC0  0FF3               	addlw	-13
 23109  012CC2  6ED9               	movwf	fsr2l,c
 23110  012CC4  50E2               	movf	fsr1h,w,c
 23111  012CC6  6EDA               	movwf	fsr2h,c
 23112  012CC8  0EFF               	movlw	255
 23113  012CCA  22DA               	addwfc	fsr2h,f,c
 23114  012CCC  2ADE               	incf	postinc2,f,c
 23115  012CCE  0E00               	movlw	0
 23116  012CD0  22DE               	addwfc	postinc2,f,c
 23117  012CD2  22DE               	addwfc	postinc2,f,c
 23118  012CD4  22DE               	addwfc	postinc2,f,c
 23119                           
 23120                           ;stkvar	_prod @ sp[(-13)+0]
 23121  012CD6  0EF6               	movlw	-10
 23122  012CD8  A0E3               	btfss	plusw1,0,c
 23123  012CDA  D027               	goto	l8331
 23124  012CDC  0E01               	movlw	1
 23125  012CDE  6E30               	movwf	(btemp+11)^0,c
 23126                           
 23127                           ;stkvar	_prod @ sp[(-13)+0]
 23128  012CE0  50E1               	movf	fsr1l,w,c
 23129  012CE2  0FF3               	addlw	-13
 23130  012CE4  6ED9               	movwf	fsr2l,c
 23131  012CE6  50E2               	movf	fsr1h,w,c
 23132  012CE8  6EDA               	movwf	fsr2h,c
 23133  012CEA  0EFF               	movlw	255
 23134  012CEC  22DA               	addwfc	fsr2h,f,c
 23135  012CEE  2830               	incf	(btemp+11)^0,w,c
 23136  012CF0  52DE               	movf	postinc2,f,c
 23137  012CF2  D008               	goto	u7930
 23138  012CF4                     u7935:
 23139  012CF4  52DE               	movf	postinc2,f,c
 23140  012CF6  90D8               	bcf	status,0,c
 23141  012CF8  BEDC               	btfsc	preinc2,7,c
 23142  012CFA  80D8               	bsf	status,0,c
 23143  012CFC  32DD               	rrcf	postdec2,f,c
 23144  012CFE  32DD               	rrcf	postdec2,f,c
 23145  012D00  32DD               	rrcf	postdec2,f,c
 23146  012D02  32DE               	rrcf	postinc2,f,c
 23147  012D04                     u7930:
 23148  012D04  2EE8               	decfsz	wreg,f,c
 23149  012D06  D7F6               	goto	u7935
 23150                           
 23151                           ;stkvar	_temp @ sp[(-13)+8]
 23152  012D08  0EFB               	movlw	-5
 23153  012D0A  50E3               	movf	plusw1,w,c
 23154  012D0C  0F01               	addlw	1
 23155  012D0E  6E25               	movwf	btemp^0,c
 23156  012D10  0EFB               	movlw	-5
 23157  012D12  0060  F097  FFE3   	movff	btemp,plusw1
 23158  012D18  6A25               	clrf	btemp^0,c
 23159  012D1A  0EFC               	movlw	-4
 23160  012D1C  50E3               	movf	plusw1,w,c
 23161  012D1E  2025               	addwfc	btemp^0,w,c
 23162  012D20  6E25               	movwf	btemp^0,c
 23163  012D22  0EFC               	movlw	-4
 23164  012D24  0060  F097  FFE3   	movff	btemp,plusw1
 23165  012D2A                     l8331:
 23166                           
 23167                           ;stkvar	_temp @ sp[(-13)+8]
 23168  012D2A  0EFC               	movlw	-4
 23169  012D2C  BEE3               	btfsc	plusw1,7,c
 23170  012D2E  D020               	goto	l8335
 23171  012D30  0EFC               	movlw	-4
 23172  012D32  50E3               	movf	plusw1,w,c
 23173  012D34  E104               	bnz	u7940
 23174  012D36  0EFB               	movlw	-5
 23175  012D38  28E3               	incf	plusw1,w,c
 23176  012D3A  A0D8               	btfss	status,0,c
 23177  012D3C  D019               	goto	l8335
 23178  012D3E                     u7940:
 23179  012D3E  0E00               	movlw	0
 23180  012D40  6E2D               	movwf	(btemp+8)^0,c
 23181  012D42  0E00               	movlw	0
 23182  012D44  6E2E               	movwf	(btemp+9)^0,c
 23183  012D46  0E80               	movlw	128
 23184  012D48  6E2F               	movwf	(btemp+10)^0,c
 23185  012D4A  0E7F               	movlw	127
 23186  012D4C  6E30               	movwf	(btemp+11)^0,c
 23187                           
 23188                           ;stkvar	_prod @ sp[(-13)+0]
 23189  012D4E  0EF3               	movlw	-13
 23190  012D50  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23191  012D56  0EF4               	movlw	-12
 23192  012D58  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23193  012D5E  0EF5               	movlw	-11
 23194  012D60  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 23195  012D66  0EF6               	movlw	-10
 23196  012D68  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 23197  012D6E  D044               	goto	l8351
 23198  012D70                     l8335:
 23199                           
 23200                           ;stkvar	_temp @ sp[(-13)+8]
 23201  012D70  0EFC               	movlw	-4
 23202  012D72  BEE3               	btfsc	plusw1,7,c
 23203  012D74  D007               	goto	u7950
 23204  012D76  0EFC               	movlw	-4
 23205  012D78  50E3               	movf	plusw1,w,c
 23206  012D7A  E10F               	bnz	l8341
 23207  012D7C  0EFB               	movlw	-5
 23208  012D7E  04E3               	decf	plusw1,w,c
 23209  012D80  B0D8               	btfsc	status,0,c
 23210  012D82  D00B               	goto	l8341
 23211  012D84                     u7950:
 23212                           
 23213                           ;stkvar	_prod @ sp[(-13)+0]
 23214  012D84  0EF3               	movlw	-13
 23215  012D86  6AE3               	clrf	plusw1,c
 23216  012D88  0EF4               	movlw	-12
 23217  012D8A  6AE3               	clrf	plusw1,c
 23218  012D8C  0EF5               	movlw	-11
 23219  012D8E  6AE3               	clrf	plusw1,c
 23220  012D90  0EF6               	movlw	-10
 23221  012D92  6AE3               	clrf	plusw1,c
 23222                           
 23223                           ;stkvar	_sign @ sp[(-13)+12]
 23224  012D94  0EFF               	movlw	-1
 23225  012D96  6AE3               	clrf	plusw1,c
 23226  012D98  D02F               	goto	l8351
 23227  012D9A                     l8341:
 23228                           
 23229                           ;stkvar	_temp @ sp[(-13)+8]
 23230                           ;stkvar	_bexp @ sp[(-13)+10]
 23231  012D9A  0EFB               	movlw	-5
 23232  012D9C  006F FF8C  F025    	movff	plusw1,btemp
 23233  012DA2  0EFD               	movlw	-3
 23234  012DA4  0060  F097  FFE3   	movff	btemp,plusw1
 23235                           
 23236                           ;stkvar	_prod @ sp[(-13)+0]
 23237  012DAA  50E1               	movf	fsr1l,w,c
 23238  012DAC  0FF3               	addlw	-13
 23239  012DAE  6ED9               	movwf	fsr2l,c
 23240  012DB0  50E2               	movf	fsr1h,w,c
 23241  012DB2  6EDA               	movwf	fsr2h,c
 23242  012DB4  0EFF               	movlw	255
 23243  012DB6  22DA               	addwfc	fsr2h,f,c
 23244  012DB8  0EFF               	movlw	255
 23245  012DBA  16DE               	andwf	postinc2,f,c
 23246  012DBC  0EFF               	movlw	255
 23247  012DBE  16DE               	andwf	postinc2,f,c
 23248  012DC0  0E7F               	movlw	127
 23249  012DC2  16DE               	andwf	postinc2,f,c
 23250  012DC4  0E00               	movlw	0
 23251  012DC6  16DE               	andwf	postinc2,f,c
 23252                           
 23253                           ;stkvar	_bexp @ sp[(-13)+10]
 23254  012DC8  0EFD               	movlw	-3
 23255  012DCA  A0E3               	btfss	plusw1,0,c
 23256  012DCC  D008               	goto	l8349
 23257                           
 23258                           ;stkvar	_prod @ sp[(-13)+0]
 23259  012DCE  0EF5               	movlw	245
 23260  012DD0  24E1               	addwf	fsr1l,w,c
 23261  012DD2  6ED9               	movwf	fsr2l,c
 23262  012DD4  0EFF               	movlw	255
 23263  012DD6  20E2               	addwfc	fsr1h,w,c
 23264  012DD8  6EDA               	movwf	fsr2h,c
 23265  012DDA  0E00               	movlw	0
 23266  012DDC  8EDB               	bsf	plusw2,7,c
 23267  012DDE                     l8349:
 23268                           
 23269                           ;stkvar	_prod @ sp[(-13)+0]
 23270  012DDE  0EF6               	movlw	246
 23271  012DE0  24E1               	addwf	fsr1l,w,c
 23272  012DE2  6ED9               	movwf	fsr2l,c
 23273  012DE4  0EFF               	movlw	255
 23274  012DE6  20E2               	addwfc	fsr1h,w,c
 23275  012DE8  6EDA               	movwf	fsr2h,c
 23276                           
 23277                           ;stkvar	_bexp @ sp[(-13)+10]
 23278  012DEA  0EFD               	movlw	-3
 23279  012DEC  006F FF8C  F030    	movff	plusw1,btemp+11
 23280  012DF2  90D8               	bcf	status,0,c
 23281  012DF4  3030               	rrcf	(btemp+11)^0,w,c
 23282  012DF6  6EDF               	movwf	indf2,c
 23283  012DF8                     l8351:
 23284                           
 23285                           ;stkvar	_sign @ sp[(-13)+12]
 23286  012DF8  0EFF               	movlw	-1
 23287  012DFA  006F FF8C  F030    	movff	plusw1,btemp+11
 23288                           
 23289                           ;stkvar	_prod @ sp[(-13)+0]
 23290  012E00  0EF6               	movlw	246
 23291  012E02  24E1               	addwf	fsr1l,w,c
 23292  012E04  6ED9               	movwf	fsr2l,c
 23293  012E06  0EFF               	movlw	255
 23294  012E08  20E2               	addwfc	fsr1h,w,c
 23295  012E0A  6EDA               	movwf	fsr2h,c
 23296  012E0C  5030               	movf	(btemp+11)^0,w,c
 23297  012E0E  12DF               	iorwf	indf2,f,c
 23298                           
 23299                           ;stkvar	_prod @ sp[(-13)+0]
 23300  012E10  0EF3               	movlw	-13
 23301  012E12  006F FF8C  F025    	movff	plusw1,btemp
 23302  012E18  0EF4               	movlw	-12
 23303  012E1A  006F FF8C  F026    	movff	plusw1,btemp+1
 23304  012E20  0EF5               	movlw	-11
 23305  012E22  006F FF8C  F027    	movff	plusw1,btemp+2
 23306  012E28  0EF6               	movlw	-10
 23307  012E2A  006F FF8C  F028    	movff	plusw1,btemp+3
 23308  012E30                     l2834:
 23309                           
 23310                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23311  012E30  0EEB               	movlw	235
 23312  012E32  26E1               	addwf	fsr1l,f,c
 23313  012E34  0EFF               	movlw	255
 23314  012E36  22E2               	addwfc	fsr1h,f,c
 23315  012E38  0012               	return		;funcret
 23316  012E3A                     __end_of___flmul:
 23317                           	opt callstack 0
 23318                           
 23319 ;; *************** function _SYSTEM_Initialize *****************
 23320 ;; Defined at:
 23321 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23322 ;; Parameters:    Size  Location     Type
 23323 ;;		None
 23324 ;; Auto vars:     Size  Location     Type
 23325 ;;		None
 23326 ;; Return value:  Size  Location     Type
 23327 ;;                  1  [STACK] void 
 23328 ;; Registers used:
 23329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23330 ;; Tracked objects:
 23331 ;;		On entry : 0/0
 23332 ;;		On exit  : 3F/3C
 23333 ;;		Unchanged: 0/0
 23334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23339 ;;Total ram usage:        0 bytes
 23340 ;; Hardware stack levels used:    1
 23341 ;; Hardware stack levels required when called:   12
 23342 ;; This function calls:
 23343 ;;		_ADCC_Initialize
 23344 ;;		_CLKREF_Initialize
 23345 ;;		_DMA1_Initialize
 23346 ;;		_DMA2_Initialize
 23347 ;;		_EXT_INT_Initialize
 23348 ;;		_FVR_Initialize
 23349 ;;		_INTERRUPT_Initialize
 23350 ;;		_OSCILLATOR_Initialize
 23351 ;;		_PIN_MANAGER_Initialize
 23352 ;;		_PMD_Initialize
 23353 ;;		_PWM8_Initialize
 23354 ;;		_SPI1_Initialize
 23355 ;;		_TMR2_Initialize
 23356 ;;		_TMR3_Initialize
 23357 ;;		_TMR5_Initialize
 23358 ;;		_TMR6_Initialize
 23359 ;;		_UART1_Initialize
 23360 ;;		_UART2_Initialize
 23361 ;; This function is called by:
 23362 ;;		_main
 23363 ;; This function uses a reentrant model
 23364 ;;
 23365                           
 23366                           	psect	text95
 23367  0184A0                     __ptext95:
 23368                           	opt callstack 0
 23369  0184A0                     _SYSTEM_Initialize:
 23370                           	opt callstack 18
 23371                           
 23372                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23373                           
 23374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23375                           ;incstack = 0
 23376  0184A0  EC27  F0C0         	call	_INTERRUPT_Initialize	;wreg free
 23377                           
 23378                           ; BSR set to: 57
 23379                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23380  0184A4  EC58  F0C8         	call	_PMD_Initialize	;wreg free
 23381                           
 23382                           ; BSR set to: 57
 23383                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23384  0184A8  ECA9  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 23385                           
 23386                           ; BSR set to: 58
 23387                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23388  0184AC  EC4D  F0C8         	call	_OSCILLATOR_Initialize	;wreg free
 23389                           
 23390                           ; BSR set to: 57
 23391                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23392  0184B0  ECBF  F0C8         	call	_FVR_Initialize	;wreg free
 23393                           
 23394                           ; BSR set to: 62
 23395                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23396  0184B4  ECBD  F0BF         	call	_ADCC_Initialize	;wreg free
 23397                           
 23398                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 23399  0184B8  EC42  F0C8         	call	_PWM8_Initialize	;wreg free
 23400                           
 23401                           ; BSR set to: 63
 23402                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23403  0184BC  EC2B  F0C8         	call	_TMR2_Initialize	;wreg free
 23404                           
 23405                           ; BSR set to: 57
 23406                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23407  0184C0  EC8E  F0C4         	call	_EXT_INT_Initialize	;wreg free
 23408                           
 23409                           ; BSR set to: 57
 23410                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23411  0184C4  EC4A  F0C5         	call	_TMR6_Initialize	;wreg free
 23412                           
 23413                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 23414  0184C8  EC02  F0C3         	call	_TMR3_Initialize	;wreg free
 23415                           
 23416                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 23417  0184CC  ECDF  F0C2         	call	_TMR5_Initialize	;wreg free
 23418                           
 23419                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 23420  0184D0  EC8D  F0C0         	call	_UART1_Initialize	;wreg free
 23421                           
 23422                           ; BSR set to: 57
 23423                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 23424  0184D4  EC21  F0C1         	call	_UART2_Initialize	;wreg free
 23425                           
 23426                           ; BSR set to: 57
 23427                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 23428  0184D8  EC37  F0C8         	call	_SPI1_Initialize	;wreg free
 23429                           
 23430                           ; BSR set to: 61
 23431                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 23432  0184DC  EC7D  F0C1         	call	_DMA2_Initialize	;wreg free
 23433                           
 23434                           ; BSR set to: 59
 23435                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 23436  0184E0  EC88  F0BF         	call	_DMA1_Initialize	;wreg free
 23437                           
 23438                           ; BSR set to: 59
 23439                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 23440  0184E4  EC99  F0C8         	call	_CLKREF_Initialize	;wreg free
 23441                           
 23442                           ; BSR set to: 60
 23443                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23444  0184E8  0012               	return		;funcret
 23445  0184EA                     __end_of_SYSTEM_Initialize:
 23446                           	opt callstack 0
 23447                           
 23448 ;; *************** function _UART2_Initialize *****************
 23449 ;; Defined at:
 23450 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23451 ;; Parameters:    Size  Location     Type
 23452 ;;		None
 23453 ;; Auto vars:     Size  Location     Type
 23454 ;;		None
 23455 ;; Return value:  Size  Location     Type
 23456 ;;                  1  [STACK] void 
 23457 ;; Registers used:
 23458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23459 ;; Tracked objects:
 23460 ;;		On entry : 3F/39
 23461 ;;		On exit  : 3F/39
 23462 ;;		Unchanged: 0/0
 23463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23468 ;;Total ram usage:        0 bytes
 23469 ;; Hardware stack levels used:    1
 23470 ;; Hardware stack levels required when called:   11
 23471 ;; This function calls:
 23472 ;;		_UART2_SetRxInterruptHandler
 23473 ;;		_UART2_SetTxInterruptHandler
 23474 ;; This function is called by:
 23475 ;;		_SYSTEM_Initialize
 23476 ;; This function uses a reentrant model
 23477 ;;
 23478                           
 23479                           	psect	text96
 23480  018242                     __ptext96:
 23481                           	opt callstack 0
 23482  018242                     _UART2_Initialize:
 23483                           	opt callstack 18
 23484                           
 23485                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23486                           
 23487                           ; BSR set to: 60
 23488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23489                           ;incstack = 0
 23490  018242  0139               	movlb	57	; () banked
 23491  018244  9596               	bcf	150,2,b	;volatile
 23492                           
 23493                           ; BSR set to: 57
 23494                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23495  018246  0EB4               	movlw	low _UART2_Receive_ISR
 23496  018248  6EE6               	movwf	postinc1,c
 23497  01824A  0E8F               	movlw	high _UART2_Receive_ISR
 23498  01824C  6EE6               	movwf	postinc1,c
 23499  01824E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23500  018250  6EE6               	movwf	postinc1,c
 23501  018252  ECD7  F0C5         	call	_UART2_SetRxInterruptHandler	;wreg free
 23502                           
 23503                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23504  018256  0139               	movlb	57	; () banked
 23505  018258  9796               	bcf	150,3,b	;volatile
 23506                           
 23507                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23508  01825A  0E68               	movlw	low _UART2_Transmit_ISR
 23509  01825C  6EE6               	movwf	postinc1,c
 23510  01825E  0E8A               	movlw	high _UART2_Transmit_ISR
 23511  018260  6EE6               	movwf	postinc1,c
 23512  018262  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23513  018264  6EE6               	movwf	postinc1,c
 23514  018266  ECC3  F0C5         	call	_UART2_SetTxInterruptHandler	;wreg free
 23515                           
 23516                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23517  01826A  013D               	movlb	61	; () banked
 23518  01826C  6BD4               	clrf	212,b	;volatile
 23519                           
 23520                           ; BSR set to: 61
 23521                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23522  01826E  6BD6               	clrf	214,b	;volatile
 23523                           
 23524                           ; BSR set to: 61
 23525                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23526  018270  6BD8               	clrf	216,b	;volatile
 23527                           
 23528                           ; BSR set to: 61
 23529                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23530  018272  0EB0               	movlw	176
 23531  018274  6FDA               	movwf	218,b	;volatile
 23532                           
 23533                           ; BSR set to: 61
 23534                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23535  018276  0E80               	movlw	128
 23536  018278  6FDB               	movwf	219,b	;volatile
 23537                           
 23538                           ; BSR set to: 61
 23539                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23540  01827A  6BDC               	clrf	220,b	;volatile
 23541                           
 23542                           ; BSR set to: 61
 23543                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23544  01827C  0E82               	movlw	130
 23545  01827E  6FDD               	movwf	221,b	;volatile
 23546                           
 23547                           ; BSR set to: 61
 23548                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23549  018280  0E06               	movlw	6
 23550  018282  6FDE               	movwf	222,b	;volatile
 23551                           
 23552                           ; BSR set to: 61
 23553                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23554  018284  6BDF               	clrf	223,b	;volatile
 23555                           
 23556                           ; BSR set to: 61
 23557                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23558  018286  6BE0               	clrf	224,b	;volatile
 23559                           
 23560                           ; BSR set to: 61
 23561                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23562  018288  6BE1               	clrf	225,b	;volatile
 23563                           
 23564                           ; BSR set to: 61
 23565                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23566  01828A  6BE2               	clrf	226,b	;volatile
 23567                           
 23568                           ; BSR set to: 61
 23569                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23570  01828C  6A1E               	clrf	_uart2TxHead^0,c	;volatile
 23571                           
 23572                           ; BSR set to: 61
 23573                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23574  01828E  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 23575                           
 23576                           ; BSR set to: 61
 23577                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23578  018290  0E40               	movlw	64
 23579  018292  6E1C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23580                           
 23581                           ; BSR set to: 61
 23582                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23583  018294  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 23584                           
 23585                           ; BSR set to: 61
 23586                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23587  018296  6A1A               	clrf	_uart2RxTail^0,c	;volatile
 23588                           
 23589                           ; BSR set to: 61
 23590                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23591  018298  6A19               	clrf	_uart2RxCount^0,c	;volatile
 23592                           
 23593                           ; BSR set to: 61
 23594                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23595  01829A  0139               	movlb	57	; () banked
 23596  01829C  8596               	bsf	150,2,b	;volatile
 23597                           
 23598                           ; BSR set to: 57
 23599                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23600  01829E  0012               	return		;funcret
 23601  0182A0                     __end_of_UART2_Initialize:
 23602                           	opt callstack 0
 23603                           
 23604 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23605 ;; Defined at:
 23606 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23607 ;; Parameters:    Size  Location     Type
 23608 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23609 ;;		 -> UART2_Transmit_ISR(1), 
 23610 ;; Auto vars:     Size  Location     Type
 23611 ;;		None
 23612 ;; Return value:  Size  Location     Type
 23613 ;;                  1  [STACK] void 
 23614 ;; Registers used:
 23615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23616 ;; Tracked objects:
 23617 ;;		On entry : 3F/39
 23618 ;;		On exit  : 0/0
 23619 ;;		Unchanged: 0/0
 23620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23625 ;;Total ram usage:        0 bytes
 23626 ;; Hardware stack levels used:    1
 23627 ;; Hardware stack levels required when called:   10
 23628 ;; This function calls:
 23629 ;;		Nothing
 23630 ;; This function is called by:
 23631 ;;		_UART2_Initialize
 23632 ;; This function uses a reentrant model
 23633 ;;
 23634                           
 23635                           	psect	text97
 23636  018B86                     __ptext97:
 23637                           	opt callstack 0
 23638  018B86                     _UART2_SetTxInterruptHandler:
 23639                           	opt callstack 18
 23640                           
 23641                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23642                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23643                           
 23644                           ; BSR set to: 57
 23645                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23646                           ;incstack = 0
 23647  018B86  50E1               	movf	fsr1l,w,c
 23648  018B88  0FFD               	addlw	-3
 23649  018B8A  6ED9               	movwf	fsr2l,c
 23650  018B8C  50E2               	movf	fsr1h,w,c
 23651  018B8E  6EDA               	movwf	fsr2h,c
 23652  018B90  0EFF               	movlw	255
 23653  018B92  22DA               	addwfc	fsr2h,f,c
 23654  018B94  006F FF78  F0BE    	movff	postinc2,_UART2_TxInterruptHandler
 23655  018B9A  006F FF78  F0BF    	movff	postinc2,_UART2_TxInterruptHandler+1
 23656  018BA0  006F FF74  F0C0    	movff	postdec2,_UART2_TxInterruptHandler+2
 23657                           
 23658                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23659  018BA6  52E5               	movf	postdec1,f,c
 23660  018BA8  52E5               	movf	postdec1,f,c
 23661  018BAA  52E5               	movf	postdec1,f,c
 23662  018BAC  0012               	return		;funcret
 23663  018BAE                     __end_of_UART2_SetTxInterruptHandler:
 23664                           	opt callstack 0
 23665                           
 23666 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23667 ;; Defined at:
 23668 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23669 ;; Parameters:    Size  Location     Type
 23670 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23671 ;;		 -> UART2_Receive_ISR(1), 
 23672 ;; Auto vars:     Size  Location     Type
 23673 ;;		None
 23674 ;; Return value:  Size  Location     Type
 23675 ;;                  1  [STACK] void 
 23676 ;; Registers used:
 23677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23678 ;; Tracked objects:
 23679 ;;		On entry : 3F/39
 23680 ;;		On exit  : 0/0
 23681 ;;		Unchanged: 0/0
 23682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23687 ;;Total ram usage:        0 bytes
 23688 ;; Hardware stack levels used:    1
 23689 ;; Hardware stack levels required when called:   10
 23690 ;; This function calls:
 23691 ;;		Nothing
 23692 ;; This function is called by:
 23693 ;;		_UART2_Initialize
 23694 ;; This function uses a reentrant model
 23695 ;;
 23696                           
 23697                           	psect	text98
 23698  018BAE                     __ptext98:
 23699                           	opt callstack 0
 23700  018BAE                     _UART2_SetRxInterruptHandler:
 23701                           	opt callstack 18
 23702                           
 23703                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23704                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23705                           
 23706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23707                           ;incstack = 0
 23708  018BAE  50E1               	movf	fsr1l,w,c
 23709  018BB0  0FFD               	addlw	-3
 23710  018BB2  6ED9               	movwf	fsr2l,c
 23711  018BB4  50E2               	movf	fsr1h,w,c
 23712  018BB6  6EDA               	movwf	fsr2h,c
 23713  018BB8  0EFF               	movlw	255
 23714  018BBA  22DA               	addwfc	fsr2h,f,c
 23715  018BBC  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 23716  018BC2  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 23717  018BC8  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 23718                           
 23719                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23720  018BCE  52E5               	movf	postdec1,f,c
 23721  018BD0  52E5               	movf	postdec1,f,c
 23722  018BD2  52E5               	movf	postdec1,f,c
 23723  018BD4  0012               	return		;funcret
 23724  018BD6                     __end_of_UART2_SetRxInterruptHandler:
 23725                           	opt callstack 0
 23726                           
 23727 ;; *************** function _UART1_Initialize *****************
 23728 ;; Defined at:
 23729 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23730 ;; Parameters:    Size  Location     Type
 23731 ;;		None
 23732 ;; Auto vars:     Size  Location     Type
 23733 ;;		None
 23734 ;; Return value:  Size  Location     Type
 23735 ;;                  1  [STACK] void 
 23736 ;; Registers used:
 23737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23738 ;; Tracked objects:
 23739 ;;		On entry : 0/39
 23740 ;;		On exit  : 3F/39
 23741 ;;		Unchanged: 0/0
 23742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23747 ;;Total ram usage:        0 bytes
 23748 ;; Hardware stack levels used:    1
 23749 ;; Hardware stack levels required when called:   11
 23750 ;; This function calls:
 23751 ;;		_UART1_SetRxInterruptHandler
 23752 ;;		_UART1_SetTxInterruptHandler
 23753 ;; This function is called by:
 23754 ;;		_SYSTEM_Initialize
 23755 ;; This function uses a reentrant model
 23756 ;;
 23757                           
 23758                           	psect	text99
 23759  01811A                     __ptext99:
 23760                           	opt callstack 0
 23761  01811A                     _UART1_Initialize:
 23762                           	opt callstack 18
 23763                           
 23764                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23765                           
 23766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23767                           ;incstack = 0
 23768  01811A  0139               	movlb	57	; () banked
 23769  01811C  9793               	bcf	147,3,b	;volatile
 23770                           
 23771                           ; BSR set to: 57
 23772                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23773  01811E  0E96               	movlw	low _UART1_Receive_ISR
 23774  018120  6EE6               	movwf	postinc1,c
 23775  018122  0E8F               	movlw	high _UART1_Receive_ISR
 23776  018124  6EE6               	movwf	postinc1,c
 23777  018126  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23778  018128  6EE6               	movwf	postinc1,c
 23779  01812A  ECFF  F0C5         	call	_UART1_SetRxInterruptHandler	;wreg free
 23780                           
 23781                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23782  01812E  0139               	movlb	57	; () banked
 23783  018130  9993               	bcf	147,4,b	;volatile
 23784                           
 23785                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23786  018132  0E3C               	movlw	low _UART1_Transmit_ISR
 23787  018134  6EE6               	movwf	postinc1,c
 23788  018136  0E8A               	movlw	high _UART1_Transmit_ISR
 23789  018138  6EE6               	movwf	postinc1,c
 23790  01813A  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23791  01813C  6EE6               	movwf	postinc1,c
 23792  01813E  ECEB  F0C5         	call	_UART1_SetTxInterruptHandler	;wreg free
 23793                           
 23794                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23795  018142  013D               	movlb	61	; () banked
 23796  018144  6BEC               	clrf	236,b	;volatile
 23797                           
 23798                           ; BSR set to: 61
 23799                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23800  018146  6BED               	clrf	237,b	;volatile
 23801                           
 23802                           ; BSR set to: 61
 23803                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23804  018148  6BEE               	clrf	238,b	;volatile
 23805                           
 23806                           ; BSR set to: 61
 23807                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23808  01814A  6BEF               	clrf	239,b	;volatile
 23809                           
 23810                           ; BSR set to: 61
 23811                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23812  01814C  6BF0               	clrf	240,b	;volatile
 23813                           
 23814                           ; BSR set to: 61
 23815                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23816  01814E  6BF1               	clrf	241,b	;volatile
 23817                           
 23818                           ; BSR set to: 61
 23819                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23820  018150  0EB0               	movlw	176
 23821  018152  6FF2               	movwf	242,b	;volatile
 23822                           
 23823                           ; BSR set to: 61
 23824                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23825  018154  0E80               	movlw	128
 23826  018156  6FF3               	movwf	243,b	;volatile
 23827                           
 23828                           ; BSR set to: 61
 23829                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23830  018158  6BF4               	clrf	244,b	;volatile
 23831                           
 23832                           ; BSR set to: 61
 23833                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23834  01815A  0E82               	movlw	130
 23835  01815C  6FF5               	movwf	245,b	;volatile
 23836                           
 23837                           ; BSR set to: 61
 23838                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23839  01815E  0E06               	movlw	6
 23840  018160  6FF6               	movwf	246,b	;volatile
 23841                           
 23842                           ; BSR set to: 61
 23843                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23844  018162  6BF7               	clrf	247,b	;volatile
 23845                           
 23846                           ; BSR set to: 61
 23847                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23848  018164  6BF8               	clrf	248,b	;volatile
 23849                           
 23850                           ; BSR set to: 61
 23851                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23852  018166  6BF9               	clrf	249,b	;volatile
 23853                           
 23854                           ; BSR set to: 61
 23855                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23856  018168  6BFA               	clrf	250,b	;volatile
 23857                           
 23858                           ; BSR set to: 61
 23859                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23860  01816A  6A24               	clrf	_uart1TxHead^0,c	;volatile
 23861                           
 23862                           ; BSR set to: 61
 23863                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23864  01816C  6A23               	clrf	_uart1TxTail^0,c	;volatile
 23865                           
 23866                           ; BSR set to: 61
 23867                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23868  01816E  0E40               	movlw	64
 23869  018170  6E22               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23870                           
 23871                           ; BSR set to: 61
 23872                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23873  018172  6A21               	clrf	_uart1RxHead^0,c	;volatile
 23874                           
 23875                           ; BSR set to: 61
 23876                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23877  018174  6A20               	clrf	_uart1RxTail^0,c	;volatile
 23878                           
 23879                           ; BSR set to: 61
 23880                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23881  018176  6A1F               	clrf	_uart1RxCount^0,c	;volatile
 23882                           
 23883                           ; BSR set to: 61
 23884                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23885  018178  0139               	movlb	57	; () banked
 23886  01817A  8793               	bsf	147,3,b	;volatile
 23887                           
 23888                           ; BSR set to: 57
 23889                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23890  01817C  0012               	return		;funcret
 23891  01817E                     __end_of_UART1_Initialize:
 23892                           	opt callstack 0
 23893                           
 23894 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23895 ;; Defined at:
 23896 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23897 ;; Parameters:    Size  Location     Type
 23898 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23899 ;;		 -> UART1_Transmit_ISR(1), 
 23900 ;; Auto vars:     Size  Location     Type
 23901 ;;		None
 23902 ;; Return value:  Size  Location     Type
 23903 ;;                  1  [STACK] void 
 23904 ;; Registers used:
 23905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23906 ;; Tracked objects:
 23907 ;;		On entry : 3F/39
 23908 ;;		On exit  : 0/0
 23909 ;;		Unchanged: 0/0
 23910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23915 ;;Total ram usage:        0 bytes
 23916 ;; Hardware stack levels used:    1
 23917 ;; Hardware stack levels required when called:   10
 23918 ;; This function calls:
 23919 ;;		Nothing
 23920 ;; This function is called by:
 23921 ;;		_UART1_Initialize
 23922 ;; This function uses a reentrant model
 23923 ;;
 23924                           
 23925                           	psect	text100
 23926  018BD6                     __ptext100:
 23927                           	opt callstack 0
 23928  018BD6                     _UART1_SetTxInterruptHandler:
 23929                           	opt callstack 18
 23930                           
 23931                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23932                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23933                           
 23934                           ; BSR set to: 57
 23935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23936                           ;incstack = 0
 23937  018BD6  50E1               	movf	fsr1l,w,c
 23938  018BD8  0FFD               	addlw	-3
 23939  018BDA  6ED9               	movwf	fsr2l,c
 23940  018BDC  50E2               	movf	fsr1h,w,c
 23941  018BDE  6EDA               	movwf	fsr2h,c
 23942  018BE0  0EFF               	movlw	255
 23943  018BE2  22DA               	addwfc	fsr2h,f,c
 23944  018BE4  006F FF78  F0B8    	movff	postinc2,_UART1_TxInterruptHandler
 23945  018BEA  006F FF78  F0B9    	movff	postinc2,_UART1_TxInterruptHandler+1
 23946  018BF0  006F FF74  F0BA    	movff	postdec2,_UART1_TxInterruptHandler+2
 23947                           
 23948                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23949  018BF6  52E5               	movf	postdec1,f,c
 23950  018BF8  52E5               	movf	postdec1,f,c
 23951  018BFA  52E5               	movf	postdec1,f,c
 23952  018BFC  0012               	return		;funcret
 23953  018BFE                     __end_of_UART1_SetTxInterruptHandler:
 23954                           	opt callstack 0
 23955                           
 23956 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23957 ;; Defined at:
 23958 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23959 ;; Parameters:    Size  Location     Type
 23960 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23961 ;;		 -> UART1_Receive_ISR(1), 
 23962 ;; Auto vars:     Size  Location     Type
 23963 ;;		None
 23964 ;; Return value:  Size  Location     Type
 23965 ;;                  1  [STACK] void 
 23966 ;; Registers used:
 23967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23968 ;; Tracked objects:
 23969 ;;		On entry : 3F/39
 23970 ;;		On exit  : 0/0
 23971 ;;		Unchanged: 0/0
 23972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23977 ;;Total ram usage:        0 bytes
 23978 ;; Hardware stack levels used:    1
 23979 ;; Hardware stack levels required when called:   10
 23980 ;; This function calls:
 23981 ;;		Nothing
 23982 ;; This function is called by:
 23983 ;;		_UART1_Initialize
 23984 ;; This function uses a reentrant model
 23985 ;;
 23986                           
 23987                           	psect	text101
 23988  018BFE                     __ptext101:
 23989                           	opt callstack 0
 23990  018BFE                     _UART1_SetRxInterruptHandler:
 23991                           	opt callstack 18
 23992                           
 23993                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23994                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23995                           
 23996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23997                           ;incstack = 0
 23998  018BFE  50E1               	movf	fsr1l,w,c
 23999  018C00  0FFD               	addlw	-3
 24000  018C02  6ED9               	movwf	fsr2l,c
 24001  018C04  50E2               	movf	fsr1h,w,c
 24002  018C06  6EDA               	movwf	fsr2h,c
 24003  018C08  0EFF               	movlw	255
 24004  018C0A  22DA               	addwfc	fsr2h,f,c
 24005  018C0C  006F FF78  F0BB    	movff	postinc2,_UART1_RxInterruptHandler
 24006  018C12  006F FF78  F0BC    	movff	postinc2,_UART1_RxInterruptHandler+1
 24007  018C18  006F FF74  F0BD    	movff	postdec2,_UART1_RxInterruptHandler+2
 24008                           
 24009                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24010  018C1E  52E5               	movf	postdec1,f,c
 24011  018C20  52E5               	movf	postdec1,f,c
 24012  018C22  52E5               	movf	postdec1,f,c
 24013  018C24  0012               	return		;funcret
 24014  018C26                     __end_of_UART1_SetRxInterruptHandler:
 24015                           	opt callstack 0
 24016                           
 24017 ;; *************** function _TMR6_Initialize *****************
 24018 ;; Defined at:
 24019 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 24020 ;; Parameters:    Size  Location     Type
 24021 ;;		None
 24022 ;; Auto vars:     Size  Location     Type
 24023 ;;		None
 24024 ;; Return value:  Size  Location     Type
 24025 ;;                  1  [STACK] void 
 24026 ;; Registers used:
 24027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24028 ;; Tracked objects:
 24029 ;;		On entry : 3F/39
 24030 ;;		On exit  : 0/0
 24031 ;;		Unchanged: 0/0
 24032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24037 ;;Total ram usage:        0 bytes
 24038 ;; Hardware stack levels used:    1
 24039 ;; Hardware stack levels required when called:   11
 24040 ;; This function calls:
 24041 ;;		_TMR6_SetInterruptHandler
 24042 ;; This function is called by:
 24043 ;;		_SYSTEM_Initialize
 24044 ;; This function uses a reentrant model
 24045 ;;
 24046                           
 24047                           	psect	text102
 24048  018A94                     __ptext102:
 24049                           	opt callstack 0
 24050  018A94                     _TMR6_Initialize:
 24051                           	opt callstack 18
 24052                           
 24053                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 24054                           
 24055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24056                           ;incstack = 0
 24057  018A94  0E01               	movlw	1
 24058  018A96  6E96               	movwf	150,c	;volatile
 24059                           
 24060                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 24061  018A98  6A95               	clrf	149,c	;volatile
 24062                           
 24063                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 24064  018A9A  6A97               	clrf	151,c	;volatile
 24065                           
 24066                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 24067  018A9C  0E7C               	movlw	124
 24068  018A9E  6E93               	movwf	147,c	;volatile
 24069                           
 24070                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 24071  018AA0  6A92               	clrf	146,c	;volatile
 24072                           
 24073                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 24074  018AA2  0139               	movlb	57	; () banked
 24075  018AA4  91A9               	bcf	169,0,b	;volatile
 24076                           
 24077                           ; BSR set to: 57
 24078                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 24079  018AA6  8199               	bsf	153,0,b	;volatile
 24080                           
 24081                           ; BSR set to: 57
 24082                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 24083  018AA8  0E52               	movlw	low _TMR6_DefaultInterruptHandler
 24084  018AAA  6EE6               	movwf	postinc1,c
 24085  018AAC  0E84               	movlw	high _TMR6_DefaultInterruptHandler
 24086  018AAE  6EE6               	movwf	postinc1,c
 24087  018AB0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 24088  018AB2  6EE6               	movwf	postinc1,c
 24089  018AB4  EC13  F0C6         	call	_TMR6_SetInterruptHandler	;wreg free
 24090                           
 24091                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 24092  018AB8  0EE0               	movlw	224
 24093  018ABA  6E94               	movwf	148,c	;volatile
 24094                           
 24095                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24096  018ABC  0012               	return		;funcret
 24097  018ABE                     __end_of_TMR6_Initialize:
 24098                           	opt callstack 0
 24099                           
 24100 ;; *************** function _TMR6_SetInterruptHandler *****************
 24101 ;; Defined at:
 24102 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 24103 ;; Parameters:    Size  Location     Type
 24104 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24105 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 24106 ;; Auto vars:     Size  Location     Type
 24107 ;;		None
 24108 ;; Return value:  Size  Location     Type
 24109 ;;                  1  [STACK] void 
 24110 ;; Registers used:
 24111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24112 ;; Tracked objects:
 24113 ;;		On entry : 3F/39
 24114 ;;		On exit  : 0/0
 24115 ;;		Unchanged: 0/0
 24116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24121 ;;Total ram usage:        0 bytes
 24122 ;; Hardware stack levels used:    1
 24123 ;; Hardware stack levels required when called:   10
 24124 ;; This function calls:
 24125 ;;		Nothing
 24126 ;; This function is called by:
 24127 ;;		_TMR6_Initialize
 24128 ;; This function uses a reentrant model
 24129 ;;
 24130                           
 24131                           	psect	text103
 24132  018C26                     __ptext103:
 24133                           	opt callstack 0
 24134  018C26                     _TMR6_SetInterruptHandler:
 24135                           	opt callstack 18
 24136                           
 24137                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 24138                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24139                           
 24140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24141                           ;incstack = 0
 24142  018C26  50E1               	movf	fsr1l,w,c
 24143  018C28  0FFD               	addlw	-3
 24144  018C2A  6ED9               	movwf	fsr2l,c
 24145  018C2C  50E2               	movf	fsr1h,w,c
 24146  018C2E  6EDA               	movwf	fsr2h,c
 24147  018C30  0EFF               	movlw	255
 24148  018C32  22DA               	addwfc	fsr2h,f,c
 24149  018C34  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 24150  018C3A  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 24151  018C40  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 24152                           
 24153                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24154  018C46  52E5               	movf	postdec1,f,c
 24155  018C48  52E5               	movf	postdec1,f,c
 24156  018C4A  52E5               	movf	postdec1,f,c
 24157  018C4C  0012               	return		;funcret
 24158  018C4E                     __end_of_TMR6_SetInterruptHandler:
 24159                           	opt callstack 0
 24160                           
 24161 ;; *************** function _TMR5_Initialize *****************
 24162 ;; Defined at:
 24163 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 24164 ;; Parameters:    Size  Location     Type
 24165 ;;		None
 24166 ;; Auto vars:     Size  Location     Type
 24167 ;;		None
 24168 ;; Return value:  Size  Location     Type
 24169 ;;                  1  [STACK] void 
 24170 ;; Registers used:
 24171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24172 ;; Tracked objects:
 24173 ;;		On entry : 0/39
 24174 ;;		On exit  : 0/0
 24175 ;;		Unchanged: 0/0
 24176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24181 ;;Total ram usage:        0 bytes
 24182 ;; Hardware stack levels used:    1
 24183 ;; Hardware stack levels required when called:   11
 24184 ;; This function calls:
 24185 ;;		_TMR5_SetInterruptHandler
 24186 ;; This function is called by:
 24187 ;;		_SYSTEM_Initialize
 24188 ;; This function uses a reentrant model
 24189 ;;
 24190                           
 24191                           	psect	text104
 24192  0185BE                     __ptext104:
 24193                           	opt callstack 0
 24194  0185BE                     _TMR5_Initialize:
 24195                           	opt callstack 18
 24196                           
 24197                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 24198                           
 24199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24200                           ;incstack = 0
 24201  0185BE  6A9B               	clrf	155,c	;volatile
 24202                           
 24203                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 24204  0185C0  6A9C               	clrf	156,c	;volatile
 24205                           
 24206                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 24207  0185C2  0E01               	movlw	1
 24208  0185C4  6E9D               	movwf	157,c	;volatile
 24209                           
 24210                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 24211  0185C6  0E63               	movlw	99
 24212  0185C8  6E99               	movwf	153,c	;volatile
 24213                           
 24214                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 24215  0185CA  0EC0               	movlw	192
 24216  0185CC  6E98               	movwf	152,c	;volatile
 24217                           
 24218                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 24219  0185CE  5098               	movf	152,w,c	;volatile
 24220  0185D0  006F FE64  F025    	movff	16281,btemp	;volatile
 24221  0185D6  6A26               	clrf	(btemp+1)^0,c
 24222  0185D8  0060  F094  F026   	movff	btemp,btemp+1
 24223  0185DE  6A25               	clrf	btemp^0,c
 24224  0185E0  1025               	iorwf	btemp^0,w,c
 24225  0185E2  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 24226  0185E4  5026               	movf	(btemp+1)^0,w,c
 24227  0185E6  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 24228                           
 24229                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 24230  0185E8  0139               	movlb	57	; () banked
 24231  0185EA  9DA8               	bcf	168,6,b	;volatile
 24232                           
 24233                           ; BSR set to: 57
 24234                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 24235  0185EC  8D98               	bsf	152,6,b	;volatile
 24236                           
 24237                           ; BSR set to: 57
 24238                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 24239  0185EE  0E3E               	movlw	low _TMR5_DefaultInterruptHandler
 24240  0185F0  6EE6               	movwf	postinc1,c
 24241  0185F2  0E8D               	movlw	high _TMR5_DefaultInterruptHandler
 24242  0185F4  6EE6               	movwf	postinc1,c
 24243  0185F6  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 24244  0185F8  6EE6               	movwf	postinc1,c
 24245  0185FA  EC27  F0C6         	call	_TMR5_SetInterruptHandler	;wreg free
 24246                           
 24247                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 24248  0185FE  0E31               	movlw	49
 24249  018600  6E9A               	movwf	154,c	;volatile
 24250                           
 24251                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24252  018602  0012               	return		;funcret
 24253  018604                     __end_of_TMR5_Initialize:
 24254                           	opt callstack 0
 24255                           
 24256 ;; *************** function _TMR5_SetInterruptHandler *****************
 24257 ;; Defined at:
 24258 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24259 ;; Parameters:    Size  Location     Type
 24260 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24261 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24262 ;; Auto vars:     Size  Location     Type
 24263 ;;		None
 24264 ;; Return value:  Size  Location     Type
 24265 ;;                  1  [STACK] void 
 24266 ;; Registers used:
 24267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24268 ;; Tracked objects:
 24269 ;;		On entry : 3F/39
 24270 ;;		On exit  : 0/0
 24271 ;;		Unchanged: 0/0
 24272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24277 ;;Total ram usage:        0 bytes
 24278 ;; Hardware stack levels used:    1
 24279 ;; Hardware stack levels required when called:   10
 24280 ;; This function calls:
 24281 ;;		Nothing
 24282 ;; This function is called by:
 24283 ;;		_TMR5_Initialize
 24284 ;; This function uses a reentrant model
 24285 ;;
 24286                           
 24287                           	psect	text105
 24288  018C4E                     __ptext105:
 24289                           	opt callstack 0
 24290  018C4E                     _TMR5_SetInterruptHandler:
 24291                           	opt callstack 18
 24292                           
 24293                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24294                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24295                           
 24296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24297                           ;incstack = 0
 24298  018C4E  50E1               	movf	fsr1l,w,c
 24299  018C50  0FFD               	addlw	-3
 24300  018C52  6ED9               	movwf	fsr2l,c
 24301  018C54  50E2               	movf	fsr1h,w,c
 24302  018C56  6EDA               	movwf	fsr2h,c
 24303  018C58  0EFF               	movlw	255
 24304  018C5A  22DA               	addwfc	fsr2h,f,c
 24305  018C5C  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 24306  018C62  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 24307  018C68  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 24308                           
 24309                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24310  018C6E  52E5               	movf	postdec1,f,c
 24311  018C70  52E5               	movf	postdec1,f,c
 24312  018C72  52E5               	movf	postdec1,f,c
 24313  018C74  0012               	return		;funcret
 24314  018C76                     __end_of_TMR5_SetInterruptHandler:
 24315                           	opt callstack 0
 24316                           
 24317 ;; *************** function _TMR3_Initialize *****************
 24318 ;; Defined at:
 24319 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 24320 ;; Parameters:    Size  Location     Type
 24321 ;;		None
 24322 ;; Auto vars:     Size  Location     Type
 24323 ;;		None
 24324 ;; Return value:  Size  Location     Type
 24325 ;;                  1  [STACK] void 
 24326 ;; Registers used:
 24327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24328 ;; Tracked objects:
 24329 ;;		On entry : 0/39
 24330 ;;		On exit  : 0/0
 24331 ;;		Unchanged: 0/0
 24332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24337 ;;Total ram usage:        0 bytes
 24338 ;; Hardware stack levels used:    1
 24339 ;; Hardware stack levels required when called:   11
 24340 ;; This function calls:
 24341 ;;		_TMR3_SetInterruptHandler
 24342 ;; This function is called by:
 24343 ;;		_SYSTEM_Initialize
 24344 ;; This function uses a reentrant model
 24345 ;;
 24346                           
 24347                           	psect	text106
 24348  018604                     __ptext106:
 24349                           	opt callstack 0
 24350  018604                     _TMR3_Initialize:
 24351                           	opt callstack 18
 24352                           
 24353                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 24354                           
 24355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24356                           ;incstack = 0
 24357  018604  6AA7               	clrf	167,c	;volatile
 24358                           
 24359                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 24360  018606  6AA8               	clrf	168,c	;volatile
 24361                           
 24362                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 24363  018608  0E01               	movlw	1
 24364  01860A  6EA9               	movwf	169,c	;volatile
 24365                           
 24366                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 24367  01860C  0E3C               	movlw	60
 24368  01860E  6EA5               	movwf	165,c	;volatile
 24369                           
 24370                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 24371  018610  0EB0               	movlw	176
 24372  018612  6EA4               	movwf	164,c	;volatile
 24373                           
 24374                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 24375  018614  50A4               	movf	164,w,c	;volatile
 24376  018616  006F FE94  F025    	movff	16293,btemp	;volatile
 24377  01861C  6A26               	clrf	(btemp+1)^0,c
 24378  01861E  0060  F094  F026   	movff	btemp,btemp+1
 24379  018624  6A25               	clrf	btemp^0,c
 24380  018626  1025               	iorwf	btemp^0,w,c
 24381  018628  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 24382  01862A  5026               	movf	(btemp+1)^0,w,c
 24383  01862C  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 24384                           
 24385                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 24386  01862E  0139               	movlb	57	; () banked
 24387  018630  9DA6               	bcf	166,6,b	;volatile
 24388                           
 24389                           ; BSR set to: 57
 24390                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 24391  018632  8D96               	bsf	150,6,b	;volatile
 24392                           
 24393                           ; BSR set to: 57
 24394                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 24395  018634  0EAC               	movlw	low _TMR3_DefaultInterruptHandler
 24396  018636  6EE6               	movwf	postinc1,c
 24397  018638  0E91               	movlw	high _TMR3_DefaultInterruptHandler
 24398  01863A  6EE6               	movwf	postinc1,c
 24399  01863C  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 24400  01863E  6EE6               	movwf	postinc1,c
 24401  018640  EC3B  F0C6         	call	_TMR3_SetInterruptHandler	;wreg free
 24402                           
 24403                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 24404  018644  0E31               	movlw	49
 24405  018646  6EA6               	movwf	166,c	;volatile
 24406                           
 24407                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24408  018648  0012               	return		;funcret
 24409  01864A                     __end_of_TMR3_Initialize:
 24410                           	opt callstack 0
 24411                           
 24412 ;; *************** function _TMR3_SetInterruptHandler *****************
 24413 ;; Defined at:
 24414 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 24415 ;; Parameters:    Size  Location     Type
 24416 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24417 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 24418 ;; Auto vars:     Size  Location     Type
 24419 ;;		None
 24420 ;; Return value:  Size  Location     Type
 24421 ;;                  1  [STACK] void 
 24422 ;; Registers used:
 24423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24424 ;; Tracked objects:
 24425 ;;		On entry : 0/1
 24426 ;;		On exit  : 0/0
 24427 ;;		Unchanged: 0/0
 24428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24433 ;;Total ram usage:        0 bytes
 24434 ;; Hardware stack levels used:    1
 24435 ;; Hardware stack levels required when called:   10
 24436 ;; This function calls:
 24437 ;;		Nothing
 24438 ;; This function is called by:
 24439 ;;		_TMR3_Initialize
 24440 ;;		_init_bsoc
 24441 ;; This function uses a reentrant model
 24442 ;;
 24443                           
 24444                           	psect	text107
 24445  018C76                     __ptext107:
 24446                           	opt callstack 0
 24447  018C76                     _TMR3_SetInterruptHandler:
 24448                           	opt callstack 19
 24449                           
 24450                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 24451                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24452                           
 24453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24454                           ;incstack = 0
 24455  018C76  50E1               	movf	fsr1l,w,c
 24456  018C78  0FFD               	addlw	-3
 24457  018C7A  6ED9               	movwf	fsr2l,c
 24458  018C7C  50E2               	movf	fsr1h,w,c
 24459  018C7E  6EDA               	movwf	fsr2h,c
 24460  018C80  0EFF               	movlw	255
 24461  018C82  22DA               	addwfc	fsr2h,f,c
 24462  018C84  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 24463  018C8A  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 24464  018C90  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 24465                           
 24466                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24467  018C96  52E5               	movf	postdec1,f,c
 24468  018C98  52E5               	movf	postdec1,f,c
 24469  018C9A  52E5               	movf	postdec1,f,c
 24470  018C9C  0012               	return		;funcret
 24471  018C9E                     __end_of_TMR3_SetInterruptHandler:
 24472                           	opt callstack 0
 24473                           
 24474 ;; *************** function _TMR2_Initialize *****************
 24475 ;; Defined at:
 24476 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24477 ;; Parameters:    Size  Location     Type
 24478 ;;		None
 24479 ;; Auto vars:     Size  Location     Type
 24480 ;;		None
 24481 ;; Return value:  Size  Location     Type
 24482 ;;                  1  [STACK] void 
 24483 ;; Registers used:
 24484 ;;		wreg, status,2
 24485 ;; Tracked objects:
 24486 ;;		On entry : 3F/3F
 24487 ;;		On exit  : 3F/39
 24488 ;;		Unchanged: 0/0
 24489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24494 ;;Total ram usage:        0 bytes
 24495 ;; Hardware stack levels used:    1
 24496 ;; Hardware stack levels required when called:   10
 24497 ;; This function calls:
 24498 ;;		Nothing
 24499 ;; This function is called by:
 24500 ;;		_SYSTEM_Initialize
 24501 ;; This function uses a reentrant model
 24502 ;;
 24503                           
 24504                           	psect	text108
 24505  019056                     __ptext108:
 24506                           	opt callstack 0
 24507  019056                     _TMR2_Initialize:
 24508                           	opt callstack 19
 24509                           
 24510                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24511                           
 24512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24513                           ;incstack = 0
 24514  019056  0E01               	movlw	1
 24515  019058  6EAE               	movwf	174,c	;volatile
 24516                           
 24517                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24518  01905A  6AAD               	clrf	173,c	;volatile
 24519                           
 24520                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24521  01905C  6AAF               	clrf	175,c	;volatile
 24522                           
 24523                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24524  01905E  0E63               	movlw	99
 24525  019060  6EAB               	movwf	171,c	;volatile
 24526                           
 24527                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24528  019062  6AAA               	clrf	170,c	;volatile
 24529                           
 24530                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24531  019064  0139               	movlb	57	; () banked
 24532  019066  95A4               	bcf	164,2,b	;volatile
 24533                           
 24534                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24535  019068  0EC0               	movlw	192
 24536  01906A  6EAC               	movwf	172,c	;volatile
 24537                           
 24538                           ; BSR set to: 57
 24539                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24540  01906C  0012               	return		;funcret
 24541  01906E                     __end_of_TMR2_Initialize:
 24542                           	opt callstack 0
 24543                           
 24544 ;; *************** function _SPI1_Initialize *****************
 24545 ;; Defined at:
 24546 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24547 ;; Parameters:    Size  Location     Type
 24548 ;;		None
 24549 ;; Auto vars:     Size  Location     Type
 24550 ;;		None
 24551 ;; Return value:  Size  Location     Type
 24552 ;;                  1  [STACK] void 
 24553 ;; Registers used:
 24554 ;;		wreg, status,2
 24555 ;; Tracked objects:
 24556 ;;		On entry : 3F/39
 24557 ;;		On exit  : 3F/3D
 24558 ;;		Unchanged: 0/0
 24559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24564 ;;Total ram usage:        0 bytes
 24565 ;; Hardware stack levels used:    1
 24566 ;; Hardware stack levels required when called:   10
 24567 ;; This function calls:
 24568 ;;		Nothing
 24569 ;; This function is called by:
 24570 ;;		_SYSTEM_Initialize
 24571 ;; This function uses a reentrant model
 24572 ;;
 24573                           
 24574                           	psect	text109
 24575  01906E                     __ptext109:
 24576                           	opt callstack 0
 24577  01906E                     _SPI1_Initialize:
 24578                           	opt callstack 19
 24579                           
 24580                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24581                           
 24582                           ; BSR set to: 57
 24583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24584                           ;incstack = 0
 24585  01906E  0E40               	movlw	64
 24586  019070  013D               	movlb	61	; () banked
 24587  019072  6F15               	movwf	21,b	;volatile
 24588                           
 24589                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 24590  019074  0E03               	movlw	3
 24591  019076  6F16               	movwf	22,b	;volatile
 24592                           
 24593                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24594  019078  0E4F               	movlw	79
 24595  01907A  6F19               	movwf	25,b	;volatile
 24596                           
 24597                           ; BSR set to: 61
 24598                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24599  01907C  6B1C               	clrf	28,b	;volatile
 24600                           
 24601                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24602  01907E  0E83               	movlw	131
 24603  019080  6F14               	movwf	20,b	;volatile
 24604                           
 24605                           ; BSR set to: 61
 24606                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24607  019082  0012               	return		;funcret
 24608  019084                     __end_of_SPI1_Initialize:
 24609                           	opt callstack 0
 24610                           
 24611 ;; *************** function _PWM8_Initialize *****************
 24612 ;; Defined at:
 24613 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24614 ;; Parameters:    Size  Location     Type
 24615 ;;		None
 24616 ;; Auto vars:     Size  Location     Type
 24617 ;;		None
 24618 ;; Return value:  Size  Location     Type
 24619 ;;                  1  [STACK] void 
 24620 ;; Registers used:
 24621 ;;		wreg, status,2
 24622 ;; Tracked objects:
 24623 ;;		On entry : 0/3E
 24624 ;;		On exit  : 3F/3F
 24625 ;;		Unchanged: 0/0
 24626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24631 ;;Total ram usage:        0 bytes
 24632 ;; Hardware stack levels used:    1
 24633 ;; Hardware stack levels required when called:   10
 24634 ;; This function calls:
 24635 ;;		Nothing
 24636 ;; This function is called by:
 24637 ;;		_SYSTEM_Initialize
 24638 ;; This function uses a reentrant model
 24639 ;;
 24640                           
 24641                           	psect	text110
 24642  019084                     __ptext110:
 24643                           	opt callstack 0
 24644  019084                     _PWM8_Initialize:
 24645                           	opt callstack 19
 24646                           
 24647                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24648                           
 24649                           ; BSR set to: 61
 24650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24651                           ;incstack = 0
 24652  019084  0E80               	movlw	128
 24653  019086  6E62               	movwf	98,c	;volatile
 24654                           
 24655                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24656  019088  6A61               	clrf	97,c	;volatile
 24657                           
 24658                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24659  01908A  0E40               	movlw	64
 24660  01908C  6E60               	movwf	96,c	;volatile
 24661                           
 24662                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24663  01908E  013F               	movlb	63	; () banked
 24664  019090  515F               	movf	95,w,b	;volatile
 24665  019092  0B3F               	andlw	-193
 24666  019094  0940               	iorlw	64
 24667  019096  6F5F               	movwf	95,b	;volatile
 24668                           
 24669                           ; BSR set to: 63
 24670                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24671  019098  0012               	return		;funcret
 24672  01909A                     __end_of_PWM8_Initialize:
 24673                           	opt callstack 0
 24674                           
 24675 ;; *************** function _PMD_Initialize *****************
 24676 ;; Defined at:
 24677 ;;		line 90 in file "mcc_generated_files/mcc.c"
 24678 ;; Parameters:    Size  Location     Type
 24679 ;;		None
 24680 ;; Auto vars:     Size  Location     Type
 24681 ;;		None
 24682 ;; Return value:  Size  Location     Type
 24683 ;;                  1  [STACK] void 
 24684 ;; Registers used:
 24685 ;;		None
 24686 ;; Tracked objects:
 24687 ;;		On entry : 3F/39
 24688 ;;		On exit  : 3F/39
 24689 ;;		Unchanged: 0/0
 24690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;Total ram usage:        0 bytes
 24696 ;; Hardware stack levels used:    1
 24697 ;; Hardware stack levels required when called:   10
 24698 ;; This function calls:
 24699 ;;		Nothing
 24700 ;; This function is called by:
 24701 ;;		_SYSTEM_Initialize
 24702 ;; This function uses a reentrant model
 24703 ;;
 24704                           
 24705                           	psect	text111
 24706  0190B0                     __ptext111:
 24707                           	opt callstack 0
 24708  0190B0                     _PMD_Initialize:
 24709                           	opt callstack 19
 24710                           
 24711                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 24712                           
 24713                           ; BSR set to: 63
 24714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24715                           ;incstack = 0
 24716  0190B0  0139               	movlb	57	; () banked
 24717  0190B2  6BC0               	clrf	192,b	;volatile
 24718                           
 24719                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 24720  0190B4  6BC1               	clrf	193,b	;volatile
 24721                           
 24722                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 24723  0190B6  6BC2               	clrf	194,b	;volatile
 24724                           
 24725                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 24726  0190B8  6BC3               	clrf	195,b	;volatile
 24727                           
 24728                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 24729  0190BA  6BC4               	clrf	196,b	;volatile
 24730                           
 24731                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 24732  0190BC  6BC5               	clrf	197,b	;volatile
 24733                           
 24734                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 24735  0190BE  6BC6               	clrf	198,b	;volatile
 24736                           
 24737                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 24738  0190C0  6BC7               	clrf	199,b	;volatile
 24739                           
 24740                           ; BSR set to: 57
 24741                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24742  0190C2  0012               	return		;funcret
 24743  0190C4                     __end_of_PMD_Initialize:
 24744                           	opt callstack 0
 24745                           
 24746 ;; *************** function _PIN_MANAGER_Initialize *****************
 24747 ;; Defined at:
 24748 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24749 ;; Parameters:    Size  Location     Type
 24750 ;;		None
 24751 ;; Auto vars:     Size  Location     Type
 24752 ;;		None
 24753 ;; Return value:  Size  Location     Type
 24754 ;;                  1  [STACK] void 
 24755 ;; Registers used:
 24756 ;;		wreg, status,2
 24757 ;; Tracked objects:
 24758 ;;		On entry : 3F/39
 24759 ;;		On exit  : 3F/3A
 24760 ;;		Unchanged: 0/0
 24761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24766 ;;Total ram usage:        0 bytes
 24767 ;; Hardware stack levels used:    1
 24768 ;; Hardware stack levels required when called:   10
 24769 ;; This function calls:
 24770 ;;		Nothing
 24771 ;; This function is called by:
 24772 ;;		_SYSTEM_Initialize
 24773 ;; This function uses a reentrant model
 24774 ;;
 24775                           
 24776                           	psect	text112
 24777  017B52                     __ptext112:
 24778                           	opt callstack 0
 24779  017B52                     _PIN_MANAGER_Initialize:
 24780                           	opt callstack 19
 24781                           
 24782                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24783                           
 24784                           ; BSR set to: 57
 24785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24786                           ;incstack = 0
 24787  017B52  0E07               	movlw	7
 24788  017B54  6EBE               	movwf	190,c	;volatile
 24789                           
 24790                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24791  017B56  0E80               	movlw	128
 24792  017B58  6EBD               	movwf	189,c	;volatile
 24793                           
 24794                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24795  017B5A  6ABA               	clrf	186,c	;volatile
 24796                           
 24797                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24798  017B5C  6ABF               	clrf	191,c	;volatile
 24799                           
 24800                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24801  017B5E  6ABB               	clrf	187,c	;volatile
 24802                           
 24803                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24804  017B60  0E07               	movlw	7
 24805  017B62  6EBC               	movwf	188,c	;volatile
 24806                           
 24807                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24808  017B64  6AC6               	clrf	198,c	;volatile
 24809                           
 24810                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24811  017B66  0E0F               	movlw	15
 24812  017B68  6EC7               	movwf	199,c	;volatile
 24813                           
 24814                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24815  017B6A  68C2               	setf	194,c	;volatile
 24816                           
 24817                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24818  017B6C  0EBF               	movlw	191
 24819  017B6E  6EC3               	movwf	195,c	;volatile
 24820                           
 24821                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24822  017B70  0E90               	movlw	144
 24823  017B72  6EC4               	movwf	196,c	;volatile
 24824                           
 24825                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24826  017B74  0E0C               	movlw	12
 24827  017B76  6EC5               	movwf	197,c	;volatile
 24828                           
 24829                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24830  017B78  013A               	movlb	58	; () banked
 24831  017B7A  6B70               	clrf	112,b	;volatile
 24832                           
 24833                           ; BSR set to: 58
 24834                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24835  017B7C  6B60               	clrf	96,b	;volatile
 24836                           
 24837                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24838  017B7E  0E3C               	movlw	60
 24839  017B80  6F50               	movwf	80,b	;volatile
 24840                           
 24841                           ; BSR set to: 58
 24842                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24843  017B82  6B80               	clrf	128,b	;volatile
 24844                           
 24845                           ; BSR set to: 58
 24846                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24847  017B84  6B90               	clrf	144,b	;volatile
 24848                           
 24849                           ; BSR set to: 58
 24850                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24851  017B86  6940               	setf	64,b	;volatile
 24852                           
 24853                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24854  017B88  0E0C               	movlw	12
 24855  017B8A  6F71               	movwf	113,b	;volatile
 24856                           
 24857                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24858  017B8C  0E0F               	movlw	15
 24859  017B8E  6F91               	movwf	145,b	;volatile
 24860                           
 24861                           ; BSR set to: 58
 24862                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24863  017B90  6B81               	clrf	129,b	;volatile
 24864                           
 24865                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24866  017B92  0E83               	movlw	131
 24867  017B94  6F51               	movwf	81,b	;volatile
 24868                           
 24869                           ; BSR set to: 58
 24870                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24871  017B96  6B41               	clrf	65,b	;volatile
 24872                           
 24873                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24874  017B98  0E97               	movlw	151
 24875  017B9A  6F61               	movwf	97,b	;volatile
 24876                           
 24877                           ; BSR set to: 58
 24878                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24879  017B9C  6B82               	clrf	130,b	;volatile
 24880                           
 24881                           ; BSR set to: 58
 24882                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24883  017B9E  6B92               	clrf	146,b	;volatile
 24884                           
 24885                           ; BSR set to: 58
 24886                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24887  017BA0  6B42               	clrf	66,b	;volatile
 24888                           
 24889                           ; BSR set to: 58
 24890                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24891  017BA2  6B52               	clrf	82,b	;volatile
 24892                           
 24893                           ; BSR set to: 58
 24894                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24895  017BA4  6B62               	clrf	98,b	;volatile
 24896                           
 24897                           ; BSR set to: 58
 24898                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24899  017BA6  6B72               	clrf	114,b	;volatile
 24900                           
 24901                           ; BSR set to: 58
 24902                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24903  017BA8  6943               	setf	67,b	;volatile
 24904                           
 24905                           ; BSR set to: 58
 24906                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24907  017BAA  6953               	setf	83,b	;volatile
 24908                           
 24909                           ; BSR set to: 58
 24910                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24911  017BAC  6963               	setf	99,b	;volatile
 24912                           
 24913                           ; BSR set to: 58
 24914                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24915  017BAE  6973               	setf	115,b	;volatile
 24916                           
 24917                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24918  017BB0  0E07               	movlw	7
 24919  017BB2  6F83               	movwf	131,b	;volatile
 24920                           
 24921                           ; BSR set to: 58
 24922                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24923  017BB4  6993               	setf	147,b	;volatile
 24924                           
 24925                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24926  017BB6  0E0F               	movlw	15
 24927  017BB8  6FE8               	movwf	232,b	;volatile
 24928                           
 24929                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24930  017BBA  0E13               	movlw	19
 24931  017BBC  6FDE               	movwf	222,b	;volatile
 24932                           
 24933                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24934  017BBE  0E16               	movlw	22
 24935  017BC0  6F0E               	movwf	14,b	;volatile
 24936                           
 24937                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24938  017BC2  0E1E               	movlw	30
 24939  017BC4  6F13               	movwf	19,b	;volatile
 24940                           
 24941                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24942  017BC6  0E08               	movlw	8
 24943  017BC8  6FC0               	movwf	192,b	;volatile
 24944                           
 24945                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24946  017BCA  0E10               	movlw	16
 24947  017BCC  6F19               	movwf	25,b	;volatile
 24948                           
 24949                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24950  017BCE  0E09               	movlw	9
 24951  017BD0  6FC1               	movwf	193,b	;volatile
 24952                           
 24953                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24954  017BD2  0E1F               	movlw	31
 24955  017BD4  6F15               	movwf	21,b	;volatile
 24956                           
 24957                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24958  017BD6  0E13               	movlw	19
 24959  017BD8  6F16               	movwf	22,b	;volatile
 24960                           
 24961                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24962  017BDA  0E17               	movlw	23
 24963  017BDC  6FE5               	movwf	229,b	;volatile
 24964                           
 24965                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24966  017BDE  0E14               	movlw	20
 24967  017BE0  6FDF               	movwf	223,b	;volatile
 24968                           
 24969                           ; BSR set to: 58
 24970                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24971  017BE2  0012               	return		;funcret
 24972  017BE4                     __end_of_PIN_MANAGER_Initialize:
 24973                           	opt callstack 0
 24974                           
 24975 ;; *************** function _OSCILLATOR_Initialize *****************
 24976 ;; Defined at:
 24977 ;;		line 72 in file "mcc_generated_files/mcc.c"
 24978 ;; Parameters:    Size  Location     Type
 24979 ;;		None
 24980 ;; Auto vars:     Size  Location     Type
 24981 ;;		None
 24982 ;; Return value:  Size  Location     Type
 24983 ;;                  1  [STACK] void 
 24984 ;; Registers used:
 24985 ;;		wreg, status,2
 24986 ;; Tracked objects:
 24987 ;;		On entry : 3F/3A
 24988 ;;		On exit  : 3F/39
 24989 ;;		Unchanged: 0/0
 24990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24995 ;;Total ram usage:        0 bytes
 24996 ;; Hardware stack levels used:    1
 24997 ;; Hardware stack levels required when called:   10
 24998 ;; This function calls:
 24999 ;;		Nothing
 25000 ;; This function is called by:
 25001 ;;		_SYSTEM_Initialize
 25002 ;; This function uses a reentrant model
 25003 ;;
 25004                           
 25005                           	psect	text113
 25006  01909A                     __ptext113:
 25007                           	opt callstack 0
 25008  01909A                     _OSCILLATOR_Initialize:
 25009                           	opt callstack 19
 25010                           
 25011                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 25012                           
 25013                           ; BSR set to: 58
 25014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25015                           ;incstack = 0
 25016  01909A  0E20               	movlw	32
 25017  01909C  0139               	movlb	57	; () banked
 25018  01909E  6FD9               	movwf	217,b	;volatile
 25019                           
 25020                           ; BSR set to: 57
 25021                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 25022  0190A0  6BDB               	clrf	219,b	;volatile
 25023                           
 25024                           ; BSR set to: 57
 25025                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 25026  0190A2  6BDD               	clrf	221,b	;volatile
 25027                           
 25028                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 25029  0190A4  0E02               	movlw	2
 25030  0190A6  6FDF               	movwf	223,b	;volatile
 25031                           
 25032                           ; BSR set to: 57
 25033                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 25034  0190A8  6BDE               	clrf	222,b	;volatile
 25035  0190AA                     l173:
 25036                           
 25037                           ; BSR set to: 57
 25038                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 25039  0190AA  B1DC               	btfsc	220,0,b	;volatile
 25040  0190AC  0012               	return	
 25041  0190AE  D7FD               	goto	l173
 25042  0190B0                     __end_of_OSCILLATOR_Initialize:
 25043                           	opt callstack 0
 25044                           
 25045 ;; *************** function _INTERRUPT_Initialize *****************
 25046 ;; Defined at:
 25047 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25048 ;; Parameters:    Size  Location     Type
 25049 ;;		None
 25050 ;; Auto vars:     Size  Location     Type
 25051 ;;  state           1  [STACK] _Bool 
 25052 ;; Return value:  Size  Location     Type
 25053 ;;                  1  [STACK] void 
 25054 ;; Registers used:
 25055 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 25056 ;; Tracked objects:
 25057 ;;		On entry : 0/0
 25058 ;;		On exit  : 3F/39
 25059 ;;		Unchanged: 0/0
 25060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25065 ;;Total ram usage:        0 bytes
 25066 ;; Hardware stack levels used:    1
 25067 ;; Hardware stack levels required when called:   10
 25068 ;; This function calls:
 25069 ;;		Nothing
 25070 ;; This function is called by:
 25071 ;;		_SYSTEM_Initialize
 25072 ;; This function uses a reentrant model
 25073 ;;
 25074                           
 25075                           	psect	text114
 25076  01804E                     __ptext114:
 25077                           	opt callstack 0
 25078  01804E                     _INTERRUPT_Initialize:
 25079                           	opt callstack 0
 25080                           
 25081                           ; BSR set to: 57
 25082                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25083  01804E  52E6               	movf	postinc1,f,c
 25084                           
 25085                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 25086                           
 25087                           ;incstack = 0
 25088  018050  8AD2               	bsf	210,5,c	;volatile
 25089                           
 25090                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 25091  018052  AED2               	btfss	16338,7,c	;volatile
 25092  018054  D003               	goto	u8180
 25093  018056  6A30               	clrf	(btemp+11)^0,c
 25094  018058  2A30               	incf	(btemp+11)^0,f,c
 25095  01805A  D001               	goto	u8198
 25096  01805C                     u8180:
 25097  01805C  6A30               	clrf	(btemp+11)^0,c
 25098  01805E                     u8198:
 25099                           
 25100                           ;stkvar	_state @ sp[(-1)+0]
 25101  01805E  0EFF               	movlw	-1
 25102  018060  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 25103                           
 25104                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 25105  018066  9ED2               	bcf	16338,7,c	;volatile
 25106                           
 25107                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 25108  018068  0E55               	movlw	85
 25109  01806A  6ED4               	movwf	212,c	;volatile
 25110                           
 25111                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 25112  01806C  0EAA               	movlw	170
 25113  01806E  6ED4               	movwf	212,c	;volatile
 25114                           
 25115                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 25116  018070  90D4               	bcf	212,0,c	;volatile
 25117                           
 25118                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 25119  018072  0138               	movlb	56	; () banked
 25120  018074  6B9F               	clrf	159,b	;volatile
 25121                           
 25122                           ; BSR set to: 56
 25123                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 25124  018076  6B9E               	clrf	158,b	;volatile
 25125                           
 25126                           ; BSR set to: 56
 25127                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 25128  018078  0E08               	movlw	8
 25129  01807A  6F9D               	movwf	157,b	;volatile
 25130                           
 25131                           ; BSR set to: 56
 25132                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 25133  01807C  0E55               	movlw	85
 25134  01807E  6ED4               	movwf	212,c	;volatile
 25135                           
 25136                           ; BSR set to: 56
 25137                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 25138  018080  0EAA               	movlw	170
 25139  018082  6ED4               	movwf	212,c	;volatile
 25140                           
 25141                           ; BSR set to: 56
 25142                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 25143  018084  80D4               	bsf	212,0,c	;volatile
 25144                           
 25145                           ; BSR set to: 56
 25146                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 25147                           ;stkvar	_state @ sp[(-1)+0]
 25148  018086  0EFF               	movlw	-1
 25149  018088  B0E3               	btfsc	plusw1,0,c
 25150  01808A  D002               	bra	u8205
 25151  01808C  9ED2               	bcf	16338,7,c	;volatile
 25152  01808E  D001               	bra	u8206
 25153  018090                     u8205:
 25154  018090  8ED2               	bsf	16338,7,c	;volatile
 25155  018092                     u8206:
 25156                           
 25157                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 25158  018092  0139               	movlb	57	; () banked
 25159  018094  8782               	bsf	130,3,b	;volatile
 25160                           
 25161                           ; BSR set to: 57
 25162                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 25163  018096  8382               	bsf	130,1,b	;volatile
 25164                           
 25165                           ; BSR set to: 57
 25166                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 25167  018098  8182               	bsf	130,0,b	;volatile
 25168                           
 25169                           ; BSR set to: 57
 25170                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 25171  01809A  8582               	bsf	130,2,b	;volatile
 25172                           
 25173                           ; BSR set to: 57
 25174                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 25175  01809C  8786               	bsf	134,3,b	;volatile
 25176                           
 25177                           ; BSR set to: 57
 25178                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 25179  01809E  8586               	bsf	134,2,b	;volatile
 25180                           
 25181                           ; BSR set to: 57
 25182                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 25183  0180A0  8983               	bsf	131,4,b	;volatile
 25184                           
 25185                           ; BSR set to: 57
 25186                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 25187  0180A2  8783               	bsf	131,3,b	;volatile
 25188                           
 25189                           ; BSR set to: 57
 25190                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 25191  0180A4  8181               	bsf	129,0,b	;volatile
 25192                           
 25193                           ; BSR set to: 57
 25194                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 25195  0180A6  9185               	bcf	133,0,b	;volatile
 25196                           
 25197                           ; BSR set to: 57
 25198                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 25199  0180A8  8189               	bsf	137,0,b	;volatile
 25200                           
 25201                           ; BSR set to: 57
 25202                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 25203  0180AA  9D88               	bcf	136,6,b	;volatile
 25204                           
 25205                           ; BSR set to: 57
 25206                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 25207  0180AC  8581               	bsf	129,2,b	;volatile
 25208                           
 25209                           ; BSR set to: 57
 25210                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 25211  0180AE  8781               	bsf	129,3,b	;volatile
 25212                           
 25213                           ; BSR set to: 57
 25214                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR6bits.TMR3IP = 0;
 25215  0180B0  9D86               	bcf	134,6,b	;volatile
 25216                           
 25217                           ; BSR set to: 57
 25218                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 25219  0180B2  52E5               	movf	postdec1,f,c
 25220  0180B4  0012               	return		;funcret
 25221  0180B6                     __end_of_INTERRUPT_Initialize:
 25222                           	opt callstack 0
 25223                           
 25224 ;; *************** function _FVR_Initialize *****************
 25225 ;; Defined at:
 25226 ;;		line 58 in file "mcc_generated_files/fvr.c"
 25227 ;; Parameters:    Size  Location     Type
 25228 ;;		None
 25229 ;; Auto vars:     Size  Location     Type
 25230 ;;		None
 25231 ;; Return value:  Size  Location     Type
 25232 ;;                  1  [STACK] void 
 25233 ;; Registers used:
 25234 ;;		wreg, status,2
 25235 ;; Tracked objects:
 25236 ;;		On entry : 3F/39
 25237 ;;		On exit  : 3F/3E
 25238 ;;		Unchanged: 0/0
 25239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25244 ;;Total ram usage:        0 bytes
 25245 ;; Hardware stack levels used:    1
 25246 ;; Hardware stack levels required when called:   10
 25247 ;; This function calls:
 25248 ;;		Nothing
 25249 ;; This function is called by:
 25250 ;;		_SYSTEM_Initialize
 25251 ;; This function uses a reentrant model
 25252 ;;
 25253                           
 25254                           	psect	text115
 25255  01917E                     __ptext115:
 25256                           	opt callstack 0
 25257  01917E                     _FVR_Initialize:
 25258                           	opt callstack 19
 25259                           
 25260                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 25261                           
 25262                           ; BSR set to: 57
 25263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25264                           ;incstack = 0
 25265  01917E  0EAF               	movlw	175
 25266  019180  013E               	movlb	62	; () banked
 25267  019182  6FC1               	movwf	193,b	;volatile
 25268                           
 25269                           ; BSR set to: 62
 25270                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25271  019184  0012               	return		;funcret
 25272  019186                     __end_of_FVR_Initialize:
 25273                           	opt callstack 0
 25274                           
 25275 ;; *************** function _EXT_INT_Initialize *****************
 25276 ;; Defined at:
 25277 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 25278 ;; Parameters:    Size  Location     Type
 25279 ;;		None
 25280 ;; Auto vars:     Size  Location     Type
 25281 ;;		None
 25282 ;; Return value:  Size  Location     Type
 25283 ;;                  1  [STACK] void 
 25284 ;; Registers used:
 25285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25286 ;; Tracked objects:
 25287 ;;		On entry : 3F/39
 25288 ;;		On exit  : 3F/39
 25289 ;;		Unchanged: 0/0
 25290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25295 ;;Total ram usage:        0 bytes
 25296 ;; Hardware stack levels used:    1
 25297 ;; Hardware stack levels required when called:   11
 25298 ;; This function calls:
 25299 ;;		_INT0_SetInterruptHandler
 25300 ;;		_INT1_SetInterruptHandler
 25301 ;; This function is called by:
 25302 ;;		_SYSTEM_Initialize
 25303 ;; This function uses a reentrant model
 25304 ;;
 25305                           
 25306                           	psect	text116
 25307  01891C                     __ptext116:
 25308                           	opt callstack 0
 25309  01891C                     _EXT_INT_Initialize:
 25310                           	opt callstack 18
 25311                           
 25312                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 25313                           
 25314                           ; BSR set to: 62
 25315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25316                           ;incstack = 0
 25317  01891C  0139               	movlb	57	; () banked
 25318  01891E  91A1               	bcf	161,0,b	;volatile
 25319                           
 25320                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 25321  018920  90D2               	bcf	210,0,c	;volatile
 25322                           
 25323                           ; BSR set to: 57
 25324                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 25325  018922  0EAE               	movlw	low _INT0_DefaultInterruptHandler
 25326  018924  6EE6               	movwf	postinc1,c
 25327  018926  0E91               	movlw	high _INT0_DefaultInterruptHandler
 25328  018928  6EE6               	movwf	postinc1,c
 25329  01892A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 25330  01892C  6EE6               	movwf	postinc1,c
 25331  01892E  EC63  F0C6         	call	_INT0_SetInterruptHandler	;wreg free
 25332                           
 25333                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 25334  018932  0139               	movlb	57	; () banked
 25335  018934  8191               	bsf	145,0,b	;volatile
 25336                           
 25337                           ; BSR set to: 57
 25338                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 25339  018936  91A5               	bcf	165,0,b	;volatile
 25340                           
 25341                           ; BSR set to: 57
 25342                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 25343  018938  92D2               	bcf	210,1,c	;volatile
 25344                           
 25345                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 25346  01893A  0EAA               	movlw	low _INT1_DefaultInterruptHandler
 25347  01893C  6EE6               	movwf	postinc1,c
 25348  01893E  0E91               	movlw	high _INT1_DefaultInterruptHandler
 25349  018940  6EE6               	movwf	postinc1,c
 25350  018942  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 25351  018944  6EE6               	movwf	postinc1,c
 25352  018946  EC4F  F0C6         	call	_INT1_SetInterruptHandler	;wreg free
 25353                           
 25354                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 25355  01894A  0139               	movlb	57	; () banked
 25356  01894C  8195               	bsf	149,0,b	;volatile
 25357                           
 25358                           ; BSR set to: 57
 25359                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25360  01894E  0012               	return		;funcret
 25361  018950                     __end_of_EXT_INT_Initialize:
 25362                           	opt callstack 0
 25363                           
 25364 ;; *************** function _INT1_SetInterruptHandler *****************
 25365 ;; Defined at:
 25366 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 25367 ;; Parameters:    Size  Location     Type
 25368 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25369 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 25370 ;; Auto vars:     Size  Location     Type
 25371 ;;		None
 25372 ;; Return value:  Size  Location     Type
 25373 ;;                  1  [STACK] void 
 25374 ;; Registers used:
 25375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25376 ;; Tracked objects:
 25377 ;;		On entry : 3F/39
 25378 ;;		On exit  : 0/0
 25379 ;;		Unchanged: 0/0
 25380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25385 ;;Total ram usage:        0 bytes
 25386 ;; Hardware stack levels used:    1
 25387 ;; Hardware stack levels required when called:   10
 25388 ;; This function calls:
 25389 ;;		Nothing
 25390 ;; This function is called by:
 25391 ;;		_EXT_INT_Initialize
 25392 ;;		_start_switch_handler
 25393 ;; This function uses a reentrant model
 25394 ;;
 25395                           
 25396                           	psect	text117
 25397  018C9E                     __ptext117:
 25398                           	opt callstack 0
 25399  018C9E                     _INT1_SetInterruptHandler:
 25400                           	opt callstack 19
 25401                           
 25402                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 25403                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25404                           
 25405                           ; BSR set to: 57
 25406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25407                           ;incstack = 0
 25408  018C9E  50E1               	movf	fsr1l,w,c
 25409  018CA0  0FFD               	addlw	-3
 25410  018CA2  6ED9               	movwf	fsr2l,c
 25411  018CA4  50E2               	movf	fsr1h,w,c
 25412  018CA6  6EDA               	movwf	fsr2h,c
 25413  018CA8  0EFF               	movlw	255
 25414  018CAA  22DA               	addwfc	fsr2h,f,c
 25415  018CAC  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 25416  018CB2  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 25417  018CB8  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 25418                           
 25419                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25420  018CBE  52E5               	movf	postdec1,f,c
 25421  018CC0  52E5               	movf	postdec1,f,c
 25422  018CC2  52E5               	movf	postdec1,f,c
 25423  018CC4  0012               	return		;funcret
 25424  018CC6                     __end_of_INT1_SetInterruptHandler:
 25425                           	opt callstack 0
 25426                           
 25427 ;; *************** function _INT0_SetInterruptHandler *****************
 25428 ;; Defined at:
 25429 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25430 ;; Parameters:    Size  Location     Type
 25431 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25432 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25433 ;; Auto vars:     Size  Location     Type
 25434 ;;		None
 25435 ;; Return value:  Size  Location     Type
 25436 ;;                  1  [STACK] void 
 25437 ;; Registers used:
 25438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25439 ;; Tracked objects:
 25440 ;;		On entry : 3F/39
 25441 ;;		On exit  : 0/0
 25442 ;;		Unchanged: 0/0
 25443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25448 ;;Total ram usage:        0 bytes
 25449 ;; Hardware stack levels used:    1
 25450 ;; Hardware stack levels required when called:   10
 25451 ;; This function calls:
 25452 ;;		Nothing
 25453 ;; This function is called by:
 25454 ;;		_EXT_INT_Initialize
 25455 ;; This function uses a reentrant model
 25456 ;;
 25457                           
 25458                           	psect	text118
 25459  018CC6                     __ptext118:
 25460                           	opt callstack 0
 25461  018CC6                     _INT0_SetInterruptHandler:
 25462                           	opt callstack 18
 25463                           
 25464                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25465                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25466                           
 25467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25468                           ;incstack = 0
 25469  018CC6  50E1               	movf	fsr1l,w,c
 25470  018CC8  0FFD               	addlw	-3
 25471  018CCA  6ED9               	movwf	fsr2l,c
 25472  018CCC  50E2               	movf	fsr1h,w,c
 25473  018CCE  6EDA               	movwf	fsr2h,c
 25474  018CD0  0EFF               	movlw	255
 25475  018CD2  22DA               	addwfc	fsr2h,f,c
 25476  018CD4  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 25477  018CDA  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 25478  018CE0  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 25479                           
 25480                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25481  018CE6  52E5               	movf	postdec1,f,c
 25482  018CE8  52E5               	movf	postdec1,f,c
 25483  018CEA  52E5               	movf	postdec1,f,c
 25484  018CEC  0012               	return		;funcret
 25485  018CEE                     __end_of_INT0_SetInterruptHandler:
 25486                           	opt callstack 0
 25487                           
 25488 ;; *************** function _DMA2_Initialize *****************
 25489 ;; Defined at:
 25490 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25491 ;; Parameters:    Size  Location     Type
 25492 ;;		None
 25493 ;; Auto vars:     Size  Location     Type
 25494 ;;		None
 25495 ;; Return value:  Size  Location     Type
 25496 ;;                  1  [STACK] void 
 25497 ;; Registers used:
 25498 ;;		wreg, status,2
 25499 ;; Tracked objects:
 25500 ;;		On entry : 3F/3D
 25501 ;;		On exit  : 3F/3B
 25502 ;;		Unchanged: 0/0
 25503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25508 ;;Total ram usage:        0 bytes
 25509 ;; Hardware stack levels used:    1
 25510 ;; Hardware stack levels required when called:   10
 25511 ;; This function calls:
 25512 ;;		Nothing
 25513 ;; This function is called by:
 25514 ;;		_SYSTEM_Initialize
 25515 ;; This function uses a reentrant model
 25516 ;;
 25517                           
 25518                           	psect	text119
 25519  0182FA                     __ptext119:
 25520                           	opt callstack 0
 25521  0182FA                     _DMA2_Initialize:
 25522                           	opt callstack 19
 25523                           
 25524                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25525                           
 25526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25527                           ;incstack = 0
 25528  0182FA  0E00               	movlw	0
 25529  0182FC  013B               	movlb	59	; () banked
 25530  0182FE  6FD9               	movwf	217,b	;volatile
 25531  018300  0E10               	movlw	16
 25532  018302  6FDA               	movwf	218,b	;volatile
 25533  018304  0E00               	movlw	0
 25534  018306  6FDB               	movwf	219,b	;volatile
 25535                           
 25536                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25537  018308  0E3F               	movlw	63
 25538  01830A  6FD1               	movwf	209,b	;volatile
 25539  01830C  0EBB               	movlw	187
 25540  01830E  6FD0               	movwf	208,b	;volatile
 25541                           
 25542                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25543  018310  0E03               	movlw	3
 25544  018312  6FDD               	movwf	221,b	;volatile
 25545                           
 25546                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25547  018314  0E00               	movlw	0
 25548  018316  6FD8               	movwf	216,b	;volatile
 25549  018318  0E01               	movlw	1
 25550  01831A  6FD7               	movwf	215,b	;volatile
 25551                           
 25552                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25553  01831C  0E00               	movlw	0
 25554  01831E  6FCF               	movwf	207,b	;volatile
 25555  018320  0E01               	movlw	1
 25556  018322  6FCE               	movwf	206,b	;volatile
 25557                           
 25558                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25559  018324  0E46               	movlw	70
 25560  018326  6FDF               	movwf	223,b	;volatile
 25561                           
 25562                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25563  018328  0E3D               	movlw	61
 25564  01832A  6FDE               	movwf	222,b	;volatile
 25565                           
 25566                           ; BSR set to: 59
 25567                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25568  01832C  0139               	movlb	57	; () banked
 25569  01832E  97A5               	bcf	165,3,b	;volatile
 25570                           
 25571                           ; BSR set to: 57
 25572                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25573  018330  95A5               	bcf	165,2,b	;volatile
 25574                           
 25575                           ; BSR set to: 57
 25576                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25577  018332  9BA5               	bcf	165,5,b	;volatile
 25578                           
 25579                           ; BSR set to: 57
 25580                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25581  018334  99A5               	bcf	165,4,b	;volatile
 25582                           
 25583                           ; BSR set to: 57
 25584                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 25585  018336  9795               	bcf	149,3,b	;volatile
 25586                           
 25587                           ; BSR set to: 57
 25588                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 25589  018338  9595               	bcf	149,2,b	;volatile
 25590                           
 25591                           ; BSR set to: 57
 25592                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 25593  01833A  9B95               	bcf	149,5,b	;volatile
 25594                           
 25595                           ; BSR set to: 57
 25596                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25597  01833C  9995               	bcf	149,4,b	;volatile
 25598  01833E  9ED2               	bcf	16338,7,c	;# 
 25599  018340  0139               	banksel	14831	;# 
 25600  018342  0E55               	movlw	85	;# 
 25601  018344  6FEF               	movwf	14831,b	;# 
 25602  018346  0EAA               	movlw	170	;# 
 25603  018348  6FEF               	movwf	14831,b	;# 
 25604  01834A  81EF               	bsf	14831,0,b	;# 
 25605  01834C  8ED2               	bsf	16338,7,c	;# 
 25606                           
 25607                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25608  01834E  013B               	movlb	59	; () banked
 25609  018350  6BDC               	clrf	220,b	;volatile
 25610                           
 25611                           ; BSR set to: 59
 25612                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25613  018352  0012               	return		;funcret
 25614  018354                     __end_of_DMA2_Initialize:
 25615                           	opt callstack 0
 25616                           
 25617 ;; *************** function _DMA1_Initialize *****************
 25618 ;; Defined at:
 25619 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25620 ;; Parameters:    Size  Location     Type
 25621 ;;		None
 25622 ;; Auto vars:     Size  Location     Type
 25623 ;;		None
 25624 ;; Return value:  Size  Location     Type
 25625 ;;                  1  [STACK] void 
 25626 ;; Registers used:
 25627 ;;		wreg, status,2
 25628 ;; Tracked objects:
 25629 ;;		On entry : 3F/3B
 25630 ;;		On exit  : 3F/3B
 25631 ;;		Unchanged: 0/0
 25632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25637 ;;Total ram usage:        0 bytes
 25638 ;; Hardware stack levels used:    1
 25639 ;; Hardware stack levels required when called:   10
 25640 ;; This function calls:
 25641 ;;		Nothing
 25642 ;; This function is called by:
 25643 ;;		_SYSTEM_Initialize
 25644 ;; This function uses a reentrant model
 25645 ;;
 25646                           
 25647                           	psect	text120
 25648  017F10                     __ptext120:
 25649                           	opt callstack 0
 25650  017F10                     _DMA1_Initialize:
 25651                           	opt callstack 19
 25652                           
 25653                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25654                           
 25655                           ; BSR set to: 59
 25656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25657                           ;incstack = 0
 25658  017F10  0E00               	movlw	0
 25659  017F12  013B               	movlb	59	; () banked
 25660  017F14  6FF9               	movwf	249,b	;volatile
 25661  017F16  0E10               	movlw	16
 25662  017F18  6FFA               	movwf	250,b	;volatile
 25663  017F1A  0E00               	movlw	0
 25664  017F1C  6FFB               	movwf	251,b	;volatile
 25665                           
 25666                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25667  017F1E  0E3D               	movlw	61
 25668  017F20  6FF1               	movwf	241,b	;volatile
 25669  017F22  0E11               	movlw	17
 25670  017F24  6FF0               	movwf	240,b	;volatile
 25671                           
 25672                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25673  017F26  0E03               	movlw	3
 25674  017F28  6FFD               	movwf	253,b	;volatile
 25675                           
 25676                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25677  017F2A  0E00               	movlw	0
 25678  017F2C  6FF8               	movwf	248,b	;volatile
 25679  017F2E  0E01               	movlw	1
 25680  017F30  6FF7               	movwf	247,b	;volatile
 25681                           
 25682                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25683  017F32  0E00               	movlw	0
 25684  017F34  6FEF               	movwf	239,b	;volatile
 25685  017F36  0E01               	movlw	1
 25686  017F38  6FEE               	movwf	238,b	;volatile
 25687                           
 25688                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25689  017F3A  0E15               	movlw	21
 25690  017F3C  6FFF               	movwf	255,b	;volatile
 25691                           
 25692                           ; BSR set to: 59
 25693                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25694  017F3E  6BFE               	clrf	254,b	;volatile
 25695                           
 25696                           ; BSR set to: 59
 25697                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25698  017F40  0139               	movlb	57	; () banked
 25699  017F42  93A2               	bcf	162,1,b	;volatile
 25700                           
 25701                           ; BSR set to: 57
 25702                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25703  017F44  91A2               	bcf	162,0,b	;volatile
 25704                           
 25705                           ; BSR set to: 57
 25706                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25707  017F46  97A2               	bcf	162,3,b	;volatile
 25708                           
 25709                           ; BSR set to: 57
 25710                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25711  017F48  95A2               	bcf	162,2,b	;volatile
 25712                           
 25713                           ; BSR set to: 57
 25714                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25715  017F4A  8392               	bsf	146,1,b	;volatile
 25716                           
 25717                           ; BSR set to: 57
 25718                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25719  017F4C  8192               	bsf	146,0,b	;volatile
 25720                           
 25721                           ; BSR set to: 57
 25722                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25723  017F4E  8792               	bsf	146,3,b	;volatile
 25724                           
 25725                           ; BSR set to: 57
 25726                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25727  017F50  8592               	bsf	146,2,b	;volatile
 25728                           
 25729                           ; BSR set to: 57
 25730                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25731  017F52  6BF1               	clrf	241,b	;volatile
 25732                           
 25733                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25734  017F54  0E01               	movlw	1
 25735  017F56  6FF2               	movwf	242,b	;volatile
 25736                           
 25737                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25738  017F58  0E04               	movlw	4
 25739  017F5A  6FF3               	movwf	243,b	;volatile
 25740                           
 25741                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25742  017F5C  0E02               	movlw	2
 25743  017F5E  6FF4               	movwf	244,b	;volatile
 25744                           
 25745                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25746  017F60  0E03               	movlw	3
 25747  017F62  6FF7               	movwf	247,b	;volatile
 25748  017F64  9ED2               	bcf	16338,7,c	;# 
 25749  017F66  0139               	banksel	14831	;# 
 25750  017F68  0E55               	movlw	85	;# 
 25751  017F6A  6FEF               	movwf	14831,b	;# 
 25752  017F6C  0EAA               	movlw	170	;# 
 25753  017F6E  6FEF               	movwf	14831,b	;# 
 25754  017F70  81EF               	bsf	14831,0,b	;# 
 25755  017F72  8ED2               	bsf	16338,7,c	;# 
 25756                           
 25757                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25758  017F74  013B               	movlb	59	; () banked
 25759  017F76  6BFC               	clrf	252,b	;volatile
 25760                           
 25761                           ; BSR set to: 59
 25762                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25763  017F78  0012               	return		;funcret
 25764  017F7A                     __end_of_DMA1_Initialize:
 25765                           	opt callstack 0
 25766                           
 25767 ;; *************** function _CLKREF_Initialize *****************
 25768 ;; Defined at:
 25769 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25770 ;; Parameters:    Size  Location     Type
 25771 ;;		None
 25772 ;; Auto vars:     Size  Location     Type
 25773 ;;		None
 25774 ;; Return value:  Size  Location     Type
 25775 ;;                  1  [STACK] void 
 25776 ;; Registers used:
 25777 ;;		wreg, status,2
 25778 ;; Tracked objects:
 25779 ;;		On entry : 3F/3B
 25780 ;;		On exit  : 3F/3C
 25781 ;;		Unchanged: 0/0
 25782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25787 ;;Total ram usage:        0 bytes
 25788 ;; Hardware stack levels used:    1
 25789 ;; Hardware stack levels required when called:   10
 25790 ;; This function calls:
 25791 ;;		Nothing
 25792 ;; This function is called by:
 25793 ;;		_SYSTEM_Initialize
 25794 ;; This function uses a reentrant model
 25795 ;;
 25796                           
 25797                           	psect	text121
 25798  019132                     __ptext121:
 25799                           	opt callstack 0
 25800  019132                     _CLKREF_Initialize:
 25801                           	opt callstack 19
 25802                           
 25803                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25804                           
 25805                           ; BSR set to: 59
 25806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25807                           ;incstack = 0
 25808  019132  013C               	movlb	60	; () banked
 25809  019134  6BE6               	clrf	230,b	;volatile
 25810                           
 25811                           ; BSR set to: 60
 25812                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25813  019136  0E94               	movlw	148
 25814  019138  6FE5               	movwf	229,b	;volatile
 25815                           
 25816                           ; BSR set to: 60
 25817                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25818  01913A  0012               	return		;funcret
 25819  01913C                     __end_of_CLKREF_Initialize:
 25820                           	opt callstack 0
 25821                           
 25822 ;; *************** function _ADCC_Initialize *****************
 25823 ;; Defined at:
 25824 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25825 ;; Parameters:    Size  Location     Type
 25826 ;;		None
 25827 ;; Auto vars:     Size  Location     Type
 25828 ;;		None
 25829 ;; Return value:  Size  Location     Type
 25830 ;;                  1  [STACK] void 
 25831 ;; Registers used:
 25832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25833 ;; Tracked objects:
 25834 ;;		On entry : 3F/3E
 25835 ;;		On exit  : 0/0
 25836 ;;		Unchanged: 0/0
 25837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25842 ;;Total ram usage:        0 bytes
 25843 ;; Hardware stack levels used:    1
 25844 ;; Hardware stack levels required when called:   11
 25845 ;; This function calls:
 25846 ;;		_ADCC_SetADIInterruptHandler
 25847 ;;		_ADCC_SetADTIInterruptHandler
 25848 ;; This function is called by:
 25849 ;;		_SYSTEM_Initialize
 25850 ;; This function uses a reentrant model
 25851 ;;
 25852                           
 25853                           	psect	text122
 25854  017F7A                     __ptext122:
 25855                           	opt callstack 0
 25856  017F7A                     _ADCC_Initialize:
 25857                           	opt callstack 18
 25858                           
 25859                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25860                           
 25861                           ; BSR set to: 60
 25862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25863                           ;incstack = 0
 25864  017F7A  013E               	movlb	62	; () banked
 25865  017F7C  6BDE               	clrf	222,b	;volatile
 25866                           
 25867                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25868  017F7E  6BDF               	clrf	223,b	;volatile
 25869                           
 25870                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25871  017F80  6BE0               	clrf	224,b	;volatile
 25872                           
 25873                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25874  017F82  6BE1               	clrf	225,b	;volatile
 25875                           
 25876                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25877  017F84  6BE4               	clrf	228,b	;volatile
 25878                           
 25879                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25880  017F86  6BE5               	clrf	229,b	;volatile
 25881                           
 25882                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25883  017F88  6BEA               	clrf	234,b	;volatile
 25884                           
 25885                           ; BSR set to: 62
 25886                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25887  017F8A  0E40               	movlw	64
 25888  017F8C  6FEC               	movwf	236,b	;volatile
 25889                           
 25890                           ; BSR set to: 62
 25891                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25892  017F8E  6BF1               	clrf	241,b	;volatile
 25893                           
 25894                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25895  017F90  0E20               	movlw	32
 25896  017F92  6FF3               	movwf	243,b	;volatile
 25897                           
 25898                           ; BSR set to: 62
 25899                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25900  017F94  6BF4               	clrf	244,b	;volatile
 25901                           
 25902                           ; BSR set to: 62
 25903                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25904  017F96  6BF5               	clrf	245,b	;volatile
 25905                           
 25906                           ; BSR set to: 62
 25907                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25908  017F98  6BF6               	clrf	246,b	;volatile
 25909                           
 25910                           ; BSR set to: 62
 25911                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25912  017F9A  6BF7               	clrf	247,b	;volatile
 25913                           
 25914                           ; BSR set to: 62
 25915                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25916  017F9C  6BF9               	clrf	249,b	;volatile
 25917                           
 25918                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25919  017F9E  0E5B               	movlw	91
 25920  017FA0  6FFA               	movwf	250,b	;volatile
 25921                           
 25922                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25923  017FA2  0E27               	movlw	39
 25924  017FA4  6FFB               	movwf	251,b	;volatile
 25925                           
 25926                           ; BSR set to: 62
 25927                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25928  017FA6  6BFC               	clrf	252,b	;volatile
 25929                           
 25930                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25931  017FA8  0E02               	movlw	2
 25932  017FAA  6FFD               	movwf	253,b	;volatile
 25933                           
 25934                           ; BSR set to: 62
 25935                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25936  017FAC  6BFE               	clrf	254,b	;volatile
 25937                           
 25938                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25939  017FAE  0E07               	movlw	7
 25940  017FB0  6FFF               	movwf	255,b	;volatile
 25941                           
 25942                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25943  017FB2  0E84               	movlw	132
 25944  017FB4  6FF8               	movwf	248,b	;volatile
 25945                           
 25946                           ; BSR set to: 62
 25947                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25948  017FB6  0139               	movlb	57	; () banked
 25949  017FB8  95A1               	bcf	161,2,b	;volatile
 25950                           
 25951                           ; BSR set to: 57
 25952                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25953  017FBA  8591               	bsf	145,2,b	;volatile
 25954                           
 25955                           ; BSR set to: 57
 25956                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25957  017FBC  0EB0               	movlw	low _ADCC_DefaultInterruptHandler
 25958  017FBE  6EE6               	movwf	postinc1,c
 25959  017FC0  0E91               	movlw	high _ADCC_DefaultInterruptHandler
 25960  017FC2  6EE6               	movwf	postinc1,c
 25961  017FC4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25962  017FC6  6EE6               	movwf	postinc1,c
 25963  017FC8  EC8B  F0C6         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25964                           
 25965                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25966  017FCC  0139               	movlb	57	; () banked
 25967  017FCE  97A1               	bcf	161,3,b	;volatile
 25968                           
 25969                           ; BSR set to: 57
 25970                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25971  017FD0  8791               	bsf	145,3,b	;volatile
 25972                           
 25973                           ; BSR set to: 57
 25974                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25975  017FD2  0EB0               	movlw	low _ADCC_DefaultInterruptHandler
 25976  017FD4  6EE6               	movwf	postinc1,c
 25977  017FD6  0E91               	movlw	high _ADCC_DefaultInterruptHandler
 25978  017FD8  6EE6               	movwf	postinc1,c
 25979  017FDA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25980  017FDC  6EE6               	movwf	postinc1,c
 25981  017FDE  EC77  F0C6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25982                           
 25983                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25984  017FE2  0012               	return		;funcret
 25985  017FE4                     __end_of_ADCC_Initialize:
 25986                           	opt callstack 0
 25987                           
 25988 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25989 ;; Defined at:
 25990 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25991 ;; Parameters:    Size  Location     Type
 25992 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25993 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25994 ;; Auto vars:     Size  Location     Type
 25995 ;;		None
 25996 ;; Return value:  Size  Location     Type
 25997 ;;                  1  [STACK] void 
 25998 ;; Registers used:
 25999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26000 ;; Tracked objects:
 26001 ;;		On entry : 0/0
 26002 ;;		On exit  : 0/0
 26003 ;;		Unchanged: 0/0
 26004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26009 ;;Total ram usage:        0 bytes
 26010 ;; Hardware stack levels used:    1
 26011 ;; Hardware stack levels required when called:   10
 26012 ;; This function calls:
 26013 ;;		Nothing
 26014 ;; This function is called by:
 26015 ;;		_ADCC_Initialize
 26016 ;;		_start_adc_scan
 26017 ;; This function uses a reentrant model
 26018 ;;
 26019                           
 26020                           	psect	text123
 26021  018CEE                     __ptext123:
 26022                           	opt callstack 0
 26023  018CEE                     _ADCC_SetADTIInterruptHandler:
 26024                           	opt callstack 19
 26025                           
 26026                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 26027                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26028                           
 26029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26030                           ;incstack = 0
 26031  018CEE  50E1               	movf	fsr1l,w,c
 26032  018CF0  0FFD               	addlw	-3
 26033  018CF2  6ED9               	movwf	fsr2l,c
 26034  018CF4  50E2               	movf	fsr1h,w,c
 26035  018CF6  6EDA               	movwf	fsr2h,c
 26036  018CF8  0EFF               	movlw	255
 26037  018CFA  22DA               	addwfc	fsr2h,f,c
 26038  018CFC  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 26039  018D02  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 26040  018D08  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 26041                           
 26042                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 26043  018D0E  52E5               	movf	postdec1,f,c
 26044  018D10  52E5               	movf	postdec1,f,c
 26045  018D12  52E5               	movf	postdec1,f,c
 26046  018D14  0012               	return		;funcret
 26047  018D16                     __end_of_ADCC_SetADTIInterruptHandler:
 26048                           	opt callstack 0
 26049                           
 26050 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 26051 ;; Defined at:
 26052 ;;		line 323 in file "mcc_generated_files/adcc.c"
 26053 ;; Parameters:    Size  Location     Type
 26054 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26055 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 26056 ;; Auto vars:     Size  Location     Type
 26057 ;;		None
 26058 ;; Return value:  Size  Location     Type
 26059 ;;                  1  [STACK] void 
 26060 ;; Registers used:
 26061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26062 ;; Tracked objects:
 26063 ;;		On entry : 6/0
 26064 ;;		On exit  : 0/0
 26065 ;;		Unchanged: 0/0
 26066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26071 ;;Total ram usage:        0 bytes
 26072 ;; Hardware stack levels used:    1
 26073 ;; Hardware stack levels required when called:   10
 26074 ;; This function calls:
 26075 ;;		Nothing
 26076 ;; This function is called by:
 26077 ;;		_ADCC_Initialize
 26078 ;;		_start_adc_scan
 26079 ;; This function uses a reentrant model
 26080 ;;
 26081                           
 26082                           	psect	text124
 26083  018D16                     __ptext124:
 26084                           	opt callstack 0
 26085  018D16                     _ADCC_SetADIInterruptHandler:
 26086                           	opt callstack 19
 26087                           
 26088                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 26089                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26090                           
 26091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26092                           ;incstack = 0
 26093  018D16  50E1               	movf	fsr1l,w,c
 26094  018D18  0FFD               	addlw	-3
 26095  018D1A  6ED9               	movwf	fsr2l,c
 26096  018D1C  50E2               	movf	fsr1h,w,c
 26097  018D1E  6EDA               	movwf	fsr2h,c
 26098  018D20  0EFF               	movlw	255
 26099  018D22  22DA               	addwfc	fsr2h,f,c
 26100  018D24  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 26101  018D2A  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 26102  018D30  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 26103                           
 26104                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26105  018D36  52E5               	movf	postdec1,f,c
 26106  018D38  52E5               	movf	postdec1,f,c
 26107  018D3A  52E5               	movf	postdec1,f,c
 26108  018D3C  0012               	return		;funcret
 26109  018D3E                     __end_of_ADCC_SetADIInterruptHandler:
 26110                           	opt callstack 0
 26111                           
 26112 ;; *************** function _INT1_ISR *****************
 26113 ;; Defined at:
 26114 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 26115 ;; Parameters:    Size  Location     Type
 26116 ;;		None
 26117 ;; Auto vars:     Size  Location     Type
 26118 ;;		None
 26119 ;; Return value:  Size  Location     Type
 26120 ;;                  1    wreg      void 
 26121 ;; Registers used:
 26122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26123 ;; Tracked objects:
 26124 ;;		On entry : 0/0
 26125 ;;		On exit  : 0/0
 26126 ;;		Unchanged: 0/0
 26127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26130 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26132 ;;Total ram usage:        4 bytes
 26133 ;; Hardware stack levels used:    1
 26134 ;; Hardware stack levels required when called:    5
 26135 ;; This function calls:
 26136 ;;		_INT1_CallBack
 26137 ;; This function is called by:
 26138 ;;		Interrupt level 1
 26139 ;; This function uses a non-reentrant model
 26140 ;;
 26141                           
 26142                           	psect	text125
 26143  0187D0                     __ptext125:
 26144                           	opt callstack 0
 26145  0187D0                     _INT1_ISR:
 26146                           	opt callstack 12
 26147                           
 26148                           ;incstack = 0
 26149  0187D0  006F FF60  F04B    	movff	status,??_INT1_ISR
 26150  0187D6  0060  F094  F04C   	movff	btemp,??_INT1_ISR+1
 26151  0187DC  0060  F0BC  F04D   	movff	btemp+10,??_INT1_ISR+2
 26152  0187E2  0060  F0C0  F04E   	movff	btemp+11,??_INT1_ISR+3
 26153  0187E8  EE16  F00B         	lfsr	1,___intlo_sp
 26154                           
 26155                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 26156  0187EC  0139               	movlb	57	; () banked
 26157  0187EE  91A5               	bcf	165,0,b	;volatile
 26158                           
 26159                           ; BSR set to: 57
 26160                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 26161  0187F0  EC5D  F0C7         	call	_INT1_CallBack	;wreg free
 26162  0187F4  0060  F138  F030   	movff	??_INT1_ISR+3,btemp+11
 26163  0187FA  0060  F134  F02F   	movff	??_INT1_ISR+2,btemp+10
 26164  018800  0060  F130  F025   	movff	??_INT1_ISR+1,btemp
 26165  018806  0060  F12F  FFD8   	movff	??_INT1_ISR,status
 26166  01880C  0011               	retfie		f
 26167  01880E                     __end_of_INT1_ISR:
 26168                           	opt callstack 0
 26169                           
 26170 ;; *************** function _INT1_CallBack *****************
 26171 ;; Defined at:
 26172 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 26173 ;; Parameters:    Size  Location     Type
 26174 ;;		None
 26175 ;; Auto vars:     Size  Location     Type
 26176 ;;		None
 26177 ;; Return value:  Size  Location     Type
 26178 ;;                  1  [STACK] void 
 26179 ;; Registers used:
 26180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26181 ;; Tracked objects:
 26182 ;;		On entry : 3F/39
 26183 ;;		On exit  : 0/0
 26184 ;;		Unchanged: 0/0
 26185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26190 ;;Total ram usage:        0 bytes
 26191 ;; Hardware stack levels used:    1
 26192 ;; Hardware stack levels required when called:    4
 26193 ;; This function calls:
 26194 ;;		Absolute function
 26195 ;;		_INT1_DefaultInterruptHandler
 26196 ;;		_switch_handler
 26197 ;; This function is called by:
 26198 ;;		_INT1_ISR
 26199 ;; This function uses a reentrant model
 26200 ;;
 26201                           
 26202                           	psect	text126
 26203  018EBA                     __ptext126:
 26204                           	opt callstack 0
 26205  018EBA                     _INT1_CallBack:
 26206                           	opt callstack 12
 26207                           
 26208                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 26209                           
 26210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26211                           ;incstack = 0
 26212  018EBA  5004               	movf	_INT1_InterruptHandler^0,w,c
 26213  018EBC  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 26214  018EBE  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 26215  018EC0  B4D8               	btfsc	status,2,c
 26216  018EC2  0012               	return	
 26217                           
 26218                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 26219  018EC4  D801               	call	u861_28
 26220  018EC6  0012               	return	
 26221  018EC8                     u861_28:
 26222  018EC8  0005               	push	
 26223  018ECA  6EFA               	movwf	pclath,c
 26224  018ECC  5004               	movf	_INT1_InterruptHandler^0,w,c
 26225  018ECE  6EFD               	movwf	tosl,c
 26226  018ED0  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 26227  018ED2  6EFE               	movwf	tosh,c
 26228  018ED4  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 26229  018ED6  6EFF               	movwf	tosu,c
 26230  018ED8  50FA               	movf	pclath,w,c
 26231  018EDA  0012               	return		;indir
 26232  018EDC                     __end_of_INT1_CallBack:
 26233                           	opt callstack 0
 26234                           
 26235 ;; *************** function _INT1_DefaultInterruptHandler *****************
 26236 ;; Defined at:
 26237 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 26238 ;; Parameters:    Size  Location     Type
 26239 ;;		None
 26240 ;; Auto vars:     Size  Location     Type
 26241 ;;		None
 26242 ;; Return value:  Size  Location     Type
 26243 ;;                  1  [STACK] void 
 26244 ;; Registers used:
 26245 ;;		None
 26246 ;; Tracked objects:
 26247 ;;		On entry : 0/39
 26248 ;;		On exit  : 0/0
 26249 ;;		Unchanged: 0/0
 26250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26255 ;;Total ram usage:        0 bytes
 26256 ;; Hardware stack levels used:    1
 26257 ;; Hardware stack levels required when called:    3
 26258 ;; This function calls:
 26259 ;;		Nothing
 26260 ;; This function is called by:
 26261 ;;		_EXT_INT_Initialize
 26262 ;;		_INT1_CallBack
 26263 ;; This function uses a reentrant model
 26264 ;;
 26265                           
 26266                           	psect	text127
 26267  0191AA                     __ptext127:
 26268                           	opt callstack 0
 26269  0191AA                     _INT1_DefaultInterruptHandler:
 26270                           	opt callstack 12
 26271                           
 26272                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26273                           
 26274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26275                           ;incstack = 0
 26276  0191AA  0012               	return		;funcret
 26277  0191AC                     __end_of_INT1_DefaultInterruptHandler:
 26278                           	opt callstack 0
 26279                           
 26280 ;; *************** function _switch_handler *****************
 26281 ;; Defined at:
 26282 ;;		line 58 in file "dio.c"
 26283 ;; Parameters:    Size  Location     Type
 26284 ;;		None
 26285 ;; Auto vars:     Size  Location     Type
 26286 ;;  i               1  [STACK] unsigned char 
 26287 ;;  sw_value        1  [STACK] unsigned char 
 26288 ;; Return value:  Size  Location     Type
 26289 ;;                  1  [STACK] void 
 26290 ;; Registers used:
 26291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 26292 ;; Tracked objects:
 26293 ;;		On entry : 0/39
 26294 ;;		On exit  : 0/0
 26295 ;;		Unchanged: 0/0
 26296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26301 ;;Total ram usage:        0 bytes
 26302 ;; Hardware stack levels used:    1
 26303 ;; Hardware stack levels required when called:    3
 26304 ;; This function calls:
 26305 ;;		Nothing
 26306 ;; This function is called by:
 26307 ;;		_start_switch_handler
 26308 ;;		_INT1_CallBack
 26309 ;; This function uses a reentrant model
 26310 ;;
 26311                           
 26312                           	psect	text128
 26313  0168E4                     __ptext128:
 26314                           	opt callstack 0
 26315  0168E4                     _switch_handler:
 26316                           	opt callstack 0
 26317                           
 26318                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26319  0168E4  52E6               	movf	postinc1,f,c
 26320  0168E6  52E6               	movf	postinc1,f,c
 26321                           
 26322                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 26323                           ;stkvar	_i @ sp[(-2)+0]
 26324                           
 26325                           ;incstack = 0
 26326  0168E8  0EFE               	movlw	-2
 26327  0168EA  6AE3               	clrf	plusw1,c
 26328  0168EC  9EBD               	bcf	189,7,c	;volatile
 26329  0168EE  82BE               	bsf	190,1,c	;volatile
 26330                           
 26331                           ;dio.c: 72:  __nop();
 26332  0168F0  F000               	nop	
 26333                           
 26334                           ;dio.c: 73:  __nop();
 26335  0168F2  F000               	nop	
 26336                           
 26337                           ;dio.c: 74:  __nop();
 26338  0168F4  F000               	nop	
 26339  0168F6  D019               	goto	l9175
 26340  0168F8                     l9163:
 26341                           
 26342                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 26343  0168F8  A6CF               	btfss	207,3,c	;volatile
 26344  0168FA  D011               	goto	u846_20
 26345  0168FC  D00D               	goto	u846_21
 26346  0168FE                     u843_28:
 26347                           
 26348                           ;stkvar	_sw_value @ sp[(-2)+1]
 26349  0168FE  0EFF               	movlw	-1
 26350  016900  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 26351                           
 26352                           ;dio.c: 80:    break;
 26353  016906  D027               	goto	l9177
 26354  016908                     l9165:
 26355                           
 26356                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 26357  016908  A4CF               	btfss	207,2,c	;volatile
 26358  01690A  D009               	goto	u846_20
 26359  01690C  D005               	goto	u846_21
 26360  01690E                     l9167:
 26361                           
 26362                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 26363  01690E  A2CF               	btfss	207,1,c	;volatile
 26364  016910  D006               	goto	u846_20
 26365  016912  D002               	goto	u846_21
 26366  016914                     l9169:
 26367                           
 26368                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 26369  016914  A0CF               	btfss	207,0,c	;volatile
 26370  016916  D003               	goto	u846_20
 26371  016918                     u846_21:
 26372  016918  6A30               	clrf	(btemp+11)^0,c
 26373  01691A  2A30               	incf	(btemp+11)^0,f,c
 26374  01691C  D7F0               	goto	u843_28
 26375  01691E                     u846_20:
 26376  01691E  6A30               	clrf	(btemp+11)^0,c
 26377  016920  D7EE               	goto	u843_28
 26378  016922                     l9171:
 26379                           
 26380                           ;dio.c: 91:    sw_value = 1;
 26381                           ;stkvar	_sw_value @ sp[(-2)+1]
 26382  016922  0EFF               	movlw	-1
 26383  016924  6AE3               	clrf	plusw1,c
 26384  016926  2AE3               	incf	plusw1,f,c
 26385                           
 26386                           ;dio.c: 92:    break;
 26387  016928  D016               	goto	l9177
 26388  01692A                     l9175:
 26389                           
 26390                           ;stkvar	_i @ sp[(-2)+0]
 26391  01692A  0EFE               	movlw	-2
 26392  01692C  50E3               	movf	plusw1,w,c
 26393  01692E  6E2F               	movwf	(btemp+10)^0,c
 26394  016930  6A30               	clrf	(btemp+11)^0,c
 26395                           
 26396                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26397                           ; Switch size 1, requested type "simple"
 26398                           ; Number of cases is 1, Range of values is 0 to 0
 26399                           ; switch strategies available:
 26400                           ; Name         Instructions Cycles
 26401                           ; simple_byte            4     3 (average)
 26402                           ;	Chosen strategy is simple_byte
 26403  016932  5030               	movf	(btemp+11)^0,w,c
 26404  016934  0A00               	xorlw	0	; case 0
 26405  016936  A4D8               	btfss	status,2,c
 26406  016938  D7F4               	goto	l9171
 26407                           
 26408                           ; Switch size 1, requested type "simple"
 26409                           ; Number of cases is 4, Range of values is 0 to 3
 26410                           ; switch strategies available:
 26411                           ; Name         Instructions Cycles
 26412                           ; simple_byte           13     7 (average)
 26413                           ;	Chosen strategy is simple_byte
 26414  01693A  502F               	movf	(btemp+10)^0,w,c
 26415  01693C  0A00               	xorlw	0	; case 0
 26416  01693E  B4D8               	btfsc	status,2,c
 26417  016940  D7E9               	goto	l9169
 26418  016942  0A01               	xorlw	1	; case 1
 26419  016944  B4D8               	btfsc	status,2,c
 26420  016946  D7E3               	goto	l9167
 26421  016948  0A03               	xorlw	3	; case 2
 26422  01694A  B4D8               	btfsc	status,2,c
 26423  01694C  D7DD               	goto	l9165
 26424  01694E  0A01               	xorlw	1	; case 3
 26425  016950  B4D8               	btfsc	status,2,c
 26426  016952  D7D2               	goto	l9163
 26427  016954  D7E6               	goto	l9171
 26428  016956                     l9177:
 26429                           
 26430                           ;dio.c: 96:   if (sw_value) {
 26431                           ;stkvar	_sw_value @ sp[(-2)+1]
 26432  016956  0EFF               	movlw	-1
 26433  016958  50E3               	movf	plusw1,w,c
 26434  01695A  B4D8               	btfsc	status,2,c
 26435  01695C  D014               	goto	l9183
 26436                           
 26437                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26438                           ;stkvar	_i @ sp[(-2)+0]
 26439  01695E  0EFE               	movlw	-2
 26440  016960  50E3               	movf	plusw1,w,c
 26441  016962  0D05               	mullw	5
 26442  016964  50F3               	movf	243,w,c
 26443  016966  0F60               	addlw	low _S
 26444  016968  6ED9               	movwf	fsr2l,c
 26445  01696A  6ADA               	clrf	fsr2h,c
 26446  01696C  04DE               	decf	postinc2,w,c
 26447  01696E  A4D8               	btfss	status,2,c
 26448  016970  D041               	goto	l9191
 26449                           
 26450                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26451                           ;stkvar	_i @ sp[(-2)+0]
 26452  016972  0EFE               	movlw	-2
 26453  016974  50E3               	movf	plusw1,w,c
 26454  016976  0D05               	mullw	5
 26455  016978  50F3               	movf	243,w,c
 26456  01697A  0F60               	addlw	low _S
 26457  01697C  6ED9               	movwf	fsr2l,c
 26458  01697E  6ADA               	clrf	fsr2h,c
 26459  016980  0E00               	movlw	0
 26460  016982  6EDF               	movwf	indf2,c
 26461  016984  D037               	goto	l9191
 26462  016986                     l9183:
 26463                           
 26464                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26465                           ;stkvar	_i @ sp[(-2)+0]
 26466  016986  0EFE               	movlw	-2
 26467  016988  50E3               	movf	plusw1,w,c
 26468  01698A  0D05               	mullw	5
 26469  01698C  50F3               	movf	243,w,c
 26470  01698E  0F60               	addlw	low _S
 26471  016990  6ED9               	movwf	fsr2l,c
 26472  016992  6ADA               	clrf	fsr2h,c
 26473  016994  50DF               	movf	indf2,w,c
 26474  016996  A4D8               	btfss	status,2,c
 26475  016998  D02D               	goto	l9191
 26476                           
 26477                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26478                           ;stkvar	_i @ sp[(-2)+0]
 26479  01699A  0EFE               	movlw	-2
 26480  01699C  50E3               	movf	plusw1,w,c
 26481  01699E  0D05               	mullw	5
 26482  0169A0  50F3               	movf	243,w,c
 26483  0169A2  0F60               	addlw	low _S
 26484  0169A4  6ED9               	movwf	fsr2l,c
 26485  0169A6  6ADA               	clrf	fsr2h,c
 26486  0169A8  0E01               	movlw	1
 26487  0169AA  6EDF               	movwf	indf2,c
 26488                           
 26489                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26490  0169AC  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26491                           
 26492                           ;stkvar	_i @ sp[(-2)+0]
 26493  0169B0  0EFE               	movlw	-2
 26494  0169B2  50E3               	movf	plusw1,w,c
 26495  0169B4  0D05               	mullw	5
 26496  0169B6  50F3               	movf	243,w,c
 26497  0169B8  0F61               	addlw	low (_S+1)
 26498  0169BA  6EE9               	movwf	fsr0l,c
 26499  0169BC  6AEA               	clrf	fsr0h,c
 26500  0169BE  006F FF7B FFEE     	movff	postinc2,postinc0
 26501  0169C4  006F FF7B FFEE     	movff	postinc2,postinc0
 26502  0169CA  006F FF7B FFEE     	movff	postinc2,postinc0
 26503  0169D0  006F FF7B FFEE     	movff	postinc2,postinc0
 26504                           
 26505                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26506                           ;stkvar	_i @ sp[(-2)+0]
 26507  0169D6  0EFE               	movlw	-2
 26508  0169D8  006F FF8C  F030    	movff	plusw1,btemp+11
 26509  0169DE  0E01               	movlw	1
 26510  0169E0  6E2F               	movwf	(btemp+10)^0,c
 26511  0169E2  2A30               	incf	(btemp+11)^0,f,c
 26512  0169E4  D002               	goto	u850_24
 26513  0169E6                     u850_25:
 26514  0169E6  90D8               	bcf	status,0,c
 26515  0169E8  362F               	rlcf	(btemp+10)^0,f,c
 26516  0169EA                     u850_24:
 26517  0169EA  2E30               	decfsz	(btemp+11)^0,f,c
 26518  0169EC  D7FC               	goto	u850_25
 26519  0169EE  502F               	movf	(btemp+10)^0,w,c
 26520  0169F0  0100               	movlb	0	; () banked
 26521  0169F2  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26522  0169F4                     l9191:
 26523                           
 26524                           ;dio.c: 107:  } while (++i < 4);
 26525                           ;stkvar	_i @ sp[(-2)+0]
 26526  0169F4  0EFE               	movlw	-2
 26527  0169F6  2AE3               	incf	plusw1,f,c
 26528  0169F8  0EFE               	movlw	-2
 26529  0169FA  006F FF8C  F025    	movff	plusw1,btemp
 26530  016A00  0E03               	movlw	3
 26531  016A02  6425               	cpfsgt	btemp^0,c
 26532  016A04  D792               	goto	l9175
 26533                           
 26534                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 26535  016A06  92BE               	bcf	190,1,c	;volatile
 26536  016A08  A4BE               	btfss	190,2,c	;volatile
 26537  016A0A  D002               	goto	u852_20
 26538  016A0C  0E01               	movlw	1
 26539  016A0E  D001               	goto	u852_26
 26540  016A10                     u852_20:
 26541  016A10  0E00               	movlw	0
 26542  016A12                     u852_26:
 26543  016A12  0AFF               	xorlw	255
 26544  016A14  6E30               	movwf	(btemp+11)^0,c
 26545  016A16  4630               	rlncf	(btemp+11)^0,f,c
 26546  016A18  4630               	rlncf	(btemp+11)^0,f,c
 26547  016A1A  50BE               	movf	190,w,c	;volatile
 26548  016A1C  1830               	xorwf	(btemp+11)^0,w,c
 26549  016A1E  0BFB               	andlw	-5
 26550  016A20  1830               	xorwf	(btemp+11)^0,w,c
 26551  016A22  6EBE               	movwf	190,c	;volatile
 26552  016A24  8EBD               	bsf	189,7,c	;volatile
 26553                           
 26554                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26555  016A26  52E5               	movf	postdec1,f,c
 26556  016A28  52E5               	movf	postdec1,f,c
 26557  016A2A  0012               	return		;funcret
 26558  016A2C                     __end_of_switch_handler:
 26559                           	opt callstack 0
 26560                           
 26561 ;; *************** function _TMR5_ISR *****************
 26562 ;; Defined at:
 26563 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26564 ;; Parameters:    Size  Location     Type
 26565 ;;		None
 26566 ;; Auto vars:     Size  Location     Type
 26567 ;;		None
 26568 ;; Return value:  Size  Location     Type
 26569 ;;                  1    wreg      void 
 26570 ;; Registers used:
 26571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26572 ;; Tracked objects:
 26573 ;;		On entry : 0/0
 26574 ;;		On exit  : 0/0
 26575 ;;		Unchanged: 0/0
 26576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26579 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26581 ;;Total ram usage:        4 bytes
 26582 ;; Hardware stack levels used:    1
 26583 ;; Hardware stack levels required when called:    5
 26584 ;; This function calls:
 26585 ;;		_TMR5_CallBack
 26586 ;;		_TMR5_WriteTimer
 26587 ;; This function is called by:
 26588 ;;		Interrupt level 1
 26589 ;; This function uses a non-reentrant model
 26590 ;;
 26591                           
 26592                           	psect	text129
 26593  018354                     __ptext129:
 26594                           	opt callstack 0
 26595  018354                     _TMR5_ISR:
 26596                           	opt callstack 12
 26597                           
 26598                           ;incstack = 0
 26599  018354  006F FF60  F051    	movff	status,??_TMR5_ISR+2
 26600  01835A  0060  F0C0  F052   	movff	btemp+11,??_TMR5_ISR+3
 26601  018360  EE16  F00B         	lfsr	1,___intlo_sp
 26602                           
 26603                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26604  018364  0139               	movlb	57	; () banked
 26605  018366  9DA8               	bcf	168,6,b	;volatile
 26606                           
 26607                           ; BSR set to: 57
 26608                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26609  018368  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 26610  01836E  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26611  018374  ECA8  F0C3         	call	_TMR5_WriteTimer	;wreg free
 26612                           
 26613                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26614  018378  0102               	movlb	2	; () banked
 26615  01837A  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26616  01837C  6E4F               	movwf	??_TMR5_ISR^0,c
 26617  01837E  6A50               	clrf	(??_TMR5_ISR+1)^0,c
 26618  018380  0E05               	movlw	5
 26619  018382  264F               	addwf	??_TMR5_ISR^0,f,c
 26620  018384  0E00               	movlw	0
 26621  018386  2250               	addwfc	(??_TMR5_ISR+1)^0,f,c
 26622  018388  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26623  01838A  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26624  01838C  504F               	movf	??_TMR5_ISR^0,w,c
 26625  01838E  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26626  018390  5050               	movf	(??_TMR5_ISR+1)^0,w,c
 26627  018392  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26628  018394  A0D8               	btfss	status,0,c
 26629  018396  D004               	goto	i1l1047
 26630                           
 26631                           ; BSR set to: 2
 26632                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26633  018398  EC27  F0C7         	call	_TMR5_CallBack	;wreg free
 26634                           
 26635                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26636  01839C  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26637  01839E  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26638  0183A0                     i1l1047:
 26639  0183A0  0060  F148  F030   	movff	??_TMR5_ISR+3,btemp+11
 26640  0183A6  0060  F147  FFD8   	movff	??_TMR5_ISR+2,status
 26641  0183AC  0011               	retfie		f
 26642  0183AE                     __end_of_TMR5_ISR:
 26643                           	opt callstack 0
 26644                           
 26645 ;; *************** function _TMR5_WriteTimer *****************
 26646 ;; Defined at:
 26647 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26648 ;; Parameters:    Size  Location     Type
 26649 ;;  timerVal        2  [STACK] unsigned short 
 26650 ;; Auto vars:     Size  Location     Type
 26651 ;;		None
 26652 ;; Return value:  Size  Location     Type
 26653 ;;                  1  [STACK] void 
 26654 ;; Registers used:
 26655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26656 ;; Tracked objects:
 26657 ;;		On entry : 3F/39
 26658 ;;		On exit  : 0/0
 26659 ;;		Unchanged: 0/0
 26660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26665 ;;Total ram usage:        0 bytes
 26666 ;; Hardware stack levels used:    1
 26667 ;; Hardware stack levels required when called:    3
 26668 ;; This function calls:
 26669 ;;		Nothing
 26670 ;; This function is called by:
 26671 ;;		_TMR5_ISR
 26672 ;; This function uses a reentrant model
 26673 ;;
 26674                           
 26675                           	psect	text130
 26676  018750                     __ptext130:
 26677                           	opt callstack 0
 26678  018750                     _TMR5_WriteTimer:
 26679                           	opt callstack 13
 26680                           
 26681                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26682                           
 26683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26684                           ;incstack = 0
 26685  018750  A49A               	btfss	154,2,c	;volatile
 26686  018752  D00F               	goto	l9319
 26687                           
 26688                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26689  018754  909A               	bcf	154,0,c	;volatile
 26690                           
 26691                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26692                           ;stkvar	_timerVal @ sp[(0)+-2]
 26693  018756  0EFF               	movlw	255
 26694  018758  24E1               	addwf	fsr1l,w,c
 26695  01875A  6ED9               	movwf	fsr2l,c
 26696  01875C  0EFF               	movlw	255
 26697  01875E  20E2               	addwfc	fsr1h,w,c
 26698  018760  6EDA               	movwf	fsr2h,c
 26699  018762  50DF               	movf	indf2,w,c
 26700  018764  6E99               	movwf	153,c	;volatile
 26701                           
 26702                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26703                           ;stkvar	_timerVal @ sp[(0)+-2]
 26704  018766  0EFE               	movlw	-2
 26705  018768  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26706                           
 26707                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26708  01876E  809A               	bsf	154,0,c	;volatile
 26709                           
 26710                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26711  018770  D00C               	goto	l1030
 26712  018772                     l9319:
 26713                           
 26714                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26715                           ;stkvar	_timerVal @ sp[(0)+-2]
 26716  018772  0EFF               	movlw	255
 26717  018774  24E1               	addwf	fsr1l,w,c
 26718  018776  6ED9               	movwf	fsr2l,c
 26719  018778  0EFF               	movlw	255
 26720  01877A  20E2               	addwfc	fsr1h,w,c
 26721  01877C  6EDA               	movwf	fsr2h,c
 26722  01877E  50DF               	movf	indf2,w,c
 26723  018780  6E99               	movwf	153,c	;volatile
 26724                           
 26725                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26726                           ;stkvar	_timerVal @ sp[(0)+-2]
 26727  018782  0EFE               	movlw	-2
 26728  018784  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26729  01878A                     l1030:
 26730                           
 26731                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26732  01878A  52E5               	movf	postdec1,f,c
 26733  01878C  52E5               	movf	postdec1,f,c
 26734  01878E  0012               	return		;funcret
 26735  018790                     __end_of_TMR5_WriteTimer:
 26736                           	opt callstack 0
 26737                           
 26738 ;; *************** function _TMR5_CallBack *****************
 26739 ;; Defined at:
 26740 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26741 ;; Parameters:    Size  Location     Type
 26742 ;;		None
 26743 ;; Auto vars:     Size  Location     Type
 26744 ;;		None
 26745 ;; Return value:  Size  Location     Type
 26746 ;;                  1  [STACK] void 
 26747 ;; Registers used:
 26748 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26749 ;; Tracked objects:
 26750 ;;		On entry : 3F/2
 26751 ;;		On exit  : 0/0
 26752 ;;		Unchanged: 0/0
 26753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26758 ;;Total ram usage:        0 bytes
 26759 ;; Hardware stack levels used:    1
 26760 ;; Hardware stack levels required when called:    4
 26761 ;; This function calls:
 26762 ;;		Absolute function
 26763 ;;		_TMR5_DefaultInterruptHandler
 26764 ;; This function is called by:
 26765 ;;		_TMR5_ISR
 26766 ;; This function uses a reentrant model
 26767 ;;
 26768                           
 26769                           	psect	text131
 26770  018E4E                     __ptext131:
 26771                           	opt callstack 0
 26772  018E4E                     _TMR5_CallBack:
 26773                           	opt callstack 12
 26774                           
 26775                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26776                           
 26777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26778                           ;incstack = 0
 26779  018E4E  0100               	movlb	0	; () banked
 26780  018E50  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26781  018E52  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26782  018E54  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26783  018E56  B4D8               	btfsc	status,2,c
 26784  018E58  0012               	return	
 26785                           
 26786                           ; BSR set to: 0
 26787                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26788  018E5A  D801               	call	u872_28
 26789  018E5C  0012               	return	
 26790  018E5E                     u872_28:
 26791  018E5E  0005               	push	
 26792  018E60  6EFA               	movwf	pclath,c
 26793  018E62  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26794  018E64  6EFD               	movwf	tosl,c
 26795  018E66  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26796  018E68  6EFE               	movwf	tosh,c
 26797  018E6A  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26798  018E6C  6EFF               	movwf	tosu,c
 26799  018E6E  50FA               	movf	pclath,w,c
 26800  018E70  0012               	return		;indir
 26801  018E72                     __end_of_TMR5_CallBack:
 26802                           	opt callstack 0
 26803                           
 26804 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26805 ;; Defined at:
 26806 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26807 ;; Parameters:    Size  Location     Type
 26808 ;;		None
 26809 ;; Auto vars:     Size  Location     Type
 26810 ;;		None
 26811 ;; Return value:  Size  Location     Type
 26812 ;;                  1  [STACK] void 
 26813 ;; Registers used:
 26814 ;;		wreg, status,2, status,0, btemp+11
 26815 ;; Tracked objects:
 26816 ;;		On entry : 3F/0
 26817 ;;		On exit  : 3F/2
 26818 ;;		Unchanged: 0/0
 26819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26824 ;;Total ram usage:        0 bytes
 26825 ;; Hardware stack levels used:    1
 26826 ;; Hardware stack levels required when called:    3
 26827 ;; This function calls:
 26828 ;;		Nothing
 26829 ;; This function is called by:
 26830 ;;		_TMR5_Initialize
 26831 ;;		_TMR5_CallBack
 26832 ;; This function uses a reentrant model
 26833 ;;
 26834                           
 26835                           	psect	text132
 26836  018D3E                     __ptext132:
 26837                           	opt callstack 0
 26838  018D3E                     _TMR5_DefaultInterruptHandler:
 26839                           	opt callstack 12
 26840                           
 26841                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26842                           
 26843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26844                           ;incstack = 0
 26845  018D3E  A0BE               	btfss	190,0,c	;volatile
 26846  018D40  D002               	goto	u824_20
 26847  018D42  0E01               	movlw	1
 26848  018D44  D001               	goto	u824_26
 26849  018D46                     u824_20:
 26850  018D46  0E00               	movlw	0
 26851  018D48                     u824_26:
 26852  018D48  0AFF               	xorlw	255
 26853  018D4A  6E30               	movwf	(btemp+11)^0,c
 26854  018D4C  50BE               	movf	190,w,c	;volatile
 26855  018D4E  1830               	xorwf	(btemp+11)^0,w,c
 26856  018D50  0BFE               	andlw	-2
 26857  018D52  1830               	xorwf	(btemp+11)^0,w,c
 26858  018D54  6EBE               	movwf	190,c	;volatile
 26859                           
 26860                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26861  018D56  0E01               	movlw	1
 26862  018D58  0102               	movlb	2	; () banked
 26863  018D5A  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26864  018D5C  0E00               	movlw	0
 26865  018D5E  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26866  018D60  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26867  018D62  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26868                           
 26869                           ; BSR set to: 2
 26870                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26871  018D64  0012               	return		;funcret
 26872  018D66                     __end_of_TMR5_DefaultInterruptHandler:
 26873                           	opt callstack 0
 26874                           
 26875 ;; *************** function _TMR3_ISR *****************
 26876 ;; Defined at:
 26877 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 26878 ;; Parameters:    Size  Location     Type
 26879 ;;		None
 26880 ;; Auto vars:     Size  Location     Type
 26881 ;;		None
 26882 ;; Return value:  Size  Location     Type
 26883 ;;                  1    wreg      void 
 26884 ;; Registers used:
 26885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 26886 ;; Tracked objects:
 26887 ;;		On entry : 0/0
 26888 ;;		On exit  : 0/0
 26889 ;;		Unchanged: 0/0
 26890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26893 ;;      Temps:          0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26894 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26895 ;;Total ram usage:       13 bytes
 26896 ;; Hardware stack levels used:    1
 26897 ;; Hardware stack levels required when called:    9
 26898 ;; This function calls:
 26899 ;;		_TMR3_CallBack
 26900 ;;		_TMR3_WriteTimer
 26901 ;; This function is called by:
 26902 ;;		Interrupt level 1
 26903 ;; This function uses a non-reentrant model
 26904 ;;
 26905                           
 26906                           	psect	text133
 26907  017474                     __ptext133:
 26908                           	opt callstack 0
 26909  017474                     _TMR3_ISR:
 26910                           	opt callstack 8
 26911                           
 26912                           ; BSR set to: 2
 26913                           ;incstack = 0
 26914  017474  006F FF60  F2CC    	movff	status,??_TMR3_ISR
 26915  01747A  0060  F094  F2CD   	movff	btemp,??_TMR3_ISR+1
 26916  017480  0060  F098  F2CE   	movff	btemp+1,??_TMR3_ISR+2
 26917  017486  0060  F09C  F2CF   	movff	btemp+2,??_TMR3_ISR+3
 26918  01748C  0060  F0A0  F2D0   	movff	btemp+3,??_TMR3_ISR+4
 26919  017492  0060  F0A4  F2D1   	movff	btemp+4,??_TMR3_ISR+5
 26920  017498  0060  F0A8  F2D2   	movff	btemp+5,??_TMR3_ISR+6
 26921  01749E  0060  F0AC  F2D3   	movff	btemp+6,??_TMR3_ISR+7
 26922  0174A4  0060  F0B0  F2D4   	movff	btemp+7,??_TMR3_ISR+8
 26923  0174AA  0060  F0B4  F2D5   	movff	btemp+8,??_TMR3_ISR+9
 26924  0174B0  0060  F0B8  F2D6   	movff	btemp+9,??_TMR3_ISR+10
 26925  0174B6  0060  F0BC  F2D7   	movff	btemp+10,??_TMR3_ISR+11
 26926  0174BC  0060  F0C0  F2D8   	movff	btemp+11,??_TMR3_ISR+12
 26927  0174C2  EE16  F00B         	lfsr	1,___intlo_sp
 26928                           
 26929                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 26930  0174C6  0139               	movlb	57	; () banked
 26931  0174C8  9DA6               	bcf	166,6,b	;volatile
 26932                           
 26933                           ; BSR set to: 57
 26934                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 26935  0174CA  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 26936  0174D0  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 26937  0174D6  ECC8  F0C3         	call	_TMR3_WriteTimer	;wreg free
 26938                           
 26939                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 26940  0174DA  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 26941  0174DC  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 26942  0174DE  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 26943  0174E0  E104               	bnz	i1u1082_20
 26944  0174E2  0E28               	movlw	40
 26945  0174E4  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 26946  0174E6  A0D8               	btfss	status,0,c
 26947  0174E8  D004               	goto	i1l1902
 26948  0174EA                     i1u1082_20:
 26949                           
 26950                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 26951  0174EA  EC39  F0C7         	call	_TMR3_CallBack	;wreg free
 26952                           
 26953                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 26954  0174EE  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 26955  0174F0  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 26956  0174F2                     i1l1902:
 26957  0174F2  0060  FB60  F030   	movff	??_TMR3_ISR+12,btemp+11
 26958  0174F8  0060  FB5C  F02F   	movff	??_TMR3_ISR+11,btemp+10
 26959  0174FE  0060  FB58  F02E   	movff	??_TMR3_ISR+10,btemp+9
 26960  017504  0060  FB54  F02D   	movff	??_TMR3_ISR+9,btemp+8
 26961  01750A  0060  FB50  F02C   	movff	??_TMR3_ISR+8,btemp+7
 26962  017510  0060  FB4C  F02B   	movff	??_TMR3_ISR+7,btemp+6
 26963  017516  0060  FB48  F02A   	movff	??_TMR3_ISR+6,btemp+5
 26964  01751C  0060  FB44  F029   	movff	??_TMR3_ISR+5,btemp+4
 26965  017522  0060  FB40  F028   	movff	??_TMR3_ISR+4,btemp+3
 26966  017528  0060  FB3C  F027   	movff	??_TMR3_ISR+3,btemp+2
 26967  01752E  0060  FB38  F026   	movff	??_TMR3_ISR+2,btemp+1
 26968  017534  0060  FB34  F025   	movff	??_TMR3_ISR+1,btemp
 26969  01753A  0060  FB33  FFD8   	movff	??_TMR3_ISR,status
 26970  017540  0011               	retfie		f
 26971  017542                     __end_of_TMR3_ISR:
 26972                           	opt callstack 0
 26973                           
 26974 ;; *************** function _TMR3_WriteTimer *****************
 26975 ;; Defined at:
 26976 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 26977 ;; Parameters:    Size  Location     Type
 26978 ;;  timerVal        2  [STACK] unsigned short 
 26979 ;; Auto vars:     Size  Location     Type
 26980 ;;		None
 26981 ;; Return value:  Size  Location     Type
 26982 ;;                  1  [STACK] void 
 26983 ;; Registers used:
 26984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26985 ;; Tracked objects:
 26986 ;;		On entry : 3F/39
 26987 ;;		On exit  : 0/0
 26988 ;;		Unchanged: 0/0
 26989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26994 ;;Total ram usage:        0 bytes
 26995 ;; Hardware stack levels used:    1
 26996 ;; Hardware stack levels required when called:    3
 26997 ;; This function calls:
 26998 ;;		Nothing
 26999 ;; This function is called by:
 27000 ;;		_TMR3_ISR
 27001 ;; This function uses a reentrant model
 27002 ;;
 27003                           
 27004                           	psect	text134
 27005  018790                     __ptext134:
 27006                           	opt callstack 0
 27007  018790                     _TMR3_WriteTimer:
 27008                           	opt callstack 13
 27009                           
 27010                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 27011                           
 27012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27013                           ;incstack = 0
 27014  018790  A4A6               	btfss	166,2,c	;volatile
 27015  018792  D00F               	goto	l6111
 27016                           
 27017                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 27018  018794  90A6               	bcf	166,0,c	;volatile
 27019                           
 27020                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 27021                           ;stkvar	_timerVal @ sp[(0)+-2]
 27022  018796  0EFF               	movlw	255
 27023  018798  24E1               	addwf	fsr1l,w,c
 27024  01879A  6ED9               	movwf	fsr2l,c
 27025  01879C  0EFF               	movlw	255
 27026  01879E  20E2               	addwfc	fsr1h,w,c
 27027  0187A0  6EDA               	movwf	fsr2h,c
 27028  0187A2  50DF               	movf	indf2,w,c
 27029  0187A4  6EA5               	movwf	165,c	;volatile
 27030                           
 27031                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 27032                           ;stkvar	_timerVal @ sp[(0)+-2]
 27033  0187A6  0EFE               	movlw	-2
 27034  0187A8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27035                           
 27036                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 27037  0187AE  80A6               	bsf	166,0,c	;volatile
 27038                           
 27039                           ;mcc_generated_files/tmr3.c: 141:     }
 27040  0187B0  D00C               	goto	l1885
 27041  0187B2                     l6111:
 27042                           
 27043                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 27044                           ;stkvar	_timerVal @ sp[(0)+-2]
 27045  0187B2  0EFF               	movlw	255
 27046  0187B4  24E1               	addwf	fsr1l,w,c
 27047  0187B6  6ED9               	movwf	fsr2l,c
 27048  0187B8  0EFF               	movlw	255
 27049  0187BA  20E2               	addwfc	fsr1h,w,c
 27050  0187BC  6EDA               	movwf	fsr2h,c
 27051  0187BE  50DF               	movf	indf2,w,c
 27052  0187C0  6EA5               	movwf	165,c	;volatile
 27053                           
 27054                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 27055                           ;stkvar	_timerVal @ sp[(0)+-2]
 27056  0187C2  0EFE               	movlw	-2
 27057  0187C4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27058  0187CA                     l1885:
 27059                           
 27060                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27061  0187CA  52E5               	movf	postdec1,f,c
 27062  0187CC  52E5               	movf	postdec1,f,c
 27063  0187CE  0012               	return		;funcret
 27064  0187D0                     __end_of_TMR3_WriteTimer:
 27065                           	opt callstack 0
 27066                           
 27067 ;; *************** function _TMR3_CallBack *****************
 27068 ;; Defined at:
 27069 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 27070 ;; Parameters:    Size  Location     Type
 27071 ;;		None
 27072 ;; Auto vars:     Size  Location     Type
 27073 ;;		None
 27074 ;; Return value:  Size  Location     Type
 27075 ;;                  1  [STACK] void 
 27076 ;; Registers used:
 27077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 27078 ;; Tracked objects:
 27079 ;;		On entry : 0/39
 27080 ;;		On exit  : 0/0
 27081 ;;		Unchanged: 0/0
 27082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27087 ;;Total ram usage:        0 bytes
 27088 ;; Hardware stack levels used:    1
 27089 ;; Hardware stack levels required when called:    8
 27090 ;; This function calls:
 27091 ;;		Absolute function
 27092 ;;		_TMR3_DefaultInterruptHandler
 27093 ;;		_calc_bsoc
 27094 ;; This function is called by:
 27095 ;;		_TMR3_ISR
 27096 ;; This function uses a reentrant model
 27097 ;;
 27098                           
 27099                           	psect	text135
 27100  018E72                     __ptext135:
 27101                           	opt callstack 0
 27102  018E72                     _TMR3_CallBack:
 27103                           	opt callstack 8
 27104                           
 27105                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 27106                           
 27107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27108                           ;incstack = 0
 27109  018E72  0100               	movlb	0	; () banked
 27110  018E74  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27111  018E76  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27112  018E78  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27113  018E7A  B4D8               	btfsc	status,2,c
 27114  018E7C  0012               	return	
 27115                           
 27116                           ; BSR set to: 0
 27117                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 27118  018E7E  D801               	call	u892_28
 27119  018E80  0012               	return	
 27120  018E82                     u892_28:
 27121  018E82  0005               	push	
 27122  018E84  6EFA               	movwf	pclath,c
 27123  018E86  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27124  018E88  6EFD               	movwf	tosl,c
 27125  018E8A  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27126  018E8C  6EFE               	movwf	tosh,c
 27127  018E8E  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27128  018E90  6EFF               	movwf	tosu,c
 27129  018E92  50FA               	movf	pclath,w,c
 27130  018E94  0012               	return		;indir
 27131  018E96                     __end_of_TMR3_CallBack:
 27132                           	opt callstack 0
 27133                           
 27134 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 27135 ;; Defined at:
 27136 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 27137 ;; Parameters:    Size  Location     Type
 27138 ;;		None
 27139 ;; Auto vars:     Size  Location     Type
 27140 ;;		None
 27141 ;; Return value:  Size  Location     Type
 27142 ;;                  1  [STACK] void 
 27143 ;; Registers used:
 27144 ;;		None
 27145 ;; Tracked objects:
 27146 ;;		On entry : 3F/0
 27147 ;;		On exit  : 0/0
 27148 ;;		Unchanged: 0/0
 27149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27154 ;;Total ram usage:        0 bytes
 27155 ;; Hardware stack levels used:    1
 27156 ;; Hardware stack levels required when called:    3
 27157 ;; This function calls:
 27158 ;;		Nothing
 27159 ;; This function is called by:
 27160 ;;		_TMR3_Initialize
 27161 ;;		_TMR3_CallBack
 27162 ;; This function uses a reentrant model
 27163 ;;
 27164                           
 27165                           	psect	text136
 27166  0191AC                     __ptext136:
 27167                           	opt callstack 0
 27168  0191AC                     _TMR3_DefaultInterruptHandler:
 27169                           	opt callstack 12
 27170                           
 27171                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27172                           
 27173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27174                           ;incstack = 0
 27175  0191AC  0012               	return		;funcret
 27176  0191AE                     __end_of_TMR3_DefaultInterruptHandler:
 27177                           	opt callstack 0
 27178                           
 27179 ;; *************** function _calc_bsoc *****************
 27180 ;; Defined at:
 27181 ;;		line 7 in file "bsoc.c"
 27182 ;; Parameters:    Size  Location     Type
 27183 ;;		None
 27184 ;; Auto vars:     Size  Location     Type
 27185 ;;		None
 27186 ;; Return value:  Size  Location     Type
 27187 ;;                  1  [STACK] void 
 27188 ;; Registers used:
 27189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27190 ;; Tracked objects:
 27191 ;;		On entry : 3F/0
 27192 ;;		On exit  : 3F/2
 27193 ;;		Unchanged: 0/0
 27194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27199 ;;Total ram usage:        0 bytes
 27200 ;; Hardware stack levels used:    1
 27201 ;; Hardware stack levels required when called:    7
 27202 ;; This function calls:
 27203 ;;		_calc_model_data
 27204 ;; This function is called by:
 27205 ;;		_init_bsoc
 27206 ;;		_TMR3_CallBack
 27207 ;; This function uses a reentrant model
 27208 ;;
 27209                           
 27210                           	psect	text137
 27211  019008                     __ptext137:
 27212                           	opt callstack 0
 27213  019008                     _calc_bsoc:
 27214                           	opt callstack 8
 27215                           
 27216                           ;bsoc.c: 9:  if (!C.update)
 27217                           
 27218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27219                           ;incstack = 0
 27220  019008  0101               	movlb	1	; () banked
 27221  01900A  518C               	movf	(_C+140)& (0+255),w,b	;volatile
 27222  01900C  B4D8               	btfsc	status,2,c
 27223                           
 27224                           ; BSR set to: 1
 27225                           ;bsoc.c: 10:   calc_model_data();
 27226  01900E  ECE1  F0A5         	call	_calc_model_data	;wreg free
 27227                           
 27228                           ;bsoc.c: 12:  V.lowint_count++;
 27229  019012  0E01               	movlw	1
 27230  019014  0102               	movlb	2	; () banked
 27231  019016  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 27232  019018  0E00               	movlw	0
 27233  01901A  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 27234  01901C  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 27235  01901E  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 27236                           
 27237                           ; BSR set to: 2
 27238                           ; _calc_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27239  019020  0012               	return		;funcret
 27240  019022                     __end_of_calc_bsoc:
 27241                           	opt callstack 0
 27242                           
 27243 ;; *************** function _INT0_ISR *****************
 27244 ;; Defined at:
 27245 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 27246 ;; Parameters:    Size  Location     Type
 27247 ;;		None
 27248 ;; Auto vars:     Size  Location     Type
 27249 ;;		None
 27250 ;; Return value:  Size  Location     Type
 27251 ;;                  1    wreg      void 
 27252 ;; Registers used:
 27253 ;;		wreg, status,2, status,0, pclath, tosl
 27254 ;; Tracked objects:
 27255 ;;		On entry : 0/0
 27256 ;;		On exit  : 0/0
 27257 ;;		Unchanged: 0/0
 27258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27263 ;;Total ram usage:        0 bytes
 27264 ;; Hardware stack levels used:    1
 27265 ;; Hardware stack levels required when called:    2
 27266 ;; This function calls:
 27267 ;;		_INT0_CallBack
 27268 ;; This function is called by:
 27269 ;;		Interrupt level 2
 27270 ;; This function uses a non-reentrant model
 27271 ;;
 27272                           
 27273                           	psect	text138
 27274  019114                     __ptext138:
 27275                           	opt callstack 0
 27276  019114                     _INT0_ISR:
 27277                           	opt callstack 8
 27278                           
 27279                           ; BSR set to: 2
 27280                           ;incstack = 0
 27281  019114  EE14  F016         	lfsr	1,___inthi_sp
 27282                           
 27283                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 27284  019118  0139               	movlb	57	; () banked
 27285  01911A  91A1               	bcf	161,0,b	;volatile
 27286                           
 27287                           ; BSR set to: 57
 27288                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 27289  01911C  EC6E  F0C7         	call	_INT0_CallBack	;wreg free
 27290  019120  0011               	retfie		f
 27291  019122                     __end_of_INT0_ISR:
 27292                           	opt callstack 0
 27293                           
 27294 ;; *************** function _INT0_CallBack *****************
 27295 ;; Defined at:
 27296 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 27297 ;; Parameters:    Size  Location     Type
 27298 ;;		None
 27299 ;; Auto vars:     Size  Location     Type
 27300 ;;		None
 27301 ;; Return value:  Size  Location     Type
 27302 ;;                  1  [STACK] void 
 27303 ;; Registers used:
 27304 ;;		wreg, status,2, status,0, pclath, tosl
 27305 ;; Tracked objects:
 27306 ;;		On entry : 3F/39
 27307 ;;		On exit  : 0/0
 27308 ;;		Unchanged: 0/0
 27309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27314 ;;Total ram usage:        0 bytes
 27315 ;; Hardware stack levels used:    1
 27316 ;; Hardware stack levels required when called:    1
 27317 ;; This function calls:
 27318 ;;		Absolute function
 27319 ;;		_INT0_DefaultInterruptHandler
 27320 ;; This function is called by:
 27321 ;;		_INT0_ISR
 27322 ;; This function uses a reentrant model
 27323 ;;
 27324                           
 27325                           	psect	text139
 27326  018EDC                     __ptext139:
 27327                           	opt callstack 0
 27328  018EDC                     _INT0_CallBack:
 27329                           	opt callstack 8
 27330                           
 27331                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 27332                           
 27333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27334                           ;incstack = 0
 27335  018EDC  5007               	movf	_INT0_InterruptHandler^0,w,c
 27336  018EDE  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 27337  018EE0  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 27338  018EE2  B4D8               	btfsc	status,2,c
 27339  018EE4  0012               	return	
 27340                           
 27341                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 27342  018EE6  D801               	call	u401_48
 27343  018EE8  0012               	return	
 27344  018EEA                     u401_48:
 27345  018EEA  0005               	push	
 27346  018EEC  6EFA               	movwf	pclath,c
 27347  018EEE  5007               	movf	_INT0_InterruptHandler^0,w,c
 27348  018EF0  6EFD               	movwf	tosl,c
 27349  018EF2  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 27350  018EF4  6EFE               	movwf	tosh,c
 27351  018EF6  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 27352  018EF8  6EFF               	movwf	tosu,c
 27353  018EFA  50FA               	movf	pclath,w,c
 27354  018EFC  0012               	return		;indir
 27355  018EFE                     __end_of_INT0_CallBack:
 27356                           	opt callstack 0
 27357                           
 27358 ;; *************** function _INT0_DefaultInterruptHandler *****************
 27359 ;; Defined at:
 27360 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 27361 ;; Parameters:    Size  Location     Type
 27362 ;;		None
 27363 ;; Auto vars:     Size  Location     Type
 27364 ;;		None
 27365 ;; Return value:  Size  Location     Type
 27366 ;;                  1  [STACK] void 
 27367 ;; Registers used:
 27368 ;;		None
 27369 ;; Tracked objects:
 27370 ;;		On entry : 0/39
 27371 ;;		On exit  : 0/0
 27372 ;;		Unchanged: 0/0
 27373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27378 ;;Total ram usage:        0 bytes
 27379 ;; Hardware stack levels used:    1
 27380 ;; This function calls:
 27381 ;;		Nothing
 27382 ;; This function is called by:
 27383 ;;		_EXT_INT_Initialize
 27384 ;;		_INT0_CallBack
 27385 ;; This function uses a reentrant model
 27386 ;;
 27387                           
 27388                           	psect	text140
 27389  0191AE                     __ptext140:
 27390                           	opt callstack 0
 27391  0191AE                     _INT0_DefaultInterruptHandler:
 27392                           	opt callstack 8
 27393                           
 27394                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27395                           
 27396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27397                           ;incstack = 0
 27398  0191AE  0012               	return		;funcret
 27399  0191B0                     __end_of_INT0_DefaultInterruptHandler:
 27400                           	opt callstack 0
 27401                           
 27402 ;; *************** function _Default_ISR *****************
 27403 ;; Defined at:
 27404 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 27405 ;; Parameters:    Size  Location     Type
 27406 ;;		None
 27407 ;; Auto vars:     Size  Location     Type
 27408 ;;		None
 27409 ;; Return value:  Size  Location     Type
 27410 ;;                  1    wreg      void 
 27411 ;; Registers used:
 27412 ;;		None
 27413 ;; Tracked objects:
 27414 ;;		On entry : 0/0
 27415 ;;		On exit  : 0/0
 27416 ;;		Unchanged: 0/0
 27417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27422 ;;Total ram usage:        0 bytes
 27423 ;; Hardware stack levels used:    1
 27424 ;; This function calls:
 27425 ;;		Nothing
 27426 ;; This function is called by:
 27427 ;;		Interrupt level 2
 27428 ;; This function uses a non-reentrant model
 27429 ;;
 27430                           
 27431                           	psect	text141
 27432  0191A4                     __ptext141:
 27433                           	opt callstack 0
 27434  0191A4                     _Default_ISR:
 27435                           	opt callstack 10
 27436                           
 27437                           ;incstack = 0
 27438  0191A4  EE14  F016         	lfsr	1,___inthi_sp
 27439  0191A8  0011               	retfie		f
 27440  0191AA                     __end_of_Default_ISR:
 27441                           	opt callstack 0
 27442                           
 27443 ;; *************** function _ADCC_ISR *****************
 27444 ;; Defined at:
 27445 ;;		line 314 in file "mcc_generated_files/adcc.c"
 27446 ;; Parameters:    Size  Location     Type
 27447 ;;		None
 27448 ;; Auto vars:     Size  Location     Type
 27449 ;;		None
 27450 ;; Return value:  Size  Location     Type
 27451 ;;                  1    wreg      void 
 27452 ;; Registers used:
 27453 ;;		wreg, status,2, status,0, pclath, tosl
 27454 ;; Tracked objects:
 27455 ;;		On entry : 0/0
 27456 ;;		On exit  : 0/0
 27457 ;;		Unchanged: 0/0
 27458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27463 ;;Total ram usage:        0 bytes
 27464 ;; Hardware stack levels used:    1
 27465 ;; Hardware stack levels required when called:    1
 27466 ;; This function calls:
 27467 ;;		Absolute function
 27468 ;;		_ADCC_DefaultInterruptHandler
 27469 ;;		_adc_int_handler
 27470 ;; This function is called by:
 27471 ;;		Interrupt level 2
 27472 ;; This function uses a non-reentrant model
 27473 ;;
 27474                           
 27475                           	psect	text142
 27476  018A10                     __ptext142:
 27477                           	opt callstack 0
 27478  018A10                     _ADCC_ISR:
 27479                           	opt callstack 9
 27480                           
 27481                           ;incstack = 0
 27482  018A10  EE14  F016         	lfsr	1,___inthi_sp
 27483                           
 27484                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 27485  018A14  0139               	movlb	57	; () banked
 27486  018A16  95A1               	bcf	161,2,b	;volatile
 27487                           
 27488                           ; BSR set to: 57
 27489                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 27490  018A18  0100               	movlb	0	; () banked
 27491  018A1A  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27492  018A1C  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27493  018A1E  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27494  018A20  B4D8               	btfsc	status,2,c
 27495  018A22  0011               	retfie		f
 27496                           
 27497                           ; BSR set to: 0
 27498                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 27499  018A24  D801               	call	i2u894_48
 27500  018A26  0011               	retfie		f
 27501  018A28                     i2u894_48:
 27502  018A28  0005               	push	
 27503  018A2A  6EFA               	movwf	pclath,c
 27504  018A2C  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27505  018A2E  6EFD               	movwf	tosl,c
 27506  018A30  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27507  018A32  6EFE               	movwf	tosh,c
 27508  018A34  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27509  018A36  6EFF               	movwf	tosu,c
 27510  018A38  50FA               	movf	pclath,w,c
 27511  018A3A  0012               	return		;indir
 27512  018A3C                     __end_of_ADCC_ISR:
 27513                           	opt callstack 0
 27514                           
 27515 ;; *************** function _adc_int_t_handler *****************
 27516 ;; Defined at:
 27517 ;;		line 128 in file "daq.c"
 27518 ;; Parameters:    Size  Location     Type
 27519 ;;		None
 27520 ;; Auto vars:     Size  Location     Type
 27521 ;;		None
 27522 ;; Return value:  Size  Location     Type
 27523 ;;                  1  [STACK] void 
 27524 ;; Registers used:
 27525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 27526 ;; Tracked objects:
 27527 ;;		On entry : 3F/0
 27528 ;;		On exit  : 1/0
 27529 ;;		Unchanged: 0/0
 27530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27535 ;;Total ram usage:        0 bytes
 27536 ;; Hardware stack levels used:    1
 27537 ;; Hardware stack levels required when called:    1
 27538 ;; This function calls:
 27539 ;;		_ADCC_DischargeSampleCapacitor
 27540 ;;		_ADCC_StartConversion
 27541 ;; This function is called by:
 27542 ;;		_start_adc_scan
 27543 ;;		_ADCC_ThresholdISR
 27544 ;; This function uses a reentrant model
 27545 ;;
 27546                           
 27547                           	psect	text143
 27548  017E92                     __ptext143:
 27549                           	opt callstack 0
 27550  017E92                     _adc_int_t_handler:
 27551                           	opt callstack 8
 27552                           
 27553                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 27554                           
 27555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27556                           ;incstack = 0
 27557  017E92  013E               	movlb	62	; () banked
 27558  017E94  51E6               	movf	230,w,b	;volatile
 27559  017E96  006F FB9C  F025    	movff	16103,btemp	;volatile
 27560  017E9C  6A26               	clrf	(btemp+1)^0,c
 27561  017E9E  0060  F094  F026   	movff	btemp,btemp+1
 27562  017EA4  6A25               	clrf	btemp^0,c
 27563  017EA6  2625               	addwf	btemp^0,f,c
 27564  017EA8  0E00               	movlw	0
 27565  017EAA  2226               	addwfc	(btemp+1)^0,f,c
 27566  017EAC  0100               	movlb	0	; () banked
 27567  017EAE  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27568  017EB0  0D02               	mullw	2
 27569  017EB2  50F3               	movf	243,w,c
 27570  017EB4  0FC3               	addlw	low _R
 27571  017EB6  6ED9               	movwf	fsr2l,c
 27572  017EB8  6ADA               	clrf	fsr2h,c
 27573  017EBA  0060  F097  FFDE   	movff	btemp,postinc2
 27574  017EC0  0060  F09B  FFDD   	movff	btemp+1,postdec2
 27575  017EC6                     l9539:
 27576                           
 27577                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 27578  017EC6  0100               	movlb	0	; () banked
 27579  017EC8  2BE7               	incf	(_R+36)& (0+255),f,b	;volatile
 27580  017ECA  0E0D               	movlw	13
 27581  017ECC  65E7               	cpfsgt	(_R+36)& (0+255),b	;volatile
 27582  017ECE  D003               	goto	l9545
 27583                           
 27584                           ; BSR set to: 0
 27585                           ;daq.c: 136:    R.done = 1;
 27586  017ED0  0E01               	movlw	1
 27587  017ED2  6FEA               	movwf	(_R+39)& (0+255),b	;volatile
 27588  017ED4  0012               	return	
 27589  017ED6                     l9545:
 27590                           
 27591                           ; BSR set to: 0
 27592                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 27593  017ED6  0060  F39C  F030   	movff	_R+36,btemp+11	;volatile
 27594  017EDC  EE20  F0E8         	lfsr	2,_R+37	;volatile
 27595  017EE0  006F FF78  F02D    	movff	postinc2,btemp+8
 27596  017EE6  006F FF74  F02E    	movff	postdec2,btemp+9
 27597  017EEC  2A30               	incf	(btemp+11)^0,f,c
 27598  017EEE  D003               	goto	u889_44
 27599  017EF0                     u889_45:
 27600  017EF0  90D8               	bcf	status,0,c
 27601  017EF2  322E               	rrcf	(btemp+9)^0,f,c
 27602  017EF4  322D               	rrcf	(btemp+8)^0,f,c
 27603  017EF6                     u889_44:
 27604  017EF6  2E30               	decfsz	(btemp+11)^0,f,c
 27605  017EF8  D7FB               	goto	u889_45
 27606  017EFA  A02D               	btfss	(btemp+8)^0,0,c
 27607  017EFC  D7E4               	goto	l9539
 27608                           
 27609                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 27610  017EFE  ECAF  F0C8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 27611                           
 27612                           ; BSR set to: 62
 27613                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 27614  017F02  0100               	movlb	0	; () banked
 27615  017F04  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27616  017F06  0B0F               	andlw	15
 27617  017F08  6EE6               	movwf	postinc1,c
 27618  017F0A  EC62  F0C8         	call	_ADCC_StartConversion	;wreg free
 27619                           
 27620                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27621  017F0E  0012               	return		;funcret
 27622  017F10                     __end_of_adc_int_t_handler:
 27623                           	opt callstack 0
 27624                           
 27625 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 27626 ;; Defined at:
 27627 ;;		line 339 in file "mcc_generated_files/adcc.c"
 27628 ;; Parameters:    Size  Location     Type
 27629 ;;		None
 27630 ;; Auto vars:     Size  Location     Type
 27631 ;;		None
 27632 ;; Return value:  Size  Location     Type
 27633 ;;                  1  [STACK] void 
 27634 ;; Registers used:
 27635 ;;		None
 27636 ;; Tracked objects:
 27637 ;;		On entry : 3F/0
 27638 ;;		On exit  : 0/0
 27639 ;;		Unchanged: 0/0
 27640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27645 ;;Total ram usage:        0 bytes
 27646 ;; Hardware stack levels used:    1
 27647 ;; This function calls:
 27648 ;;		Nothing
 27649 ;; This function is called by:
 27650 ;;		_ADCC_Initialize
 27651 ;;		_ADCC_ISR
 27652 ;;		_ADCC_ThresholdISR
 27653 ;; This function uses a reentrant model
 27654 ;;
 27655                           
 27656                           	psect	text144
 27657  0191B0                     __ptext144:
 27658                           	opt callstack 0
 27659  0191B0                     _ADCC_DefaultInterruptHandler:
 27660                           	opt callstack 9
 27661                           
 27662                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27663                           
 27664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27665                           ;incstack = 0
 27666  0191B0  0012               	return		;funcret
 27667  0191B2                     __end_of_ADCC_DefaultInterruptHandler:
 27668                           	opt callstack 0
 27669                           
 27670 ;; *************** function _adc_int_handler *****************
 27671 ;; Defined at:
 27672 ;;		line 118 in file "daq.c"
 27673 ;; Parameters:    Size  Location     Type
 27674 ;;		None
 27675 ;; Auto vars:     Size  Location     Type
 27676 ;;		None
 27677 ;; Return value:  Size  Location     Type
 27678 ;;                  1  [STACK] void 
 27679 ;; Registers used:
 27680 ;;		None
 27681 ;; Tracked objects:
 27682 ;;		On entry : 3F/0
 27683 ;;		On exit  : 0/0
 27684 ;;		Unchanged: 0/0
 27685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27690 ;;Total ram usage:        0 bytes
 27691 ;; Hardware stack levels used:    1
 27692 ;; This function calls:
 27693 ;;		Nothing
 27694 ;; This function is called by:
 27695 ;;		_start_adc_scan
 27696 ;;		_ADCC_ISR
 27697 ;; This function uses a reentrant model
 27698 ;;
 27699                           
 27700                           	psect	text145
 27701  0191B2                     __ptext145:
 27702                           	opt callstack 0
 27703  0191B2                     _adc_int_handler:
 27704                           	opt callstack 9
 27705                           
 27706                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27707                           
 27708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27709                           ;incstack = 0
 27710  0191B2  0012               	return		;funcret
 27711  0191B4                     __end_of_adc_int_handler:
 27712                           	opt callstack 0
 27713                           
 27714 ;; *************** function _ADCC_ThresholdISR *****************
 27715 ;; Defined at:
 27716 ;;		line 327 in file "mcc_generated_files/adcc.c"
 27717 ;; Parameters:    Size  Location     Type
 27718 ;;		None
 27719 ;; Auto vars:     Size  Location     Type
 27720 ;;		None
 27721 ;; Return value:  Size  Location     Type
 27722 ;;                  1    wreg      void 
 27723 ;; Registers used:
 27724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 27725 ;; Tracked objects:
 27726 ;;		On entry : 0/0
 27727 ;;		On exit  : 0/0
 27728 ;;		Unchanged: 0/0
 27729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27732 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27733 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27734 ;;Total ram usage:        5 bytes
 27735 ;; Hardware stack levels used:    1
 27736 ;; Hardware stack levels required when called:    2
 27737 ;; This function calls:
 27738 ;;		Absolute function
 27739 ;;		_ADCC_DefaultInterruptHandler
 27740 ;;		_adc_int_t_handler
 27741 ;; This function is called by:
 27742 ;;		Interrupt level 2
 27743 ;; This function uses a non-reentrant model
 27744 ;;
 27745                           
 27746                           	psect	text146
 27747  017FE4                     __ptext146:
 27748                           	opt callstack 0
 27749  017FE4                     _ADCC_ThresholdISR:
 27750                           	opt callstack 8
 27751                           
 27752                           ;incstack = 0
 27753  017FE4  0060  F094  F045   	movff	btemp,??_ADCC_ThresholdISR
 27754  017FEA  0060  F098  F046   	movff	btemp+1,??_ADCC_ThresholdISR+1
 27755  017FF0  0060  F0B4  F047   	movff	btemp+8,??_ADCC_ThresholdISR+2
 27756  017FF6  0060  F0B8  F048   	movff	btemp+9,??_ADCC_ThresholdISR+3
 27757  017FFC  0060  F0C0  F049   	movff	btemp+11,??_ADCC_ThresholdISR+4
 27758  018002  EE14  F016         	lfsr	1,___inthi_sp
 27759                           
 27760                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 27761  018006  0139               	movlb	57	; () banked
 27762  018008  97A1               	bcf	161,3,b	;volatile
 27763                           
 27764                           ; BSR set to: 57
 27765                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 27766  01800A  0100               	movlb	0	; () banked
 27767  01800C  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 27768  01800E  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 27769  018010  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 27770  018012  B4D8               	btfsc	status,2,c
 27771  018014  D00C               	goto	i2u896_49
 27772                           
 27773                           ; BSR set to: 0
 27774                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 27775  018016  D801               	call	i2u896_48
 27776  018018  D00A               	goto	i2u896_49
 27777  01801A                     i2u896_48:
 27778  01801A  0005               	push	
 27779  01801C  6EFA               	movwf	pclath,c
 27780  01801E  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 27781  018020  6EFD               	movwf	tosl,c
 27782  018022  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 27783  018024  6EFE               	movwf	tosh,c
 27784  018026  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 27785  018028  6EFF               	movwf	tosu,c
 27786  01802A  50FA               	movf	pclath,w,c
 27787  01802C  0012               	return		;indir
 27788  01802E                     i2u896_49:
 27789  01802E  0060  F124  F030   	movff	??_ADCC_ThresholdISR+4,btemp+11
 27790  018034  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 27791  01803A  0060  F11C  F02D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 27792  018040  0060  F118  F026   	movff	??_ADCC_ThresholdISR+1,btemp+1
 27793  018046  0060  F114  F025   	movff	??_ADCC_ThresholdISR,btemp
 27794  01804C  0011               	retfie		f
 27795  01804E                     __end_of_ADCC_ThresholdISR:
 27796                           	opt callstack 0
 27797                           
 27798 ;; *************** function _UART1_tx_vect_isr *****************
 27799 ;; Defined at:
 27800 ;;		line 199 in file "mcc_generated_files/uart1.c"
 27801 ;; Parameters:    Size  Location     Type
 27802 ;;		None
 27803 ;; Auto vars:     Size  Location     Type
 27804 ;;		None
 27805 ;; Return value:  Size  Location     Type
 27806 ;;                  1    wreg      void 
 27807 ;; Registers used:
 27808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27809 ;; Tracked objects:
 27810 ;;		On entry : 0/0
 27811 ;;		On exit  : 0/0
 27812 ;;		Unchanged: 0/0
 27813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27818 ;;Total ram usage:        0 bytes
 27819 ;; Hardware stack levels used:    1
 27820 ;; Hardware stack levels required when called:    1
 27821 ;; This function calls:
 27822 ;;		Absolute function
 27823 ;;		_UART1_Transmit_ISR
 27824 ;; This function is called by:
 27825 ;;		Interrupt level 2
 27826 ;; This function uses a non-reentrant model
 27827 ;;
 27828                           
 27829                           	psect	text147
 27830  018D68                     __ptext147:
 27831                           	opt callstack 0
 27832  018D68                     _UART1_tx_vect_isr:
 27833                           	opt callstack 9
 27834                           
 27835                           ;incstack = 0
 27836  018D68  EE14  F016         	lfsr	1,___inthi_sp
 27837                           
 27838                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 27839  018D6C  0100               	movlb	0	; () banked
 27840  018D6E  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 27841  018D70  11B9               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 27842  018D72  11BA               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 27843  018D74  B4D8               	btfsc	status,2,c
 27844  018D76  0011               	retfie		f
 27845                           
 27846                           ; BSR set to: 0
 27847                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 27848  018D78  D801               	call	i2u898_48
 27849  018D7A  0011               	retfie		f
 27850  018D7C                     i2u898_48:
 27851  018D7C  0005               	push	
 27852  018D7E  6EFA               	movwf	pclath,c
 27853  018D80  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 27854  018D82  6EFD               	movwf	tosl,c
 27855  018D84  51B9               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 27856  018D86  6EFE               	movwf	tosh,c
 27857  018D88  51BA               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 27858  018D8A  6EFF               	movwf	tosu,c
 27859  018D8C  50FA               	movf	pclath,w,c
 27860  018D8E  0012               	return		;indir
 27861  018D90                     __end_of_UART1_tx_vect_isr:
 27862                           	opt callstack 0
 27863                           
 27864 ;; *************** function _UART1_Transmit_ISR *****************
 27865 ;; Defined at:
 27866 ;;		line 213 in file "mcc_generated_files/uart1.c"
 27867 ;; Parameters:    Size  Location     Type
 27868 ;;		None
 27869 ;; Auto vars:     Size  Location     Type
 27870 ;;		None
 27871 ;; Return value:  Size  Location     Type
 27872 ;;                  1  [STACK] void 
 27873 ;; Registers used:
 27874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27875 ;; Tracked objects:
 27876 ;;		On entry : 3F/0
 27877 ;;		On exit  : 3B/39
 27878 ;;		Unchanged: 0/0
 27879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27884 ;;Total ram usage:        0 bytes
 27885 ;; Hardware stack levels used:    1
 27886 ;; This function calls:
 27887 ;;		Nothing
 27888 ;; This function is called by:
 27889 ;;		_UART1_Initialize
 27890 ;;		_UART1_tx_vect_isr
 27891 ;; This function uses a reentrant model
 27892 ;;
 27893                           
 27894                           	psect	text148
 27895  018A3C                     __ptext148:
 27896                           	opt callstack 0
 27897  018A3C                     _UART1_Transmit_ISR:
 27898                           	opt callstack 9
 27899                           
 27900                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 27901                           
 27902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27903                           ;incstack = 0
 27904  018A3C  0E40               	movlw	64
 27905  018A3E  6022               	cpfslt	_uart1TxBufferRemaining^0,c
 27906  018A40  D010               	goto	l583
 27907                           
 27908                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 27909  018A42  0E94               	movlw	low _uart1TxBuffer
 27910  018A44  2423               	addwf	_uart1TxTail^0,w,c	;volatile
 27911  018A46  6ED9               	movwf	fsr2l,c
 27912  018A48  6ADA               	clrf	fsr2h,c
 27913  018A4A  0E03               	movlw	high _uart1TxBuffer
 27914  018A4C  22DA               	addwfc	fsr2h,f,c
 27915  018A4E  50DF               	movf	indf2,w,c
 27916  018A50  013D               	movlb	61	; () banked
 27917  018A52  6FEA               	movwf	234,b	;volatile
 27918                           
 27919                           ; BSR set to: 61
 27920  018A54  2A23               	incf	_uart1TxTail^0,f,c	;volatile
 27921                           
 27922                           ; BSR set to: 61
 27923                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 27924  018A56  0E3F               	movlw	63
 27925  018A58  6423               	cpfsgt	_uart1TxTail^0,c
 27926  018A5A  D001               	goto	l9271
 27927                           
 27928                           ; BSR set to: 61
 27929                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 27930  018A5C  6A23               	clrf	_uart1TxTail^0,c	;volatile
 27931  018A5E                     l9271:
 27932                           
 27933                           ; BSR set to: 61
 27934                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 27935  018A5E  2A22               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 27936                           
 27937                           ;mcc_generated_files/uart1.c: 222:  } else {
 27938  018A60  0012               	return	
 27939  018A62                     l583:
 27940                           
 27941                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 27942  018A62  0139               	movlb	57	; () banked
 27943  018A64  9993               	bcf	147,4,b	;volatile
 27944                           
 27945                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27946  018A66  0012               	return		;funcret
 27947  018A68                     __end_of_UART1_Transmit_ISR:
 27948                           	opt callstack 0
 27949                           
 27950 ;; *************** function _UART1_rx_vect_isr *****************
 27951 ;; Defined at:
 27952 ;;		line 206 in file "mcc_generated_files/uart1.c"
 27953 ;; Parameters:    Size  Location     Type
 27954 ;;		None
 27955 ;; Auto vars:     Size  Location     Type
 27956 ;;		None
 27957 ;; Return value:  Size  Location     Type
 27958 ;;                  1    wreg      void 
 27959 ;; Registers used:
 27960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27961 ;; Tracked objects:
 27962 ;;		On entry : 0/0
 27963 ;;		On exit  : 0/0
 27964 ;;		Unchanged: 0/0
 27965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27970 ;;Total ram usage:        0 bytes
 27971 ;; Hardware stack levels used:    1
 27972 ;; Hardware stack levels required when called:    1
 27973 ;; This function calls:
 27974 ;;		Absolute function
 27975 ;;		_UART1_Receive_ISR
 27976 ;; This function is called by:
 27977 ;;		Interrupt level 2
 27978 ;; This function uses a non-reentrant model
 27979 ;;
 27980                           
 27981                           	psect	text149
 27982  018D90                     __ptext149:
 27983                           	opt callstack 0
 27984  018D90                     _UART1_rx_vect_isr:
 27985                           	opt callstack 9
 27986                           
 27987                           ;incstack = 0
 27988  018D90  EE14  F016         	lfsr	1,___inthi_sp
 27989                           
 27990                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 27991  018D94  0100               	movlb	0	; () banked
 27992  018D96  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 27993  018D98  11BC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 27994  018D9A  11BD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 27995  018D9C  B4D8               	btfsc	status,2,c
 27996  018D9E  0011               	retfie		f
 27997                           
 27998                           ; BSR set to: 0
 27999                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 28000  018DA0  D801               	call	i2u900_48
 28001  018DA2  0011               	retfie		f
 28002  018DA4                     i2u900_48:
 28003  018DA4  0005               	push	
 28004  018DA6  6EFA               	movwf	pclath,c
 28005  018DA8  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28006  018DAA  6EFD               	movwf	tosl,c
 28007  018DAC  51BC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28008  018DAE  6EFE               	movwf	tosh,c
 28009  018DB0  51BD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28010  018DB2  6EFF               	movwf	tosu,c
 28011  018DB4  50FA               	movf	pclath,w,c
 28012  018DB6  0012               	return		;indir
 28013  018DB8                     __end_of_UART1_rx_vect_isr:
 28014                           	opt callstack 0
 28015                           
 28016 ;; *************** function _UART1_Receive_ISR *****************
 28017 ;; Defined at:
 28018 ;;		line 229 in file "mcc_generated_files/uart1.c"
 28019 ;; Parameters:    Size  Location     Type
 28020 ;;		None
 28021 ;; Auto vars:     Size  Location     Type
 28022 ;;		None
 28023 ;; Return value:  Size  Location     Type
 28024 ;;                  1  [STACK] void 
 28025 ;; Registers used:
 28026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28027 ;; Tracked objects:
 28028 ;;		On entry : 3F/0
 28029 ;;		On exit  : 0/0
 28030 ;;		Unchanged: 0/0
 28031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28036 ;;Total ram usage:        0 bytes
 28037 ;; Hardware stack levels used:    1
 28038 ;; This function calls:
 28039 ;;		Nothing
 28040 ;; This function is called by:
 28041 ;;		_UART1_Initialize
 28042 ;;		_UART1_rx_vect_isr
 28043 ;; This function uses a reentrant model
 28044 ;;
 28045                           
 28046                           	psect	text150
 28047  018F96                     __ptext150:
 28048                           	opt callstack 0
 28049  018F96                     _UART1_Receive_ISR:
 28050                           	opt callstack 9
 28051                           
 28052                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 28053                           
 28054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28055                           ;incstack = 0
 28056  018F96  0E00               	movlw	low _uart1RxBuffer
 28057  018F98  2421               	addwf	_uart1RxHead^0,w,c	;volatile
 28058  018F9A  6ED9               	movwf	fsr2l,c
 28059  018F9C  6ADA               	clrf	fsr2h,c
 28060  018F9E  0E05               	movlw	high _uart1RxBuffer
 28061  018FA0  22DA               	addwfc	fsr2h,f,c
 28062  018FA2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 28063  018FA8  2A21               	incf	_uart1RxHead^0,f,c	;volatile
 28064                           
 28065                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 28066  018FAA  2821               	incf	_uart1RxHead^0,w,c
 28067  018FAC  B4D8               	btfsc	status,2,c
 28068                           
 28069                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 28070  018FAE  6A21               	clrf	_uart1RxHead^0,c	;volatile
 28071                           
 28072                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 28073  018FB0  2A1F               	incf	_uart1RxCount^0,f,c	;volatile
 28074                           
 28075                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28076  018FB2  0012               	return		;funcret
 28077  018FB4                     __end_of_UART1_Receive_ISR:
 28078                           	opt callstack 0
 28079                           
 28080 ;; *************** function _UART2_tx_vect_isr *****************
 28081 ;; Defined at:
 28082 ;;		line 195 in file "mcc_generated_files/uart2.c"
 28083 ;; Parameters:    Size  Location     Type
 28084 ;;		None
 28085 ;; Auto vars:     Size  Location     Type
 28086 ;;		None
 28087 ;; Return value:  Size  Location     Type
 28088 ;;                  1    wreg      void 
 28089 ;; Registers used:
 28090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28091 ;; Tracked objects:
 28092 ;;		On entry : 0/0
 28093 ;;		On exit  : 0/0
 28094 ;;		Unchanged: 0/0
 28095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28100 ;;Total ram usage:        0 bytes
 28101 ;; Hardware stack levels used:    1
 28102 ;; Hardware stack levels required when called:    1
 28103 ;; This function calls:
 28104 ;;		Absolute function
 28105 ;;		_UART2_Transmit_ISR
 28106 ;; This function is called by:
 28107 ;;		Interrupt level 2
 28108 ;; This function uses a non-reentrant model
 28109 ;;
 28110                           
 28111                           	psect	text151
 28112  018DB8                     __ptext151:
 28113                           	opt callstack 0
 28114  018DB8                     _UART2_tx_vect_isr:
 28115                           	opt callstack 9
 28116                           
 28117                           ;incstack = 0
 28118  018DB8  EE14  F016         	lfsr	1,___inthi_sp
 28119                           
 28120                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 28121  018DBC  0100               	movlb	0	; () banked
 28122  018DBE  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28123  018DC0  11BF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28124  018DC2  11C0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28125  018DC4  B4D8               	btfsc	status,2,c
 28126  018DC6  0011               	retfie		f
 28127                           
 28128                           ; BSR set to: 0
 28129                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 28130  018DC8  D801               	call	i2u902_48
 28131  018DCA  0011               	retfie		f
 28132  018DCC                     i2u902_48:
 28133  018DCC  0005               	push	
 28134  018DCE  6EFA               	movwf	pclath,c
 28135  018DD0  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28136  018DD2  6EFD               	movwf	tosl,c
 28137  018DD4  51BF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28138  018DD6  6EFE               	movwf	tosh,c
 28139  018DD8  51C0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28140  018DDA  6EFF               	movwf	tosu,c
 28141  018DDC  50FA               	movf	pclath,w,c
 28142  018DDE  0012               	return		;indir
 28143  018DE0                     __end_of_UART2_tx_vect_isr:
 28144                           	opt callstack 0
 28145                           
 28146 ;; *************** function _UART2_Transmit_ISR *****************
 28147 ;; Defined at:
 28148 ;;		line 213 in file "mcc_generated_files/uart2.c"
 28149 ;; Parameters:    Size  Location     Type
 28150 ;;		None
 28151 ;; Auto vars:     Size  Location     Type
 28152 ;;		None
 28153 ;; Return value:  Size  Location     Type
 28154 ;;                  1  [STACK] void 
 28155 ;; Registers used:
 28156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28157 ;; Tracked objects:
 28158 ;;		On entry : 3F/0
 28159 ;;		On exit  : 3B/39
 28160 ;;		Unchanged: 0/0
 28161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28166 ;;Total ram usage:        0 bytes
 28167 ;; Hardware stack levels used:    1
 28168 ;; This function calls:
 28169 ;;		Nothing
 28170 ;; This function is called by:
 28171 ;;		_UART2_Initialize
 28172 ;;		_UART2_tx_vect_isr
 28173 ;; This function uses a reentrant model
 28174 ;;
 28175                           
 28176                           	psect	text152
 28177  018A68                     __ptext152:
 28178                           	opt callstack 0
 28179  018A68                     _UART2_Transmit_ISR:
 28180                           	opt callstack 9
 28181                           
 28182                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 28183                           
 28184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28185                           ;incstack = 0
 28186  018A68  0E40               	movlw	64
 28187  018A6A  601C               	cpfslt	_uart2TxBufferRemaining^0,c
 28188  018A6C  D010               	goto	l703
 28189                           
 28190                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 28191  018A6E  0E54               	movlw	low _uart2TxBuffer
 28192  018A70  241D               	addwf	_uart2TxTail^0,w,c	;volatile
 28193  018A72  6ED9               	movwf	fsr2l,c
 28194  018A74  6ADA               	clrf	fsr2h,c
 28195  018A76  0E03               	movlw	high _uart2TxBuffer
 28196  018A78  22DA               	addwfc	fsr2h,f,c
 28197  018A7A  50DF               	movf	indf2,w,c
 28198  018A7C  013D               	movlb	61	; () banked
 28199  018A7E  6FD2               	movwf	210,b	;volatile
 28200                           
 28201                           ; BSR set to: 61
 28202  018A80  2A1D               	incf	_uart2TxTail^0,f,c	;volatile
 28203                           
 28204                           ; BSR set to: 61
 28205                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 28206  018A82  0E3F               	movlw	63
 28207  018A84  641D               	cpfsgt	_uart2TxTail^0,c
 28208  018A86  D001               	goto	l9293
 28209                           
 28210                           ; BSR set to: 61
 28211                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 28212  018A88  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 28213  018A8A                     l9293:
 28214                           
 28215                           ; BSR set to: 61
 28216                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 28217  018A8A  2A1C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 28218                           
 28219                           ;mcc_generated_files/uart2.c: 224:     }
 28220  018A8C  0012               	return	
 28221  018A8E                     l703:
 28222                           
 28223                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 28224  018A8E  0139               	movlb	57	; () banked
 28225  018A90  9796               	bcf	150,3,b	;volatile
 28226                           
 28227                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28228  018A92  0012               	return		;funcret
 28229  018A94                     __end_of_UART2_Transmit_ISR:
 28230                           	opt callstack 0
 28231                           
 28232 ;; *************** function _UART2_rx_vect_isr *****************
 28233 ;; Defined at:
 28234 ;;		line 203 in file "mcc_generated_files/uart2.c"
 28235 ;; Parameters:    Size  Location     Type
 28236 ;;		None
 28237 ;; Auto vars:     Size  Location     Type
 28238 ;;		None
 28239 ;; Return value:  Size  Location     Type
 28240 ;;                  1    wreg      void 
 28241 ;; Registers used:
 28242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28243 ;; Tracked objects:
 28244 ;;		On entry : 0/0
 28245 ;;		On exit  : 0/0
 28246 ;;		Unchanged: 0/0
 28247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28252 ;;Total ram usage:        0 bytes
 28253 ;; Hardware stack levels used:    1
 28254 ;; Hardware stack levels required when called:    1
 28255 ;; This function calls:
 28256 ;;		Absolute function
 28257 ;;		_UART2_Receive_ISR
 28258 ;; This function is called by:
 28259 ;;		Interrupt level 2
 28260 ;; This function uses a non-reentrant model
 28261 ;;
 28262                           
 28263                           	psect	text153
 28264  018DE0                     __ptext153:
 28265                           	opt callstack 0
 28266  018DE0                     _UART2_rx_vect_isr:
 28267                           	opt callstack 9
 28268                           
 28269                           ;incstack = 0
 28270  018DE0  EE14  F016         	lfsr	1,___inthi_sp
 28271                           
 28272                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 28273  018DE4  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28274  018DE6  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 28275  018DE8  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 28276  018DEA  B4D8               	btfsc	status,2,c
 28277  018DEC  0011               	retfie		f
 28278                           
 28279                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 28280  018DEE  D801               	call	i2u904_48
 28281  018DF0  0011               	retfie		f
 28282  018DF2                     i2u904_48:
 28283  018DF2  0005               	push	
 28284  018DF4  6EFA               	movwf	pclath,c
 28285  018DF6  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28286  018DF8  6EFD               	movwf	tosl,c
 28287  018DFA  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 28288  018DFC  6EFE               	movwf	tosh,c
 28289  018DFE  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 28290  018E00  6EFF               	movwf	tosu,c
 28291  018E02  50FA               	movf	pclath,w,c
 28292  018E04  0012               	return		;indir
 28293  018E06                     __end_of_UART2_rx_vect_isr:
 28294                           	opt callstack 0
 28295                           
 28296 ;; *************** function _UART2_Receive_ISR *****************
 28297 ;; Defined at:
 28298 ;;		line 233 in file "mcc_generated_files/uart2.c"
 28299 ;; Parameters:    Size  Location     Type
 28300 ;;		None
 28301 ;; Auto vars:     Size  Location     Type
 28302 ;;		None
 28303 ;; Return value:  Size  Location     Type
 28304 ;;                  1  [STACK] void 
 28305 ;; Registers used:
 28306 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28307 ;; Tracked objects:
 28308 ;;		On entry : 0/0
 28309 ;;		On exit  : 0/0
 28310 ;;		Unchanged: 0/0
 28311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28316 ;;Total ram usage:        0 bytes
 28317 ;; Hardware stack levels used:    1
 28318 ;; This function calls:
 28319 ;;		Nothing
 28320 ;; This function is called by:
 28321 ;;		_UART2_Initialize
 28322 ;;		_UART2_rx_vect_isr
 28323 ;; This function uses a reentrant model
 28324 ;;
 28325                           
 28326                           	psect	text154
 28327  018FB4                     __ptext154:
 28328                           	opt callstack 0
 28329  018FB4                     _UART2_Receive_ISR:
 28330                           	opt callstack 9
 28331                           
 28332                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 28333                           
 28334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28335                           ;incstack = 0
 28336  018FB4  0E00               	movlw	low _uart2RxBuffer
 28337  018FB6  241B               	addwf	_uart2RxHead^0,w,c	;volatile
 28338  018FB8  6ED9               	movwf	fsr2l,c
 28339  018FBA  6ADA               	clrf	fsr2h,c
 28340  018FBC  0E06               	movlw	high _uart2RxBuffer
 28341  018FBE  22DA               	addwfc	fsr2h,f,c
 28342  018FC0  006F F743 FFDF     	movff	15824,indf2	;volatile
 28343  018FC6  2A1B               	incf	_uart2RxHead^0,f,c	;volatile
 28344                           
 28345                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 28346  018FC8  281B               	incf	_uart2RxHead^0,w,c
 28347  018FCA  B4D8               	btfsc	status,2,c
 28348                           
 28349                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 28350  018FCC  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 28351                           
 28352                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 28353  018FCE  2A19               	incf	_uart2RxCount^0,f,c	;volatile
 28354                           
 28355                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28356  018FD0  0012               	return		;funcret
 28357  018FD2                     __end_of_UART2_Receive_ISR:
 28358                           	opt callstack 0
 28359                           
 28360 ;; *************** function _TMR6_ISR *****************
 28361 ;; Defined at:
 28362 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 28363 ;; Parameters:    Size  Location     Type
 28364 ;;		None
 28365 ;; Auto vars:     Size  Location     Type
 28366 ;;		None
 28367 ;; Return value:  Size  Location     Type
 28368 ;;                  1    wreg      void 
 28369 ;; Registers used:
 28370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28371 ;; Tracked objects:
 28372 ;;		On entry : 0/0
 28373 ;;		On exit  : 0/0
 28374 ;;		Unchanged: 0/0
 28375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28380 ;;Total ram usage:        1 bytes
 28381 ;; Hardware stack levels used:    1
 28382 ;; Hardware stack levels required when called:    2
 28383 ;; This function calls:
 28384 ;;		_TMR6_CallBack
 28385 ;; This function is called by:
 28386 ;;		Interrupt level 2
 28387 ;; This function uses a non-reentrant model
 28388 ;;
 28389                           
 28390                           	psect	text155
 28391  019024                     __ptext155:
 28392                           	opt callstack 0
 28393  019024                     _TMR6_ISR:
 28394                           	opt callstack 8
 28395                           
 28396                           ;incstack = 0
 28397  019024  0060  F094  F04A   	movff	btemp,??_TMR6_ISR
 28398  01902A  EE14  F016         	lfsr	1,___inthi_sp
 28399                           
 28400                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 28401  01902E  0139               	movlb	57	; () banked
 28402  019030  91A9               	bcf	169,0,b	;volatile
 28403                           
 28404                           ; BSR set to: 57
 28405                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 28406  019032  EC4B  F0C7         	call	_TMR6_CallBack	;wreg free
 28407  019036  0060  F128  F025   	movff	??_TMR6_ISR,btemp
 28408  01903C  0011               	retfie		f
 28409  01903E                     __end_of_TMR6_ISR:
 28410                           	opt callstack 0
 28411                           
 28412 ;; *************** function _TMR6_CallBack *****************
 28413 ;; Defined at:
 28414 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 28415 ;; Parameters:    Size  Location     Type
 28416 ;;		None
 28417 ;; Auto vars:     Size  Location     Type
 28418 ;;		None
 28419 ;; Return value:  Size  Location     Type
 28420 ;;                  1  [STACK] void 
 28421 ;; Registers used:
 28422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28423 ;; Tracked objects:
 28424 ;;		On entry : 3F/39
 28425 ;;		On exit  : 0/0
 28426 ;;		Unchanged: 0/0
 28427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28432 ;;Total ram usage:        0 bytes
 28433 ;; Hardware stack levels used:    1
 28434 ;; Hardware stack levels required when called:    1
 28435 ;; This function calls:
 28436 ;;		Absolute function
 28437 ;;		_TMR6_DefaultInterruptHandler
 28438 ;; This function is called by:
 28439 ;;		_TMR6_ISR
 28440 ;; This function uses a reentrant model
 28441 ;;
 28442                           
 28443                           	psect	text156
 28444  018E96                     __ptext156:
 28445                           	opt callstack 0
 28446  018E96                     _TMR6_CallBack:
 28447                           	opt callstack 8
 28448                           
 28449                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 28450                           
 28451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28452                           ;incstack = 0
 28453  018E96  0100               	movlb	0	; () banked
 28454  018E98  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28455  018E9A  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28456  018E9C  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28457  018E9E  B4D8               	btfsc	status,2,c
 28458  018EA0  0012               	return	
 28459                           
 28460                           ; BSR set to: 0
 28461                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 28462  018EA2  D801               	call	u869_48
 28463  018EA4  0012               	return	
 28464  018EA6                     u869_48:
 28465  018EA6  0005               	push	
 28466  018EA8  6EFA               	movwf	pclath,c
 28467  018EAA  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28468  018EAC  6EFD               	movwf	tosl,c
 28469  018EAE  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28470  018EB0  6EFE               	movwf	tosh,c
 28471  018EB2  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28472  018EB4  6EFF               	movwf	tosu,c
 28473  018EB6  50FA               	movf	pclath,w,c
 28474  018EB8  0012               	return		;indir
 28475  018EBA                     __end_of_TMR6_CallBack:
 28476                           	opt callstack 0
 28477                           
 28478 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 28479 ;; Defined at:
 28480 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 28481 ;; Parameters:    Size  Location     Type
 28482 ;;		None
 28483 ;; Auto vars:     Size  Location     Type
 28484 ;;  i               1  [STACK] unsigned char 
 28485 ;; Return value:  Size  Location     Type
 28486 ;;                  1  [STACK] void 
 28487 ;; Registers used:
 28488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28489 ;; Tracked objects:
 28490 ;;		On entry : 3F/0
 28491 ;;		On exit  : 0/0
 28492 ;;		Unchanged: 0/0
 28493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28498 ;;Total ram usage:        0 bytes
 28499 ;; Hardware stack levels used:    1
 28500 ;; This function calls:
 28501 ;;		Nothing
 28502 ;; This function is called by:
 28503 ;;		_TMR6_Initialize
 28504 ;;		_TMR6_CallBack
 28505 ;; This function uses a reentrant model
 28506 ;;
 28507                           
 28508                           	psect	text157
 28509  018452                     __ptext157:
 28510                           	opt callstack 0
 28511  018452                     _TMR6_DefaultInterruptHandler:
 28512                           	opt callstack 0
 28513                           
 28514                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28515  018452  52E6               	movf	postinc1,f,c
 28516                           
 28517                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 28518                           ;stkvar	_i @ sp[(-1)+0]
 28519                           
 28520                           ;incstack = 0
 28521  018454  0EFF               	movlw	-1
 28522  018456  6AE3               	clrf	plusw1,c
 28523  018458                     l8973:
 28524                           
 28525                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 28526                           ;stkvar	_i @ sp[(-1)+0]
 28527  018458  0EFF               	movlw	-1
 28528  01845A  50E3               	movf	plusw1,w,c
 28529  01845C  0D02               	mullw	2
 28530  01845E  0E8D               	movlw	low _tickCount
 28531  018460  24F3               	addwf	243,w,c
 28532  018462  6ED9               	movwf	fsr2l,c
 28533  018464  0E01               	movlw	high _tickCount
 28534  018466  20F4               	addwfc	prodh,w,c
 28535  018468  6EDA               	movwf	fsr2h,c
 28536  01846A  50DE               	movf	postinc2,w,c
 28537  01846C  10DE               	iorwf	postinc2,w,c
 28538  01846E  B4D8               	btfsc	status,2,c
 28539  018470  D00C               	goto	l8977
 28540                           
 28541                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 28542                           ;stkvar	_i @ sp[(-1)+0]
 28543  018472  0EFF               	movlw	-1
 28544  018474  50E3               	movf	plusw1,w,c
 28545  018476  0D02               	mullw	2
 28546  018478  0E8D               	movlw	low _tickCount
 28547  01847A  24F3               	addwf	243,w,c
 28548  01847C  6ED9               	movwf	fsr2l,c
 28549  01847E  0E01               	movlw	high _tickCount
 28550  018480  20F4               	addwfc	prodh,w,c
 28551  018482  6EDA               	movwf	fsr2h,c
 28552  018484  06DE               	decf	postinc2,f,c
 28553  018486  0E00               	movlw	0
 28554  018488  5ADD               	subwfb	postdec2,f,c
 28555  01848A                     l8977:
 28556                           
 28557                           ;mcc_generated_files/tmr6.c: 207:  }
 28558                           ;stkvar	_i @ sp[(-1)+0]
 28559  01848A  0EFF               	movlw	-1
 28560  01848C  2AE3               	incf	plusw1,f,c
 28561                           
 28562                           ;stkvar	_i @ sp[(-1)+0]
 28563  01848E  0EFF               	movlw	-1
 28564  018490  006F FF8C  F025    	movff	plusw1,btemp
 28565  018496  0E0B               	movlw	11
 28566  018498  6425               	cpfsgt	btemp^0,c
 28567  01849A  D7DE               	goto	l8973
 28568                           
 28569                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28570  01849C  52E5               	movf	postdec1,f,c
 28571  01849E  0012               	return		;funcret
 28572  0184A0                     __end_of_TMR6_DefaultInterruptHandler:
 28573                           	opt callstack 0
 28574                           
 28575 ;; *************** function _DMA1_DMASCNT_ISR *****************
 28576 ;; Defined at:
 28577 ;;		line 126 in file "mcc_generated_files/dma1.c"
 28578 ;; Parameters:    Size  Location     Type
 28579 ;;		None
 28580 ;; Auto vars:     Size  Location     Type
 28581 ;;		None
 28582 ;; Return value:  Size  Location     Type
 28583 ;;                  1    wreg      void 
 28584 ;; Registers used:
 28585 ;;		None
 28586 ;; Tracked objects:
 28587 ;;		On entry : 0/0
 28588 ;;		On exit  : 3F/0
 28589 ;;		Unchanged: 0/0
 28590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28595 ;;Total ram usage:        0 bytes
 28596 ;; Hardware stack levels used:    1
 28597 ;; This function calls:
 28598 ;;		Nothing
 28599 ;; This function is called by:
 28600 ;;		Interrupt level 2
 28601 ;; This function uses a non-reentrant model
 28602 ;;
 28603                           
 28604                           	psect	text158
 28605  019124                     __ptext158:
 28606                           	opt callstack 0
 28607  019124                     _DMA1_DMASCNT_ISR:
 28608                           	opt callstack 10
 28609                           
 28610                           ;incstack = 0
 28611  019124  EE14  F016         	lfsr	1,___inthi_sp
 28612                           
 28613                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 28614  019128  0139               	movlb	57	; () banked
 28615  01912A  91A2               	bcf	162,0,b	;volatile
 28616                           
 28617                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 28618  01912C  0100               	movlb	0	; () banked
 28619  01912E  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 28620                           
 28621                           ; BSR set to: 0
 28622  019130  0011               	retfie		f
 28623  019132                     __end_of_DMA1_DMASCNT_ISR:
 28624                           	opt callstack 0
 28625                           
 28626 ;; *************** function _DMA1_DMADCNT_ISR *****************
 28627 ;; Defined at:
 28628 ;;		line 134 in file "mcc_generated_files/dma1.c"
 28629 ;; Parameters:    Size  Location     Type
 28630 ;;		None
 28631 ;; Auto vars:     Size  Location     Type
 28632 ;;		None
 28633 ;; Return value:  Size  Location     Type
 28634 ;;                  1    wreg      void 
 28635 ;; Registers used:
 28636 ;;		None
 28637 ;; Tracked objects:
 28638 ;;		On entry : 0/0
 28639 ;;		On exit  : 3F/39
 28640 ;;		Unchanged: 0/0
 28641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28646 ;;Total ram usage:        0 bytes
 28647 ;; Hardware stack levels used:    1
 28648 ;; This function calls:
 28649 ;;		Nothing
 28650 ;; This function is called by:
 28651 ;;		Interrupt level 2
 28652 ;; This function uses a non-reentrant model
 28653 ;;
 28654                           
 28655                           	psect	text159
 28656  01913C                     __ptext159:
 28657                           	opt callstack 0
 28658  01913C                     _DMA1_DMADCNT_ISR:
 28659                           	opt callstack 10
 28660                           
 28661                           ; BSR set to: 0
 28662                           ;incstack = 0
 28663  01913C  EE14  F016         	lfsr	1,___inthi_sp
 28664                           
 28665                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 28666  019140  0139               	movlb	57	; () banked
 28667  019142  93A2               	bcf	162,1,b	;volatile
 28668                           
 28669                           ; BSR set to: 57
 28670  019144  0011               	retfie		f
 28671  019146                     __end_of_DMA1_DMADCNT_ISR:
 28672                           	opt callstack 0
 28673                           
 28674 ;; *************** function _DMA1_DMAA_ISR *****************
 28675 ;; Defined at:
 28676 ;;		line 144 in file "mcc_generated_files/dma1.c"
 28677 ;; Parameters:    Size  Location     Type
 28678 ;;		None
 28679 ;; Auto vars:     Size  Location     Type
 28680 ;;		None
 28681 ;; Return value:  Size  Location     Type
 28682 ;;                  1    wreg      void 
 28683 ;; Registers used:
 28684 ;;		None
 28685 ;; Tracked objects:
 28686 ;;		On entry : 0/0
 28687 ;;		On exit  : 3F/39
 28688 ;;		Unchanged: 0/0
 28689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28694 ;;Total ram usage:        0 bytes
 28695 ;; Hardware stack levels used:    1
 28696 ;; This function calls:
 28697 ;;		Nothing
 28698 ;; This function is called by:
 28699 ;;		Interrupt level 2
 28700 ;; This function uses a non-reentrant model
 28701 ;;
 28702                           
 28703                           	psect	text160
 28704  019148                     __ptext160:
 28705                           	opt callstack 0
 28706  019148                     _DMA1_DMAA_ISR:
 28707                           	opt callstack 10
 28708                           
 28709                           ; BSR set to: 57
 28710                           ;incstack = 0
 28711  019148  EE14  F016         	lfsr	1,___inthi_sp
 28712                           
 28713                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 28714  01914C  0139               	movlb	57	; () banked
 28715  01914E  97A2               	bcf	162,3,b	;volatile
 28716                           
 28717                           ; BSR set to: 57
 28718  019150  0011               	retfie		f
 28719  019152                     __end_of_DMA1_DMAA_ISR:
 28720                           	opt callstack 0
 28721                           
 28722 ;; *************** function _DMA1_DMAOR_ISR *****************
 28723 ;; Defined at:
 28724 ;;		line 155 in file "mcc_generated_files/dma1.c"
 28725 ;; Parameters:    Size  Location     Type
 28726 ;;		None
 28727 ;; Auto vars:     Size  Location     Type
 28728 ;;		None
 28729 ;; Return value:  Size  Location     Type
 28730 ;;                  1    wreg      void 
 28731 ;; Registers used:
 28732 ;;		None
 28733 ;; Tracked objects:
 28734 ;;		On entry : 0/0
 28735 ;;		On exit  : 3F/39
 28736 ;;		Unchanged: 0/0
 28737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28742 ;;Total ram usage:        0 bytes
 28743 ;; Hardware stack levels used:    1
 28744 ;; This function calls:
 28745 ;;		Nothing
 28746 ;; This function is called by:
 28747 ;;		Interrupt level 2
 28748 ;; This function uses a non-reentrant model
 28749 ;;
 28750                           
 28751                           	psect	text161
 28752  019154                     __ptext161:
 28753                           	opt callstack 0
 28754  019154                     _DMA1_DMAOR_ISR:
 28755                           	opt callstack 10
 28756                           
 28757                           ; BSR set to: 57
 28758                           ;incstack = 0
 28759  019154  EE14  F016         	lfsr	1,___inthi_sp
 28760                           
 28761                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 28762  019158  0139               	movlb	57	; () banked
 28763  01915A  95A2               	bcf	162,2,b	;volatile
 28764                           
 28765                           ; BSR set to: 57
 28766  01915C  0011               	retfie		f
 28767  01915E                     __end_of_DMA1_DMAOR_ISR:
 28768                           	opt callstack 0
 28769                           
 28770                           ;
 28771                           ; Interrupt Vector Table @ 0x8
 28772                           ;
 28773                           
 28774                           	psect	ivt0x8
 28775  000008                     __pivt0x8:
 28776                           	opt callstack 0
 28777  000008                     ivt0x8_base:
 28778                           	opt callstack 0
 28779                           
 28780                           ; Vector 0 : SWINT
 28781  000008  6469               	dw	_Default_ISR shr (0+2)
 28782                           
 28783                           ; Vector 1 : HLVD
 28784  00000A  6469               	dw	_Default_ISR shr (0+2)
 28785                           
 28786                           ; Vector 2 : OSF
 28787  00000C  6469               	dw	_Default_ISR shr (0+2)
 28788                           
 28789                           ; Vector 3 : CSW
 28790  00000E  6469               	dw	_Default_ISR shr (0+2)
 28791                           
 28792                           ; Vector 4 : NVM
 28793  000010  6469               	dw	_Default_ISR shr (0+2)
 28794                           
 28795                           ; Vector 5 : SCAN
 28796  000012  6469               	dw	_Default_ISR shr (0+2)
 28797                           
 28798                           ; Vector 6 : CRC
 28799  000014  6469               	dw	_Default_ISR shr (0+2)
 28800                           
 28801                           ; Vector 7 : IOC
 28802  000016  6469               	dw	_Default_ISR shr (0+2)
 28803                           
 28804                           ; Vector 8 : INT0
 28805  000018  6445               	dw	_INT0_ISR shr (0+2)
 28806                           
 28807                           ; Vector 9 : ZCD
 28808  00001A  6469               	dw	_Default_ISR shr (0+2)
 28809                           
 28810                           ; Vector 10 : AD
 28811  00001C  6284               	dw	_ADCC_ISR shr (0+2)
 28812                           
 28813                           ; Vector 11 : ADT
 28814  00001E  5FF9               	dw	_ADCC_ThresholdISR shr (0+2)
 28815                           
 28816                           ; Vector 12 : CMP1
 28817  000020  6469               	dw	_Default_ISR shr (0+2)
 28818                           
 28819                           ; Vector 13 : SMT1
 28820  000022  6469               	dw	_Default_ISR shr (0+2)
 28821                           
 28822                           ; Vector 14 : SMT1PRA
 28823  000024  6469               	dw	_Default_ISR shr (0+2)
 28824                           
 28825                           ; Vector 15 : SMT1PRW
 28826  000026  6469               	dw	_Default_ISR shr (0+2)
 28827                           
 28828                           ; Vector 16 : DMA1SCNT
 28829  000028  6449               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 28830                           
 28831                           ; Vector 17 : DMA1DCNT
 28832  00002A  644F               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 28833                           
 28834                           ; Vector 18 : DMA1OR
 28835  00002C  6455               	dw	_DMA1_DMAOR_ISR shr (0+2)
 28836                           
 28837                           ; Vector 19 : DMA1A
 28838  00002E  6452               	dw	_DMA1_DMAA_ISR shr (0+2)
 28839                           
 28840                           ; Vector 20 : SPI1RX
 28841  000030  6469               	dw	_Default_ISR shr (0+2)
 28842                           
 28843                           ; Vector 21 : SPI1TX
 28844  000032  6469               	dw	_Default_ISR shr (0+2)
 28845                           
 28846                           ; Vector 22 : SPI1
 28847  000034  6469               	dw	_Default_ISR shr (0+2)
 28848                           
 28849                           ; Vector 23 : I2C1RX
 28850  000036  6469               	dw	_Default_ISR shr (0+2)
 28851                           
 28852                           ; Vector 24 : I2C1TX
 28853  000038  6469               	dw	_Default_ISR shr (0+2)
 28854                           
 28855                           ; Vector 25 : I2C1
 28856  00003A  6469               	dw	_Default_ISR shr (0+2)
 28857                           
 28858                           ; Vector 26 : I2C1E
 28859  00003C  6469               	dw	_Default_ISR shr (0+2)
 28860                           
 28861                           ; Vector 27 : U1RX
 28862  00003E  6364               	dw	_UART1_rx_vect_isr shr (0+2)
 28863                           
 28864                           ; Vector 28 : U1TX
 28865  000040  635A               	dw	_UART1_tx_vect_isr shr (0+2)
 28866                           
 28867                           ; Vector 29 : U1E
 28868  000042  6469               	dw	_Default_ISR shr (0+2)
 28869                           
 28870                           ; Vector 30 : U1
 28871  000044  6469               	dw	_Default_ISR shr (0+2)
 28872                           
 28873                           ; Vector 31 : TMR0
 28874  000046  6469               	dw	_Default_ISR shr (0+2)
 28875                           
 28876                           ; Vector 32 : TMR1
 28877  000048  6469               	dw	_Default_ISR shr (0+2)
 28878                           
 28879                           ; Vector 33 : TMR1G
 28880  00004A  6469               	dw	_Default_ISR shr (0+2)
 28881                           
 28882                           ; Vector 34 : TMR2
 28883  00004C  6469               	dw	_Default_ISR shr (0+2)
 28884                           
 28885                           ; Vector 35 : CCP1
 28886  00004E  6469               	dw	_Default_ISR shr (0+2)
 28887                           
 28888                           ; Vector 36 : Undefined
 28889  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 28890                           
 28891                           ; Vector 37 : NCO1
 28892  000052  6469               	dw	_Default_ISR shr (0+2)
 28893                           
 28894                           ; Vector 38 : CWG1
 28895  000054  6469               	dw	_Default_ISR shr (0+2)
 28896                           
 28897                           ; Vector 39 : CLC1
 28898  000056  6469               	dw	_Default_ISR shr (0+2)
 28899                           
 28900                           ; Vector 40 : INT1
 28901  000058  61F4               	dw	_INT1_ISR shr (0+2)
 28902                           
 28903                           ; Vector 41 : CMP2
 28904  00005A  6469               	dw	_Default_ISR shr (0+2)
 28905                           
 28906                           ; Vector 42 : DMA2SCNT
 28907  00005C  6469               	dw	_Default_ISR shr (0+2)
 28908                           
 28909                           ; Vector 43 : DMA2DCNT
 28910  00005E  6469               	dw	_Default_ISR shr (0+2)
 28911                           
 28912                           ; Vector 44 : DMA2OR
 28913  000060  6469               	dw	_Default_ISR shr (0+2)
 28914                           
 28915                           ; Vector 45 : DMA2A
 28916  000062  6469               	dw	_Default_ISR shr (0+2)
 28917                           
 28918                           ; Vector 46 : I2C2RX
 28919  000064  6469               	dw	_Default_ISR shr (0+2)
 28920                           
 28921                           ; Vector 47 : I2C2TX
 28922  000066  6469               	dw	_Default_ISR shr (0+2)
 28923                           
 28924                           ; Vector 48 : I2C2
 28925  000068  6469               	dw	_Default_ISR shr (0+2)
 28926                           
 28927                           ; Vector 49 : I2C2E
 28928  00006A  6469               	dw	_Default_ISR shr (0+2)
 28929                           
 28930                           ; Vector 50 : U2RX
 28931  00006C  6378               	dw	_UART2_rx_vect_isr shr (0+2)
 28932                           
 28933                           ; Vector 51 : U2TX
 28934  00006E  636E               	dw	_UART2_tx_vect_isr shr (0+2)
 28935                           
 28936                           ; Vector 52 : U2E
 28937  000070  6469               	dw	_Default_ISR shr (0+2)
 28938                           
 28939                           ; Vector 53 : U2
 28940  000072  6469               	dw	_Default_ISR shr (0+2)
 28941                           
 28942                           ; Vector 54 : TMR3
 28943  000074  5D1D               	dw	_TMR3_ISR shr (0+2)
 28944                           
 28945                           ; Vector 55 : TMR3G
 28946  000076  6469               	dw	_Default_ISR shr (0+2)
 28947                           
 28948                           ; Vector 56 : TMR4
 28949  000078  6469               	dw	_Default_ISR shr (0+2)
 28950                           
 28951                           ; Vector 57 : CCP2
 28952  00007A  6469               	dw	_Default_ISR shr (0+2)
 28953                           
 28954                           ; Vector 58 : Undefined
 28955  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 28956                           
 28957                           ; Vector 59 : CWG2
 28958  00007E  6469               	dw	_Default_ISR shr (0+2)
 28959                           
 28960                           ; Vector 60 : CLC2
 28961  000080  6469               	dw	_Default_ISR shr (0+2)
 28962                           
 28963                           ; Vector 61 : INT2
 28964  000082  6469               	dw	_Default_ISR shr (0+2)
 28965                           
 28966                           ; Vector 62 : Undefined
 28967  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 28968                           
 28969                           ; Vector 63 : Undefined
 28970  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 28971                           
 28972                           ; Vector 64 : Undefined
 28973  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 28974                           
 28975                           ; Vector 65 : Undefined
 28976  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 28977                           
 28978                           ; Vector 66 : Undefined
 28979  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 28980                           
 28981                           ; Vector 67 : Undefined
 28982  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 28983                           
 28984                           ; Vector 68 : Undefined
 28985  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 28986                           
 28987                           ; Vector 69 : Undefined
 28988  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 28989                           
 28990                           ; Vector 70 : TMR5
 28991  000094  60D5               	dw	_TMR5_ISR shr (0+2)
 28992                           
 28993                           ; Vector 71 : TMR5G
 28994  000096  6469               	dw	_Default_ISR shr (0+2)
 28995                           
 28996                           ; Vector 72 : TMR6
 28997  000098  6409               	dw	_TMR6_ISR shr (0+2)
 28998                           
 28999                           ; Vector 73 : CCP3
 29000  00009A  6469               	dw	_Default_ISR shr (0+2)
 29001                           
 29002                           ; Vector 74 : CWG3
 29003  00009C  6469               	dw	_Default_ISR shr (0+2)
 29004                           
 29005                           ; Vector 75 : CLC3
 29006  00009E  6469               	dw	_Default_ISR shr (0+2)
 29007                           
 29008                           ; Vector 76 : Undefined
 29009  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 29010                           
 29011                           ; Vector 77 : Undefined
 29012  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 29013                           
 29014                           ; Vector 78 : Undefined
 29015  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 29016                           
 29017                           ; Vector 79 : Undefined
 29018  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 29019                           
 29020                           ; Vector 80 : CCP4
 29021  0000A8  6469               	dw	_Default_ISR shr (0+2)
 29022                           
 29023                           ; Vector 81 : CLC4
 29024  0000AA  6469               	dw	_Default_ISR shr (0+2)
 29025  0000AC                     ivt0x8_undefint:
 29026                           	opt callstack 0
 29027  0000AC  00FF               	reset	
 29028                           
 29029                           	psect	text162
 29030  000000                     __ptext162:
 29031                           	opt callstack 0
 29032                           
 29033                           	psect	rparam
 29034  0000                     
 29035                           	psect	temp
 29036  000025                     btemp:
 29037                           	opt callstack 0
 29038  000025                     	ds	32
 29039  0000                     wtemp0	set	btemp
 29040  0000                     wtemp1	set	btemp+2
 29041  0000                     wtemp2	set	btemp+4
 29042  0000                     wtemp3	set	btemp+6
 29043  0000                     wtemp4	set	btemp+8
 29044  0000                     wtemp5	set	btemp+10
 29045  0000                     wtemp8	set	btemp+1
 29046  0000                     ttemp0	set	btemp
 29047  0000                     ttemp1	set	btemp+3
 29048  0000                     ttemp2	set	btemp+6
 29049  0000                     ttemp3	set	btemp+9
 29050  0000                     ttemp5	set	btemp+1
 29051  0000                     ttemp6	set	btemp+4
 29052  0000                     ttemp7	set	btemp+8
 29053  0000                     ltemp0	set	btemp
 29054  0000                     ltemp1	set	btemp+4
 29055  0000                     ltemp2	set	btemp+8
 29056  0000                     lltemp0	set	btemp
 29057  0000                     lltemp1	set	btemp+8
 29058  0000                     lltemp2	set	btemp+16
 29059  0000                     lltemp3	set	btemp+24
 29060                           tosu	equ	0x3FFF
 29061                           tosh	equ	0x3FFE
 29062                           tosl	equ	0x3FFD
 29063                           stkptr	equ	0x3FFC
 29064                           pclatu	equ	0x3FFB
 29065                           pclath	equ	0x3FFA
 29066                           pcl	equ	0x3FF9
 29067                           tblptru	equ	0x3FF8
 29068                           tblptrh	equ	0x3FF7
 29069                           tblptrl	equ	0x3FF6
 29070                           tablat	equ	0x3FF5
 29071                           prodh	equ	0x3FF4
 29072                           prodl	equ	0x3FF3
 29073                           indf0	equ	0x3FEF
 29074                           postinc0	equ	0x3FEE
 29075                           postdec0	equ	0x3FED
 29076                           preinc0	equ	0x3FEC
 29077                           plusw0	equ	0x3FEB
 29078                           fsr0h	equ	0x3FEA
 29079                           fsr0l	equ	0x3FE9
 29080                           wreg	equ	0x3FE8
 29081                           indf1	equ	0x3FE7
 29082                           postinc1	equ	0x3FE6
 29083                           postdec1	equ	0x3FE5
 29084                           preinc1	equ	0x3FE4
 29085                           plusw1	equ	0x3FE3
 29086                           fsr1h	equ	0x3FE2
 29087                           fsr1l	equ	0x3FE1
 29088                           bsr	equ	0x3FE0
 29089                           indf2	equ	0x3FDF
 29090                           postinc2	equ	0x3FDE
 29091                           postdec2	equ	0x3FDD
 29092                           preinc2	equ	0x3FDC
 29093                           plusw2	equ	0x3FDB
 29094                           fsr2h	equ	0x3FDA
 29095                           fsr2l	equ	0x3FD9
 29096                           status	equ	0x3FD8


Data Sizes:
    Strings     445
    Constant    144
    Data        399
    BSS         1393
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      50
    BANK0           160      0     153
    BANK1           256      0     253
    BANK2           256     13     217
    BANK3           256      0     212
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5555_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4091tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1934spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1934spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  309323
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (23) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (23) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166948
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _calc_model_data                                     0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (18) _stop_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _start_bsoc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _lp_filter                                          10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (19) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (20) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (19) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     265
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           13    13      0   11132
                                              0 BANK2     13    13      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   11072
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           0     0      0   11072
                    _calc_model_data
 ---------------------------------------------------------------------------------
 (17) _calc_model_data                                     0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (18) _stop_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _start_bsoc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _lp_filter                                          10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (19) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (20) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (19) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (22) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (23) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (22) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (22) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (23) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (23) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (22) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (22) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (22) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (22) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (22) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (23) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (23) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (21) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _calc_model_data
         ___fladd
         ___flmul
         ___flsub
           ___fladd
         _lp_filter
           ___fladd
           ___flmul
           ___flsub
             ___fladd
         _start_bsoc
         _stop_bsoc
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D4      11       82.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      D      D9       9       84.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      32       1       79.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5F9      58        0.0%
DATA                 0      0     71B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec  4 03:55:36 2019

                     _SPI1_Exchange8bit 8F1E                __end_of_set_display_info 8F96  
                                     _C 0100                                       _D 06FF  
                                     _H 00F2                                       _P 00A5  
                                     _R 00C3                                       _S 0060  
                                     _T FDB1                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 8C76            __end_of_start_switch_handler 8F1E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 9186                             __CFG_LVP$ON 000000  
                                   l173 90AA                                     l703 8A8E  
                                   l583 8A62                                     l837 8F2C  
                                   _GIE 01FE97                                     _abs 8532  
                                   _pad 6D96                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 9056                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8EDC                      _UART1_Transmit_ISR 8A3C  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8EBA  
                          __CFG_ZCD$OFF 000000                                    l1030 878A  
                                  l2002 40FA                                    l3000 6C74  
                                  l2120 5286                                    l2141 44E0  
                                  l2038 123A                                    l1510 7B4A  
                                  l1272 1F98                                    l1264 1DE0  
                                  l1506 78D8                                    l2082 0B1A  
                                  l1370 82AA                                    l1282 2036  
                                  l1274 1F9E                                    l2067 066A  
                                  l1603 6FB6                         _timer3ReloadVal 0012  
                                  l1284 20FC                                    l3061 7E88  
                                  l1525 8894                                    l1285 220A  
                                  l3046 6162                                    l2191 1D78  
                                  l2513 662A                                    l1289 25D4  
                                  l3074 7E04                                    l1643 8F92  
                                  l1734 6322                                    l1586 882A  
                                  l2475 76C8                                    l1595 5C40  
                                  l1691 4016                                    l1819 7C70  
                                  l1596 5D9C                                    l1828 71C2  
                                  l2486 678C                    _ADCC_StartConversion 90C4  
                                  l6111 87B2                                    l2479 66B8  
                                  l2753 35EC                                    l2905 8572  
                                  l2834 2E30                                    l1885 87CA  
                                  l2765 347C                                    l7013 68CA  
                                  l7005 6896                                    l7101 8508  
                                  l1982 6DF2                                    l7111 6514  
                                  l2936 5944                                    l7033 6CC8  
                                  l7025 6C9E                                    l2874 5F9A  
                                  l8011 3028                                    l8003 2FD6  
                                  l7051 6D7C                                    l7043 6D48  
                                  l8005 3006                                    l7029 6CB0  
                                  l2798 3B66                                    l7063 7692  
                                  l7135 65C2                                    l7127 6596  
                                  l8105 3406                                    l8041 3166  
                                  l7081 6706                                    l7137 65D8  
                                  l7129 65B2                                    l2897 64B8  
                                  l8123 349E                                    l8115 3460  
                                  l8107 342C                                    l8051 31D8  
                                  l7155 8442                                    l7067 76C6  
                                  l7059 7650                                    l7075 6676  
                                  l8125 34B0                                    l8061 3214  
                                  l7093 678A                                    l7085 6754  
                                  l6701 4AE2                                    l8303 2C40  
                                  l8215 26A6                                    l8143 34EA  
                                  l8055 31F8                                    l9103 3CC0  
                                  l8321 2CB6                                    l8233 2774  
                                  l8217 26AC                                    l8209 2666  
                                  l8129 34BC                                    l8057 320A  
                                  l8065 3244                                    l6705 4B2A  
                                  l8331 2D2A                                    l8307 2C66  
                                  l8235 277A                                    l8227 2734  
                                  l8219 26DC                                    l8171 359C  
                                  l8155 3548                                    l8139 34E4  
                                  l8083 32E0                                    l9051 8840  
                                  l6803 5AE0                                    l6643 6456  
                                  l9115 3DCC                                    l9107 3D9A  
                                  l8341 2D9A                                    l8317 2CB0  
                                  l8245 27CC                                    l8237 27AA  
                                  l8165 3574                                    l8085 32F2  
                                  l8093 332E                                    l6581 79CE  
                                  l6629 8562                                    l6901 396E  
                                  l6653 64B0                                    l6709 4B98  
                                  l9133 3FE4                                    l9141 3FF6  
                                  l8351 2DF8                                    l8335 2D70  
                                  l6743 54BC                                    l6903 3972  
                                  l6823 364C                                    l6647 645A  
                                  l6671 7E78                                    l6727 7DF4  
                                  l9127 3F48                                    l9119 3E68  
                                  l9207 7C2A                                    l8177 35CC  
                                  l8169 358C                                    l8089 32FC  
                                  l8513 4E96                                    l7705 5934  
                                  l6833 36A2                                    l7721 602C  
                                  l9171 6922                                    l9163 68F8  
                                  l8515 4EA6                                    l6579 79AC  
                                  l6755 5556                                    l6915 39BC  
                                  l6843 372A                                    l6835 36D2  
                                  l7723 6098                                    l9165 6908  
                                  l8349 2DDE                                    l8373 8B7E  
                                  l6749 5510                                    l6933 3A32  
                                  l6909 39A0                                    l6861 37EE  
                                  l6853 3780                                    l6829 368C  
                                  l6685 4974                                    l9093 3BA2  
                                  l9271 8A5E                                    l9319 8772  
                                  l9191 69F4                                    l9183 6986  
                                  l9167 690E                                    l9175 692A  
                                  l8391 61D0                                    l8383 61A4  
                                  l7671 5716                                    l6767 5628  
                                  l6943 3AA6                                    l6919 39E2  
                                  l6855 37B0                                    l9087 3B72  
                                  l9431 7716                                    l9169 6914  
                                  l9177 6956                                    l8297 2C24  
                                  l6961 3B3A                                    l6929 3A2C  
                                  l6849 376A                                    l8481 889E  
                                  l8561 5E7A                                    l8529 8B48  
                                  l8395 61E8                                    l7691 5830  
                                  l6795 5A34                                    l6787 59AC  
                                  l6963 3B4A                                    l6955 3B12  
                                  l6875 3842                                    l6867 3828  
                                  l6699 4A92                                    l8571 5EE4  
                                  l8563 5E98                                    l9427 76D8  
                                  l9451 712C                                    l9293 8A8A  
                                  l9533 8748                                    l7685 57B6  
                                  l7669 56F4                                    l6949 3AE2  
                                  l6893 3908                                    l6885 38D2  
                                  l8581 5F18                                    l8573 5EFA  
                                  l8557 5E56                                    l8549 5DEA  
                                  l9461 719C                                    l7695 5898  
                                  l7687 57CE                                    l7679 578A  
                                  l6991 67F0                                    l6895 391A  
                                  l8591 5F7A                                    l8559 5E64  
                                  l9439 70D0                                    l9545 7ED6  
                                  l7689 57F2                                    l6985 67D0  
                                  l8569 5EC6                                    l9539 7EC6  
                                  l6979 67BA                                    l7981 2F16  
                                  l7975 2ED0                                    l7993 2F80  
                                  l7969 2E90                                    l7987 2F4E  
                                  l7979 2EE6                                    l8973 8458  
                                  l7999 2FC0                                    STR_1 FF5F  
                                  STR_2 FFB1                                    l8977 848A  
                                  STR_3 FFDF                                    STR_4 FF4E  
                                  STR_5 FF70                                    STR_6 FFB1  
                                  STR_7 FFDF                                    STR_8 FF3D  
                                  STR_9 FF92                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5000 8682  
                                  u5010 8684                                    _T2PR 003FAB  
                                  u5100 550C                                    u5020 7DB2  
                                  u5030 7DB4                                    u5111 5516  
                                  u5120 5550                                    u5200 59A6  
                                  u5050 89D4                                    u5130 5582  
                                  u5060 89D6                                    u5220 59FC  
                                  u5150 5660                                    u5230 5A2E  
                                  u5080 54B6                                    u5240 5A60  
                                  u5170 56B2                                    _T6PR 003F93  
                                  u5260 5B18                                    u5500 3A80  
                                  u5420 399A                                    u4700 89A6  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u5510 3ABA                                    u4710 8974  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u5280 5B6A                                    u5520 3AF6  
                                  u4720 8976                                    _PMD4 0039C4  
                                  u5505 3A70                                    _PMD5 0039C5  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u4660 79FC                                    u5460 3A24  
                                  u5700 76C2                                    u4900 490C  
                                  u4830 64A8                                    u4910 4958  
                                  u7400 318C                                    u5640 6CF4  
                                  u4840 64AA                                    u4825 648A  
                                  u4905 4902                                    u7410 31AC  
                                  u4770 8546                                    u5570 681C  
                                  u4690 89A4                                    u7411 31A6  
                                  u8035 86BE                                    u4667 79EE  
                                  u5660 6D68                                    u4780 63DA  
                                  u8140 5F0E                                    u8205 8090  
                                  u8206 8092                                    u5590 68B6  
                                  u4950 4A38                                    u4870 7E36  
                                  u4935 4992                                    u7600 34C2  
                                  u7520 3324                                    u9200 6B7E  
                                  u5760 8504                                    u5840 65E0  
                                  u4936 4998                                    u4880 7E38  
                                  u4785 63D0                                    u4937 49A6  
                                  u7450 323C                                    u5770 64F4  
                                  u4970 4B10                                    u8314 3B8C  
                                  u4955 4A2E                                    u8315 3B86  
                                  u8180 805C                                    u7620 34DC  
                                  u7460 325C                                    u7428 31AE  
                                  u6900 58DE                                    u9220 6BFA  
                                  u5860 660A                                    u5780 6508  
                                  u8420 3EAC                                    u7525 3314  
                                  u5870 841E                                    u6910 58E0  
                                  u5790 6542                                    u8414 3EA4  
                                  u8334 3BBC                                    u7455 322C  
                                  u5775 64EA                                    u4975 4B06  
                                  u8415 3E9E                                    u8335 3BB6  
                                  u7560 344E                                    u5880 843E  
                                  u9400 4378                                    u9320 404C  
                                  u9330 404E                                    u8354 3BDE  
                                  u9411 43A8                                    u5795 6538  
                                  u8355 3BD8                                    u7820 27BA  
                                  u7660 3538                                    u9420 43BE  
                                  u9500 00DA                                    u8540 7C16  
                                  u9421 43BC                                    u8198 805E  
                                  u9430 43D2                                    u9350 40BE  
                                  u8374 3DB4                                    u8375 3DAE  
                                  u6880 5786                                    u9440 43D6  
                                  u9280 7462                                    u7665 3528  
                                  u7930 2D04                                    u7690 3558  
                                  u9370 40D0                                    u9530 0194  
                                  u8394 3E82                                    u8570 7C5C  
                                  u7835 294E                                    u8395 3E7C  
                                  u7940 2D3E                                    u9460 43EC  
                                  u9620 050E                                    u9540 0196  
                                  u6980 6124                                    u7845 2A16  
                                  u7950 2D84                                    u9390 4120  
                                  u8558 7C18                                    u7935 2CF4  
                                  u7855 2BDE                                    u9287 7454  
                                  u9720 0648                                    u7890 2CA8  
                                  u9650 0562                                    u9570 02A6  
                                  _PLLR 01CEE0                                    u7980 6182  
                                  u9580 02A8                                    u8588 7C5E  
                                  u9680 05C6                                    u9950 10B8  
                                  u9790 0A18                                    u9970 116E  
                                  u9890 0EE4                                    u9980 1170  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 8A3C                           __CFG_FCMEN$ON 000000  
                                  _dbuf 01A5                                    _atoi 56DA  
                                  _ctoa 7D02                                    _main 1D82  
                                  _dtoa 401C                                    _nanf 817E  
                                  _seed 01F5                                    _prec 000C  
                                  _nout 00C1                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 519C                                    btemp 0025  
                                  _xtoa 449C                  __end_of_check_adc_scan 917E  
                         ___fpclassifyf 632C                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0016               __end_of_SPI1_Exchange8bit 8F3C  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize 8604  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8D90  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0045  
                      __end_of_INT0_ISR 9122                        __end_of_INT1_ISR 880E  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 78E0  
         __end_of_OSCILLATOR_Initialize 90B0                                   l10021 7A38  
                                 l10031 6DC2                                   l10009 6B8A  
                                 l10025 7A76                                   l10041 6E38  
                                 l10105 4364                                   l10035 6DEA  
                                 l10051 73E8                                   l10211 0406  
                                 l10045 6E82                                   l10037 6DFC  
                                 l10125 4416                                   l10301 0A48  
                                 l10213 0470                                   l10311 0B34  
                                 l10207 0396                                   l10143 00AC  
                                 l11103 2028                                   l10057 7D20  
                                 l10129 4452                                   l10241 0594  
                                 l10233 057C                                   l10217 04D2  
                                 l11033 1DE8                                   l10059 7D4C  
                                 l10091 4134                                   l10083 40EA  
                                 l10251 0602                                   l10235 058E  
                                 l10155 00F0                                   l10163 0146  
                                 l11115 22D0                                   l11131 24D8  
                                 l11035 1DFA                                   l11027 1DC2  
                                 l10325 0C32                                   l10309 0B12  
                                 l10229 0554                                   l10173 01EA  
                                 l10181 0258                                   l11029 1DCA  
                                 l10095 4152                                   l10271 06F0  
                                 l10191 02FC                                   l10175 0216  
                                 l10503 450A                                   l11119 2332  
                                 l10425 119A                                   l10409 10E2  
                                 l10337 0CBA                                   l10345 0D24  
                                 l10353 0D90                                   l10361 0EA2  
                                 l10249 05F6                                   l10177 022C  
                                 l10601 14A8                                   l11161 2584  
                                 l11153 254E                                   l11129 24AE  
                                 l11137 24F8                                   l11081 1FA2  
                                 l10267 06B8                                   l10603 14E2  
                                 l11155 2566                                   l11147 253C  
                                 l11083 1FD0                                   l10373 0F3A  
                                 l10277 077A                                   l10461 52BC  
                                 l10445 5208                                   l10533 469C  
                                 l10517 45A6                                   l10509 4546  
                                 l10541 4722                                   l10621 165C  
                                 l10605 14F8                                   l11165 25AA  
                                 l10287 0926                                   l10199 032A  
                                 l10631 16F2                                   l11175 25FE  
                                 l11095 2004                                   l10465 52F8  
                                 l10705 1D00                                   l10387 0FD6  
                                 l10483 541A                                   l10475 53B2  
                                 l10651 18E8                                   l10643 1830  
                                 l10715 1D24                                   l10389 0FF0  
                                 l10469 5328                                   l10557 480C  
                                 l10709 1D04                                   l10581 1360  
                                 l10821 7938                                   l10399 1092  
                                 l10479 53DE                                   l10655 191C  
                                 l10583 1376                                   l10743 5006  
                                 l10497 44D0                                   l10737 4F48  
                                 l10675 1A7C                                   l10579 1326  
                                 l10771 77F8                                   l10685 1B2A  
                                 l10757 511E                                   l10749 5070  
                                 PRLOCK 0039EF                                   l10855 6ECE  
                                 l10769 77B6                                   l10699 1CA6  
                                 l10975 5C10                                   l10989 5D38  
                       __end_of___aodiv 56DA                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 35F6  
                                 _ADCLK 003EFF                         __end_of___aomod 5B8E  
                                 _ADPCH 003EF1                         __end_of___fldiv 3B70  
                                 _ADREF 003EFD                         __end_of___awdiv 68E4  
                       __end_of___flneg 8532                                   STR_11 FF81  
                                 STR_12 FEB8                                   STR_20 FE92  
                                 STR_21 FF92                                   STR_13 FEF1  
                                 STR_30 FE6C                                   STR_22 FF92  
                                 STR_14 FEDE                                   STR_23 FF81  
                                 STR_31 FFCC                                   STR_15 FF2A  
                                 STR_32 FFCC                                   STR_24 FFFB  
                                 STR_16 FF04                                   STR_25 FFF8  
                                 STR_33 FFA2                                   STR_17 FF17  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA2  
                                 STR_50 FFE9                                   STR_18 FECB  
                                 STR_35 FFA2                                   STR_51 FFF1  
                                 STR_27 FFC0                                   STR_19 FEA5  
                                 STR_28 FFD6                                   STR_36 FE41  
                       __end_of___awmod 6D96                                   STR_45 FE6B  
                                 STR_29 FE6C                                   STR_54 FFF5  
                                 STR_46 FFE5                                   STR_38 FE7F  
                                 STR_47 FFED                                   STR_39 FE59  
                                 STR_56 FFF5                                   _ADRPT 003EEC  
                       __end_of___flmul 2E3A                         __end_of___flsub 85BE  
                       __end_of___fltol 6634                                   u10110 44B6  
                                 u10050 531E                                   u10210 471E  
                                 u10060 5364                                   u10220 473E  
                                 u10140 459E                                   u10150 45F2  
                                 u10310 13BE                                   u10231 476E  
                                 u10215 4700                                   u10240 4784  
                                 u10160 45F4                                   u10320 13C0  
                                 u10241 4782                                   u10090 5440  
                                 u10250 4798                                   u10330 13E6  
                                 u10067 5356                                   u10260 479C  
                                 u10180 4652                                   u10190 4654  
                                 u10510 1B7E                                   u10430 1746  
                                 u10360 1540                                   u10600 7918  
                                 u10370 1542                                   u10460 19D6  
                                 u10380 1568                                   u10700 5D8A  
                                 u10470 19D8                                   u10570 5192  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10690 5D88  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00B2  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 004A                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 91A4  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8D68  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 7542  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 83AE                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 903E                            _DMA1CON1bits 003BFD  
                                 _flags 000E                __size_of_calc_model_data 02EE  
                                 _fputc 6B5A              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 868E                                   _fputs 7A28  
                       __end_of_isdigit 89E0                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0045                                   _srand 88E8  
                                 _width 000A                                   _putch 8FEE  
                       __end_of_islower 8980                         __end_of_isspace 8452  
              _INT1_SetInterruptHandler 8C9E                         __end_of_isupper 89B0  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0025                                   ltemp1 0029  
                                 ltemp2 002D                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0025                                   ttemp1 0028  
                                 ttemp2 002B                                   ttemp3 002E  
                                 ttemp5 0026                                   ttemp6 0029  
                                 ttemp7 002D                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 8C26             _UART1_SetRxInterruptHandler 8BFE  
                                 wtemp0 0025                                   wtemp1 0027  
                                 wtemp2 0029                                   wtemp3 002B  
                                 wtemp4 002D                                   wtemp5 002F  
                                 wtemp8 0026                         __end_of_sprintf 70C4  
                       __end_of_tolower 7E92                         __end_of_strncmp 616C  
                       __end_of_toupper 7E0E                     ??_UART1_tx_vect_isr 004A  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 8DB8  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 85BE  
                 __end_of_ringBufS_init 8B36                         __initialization 71C6  
                     _UART2_rx_vect_isr 8DE0                            __end_of_atoi 594E  
                          __end_of_ctoa 7D8A                            __end_of_main 2610  
                          __end_of_dtoa 449C                            __end_of_nanf 81E0  
                          __end_of_stoa 545A                            __end_of_xtoa 4856  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0045  
               __end_of_TMR2_Initialize 906E                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button 8750                _TMR5_SetInterruptHandler 8C4E  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A9    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 004A               __end_of_UART1_tx_vect_isr 8D90  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 8A94  
                       _PWM8_Initialize 9084                        _UART1_Initialize 811A  
                     _UART2_tx_vect_isr 8DB8                      _UART2_Transmit_ISR 8A68  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 80B6  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 868E  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0045                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1047 83A0  
                  _start_switch_handler 8EFE                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                                  i1l1902 74F2  
               __end_of_TMR3_Initialize 864A                          __CFG_WDTCCS$SC 000000  
                                u401_48 8EEA                                  _FVRCON 003EC1  
                      _mode_lamp_bright 9106                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u824_20 8D46  
                                u824_26 8D48                                  u850_24 69EA  
                                u850_25 69E6                                  u852_20 6A10  
                                u843_28 68FE                                  u852_26 6A12  
                                u846_20 691E                                  u861_28 8EC8  
                                u846_21 6918                                  u872_28 8E5E  
                  __size_of_hid_display 0102                                  u892_28 8E82  
                                u869_48 8EA6                                  u889_44 7EF6  
                                u889_45 7EF0                        __end_of___xxtofl 5FA4  
 __end_of_ADCC_DischargeSampleCapacitor 9166  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 915E                __end_of_send_lcd_cmd_dma 8400  
                       _TMR3_WriteTimer 8790                     ??_UART2_tx_vect_isr 004A  
             __end_of_UART2_rx_vect_isr 8E06              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 9132                        _UART2_Initialize 8242  
                                _WaitMs 887C                         _conv_raw_result 3B70  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 6634                                  ___fleq 760E  
                     _ADCC_ThresholdISR 7FE4                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 7AC0                                  _efgtoa 0000  
                                _floorf 4856                      ?_ADCC_ThresholdISR 0045  
                                _memset 4EB0                    __size_of_help_button 0038  
                                clear_0 7234                                  clear_1 7248  
                                clear_2 725C                                  clear_3 726E  
                                clear_4 727A                                  clear_5 7286  
                                clear_6 7292                                  clear_7 729E  
                                _printf 81E0                      _eaDogM_WriteString 78E0  
                                _strcpy 73A0                               ?_ADCC_ISR 0045  
                                _strlen 7986                      __size_of_TimerDone 0028  
                       _ADCC_Initialize 7F7A                          _PMD_Initialize 90B0  
             __end_of_UART2_tx_vect_isr 8DE0                                  lltemp0 0025  
                                lltemp1 002D                                  lltemp2 0035  
                                lltemp3 003D                     ??_ADCC_ThresholdISR 0045  
                __end_of_start_adc_scan 811A                            __mediumconst FDB0  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 82FA                        __end_of_vfprintf 7836  
                            _StartTimer 86D0           __size_of_INTERRUPT_Initialize 0068  
               __end_of_TMR5_Initialize 8604                       _SYSTEM_Initialize 84A0  
                            __accesstop 0060                 __end_of__initialization 72B0  
                             ?_INT0_ISR 0045                               ?_INT1_ISR 0045  
                  __end_of_display_help 9176                    __end_of_display_info 916E  
             __end_of_CLKREF_Initialize 913C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 8750  
                 _set_temp_display_help 90E8                        _clear_hid_pflags 8E2A  
                 __end_of_TMR3_CallBack 8E96               __end_of_ADCC_ThresholdISR 804E  
                    __size_of_calc_bsoc 001A                  __end_of_ringBufS_flush 7B52  
                        __pcstackCOMRAM 0045                              ___inthi_sp 1016  
                            ___intlo_sp 180B                            __pidataBANK0 8846  
                          __pidataBANK1 7C74                            __pidataBANK2 7542  
                             ?_TMR3_ISR 0045                               ?_TMR5_ISR 0045  
                             ?_TMR6_ISR 0045                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6C7E                           __end_of_fputs 7AC0  
                         __end_of_srand 891C                   __end_of_TMR5_CallBack 8E72  
                         __end_of_putch 9008                 __end_of_PWM8_Initialize 909A  
               __end_of_TMR6_Initialize 8ABE                       _adc_int_t_handler 7E92  
                __end_of_PMD_Initialize 90C4                              ??_ADCC_ISR 0045  
                 __end_of_TMR6_CallBack 8EBA             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0028                           _DMA1_DMAA_ISR 9148  
                 TMR3_ISR@CountCallBack 0010                          _clear_adc_scan 9186  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0001               __end_of_SYSTEM_Initialize 84EA  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer 87D0                              __pbssBANK0 0060  
                            __pbssBANK1 018D                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 5B8E  
               __end_of_conv_raw_result 401C                   _INT0_InterruptHandler 0007  
                            ??_INT0_ISR 0045                              ??_INT1_ISR 004B  
                     __end_of_TimerDone 8B86                        _DMA1_DMADCNT_ISR 913C  
                    __size_of_init_bsoc 0012              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 8FEE        __end_of_TMR3_SetInterruptHandler 8C9E  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8C4E  
                            ??_TMR3_ISR 02CC                 __end_of_ADCC_Initialize 7FE4  
                            ??_TMR5_ISR 004F               __end_of_adc_int_t_handler 7F10  
                            ??_TMR6_ISR 004A                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8D16  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 8CEE  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 8F96                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 918C  
                        ?_DMA1_DMAA_ISR 0045                        _DMA1_DMASCNT_ISR 9124  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0045              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 9022                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 8B36                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 8790                 __size_of_switch_handler 0148  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim 903E                                 __Lparam 0000  
              __end_of_UART1_Initialize 817E                       __end_of_hid_input 7C74  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 545A  
                               ___fladd 2E3A                                 ___aomod 594E  
                               ___fldiv 35F6                                 ___awdiv 6796  
                               ___flneg 84EA                                 ___awmod 6C7E  
                               ___flmul 2610                                 ___flsub 8578  
                               ___fltol 64C2               __end_of_UART1_Receive_ISR 8FB4  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 73A0                                 __pcinit 71C6  
              __end_of_mode_lamp_bright 9114                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 90F8  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 8E06  
                               __ptext2 8EFE                                 __ptext3 80B6  
                               __ptext4 90C4                                 __ptext5 915E  
                               __ptext6 88E8                                 __ptext7 72B6  
                               __ptext8 8ABE                                 __ptext9 8AE6  
                     _UART2_Receive_ISR 8FB4                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 909A  
                               us518999 56C4                            __size_of_abs 0046  
                               us529999 5B7C                            __size_of_pad 0114  
                     __end_of_init_bsoc 90E8                                 _isalpha 864A  
                               _isdigit 89B0                                 us931999 4036  
                             _T3CONbits 003FA6                                 _mode_sw 0018  
                     __end_of_lp_filter 632C                                 _islower 8950  
                               _isspace 8400                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 82A0  
                               _isupper 8980              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 6FBA                                 _tolower 7E0E  
                 __size_of_display_help 0008                                 _utctime 009D  
                 __size_of_display_info 0008                                 _strncmp 5FA4  
                               _toupper 7D8A                    end_of_initialization 72B0  
             __size_of_convert_adc_data 00B8                      _check_enter_button 8710  
                             i1u1082_20 74EA     __end_of_UART1_SetTxInterruptHandler 8BFE  
           _UART1_SetTxInterruptHandler 8BD6     __end_of_UART2_SetRxInterruptHandler 8BD6  
           _UART2_SetRxInterruptHandler 8BAE                       __end_of_set_vterm 8F78  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd 9198               __end_of_UART2_Receive_ISR 8FD2  
                        wdtdelay@dcount 00A1                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 004B                   _INT1_InterruptHandler 0004  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc 919E  
              _TMR3_SetInterruptHandler 8C76                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 8C26                            _display_help 916E  
                 _TMR5_InterruptHandler 00AC                            _display_info 9166  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 8E4E  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler 8D3E  
           _ADCC_SetADIInterruptHandler 8D16                              _update_lcd 6EAA  
                       _calc_model_data 4BC2                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc 8E06  
                       _DMA1_Initialize 7F10                              _start_bsoc 919E  
                       _SPI1_Initialize 906E                   __end_of_get_vterm_ptr 8A0E  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 88B2            __end_of_INTERRUPT_Initialize 80B6  
                            _vterm_dump 6A2C                          __end_of___flge 6796  
                        __end_of___fleq 76D2    __end_of_INT0_DefaultInterruptHandler 91B0  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 91AE  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 82FA  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 00CE  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4BC2  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0095  
                        __end_of_memset 519C                          __end_of_printf 8242  
              __end_of_DMA1_DMADCNT_ISR 9146             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8EFE                          __end_of_strcpy 7474  
                        __end_of_strlen 7A28                     start_initialization 71C6  
  __end_of_TMR5_DefaultInterruptHandler 8D66   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 8D3E         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 8578                   __end_of_INT1_CallBack 8EDC  
             __size_of_set_display_info 001E                             __end_of_pad 6EAA  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 8B0E  
                        _switch_handler 68E4           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0500  
                 __end_of___fpclassifyf 64C2                           _uart2RxBuffer 0600  
                         _uart1TxBuffer 0394                __end_of_DMA1_DMASCNT_ISR 9132  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 9154  
                   __end_of_hid_display 71C6                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8B5E                           _ringBufS_init 8B0E  
                           __pdataBANK0 00C3                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 8950  
               __end_of_calc_model_data 4EB0                     __end_of_help_button 8846  
       __end_of_eaDogM_WriteStringAtPos 88E8                             __pbssBIGRAM 06FF  
               __end_of_DMA1_Initialize 7F7A                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 8CEE                           __pcstackBANK2 02CC  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 6A2C                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 9084                _UART1_RxInterruptHandler 00BB  
              _UART2_TxInterruptHandler 00BE                               __end_of_T FE41  
                      _convert_adc_data 76D2                               _calc_bsoc 9008  
             __size_of_ringBufS_put_dma 00AA                            _init_display 72B6  
                __end_of_DMA1_DMAOR_ISR 915E                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 8354                  _PIN_MANAGER_Initialize 7B52  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 9192  
                         __pmediumconst FDB0                               __ptext100 8BD6  
                             __ptext101 8BFE                               __ptext110 9084  
                             __ptext102 8A94                               __ptext111 90B0  
                             __ptext103 8C26                               __ptext120 7F10  
                             __ptext112 7B52                               __ptext104 85BE  
                             __ptext121 9132                               __ptext113 909A  
                             __ptext105 8C4E                               __ptext130 8750  
                             __ptext122 7F7A                               __ptext114 804E  
                             __ptext106 8604                               __ptext131 8E4E  
                             __ptext123 8CEE                               __ptext115 917E  
                             __ptext107 8C76                               __ptext140 91AE  
                             __ptext132 8D3E                               __ptext124 8D16  
                             __ptext116 891C                               __ptext108 9056  
                             __ptext141 91A4                               __ptext133 7474  
                             __ptext125 87D0                               __ptext117 8C9E  
                             __ptext109 906E                               __ptext150 8F96  
                             __ptext142 8A10                               __ptext134 8790  
                             __ptext126 8EBA                               __ptext118 8CC6  
                             __ptext151 8DB8                               __ptext143 7E92  
                             __ptext135 8E72                               __ptext127 91AA  
                             __ptext119 82FA                               __ptext160 9148  
                             __ptext152 8A68                               __ptext144 91B0  
                             __ptext136 91AC                               __ptext128 68E4  
                             __ptext161 9154                               __ptext153 8DE0  
                             __ptext145 91B2                               __ptext137 9008  
                             __ptext129 8354                               __ptext162 0000  
                             __ptext154 8FB4                               __ptext146 7FE4  
                             __ptext138 9114                               __ptext155 9024  
                             __ptext147 8D68                               __ptext139 8EDC  
                             __ptext156 8E96                               __ptext148 8A3C  
                             __ptext157 8452                               __ptext149 8D90  
                             __ptext158 9124                               __ptext159 913C  
                             _hid_input 7BE4                      __end_of_StartTimer 8710  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00AC  
                              _ADCC_ISR 8A10                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                               _init_bsoc 90D6  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 616C                             _hid_display 70C4  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 804E                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0045  
                              _INT0_ISR 9114                                _INT1_ISR 87D0  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 018D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack 8E72  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              i2u900_48 8DA4                                i2u902_48 8DCC  
                              _PIR8bits 0039A8                                i2u904_48 8DF2  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0046  
                              i2u894_48 8A28                                i2u896_48 801A  
                              i2u896_49 802E                                i2u898_48 8D7C  
                             _set_vterm 8F5A                     __size_of_update_lcd 0110  
                           _help_button 880E                                _TMR3_ISR 7474  
            __end_of_UART1_Transmit_ISR 8A68                                _TMR5_ISR 8354  
                              _TMR6_ISR 9024                               _port_data 02BC  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0006  
                         _TMR5_CallBack 8E4E                              _ADCON0bits 003EF8  
                    __end_of_check_help 5DA0                               _start_lcd 9192  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 8E96                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 9198  
                      _set_display_info 8F78                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 71DA                               copy_data1 71FC  
                             copy_data2 721E                _INT0_SetInterruptHandler 8CC6  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 0022  
   __end_of_UART2_SetTxInterruptHandler 8BAE             _UART2_SetTxInterruptHandler 8B86  
                          _uart1RxCount 001F                            _uart2RxCount 0019  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 8FD2                            _send_lcd_cmd 8AE6  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 91B2  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 8B5E  
                 __end_of_DMA1_DMAA_ISR 9152                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 5DA0                       ?_DMA1_DMADCNT_ISR 0045  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 9106                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 004B                                __ptext10 8F1E  
                              __ptext11 8B0E                                __ptext20 8F3C  
                              __ptext12 90D6                                __ptext21 5DA0  
                              __ptext13 70C4                                __ptext30 88B2  
                              __ptext22 8E2A                                __ptext14 7BE4  
                              __ptext31 83AE                                __ptext23 9186  
                              __ptext15 8B36                                __ptext40 778A  
                              __ptext32 8FD2                                __ptext24 5B8E  
                              __ptext16 90F8                                __ptext41 1244  
                              __ptext33 82A0                                __ptext25 6A2C  
                              __ptext17 76D2                                __ptext50 8980  
                              __ptext42 449C                                __ptext34 78E0  
                              __ptext26 6FBA                                __ptext18 3B70  
                              __ptext51 73A0                                __ptext43 7D8A  
                              __ptext35 918C                                __ptext27 89E0  
                              __ptext19 817E                                __ptext60 6796  
                              __ptext52 4856                                __ptext44 8950  
                              __ptext36 9192                                __ptext28 887C  
                              __ptext61 401C                                __ptext53 632C  
                              __ptext45 864A                                __ptext37 7AC0  
                              __ptext29 6EAA                                __ptext70 8FEE  
                              __ptext62 8532                                __ptext54 64C2  
                              __ptext46 5FA4                                __ptext38 4EB0  
                              __ptext71 7836                                __ptext63 594E  
                              __ptext55 84EA                                __ptext47 519C  
                              __ptext39 81E0                                __ptext80 868E  
                              __ptext72 56DA                                __ptext64 545A  
                              __ptext56 6634                                __ptext48 0000  
                              __ptext81 880E                                __ptext73 8400  
                              __ptext65 7D02                                __ptext57 760E  
                              __ptext49 7E0E                                __ptext90 919E  
                              __ptext82 8B5E                                __ptext74 89B0  
                              __ptext66 6D96                                __ptext58 35F6  
                              __ptext91 616C                                __ptext83 86D0  
                              __ptext75 8F5A                                __ptext67 7986  
                              __ptext59 6C7E                                __ptext92 8578  
                              __ptext84 9166                                __ptext76 90E8  
                              __ptext68 7A28                                __ptext93 2E3A  
                              __ptext85 916E                                __ptext77 8F78  
                              __ptext69 6B5A                                __ptext94 2610  
                              __ptext86 8710                                __ptext78 903E  
                              __ptext95 84A0                                __ptext87 9176  
                              __ptext79 9106                                __ptext96 8242  
                              __ptext88 4BC2                                __ptext97 8B86  
                              __ptext89 9198                                __ptext98 8BAE  
                              __ptext99 811A                        __size_of_isupper 0030  
                              us1000999 51AE                                us1013999 451C  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7836                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 088E  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0045                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00B5  
                             stoa@F1166 00EB                      ??_DMA1_DMASCNT_ISR 004B  
          __end_of_ADCC_StartConversion 90D6                                _spi_link 0089  
                              _wdtdelay 82A0              __end_of_UART2_Transmit_ISR 8A94  
                              _vfprintf 778A                __end_of_convert_adc_data 778A  
            __end_of_PWM8_LoadDutyValue 86D0    __end_of_TMR3_DefaultInterruptHandler 91AE  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler 91AC  
  __end_of_INT1_DefaultInterruptHandler 91AC   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 91AA                           ??_Default_ISR 0045  
                           _uart1RxHead 0021                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0024                             _uart2RxHead 001B  
                           _uart1RxTail 0020                          _get_raw_result 8F3C  
                           _uart2TxHead 001E                             _uart1TxTail 0023  
                           _uart2RxTail 001A                             _uart2TxTail 001D  
                          _wait_lcd_set 918C                      _EXT_INT_Initialize 891C  
  __end_of_TMR6_DefaultInterruptHandler 84A0   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 8452    __end_of_ADCC_DefaultInterruptHandler 91B2  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 91B0  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 8ABE          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 90F8                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7986                   __end_of_mode_lamp_dim 9056  
               __end_of_adc_int_handler 91B4                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 6FBA  
                _uart2TxBufferRemaining 001C                      __end_of_static_soc 8E2A  
                    __end_of_start_bsoc 91A4                          _FVR_Initialize 917E  
                __end_of_get_raw_result 8F5A                        _send_lcd_cmd_dma 83AE  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0014  
      __end_of_INT1_SetInterruptHandler 8CC6               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 004B                _UART1_TxInterruptHandler 00B8  
             __end_of_send_lcd_cmd_long 8AE6                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 91AA          __end_of_PIN_MANAGER_Initialize 7BE4  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6B5A  
               _eaDogM_WriteStringAtPos 88B2                           _get_vterm_ptr 89E0  
                        _check_adc_scan 9176               __size_of_UART2_Initialize 005E  
